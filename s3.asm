;
; +-------------------------------------------------------------------------+
; |     This file is generated by The Interactive Disassembler (IDA)        |
; |     Copyright (c) 2003 by DataRescue sa/nv, <ida@datarescue.com>        |
; |  Licensed to: Michael Wolski - Personal Use (1-user Standard 07/2003)   |
; +-------------------------------------------------------------------------+
;

; Processor:        68000
; Target Assembler: 680x0 Assembler in MRI compatible mode
; This file should be compiled with "as -M"

; ---------------------------------------------------------------------------
		cpu 68000
		include "sonic3k.macrosetup.asm"	; include a few basic macros
		include "sonic3k.macros.asm"		; include some simplifying macros and functions
		include "sonic3k.constants.asm"		; include some constants
		include "s3.constants.asm"		; RAM addresses moved around between S3 and S&K
; ---------------------------------------------------------------------------

Vectors:	dc.l	Vectors,	EntryPoint,	ErrorTrap,	ErrorTrap	; 0
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 4
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 8
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 12
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 16
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 20
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 24
		dc.l	JmpTo_HInt,	ErrorTrap,	VInt,		ErrorTrap	; 28
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 32
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 36
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 40
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 44
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 48
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 52
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 56
		dc.l	ErrorTrap,	ErrorTrap,	ErrorTrap,	ErrorTrap	; 60
Header:		dc.b "SEGA GENESIS    "
Copyright:	dc.b "(C)SEGA 1993.NOV"
Domestic_Name:	dc.b "SONIC THE             HEDGEHOG 3                "
Overseas_Name:	dc.b "SONIC THE             HEDGEHOG 3                "
Serial_Number:	dc.b "GM MK-1079 -00"
Checksum:	dc.w $A8F2
Input:		dc.b "J               "
ROMStartLoc:	dc.l Vectors
ROMEndLoc:	dc.l EndOfROM-1
RAMStartLoc:	dc.l (RAM_start&$FFFFFF)
RAMEndLoc:	dc.l (RAM_start&$FFFFFF)+$FFFF
CartRAM_Info:	dc.b "RA"
CartRAM_Type:	dc.w %1111100000100000
CartRAMStartLoc:dc.l $00200001
CartRAMEndLoc:	dc.l $002003FF
Modem_Info:	dc.b "  "
		dc.b "          "
Unknown_Header:	dc.w 1
		dc.b "      "
		dc.w $20, 0
		dc.l $3FFFFF
		dc.l $200001
		dc.l $2003FF
		dc.b "                "
Country_Code:	dc.b "U               "
; ---------------------------------------------------------------------------

ErrorTrap:
		nop
		nop
		bra.s	ErrorTrap
; ---------------------------------------------------------------------------

EntryPoint:
		lea	(System_stack).w,sp
		tst.l	(HW_Port_1_Control-1).l
		bne.s	loc_218
		tst.w	(HW_Expansion_Control-1).l

loc_218:
		bne.s	Init_SkipPowerOn
		lea	SetupValues(pc),a5
		movem.w	(a5)+,d5-d7
		movem.l	(a5)+,a0-a4
		move.b	HW_Version-Z80_bus_request(a1),d0
		andi.b	#$F,d0
		beq.s	SkipSecurity
		move.l	#'SEGA',Security_addr-Z80_bus_request(a1)

SkipSecurity:
		move.w	(a4),d0
		moveq	#0,d0
		movea.l	d0,a6
		move	a6,usp
		moveq	#$17,d1

Init_VDPRegs:
		move.b	(a5)+,d5
		move.w	d5,(a4)
		add.w	d7,d5
		dbf	d1,Init_VDPRegs
		move.l	(a5)+,(a4)
		move.w	d0,(a3)
		move.w	d7,(a1)
		move.w	d7,(a2)

WaitForZ80:
		btst	d0,(a1)
		bne.s	WaitForZ80
		moveq	#$25,d2

Init_SoundRAM:
		move.b	(a5)+,(a0)+
		dbf	d2,Init_SoundRAM
		move.w	d0,(a2)
		move.w	d0,(a1)
		move.w	d7,(a2)

Init_ClearRAM:
		move.l	d0,-(a6)
		dbf	d6,Init_ClearRAM
		move.l	(a5)+,(a4)
		move.l	(a5)+,(a4)
		moveq	#$1F,d3

Init_ClearCRAM:
		move.l	d0,(a3)
		dbf	d3,Init_ClearCRAM
		move.l	(a5)+,(a4)
		moveq	#$13,d4

Init_ClearVSRAM:
		move.l	d0,(a3)
		dbf	d4,Init_ClearVSRAM
		moveq	#3,d5

Init_InputPSG:
		move.b	(a5)+,PSG_input-VDP_data_port(a3)
		dbf	d5,Init_InputPSG
		move.w	d0,(a2)
		movem.l	(a6),d0-a6
		move	#$2700,sr

Init_SkipPowerOn:
		bra.s	Test_CountryCode
; ---------------------------------------------------------------------------
SetupValues:	dc.w $8000, $3FFF, $100
		dc.l Z80_RAM
		dc.l Z80_bus_request
		dc.l Z80_reset
		dc.l VDP_data_port, VDP_control_port
VDPInitValues:	dc.b 4			; Command $8004 - HInt off, Enable HV counter read
		dc.b $14		; Command $8114 - Display off, VInt off, DMA on, PAL off
		dc.b $30		; Command $8230 - Scroll A Address $C000
		dc.b $3C		; Command $833C - Window Address $F000
		dc.b 7			; Command $8407 - Scroll B Address $E000
		dc.b $6C		; Command $856C - Sprite Table Addres $D800
		dc.b 0			; Command $8600 - Null
		dc.b 0			; Command $8700 - Background color Pal 0 Color 0
		dc.b 0			; Command $8800 - Null
		dc.b 0			; Command $8900 - Null
		dc.b $FF		; Command $8AFF - Hint timing $FF scanlines
		dc.b 0			; Command $8B00 - Ext Int off, VScroll full, HScroll full
		dc.b $81		; Command $8C81 - 40 cell mode, shadow/highlight off, no interlace
		dc.b $37		; Command $8D37 - HScroll Table Address $DC00
		dc.b 0			; Command $8E00 - Null
		dc.b 1			; Command $8F01 - VDP auto increment 1 byte
		dc.b 1			; Command $9001 - 64x32 cell scroll size
		dc.b 0			; Command $9100 - Window H left side, Base Point 0
		dc.b 0			; Command $9200 - Window V upside, Base Point 0
		dc.b $FF		; Command $93FF - DMA Length Counter $FFFF
		dc.b $FF		; Command $94FF - See above
		dc.b 0			; Command $9500 - DMA Source Address $0
		dc.b 0			; Command $9600 - See above
		dc.b $80		; Command $9700	- See above + VRAM fill mode
VDPInitValues_End:
		dc.l $40000080		; value for VRAM write mode

Z80StartupCodeBegin:
		cpu Z80			; start assembling Z80 code
		phase 0			; pretend we're at address 0

		xor	a		; clear a to 0
		ld	bc,((Z80_RAM_end-Z80_RAM)-Z80StartupCodeEnd)-1	; prepare to loop this many times
		ld	de,Z80StartupCodeEnd+1	; initial destination address
		ld	hl,Z80StartupCodeEnd	; initial source address
		ld	sp,hl		; set the address the stack starts at
		ld	(hl),a		; set first byte of the stack to 0
		ldir			; loop to fill the stack (entire remaining available Z80 RAM) with 0
		pop	ix		; clear ix
		pop	iy		; clear iy
		ld	i,a		; clear i
		ld	r,a		; clear r
		pop	de		; clear de
		pop	hl		; clear hl
		pop	af		; clear af
		ex	af,af'		; swap af with af'
		exx			; swap bc/de/hl with their shadow registers too
		pop	bc		; clear bc
		pop	de		; clear de
		pop	hl		; clear hl
		pop	af		; clear af
		ld	sp,hl		; clear sp
		di			; clear iff1 (for interrupt handler)
		im	1		; interrupt handling mode = 1
		ld	(hl),0E9h	; replace the first instruction with a jump to itself
		jp	(hl)		; jump to the first instruction (to stay there forever)

Z80StartupCodeEnd:
		dephase			; stop pretending
		cpu 68000
		padding off

		dc.w $8104		; value for VDP display mode
		dc.w $8F02		; value for VDP increment
		dc.l $C0000000		; value for CRAM write mode
		dc.l $40000010		; value for VSRAM write mode
PSGInitValues:	dc.b $9F, $BF, $DF, $FF	; values for PSG channel volumes
; ---------------------------------------------------------------------------

Test_CountryCode:
		tst.w	(VDP_control_port).l
		clr.l	d0
		move.b	(HW_Version).l,d0
		lsr.b	#6,d0
		andi.b	#3,d0
		lea	asc_440(pc),a0
		move.b	(a0,d0.w),d0
		tst.b	d0
		beq.w	loc_408
		lea	(Country_Code).l,a0
		move.w	#$F,d1

loc_330:
		cmp.b	(a0),d0
		beq.w	Test_Checksum
		addq.l	#1,a0
		dbf	d1,loc_330
		lea	(VDP_data_port).l,a4
		lea	(VDP_control_port).l,a5
		move.w	#-$7E9C,(a5)
		move.w	#-$7DD0,(a5)
		move.w	#-$737F,(a5)
		move.w	#-$70FE,(a5)
		move.w	#-$6FFF,(a5)
		move.l	#-$3FFE0000,(a5)
		move.w	#$EEE,(a4)
		move.l	#$40000000,(a5)
		lea	byte_4C2(pc),a0
		move.w	#$3A,d0
		move.l	#$10000000,d2

loc_37A:
		move.w	#7,d6

loc_37E:
		move.b	(a0)+,d1
		move.l	#0,d4
		move.w	#7,d5

loc_38A:
		rol.l	#4,d2
		ror.b	#1,d1
		bcc.s	loc_392
		or.l	d2,d4

loc_392:
		dbf	d5,loc_38A
		move.l	d4,(a4)
		dbf	d6,loc_37E
		dbf	d0,loc_37A
		move.b	#8,d1
		lea	byte_458(pc),a0
		move.b	(a0)+,d0
		bsr.w	sub_40A
		lea	(Country_Code).l,a1

loc_3B4:
		cmpi.b	#$20,(a1)
		beq.s	loc_3FC
		lea	word_444(pc),a2

loc_3BE:
		move.w	(a2)+,d4
		tst.b	d4
		beq.s	loc_3F8
		cmp.b	(a1),d4
		bne.s	loc_3F4
		cmpi.b	#$20,1(a1)
		bne.s	loc_3E4
		cmpa.l	#$1F0,a1
		beq.s	loc_3E4
		lea	byte_475(pc),a0
		move.b	(a0)+,d0
		addq.w	#1,d1
		bsr.w	sub_40A

loc_3E4:
		lea	asc_440(pc),a0
		adda.l	(a2)+,a0
		move.b	(a0)+,d0
		addq.w	#1,d1
		bsr.w	sub_40A
		bra.s	loc_3F8
; ---------------------------------------------------------------------------

loc_3F4:
		addq.l	#4,a2
		bra.s	loc_3BE
; ---------------------------------------------------------------------------

loc_3F8:
		addq.l	#1,a1
		bra.s	loc_3B4
; ---------------------------------------------------------------------------

loc_3FC:
		lea	byte_478(pc),a0
		move.b	(a0)+,d0
		addq.w	#1,d1
		bsr.w	sub_40A

loc_408:
		bra.s	loc_408

; =============== S U B R O U T I N E =======================================


sub_40A:
		move.b	d1,d2
		andi.l	#$FF,d2
		swap	d2
		lsl.l	#7,d2
		move.b	d0,d3
		andi.l	#$FF,d3
		swap	d3
		asl.l	#1,d3
		add.l	d3,d2
		addi.l	#$40000003,d2
		move.l	d2,(a5)

loc_42C:
		tst.b	(a0)
		beq.s	locret_43E
		move.b	(a0)+,d2
		subi.b	#$20,d2
		andi.w	#$FF,d2
		move.w	d2,(a4)
		bra.s	loc_42C
; ---------------------------------------------------------------------------

locret_43E:
		rts
; End of function sub_40A

; ---------------------------------------------------------------------------
asc_440:	dc.b "J",0
		dc.b "UE"
word_444:	dc.w $4A, 0
		dc.w $42, $55, 0
		dc.w $53, $45, 0
		dc.w $61, 0
byte_458:	dc.b 6
		dc.b "DEVELOPED FOR USE ONLY WITH",0
byte_475:	dc.b $12
		dc.b "&",0
byte_478:	dc.b $F
		dc.b "SYSTEMS.",0
		dc.b $C
		dc.b "NTSC MEGA DRIVE",0
		dc.b $D
		dc.b "NTSC GENESIS",0
		dc.b 4
		dc.b "PAL AND FRENCH SECAM MEGA DRIVE",0
byte_4C2:	dc.b    0,   0,   0,   0,   0,   0,   0,   0, $18, $18, $18, $18,   0, $18, $18,   0
		dc.b  $36, $36, $48,   0,   0,   0,   0,   0, $12, $12, $7F, $12, $7F, $24, $24,   0
		dc.b    8, $3F, $48, $3E,   9, $7E,   8,   0, $71, $52, $74,   8, $17, $25, $47,   0
		dc.b  $18, $24, $18, $29, $45, $46, $39,   0, $30, $30, $40,   0,   0,   0,   0,   0
		dc.b   $C, $10, $20, $20, $20, $10,  $C,   0, $30,   8,   4,   4,   4,   8, $30,   0
		dc.b    0,   8, $2A, $1C, $2A,   8,   0,   0,   8,   8,   8, $7F,   8,   8,   8,   0
		dc.b    0,   0,   0,   0,   0, $30, $30, $40,   0,   0,   0, $7F,   0,   0,   0,   0
		dc.b    0,   0,   0,   0,   0, $30, $30,   0,   1,   2,   4,   8, $10, $20, $40,   0
		dc.b  $1E, $33, $33, $33, $33, $33, $1E,   0, $18, $38, $18, $18, $18, $18, $3C,   0
		dc.b  $3E, $63, $63,  $E, $38, $60, $7F,   0, $3E, $63,   3, $1E,   3, $63, $3E,   0
		dc.b    6,  $E, $1E, $36, $66, $7F,   6,   0, $7E, $60, $7E, $63,   3, $63, $3E,   0
		dc.b  $3E, $63, $60, $7E, $63, $63, $3E,   0, $3F, $63,   6,   6,  $C,  $C, $18,   0
		dc.b  $3E, $63, $63, $3E, $63, $63, $3E,   0, $3E, $63, $63, $3F,   3, $63, $3E,   0
		dc.b    0, $18, $18,   0,   0, $18, $18,   0,   0, $18, $18,   0,   0, $18, $18, $20
		dc.b    3,  $C, $30, $40, $30,  $C,   3,   0,   0,   0, $7F,   0, $7F,   0,   0,   0
		dc.b  $60, $18,   6,   1,   6, $18, $60,   0, $3E, $63,   3, $1E, $18,   0, $18,   0
		dc.b  $3C, $42, $39, $49, $49, $49, $36,   0, $1C, $1C, $36, $36, $7F, $63, $63,   0
		dc.b  $7E, $63, $63, $7E, $63, $63, $7E,   0, $3E, $73, $60, $60, $60, $73, $3E,   0
		dc.b  $7E, $63, $63, $63, $63, $63, $7E,   0, $3F, $30, $30, $3E, $30, $30, $3F,   0
		dc.b  $3F, $30, $30, $3E, $30, $30, $30,   0, $3E, $73, $60, $67, $63, $73, $3E,   0
		dc.b  $66, $66, $66, $7E, $66, $66, $66,   0, $18, $18, $18, $18, $18, $18, $18,   0
		dc.b   $C,  $C,  $C,  $C, $CC, $CC, $78,   0, $63, $66, $6C, $78, $6C, $66, $63,   0
		dc.b  $60, $60, $60, $60, $60, $60, $7F,   0, $63, $77, $7F, $6B, $6B, $63, $63,   0
		dc.b  $63, $73, $7B, $7F, $6F, $67, $63,   0, $3E, $63, $63, $63, $63, $63, $3E,   0
		dc.b  $7E, $63, $63, $7E, $60, $60, $60,   0, $3E, $63, $63, $63, $6F, $63, $3F,   0
		dc.b  $7E, $63, $63, $7E, $68, $66, $67,   0, $3E, $63, $70, $3E,   7, $63, $3E,   0
		dc.b  $7E, $18, $18, $18, $18, $18, $18,   0, $66, $66, $66, $66, $66, $66, $3C,   0
		dc.b  $63, $63, $63, $36, $36, $1C, $1C,   0, $6B, $6B, $6B, $6B, $6B, $7F, $36,   0
		dc.b  $63, $63, $36, $1C, $36, $63, $63,   0, $66, $66, $66, $3C, $18, $18, $18,   0
		dc.b  $7F,   7,  $E, $1C, $38, $70, $7F,   0
; ---------------------------------------------------------------------------

Test_Checksum:
		move.w	(VDP_control_port).l,d1
		btst	#1,d1
		bne.s	Test_Checksum
		btst	#6,(HW_Expansion_Control).l
		beq.s	loc_6BC
		cmpi.l	#"init",(Checksum_string).w
		beq.w	Test_Checksum_Done

loc_6BC:
		movea.l	#ErrorTrap,a0
		movea.l	#ROMEndLoc,a1
		move.l	(a1),d0
		moveq	#0,d1
		add.w	(a0)+,d1
		cmp.l	a0,d0
		nop
		nop
		movea.l	#$18E,a1
		cmp.w	(a1),d1
		nop
		nop
		lea	(System_stack).w,a6
		moveq	#0,d7
		move.w	#$7F,d6

loc_6EA:
		move.l	d7,(a6)+
		dbf	d6,loc_6EA
		move.b	(HW_Version).l,d0
		andi.b	#-$40,d0
		move.b	d0,(Graphics_flags).w
		move.l	#"init",(Checksum_string).w

Test_Checksum_Done:
		bsr.w	DetectPAL
		lea	($FF0000).l,a6
		moveq	#0,d7
		move.w	#$3F7F,d6

loc_716:
		move.l	d7,(a6)+
		dbf	d6,loc_716
		bsr.w	Init_VDP
		bsr.w	SndDrvInit
		bsr.w	Init_Controllers
		jsr	(SRAM_Load).l
		move.b	#0,(Game_mode).w

GameLoop:
		move.b	(Game_mode).w,d0
		andi.w	#$7C,d0
		movea.l	GameModes(pc,d0.w),a0
		jsr	(a0)
		bra.s	GameLoop
; ---------------------------------------------------------------------------
GameModes:	dc.l Sega_Screen		;   0
		dc.l Title_Screen		;   4
		dc.l Level			;   8
		dc.l Level			;  $C
		dc.l JumpToSegaScreen		; $10
		dc.l ContinueScreen		; $14
		dc.l JumpToSegaScreen		; $18
		dc.l LevelSelect_S2Options	; $1C
		dc.l S3Credits			; $20
		dc.l LevelSelect_S2Options	; $24
		dc.l LevelSelect_S2Options	; $28
		dc.l SpecialStage		; $2C
		dc.l SpecialStage		; $30
		dc.l SpecialStage		; $34
		dc.l Competition_Menu		; $38
		dc.l Competition_PlayerSelect	; $3C
		dc.l Competition_LevelSelect	; $40
		dc.l Competition_Results	; $44
		dc.l SpecialStage_Results	; $48
		dc.l SaveScreen			; $4C
		dc.l TimeAttack_Records		; $50
; ---------------------------------------------------------------------------

JumpToSegaScreen:
		move.b	#0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

ChecksumError2:
		move.l	d1,-(sp)
		bsr.w	Init_VDP
		move.l	(sp)+,d1

ChecksumError2_Loop:
		move.l	#$C0000000,(VDP_control_port).l
		move.w	d7,(VDP_data_port).l
		addq.w	#1,d7
		bra.s	ChecksumError2_Loop
; ---------------------------------------------------------------------------

ChecksumError:
		move.l	#$C0000000,(VDP_control_port).l
		moveq	#$3F,d7

loc_7C8:
		move.w	#$E,(VDP_data_port).l
		dbf	d7,loc_7C8

ChecksumError_Loop:
		bra.s	ChecksumError_Loop

; =============== S U B R O U T I N E =======================================


DetectPAL:
		lea	(VDP_control_port).l,a5
		move.w	#$8174,(a5)
		moveq	#0,d0

loc_7E2:
		move.w	(a5),d1
		andi.w	#8,d1
		beq.s	loc_7E2

loc_7EA:
		move.w	(a5),d1
		andi.w	#8,d1
		bne.s	loc_7EA

loc_7F2:
		addq.w	#1,d0
		move.w	(a5),d1
		andi.w	#8,d1
		beq.s	loc_7F2
		move.w	d0,(V_blank_cycles).w
		rts
; End of function DetectPAL

; ---------------------------------------------------------------------------

VInt:
		nop
		movem.l	d0-a6,-(sp)
		tst.b	(V_int_routine).w
		beq.w	VInt_0_Main

loc_810:
		move.w	(VDP_control_port).l,d0
		andi.w	#8,d0
		beq.s	loc_810
		move.l	#$40000010,(VDP_control_port).l
		move.l	(V_scroll_value).w,(VDP_data_port).l
		btst	#6,(Graphics_flags).w
		beq.s	loc_83E
		move.w	#$700,d0

loc_83A:
		dbf	d0,loc_83A

loc_83E:
		move.b	(V_int_routine).w,d0
		move.b	#0,(V_int_routine).w
		move.w	#1,(H_int_flag).w
		andi.w	#$3E,d0
		move.w	VInt_Table(pc,d0.w),d0
		jsr	VInt_Table(pc,d0.w)

VInt_Done:
		addq.l	#1,(V_int_run_count).w
		movem.l	(sp)+,d0-a6
		rte
; ---------------------------------------------------------------------------
VInt_Table:	dc.w VInt_0-VInt_Table
		dc.w VInt_2-VInt_Table
		dc.w VInt_4-VInt_Table
		dc.w VInt_6-VInt_Table
		dc.w VInt_8-VInt_Table
		dc.w VInt_A_C-VInt_Table
		dc.w VInt_A_C-VInt_Table
		dc.w VInt_E-VInt_Table
		dc.w VInt_10-VInt_Table
		dc.w VInt_12-VInt_Table
		dc.w VInt_14-VInt_Table
		dc.w VInt_16-VInt_Table
		dc.w VInt_18-VInt_Table
		dc.w VInt_1A-VInt_Table
		dc.w VInt_1C-VInt_Table
		dc.w VInt_1E-VInt_Table
; ---------------------------------------------------------------------------

VInt_0:
		addq.w	#4,sp

VInt_0_Main:
		addq.w	#1,(Lag_frame_count).w
		cmpi.b	#$88,(Game_mode).w
		beq.s	VInt_0_Level
		cmpi.b	#$8C,(Game_mode).w
		beq.s	VInt_0_Level
		cmpi.b	#8,(Game_mode).w
		beq.s	VInt_0_Level
		cmpi.b	#$C,(Game_mode).w
		beq.s	VInt_0_Level
		move.w	#$100,(Z80_bus_request).l

loc_8B2:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_8B2
		bsr.w	nullsub_1
		move.w	#0,(Z80_bus_request).l
		bra.s	VInt_Done
; ---------------------------------------------------------------------------

VInt_0_Level:
		tst.b	(Water_flag).w
		beq.w	VInt_0_NoWater
		move.w	(VDP_control_port).l,d0
		btst	#6,(Graphics_flags).w
		beq.s	loc_8E8
		move.w	#$700,d0

loc_8E4:
		dbf	d0,loc_8E4

loc_8E8:
		move.w	#1,(H_int_flag).w
		move.w	#$100,(Z80_bus_request).l

loc_8F6:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_8F6
		tst.b	(Water_full_screen_flag).w
		bne.s	VInt_0_FullyUnderwater
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69016B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bra.s	VInt_0_Water_Cont
; ---------------------------------------------------------------------------

VInt_0_FullyUnderwater:
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69076AC0,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)

VInt_0_Water_Cont:
		move.w	(H_int_counter_command).w,(a5)
		bsr.w	nullsub_1
		move.w	#0,(Z80_bus_request).l
		bra.w	VInt_Done
; ---------------------------------------------------------------------------

VInt_0_NoWater:
		move.w	(VDP_control_port).l,d0
		btst	#6,(Graphics_flags).w
		beq.s	loc_97A
		move.w	#$700,d0

loc_976:
		dbf	d0,loc_976

loc_97A:
		move.w	#1,(H_int_flag).w
		move.w	(H_int_counter_command).w,(VDP_control_port).l
		move.w	#$100,(Z80_bus_request).l

loc_990:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_990
		tst.w	(Competition_mode).w
		beq.s	VInt_0_Done
		move.l	#$40000010,(VDP_control_port).l
		move.l	(V_scroll_value).w,(VDP_data_port).l
		tst.w	(Use_normal_sprite_table).w
		beq.s	loc_9DE
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69036B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bra.s	VInt_0_Done
; ---------------------------------------------------------------------------

loc_9DE:
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69436AC0,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)

VInt_0_Done:
		bsr.w	nullsub_1
		move.w	#0,(Z80_bus_request).l
		bra.w	VInt_Done
; ---------------------------------------------------------------------------

VInt_2:
		bsr.w	Do_ControllerPal
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6C40,(a5)
		move.l	#-$690F6B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7000,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		jsr	(SegaScr_VInt).l
		tst.w	(Demo_timer).w
		beq.w	locret_A4C
		subq.w	#1,(Demo_timer).w

locret_A4C:
		rts
; ---------------------------------------------------------------------------

VInt_14:
		move.b	(V_int_run_count+3).w,d0
		andi.w	#$F,d0
		bne.s	loc_A76
		move.w	#$100,(Z80_bus_request).l

loc_A60:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_A60
		bsr.w	Poll_Controllers
		move.w	#0,(Z80_bus_request).l

loc_A76:
		tst.w	(Demo_timer).w
		beq.w	locret_A82
		subq.w	#1,(Demo_timer).w

locret_A82:
		rts
; ---------------------------------------------------------------------------

VInt_4:
		bsr.w	TitleAnim_FlipBuffer
		bsr.w	Do_ControllerPal
		move.w	(Ctrl_1).w,(Ctrl_1_title).w
		bsr.w	Process_Nem_Queue
		tst.w	(Demo_timer).w
		beq.w	locret_AA2
		subq.w	#1,(Demo_timer).w

locret_AA2:
		rts
; ---------------------------------------------------------------------------

VInt_6:
		bsr.w	Do_ControllerPal
		rts
; ---------------------------------------------------------------------------

VInt_10:
		cmpi.b	#$34,(Game_mode).w
		beq.w	VInt_1C

VInt_8:
		move.w	#$100,(Z80_bus_request).l

loc_ABC:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_ABC
		bsr.w	Poll_Controllers
		tst.b	(Water_full_screen_flag).w
		bne.s	loc_AF6
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69016B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bra.s	loc_B1A
; ---------------------------------------------------------------------------

loc_AF6:
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69076AC0,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)

loc_B1A:
		move.w	(H_int_counter_command).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6C40,(a5)
		move.l	#-$690F6B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7000,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		tst.w	(Competition_mode).w
		beq.s	loc_B84
		tst.w	(Switch_sprite_table).w
		beq.s	loc_B58
		clr.w	(Switch_sprite_table).w
		eori.w	#-1,(Use_normal_sprite_table).w

loc_B58:
		tst.w	(Use_normal_sprite_table).w
		bne.s	loc_B84
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69436AC0,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bra.s	loc_BA8
; ---------------------------------------------------------------------------

loc_B84:
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69036B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)

loc_BA8:
		bsr.w	Process_DMA_Queue
		move.l	(V_scroll_value_P2).w,(V_scroll_value_P2_copy).w
		jsr	(SpecialVInt_Function).l
		jsr	(VInt_DrawLevel).l
		bsr.w	nullsub_1
		move.w	#0,(Z80_bus_request).l
		move	#$2300,sr
		tst.b	(Water_flag).w
		beq.s	loc_BE8
		cmpi.b	#$5C,(H_int_counter).w
		bcc.s	loc_BE8
		move.b	#1,(Do_Updates_in_H_int).w
		jmp	(Set_Kos_Bookmark).l
; ---------------------------------------------------------------------------

loc_BE8:
		bsr.s	Do_Updates
		jmp	(Set_Kos_Bookmark).l

; =============== S U B R O U T I N E =======================================


Do_Updates:
		jsr	(UpdateHUD).l
		move.w	#0,(Lag_frame_count).w
		bsr.w	Process_Nem_Queue_2
		tst.w	(Demo_timer).w
		beq.w	locret_C0C
		subq.w	#1,(Demo_timer).w

locret_C0C:
		rts
; End of function Do_Updates

; ---------------------------------------------------------------------------

VInt_A_C:
		move.w	#$100,(Z80_bus_request).l

loc_C16:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_C16
		bsr.w	Poll_Controllers
		tst.b	(Water_full_screen_flag).w
		bne.s	loc_C50
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69016B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bra.s	loc_C74
; ---------------------------------------------------------------------------

loc_C50:
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69076AC0,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)

loc_C74:
		move.w	(H_int_counter_command).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6C40,(a5)
		move.l	#-$690F6B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7000,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		tst.w	(Competition_mode).w
		beq.s	loc_CDE
		tst.w	(Switch_sprite_table).w
		beq.s	loc_CB2
		clr.w	(Switch_sprite_table).w
		eori.w	#-1,(Use_normal_sprite_table).w

loc_CB2:
		tst.w	(Use_normal_sprite_table).w
		bne.s	loc_CDE
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69436AC0,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bra.s	loc_D02
; ---------------------------------------------------------------------------

loc_CDE:
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69036B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)

loc_D02:
		bsr.w	Process_DMA_Queue
		move.l	(V_scroll_value_P2).w,(V_scroll_value_P2_copy).w
		jsr	(nullsub_1).l
		move.w	#0,(Z80_bus_request).l
		bsr.w	Process_Nem_Queue
		jmp	(Set_Kos_Bookmark).l
; ---------------------------------------------------------------------------

VInt_E:
		bsr.w	Do_ControllerPal
		move.b	#$E,(V_int_routine).w
		rts
; ---------------------------------------------------------------------------

VInt_12:
		bsr.w	Do_ControllerPal
		move.w	(H_int_counter_command).w,(a5)
		bra.w	Process_Nem_Queue
; ---------------------------------------------------------------------------

VInt_18:
		move.w	#$100,(Z80_bus_request).l

loc_D44:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_D44
		bsr.w	Poll_Controllers
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69016B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69036B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6C40,(a5)
		move.l	#-$690F6B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7000,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bclr	#0,(_unkFA88).w
		beq.s	loc_DEA
		lea	(VDP_control_port).l,a5
		move.l	#-$6BEF6D00,(a5)
		move.l	#-$696F6B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$4000,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)

loc_DEA:
		bsr.w	Process_DMA_Queue
		bsr.w	nullsub_1
		move.w	#0,(Z80_bus_request).l
		rts
; ---------------------------------------------------------------------------

VInt_16:
		move.w	#$100,(Z80_bus_request).l

loc_E04:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_E04
		bsr.w	Poll_Controllers
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69016B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69036B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6C40,(a5)
		move.l	#-$690F6B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7000,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bsr.w	Process_DMA_Queue
		bsr.w	nullsub_1
		move.w	#0,(Z80_bus_request).l
		bsr.w	Process_Nem_Queue
		tst.w	(Demo_timer).w
		beq.w	locret_E9E
		subq.w	#1,(Demo_timer).w

locret_E9E:
		rts
; ---------------------------------------------------------------------------

VInt_1A:
		bsr.w	Do_ControllerPal
		bsr.w	Process_Nem_Queue
		jmp	(Set_Kos_Bookmark).l
; ---------------------------------------------------------------------------

VInt_1C:
		bsr.w	Rotate_SSPal
		bsr.w	Do_ControllerPal
		bsr.w	Update_SSMap
		tst.w	(Demo_timer).w
		beq.w	loc_EC6
		subq.w	#1,(Demo_timer).w

loc_EC6:
		jmp	(Set_Kos_Bookmark).l
; ---------------------------------------------------------------------------

VInt_1E:
		bsr.s	Do_ControllerPal
		movea.l	(_unkEF44_1).w,a0
		jsr	(a0)
		bsr.w	Process_Nem_Queue_2
		jmp	(Set_Kos_Bookmark).l

; =============== S U B R O U T I N E =======================================


Do_ControllerPal:
		move.w	#$100,(Z80_bus_request).l

loc_EE6:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_EE6
		bsr.w	Poll_Controllers
		tst.b	(Water_full_screen_flag).w
		bne.s	loc_F20
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69016B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bra.s	loc_F44
; ---------------------------------------------------------------------------

loc_F20:
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFF6CC0,(a5)
		move.l	#-$69076AC0,(a5)
		move.w	#-$6881,(a5)
		move.w	#-$4000,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)

loc_F44:
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69036B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6C40,(a5)
		move.l	#-$690F6B00,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7000,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bsr.w	Process_DMA_Queue
		bsr.w	nullsub_1
		move.w	#0,(Z80_bus_request).l
		rts
; End of function Do_ControllerPal

; ---------------------------------------------------------------------------

JmpTo_HInt:
		jmp	(H_int_jump).w
; ---------------------------------------------------------------------------

HInt:
		tst.w	(H_int_flag).w
		beq.w	HInt_Done
		move.w	#0,(H_int_flag).w
		move.l	a5,-(sp)
		move.l	d0,-(sp)

loc_FB4:
		move.w	(VDP_control_port).l,d0
		andi.w	#4,d0
		beq.s	loc_FB4
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#-$41,d0
		move.w	d0,(VDP_control_port).l
		move.l	#$40000010,(VDP_control_port).l
		move.l	(V_scroll_value_P2_copy).w,(VDP_data_port).l
		move.w	#$100,(Z80_bus_request).l

loc_FE8:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_FE8
		tst.w	(Use_normal_sprite_table).w
		beq.s	loc_101E
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69426A80,(a5)

loc_100A:
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		bra.s	loc_1042
; ---------------------------------------------------------------------------

loc_101E:
		lea	(VDP_control_port).l,a5
		move.l	#-$6BFE6CC0,(a5)
		move.l	#-$69416A40,(a5)
		move.w	#-$6881,(a5)
		move.w	#$7800,(a5)
		move.w	#$83,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)

loc_1042:
		move.w	#0,(Z80_bus_request).l

loc_104A:
		move.w	(VDP_control_port).l,d0
		andi.w	#4,d0
		beq.s	loc_104A
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		move.l	(sp)+,d0
		movea.l	(sp)+,a5

HInt_Done:
		rte
; ---------------------------------------------------------------------------

HInt3:
		tst.w	(H_int_flag).w
		beq.s	HInt3_Done
		move.w	#0,(H_int_flag).w
		movem.l	d0-d1/a0-a2,-(sp)
		lea	(VDP_data_port).l,a1
		move.w	#$8AFF,VDP_control_port-VDP_data_port(a1)
		move.w	#$100,(Z80_bus_request).l

loc_108E:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_108E
		movea.l	(Water_palette_data_addr).w,a2
		moveq	#$C,d0

loc_109E:
		dbf	d0,loc_109E
		move.w	(a2)+,d1
		move.b	(H_int_counter).w,d0
		subi.b	#-$38,d0
		bcs.s	loc_10B2
		sub.b	d0,d1
		bcs.s	loc_10D6

loc_10B2:
		move.w	(a2)+,d0
		lea	(Water_palette).w,a0
		adda.w	d0,a0
		addi.w	#-$4000,d0
		swap	d0
		move.l	d0,VDP_control_port-VDP_data_port(a1)
		move.l	(a0)+,(a1)
		move.w	(a0)+,(a1)
		nop
		nop
		moveq	#$24,d0

loc_10CE:
		dbf	d0,loc_10CE
		dbf	d1,loc_10B2

loc_10D6:
		move.w	#0,(Z80_bus_request).l
		movem.l	(sp)+,d0-d1/a0-a2
		tst.b	(Do_Updates_in_H_int).w
		bne.s	HInt3_Do_Updates

HInt3_Done:
		rte
; ---------------------------------------------------------------------------

HInt3_Do_Updates:
		clr.b	(Do_Updates_in_H_int).w
		movem.l	d0-a6,-(sp)
		jsr	(Do_Updates).l
		movem.l	(sp)+,d0-a6
		rte
; ---------------------------------------------------------------------------

HInt5:
		tst.w	(H_int_flag).w
		beq.s	HInt5_Done
		move.w	#0,(H_int_flag).w
		movem.l	d0-d1/a0-a2,-(sp)
		lea	(VDP_data_port).l,a1
		move.w	#$8AFF,VDP_control_port-VDP_data_port(a1)
		move.w	#$100,(Z80_bus_request).l

loc_1122:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_1122
		movea.l	(Water_palette_data_addr).w,a2
		moveq	#$C,d0

loc_1132:
		dbf	d0,loc_1132
		move.w	(a2)+,d1
		move.b	(H_int_counter).w,d0
		subi.b	#-$38,d0
		bcs.s	loc_1146
		sub.b	d0,d1
		bcs.s	loc_116A

loc_1146:
		move.w	(a2)+,d0
		lea	(Normal_palette).w,a0
		adda.w	d0,a0
		addi.w	#-$4000,d0
		swap	d0
		move.l	d0,VDP_control_port-VDP_data_port(a1)
		move.l	(a0)+,(a1)
		move.w	(a0)+,(a1)
		nop
		nop
		moveq	#$24,d0

loc_1162:
		dbf	d0,loc_1162
		dbf	d1,loc_1146

loc_116A:
		move.w	#0,(Z80_bus_request).l
		movem.l	(sp)+,d0-d1/a0-a2
		tst.b	(Do_Updates_in_H_int).w
		bne.s	HInt5_Do_Updates

HInt5_Done:
		rte
; ---------------------------------------------------------------------------

HInt5_Do_Updates:
		clr.b	(Do_Updates_in_H_int).w
		movem.l	d0-a6,-(sp)
		jsr	(Do_Updates).l
		movem.l	(sp)+,d0-a6
		rte
; ---------------------------------------------------------------------------

HInt4:
		tst.w	(H_int_flag).w
		beq.s	Hint4_Done
		move.w	#0,(H_int_flag).w
		movem.l	d0-d1/a0-a2,-(sp)
		lea	(VDP_data_port).l,a1
		move.w	#$8AFF,VDP_control_port-VDP_data_port(a1)
		move.w	#$100,(Z80_bus_request).l

loc_11B6:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_11B6
		movea.l	(Water_palette_data_addr).w,a2
		moveq	#$1B,d0

loc_11C6:
		dbf	d0,loc_11C6
		move.w	(a2)+,d1
		move.b	(H_int_counter).w,d0
		subi.b	#-$38,d0
		bcs.s	loc_11DA
		sub.b	d0,d1
		bcs.s	loc_11FC

loc_11DA:
		move.w	(a2)+,d0
		lea	(Water_palette).w,a0
		adda.w	d0,a0
		addi.w	#-$4000,d0
		swap	d0
		move.l	d0,VDP_control_port-VDP_data_port(a1)
		move.l	(a0)+,(a1)
		move.w	(a0)+,(a1)
		nop
		moveq	#$33,d0

loc_11F4:
		dbf	d0,loc_11F4
		dbf	d1,loc_11DA

loc_11FC:
		move.w	#0,(Z80_bus_request).l
		movem.l	(sp)+,d0-d1/a0-a2
		tst.b	(Do_Updates_in_H_int).w
		bne.s	HInt4_Do_Updates

Hint4_Done:
		rte
; ---------------------------------------------------------------------------

HInt4_Do_Updates:
		clr.b	(Do_Updates_in_H_int).w
		movem.l	d0-a6,-(sp)
		jsr	(Do_Updates).l
		movem.l	(sp)+,d0-a6
		rte
; ---------------------------------------------------------------------------

HInt_6:
		tst.w	(H_int_flag).w
		beq.s	HInt6_Done
		move.w	#0,(H_int_flag).w
		movem.l	d0-d1/a0-a2,-(sp)
		lea	(VDP_data_port).l,a1
		move.w	#$8AFF,VDP_control_port-VDP_data_port(a1)
		move.w	#$100,(Z80_bus_request).l

loc_1248:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_1248
		movea.l	(Water_palette_data_addr).w,a2
		moveq	#$1B,d0

loc_1258:
		dbf	d0,loc_1258
		move.w	(a2)+,d1
		move.b	(H_int_counter).w,d0
		subi.b	#-$38,d0
		bcs.s	loc_126C
		sub.b	d0,d1
		bcs.s	loc_128E

loc_126C:
		move.w	(a2)+,d0
		lea	(Normal_palette).w,a0
		adda.w	d0,a0
		addi.w	#-$4000,d0
		swap	d0
		move.l	d0,VDP_control_port-VDP_data_port(a1)
		move.l	(a0)+,(a1)
		move.w	(a0)+,(a1)
		nop
		moveq	#$33,d0

loc_1286:
		dbf	d0,loc_1286
		dbf	d1,loc_126C

loc_128E:
		move.w	#0,(Z80_bus_request).l
		movem.l	(sp)+,d0-d1/a0-a2
		tst.b	(Do_Updates_in_H_int).w
		bne.s	HInt6_Do_Updates

HInt6_Done:
		rte
; ---------------------------------------------------------------------------

HInt6_Do_Updates:
		clr.b	(Do_Updates_in_H_int).w
		movem.l	d0-a6,-(sp)
		jsr	(Do_Updates).l
		movem.l	(sp)+,d0-a6
		rte
; ---------------------------------------------------------------------------

HInt2:
		move	#$2700,sr
		tst.w	(H_int_flag).w
		beq.s	HInt2_Done
		move.w	#0,(H_int_flag).w
		movem.l	a0-a1,-(sp)
		lea	(VDP_data_port).l,a1
		move.w	#$8ADF,VDP_control_port-VDP_data_port(a1)
		lea	(Water_palette).w,a0
		move.l	#$C0000000,VDP_control_port-VDP_data_port(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		move.l	(a0)+,(a1)
		movem.l	(sp)+,a0-a1
		tst.b	(Do_Updates_in_H_int).w
		bne.s	HInt2_Do_Updates

HInt2_Done:
		rte
; ---------------------------------------------------------------------------

HInt2_Do_Updates:
		clr.b	(Do_Updates_in_H_int).w
		movem.l	d0-a6,-(sp)
		bsr.w	Do_Updates
		movem.l	(sp)+,d0-a6
		rte

; =============== S U B R O U T I N E =======================================


nullsub_1:
		rts
; End of function nullsub_1


; =============== S U B R O U T I N E =======================================


Init_Controllers:
		move.w	#$100,(Z80_bus_request).l

loc_134A:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_134A
		moveq	#$40,d0
		move.b	d0,(HW_Port_1_Control).l
		move.b	d0,(HW_Port_2_Control).l
		move.b	d0,(HW_Expansion_Control).l
		move.w	#0,(Z80_bus_request).l
		rts
; End of function Init_Controllers


; =============== S U B R O U T I N E =======================================


Poll_Controllers:
		lea	(Ctrl_1).w,a0
		lea	(HW_Port_1_Data).l,a1
		bsr.s	Poll_Controller
		addq.w	#2,a1
; End of function Poll_Controllers


; =============== S U B R O U T I N E =======================================


Poll_Controller:
		move.b	#0,(a1)
		nop
		nop
		move.b	(a1),d0
		lsl.b	#2,d0
		andi.b	#-$40,d0
		move.b	#$40,(a1)
		nop
		nop
		move.b	(a1),d1
		andi.b	#$3F,d1
		or.b	d1,d0
		not.b	d0
		move.b	(a0),d1
		eor.b	d0,d1
		move.b	d0,(a0)+
		and.b	d0,d1
		move.b	d1,(a0)+
		rts
; End of function Poll_Controller


; =============== S U B R O U T I N E =======================================


Init_VDP:
		lea	(VDP_control_port).l,a0
		lea	(VDP_data_port).l,a1
		lea	(VDP_register_values).l,a2
		moveq	#$12,d7

loc_13C2:
		move.w	(a2)+,(a0)
		dbf	d7,loc_13C2
		move.w	(VDP_register_values+2).l,d0
		move.w	d0,(VDP_reg_1_command).w
		move.w	#-$7521,(H_int_counter_command).w
		moveq	#0,d0
		move.l	#$40000010,(VDP_control_port).l
		move.w	d0,(a1)
		move.w	d0,(a1)
		move.l	#$C0000000,(VDP_control_port).l
		move.w	#$3F,d7

loc_13F6:
		move.w	d0,(a1)
		dbf	d7,loc_13F6
		clr.l	(V_scroll_value).w
		clr.l	(_unkF61A).w
		move.l	d1,-(sp)
		lea	(VDP_control_port).l,a5
		move.w	#-$70FF,(a5)
		move.l	#-$6B006C01,(a5)
		move.w	#-$6880,(a5)
		move.l	#$40000080,(a5)
		move.w	#0,(VDP_data_port).l

loc_1428:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	loc_1428
		move.w	#-$70FE,(a5)
		move.l	(sp)+,d1
		rts
; End of function Init_VDP

; ---------------------------------------------------------------------------
VDP_register_values:
		dc.w $8004	; H-int disabled
		dc.w $8134	; V-int enabled, display blanked, DMA enabled, 224 line display
		dc.w $8230	; Scroll A PNT base $C000
		dc.w $8320	; Window PNT base $8000
		dc.w $8407	; Scroll B PNT base $E000
		dc.w $857C	; Sprite attribute table base $F800
		dc.w $8600
		dc.w $8700	; Backdrop color is color 0 of the first palette line
		dc.w $8800
		dc.w $8900
		dc.w $8A00
		dc.w $8B00	; Full-screen horizontal and vertical scrolling
		dc.w $8C81	; 40 cell wide display, no interlace
		dc.w $8D3C	; Horizontal scroll table base $F000
		dc.w $8E00
		dc.w $8F02	; Auto-increment is 2
		dc.w $9001	; Scroll planes are 64x32 cells
		dc.w $9100
		dc.w $9200	; Window disabled

; =============== S U B R O U T I N E =======================================


Clear_DisplayData:
		move.w	#$100,(Z80_bus_request).l

loc_1466:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_1466
		lea	(VDP_control_port).l,a5
		move.w	#-$70FF,(a5)
		move.l	#-$6BFF6CC1,(a5)
		move.w	#-$6880,(a5)
		move.l	#$40000080,(a5)
		move.w	#0,(VDP_data_port).l

loc_1492:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	loc_1492
		move.w	#-$70FE,(a5)
		tst.w	(Competition_mode).w
		beq.s	Clear_DisplayData_No2P
		lea	(VDP_control_port).l,a5
		move.w	#-$70FF,(a5)
		move.l	#-$6BC06C01,(a5)
		move.w	#-$6880,(a5)
		move.l	#$40000082,(a5)
		move.w	#0,(VDP_data_port).l

loc_14C6:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	loc_14C6
		move.w	#-$70FE,(a5)
		bra.s	Clear_DisplayData_Cont
; ---------------------------------------------------------------------------

Clear_DisplayData_No2P:
		lea	(VDP_control_port).l,a5
		move.w	#-$70FF,(a5)
		move.l	#-$6BF06C01,(a5)
		move.w	#-$6880,(a5)
		move.l	#$40000083,(a5)
		move.w	#0,(VDP_data_port).l

loc_14F6:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	loc_14F6
		move.w	#-$70FE,(a5)
		lea	(VDP_control_port).l,a5
		move.w	#-$70FF,(a5)
		move.l	#-$6BF06C01,(a5)
		move.w	#-$6880,(a5)
		move.l	#$60000083,(a5)
		move.w	#0,(VDP_data_port).l

loc_1524:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	loc_1524
		move.w	#-$70FE,(a5)

Clear_DisplayData_Cont:
		clr.l	(V_scroll_value).w
		clr.l	(_unkF61A).w
		lea	(Sprite_table_buffer).w,a1
		moveq	#0,d0
		move.w	#$A0,d1

loc_1542:
		move.l	d0,(a1)+
		dbf	d1,loc_1542
		lea	(H_scroll_buffer).w,a1
		moveq	#0,d0
		move.w	#$100,d1

loc_1552:
		move.l	d0,(a1)+
		dbf	d1,loc_1552
		move.w	#0,(Z80_bus_request).l
		rts
; End of function Clear_DisplayData


; =============== S U B R O U T I N E =======================================


SndDrvInit:
		nop
		move.w	#$100,(Z80_bus_request).l
		move.w	#$100,(Z80_reset).l
		lea	(Z80_SoundDriver).l,a0
		lea	(Z80_RAM).l,a1
		move.w	#$1BFE,d0

loc_1584:
		move.b	(a0)+,(a1)+
		dbf	d0,loc_1584
		lea	(Z80_DefaultVariables).l,a0
		lea	(Z80_RAM+$1C00).l,a1
		move.w	#$F,d0

loc_159A:
		move.b	(a0)+,(a1)+
		dbf	d0,loc_159A
		btst	#6,(Graphics_flags).w
		beq.s	loc_15B0
		move.b	#1,(Z80_RAM+$1C02).l

loc_15B0:
		move.w	#0,(Z80_reset).l
		nop
		nop
		nop
		nop
		move.w	#$100,(Z80_reset).l
		move.w	#0,(Z80_bus_request).l
		rts
; End of function SndDrvInit

; ---------------------------------------------------------------------------
Z80_DefaultVariables:
		dc.b    0	; Unused 1
		dc.b    0	; Unused 2
		dc.b    0	; zPalFlag
		dc.b    0	; Unused 3
		dc.b    0	; zPalDblUpdCounter
		dc.b    0	; zSoundQueue0
		dc.b    0	; zSoundQueue1
		dc.b    0	; zSoundQueue2
		dc.b    0	; zTempoSpeedup
		dc.b    0	; zNextSound
		dc.b    0	; zMusicNumber
		dc.b    0	; zSFXNumber0
		dc.b    0	; zSFXNumber1
		dc.b    0	; zFadeOutTimeout
		dc.b    0	; zFadeDelay
		dc.b    0	; zFadeDelayTimeout

; =============== S U B R O U T I N E =======================================


Play_Sound:
		move.w	#$100,(Z80_bus_request).l

loc_15EA:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_15EA
		move.b	d0,(Z80_RAM+$1C0A).l
		move.w	#0,(Z80_bus_request).l
		rts
; End of function Play_Sound

; ---------------------------------------------------------------------------

Play_Sound_Local:
		tst.b	4(a0)
		bpl.s	locret_164A

; =============== S U B R O U T I N E =======================================


Play_Sound_2:
		move.w	#$100,(Z80_bus_request).l

loc_1612:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_1612
		cmp.b	(Z80_RAM+$1C0B).l,d0
		beq.s	loc_1642
		tst.b	(Z80_RAM+$1C0B).l
		bne.s	loc_163C
		move.b	d0,(Z80_RAM+$1C0B).l
		move.w	#0,(Z80_bus_request).l
		rts
; ---------------------------------------------------------------------------

loc_163C:
		move.b	d0,(Z80_RAM+$1C0C).l

loc_1642:
		move.w	#0,(Z80_bus_request).l

locret_164A:
		rts
; End of function Play_Sound_2


; =============== S U B R O U T I N E =======================================


Change_Music_Tempo:
		move.w	#$100,(Z80_bus_request).l

loc_1654:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_1654
		move.b	d0,(Z80_RAM+$1C08).l
		move.w	#0,(Z80_bus_request).l
		rts
; End of function Change_Music_Tempo


; =============== S U B R O U T I N E =======================================


Pause_Game:
		nop
		tst.b	(Life_count).w
		beq.w	Pause_Unpause
		tst.w	(Game_paused).w
		bne.s	loc_168E
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.b	#-$80,d0
		beq.w	Pause_NoPause

loc_168E:
		move.w	#1,(Game_paused).w
		move.w	#$100,(Z80_bus_request).l

loc_169C:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_169C
		move.b	#1,(Z80_RAM+$1C10).l
		move.w	#0,(Z80_bus_request).l

Pause_Loop:
		move.b	#$10,(V_int_routine).w
		bsr.w	Wait_VSync
		tst.b	(Slow_motion_flag).w
		beq.s	Pause_NoSlowMo
		btst	#6,(Ctrl_1_pressed).w
		beq.s	Pause_ChkFrameAdvance
		move.b	#$28,(Game_mode).w
		nop
		bra.s	Pause_ResumeMusic
; ---------------------------------------------------------------------------

Pause_ChkFrameAdvance:
		btst	#4,(Ctrl_1_held).w
		bne.s	Pause_FrameAdvance
		btst	#5,(Ctrl_1_pressed).w
		bne.s	Pause_FrameAdvance

Pause_NoSlowMo:
		cmpi.b	#$E,(Current_zone).w
		bcs.s	Pause_ChkStart
		cmpi.b	#$12,(Current_zone).w
		bhi.s	Pause_ChkStart
		tst.b	(Competition_mode_type).w
		bpl.s	Pause_ChkStart
		btst	#4,(Ctrl_1_pressed).w
		beq.s	Pause_ChkStart
		move.b	#-$40,(Game_mode).w
		bra.s	Pause_ResumeMusic
; ---------------------------------------------------------------------------

Pause_ChkStart:
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.b	#-$80,d0
		beq.s	Pause_Loop

Pause_ResumeMusic:
		move.w	#$100,(Z80_bus_request).l

loc_1724:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_1724
		move.b	#$80,(Z80_RAM+$1C10).l
		move.w	#0,(Z80_bus_request).l

Pause_Unpause:
		move.w	#0,(Game_paused).w

Pause_NoPause:
		rts
; ---------------------------------------------------------------------------

Pause_FrameAdvance:
		move.w	#1,(Game_paused).w
		move.w	#$100,(Z80_bus_request).l

loc_1754:
		btst	#0,(Z80_bus_request).l
		bne.s	loc_1754
		move.b	#$80,(Z80_RAM+$1C10).l
		move.w	#0,(Z80_bus_request).l
		rts
; End of function Pause_Game


; =============== S U B R O U T I N E =======================================


Plane_Map_To_VRAM:
		lea	(VDP_data_port).l,a6
		move.l	#$800000,d4

loc_177C:
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		move.w	d1,d3

loc_1782:
		move.w	(a1)+,(a6)
		dbf	d3,loc_1782
		add.l	d4,d0
		dbf	d2,loc_177C
		rts
; End of function Plane_Map_To_VRAM


; =============== S U B R O U T I N E =======================================


Plane_Map_To_VRAM_2:
		lea	(VDP_data_port).l,a6
		move.l	#$1000000,d4

loc_179C:
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		move.w	d1,d3

loc_17A2:
		move.w	(a1)+,(a6)
		dbf	d3,loc_17A2
		add.l	d4,d0
		dbf	d2,loc_179C
		rts
; End of function Plane_Map_To_VRAM_2


; =============== S U B R O U T I N E =======================================


Add_To_DMA_Queue:
		movea.l	(DMA_queue_slot).w,a1
		cmpa.w	#DMA_queue_slot,a1
		beq.s	locret_1810
		move.w	#-$6D00,d0
		move.b	d3,d0
		move.w	d0,(a1)+
		move.w	#-$6C00,d0
		lsr.w	#8,d3
		move.b	d3,d0
		move.w	d0,(a1)+
		move.w	#-$6B00,d0
		lsr.l	#1,d1
		move.b	d1,d0
		move.w	d0,(a1)+
		move.w	#-$6A00,d0
		lsr.l	#8,d1
		move.b	d1,d0
		move.w	d0,(a1)+
		move.w	#-$6900,d0
		lsr.l	#8,d1
		andi.b	#$7F,d1
		move.b	d1,d0
		move.w	d0,(a1)+
		andi.l	#$FFFF,d2
		lsl.l	#2,d2
		lsr.w	#2,d2
		swap	d2
		ori.l	#$40000080,d2
		move.l	d2,(a1)+
		move.l	a1,(DMA_queue_slot).w
		cmpa.w	#DMA_queue_slot,a1
		beq.s	locret_1810
		move.w	#0,(a1)

locret_1810:
		rts
; End of function Add_To_DMA_Queue


; =============== S U B R O U T I N E =======================================


Process_DMA_Queue:
		lea	(VDP_control_port).l,a5
		lea	(DMA_queue).w,a1

loc_181C:
		move.w	(a1)+,d0
		beq.s	loc_1834
		move.w	d0,(a5)
		move.w	(a1)+,(a5)
		move.w	(a1)+,(a5)
		move.w	(a1)+,(a5)
		move.w	(a1)+,(a5)
		move.w	(a1)+,(a5)
		move.w	(a1)+,(a5)
		cmpa.w	#DMA_queue_slot,a1
		bne.s	loc_181C

loc_1834:
		move.w	#0,(DMA_queue).w
		move.l	#-$500,(DMA_queue_slot).w
		rts
; End of function Process_DMA_Queue


; =============== S U B R O U T I N E =======================================


Nem_Decomp:
		movem.l	d0-a1/a3-a5,-(sp)
		lea	(Nem_PCD_WriteRowToVDP).l,a3
		lea	(VDP_data_port).l,a4
		bra.s	Nem_Decomp_Main
; ---------------------------------------------------------------------------

Nem_Decomp_To_RAM:
		movem.l	d0-a1/a3-a5,-(sp)
		lea	(Nem_PCD_WriteRowToRAM).l,a3

Nem_Decomp_Main:
		lea	(Nem_code_table).w,a1
		move.w	(a0)+,d2
		lsl.w	#1,d2
		bcc.s	loc_186E
		adda.w	#$A,a3

loc_186E:
		lsl.w	#2,d2
		movea.w	d2,a5
		moveq	#8,d3
		moveq	#0,d2
		moveq	#0,d4
		bsr.w	Nem_Build_Code_Table
		move.b	(a0)+,d5
		asl.w	#8,d5
		move.b	(a0)+,d5
		move.w	#$10,d6
		bsr.s	Nem_Process_Compressed_Data
		movem.l	(sp)+,d0-a1/a3-a5
		rts
; End of function Nem_Decomp


; =============== S U B R O U T I N E =======================================


Nem_Process_Compressed_Data:
		move.w	d6,d7
		subq.w	#8,d7
		move.w	d5,d1
		lsr.w	d7,d1
		cmpi.b	#-4,d1
		bcc.s	Nem_PCD_InlineData
		andi.w	#$FF,d1
		add.w	d1,d1
		move.b	(a1,d1.w),d0
		ext.w	d0
		sub.w	d0,d6
		cmpi.w	#9,d6
		bcc.s	loc_18B6
		addq.w	#8,d6
		asl.w	#8,d5
		move.b	(a0)+,d5

loc_18B6:
		move.b	1(a1,d1.w),d1
		move.w	d1,d0
		andi.w	#$F,d1
		andi.w	#$F0,d0

Nem_PCD_GetRepeatCount:
		lsr.w	#4,d0

Nem_PCD_WritePixel:
		lsl.l	#4,d4
		or.b	d1,d4
		subq.w	#1,d3
		bne.s	Nem_PCD_WritePixel_Loop
		jmp	(a3)
; End of function Nem_Process_Compressed_Data


; =============== S U B R O U T I N E =======================================


Nem_PCD_NewRow:
		moveq	#0,d4
		moveq	#8,d3

Nem_PCD_WritePixel_Loop:
		dbf	d0,Nem_PCD_WritePixel
		bra.s	Nem_Process_Compressed_Data
; ---------------------------------------------------------------------------

Nem_PCD_InlineData:
		subq.w	#6,d6
		cmpi.w	#9,d6
		bcc.s	loc_18E8
		addq.w	#8,d6
		asl.w	#8,d5
		move.b	(a0)+,d5

loc_18E8:
		subq.w	#7,d6
		move.w	d5,d1
		lsr.w	d6,d1
		move.w	d1,d0
		andi.w	#$F,d1
		andi.w	#$70,d0
		cmpi.w	#9,d6
		bcc.s	Nem_PCD_GetRepeatCount
		addq.w	#8,d6
		asl.w	#8,d5
		move.b	(a0)+,d5
		bra.s	Nem_PCD_GetRepeatCount
; End of function Nem_PCD_NewRow

; ---------------------------------------------------------------------------

Nem_PCD_WriteRowToVDP:
		move.l	d4,(a4)
		subq.w	#1,a5
		move.w	a5,d4
		bne.s	Nem_PCD_NewRow
		rts
; ---------------------------------------------------------------------------

Nem_PCD_WriteRowToVDP_XOR:
		eor.l	d4,d2
		move.l	d2,(a4)
		subq.w	#1,a5
		move.w	a5,d4
		bne.s	Nem_PCD_NewRow
		rts
; ---------------------------------------------------------------------------

Nem_PCD_WriteRowToRAM:
		move.l	d4,(a4)+
		subq.w	#1,a5
		move.w	a5,d4
		bne.s	Nem_PCD_NewRow
		rts
; ---------------------------------------------------------------------------

Nem_PCD_WriteRowToRAM_XOR:
		eor.l	d4,d2
		move.l	d2,(a4)+
		subq.w	#1,a5
		move.w	a5,d4
		bne.s	Nem_PCD_NewRow
		rts

; =============== S U B R O U T I N E =======================================


Nem_Build_Code_Table:
		move.b	(a0)+,d0

Nem_BCT_ChkEnd:
		cmpi.b	#-1,d0
		bne.s	Nem_BCT_NewPalIndex
		rts
; ---------------------------------------------------------------------------

Nem_BCT_NewPalIndex:
		move.w	d0,d7

Nem_BCT_Loop:
		move.b	(a0)+,d0
		cmpi.b	#-$80,d0
		bcc.s	Nem_BCT_ChkEnd
		move.b	d0,d1
		andi.w	#$F,d7
		andi.w	#$70,d1
		or.w	d1,d7
		andi.w	#$F,d0
		move.b	d0,d1
		lsl.w	#8,d1
		or.w	d1,d7
		moveq	#8,d1
		sub.w	d0,d1
		bne.s	Nem_BCT_ShortCode
		move.b	(a0)+,d0
		add.w	d0,d0
		move.w	d7,(a1,d0.w)
		bra.s	Nem_BCT_Loop
; ---------------------------------------------------------------------------

Nem_BCT_ShortCode:
		move.b	(a0)+,d0
		lsl.w	d1,d0
		add.w	d0,d0
		moveq	#1,d5
		lsl.w	d1,d5
		subq.w	#1,d5

Nem_BCT_ShortCode_Loop:
		move.w	d7,(a1,d0.w)
		addq.w	#2,d0
		dbf	d5,Nem_BCT_ShortCode_Loop
		bra.s	Nem_BCT_Loop
; End of function Nem_Build_Code_Table


; =============== S U B R O U T I N E =======================================


Load_PLC:
		movem.l	a1-a2,-(sp)
		lea	(Offs_PLC).l,a1
		add.w	d0,d0
		move.w	(a1,d0.w),d0
		lea	(a1,d0.w),a1
		lea	(Nem_decomp_queue).w,a2

loc_199C:
		tst.l	(a2)
		beq.s	loc_19A4
		addq.w	#6,a2
		bra.s	loc_199C
; ---------------------------------------------------------------------------

loc_19A4:
		move.w	(a1)+,d0
		bmi.s	loc_19B0

loc_19A8:
		move.l	(a1)+,(a2)+
		move.w	(a1)+,(a2)+
		dbf	d0,loc_19A8

loc_19B0:
		movem.l	(sp)+,a1-a2
		rts
; End of function Load_PLC


; =============== S U B R O U T I N E =======================================


Load_PLC_Raw:
		lea	(Nem_decomp_queue).w,a2

loc_19BA:
		tst.l	(a2)
		beq.s	loc_19C2
		addq.w	#6,a2
		bra.s	loc_19BA
; ---------------------------------------------------------------------------

loc_19C2:
		move.w	(a1)+,d0
		bmi.s	locret_19CE

loc_19C6:
		move.l	(a1)+,(a2)+
		move.w	(a1)+,(a2)+
		dbf	d0,loc_19C6

locret_19CE:
		rts
; End of function Load_PLC_Raw


; =============== S U B R O U T I N E =======================================


Load_PLC_2:
		movem.l	a1-a2,-(sp)
		lea	(Offs_PLC).l,a1
		add.w	d0,d0
		move.w	(a1,d0.w),d0
		lea	(a1,d0.w),a1
		bsr.s	Clear_Nem_Queue
		lea	(Nem_decomp_queue).w,a2
		move.w	(a1)+,d0
		bmi.s	loc_19F6

loc_19EE:
		move.l	(a1)+,(a2)+
		move.w	(a1)+,(a2)+
		dbf	d0,loc_19EE

loc_19F6:
		movem.l	(sp)+,a1-a2
		rts
; End of function Load_PLC_2


; =============== S U B R O U T I N E =======================================


Clear_Nem_Queue:
		lea	(Nem_decomp_queue).w,a2
		moveq	#$1F,d0

loc_1A02:
		clr.l	(a2)+
		dbf	d0,loc_1A02
		rts
; End of function Clear_Nem_Queue


; =============== S U B R O U T I N E =======================================


Process_Nem_Queue_Init:
		tst.l	(Nem_decomp_queue).w
		beq.s	locret_1A60
		tst.w	(Nem_patterns_left).w
		bne.s	locret_1A60
		movea.l	(Nem_decomp_queue).w,a0
		lea	(Nem_PCD_WriteRowToVDP).l,a3
		nop
		lea	(Nem_code_table).w,a1
		move.w	(a0)+,d2
		bpl.s	loc_1A2E
		adda.w	#$A,a3

loc_1A2E:
		andi.w	#$7FFF,d2
		bsr.w	Nem_Build_Code_Table
		move.b	(a0)+,d5
		asl.w	#8,d5
		move.b	(a0)+,d5
		moveq	#$10,d6
		moveq	#0,d0
		move.l	a0,(Nem_decomp_queue).w
		move.l	a3,(Nem_decomp_vars).w
		move.l	d0,(Nem_repeat_count).w
		move.l	d0,(Nem_palette_index).w
		move.l	d0,(Nem_previous_row).w
		move.l	d5,(Nem_data_word).w
		move.l	d6,(Nem_shift_value).w
		move.w	d2,(Nem_patterns_left).w

locret_1A60:
		rts
; End of function Process_Nem_Queue_Init


; =============== S U B R O U T I N E =======================================


Process_Nem_Queue:
		tst.w	(Nem_patterns_left).w
		beq.w	Process_Nem_Queue_Done
		move.w	#6,(Nem_frame_patterns_left).w
		moveq	#0,d0
		move.w	(Nem_decomp_destination).w,d0
		addi.w	#$C0,(Nem_decomp_destination).w
		bra.s	Process_Nem_Queue_Main
; End of function Process_Nem_Queue


; =============== S U B R O U T I N E =======================================


Process_Nem_Queue_2:
		tst.w	(Nem_patterns_left).w
		beq.s	Process_Nem_Queue_Done
		move.w	#3,(Nem_frame_patterns_left).w
		moveq	#0,d0
		move.w	(Nem_decomp_destination).w,d0
		addi.w	#$60,(Nem_decomp_destination).w
; End of function Process_Nem_Queue_2


; =============== S U B R O U T I N E =======================================


Process_Nem_Queue_Main:
		lea	(VDP_control_port).l,a4
		lsl.l	#2,d0
		lsr.w	#2,d0
		ori.w	#$4000,d0
		swap	d0
		move.l	d0,(a4)
		subq.w	#VDP_control_port-VDP_data_port,a4
		movea.l	(Nem_decomp_queue).w,a0
		movea.l	(Nem_decomp_vars).w,a3
		move.l	(Nem_repeat_count).w,d0
		move.l	(Nem_palette_index).w,d1
		move.l	(Nem_previous_row).w,d2
		move.l	(Nem_data_word).w,d5
		move.l	(Nem_shift_value).w,d6
		lea	(Nem_code_table).w,a1

Process_Nem_Queue_Loop:
		movea.w	#8,a5
		bsr.w	Nem_PCD_NewRow
		subq.w	#1,(Nem_patterns_left).w
		beq.s	Process_Nem_Queue_ShiftUp
		subq.w	#1,(Nem_frame_patterns_left).w
		bne.s	Process_Nem_Queue_Loop
		move.l	a0,(Nem_decomp_queue).w
		move.l	a3,(Nem_decomp_vars).w
		move.l	d0,(Nem_repeat_count).w
		move.l	d1,(Nem_palette_index).w
		move.l	d2,(Nem_previous_row).w
		move.l	d5,(Nem_data_word).w
		move.l	d6,(Nem_shift_value).w

Process_Nem_Queue_Done:
		rts
; ---------------------------------------------------------------------------

Process_Nem_Queue_ShiftUp:
		lea	(Nem_decomp_queue).w,a0
		moveq	#$15,d0

loc_1B02:
		move.l	6(a0),(a0)+
		dbf	d0,loc_1B02
		rts
; End of function Process_Nem_Queue_Main

; ---------------------------------------------------------------------------
		lea	(Offs_PLC).l,a1
		add.w	d0,d0
		move.w	(a1,d0.w),d0
		lea	(a1,d0.w),a1
		move.w	(a1)+,d1

; =============== S U B R O U T I N E =======================================


Load_PLC_Immediate:
		movea.l	(a1)+,a0
		moveq	#0,d0
		move.w	(a1)+,d0
		lsl.l	#2,d0
		lsr.w	#2,d0
		ori.w	#$4000,d0
		swap	d0
		move.l	d0,(VDP_control_port).l
		bsr.w	Nem_Decomp
		dbf	d1,Load_PLC_Immediate
		rts
; End of function Load_PLC_Immediate


; =============== S U B R O U T I N E =======================================


Eni_Decomp:
		movem.l	d0-d7/a1-a5,-(sp)
		movea.w	d0,a3
		move.b	(a0)+,d0
		ext.w	d0
		movea.w	d0,a5
		move.b	(a0)+,d4
		lsl.b	#3,d4
		movea.w	(a0)+,a2
		adda.w	a3,a2
		movea.w	(a0)+,a4
		adda.w	a3,a4
		move.b	(a0)+,d5
		asl.w	#8,d5
		move.b	(a0)+,d5
		moveq	#$10,d6

Eni_Decomp_Loop:
		moveq	#7,d0
		move.w	d6,d7
		sub.w	d0,d7
		move.w	d5,d1
		lsr.w	d7,d1
		andi.w	#$7F,d1
		move.w	d1,d2
		cmpi.w	#$40,d1
		bcc.s	loc_1B78
		moveq	#6,d0
		lsr.w	#1,d2

loc_1B78:
		bsr.w	Eni_Decomp_FetchByte
		andi.w	#$F,d2
		lsr.w	#4,d1
		add.w	d1,d1
		jmp	Eni_Decomp_Index(pc,d1.w)
; ---------------------------------------------------------------------------

Eni_Decomp_00:
		move.w	a2,(a1)+
		addq.w	#1,a2
		dbf	d2,Eni_Decomp_00
		bra.s	Eni_Decomp_Loop
; ---------------------------------------------------------------------------

Eni_Decomp_01:
		move.w	a4,(a1)+
		dbf	d2,Eni_Decomp_01
		bra.s	Eni_Decomp_Loop
; ---------------------------------------------------------------------------

Eni_Decomp_100:
		bsr.w	Eni_Decomp_FetchInlineValue

loc_1B9E:
		move.w	d1,(a1)+
		dbf	d2,loc_1B9E
		bra.s	Eni_Decomp_Loop
; ---------------------------------------------------------------------------

Eni_Decomp_101:
		bsr.w	Eni_Decomp_FetchInlineValue

loc_1BAA:
		move.w	d1,(a1)+
		addq.w	#1,d1
		dbf	d2,loc_1BAA
		bra.s	Eni_Decomp_Loop
; ---------------------------------------------------------------------------

Eni_Decomp_110:
		bsr.w	Eni_Decomp_FetchInlineValue

loc_1BB8:
		move.w	d1,(a1)+
		subq.w	#1,d1
		dbf	d2,loc_1BB8
		bra.s	Eni_Decomp_Loop
; ---------------------------------------------------------------------------

Eni_Decomp_111:
		cmpi.w	#$F,d2
		beq.s	Eni_Decomp_Done

loc_1BC8:
		bsr.w	Eni_Decomp_FetchInlineValue
		move.w	d1,(a1)+
		dbf	d2,loc_1BC8
		bra.s	Eni_Decomp_Loop
; ---------------------------------------------------------------------------

Eni_Decomp_Index:
		bra.s	Eni_Decomp_00
; ---------------------------------------------------------------------------
		bra.s	Eni_Decomp_00
; ---------------------------------------------------------------------------
		bra.s	Eni_Decomp_01
; ---------------------------------------------------------------------------
		bra.s	Eni_Decomp_01
; ---------------------------------------------------------------------------
		bra.s	Eni_Decomp_100
; ---------------------------------------------------------------------------
		bra.s	Eni_Decomp_101
; ---------------------------------------------------------------------------
		bra.s	Eni_Decomp_110
; ---------------------------------------------------------------------------
		bra.s	Eni_Decomp_111
; ---------------------------------------------------------------------------

Eni_Decomp_Done:
		subq.w	#1,a0
		cmpi.w	#$10,d6
		bne.s	loc_1BEE
		subq.w	#1,a0

loc_1BEE:
		move.w	a0,d0
		lsr.w	#1,d0
		bcc.s	loc_1BF6
		addq.w	#1,a0

loc_1BF6:
		movem.l	(sp)+,d0-d7/a1-a5
		rts
; End of function Eni_Decomp


; =============== S U B R O U T I N E =======================================


Eni_Decomp_FetchInlineValue:
		move.w	a3,d3
		move.b	d4,d1
		add.b	d1,d1
		bcc.s	loc_1C0E
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_1C0E
		ori.w	#-$8000,d3

loc_1C0E:
		add.b	d1,d1
		bcc.s	loc_1C1C
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_1C1C
		addi.w	#$4000,d3

loc_1C1C:
		add.b	d1,d1
		bcc.s	loc_1C2A
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_1C2A
		addi.w	#$2000,d3

loc_1C2A:
		add.b	d1,d1
		bcc.s	loc_1C38
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_1C38
		ori.w	#$1000,d3

loc_1C38:
		add.b	d1,d1
		bcc.s	loc_1C46
		subq.w	#1,d6
		btst	d6,d5
		beq.s	loc_1C46
		ori.w	#$800,d3

loc_1C46:
		move.w	d5,d1
		move.w	d6,d7
		sub.w	a5,d7
		bcc.s	loc_1C76
		move.w	d7,d6
		addi.w	#$10,d6
		neg.w	d7
		lsl.w	d7,d1
		move.b	(a0),d5
		rol.b	d7,d5
		add.w	d7,d7
		and.w	loc_1C8A(pc,d7.w),d5
		add.w	d5,d1

loc_1C64:
		move.w	a5,d0
		add.w	d0,d0
		and.w	loc_1C8A(pc,d0.w),d1
		add.w	d3,d1
		move.b	(a0)+,d5
		lsl.w	#8,d5
		move.b	(a0)+,d5
		rts
; ---------------------------------------------------------------------------

loc_1C76:
		beq.s	loc_1C88
		lsr.w	d7,d1
		move.w	a5,d0
		add.w	d0,d0
		and.w	loc_1C8A(pc,d0.w),d1
		add.w	d3,d1
		move.w	a5,d0
		bra.s	Eni_Decomp_FetchByte
; ---------------------------------------------------------------------------

loc_1C88:
		moveq	#$10,d6

loc_1C8A:
		bra.s	loc_1C64
; End of function Eni_Decomp_FetchInlineValue

; ---------------------------------------------------------------------------
Eni_Decomp_Masks:
		dc.w     1
		dc.w     3
		dc.w     7
		dc.w    $F
		dc.w   $1F
		dc.w   $3F
		dc.w   $7F
		dc.w   $FF
		dc.w  $1FF
		dc.w  $3FF
		dc.w  $7FF
		dc.w  $FFF
		dc.w $1FFF
		dc.w $3FFF
		dc.w $7FFF
		dc.w $FFFF

; =============== S U B R O U T I N E =======================================


Eni_Decomp_FetchByte:
		sub.w	d0,d6
		cmpi.w	#9,d6
		bcc.s	locret_1CBA
		addq.w	#8,d6
		asl.w	#8,d5
		move.b	(a0)+,d5

locret_1CBA:
		rts
; End of function Eni_Decomp_FetchByte


; =============== S U B R O U T I N E =======================================


Kos_Decomp:

var_2		= -2
var_1		= -1

		subq.l	#2,sp
		move.b	(a0)+,2+var_1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5
		moveq	#$F,d4

Kos_Decomp_Loop:
		lsr.w	#1,d5
		move	sr,d6
		dbf	d4,Kos_Decomp_ChkBit
		move.b	(a0)+,2+var_1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5
		moveq	#$F,d4

Kos_Decomp_ChkBit:
		move	d6,ccr
		bcc.s	Kos_Decomp_Match
		move.b	(a0)+,(a1)+
		bra.s	Kos_Decomp_Loop
; ---------------------------------------------------------------------------

Kos_Decomp_Match:
		moveq	#0,d3
		lsr.w	#1,d5
		move	sr,d6
		dbf	d4,Kos_Decomp_ChkBit2
		move.b	(a0)+,2+var_1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5
		moveq	#$F,d4

Kos_Decomp_ChkBit2:
		move	d6,ccr
		bcs.s	Kos_Decomp_FullMatch
		lsr.w	#1,d5
		dbf	d4,loc_1D0A
		move.b	(a0)+,2+var_1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5
		moveq	#$F,d4

loc_1D0A:
		roxl.w	#1,d3
		lsr.w	#1,d5
		dbf	d4,loc_1D1C
		move.b	(a0)+,2+var_1(sp)
		move.b	(a0)+,(sp)
		move.w	(sp),d5
		moveq	#$F,d4

loc_1D1C:
		roxl.w	#1,d3
		addq.w	#1,d3
		moveq	#-1,d2
		move.b	(a0)+,d2
		bra.s	Kos_Decomp_MatchLoop
; ---------------------------------------------------------------------------

Kos_Decomp_FullMatch:
		move.b	(a0)+,d0
		move.b	(a0)+,d1
		moveq	#-1,d2
		move.b	d1,d2
		lsl.w	#5,d2
		move.b	d0,d2
		andi.w	#7,d1
		beq.s	Kos_Decomp_FullMatch2
		move.b	d1,d3
		addq.w	#1,d3

Kos_Decomp_MatchLoop:
		move.b	(a1,d2.w),d0
		move.b	d0,(a1)+
		dbf	d3,Kos_Decomp_MatchLoop
		bra.s	Kos_Decomp_Loop
; ---------------------------------------------------------------------------

Kos_Decomp_FullMatch2:
		move.b	(a0)+,d1
		beq.s	Kos_Decomp_Done
		cmpi.b	#1,d1
		beq.w	Kos_Decomp_Loop
		move.b	d1,d3
		bra.s	Kos_Decomp_MatchLoop
; ---------------------------------------------------------------------------

Kos_Decomp_Done:
		addq.l	#2,sp
		rts
; End of function Kos_Decomp


; =============== S U B R O U T I N E =======================================


Queue_Kos_Module:
		lea	(Kos_module_queue).w,a2
		tst.l	(a2)
		beq.s	Process_Kos_Module_Queue_Init
		addq.w	#6,a2

loc_1D66:
		tst.l	(a2)
		beq.s	loc_1D6E
		addq.w	#6,a2
		bra.s	loc_1D66
; ---------------------------------------------------------------------------

loc_1D6E:
		move.l	a1,(a2)+
		move.w	d2,(a2)+
		rts
; End of function Queue_Kos_Module


; =============== S U B R O U T I N E =======================================


Process_Kos_Module_Queue_Init:
		move.w	(a1)+,d3
		cmpi.w	#-$6000,d3
		bne.s	loc_1D80
		move.w	#-$8000,d3

loc_1D80:
		lsr.w	#1,d3
		move.w	d3,d0
		rol.w	#5,d0
		andi.w	#$1F,d0
		move.b	d0,(Kos_modules_left).w
		andi.l	#$7FF,d3
		bne.s	loc_1DA0
		subq.b	#1,(Kos_modules_left).w
		move.l	#$800,d3

loc_1DA0:
		move.w	d3,(Kos_last_module_size).w
		move.w	d2,(Kos_module_destination).w
		move.l	a1,(Kos_module_queue).w
		addq.b	#1,(Kos_modules_left).w
		rts
; End of function Process_Kos_Module_Queue_Init


; =============== S U B R O U T I N E =======================================


Process_Kos_Module_Queue:
		tst.b	(Kos_modules_left).w
		bne.s	loc_1DBA

locret_1DB8:
		rts
; ---------------------------------------------------------------------------

loc_1DBA:
		bmi.s	loc_1DD8
		cmpi.w	#4,(Kos_decomp_queue_count).w
		bcc.s	locret_1DB8
		movea.l	(Kos_module_queue).w,a1
		lea	(Kos_decomp_buffer).w,a2
		bsr.w	Queue_Kos
		ori.b	#$80,(Kos_modules_left).w
		rts
; ---------------------------------------------------------------------------

loc_1DD8:
		tst.w	(Kos_decomp_queue_count).w
		bne.s	locret_1DB8
		andi.b	#$7F,(Kos_modules_left).w
		move.l	#$800,d3
		subq.b	#1,(Kos_modules_left).w
		bne.s	loc_1DF4
		move.w	(Kos_last_module_size).w,d3

loc_1DF4:
		move.w	(Kos_module_destination).w,d2
		move.w	d2,d0
		add.w	d3,d0
		add.w	d3,d0
		move.w	d0,(Kos_module_destination).w
		move.l	(Kos_module_queue).w,d0
		move.l	(Kos_decomp_queue).w,d1
		sub.l	d1,d0
		andi.l	#$F,d0
		add.l	d0,d1
		move.l	d1,(Kos_module_queue).w
		move.l	#Kos_decomp_buffer,d1
		andi.l	#$FFFFFF,d1
		jsr	(Add_To_DMA_Queue).l
		tst.b	(Kos_modules_left).w
		bne.s	locret_1E60
		lea	(Kos_module_queue).w,a0
		lea	(Kos_module_queue+6).w,a1
		move.l	(a1)+,(a0)+
		move.w	(a1)+,(a0)+
		move.l	(a1)+,(a0)+
		move.w	(a1)+,(a0)+
		move.l	(a1)+,(a0)+
		move.w	(a1)+,(a0)+
		move.l	#0,(a0)+
		move.w	#0,(a0)+
		move.l	(Kos_module_queue).w,d0
		beq.s	locret_1E60
		movea.l	d0,a1
		move.w	(Kos_module_destination).w,d2
		jmp	(Process_Kos_Module_Queue_Init).l
; ---------------------------------------------------------------------------

locret_1E60:
		rts
; End of function Process_Kos_Module_Queue


; =============== S U B R O U T I N E =======================================


Queue_Kos:
		move.w	(Kos_decomp_queue_count).w,d0
		lsl.w	#3,d0
		lea	(Kos_decomp_queue).w,a3
		move.l	a1,(a3,d0.w)
		move.l	a2,4(a3,d0.w)
		addq.w	#1,(Kos_decomp_queue_count).w
		rts
; End of function Queue_Kos

; ---------------------------------------------------------------------------

Set_Kos_Bookmark:
		tst.w	(Kos_decomp_queue_count).w
		bpl.s	locret_1EA2
		move.l	$42(sp),d0
		cmpi.l	#Process_Kos_Queue_Main,d0
		bcs.s	locret_1EA2
		cmpi.l	#Process_Kos_Queue_Done,d0
		bcc.s	locret_1EA2
		move.l	$42(sp),(Kos_decomp_bookmark).w
		move.l	#Backup_Kos_Registers,$42(sp)

locret_1EA2:
		rts

; =============== S U B R O U T I N E =======================================


Process_Kos_Queue:
		tst.w	(Kos_decomp_queue_count).w
		beq.w	Process_Kos_Queue_Done
		bmi.w	Restore_Kos_Bookmark

Process_Kos_Queue_Main:
		ori.w	#-$8000,(Kos_decomp_queue_count).w
		movea.l	(Kos_decomp_queue).w,a0
		movea.l	(Kos_decomp_destination).w,a1
		lea	(Kos_description_field).w,a2
		move.b	(a0)+,1(a2)
		move.b	(a0)+,(a2)
		move.w	(a2),d5
		moveq	#$F,d4

Process_Kos_Queue_Loop:
		lsr.w	#1,d5
		move	sr,d6
		dbf	d4,Process_Kos_Queue_ChkBit
		move.b	(a0)+,1(a2)
		move.b	(a0)+,(a2)
		move.w	(a2),d5
		moveq	#$F,d4

Process_Kos_Queue_ChkBit:
		move	d6,ccr
		bcc.s	Process_Kos_Queue_RLE
		move.b	(a0)+,(a1)+
		bra.s	Process_Kos_Queue_Loop
; ---------------------------------------------------------------------------

Process_Kos_Queue_RLE:
		moveq	#0,d3
		lsr.w	#1,d5
		move	sr,d6
		dbf	d4,Process_Kos_Queue_ChkBit2
		move.b	(a0)+,1(a2)
		move.b	(a0)+,(a2)
		move.w	(a2),d5
		moveq	#$F,d4

Process_Kos_Queue_ChkBit2:
		move	d6,ccr
		bcs.s	Process_Kos_Queue_SeparateRLE
		lsr.w	#1,d5
		dbf	d4,loc_1F0E
		move.b	(a0)+,1(a2)
		move.b	(a0)+,(a2)
		move.w	(a2),d5
		moveq	#$F,d4

loc_1F0E:
		roxl.w	#1,d3
		lsr.w	#1,d5
		dbf	d4,loc_1F20
		move.b	(a0)+,1(a2)
		move.b	(a0)+,(a2)
		move.w	(a2),d5
		moveq	#$F,d4

loc_1F20:
		roxl.w	#1,d3
		addq.w	#1,d3
		moveq	#-1,d2
		move.b	(a0)+,d2
		bra.s	Process_Kos_Queue_RLELoop
; ---------------------------------------------------------------------------

Process_Kos_Queue_SeparateRLE:
		move.b	(a0)+,d0
		move.b	(a0)+,d1
		moveq	#-1,d2
		move.b	d1,d2
		lsl.w	#5,d2
		move.b	d0,d2
		andi.w	#7,d1
		beq.s	Process_Kos_Queue_SeparateRLE2
		move.b	d1,d3
		addq.w	#1,d3

Process_Kos_Queue_RLELoop:
		move.b	(a1,d2.w),d0
		move.b	d0,(a1)+
		dbf	d3,Process_Kos_Queue_RLELoop
		bra.s	Process_Kos_Queue_Loop
; ---------------------------------------------------------------------------

Process_Kos_Queue_SeparateRLE2:
		move.b	(a0)+,d1
		beq.s	Process_Kos_Queue_EndReached
		cmpi.b	#1,d1
		beq.w	Process_Kos_Queue_Loop
		move.b	d1,d3
		bra.s	Process_Kos_Queue_RLELoop
; ---------------------------------------------------------------------------

Process_Kos_Queue_EndReached:
		move.l	a0,(Kos_decomp_queue).w
		move.l	a1,(Kos_decomp_destination).w
		andi.w	#$7FFF,(Kos_decomp_queue_count).w
		subq.w	#1,(Kos_decomp_queue_count).w
		beq.s	Process_Kos_Queue_Done
		lea	(Kos_decomp_queue).w,a0
		lea	(Kos_decomp_queue+8).w,a1
		move.l	(a1)+,(a0)+
		move.l	(a1)+,(a0)+
		move.l	(a1)+,(a0)+
		move.l	(a1)+,(a0)+
		move.l	(a1)+,(a0)+
		move.l	(a1)+,(a0)+

Process_Kos_Queue_Done:
		rts
; ---------------------------------------------------------------------------

Restore_Kos_Bookmark:
		movem.l	(Kos_decomp_stored_registers).w,d0-d6/a0-a2
		move.l	(Kos_decomp_bookmark).w,-(sp)
		move.w	(Kos_decomp_stored_SR).w,-(sp)
		rte
; End of function Process_Kos_Queue

; ---------------------------------------------------------------------------

Backup_Kos_Registers:
		move	sr,(Kos_decomp_stored_SR).w
		movem.l	d0-d6/a0-a2,(Kos_decomp_stored_registers).w
		rts

; =============== S U B R O U T I N E =======================================


Wait_VSync:
		move	#$2300,sr

loc_1FA6:
		tst.b	(V_int_routine).w
		bne.s	loc_1FA6
		rts
; End of function Wait_VSync


; =============== S U B R O U T I N E =======================================


Random_Number:
		move.l	(RNG_seed).w,d1
		bne.s	loc_1FBA
		move.l	#$2A6D365A,d1

loc_1FBA:
		move.l	d1,d0
		asl.l	#2,d1
		add.l	d0,d1
		asl.l	#3,d1
		add.l	d0,d1
		move.w	d1,d0
		swap	d1
		add.w	d1,d0
		move.w	d0,d1
		swap	d1
		move.l	d1,(RNG_seed).w
		rts
; End of function Random_Number


; =============== S U B R O U T I N E =======================================


GetSineCosine:
		andi.w	#$FF,d0
		add.w	d0,d0
		addi.w	#$80,d0
		move.w	SineTable(pc,d0.w),d1
		subi.w	#$80,d0
		move.w	SineTable(pc,d0.w),d0
		rts
; End of function GetSineCosine

; ---------------------------------------------------------------------------
SineTable:	binclude "Levels/Misc/sine.bin"
		even

; =============== S U B R O U T I N E =======================================


GetArcTan:
		movem.l	d3-d4,-(sp)
		moveq	#0,d3
		moveq	#0,d4
		move.w	d1,d3
		move.w	d2,d4
		or.w	d3,d4
		beq.s	GetArcTan_Zero
		move.w	d2,d4
		tst.w	d3
		bpl.s	loc_2284
		neg.w	d3

loc_2284:
		tst.w	d4
		bpl.s	loc_228A
		neg.w	d4

loc_228A:
		cmp.w	d3,d4
		bcc.s	loc_229A
		lsl.l	#8,d4
		divu.w	d3,d4
		moveq	#0,d0
		move.b	ArcTanTable(pc,d4.w),d0
		bra.s	loc_22A4
; ---------------------------------------------------------------------------

loc_229A:
		lsl.l	#8,d3
		divu.w	d4,d3
		moveq	#$40,d0
		sub.b	ArcTanTable(pc,d3.w),d0

loc_22A4:
		tst.w	d1
		bpl.s	loc_22AE
		neg.w	d0
		addi.w	#$80,d0

loc_22AE:
		tst.w	d2
		bpl.s	loc_22B8
		neg.w	d0
		addi.w	#$100,d0

loc_22B8:
		movem.l	(sp)+,d3-d4
		rts
; ---------------------------------------------------------------------------

GetArcTan_Zero:
		move.w	#$40,d0
		movem.l	(sp)+,d3-d4
		rts
; End of function GetArcTan

; ---------------------------------------------------------------------------
ArcTanTable:	binclude "Levels/Misc/arctan.bin"
		even

; =============== S U B R O U T I N E =======================================


AnPal_Load:
		bsr.w	SuperSonic_PalCycle
		moveq	#0,d2
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#6,d0
		move.w	OffsAnPal(pc,d0.w),d0
		jmp	OffsAnPal(pc,d0.w)
; End of function AnPal_Load

; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------
OffsAnPal:	dc.w AnPal_AIZ1-OffsAnPal
		dc.w AnPal_AIZ2-OffsAnPal
		dc.w AnPal_HCZ1-OffsAnPal
		dc.w AnPal_None2-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_CNZ-OffsAnPal
		dc.w AnPal_CNZ-OffsAnPal
		dc.w AnPal_FBZ-OffsAnPal
		dc.w AnPal_FBZ-OffsAnPal
		dc.w AnPal_ICZ-OffsAnPal
		dc.w AnPal_ICZ-OffsAnPal
		dc.w AnPal_LBZ1-OffsAnPal
		dc.w AnPal_LBZ2-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_LRZ1-OffsAnPal
		dc.w AnPal_LRZ2-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_BPZ-OffsAnPal
		dc.w AnPal_BPZ-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_CGZ-OffsAnPal
		dc.w AnPal_CGZ-OffsAnPal
		dc.w AnPal_EMZ-OffsAnPal
		dc.w AnPal_EMZ-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
		dc.w AnPal_None-OffsAnPal
; ---------------------------------------------------------------------------

AnPal_None:
		rts
; ---------------------------------------------------------------------------

AnPal_AIZ1:
		move.b	(AIZ1_palette_cycle_flag).w,d0
		bne.s	loc_24A6
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	locret_24A4
		move.w	#7,(Palette_cycle_counter1).w
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#8,(Palette_cycle_counter0).w
		andi.w	#$18,d0
		lea	(AnPal_PalAIZ1_1).l,a0
		move.l	(a0,d0.w),(Normal_palette_line_3+$16).w
		move.l	4(a0,d0.w),(Normal_palette_line_3+$1A).w
		tst.b	(Palette_cycle_counters+$00).w
		bne.s	locret_24A4
		move.w	(Palette_cycle_counters+$02).w,d0
		addq.w	#6,(Palette_cycle_counters+$02).w
		cmpi.w	#$30,(Palette_cycle_counters+$02).w
		bcs.s	loc_2492
		move.w	#0,(Palette_cycle_counters+$02).w

loc_2492:
		lea	(AnPal_PalAIZ1_2).l,a0
		move.l	(a0,d0.w),(Normal_palette_line_4+$18).w
		move.w	4(a0,d0.w),(Normal_palette_line_4+$1C).w

locret_24A4:
		rts
; ---------------------------------------------------------------------------

loc_24A6:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	locret_2502
		move.w	#9,(Palette_cycle_counter1).w
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#8,(Palette_cycle_counter0).w
		cmpi.w	#$50,(Palette_cycle_counter0).w
		bcs.s	loc_24C8
		move.w	#0,(Palette_cycle_counter0).w

loc_24C8:
		lea	(AnPal_PalAIZ1_3).l,a0
		move.l	(a0,d0.w),(Normal_palette_line_4+4).w
		move.l	4(a0,d0.w),(Normal_palette_line_4+8).w
		move.w	(Palette_cycle_counters+$02).w,d0
		addq.w	#6,(Palette_cycle_counters+$02).w
		cmpi.w	#$3C,(Palette_cycle_counters+$02).w
		bcs.s	loc_24F0
		move.w	#0,(Palette_cycle_counters+$02).w

loc_24F0:
		lea	(AnPal_PalAIZ1_4).l,a0
		move.l	(a0,d0.w),(Normal_palette_line_4+$1A).w
		move.w	4(a0,d0.w),(Normal_palette_line_4+$1E).w

locret_2502:
		rts
; ---------------------------------------------------------------------------

AnPal_AIZ2:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	loc_257E
		move.w	#5,(Palette_cycle_counter1).w
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#8,(Palette_cycle_counter0).w
		andi.w	#$18,d0

loc_251C:
		lea	(AnPal_PalAIZ2_1).l,a0
		move.l	(a0,d0.w),(Normal_palette_line_4+$18).w
		move.l	4(a0,d0.w),(Normal_palette_line_4+$1C).w
		move.w	(Palette_cycle_counters+$02).w,d0
		addq.w	#6,(Palette_cycle_counters+$02).w
		cmpi.w	#$30,(Palette_cycle_counters+$02).w
		bcs.s	loc_2544
		move.w	#0,(Palette_cycle_counters+$02).w

loc_2544:
		lea	(AnPal_PalAIZ2_2).l,a0
		cmpi.w	#$3800,(Camera_X_pos).w
		bcs.s	loc_2558
		lea	(AnPal_PalAIZ2_3).l,a0

loc_2558:
		move.w	(a0,d0.w),(Normal_palette_line_3+8).w
		move.w	2(a0,d0.w),(Normal_palette_line_3+$10).w
		move.w	4(a0,d0.w),(Normal_palette_line_4+$16).w
		move.w	#$A0E,(Normal_palette_line_3+$1C).w
		cmpi.w	#$1C0,(Camera_X_pos).w
		bcc.s	loc_257E
		move.w	4(a0,d0.w),(Normal_palette_line_3+$1C).w

loc_257E:
		subq.w	#1,(Palette_cycle_counters+$08).w
		bpl.s	locret_25BA
		move.w	#1,(Palette_cycle_counters+$08).w
		move.w	(Palette_cycle_counters+$04).w,d0
		addq.w	#2,(Palette_cycle_counters+$04).w
		cmpi.w	#$34,(Palette_cycle_counters+$04).w
		bcs.s	loc_25A0
		move.w	#0,(Palette_cycle_counters+$04).w

loc_25A0:
		lea	(AnPal_PalAIZ2_4).l,a0
		cmpi.w	#$3800,(Camera_X_pos).w
		bcs.s	loc_25B4
		lea	(AnPal_PalAIZ2_5).l,a0

loc_25B4:
		move.w	(a0,d0.w),(Normal_palette_line_4+2).w

locret_25BA:
		rts

; =============== S U B R O U T I N E =======================================


AnPal_HCZ1:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	locret_2608
		move.w	#7,(Palette_cycle_counter1).w
		tst.b	(Palette_cycle_counters+$00).w
		beq.s	loc_25D4
		move.w	#0,(Palette_cycle_counter1).w

loc_25D4:
		lea	(AnPal_PalHCZ1).l,a0
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#8,(Palette_cycle_counter0).w
		cmpi.w	#$20,(Palette_cycle_counter0).w
		bcs.s	loc_25F0
		move.w	#0,(Palette_cycle_counter0).w

loc_25F0:
		move.l	(a0,d0.w),(Normal_palette_line_3+6).w
		move.l	4(a0,d0.w),(Normal_palette_line_3+$A).w
		move.l	(a0,d0.w),(Water_palette_line_3+6).w
		move.l	4(a0,d0.w),(Water_palette_line_3+$A).w

locret_2608:
		rts
; End of function AnPal_HCZ1

; ---------------------------------------------------------------------------

AnPal_None2:
		rts
; ---------------------------------------------------------------------------

AnPal_CNZ:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	loc_2652
		move.w	#3,(Palette_cycle_counter1).w
		lea	(AnPal_PalCNZ_1).l,a0
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#6,(Palette_cycle_counter0).w
		cmpi.w	#$60,(Palette_cycle_counter0).w
		bcs.s	loc_2634
		move.w	#0,(Palette_cycle_counter0).w

loc_2634:
		move.l	(a0,d0.w),(Normal_palette_line_4+$12).w
		move.w	4(a0,d0.w),(Normal_palette_line_4+$16).w
		lea	(AnPal_PalCNZ_2).l,a0
		move.l	(a0,d0.w),(Water_palette_line_4+$12).w
		move.w	4(a0,d0.w),(Water_palette_line_4+$16).w

loc_2652:
		lea	(AnPal_PalCNZ_3).l,a0
		move.w	(Palette_cycle_counters+$02).w,d0
		addq.w	#6,(Palette_cycle_counters+$02).w
		cmpi.w	#$B4,(Palette_cycle_counters+$02).w
		bcs.s	loc_266E
		move.w	#0,(Palette_cycle_counters+$02).w

loc_266E:
		move.l	(a0,d0.w),(Normal_palette_line_3+$12).w
		move.w	4(a0,d0.w),(Normal_palette_line_3+$16).w
		lea	(AnPal_PalCNZ_4).l,a0
		move.l	(a0,d0.w),(Water_palette_line_3+$12).w
		move.w	4(a0,d0.w),(Water_palette_line_3+$16).w
		subq.w	#1,(Palette_cycle_counters+$08).w
		bpl.s	locret_26C6
		move.w	#2,(Palette_cycle_counters+$08).w
		lea	(AnPal_PalCNZ_5).l,a0
		move.w	(Palette_cycle_counters+$04).w,d0
		addq.w	#4,(Palette_cycle_counters+$04).w
		cmpi.w	#$40,(Palette_cycle_counters+$04).w
		bcs.s	loc_26B4
		move.w	#0,(Palette_cycle_counters+$04).w

loc_26B4:
		move.l	(a0,d0.w),(Normal_palette_line_3+$E).w
		lea	(AnPal_PalCNZ_5).l,a0
		move.l	(a0,d0.w),(Water_palette_line_3+$E).w

locret_26C6:
		rts
; ---------------------------------------------------------------------------

AnPal_FBZ:
		rts
; ---------------------------------------------------------------------------

AnPal_ICZ:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	loc_26F8
		move.w	#5,(Palette_cycle_counter1).w
		lea	(AnPal_PalICZ_1).l,a0
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#4,(Palette_cycle_counter0).w
		cmpi.w	#$40,(Palette_cycle_counter0).w
		bcs.s	loc_26F2
		move.w	#0,(Palette_cycle_counter0).w

loc_26F2:
		move.l	(a0,d0.w),(Normal_palette_line_3+$1C).w

loc_26F8:
		subq.w	#1,(Palette_cycle_counters+$08).w
		bpl.s	loc_272C
		move.w	#9,(Palette_cycle_counters+$08).w
		lea	(AnPal_PalICZ_2).l,a0
		move.w	(Palette_cycle_counters+$02).w,d0
		addq.w	#4,(Palette_cycle_counters+$02).w
		cmpi.w	#$48,(Palette_cycle_counters+$02).w
		bcs.s	loc_2720
		move.w	#0,(Palette_cycle_counters+$02).w

loc_2720:
		tst.w	(Events_bg+$16).w
		beq.s	loc_272C
		move.l	(a0,d0.w),(Normal_palette_line_4+$1C).w

loc_272C:
		subq.w	#1,(Palette_cycle_counters+$0A).w
		bpl.s	locret_2782
		move.w	#7,(Palette_cycle_counters+$0A).w
		lea	(AnPal_PalICZ_3).l,a0
		move.w	(Palette_cycle_counters+$04).w,d0
		addq.w	#4,(Palette_cycle_counters+$04).w
		cmpi.w	#$18,(Palette_cycle_counters+$04).w
		bcs.s	loc_2754
		move.w	#0,(Palette_cycle_counters+$04).w

loc_2754:
		tst.w	(Events_bg+$16).w
		beq.s	loc_2760
		move.l	(a0,d0.w),(Normal_palette_line_4+$18).w

loc_2760:
		lea	(AnPal_PalICZ_4).l,a0
		move.w	(Palette_cycle_counters+$06).w,d0
		addq.w	#4,(Palette_cycle_counters+$06).w
		cmpi.w	#$40,(Palette_cycle_counters+$06).w
		bcs.s	loc_277C
		move.w	#0,(Palette_cycle_counters+$06).w

loc_277C:
		move.l	(a0,d0.w),(Normal_palette_line_3+$18).w

locret_2782:
		rts
; ---------------------------------------------------------------------------

AnPal_LBZ1:
		lea	(AnPal_PalLBZ1).l,a0
		bra.s	loc_2792
; ---------------------------------------------------------------------------

AnPal_LBZ2:
		lea	(AnPal_PalLBZ2).l,a0

loc_2792:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	locret_27C0
		move.w	#3,(Palette_cycle_counter1).w
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#6,(Palette_cycle_counter0).w
		cmpi.w	#$12,(Palette_cycle_counter0).w
		bcs.s	loc_27B4
		move.w	#0,(Palette_cycle_counter0).w

loc_27B4:
		move.l	(a0,d0.w),(Normal_palette_line_3+$10).w
		move.w	4(a0,d0.w),(Normal_palette_line_3+$14).w

locret_27C0:
		rts
; ---------------------------------------------------------------------------

AnPal_LRZ1:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	locret_2818
		move.w	#$F,(Palette_cycle_counter1).w
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#8,(Palette_cycle_counter0).w
		cmpi.w	#$80,(Palette_cycle_counter0).w
		bcs.s	loc_27E4
		move.w	#0,(Palette_cycle_counter0).w

loc_27E4:
		lea	(AnPal_PalLRZ1_1).l,a0
		move.l	(a0,d0.w),(Normal_palette_line_3+2).w
		move.l	4(a0,d0.w),(Normal_palette_line_3+6).w
		move.w	(Palette_cycle_counters+$02).w,d0
		addq.w	#4,(Palette_cycle_counters+$02).w
		cmpi.w	#$1C,(Palette_cycle_counters+$02).w
		bcs.s	loc_280C
		move.w	#0,(Palette_cycle_counters+$02).w

loc_280C:
		lea	(AnPal_PalLRZ1_2).l,a0
		move.l	(a0,d0.w),(Normal_palette_line_4+2).w

locret_2818:
		rts
; ---------------------------------------------------------------------------

AnPal_LRZ2:
		rts
; ---------------------------------------------------------------------------

AnPal_BPZ:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	loc_2850
		move.w	#7,(Palette_cycle_counter1).w
		lea	(AnPal_PalBPZ_1).l,a0
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#6,(Palette_cycle_counter0).w
		cmpi.w	#$12,(Palette_cycle_counter0).w
		bcs.s	loc_2844
		move.w	#0,(Palette_cycle_counter0).w

loc_2844:
		move.l	(a0,d0.w),(Normal_palette_line_3+$1A).w
		move.w	4(a0,d0.w),(Normal_palette_line_3+$1E).w

loc_2850:
		subq.w	#1,(Palette_cycle_counters+$08).w
		bpl.s	locret_2884
		move.w	#$11,(Palette_cycle_counters+$08).w
		lea	(AnPal_PalBPZ_2).l,a0
		move.w	(Palette_cycle_counters+$02).w,d0
		addq.w	#6,(Palette_cycle_counters+$02).w
		cmpi.w	#$7E,(Palette_cycle_counters+$02).w
		bcs.s	loc_2878
		move.w	#0,(Palette_cycle_counters+$02).w

loc_2878:
		move.l	(a0,d0.w),(Normal_palette_line_4+4).w
		move.w	4(a0,d0.w),(Normal_palette_line_4+8).w

locret_2884:
		rts
; ---------------------------------------------------------------------------

AnPal_CGZ:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	locret_28BA
		move.w	#9,(Palette_cycle_counter1).w
		lea	(AnPal_PalCGZ).l,a0
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#8,(Palette_cycle_counter0).w
		cmpi.w	#$50,(Palette_cycle_counter0).w
		bcs.s	loc_28AE
		move.w	#0,(Palette_cycle_counter0).w

loc_28AE:
		move.l	(a0,d0.w),(Normal_palette_line_3+4).w
		move.l	4(a0,d0.w),(Normal_palette_line_3+8).w

locret_28BA:
		rts
; ---------------------------------------------------------------------------

AnPal_EMZ:
		subq.w	#1,(Palette_cycle_counter1).w
		bpl.s	loc_28EA
		move.w	#7,(Palette_cycle_counter1).w
		lea	(AnPal_PalEMZ_1).l,a0
		move.w	(Palette_cycle_counter0).w,d0
		addq.w	#2,(Palette_cycle_counter0).w
		cmpi.w	#$3C,(Palette_cycle_counter0).w
		bcs.s	loc_28E4
		move.w	#0,(Palette_cycle_counter0).w

loc_28E4:
		move.w	4(a0,d0.w),(Normal_palette_line_3+$1C).w

loc_28EA:
		subq.w	#1,(Palette_cycle_counters+$08).w
		bpl.s	locret_2918
		move.w	#$1F,(Palette_cycle_counters+$08).w
		lea	(AnPal_PalEMZ_2).l,a0
		move.w	(Palette_cycle_counters+$02).w,d0
		addq.w	#4,(Palette_cycle_counters+$02).w
		cmpi.w	#$34,(Palette_cycle_counters+$02).w
		bcs.s	loc_2912
		move.w	#0,(Palette_cycle_counters+$02).w

loc_2912:
		move.l	(a0,d0.w),(Normal_palette_line_4+$12).w

locret_2918:
		rts
; ---------------------------------------------------------------------------
AnPal_PalAIZ1_1:dc.w $EE8,$EE2,$EA4,$E64,$EE2,$EA4,$E64,$EE8,$EA4,$E64,$EE8,$EE2,$E64,$EE8,$EE2,$EA4

AnPal_PalAIZ1_3:dc.w $EEC,$EEE,$EE8,$E40,$EEC,$EE8,$EE8,$EEE,$EEA,$E86,$EE8,$EE8,$EE8,$E40,$EE8,$E86
		dc.w $EE6,$EEE,$EE8,$E40,$EEA,$EE8,$EE8,$EEE,$EE8,$E86,$EE8,$EE8,$EE8,$E40,$EE8,$E86
		dc.w $EE6,$EEE,$EE8,$E40,$EE8,$EE8,$EE8,$EEE,$EEA,$E86,$EE8,$EE8,$EEC,$E40,$EE8,$E86
		dc.w $EEC,$EEE,$EE8,$E40,$EEC,$EE8,$EE8,$EEE,$EEC,$E86,$EE8,$EE8,$EEC,$E40,$EE8,$E86

AnPal_PalAIZ1_4:dc.w $CEC,$CEE,$EEE,$CEE,$EEE,$EEE,$EEE,$EEE,$EEE,$EEE,$EEE,$EEE,$EEE,$EEE,$EEE,$EEE
		dc.w $EEE,$EEE,$EEE,$EEE,$EEE,$EE8,$EEE,$EEE,$EE8,$EE8,$EEE,$EE8,$EE8,$EE8,$EE8,$EE8
		dc.w $EE8,$EE8,$EE8,$EE8,$EE8,$EE8,$EE8,$EE8,$EE8,$AEC,$EE8,$AEC,$CEC,$AEC,$CEC,$CEC

AnPal_PalAIZ1_2:dc.w $EA4,$E60,$EE2,$EA4,$EE8,$EA4,$E60,$EE8,$EEE,$E60,$EE2,$EE2,$EE8,$EA4,$EA4,$EE2
		dc.w $E60,$E60,$EE2,$E60,$EEE,$EE2,$E60,$EE8

AnPal_PalAIZ2_1:dc.w $EE8,$EE2,$EC4,$EA4,$EE2,$EC4,$EA4,$EE8,$EC4,$EA4,$EE8,$EE2,$EA4,$EE8,$EE2,$EC4

AnPal_PalAIZ2_2:dc.w  $24, $44, $8E, $26, $46, $AE, $24, $48, $8E, $26, $4A, $AE, $24, $4C, $8E, $26
		dc.w  $4A, $AE, $24, $48, $8E, $24, $46, $8E

AnPal_PalAIZ2_3:dc.w  $24, $44,  $C, $26, $46,  $E, $24, $48,  $C, $26, $4A,  $E, $24, $4C,  $C, $26
		dc.w  $4A,  $E, $24, $48,  $C, $24, $46,  $C

AnPal_PalAIZ2_4:dc.w  $6E, $6E, $6E, $6E,$28E,$4AE,$6AE,$8CE,$8EE,$AEE,$AEE,$AEE,$AEE,$AEE,$8EE,$8EE
		dc.w $8EE,$8EE,$8CE,$8CE,$8CE,$6AE,$6AE,$4AE,$4AE,$28E

AnPal_PalAIZ2_5:dc.w   $C,  $C,  $C,  $C, $2C,  $E, $2E, $4E, $6E, $8E, $8E, $8E, $8E, $8E, $6E, $4E
		dc.w  $4E, $4E, $2E, $2E, $2E,  $E,  $E, $2C, $2C, $2C

AnPal_PalHCZ1:	dc.w $EC8,$EC0,$EA0,$E80,$EC0,$EA0,$E80,$EC8,$EA0,$E80,$EC8,$EC0,$E80,$EC8,$EC0,$EA0

AnPal_PalCNZ_1:	dc.w    0, $66, $EE, $22, $44, $CC, $44, $22, $AA, $66,   0, $88, $88,   0, $66, $AA
		dc.w  $22, $44, $CC, $44, $22, $EE, $66,   0, $EE, $88,   0, $CC, $AA, $22, $AA, $CC
		dc.w  $44, $88, $EE, $66, $66, $EE, $88, $44, $CC, $AA, $22, $AA, $CC,   0, $88, $EE

AnPal_PalCNZ_3:	dc.w $E20, $8A,$C0E,$C42, $6C,$E0E,$A64, $4C,$E0C,$884, $2E,$E0A,$6A6,  $E,$E08,$4C6
		dc.w $20E,$E06,$2E8,$40E,$E04, $E8,$60E,$E02, $C8,$80E,$E00, $AA,$A0E,$E00, $8A,$C0E
		dc.w $E20, $6C,$E0E,$C42, $4C,$E0C,$A64, $2E,$E0A,$884,  $E,$E08,$6A6,$20E,$E06,$4C6
		dc.w $40E,$E04,$2E8,$60E,$E02, $E8,$80E,$E00, $C8,$A0E,$E00, $AA,$C0E,$E20, $8A,$E0E
		dc.w $C42, $6C,$E0C,$A64, $4C,$E0A,$884, $2E,$E08,$6A6,  $E,$E06,$4C6,$20E,$E04,$2E8
		dc.w $40E,$E02, $E8,$60E,$E00, $C8,$80E,$E00, $AA,$A0E

AnPal_PalCNZ_5:	dc.w $2E0,$ECE,$4E2,$EAC,$6E4,$E8A,$8E6,$E68,$AE8,$E46,$CEA,$E24,$EEC,$E02,$EEE,$E00
		dc.w $EEC,$E02,$CEA,$E24,$AE8,$E46,$8E6,$E68,$6E4,$E8A,$4E2,$EAC,$2E0,$ECE, $E0,$EEE

AnPal_PalCNZ_2:	dc.w $800,$800,$886,$800,$800,$864,$800,$800,$842,$800,$800,$820,$820,$800,$800,$842
		dc.w $800,$800,$864,$800,$800,$886,$800,$800,$886,$820,$800,$864,$842,$800,$842,$864
		dc.w $800,$820,$886,$800,$800,$886,$820,$800,$864,$842,$800,$842,$864,$800,$820,$886

AnPal_PalCNZ_4:	dc.w $E20,$E8A,$E0A,$E42,$E6A,$E0A,$E64,$E4A,$E0A,$E84,$E2A,$E0A,$EA6,$E0A,$E08,$EC6
		dc.w $E0A,$E06,$EE8,$E0A,$E04,$EE8,$E0A,$E02,$EC8,$E0A,$E00,$EAA,$E0A,$E00,$E8A,$E0A
		dc.w $E20,$E6A,$E0A,$C42,$E4A,$E0A,$E64,$E2A,$E0A,$E84,$E0A,$E08,$EA6,$E0A,$E06,$EC6
		dc.w $E0A,$E04,$EE8,$E0A,$E02,$EE8,$E0A,$E00,$EC8,$E0A,$E00,$EAA,$E0A,$E20,$E8A,$E0A
		dc.w $E42,$E6A,$E0A,$E64,$E4A,$E0A,$E84,$E2A,$E08,$EA6,$E0A,$E06,$EC6,$E0A,$E04,$EE8
		dc.w $E0A,$E02,$EE8,$E0A,$E00,$EC8,$E0A,$E00,$EAA,$E0A,$840,$ECA,$862,$EAA,$884,$E88
		dc.w $8A6,$E66,$AE8,$E44,$CEA,$E22,$EEC,$E00,$EEC,$E00,$EEC,$E00,$CEA,$E22,$AE8,$E44
		dc.w $8A6,$E66,$884,$E88,$862,$EAA,$840,$ECA,$822,$ECA

AnPal_PalICZ_1:	dc.w $E62,$E20,$E44,$E20,$E44,$E00,$E42,$E00,$E62,$C00,$E82,$A00,$EA2,$C00,$EC0,$E00
		dc.w $EE0,$E20,$EE4,$E00,$EE4,$C00,$EE4,$A00,$EE0,$800,$EC2,$A00,$EA2,$C00,$E82,$E20

AnPal_PalICZ_2:	dc.w $E06,$E08,$E04,$E06,$C04,$E04,$C02,$C04,$A02,$C02,$A00,$A02,$800,$A00,$600,$800
		dc.w $600,$800,$600,$800,$600,$800,$800,$A00,$A00,$A02,$A02,$C02,$C02,$C04,$C04,$E04
		dc.w $E04,$E06,$E06,$E08

AnPal_PalICZ_3:	dc.w $840,$EEA,$860,$EE0,$A80,$EC0,$EC0,$A80,$A80,$EC0,$860,$EE0

AnPal_PalICZ_4:	dc.w  $E8,$CEC, $C8,$AEA, $C8,$AEA, $A6,$6E8, $A6,$6E8, $84, $E8, $84, $E8, $82, $C8
		dc.w  $64, $A6, $64, $A6, $82, $C8, $84, $E8, $A6,$6E8, $C8,$AEA, $E8,$CEC, $E8,$CEC

AnPal_PalLBZ1:	dc.w  $8E0,  $C0,  $80,  $C0,  $80, $8E0,  $80, $8E0,  $C0

AnPal_PalLBZ2:	dc.w $EEA,$EA4,$C62,$EA4,$C62,$EEA,$C62,$EEA,$EA4

AnPal_PalLRZ1_1:dc.w  $EE, $AE, $6E,  $E, $AE, $6E,  $E, $EE, $6E,  $E, $EE,$2CE, $2E,$8EE,$4EE, $6E
		dc.w $AEE,$6EE, $8E, $4E,$4EE, $6E, $2E,$8EE, $6E,  $E, $EE,$2CE,  $E, $EE,$2CE, $6E
		dc.w  $EE, $AE, $6E,  $E, $8E, $4E,  $C, $CE, $2E,  $A, $AC, $6E,   8, $8E, $4C,  $C
		dc.w  $AC, $6E, $2E,  $A, $8E, $4E,  $C, $CE, $6E,  $E, $EE, $AE,  $E, $EE, $AE, $6E

AnPal_PalLRZ1_2:dc.w $224,$224,$224,$424,$224,$426,$426,$224,$424,$224,$224,$224,$224,$224,$224,$422
		dc.w $422,$422

AnPal_PalBPZ_1:	dc.w  $EE, $AE, $6C, $AE, $6E, $EE, $6E, $EE, $AE

AnPal_PalBPZ_2:	dc.w $EE0,$E0E, $EE,$EA0,$A0E, $EA,$E60,$60E, $E6,$E20,$20E, $E2,$E02, $2E,$2E0,$E06
		dc.w  $6E,$6E0,$E0A, $AE,$AE0,$E0E, $EE,$EE0,$A0E, $EA,$EA0,$60E, $E6,$E60,$20E, $E2
		dc.w $E20, $2E,$2E0,$E02, $6E,$6E0,$E06, $AE,$AE0,$E0A, $EE,$EE0,$E0E, $EA,$EA0,$A0E
		dc.w  $E6,$E60,$60E, $E2,$E20,$20E,$2E0,$E02, $2E,$6E0,$E06, $6E,$AE0,$E0A, $AE

AnPal_PalCGZ:	dc.w   $E,   8,   4,$EEE,  $C,   6,   2,$CCE,  $A,   4,   0,$AAE,   8,   2,   0,$88E
		dc.w    6,   0,   0,$66E,   4,   0,   0,$44E,   6,   0,   0,$66E,   8,   2,   0,$88E
		dc.w   $A,   4,   2,$AAE,  $C,   6,   4,$CCE

AnPal_PalEMZ_1:	dc.w    6,   8,  $A,  $C,  $E,  $E,  $E,  $E,  $C,  $A,   8,   6,   6,   6,   6,   8
		dc.w   $A,  $C,  $E,  $E,  $E,  $C,  $A,   8,   6,   8,  $A,  $A,  $A,   8

AnPal_PalEMZ_2:	dc.w    0,  $E,   2,  $C,   4,  $A,   6,   8,   8,   6,  $A,   4,  $C,   2,  $E,   0
		dc.w   $C,   2,  $A,   4,   8,   6,   6,   8,   4,  $A,   2,  $C

; =============== S U B R O U T I N E =======================================


SuperSonic_PalCycle:
		move.b	(Super_palette_status).w,d0
		beq.s	locret_316A
		bmi.w	SuperSonic_PalCycle_Normal
		subq.b	#1,d0
		bne.s	SuperSonic_PalCycle_Revert
		subq.b	#1,(Palette_timer).w
		bpl.s	locret_316A
		move.b	#1,(Palette_timer).w
		lea	(PalCycle_SuperSonic).l,a0
		move.w	(Palette_frame).w,d0
		addq.w	#6,(Palette_frame).w
		cmpi.w	#$24,(Palette_frame).w
		bcs.s	SuperSonic_PalCycle_SonicApply
		move.b	#-1,(Super_palette_status).w
		move.b	#0,(Player_1+object_control).w

SuperSonic_PalCycle_SonicApply:
		lea	(Normal_palette+4).w,a1
		move.l	(a0,d0.w),(a1)+
		move.w	4(a0,d0.w),(a1)
		tst.b	(Water_flag).w
		beq.s	locret_316A
		lea	(PalCycle_SuperSonicUnderwaterAIZICZ).l,a0
		tst.b	(Current_zone).w
		beq.s	SuperSonic_PalCycle_ApplyUnderwater
		cmpi.b	#5,(Current_zone).w
		beq.s	SuperSonic_PalCycle_ApplyUnderwater
		lea	(PalCycle_SuperSonicUnderwaterHCZCNZLBZ).l,a0

SuperSonic_PalCycle_ApplyUnderwater:
		lea	(Water_palette+4).w,a1
		move.l	(a0,d0.w),(a1)+
		move.w	4(a0,d0.w),(a1)

locret_316A:
		rts
; ---------------------------------------------------------------------------

SuperSonic_PalCycle_Revert:
		subq.b	#1,(Palette_timer).w
		bpl.s	locret_316A
		move.b	#3,(Palette_timer).w
		lea	(PalCycle_SuperSonic).l,a0
		move.w	(Palette_frame).w,d0
		subq.w	#6,(Palette_frame).w
		bcc.s	loc_3194
		; Bug: this only clears the high byte of Palette_frame, causing subsequent
		; fade-ins to pull color values from Pal_FromBlack
		move.b	#0,(Palette_frame).w
		move.b	#0,(Super_palette_status).w

loc_3194:
		bra.s	SuperSonic_PalCycle_SonicApply
; ---------------------------------------------------------------------------

SuperSonic_PalCycle_Normal:
		subq.b	#1,(Palette_timer).w
		bpl.s	locret_316A
		move.b	#6,(Palette_timer).w
		lea	(PalCycle_SuperSonic).l,a0
		move.w	(Palette_frame).w,d0
		addq.w	#6,(Palette_frame).w
		cmpi.w	#$36,(Palette_frame).w
		bcs.s	loc_31BE
		move.w	#$24,(Palette_frame).w

loc_31BE:
		bra.w	SuperSonic_PalCycle_SonicApply
; End of function SuperSonic_PalCycle

; ---------------------------------------------------------------------------
PalCycle_SuperSonic:
		dc.w $E66,$C42,$822
		dc.w $E88,$C66,$844
		dc.w $EAA,$C88,$A66
		dc.w $ECC,$EAA,$C88
		dc.w $EEE,$ECC,$EAA
		dc.w $EEE,$EEE,$EEE
		dc.w $CEE,$CEE,$AEE
		dc.w $AEE,$8EE,$6CC
		dc.w $8EE, $EE, $AA
		dc.w $AEE,$8EE,$6CC
PalCycle_SuperSonicUnderwaterAIZICZ:
		dc.w $A82,$860,$640
		dc.w $E88,$C66,$844
		dc.w $EAA,$C88,$A66
		dc.w $ECC,$EAA,$C88
		dc.w $EEE,$ECC,$EAA
		dc.w $EEE,$EEE,$EEE
		dc.w $CEE,$CEC,$AEC
		dc.w $AEC,$8EC,$6CA
		dc.w $8EC,$4EA,$4A8
		dc.w $CEE,$CEC,$AEC
PalCycle_SuperSonicUnderwaterHCZCNZLBZ:
		dc.w $C66,$A44,$624
		dc.w $E88,$C66,$844
		dc.w $EAA,$C88,$A66
		dc.w $ECC,$EAA,$C88
		dc.w $EEE,$ECC,$EAA
		dc.w $EEE,$EEE,$EEE
		dc.w $CEE,$CEC,$AEC
		dc.w $AEC,$8EC,$6CA
		dc.w $8EC,$4EA,$4A8
		dc.w $CEE,$CEC,$AEC

; =============== S U B R O U T I N E =======================================


Pal_FadeFromBlack:
		move.w	#$3F,(Palette_fade_info).w
		jsr	Pal_FillBlack(pc)
		move.w	#$15,d4

loc_3284:
		move.b	#$12,(V_int_routine).w
		bsr.w	Wait_VSync
		bsr.s	Pal_FromBlack
		bsr.w	Process_Nem_Queue_Init
		dbf	d4,loc_3284
		rts
; End of function Pal_FadeFromBlack


; =============== S U B R O U T I N E =======================================


Pal_FromBlack:
		moveq	#0,d0
		lea	(Normal_palette).w,a0
		lea	(Target_palette).w,a1
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		adda.w	d0,a1
		move.b	(Palette_fade_count).w,d0

loc_32B0:
		bsr.s	Pal_AddColor
		dbf	d0,loc_32B0
		tst.b	(Water_flag).w
		beq.s	locret_32D8
		moveq	#0,d0
		lea	(Water_palette).w,a0
		lea	(Target_water_palette).w,a1
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		adda.w	d0,a1
		move.b	(Palette_fade_count).w,d0

loc_32D2:
		bsr.s	Pal_AddColor
		dbf	d0,loc_32D2

locret_32D8:
		rts
; End of function Pal_FromBlack


; =============== S U B R O U T I N E =======================================


Pal_AddColor:
		move.w	(a1)+,d2
		move.w	(a0),d3
		cmp.w	d2,d3
		beq.s	loc_3302
		move.w	d3,d1
		addi.w	#$200,d1
		cmp.w	d2,d1
		bhi.s	loc_32F0
		move.w	d1,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_32F0:
		move.w	d3,d1
		addi.w	#$20,d1
		cmp.w	d2,d1
		bhi.s	loc_32FE
		move.w	d1,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_32FE:
		addq.w	#2,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_3302:
		addq.w	#2,a0
		rts
; End of function Pal_AddColor


; =============== S U B R O U T I N E =======================================


Pal_FillBlack:
		moveq	#0,d0
		lea	(Normal_palette).w,a0
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		moveq	#0,d1
		move.b	(Palette_fade_count).w,d0

loc_3318:
		move.w	d1,(a0)+
		tst.b	(Water_flag).w
		beq.s	loc_3324
		move.w	d1,-$B82(a0)

loc_3324:
		dbf	d0,loc_3318
		rts
; End of function Pal_FillBlack


; =============== S U B R O U T I N E =======================================


Animate_Palette:
		tst.w	(Palette_fade_timer).w
		beq.s	loc_3338
		subq.w	#1,(Palette_fade_timer).w
		bra.w	Pal_FromBlack
; ---------------------------------------------------------------------------

loc_3338:
		jmp	(AnPal_Load).l
; End of function Animate_Palette


; =============== S U B R O U T I N E =======================================


Pal_FadeToBlack:
		move.w	#$3F,(Palette_fade_info).w
		move.w	#$15,d4

loc_3348:
		move.b	#$12,(V_int_routine).w
		bsr.w	Wait_VSync
		bsr.s	Pal_ToBlack
		bsr.w	Process_Nem_Queue_Init
		dbf	d4,loc_3348
		rts
; End of function Pal_FadeToBlack


; =============== S U B R O U T I N E =======================================


Pal_ToBlack:
		moveq	#0,d0
		lea	(Normal_palette).w,a0
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		move.b	(Palette_fade_count).w,d0

loc_336E:
		bsr.s	Pal_DecColor
		dbf	d0,loc_336E
		moveq	#0,d0
		lea	(Water_palette).w,a0
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		move.b	(Palette_fade_count).w,d0

loc_3384:
		bsr.s	Pal_DecColor
		dbf	d0,loc_3384
		rts
; End of function Pal_ToBlack


; =============== S U B R O U T I N E =======================================


Pal_DecColor:
		move.w	(a0),d2
		beq.s	loc_33B8
		move.w	d2,d1
		andi.w	#$E,d1
		beq.s	loc_339C
		subq.w	#2,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_339C:
		move.w	d2,d1
		andi.w	#$E0,d1
		beq.s	loc_33AA
		subi.w	#$20,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_33AA:
		move.w	d2,d1
		andi.w	#$E00,d1
		beq.s	loc_33B8
		subi.w	#$200,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_33B8:
		addq.w	#2,a0
		rts
; End of function Pal_DecColor


; =============== S U B R O U T I N E =======================================


Pal_FromBlackWhite:
		move.w	#$3F,(Palette_fade_info).w
		moveq	#0,d0
		lea	(Normal_palette).w,a0
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		move.w	#$EEE,d1
		move.b	(Palette_fade_count).w,d0

loc_33D6:
		move.w	d1,(a0)+
		dbf	d0,loc_33D6
		move.w	#$15,d4

loc_33E0:
		move.b	#$12,(V_int_routine).w
		bsr.w	Wait_VSync
		bsr.s	Pal_FromWhite
		bsr.w	Process_Nem_Queue_Init
		dbf	d4,loc_33E0
		rts
; End of function Pal_FromBlackWhite


; =============== S U B R O U T I N E =======================================


Pal_FromWhite:
		moveq	#0,d0
		lea	(Normal_palette).w,a0
		lea	(Target_palette).w,a1
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		adda.w	d0,a1
		move.b	(Palette_fade_count).w,d0

loc_340C:
		bsr.s	Pal_DecColor2
		dbf	d0,loc_340C
		tst.b	(Water_flag).w
		beq.s	locret_3434
		moveq	#0,d0
		lea	(Water_palette).w,a0
		lea	(Target_water_palette).w,a1
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		adda.w	d0,a1
		move.b	(Palette_fade_count).w,d0

loc_342E:
		bsr.s	Pal_DecColor2
		dbf	d0,loc_342E

locret_3434:
		rts
; End of function Pal_FromWhite


; =============== S U B R O U T I N E =======================================


Pal_DecColor2:
		move.w	(a1)+,d2
		move.w	(a0),d3
		cmp.w	d2,d3
		beq.s	loc_3462
		move.w	d3,d1
		subi.w	#$200,d1
		bcs.s	loc_344E
		cmp.w	d2,d1
		bcs.s	loc_344E
		move.w	d1,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_344E:
		move.w	d3,d1
		subi.w	#$20,d1
		bcs.s	loc_345E
		cmp.w	d2,d1
		bcs.s	loc_345E
		move.w	d1,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_345E:
		subq.w	#2,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_3462:
		addq.w	#2,a0
		rts
; End of function Pal_DecColor2


; =============== S U B R O U T I N E =======================================


Pal_FadeToWhite:
		move.w	#$3F,(Palette_fade_info).w
		move.w	#$15,d4

loc_3470:
		move.b	#$12,(V_int_routine).w
		bsr.w	Wait_VSync
		bsr.s	Pal_ToWhite
		bsr.w	Process_Nem_Queue_Init
		dbf	d4,loc_3470
		rts
; End of function Pal_FadeToWhite


; =============== S U B R O U T I N E =======================================


Pal_ToWhite:
		moveq	#0,d0
		lea	(Normal_palette).w,a0
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		move.b	(Palette_fade_count).w,d0

loc_3496:
		bsr.s	Pal_AddColor2
		dbf	d0,loc_3496
		moveq	#0,d0
		lea	(Water_palette).w,a0
		move.b	(Palette_fade_info).w,d0
		adda.w	d0,a0
		move.b	(Palette_fade_count).w,d0

loc_34AC:
		bsr.s	Pal_AddColor2
		dbf	d0,loc_34AC
		rts
; End of function Pal_ToWhite


; =============== S U B R O U T I N E =======================================


Pal_AddColor2:
		move.w	(a0),d2
		cmpi.w	#$EEE,d2
		beq.s	loc_34F0
		move.w	d2,d1
		andi.w	#$E,d1
		cmpi.w	#$E,d1
		beq.s	loc_34CC
		addq.w	#2,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_34CC:
		move.w	d2,d1
		andi.w	#$E0,d1
		cmpi.w	#$E0,d1
		beq.s	loc_34DE
		addi.w	#$20,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_34DE:
		move.w	d2,d1
		andi.w	#$E00,d1
		cmpi.w	#$E00,d1
		beq.s	loc_34F0
		addi.w	#$200,(a0)+
		rts
; ---------------------------------------------------------------------------

loc_34F0:
		addq.w	#2,a0
		rts
; End of function Pal_AddColor2


; =============== S U B R O U T I N E =======================================


LoadPalette:
		lea	(PalPoint).l,a1
		lsl.w	#3,d0
		adda.w	d0,a1
		movea.l	(a1)+,a2
		movea.w	(a1)+,a3
		adda.w	#Target_palette-Normal_palette,a3
		move.w	(a1)+,d7

loc_3508:
		move.l	(a2)+,(a3)+
		dbf	d7,loc_3508
		rts
; End of function LoadPalette


; =============== S U B R O U T I N E =======================================


LoadPalette_Immediate:
		lea	(PalPoint).l,a1
		lsl.w	#3,d0
		adda.w	d0,a1
		movea.l	(a1)+,a2
		movea.w	(a1)+,a3
		move.w	(a1)+,d7

loc_3520:
		move.l	(a2)+,(a3)+
		dbf	d7,loc_3520
		rts
; End of function LoadPalette_Immediate


; =============== S U B R O U T I N E =======================================


LoadPalette2:
		lea	(PalPoint).l,a1
		lsl.w	#3,d0
		adda.w	d0,a1
		movea.l	(a1)+,a2
		movea.w	(a1)+,a3
		suba.w	#Normal_palette-Water_palette,a3
		move.w	(a1)+,d7

loc_353C:
		move.l	(a2)+,(a3)+
		dbf	d7,loc_353C
		rts
; End of function LoadPalette2


; =============== S U B R O U T I N E =======================================


LoadPalette2_Immediate:
		lea	(PalPoint).l,a1
		lsl.w	#3,d0
		adda.w	d0,a1
		movea.l	(a1)+,a2
		movea.w	(a1)+,a3
		suba.w	#Normal_palette-Target_water_palette,a3
		move.w	(a1)+,d7

loc_3558:
		move.l	(a2)+,(a3)+
		dbf	d7,loc_3558
		rts
; End of function LoadPalette2_Immediate

; ---------------------------------------------------------------------------

Sega_Screen:
		move.b	#4,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

Title_Screen:
		moveq	#signextendB(mus_FadeOut),d0
		bsr.w	Play_Sound
		bsr.w	Clear_Nem_Queue
		bsr.w	Pal_FadeToBlack
		move	#$2700,sr
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$9011,(a6)
		move.w	#$9200,(a6)
		move.w	#$8B03,(a6)
		move.w	#$8700,(a6)
		clr.b	(Water_full_screen_flag).w
		move.w	#-$737F,(a6)
		bsr.w	Clear_DisplayData
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_35B2:
		move.l	d0,(a1)+
		dbf	d1,loc_35B2
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_35C2:
		move.l	d0,(a1)+
		dbf	d1,loc_35C2
		lea	(Tails_CPU_interact).w,a1
		moveq	#0,d0
		move.w	#$3F,d1

loc_35D2:
		move.l	d0,(a1)+
		dbf	d1,loc_35D2
		lea	(Camera_RAM).w,a1
		moveq	#0,d0
		move.w	#$3F,d1

loc_35E2:
		move.l	d0,(a1)+
		dbf	d1,loc_35E2
		jsr	(Init_SpriteTable).l
		lea	(Normal_palette).w,a1
		moveq	#0,d0
		move.w	#$3F,d1

loc_35F8:
		move.l	d0,(a1)+
		dbf	d1,loc_35F8
		move.b	#0,(Last_star_post_hit).w
		move.b	#0,(Special_bonus_entry_flag).w
		move.w	#0,(Debug_placement_mode).w
		move.w	#0,(Demo_mode_flag).w
		move.w	#0,(Palette_cycle_counter1).w
		move.w	#0,(Competition_mode).w
		move.b	#0,(Level_started_flag).w
		move.b	#0,(Debug_mode_flag).w
		move.w	#0,(Competition_mode).w
		move.w	#0,(Level_select_cheat_counter).w
		move.w	#0,(Debug_mode_cheat_counter).w
		move.w	#$167,(Demo_timer).w
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		lea	(ArtKos_S3TitleSonic1).l,a0
		lea	(RAM_start).l,a1
		bsr.w	Kos_Decomp
		move.w	a1,d3
		lsr.w	#1,d3
		move.l	#RAM_start,d1
		move.w	#0,d2
		andi.l	#$FFFFFF,d1
		jsr	(Add_To_DMA_Queue).l
		lea	(Level_layout_header).w,a1
		lea	(MapEni_S3TitleSonic1).l,a0
		move.w	#0,d0
		bsr.w	Eni_Decomp
		lea	(Level_layout_header).w,a1
		move.l	#$40000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(Pal_TitleSonic1).l,a0
		lea	(Target_palette).w,a1
		moveq	#7,d0

loc_36AE:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_36AE
		move.w	#$F0,(Demo_timer).w
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	Pal_FadeFromBlack
		moveq	#signextendB(mus_SEGA),d0
		bsr.w	Play_Sound
		move.w	#$B4,(Demo_timer).w

Wait_SegaS3K:
		move.b	#$14,(V_int_routine).w
		bsr.w	Wait_VSync
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.b	#-$80,d0
		bne.w	loc_36F8
		tst.w	(Demo_timer).w
		bne.s	Wait_SegaS3K

loc_36F8:
		moveq	#signextendB(mus_StopSEGA),d0
		bsr.w	Play_Sound
		lea	(Pal_Title).l,a1

loc_3704:
		move.b	#2,(V_int_routine).w
		bsr.w	Wait_VSync
		lea	(Normal_palette).w,a2
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		move.w	(a1)+,(a2)+
		tst.w	-$E(a1)
		bne.s	loc_3704
		clr.w	(_unkF660).w
		clr.w	(_unkF662).w
		move.b	#-1,(Title_anim_buffer).w
		move.b	#0,(Title_anim_delay).w
		move.w	#1,(Title_anim_frame).w
		moveq	#1,d0
		bsr.w	TitleSonic_LoadFrame
		move.w	#$384,(Demo_timer).w
		lea	(ArtKos_S3TitleSonic8).l,a1
		lea	(RAM_start).l,a2
		jsr	(Queue_Kos).l
		moveq	#signextendB(mus_TitleScreen),d0
		bsr.w	Play_Sound

Wait_TitleS3K:
		move.b	#4,(V_int_routine).w
		jsr	(Process_Kos_Queue).l
		bsr.w	Wait_VSync
		bsr.w	Iterate_TitleSonicFrame
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		bsr.w	Process_Nem_Queue_Init
		bsr.w	S3_Level_Select_Code
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.b	#-$80,d0
		bne.w	loc_379E
		cmpi.w	#$C,(Title_anim_frame).w
		bcs.s	Wait_TitleS3K

loc_379E:
		move.w	#$C,(Title_anim_frame).w
		lea	(Normal_palette).w,a1
		moveq	#$3F,d1

loc_37AA:
		move.w	#$EEE,(a1)+
		dbf	d1,loc_37AA
		move.b	#3,(Title_anim_delay).w
		move.b	#4,(V_int_routine).w
		bsr.w	Wait_VSync
		lea	(ArtKos_S3TitleSonicD).l,a0
		lea	(RAM_start).l,a1
		bsr.w	Kos_Decomp
		move.w	a1,d3
		lsr.w	#1,d3
		move.l	#RAM_start,d1
		move.w	#0,d2
		andi.l	#$FFFFFF,d1
		jsr	(Add_To_DMA_Queue).l
		lea	(Level_layout_header).w,a1
		lea	(MapEni_S3TitleSonicD).l,a0
		move.w	#$8000,d0
		bsr.w	Eni_Decomp
		lea	(Level_layout_header).w,a1
		move.l	#$40000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(Level_layout_header).w,a1
		lea	(MapEni_S3TitleBg).l,a0
		move.w	#$4000,d0
		bsr.w	Eni_Decomp
		lea	(Level_layout_header).w,a1
		move.l	#$60000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		move.b	#4,(V_int_routine).w
		bsr.w	Wait_VSync
		lea	(Pal_TitleSonicD).l,a0
		lea	(Target_palette).w,a1
		moveq	#$1F,d0

loc_384E:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_384E
		move.l	#$60000002,(VDP_control_port).l
		lea	(ArtNem_Title_S3Banner).l,a0
		bsr.w	Nem_Decomp
		move.l	#$50000003,(VDP_control_port).l
		lea	(ArtNem_TitleScreenText).l,a0
		bsr.w	Nem_Decomp
		move.l	#$40000002,(VDP_control_port).l
		lea	(ArtNem_Title_SonicSprites).l,a0
		bsr.w	Nem_Decomp
		move.l	#Obj_TitleBanner,(Player_1).w
		move.l	#Obj_TitleSelection,(Player_2).w
		move.l	#Obj_TitleCopyright,(Dynamic_object_RAM).w
		move.l	#Obj_TitleSonicFinger,(Dynamic_object_RAM+object_size).w
		move.l	#Obj_TitleSonicWink,(Dynamic_object_RAM+(object_size*2)).w
		move.l	#Obj_TitleTailsPlane,(Dynamic_object_RAM+(object_size*3)).w
		moveq	#0,d0
		bsr.w	Load_PLC_2
		nop
		nop
		nop
		nop
		nop
		nop
		move.b	#0,(Title_anim_delay).w

loc_38D8:
		move.b	#4,(V_int_routine).w
		bsr.w	Wait_VSync
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		bsr.w	Process_Nem_Queue_Init
		tst.l	(Reserved_object_3).w
		beq.s	loc_38D8
		tst.w	(Demo_timer).w
		beq.w	loc_3978
		move.b	(Ctrl_1_pressed).w,d0
		andi.b	#-$80,d0
		beq.w	loc_38D8
		move.b	#$C,(Game_mode).w
		move.b	#3,(Life_count).w
		move.b	#3,(Life_count_P2).w
		moveq	#0,d0
		move.w	d0,(Ring_count).w
		move.l	d0,(Timer).w
		move.l	d0,(Score).w
		move.w	d0,(Ring_count_P2).w
		move.l	d0,(Timer_P2).w
		move.l	d0,(Score_P2).w
		move.b	d0,(Continue_count).w
		move.l	#5000,(Next_extra_life_score).w
		move.l	#5000,(Next_extra_life_score_P2).w
		moveq	#signextendB(mus_FadeOut),d0
		bsr.w	Play_Sound_2
		moveq	#0,d0
		move.b	(Title_screen_option).w,d0
		bne.w	loc_3964
		move.b	#$4C,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_3964:
		subq.b	#1,d0
		bne.s	loc_3970
		move.b	#$38,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_3970:
		move.b	#$28,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_3978:
		moveq	#signextendB(mus_FadeOut),d0
		bsr.w	Play_Sound_2
		move.w	(Next_demo_number).w,d0
		andi.w	#7,d0
		add.w	d0,d0
		move.w	DemoLevels(pc,d0.w),d0
		move.w	d0,(Current_zone_and_act).w
		move.w	d0,(Apparent_zone_and_act).w
		move.w	d0,(Saved_zone_and_act).w
		addq.w	#1,(Next_demo_number).w
		cmpi.w	#3,(Next_demo_number).w
		bcs.s	loc_39AA
		move.w	#0,(Next_demo_number).w

loc_39AA:
		move.w	#1,(Demo_mode_flag).w
		move.b	#8,(Game_mode).w
		move.b	#3,(Life_count).w
		move.b	#3,(Life_count_P2).w
		moveq	#0,d0
		move.w	d0,(Ring_count).w
		move.l	d0,(Timer).w
		move.l	d0,(Score).w
		move.w	d0,(Ring_count_P2).w
		move.l	d0,(Timer_P2).w
		move.l	d0,(Score_P2).w
		move.l	#5000,(Next_extra_life_score).w
		move.l	#5000,(Next_extra_life_score_P2).w
		rts
; ---------------------------------------------------------------------------
DemoLevels:	dc.w 0
		dc.w $100
		dc.w $200

; =============== S U B R O U T I N E =======================================


TitleAnim_FlipBuffer:
		tst.b	(Title_anim_delay).w
		bne.s	loc_3A4E
		move.b	#3,(Title_anim_delay).w
		cmpi.w	#$C,(Title_anim_frame).w
		bcc.s	loc_3A54
		move.b	#3,(Title_anim_delay).w
		lea	(Target_palette).w,a0
		lea	(Normal_palette).w,a1
		moveq	#$F,d0

loc_3A18:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_3A18
		eori.b	#-1,(Title_anim_buffer).w
		tst.b	(Title_anim_buffer).w
		beq.s	loc_3A3C
		move.w	#$8406,(VDP_control_port).l
		move.w	#$8230,(VDP_control_port).l
		rts
; ---------------------------------------------------------------------------

loc_3A3C:
		move.w	#$8407,(VDP_control_port).l
		move.w	#$8238,(VDP_control_port).l
		rts
; ---------------------------------------------------------------------------

loc_3A4E:
		subq.b	#1,(Title_anim_delay).w
		rts
; ---------------------------------------------------------------------------

loc_3A54:
		lea	(Target_palette).w,a0
		lea	(Normal_palette).w,a1
		moveq	#$1F,d0

loc_3A5E:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_3A5E
		move.w	#$8407,(VDP_control_port).l
		move.w	#$8230,(VDP_control_port).l
		rts
; End of function TitleAnim_FlipBuffer


; =============== S U B R O U T I N E =======================================


Iterate_TitleSonicFrame:
		cmpi.b	#1,(Title_anim_delay).w
		bne.s	locret_3A92
		move.w	(Title_anim_frame).w,d0
		move.b	SonicFrameIndex(pc,d0.w),d0
		ext.w	d0
		bmi.s	loc_3A94
		bsr.w	TitleSonic_LoadFrame
		addq.w	#1,(Title_anim_frame).w

locret_3A92:
		rts
; ---------------------------------------------------------------------------

loc_3A94:
		move.w	#$C,(Title_anim_frame).w
		move.b	#3,(Title_anim_delay).w
		bra.w	locret_3AB0
; ---------------------------------------------------------------------------
SonicFrameIndex:dc.b    1,   2,   3,   4,   5,   6,   7,   8,   9,  $A,  $B, $FF
; ---------------------------------------------------------------------------

locret_3AB0:
		rts
; End of function Iterate_TitleSonicFrame

; ---------------------------------------------------------------------------
		move.b	(Title_anim_buffer).w,d2
		cmpi.b	#1,d2
		beq.s	locret_3B0A
		move.w	(V_scroll_amount).w,d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,(Camera_Y_pos).w
		move.w	(Camera_Y_pos).w,d0
		move.w	d0,(V_scroll_value).w
		move.b	#0,(Title_anim_buffer).w
		move.w	#$40,d1
		cmpi.w	#0,d0
		blt.s	loc_3AFC
		bne.s	loc_3AF2
		cmpi.w	#-$5B,(V_scroll_amount).w
		bne.s	loc_3AF2
		move.b	#1,(Title_anim_buffer).w
		bra.s	locret_3B0A
; ---------------------------------------------------------------------------

loc_3AF2:
		move.b	#-1,(Title_anim_buffer).w
		move.w	#-$40,d1

loc_3AFC:
		add.w	d1,(V_scroll_amount).w
		cmp.b	(Title_anim_buffer).w,d2
		beq.s	locret_3B0A
		asr	(V_scroll_amount).w

locret_3B0A:
		rts

; =============== S U B R O U T I N E =======================================


TitleSonic_LoadFrame:
		move.w	d0,d7
		add.w	d0,d0
		add.w	d0,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		lea	(TitleSonic_Frames).l,a2
		lea	(a2,d0.w),a2
		move.w	#$2C60,d3
		move.l	(a2)+,d0
		cmpi.w	#7,d7
		beq.s	loc_3B46
		bcs.s	loc_3B66
		andi.l	#$FFFFFF,d0
		movea.l	d0,a0
		lea	(RAM_start).l,a1
		bsr.w	Kos_Decomp
		move.w	a1,d3
		lsr.w	#1,d3

loc_3B46:
		move.l	#RAM_start,d1
		move.w	#0,d2
		tst.b	(Title_anim_buffer).w
		beq.s	loc_3B5A
		move.w	#$6000,d2

loc_3B5A:
		andi.l	#$FFFFFF,d1
		jsr	(Add_To_DMA_Queue).l

loc_3B66:
		movea.l	(a2)+,a0
		lea	(Target_palette).w,a1
		moveq	#$F,d0

loc_3B6E:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_3B6E
		tst.b	(Title_anim_buffer).w
		bne.s	loc_3BA6
		lea	(RAM_start+$8000).w,a1
		movea.l	(a2)+,a0
		move.w	#0,d0
		bsr.w	Eni_Decomp
		move	#$2700,sr
		lea	(RAM_start+$8000).w,a1
		move.l	#$40000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		move	#$2300,sr
		rts
; ---------------------------------------------------------------------------

loc_3BA6:
		lea	(Level_layout_header).w,a1
		movea.l	(a2)+,a0
		move.w	#$300,d0
		cmpi.w	#7,d7
		bcc.s	loc_3BBA
		move.w	#0,d0

loc_3BBA:
		bsr.w	Eni_Decomp
		move	#$2700,sr
		lea	(Level_layout_header).w,a1
		move.l	#$60000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		move	#$2300,sr
		rts
; End of function TitleSonic_LoadFrame

; ---------------------------------------------------------------------------
TitleSonic_Frames:
		dc.l ArtKos_S3TitleSonic1
		dc.l Pal_TitleSonic1
		dc.l MapEni_S3TitleSonic1
		dc.l ArtKos_S3TitleSonic1
		dc.l Pal_TitleSonic2
		dc.l MapEni_S3TitleSonic2
		dc.l ArtKos_S3TitleSonic1
		dc.l Pal_TitleSonic3
		dc.l MapEni_S3TitleSonic3
		dc.l ArtKos_S3TitleSonic1
		dc.l Pal_TitleSonic4
		dc.l MapEni_S3TitleSonic4
		dc.l ArtKos_S3TitleSonic1
		dc.l Pal_TitleSonic5
		dc.l MapEni_S3TitleSonic5
		dc.l ArtKos_S3TitleSonic1
		dc.l Pal_TitleSonic6
		dc.l MapEni_S3TitleSonic6
		dc.l ArtKos_S3TitleSonic1
		dc.l Pal_TitleSonic7
		dc.l MapEni_S3TitleSonic7
		dc.l ArtKos_S3TitleSonic8
		dc.l Pal_TitleSonic8
		dc.l MapEni_S3TitleSonic8
		dc.l ArtKos_S3TitleSonic9
		dc.l Pal_TitleSonic9
		dc.l MapEni_S3TitleSonic9
		dc.l ArtKos_S3TitleSonicA
		dc.l Pal_TitleSonicA
		dc.l MapEni_S3TitleSonicA
		dc.l ArtKos_S3TitleSonicB
		dc.l Pal_TitleSonicB
		dc.l MapEni_S3TitleSonicB
		dc.l ArtKos_S3TitleSonicC
		dc.l Pal_TitleSonicC
		dc.l MapEni_S3TitleSonicC
		dc.l ArtKos_S3TitleSonicD
		dc.l Pal_TitleSonicD
		dc.l MapEni_S3TitleSonicD
Pal_Title:	binclude "General/Title/Palettes/S3.bin"
		even
Pal_TitleSonic1:binclude "General/Title/Palettes/S3 Sonic 1.bin"
		even
Pal_TitleSonic2:binclude "General/Title/Palettes/S3 Sonic 2.bin"
		even
Pal_TitleSonic3:binclude "General/Title/Palettes/S3 Sonic 3.bin"
		even
Pal_TitleSonic4:binclude "General/Title/Palettes/S3 Sonic 4.bin"
		even
Pal_TitleSonic5:binclude "General/Title/Palettes/S3 Sonic 5.bin"
		even
Pal_TitleSonic6:binclude "General/Title/Palettes/S3 Sonic 6.bin"
		even
Pal_TitleSonic7:binclude "General/Title/Palettes/S3 Sonic 7.bin"
		even
Pal_TitleSonic8:binclude "General/Title/Palettes/S3 Sonic 8.bin"
		even
Pal_TitleSonic9:binclude "General/Title/Palettes/S3 Sonic 9.bin"
		even
Pal_TitleSonicA:binclude "General/Title/Palettes/S3 Sonic A.bin"
		even
Pal_TitleSonicB:binclude "General/Title/Palettes/S3 Sonic B.bin"
		even
Pal_TitleSonicC:binclude "General/Title/Palettes/S3 Sonic C.bin"
		even
Pal_TitleSonicD:binclude "General/Title/Palettes/S3 Sonic D.bin"
		even
; ---------------------------------------------------------------------------

Obj_TitleBanner:
		move.l	#Map_S3TitleBanner,$C(a0)
		move.w	#$E500,$A(a0)
		move.w	#$80,8(a0)
		move.b	#$80,7(a0)
		move.b	#$40,6(a0)
		move.w	#$120,$10(a0)
		move.w	#$F0,$14(a0)
		move.w	#$400,$1A(a0)
		move.l	#-$600000,$30(a0)
		move.l	#Obj_TitleBanner_Main,(a0)

Obj_TitleBanner_Main:
		move.b	$34(a0),d2
		move.w	$1A(a0),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$30(a0)
		move.w	$30(a0),d0
		move.b	#0,$34(a0)
		move.w	#$40,d1
		cmpi.w	#0,d0
		blt.s	loc_3F90
		bne.s	loc_3F86
		cmpi.w	#-$5B,$1A(a0)
		bne.s	loc_3F86
		move.l	#Obj_TitleBanner_Display,(a0)
		move.l	#Obj_TitleTM,(Reserved_object_3).w
		bra.s	loc_3F9E
; ---------------------------------------------------------------------------

loc_3F86:
		move.b	#-1,$34(a0)
		move.w	#-$40,d1

loc_3F90:
		add.w	d1,$1A(a0)
		cmp.b	$34(a0),d2
		beq.s	loc_3F9E
		asr	$1A(a0)

loc_3F9E:
		move.w	$30(a0),d0
		neg.w	d0
		addi.w	#$F0,d0
		move.w	d0,$14(a0)

Obj_TitleBanner_Display:
		subq.b	#1,$24(a0)
		bpl.s	loc_3FC2
		move.b	#9,$24(a0)
		addq.b	#4,$23(a0)
		andi.b	#$1C,$23(a0)

loc_3FC2:
		moveq	#0,d0
		move.b	$23(a0),d0
		move.l	Pal_TitleWaterRot(pc,d0.w),(Target_palette_line_3+$1A).w
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Pal_TitleWaterRot:
		binclude "General/Title/Palettes/S3 Water Anim.bin"
		even
; ---------------------------------------------------------------------------

Obj_TitleTM:
		move.l	#Map_S3TitleBanner,$C(a0)
		move.w	#$E500,$A(a0)
		move.w	#$188,$10(a0)
		move.w	#$108,$14(a0)
		move.w	#$80,8(a0)
		move.b	#$C,7(a0)
		move.b	#4,6(a0)
		move.b	#1,$22(a0)
		move.l	#Obj_TitleTM_Display,(a0)

Obj_TitleTM_Display:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

OldDebugCode:
		lea	(OldDebugCodeDat).l,a1
		move.w	(Debug_mode_cheat_counter).w,d0
		adda.w	d0,a1
		move.b	(Ctrl_1_pressed_title).w,d0
		andi.b	#$7F,d0
		beq.s	locret_406C
		move.b	(Ctrl_1_held_title).w,d0
		cmp.b	(a1),d0
		bne.s	loc_4066
		addq.w	#1,(Debug_mode_cheat_counter).w
		tst.b	1(a1)
		bne.s	locret_406C
		move.w	#$101,(Debug_cheat_flag).w
		moveq	#signextendB(sfx_RingLoss),d0
		bsr.w	Play_Sound_2

loc_4066:
		move.w	#0,(Debug_mode_cheat_counter).w

locret_406C:
		rts
; ---------------------------------------------------------------------------
OldDebugCodeDat:dc.b $20
		dc.b $30
		dc.b $70
		dc.b $10
		dc.b $50
		dc.b $70
		dc.b $40
		dc.b $60
		dc.b $70
		dc.b $71
		dc.b $72
		dc.b 0
; ---------------------------------------------------------------------------

Obj_TitleCopyright:
		move.l	#Map_TitleScreenText,$C(a0)
		move.w	#$E680,$A(a0)
		move.w	#$158,$10(a0)
		move.w	#$14C,$14(a0)
		move.w	#$80,8(a0)
		move.b	#$C,7(a0)
		move.b	#4,6(a0)
		move.b	#3,$22(a0)
		move.l	#Obj_TitleCopyright_Display,(a0)

Obj_TitleCopyright_Display:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_TitleSelection:
		move.w	#$F0,$10(a0)
		move.w	#$140,$14(a0)
		move.l	#Map_TitleScreenText,$C(a0)
		move.w	#$C680,$A(a0)
		andi.b	#1,(Title_screen_option).w
		move.b	(Title_screen_option).w,$22(a0)
		move.l	#Obj_TitleSelection_Main,(a0)

Obj_TitleSelection_Main:
		moveq	#0,d2
		move.b	(Title_screen_option).w,d2
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		btst	#0,d0
		beq.s	loc_410A
		subq.b	#1,d2
		bcc.s	loc_410A
		move.b	#2,d2
		tst.b	(Level_select_flag).w
		bne.s	loc_410A
		move.b	#1,d2

loc_410A:
		btst	#1,d0
		beq.s	loc_4124
		addq.b	#1,d2
		tst.b	(Level_select_flag).w
		bne.s	loc_411C
		andi.b	#1,d2

loc_411C:
		cmpi.b	#3,d2
		bcs.s	loc_4124
		moveq	#0,d2

loc_4124:
		move.b	d2,$22(a0)
		move.b	d2,(Title_screen_option).w
		andi.b	#3,d0
		beq.s	loc_413A
		moveq	#signextendB(sfx_Switch),d0
		jsr	(Play_Sound_2).l

loc_413A:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_TitleSonicFinger:
		move.l	#Map_TitleSonicAnim,$C(a0)
		move.w	#$A400,$A(a0)
		move.w	#$148,$10(a0)
		move.w	#$DC,$14(a0)
		move.w	#$180,8(a0)
		move.b	#$18,7(a0)
		move.b	#$1C,6(a0)
		move.l	#Obj_TitleSonicFinger_Display,(a0)

Obj_TitleSonicFinger_Display:
		lea	(Ani_TitleSonicFinger).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Ani_TitleSonicFinger:
		include "General/Title/Anim - S3 Sonic Finger.asm"
; ---------------------------------------------------------------------------

Obj_TitleSonicWink:
		move.l	#Map_TitleSonicAnim,$C(a0)
		move.w	#$A400,$A(a0)
		move.w	#$F8,$10(a0)
		move.w	#$C8,$14(a0)
		move.w	#$180,8(a0)
		move.b	#$10,7(a0)
		move.b	#$18,6(a0)
		move.l	#Obj_TitleSonicWink_Display,(a0)

Obj_TitleSonicWink_Display:
		lea	(Ani_TitleSonicWink).l,a1
		jsr	(Animate_SpriteIrregularDelay).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Ani_TitleSonicWink:
		include "General/Title/Anim - S3 Sonic Wink.asm"
; ---------------------------------------------------------------------------

Obj_TitleTailsPlane:
		move.l	#Map_TitleTailsPlane,$C(a0)
		move.w	#$6400,$A(a0)
		move.w	#0,$10(a0)
		move.w	#$C0,$14(a0)
		move.w	#$380,8(a0)
		move.b	#$18,7(a0)
		move.b	#8,6(a0)
		move.l	#loc_4228,(a0)

loc_4228:
		tst.b	$30(a0)
		bne.s	loc_424E
		addq.w	#1,$10(a0)
		cmpi.w	#$240,$10(a0)
		bne.s	loc_424C
		move.b	#1,$30(a0)
		bset	#0,$2A(a0)
		move.w	#$D0,$14(a0)

loc_424C:
		bra.s	loc_426C
; ---------------------------------------------------------------------------

loc_424E:
		subq.w	#1,$10(a0)
		cmpi.w	#0,$10(a0)
		bne.s	loc_426C
		move.b	#0,$30(a0)
		bclr	#0,$2A(a0)
		move.w	#$C0,$14(a0)

loc_426C:
		lea	(Ani_TitleTailsPlane).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Ani_TitleTailsPlane:
		include "General/Title/Anim - S3 Tails Plane.asm"

; =============== S U B R O U T I N E =======================================


S3_Level_Select_Code:
		lea	(LSelect3CodeDat).l,a1
		move.w	(Level_select_cheat_counter).w,d0
		adda.w	d0,a1
		move.b	(Ctrl_1_pressed_title).w,d0
		andi.b	#$7F,d0
		beq.s	locret_42C8
		move.b	(Ctrl_1_held_title).w,d0
		cmp.b	(a1),d0
		bne.s	loc_42C2
		addq.w	#1,(Level_select_cheat_counter).w
		tst.b	1(a1)
		bne.s	locret_42C8
		move.w	#$101,(Level_select_flag).w
		move.w	#$101,(Debug_cheat_flag).w
		moveq	#signextendB(sfx_RingRight),d0
		bsr.w	Play_Sound_2

loc_42C2:
		move.w	#0,(Level_select_cheat_counter).w

locret_42C8:
		rts
; End of function S3_Level_Select_Code

; ---------------------------------------------------------------------------
LSelect3CodeDat:dc.b 1
		dc.b 1
		dc.b 2
		dc.b 2
		dc.b 1
		dc.b 1
		dc.b 1
		dc.b 1
		dc.b 0
		dc.b 0
Map_TitleScreenText:
		include "General/Title/Map - S3 Screen Text.asm"
ArtNem_TitleScreenText:
		binclude "General/Title/Nemesis Art/S3 Screen Text.bin"
		even
Map_TitleSonicAnim:
		include "General/Title/Map - S3 Sonic Anim.asm"
Map_TitleTailsPlane:
		include "General/Title/Map - S3 Tails Plane.asm"
LevelMusic_Playlist:
	dc.b mus_AIZ1,		mus_AIZ2	; ANGEL ISLAND ZONE
	dc.b mus_HCZ1,		mus_HCZ2	; HYDROCITY ZONE ACT
	dc.b mus_MGZ1,		mus_MGZ2	; MARBLE GARDEN ZONE
	dc.b mus_CNZ1,		mus_CNZ2	; CARNIVAL NIGHT ZONE
	dc.b mus_FBZ1,		mus_FBZ2	; FLYING BATTERY ZONE
	dc.b mus_ICZ1,		mus_ICZ2	; ICE CAP ZONE
	dc.b mus_LBZ1,		mus_LBZ2	; LAUNCH BASE ZONE
	dc.b mus_MHZ1,		mus_MHZ2	; MUSHROOM HILL ZONE
	dc.b mus_SOZ1,		mus_SOZ2	; SANDOPOLIS ZONE
	dc.b mus_LRZ1,		mus_HPZ		; LAVA REEF ZONE
	dc.b mus_SSZ,		mus_DEZ1	; SKY SANCTUARY ZONE
	dc.b mus_DEZ2,		mus_DEZ2	; DEATH EGG ZONE
	dc.b mus_DDZ,		mus_DDZ		; DOOMSDAY ZONE
	dc.b mus_SpecialStage, 	mus_SpecialStage; AIZ INTRO & ENDING
	dc.b mus_ALZ,		mus_ALZ		; AZURE LAKE ZONE
	dc.b mus_BPZ,		mus_BPZ		; BALLOON PARK ZONE
	dc.b mus_DPZ,		mus_DPZ		; DESERT PALACE ZONE
	dc.b mus_CGZ,		mus_CGZ		; CHROME GADGET ZONE
	dc.b mus_EMZ,		mus_EMZ		; ENDLESS MINE ZONE
	dc.b mus_Gumball,	mus_Gumball	; GUMBALL
	dc.b mus_SlotMachine,	mus_SlotMachine	; PACHINKO?
	dc.b mus_Gumball,	mus_Gumball	; SLOTS?
	dc.b mus_SpecialStage, 	mus_SpecialStage; LAVA REEF ZONE BOSS & HIDDEN PALACE ZONE
	dc.b mus_SpecialStage, 	mus_SpecialStage; FINAL BOSS & SPECIAL STAGE?
	even
; ---------------------------------------------------------------------------

Level:
		bset	#7,(Game_mode).w
		tst.w	(Demo_mode_flag).w
		bmi.s	loc_46C2
		moveq	#signextendB(mus_FadeOut),d0
		bsr.w	Play_Sound_2

loc_46C2:
		clr.w	(Kos_decomp_queue_count).w
		lea	(Kos_decomp_stored_registers).w,a1
		moveq	#0,d0
		move.w	#$1A,d1

loc_46D0:
		move.l	d0,(a1)+
		dbf	d1,loc_46D0
		bsr.w	Clear_Nem_Queue
		bsr.w	Pal_FadeToBlack
		tst.w	(Demo_mode_flag).w
		bmi.w	loc_479A
		move	#$2700,sr
		bsr.w	Clear_DisplayData
		move	#$2300,sr
		moveq	#0,d0
		move.w	d0,(Level_frame_counter).w
		tst.b	(Last_star_post_hit).w
		beq.s	loc_471E
		tst.b	(Special_bonus_entry_flag).w
		bne.s	loc_4712
		move.w	(Saved_zone_and_act).w,(Current_zone_and_act).w
		move.w	(Saved_apparent_zone_and_act).w,(Apparent_zone_and_act).w
		bra.s	loc_471E
; ---------------------------------------------------------------------------

loc_4712:
		move.w	(Saved2_zone_and_act).w,(Current_zone_and_act).w
		move.w	(Saved2_apparent_zone_and_act).w,(Apparent_zone_and_act).w

loc_471E:
		move.w	(Current_zone_and_act).w,d0
		bne.s	loc_4736
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_4732
		tst.b	(Last_star_post_hit).w
		beq.s	loc_4736

loc_4732:
		move.w	#$D00,d0

loc_4736:
		ror.b	#1,d0
		lsr.w	#4,d0
		andi.w	#$1F8,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d0,d1
		lea	(LevelLoadBlock).l,a2
		moveq	#0,d0
		move.b	(a2,d1.w),d0
		beq.s	loc_4756
		bsr.w	Load_PLC

loc_4756:
		bsr.w	LevelLoad_ActiveCharacter
		tst.b	(Last_star_post_hit).w
		bne.w	loc_4782
		cmpi.w	#0,(Current_zone_and_act).w
		bne.s	loc_4782
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_4782
		moveq	#1,d0
		jsr	(Load_PLC_2).l
		moveq	#$A,d0
		bsr.w	Load_PLC
		bra.s	loc_479A
; ---------------------------------------------------------------------------

loc_4782:
		moveq	#6,d0
		tst.w	(Competition_mode).w
		bne.s	loc_4796
		moveq	#1,d0
		cmpi.w	#2,(Player_mode).w
		bne.s	loc_4796
		moveq	#7,d0

loc_4796:
		bsr.w	Load_PLC

loc_479A:
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_47A4:
		move.l	d0,(a1)+
		dbf	d1,loc_47A4
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_47B4:
		move.l	d0,(a1)+
		dbf	d1,loc_47B4
		lea	(Lag_frame_count).w,a1
		moveq	#0,d0
		move.w	#$15,d1

loc_47C4:
		move.l	d0,(a1)+
		dbf	d1,loc_47C4
		lea	(Tails_CPU_interact).w,a1
		moveq	#0,d0
		move.w	#$3F,d1

loc_47D4:
		move.l	d0,(a1)+
		dbf	d1,loc_47D4
		lea	(Oscillating_table).w,a1
		moveq	#0,d0
		move.w	#$12,d1

loc_47E4:
		move.l	d0,(a1)+
		dbf	d1,loc_47E4
		lea	(_unkFA80).w,a1
		moveq	#0,d0
		move.w	#$1F,d1

loc_47F4:
		move.l	d0,(a1)+
		dbf	d1,loc_47F4

loc_47FA:
		jsr	(Init_SpriteTable).l
		lea	(VDP_control_port).l,a6
		move.w	#$8B03,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$857C,(a6)
		move.w	#$9001,(a6)
		move.w	#$8004,(a6)
		move.w	#$9200,(a6)
		move.w	#$8720,(a6)
		move.w	#$8C81,(a6)
		tst.b	(Debug_cheat_flag).w
		beq.s	loc_484A
		btst	#5,(Ctrl_1_held).w
		beq.s	loc_483C
		move.w	#-$7377,(a6)

loc_483C:
		btst	#6,(Ctrl_1_held).w
		beq.s	loc_484A
		move.b	#1,(Debug_mode_flag).w

loc_484A:
		move.w	#$8AFF,(H_int_counter_command).w
		tst.w	(Competition_mode).w
		beq.s	loc_4886
		move.w	#$4EF9,(H_int_jump).w
		move.l	#HInt,(H_int_addr).w
		move.w	#$8014,(a6)
		move.w	#$8220,(a6)
		move.w	#$8405,(a6)
		move.w	#$8A6B,(H_int_counter_command).w
		move.w	#$9003,(a6)
		cmpi.b	#$F,(Current_zone).w
		bne.s	loc_4886
		move.w	#$9011,(a6)

loc_4886:
		move.w	(H_int_counter_command).w,(a6)
		clr.w	(DMA_queue).w
		move.l	#-$500,(DMA_queue_slot).w
		moveq	#3,d0
		bsr.w	LoadPalette_Immediate
		bsr.w	CheckLevelForWater
		lea	(Water_palette_line_2).w,a1
		moveq	#0,d0
		move.w	#$17,d1

loc_48AA:
		move.l	d0,(a1)+
		dbf	d1,loc_48AA
		tst.b	(Water_flag).w
		beq.s	loc_48BA
		move.w	#$8014,(a6)

loc_48BA:
		tst.w	(Demo_mode_flag).w
		bmi.w	loc_4942
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#7,d0
		lea	(LevelMusic_Playlist).l,a1
		move.b	(a1,d0.w),d0
		move.w	d0,(Level_music).w
		bsr.w	Play_Sound
		tst.w	(Current_zone_and_act).w
		bne.s	loc_48F2
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_48F2
		tst.b	(Last_star_post_hit).w
		beq.s	loc_4934

loc_48F2:
		cmpi.b	#$15,(Current_zone).w
		bhi.s	loc_4934
		move.l	#Obj_TitleCard,(Dynamic_object_RAM+(object_size*5)).w

loc_4902:
		move.b	#$C,(V_int_routine).w
		jsr	(Process_Kos_Queue).l
		bsr.w	Wait_VSync
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		bsr.w	Process_Nem_Queue_Init
		jsr	(Process_Kos_Module_Queue).l
		tst.w	(Dynamic_object_RAM+(object_size*5)+objoff_48).w
		bne.s	loc_4902
		tst.l	(Nem_decomp_queue).w
		bne.s	loc_4902

loc_4934:
		move	#$2700,sr
		jsr	(HUD_DrawInitial).l
		move	#$2300,sr

loc_4942:
		moveq	#3,d0
		bsr.w	LoadPalette
		jsr	(Get_LevelSizeStart).l
		jsr	(DeformBgLayer).l
		bsr.w	LoadLevelLoadBlock
		jsr	(LoadLevelLoadBlock2).l
		move	#$2700,sr
		jsr	(j_LevelSetup).l
		move	#$2300,sr
		jsr	(Animate_Init).l
		jsr	(nullsub_4).l
		bsr.w	LoadSolids
		bsr.w	Handle_Onscreen_Water_Height
		move.w	(Ctrl_2).w,(_unkFF7C).w
		move.w	#0,(Ctrl_1_logical).w
		move.w	#0,(Ctrl_2_logical).w
		move.w	#0,(Ctrl_1).w
		move.w	#0,(Ctrl_2).w
		move.b	#1,(Ctrl_1_locked).w
		move.b	#1,(Ctrl_2_locked).w
		move.b	#0,(Level_started_flag).w
		tst.b	(Water_flag).w
		beq.s	loc_49DC
		cmpi.b	#1,(Current_zone).w
		beq.s	loc_49C6
		cmpi.b	#1,(Current_zone).w
		bne.s	loc_49DC

loc_49C6:
		move.l	#Obj_HCZWaveSplash,(Wave_Splash).w
		move.l	#Obj_HCZWaterSplash,(Dynamic_object_RAM+(object_size*2)).w
		move.b	#1,(Dynamic_object_RAM+(object_size*2)+subtype).w

loc_49DC:
		moveq	#0,d0
		tst.b	(Last_star_post_hit).w
		bne.s	loc_4A0C
		move.w	d0,(Ring_count).w
		move.l	d0,(Timer).w
		move.b	d0,(Extra_life_flags).w
		move.w	d0,(Ring_count_P2).w
		move.l	d0,(Timer_P2).w
		move.b	d0,(Saved2_status_secondary).w
		move.b	d0,(Saved_status_secondary).w
		cmpi.b	#$13,(Current_zone).w
		bcc.s	loc_4A0C
		move.b	d0,(Respawn_table_keep).w

loc_4A0C:
		move.b	d0,(Time_over_flag).w
		move.w	d0,(Debug_placement_mode).w
		move.w	d0,(Restart_level_flag).w
		move.b	d0,(Teleport_active_timer).w
		move.b	d0,(Teleport_active_flag).w
		move.w	d0,(Total_ring_count).w
		move.w	d0,(Total_ring_count_P2).w
		move.w	d0,(Monitors_broken).w
		move.w	d0,(Monitors_broken_P2).w
		move.w	d0,(_unkFEDE).w
		move.b	d0,(LRZ_rocks_routine).w
		bsr.w	sub_58F4
		move.b	#1,(Update_HUD_score).w
		move.b	#1,(Update_HUD_ring_count).w
		move.b	#1,(Update_HUD_timer).w
		move.b	#1,(Level_started_flag).w
		bsr.w	SpawnLevelMainSprites
		jsr	(Load_Sprites).l
		jsr	(Load_Rings).l
		jsr	(S2_SpecialCNZBumpers).l
		jsr	(nullsub_5).l
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		jsr	(Animate_Tiles).l
		move.w	#$708,(Demo_timer).w
		tst.w	(Demo_mode_flag).w
		bpl.s	loc_4AA2
		move.w	#$21C,(Demo_timer).w
		cmpi.w	#4,(Ending_demo_number).w
		bne.s	loc_4AA2
		move.w	#$1FE,(Demo_timer).w

loc_4AA2:
		bsr.w	LoadWaterPalette
		lea	(Water_palette_line_2).w,a1
		moveq	#0,d0
		move.w	#$17,d1

loc_4AB0:
		move.l	d0,(a1)+
		dbf	d1,loc_4AB0
		move.b	#0,(Ctrl_1_locked).w
		move.b	#0,(Ctrl_2_locked).w
		jsr	GetDemoPtr(pc)
		tst.w	(Competition_mode).w
		bne.w	loc_4C1C
		tst.w	(Current_zone_and_act).w
		bne.s	loc_4ADA
		tst.b	(Last_star_post_hit).w
		beq.s	loc_4AE8

loc_4ADA:
		cmpi.b	#$E,(Current_zone).w
		bcc.s	loc_4AE8
		jsr	(PLCLoad_AnimalsAndExplosion).l

loc_4AE8:
		move.w	#$202F,(Palette_fade_info).w
		jsr	(Pal_FillBlack).l
		move.w	#$16,(Palette_fade_timer).w
		move.w	#$16,(Dynamic_object_RAM+(object_size*5)+objoff_2E).w
		andi.b	#$7F,(Last_star_post_hit).w
		bclr	#7,(Game_mode).w

LevelLoop:
		bsr.w	Pause_Game
		move.b	#8,(V_int_routine).w
		jsr	(Process_Kos_Queue).l
		bsr.w	Wait_VSync
		addq.w	#1,(Level_frame_counter).w
		bsr.w	Demo_PlayRecord
		jsr	(Animate_Palette).l
		jsr	(SpecialEvents).l
		jsr	(Process_Sprites).l
		tst.w	(Restart_level_flag).w
		bne.w	Level
		jsr	(DeformBgLayer).l
		jsr	(ScreenEvents).l
		bsr.w	Handle_Onscreen_Water_Height
		bsr.w	nullsub_3
		jsr	(Load_Rings).l
		jsr	(Animate_Tiles).l
		bsr.w	Process_Nem_Queue_Init
		jsr	(Process_Kos_Module_Queue).l
		bsr.w	sub_594A
		bsr.w	sub_59E0
		jsr	(Render_Sprites).l
		jsr	(Load_Sprites).l
		cmpi.b	#8,(Game_mode).w
		beq.s	DemoMode
		cmpi.b	#$C,(Game_mode).w
		beq.w	LevelLoop
		rts
; ---------------------------------------------------------------------------

DemoMode:
		tst.w	(Restart_level_flag).w
		bne.s	loc_4BB2
		tst.w	(Demo_timer).w
		beq.s	loc_4BB2
		cmpi.b	#8,(Game_mode).w
		beq.w	LevelLoop
		move.b	#0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_4BB2:
		cmpi.b	#8,(Game_mode).w
		bne.s	loc_4BC2
		move.b	#0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_4BC2:
		move.w	#$3C,(Demo_timer).w
		move.w	#$3F,(Palette_fade_info).w
		clr.w	(Pal_fade_delay).w

loc_4BD2:
		move.b	#8,(V_int_routine).w
		bsr.w	Wait_VSync
		bsr.w	Demo_PlayRecord
		jsr	(Process_Sprites).l
		jsr	(DeformBgLayer).l
		jsr	(ScreenEvents).l
		jsr	(Render_Sprites).l
		jsr	(Load_Sprites).l
		jsr	(Process_Kos_Module_Queue).l
		subq.w	#1,(Pal_fade_delay).w
		bpl.s	loc_4C14
		move.w	#2,(Pal_fade_delay).w
		bsr.w	Pal_ToBlack

loc_4C14:
		tst.w	(Demo_timer).w
		bne.s	loc_4BD2
		rts
; ---------------------------------------------------------------------------

loc_4C1C:
		move.w	#0,(_unkFF7E).w
		tst.b	(Debug_cheat_flag).w
		beq.s	loc_4C3C
		move.b	(_unkFF7C).w,d0
		cmpi.b	#$A0,d0
		bne.s	loc_4C3C
		move.w	(Sound_test_sound).w,d0
		lsl.w	#8,d0
		move.w	d0,(_unkFF7E).w

loc_4C3C:
		move.w	#$3F,(Palette_fade_info).w
		jsr	(Pal_FillBlack).l
		move.w	#$16,(Palette_fade_timer).w
		move.w	#0,(_unkFF7C).w
		bclr	#7,(Game_mode).w

loc_4C5A:
		bsr.w	Pause_Game
		move.b	#8,(V_int_routine).w
		jsr	(Process_Kos_Queue).l
		bsr.w	Wait_VSync
		addq.w	#1,(Level_frame_counter).w
		move.w	#4,-(sp)
		bra.s	loc_4CBC
; ---------------------------------------------------------------------------

loc_4C78:
		move.w	(_unkFF7E).w,d0
		add.w	d0,(_unkFF7C).w
		bcc.s	loc_4CCC
		bsr.w	Pause_Game
		move.w	#$100,(Z80_bus_request).l
		bsr.w	Poll_Controllers
		move.w	#0,(Z80_bus_request).l
		move.w	#0,(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		lea	(Sprite_table_input).w,a5

loc_4CAC:
		move.w	#0,(a5)
		lea	$80(a5),a5
		cmpa.l	#Player_1,a5
		bcs.s	loc_4CAC

loc_4CBC:
		bsr.w	Demo_PlayRecord
		jsr	(Process_Sprites).l
		jsr	(DeformBgLayer).l

loc_4CCC:
		subq.w	#1,(sp)
		bne.s	loc_4C78
		addq.w	#2,sp
		tst.w	(Restart_level_flag).w
		bne.w	Level
		jsr	(ScreenEvents).l
		jsr	(Animate_Tiles).l
		jsr	(Render_Sprites).l
		jsr	(Animate_Palette).l
		bsr.w	Process_Nem_Queue_Init
		jsr	(Process_Kos_Module_Queue).l
		cmpi.b	#8,(Game_mode).w
		beq.s	loc_4D10
		cmpi.b	#$C,(Game_mode).w
		beq.w	loc_4C5A
		rts
; ---------------------------------------------------------------------------

loc_4D10:
		tst.w	(Restart_level_flag).w
		bne.s	loc_4D2E
		tst.w	(Demo_timer).w
		beq.s	loc_4D2E
		cmpi.b	#8,(Game_mode).w
		beq.w	loc_4C5A
		move.b	#0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_4D2E:
		cmpi.b	#8,(Game_mode).w
		bne.s	loc_4D3E
		move.b	#0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_4D3E:
		move.w	#$3C,(Demo_timer).w
		move.w	#$3F,(Palette_fade_info).w
		clr.w	(Pal_fade_delay).w

loc_4D4E:
		move.b	#8,(V_int_routine).w
		bsr.w	Wait_VSync
		bsr.w	Demo_PlayRecord
		jsr	(Process_Sprites).l
		jsr	(DeformBgLayer).l
		jsr	(ScreenEvents).l
		jsr	(Render_Sprites).l
		jsr	(Load_Sprites).l
		jsr	(Process_Kos_Module_Queue).l
		subq.w	#1,(Pal_fade_delay).w
		bpl.s	loc_4D90
		move.w	#2,(Pal_fade_delay).w
		bsr.w	Pal_ToBlack

loc_4D90:
		tst.w	(Demo_timer).w
		bne.s	loc_4D4E
		rts

; =============== S U B R O U T I N E =======================================


LevelLoad_ActiveCharacter:
		cmpi.b	#$88,(Game_mode).w
		beq.s	loc_4DAE
		tst.w	(Competition_mode).w
		bne.s	loc_4DAE
		move.w	(Player_option).w,(Player_mode).w
		rts
; ---------------------------------------------------------------------------

loc_4DAE:
		move.w	#0,(Player_mode).w
		rts
; End of function LevelLoad_ActiveCharacter


; =============== S U B R O U T I N E =======================================


SpawnLevelMainSprites:
		move.l	#Obj_Level_50B2,(Reserved_object_3).w
		bsr.w	SpawnLevelMainSprites_SpawnPlayers
		bsr.w	SpawnLevelMainSprites_SpawnPowerup
		tst.b	(Last_star_post_hit).w
		bne.w	locret_4EC6
		tst.b	(Special_bonus_entry_flag).w

loc_4DD2:
		bne.w	locret_4EC6
		lea	(Player_1).w,a1
		lea	(Player_2).w,a2
		cmpi.w	#0,(Current_zone_and_act).w
		bne.s	loc_4DFE
		cmpi.w	#2,(Player_mode).w
		beq.s	locret_4DFC
		move.l	#Obj_AIZPlaneIntro,(Dynamic_object_RAM+(object_size*2)).w
		clr.b	(Level_started_flag).w
		rts
; ---------------------------------------------------------------------------

locret_4DFC:
		rts
; ---------------------------------------------------------------------------

loc_4DFE:
		cmpi.w	#$100,(Current_zone_and_act).w
		bne.s	loc_4E36
		move.b	#$1B,$20(a1)
		bset	#1,$2A(a1)
		cmpi.w	#2,(Player_mode).w
		bne.s	loc_4E20
		move.b	#1,$40(a1)

loc_4E20:
		tst.l	(a2)
		beq.s	loc_4E36
		move.b	#$1B,$20(a2)
		bset	#1,$2A(a2)
		move.b	#1,$40(a2)

loc_4E36:
		cmpi.w	#$200,(Current_zone_and_act).w
		bne.s	loc_4E5A
		move.b	#$1B,$20(a1)
		bset	#1,$2A(a1)
		tst.l	(a2)
		beq.s	loc_4E5A
		move.b	#$1B,$20(a2)
		bset	#1,$2A(a2)

loc_4E5A:
		cmpi.w	#$300,(Current_zone_and_act).w
		bne.s	loc_4E94
		cmpi.w	#1,(Player_mode).w
		bne.s	loc_4E86
		move.l	#Obj_Tails,(Player_2).w
		move.w	(Player_1+x_pos).w,(Player_2+x_pos).w
		move.w	(Player_1+y_pos).w,(Player_2+y_pos).w
		move.w	#0,(Tails_CPU_routine).w
		bra.s	loc_4E94
; ---------------------------------------------------------------------------

loc_4E86:
		cmpi.w	#2,(Player_mode).w
		bne.s	loc_4E94
		move.w	#$20,(Tails_CPU_routine).w

loc_4E94:
		cmpi.w	#$500,(Current_zone_and_act).w
		bne.s	loc_4EB6
		cmpi.w	#2,(Player_mode).w
		bcs.s	loc_4EAE
		move.l	#Obj_LevelIntroICZ1Tails,(Dynamic_object_RAM+(object_size*2)).w
		bra.s	loc_4EB6
; ---------------------------------------------------------------------------

loc_4EAE:
		move.l	#Obj_LevelIntroICZ1,(Dynamic_object_RAM+(object_size*2)).w

loc_4EB6:
		cmpi.w	#$600,(Current_zone_and_act).w
		bne.s	locret_4EC6
		move.l	#Obj_LevelIntro_PlayerLaunchFromGround,(Dynamic_object_RAM+(object_size*2)).w

locret_4EC6:
		rts
; End of function SpawnLevelMainSprites


; =============== S U B R O U T I N E =======================================


SpawnLevelMainSprites_SpawnPowerup:
		cmpi.b	#$E,(Current_zone).w
		bcc.s	locret_4EF0
		lea	(Player_1).w,a1
		move.b	(Saved_status_secondary).w,d0
		clr.b	(Saved_status_secondary).w

loc_4EDC:
		andi.b	#$70,d0
		bne.s	loc_4EF2
		move.b	(Saved2_status_secondary).w,d0
		clr.b	(Saved2_status_secondary).w

loc_4EEA:
		andi.b	#$70,d0
		bne.s	loc_4EF2

locret_4EF0:
		rts
; ---------------------------------------------------------------------------

loc_4EF2:
		btst	#4,d0
		beq.s	loc_4F18
		andi.b	#$8E,$2B(a1)
		bset	#0,$2B(a1)
		bset	#4,$2B(a1)
		move.l	#Obj_Fire_Shield,(Shield).w
		move.w	a1,(Shield+parent).w
		rts
; ---------------------------------------------------------------------------

loc_4F18:
		btst	#5,d0
		beq.s	loc_4F3E
		andi.b	#$8E,$2B(a1)
		bset	#0,$2B(a1)
		bset	#5,$2B(a1)
		move.l	#Obj_Lightning_Shield,(Shield).w
		move.w	a1,(Shield+parent).w
		rts
; ---------------------------------------------------------------------------

loc_4F3E:
		btst	#6,d0
		beq.s	locret_4F64
		andi.b	#$8E,$2B(a1)
		bset	#0,$2B(a1)
		bset	#6,$2B(a1)
		move.l	#Obj_Bubble_Shield,(Shield).w
		move.w	a1,(Shield+parent).w
		rts
; ---------------------------------------------------------------------------

locret_4F64:
		rts
; End of function SpawnLevelMainSprites_SpawnPowerup


; =============== S U B R O U T I N E =======================================


SpawnLevelMainSprites_SpawnPlayers:
		tst.w	(Competition_mode).w
		bne.w	loc_501A
		move.w	(Player_mode).w,d0
		bne.s	loc_4FC2
		move.l	#Obj_Sonic,(Player_1).w
		move.l	#Obj_DashDust,(Dust).w
		move.l	#Obj_Insta_Shield,(Shield).w
		move.w	#Player_1,(Shield+parent).w
		move.l	#Obj_Tails,(Player_2).w
		move.w	(Player_1+x_pos).w,(Player_2+x_pos).w
		move.w	(Player_1+y_pos).w,(Player_2+y_pos).w
		subi.w	#$20,(Player_2+x_pos).w
		addi.w	#4,(Player_2+y_pos).w
		move.l	#Obj_DashDust,(Dust_P2).w
		move.w	#0,(Tails_CPU_routine).w
		rts
; ---------------------------------------------------------------------------

loc_4FC2:
		subq.w	#1,d0
		bne.s	loc_4FE6
		move.l	#Obj_Sonic,(Player_1).w
		move.l	#Obj_DashDust,(Dust).w
		move.l	#Obj_Insta_Shield,(Shield).w
		move.w	#Player_1,(Shield+parent).w
		rts
; ---------------------------------------------------------------------------

loc_4FE6:
		subq.w	#1,d0
		bne.s	loc_5008
		move.l	#Obj_Tails,(Player_1).w
		move.l	#Obj_DashDust,(Dust_P2).w
		addi.w	#4,(Player_1+y_pos).w
		move.w	#0,(Tails_CPU_routine).w
		rts
; ---------------------------------------------------------------------------

loc_5008:
		move.l	#Obj_Sonic,(Player_1).w
		move.l	#Obj_DashDust,(Dust).w
		rts
; ---------------------------------------------------------------------------

loc_501A:
		move.b	(P1_character).w,d0
		bsr.s	sub_505E
		move.l	d1,(Player_1).w
		move.b	(P1_character).w,(Player_1+character_id).w
		move.w	(Player_1+x_pos).w,(Player_2+x_pos).w
		move.w	(Player_1+y_pos).w,(Player_2+y_pos).w
		move.l	#Obj_DashDust2P,(Dust).w
		tst.b	(Not_ghost_flag).w
		beq.s	loc_505C
		move.b	(P2_character).w,d0
		bsr.s	sub_505E
		move.l	d1,(Player_2).w
		move.b	(P2_character).w,(Player_2+character_id).w
		move.l	#Obj_DashDust2P,(Dust_P2).w

loc_505C:
		bra.s	loc_507C
; End of function SpawnLevelMainSprites_SpawnPlayers


; =============== S U B R O U T I N E =======================================


sub_505E:
		tst.b	d0
		bne.s	loc_5068
		move.l	#Obj_Sonic2P,d1

loc_5068:
		subq.b	#1,d0
		bne.s	loc_5074
		move.l	#Obj_Tails2P,d1
		rts
; ---------------------------------------------------------------------------

loc_5074:
		move.l	#Obj_Sonic2P,d1
		rts
; End of function sub_505E

; ---------------------------------------------------------------------------

loc_507C:
		lea	(Target_palette_line_2).w,a2
		lea	(Pal_Level_2P).l,a1
		move.w	#$F,d0

loc_508A:
		move.w	(a1)+,(a2)+
		dbf	d0,loc_508A
		rts
; ---------------------------------------------------------------------------
Pal_Level_2P:	binclude "Levels/Misc/Palettes/2P Level Secondary.bin"
		even
; ---------------------------------------------------------------------------

Obj_Level_50B2:
		move.w	#0,(Collision_response_list).w
		rts

; =============== S U B R O U T I N E =======================================


nullsub_3:
		rts
; End of function nullsub_3

; ---------------------------------------------------------------------------
		tst.b	(Water_flag).w
		beq.s	locret_50DC
		move.w	(Camera_X_pos).w,d1
		btst	#0,(Level_frame_counter+1).w
		beq.s	loc_50D2
		addi.w	#$20,d1

loc_50D2:
		move.w	d1,d0
		addi.w	#$60,d0
		addi.w	#$120,d1

locret_50DC:
		rts

; =============== S U B R O U T I N E =======================================


Handle_Onscreen_Water_Height:
		tst.b	(Water_flag).w
		beq.w	loc_5146
		tst.b	(Deform_lock).w
		bne.s	loc_50FC
		cmpi.b	#6,(Player_1+routine).w
		bcc.s	loc_50FC
		bsr.w	sub_539A
		bsr.w	DynamicWaterHeight

loc_50FC:
		clr.b	(Water_full_screen_flag).w
		moveq	#0,d0
		add.w	(Mean_water_level).w,d0
		move.w	d0,(Water_level).w
		cmpi.w	#$100,(Current_zone_and_act).w
		bne.s	loc_511A
		cmpi.w	#$900,(Camera_X_pos).w
		bcs.s	loc_5130

loc_511A:
		move.w	(Water_level).w,d0
		sub.w	(Camera_Y_pos).w,d0
		beq.s	loc_512A
		bcc.s	loc_5138
		tst.w	d0
		bpl.s	loc_5138

loc_512A:
		move.b	#1,(Water_full_screen_flag).w

loc_5130:
		move.b	#-1,(H_int_counter).w
		rts
; ---------------------------------------------------------------------------

loc_5138:
		cmpi.w	#$DF,d0
		bcs.s	loc_5142
		move.w	#$FF,d0

loc_5142:
		move.b	d0,(H_int_counter).w

loc_5146:
		bsr.w	sub_5598
		rts
; End of function Handle_Onscreen_Water_Height

; ---------------------------------------------------------------------------
		clr.b	(Water_full_screen_flag).w
		move.w	(Mean_water_level).w,(Water_level).w
		move.l	#HInt3,(H_int_addr).w
		cmpi.w	#$1000,(V_blank_cycles).w
		bcs.s	loc_516E
		move.l	#HInt4,(H_int_addr).w

loc_516E:
		move.w	(Water_level).w,d0
		sub.w	(Camera_Y_pos).w,d0
		beq.s	loc_5186
		bcc.s	loc_51C2
		tst.w	d0
		bpl.s	loc_51C2
		addi.w	#$1E0,d0
		beq.s	loc_5186
		bcs.s	loc_5194

loc_5186:
		move.b	#1,(Water_full_screen_flag).w
		move.b	#-1,(H_int_counter).w
		rts
; ---------------------------------------------------------------------------

loc_5194:
		cmpi.w	#$DF,d0
		bcs.s	loc_519E
		move.w	#$FF,d0

loc_519E:
		move.b	d0,(H_int_counter).w
		move.b	#1,(Water_full_screen_flag).w
		move.l	#HInt5,(H_int_addr).w
		cmpi.w	#$1000,(V_blank_cycles).w
		bcs.s	loc_51C0
		move.l	#HInt_6,(H_int_addr).w

loc_51C0:
		bra.s	loc_51D0
; ---------------------------------------------------------------------------

loc_51C2:
		cmpi.w	#$DF,d0
		bcs.s	loc_51CC
		move.w	#$FF,d0

loc_51CC:
		move.b	d0,(H_int_counter).w

loc_51D0:
		bsr.w	sub_5598
		rts
; ---------------------------------------------------------------------------
StartingWaterHeights:
		binclude "Levels/Misc/StartingWaterHeights.bin"
		even

; =============== S U B R O U T I N E =======================================


DynamicWaterHeight:
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#6,d0
		andi.w	#-2,d0
		move.w	off_5246(pc,d0.w),d0
		jsr	off_5246(pc,d0.w)
		moveq	#0,d1
		move.b	(Water_speed).w,d1
		move.w	(Target_water_level).w,d0
		sub.w	(Mean_water_level).w,d0
		beq.s	locret_5244
		bcc.s	loc_5240
		neg.w	d1

loc_5240:
		add.w	d1,(Mean_water_level).w

locret_5244:
		rts
; End of function DynamicWaterHeight

; ---------------------------------------------------------------------------
off_5246:	dc.w locret_5286-off_5246
		dc.w loc_5288-off_5246
		dc.w loc_531C-off_5246
		dc.w loc_5334-off_5246
		dc.w locret_534C-off_5246
		dc.w locret_534C-off_5246
		dc.w locret_534C-off_5246
		dc.w locret_534C-off_5246
		dc.w locret_534C-off_5246
		dc.w locret_534C-off_5246
		dc.w locret_534C-off_5246
		dc.w locret_534C-off_5246
		dc.w loc_534E-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w loc_536C-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
		dc.w locret_536A-off_5246
; ---------------------------------------------------------------------------

locret_5286:
		rts
; ---------------------------------------------------------------------------

loc_5288:
		cmpi.w	#$820,(Camera_target_max_Y_pos).w
		beq.s	locret_5306
		cmpi.w	#$2440,(Camera_X_pos).w
		bcc.s	loc_52AE
		cmpi.w	#$618,(Target_water_level).w
		bne.s	locret_5306
		move.w	#$528,(Target_water_level).w
		move.b	#2,(Water_speed).w
		rts
; ---------------------------------------------------------------------------

loc_52AE:
		tst.b	(Level_trigger_array).w
		bne.s	loc_52C2
		cmpi.w	#$2850,(Camera_X_pos).w
		bcs.s	locret_5306
		move.b	#1,(Level_trigger_array).w

loc_52C2:
		cmpi.w	#$618,(Target_water_level).w
		beq.s	locret_5306
		cmpi.w	#$2900,(Camera_X_pos).w
		bcc.s	loc_52EC
		move.w	#-1,(Screen_shake_flag).w
		jsr	(Create_New_Sprite).l
		bne.s	loc_52EC
		move.l	#Obj_5308,(a1)
		move.b	#$B4,$24(a1)

loc_52EC:
		lea	(Level_layout_main+$1C).w,a3
		moveq	#3,d1

loc_52F2:
		movea.w	(a3),a1
		move.b	#0,$4E(a1)
		addq.w	#4,a3
		dbf	d1,loc_52F2
		move.w	#$618,(Target_water_level).w

locret_5306:
		rts
; ---------------------------------------------------------------------------

Obj_5308:
		subq.b	#1,$24(a0)
		beq.s	loc_5310
		rts
; ---------------------------------------------------------------------------

loc_5310:
		move.w	#0,(Screen_shake_flag).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_531C:
		lea	(dword_5324).l,a1
		bra.s	loc_537C
; ---------------------------------------------------------------------------
dword_5324:	dc.l $85000900
		dc.l $86802A00
		dc.l $86803500
		dc.l $86A0FFFF
; ---------------------------------------------------------------------------

loc_5334:
		tst.b	(_unkFAA2).w
		beq.s	loc_533C
		rts
; ---------------------------------------------------------------------------

loc_533C:
		lea	(dword_5344).l,a1
		bra.s	loc_537C
; ---------------------------------------------------------------------------
dword_5344:	dc.l $7003E00
		dc.l $7E0FFFF
; ---------------------------------------------------------------------------

locret_534C:
		rts
; ---------------------------------------------------------------------------

loc_534E:
		lea	(dword_5356).l,a1
		bra.s	loc_537C
; ---------------------------------------------------------------------------
dword_5356:	dc.l $8B000E00
		dc.l $8A001980
		dc.l $8A002340
		dc.l $8AC82C00
		dc.l $8FF0FFFF
; ---------------------------------------------------------------------------

locret_536A:
		rts
; ---------------------------------------------------------------------------

loc_536C:
		cmpi.w	#$1DE0,(Camera_X_pos).w
		bcs.s	locret_537A
		move.w	#$510,(Target_water_level).w

locret_537A:
		rts
; ---------------------------------------------------------------------------

loc_537C:
		move.w	(Camera_X_pos).w,d0

loc_5380:
		move.l	(a1)+,d1
		cmp.w	d1,d0
		bhi.s	loc_5380
		swap	d1
		tst.w	d1
		bpl.s	loc_5394
		andi.w	#$7FFF,d1
		move.w	d1,(Mean_water_level).w

loc_5394:
		move.w	d1,(Target_water_level).w
		rts

; =============== S U B R O U T I N E =======================================


sub_539A:
		tst.w	(Debug_placement_mode).w
		bne.w	locret_54A4
		cmpi.b	#1,(Current_zone).w
		bne.w	locret_54A4
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_53D2
		lea	(WindTunnel_flag).w,a3
		lea	(Player_1).w,a1
		move.b	(Ctrl_1_held_logical).w,d6
		moveq	#0,d5
		bsr.s	HCZ_WaterTunnels
		addq.w	#1,a3
		lea	(Player_2).w,a1
		move.b	(Ctrl_2_held_logical).w,d6
		moveq	#1,d5
		bra.s	HCZ_WaterTunnels
; ---------------------------------------------------------------------------

loc_53D2:
		lea	(WindTunnel_flag_P2).w,a3
		lea	(Player_1).w,a1
		move.b	(Ctrl_1_held_logical).w,d6
		moveq	#0,d5
; End of function sub_539A


; =============== S U B R O U T I N E =======================================


HCZ_WaterTunnels:
		lea	(HCZ1_WaterTunLocs).l,a2
		tst.b	(Current_act).w
		beq.s	loc_53F2
		lea	(HCZ2_WaterTunLocs).l,a2

loc_53F2:
		move.w	(a2)+,d2

loc_53F4:
		move.w	$10(a1),d0
		cmp.w	(a2),d0
		bcs.w	loc_5490
		cmp.w	4(a2),d0
		bcc.w	loc_5490
		move.w	$14(a1),d1
		cmp.w	2(a2),d1
		bcs.w	loc_5490
		cmp.w	6(a2),d1
		bcc.s	loc_5490
		cmpi.b	#4,5(a1)
		bcc.w	loc_54A2
		btst	d5,(_unkF7C7).w
		bne.s	locret_5478
		tst.b	$2E(a1)
		bne.s	loc_54A2
		move.b	#1,(a3)
		move.w	8(a2),d0
		move.w	d0,$18(a1)
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$10(a1)
		move.w	$A(a2),d1
		move.w	d1,$1A(a1)
		ext.l	d1
		lsl.l	#8,d1
		add.l	d1,$14(a1)
		move.b	#$F,$20(a1)
		bset	#1,$2A(a1)
		tst.b	$C(a2)
		bne.s	loc_547A
		btst	#0,d6
		beq.s	loc_546E
		subq.w	#1,$14(a1)

loc_546E:
		btst	#1,d6
		beq.s	locret_5478
		addq.w	#1,$14(a1)

locret_5478:
		rts
; ---------------------------------------------------------------------------

loc_547A:
		btst	#2,d6
		beq.s	loc_5484
		subq.w	#1,$10(a1)

loc_5484:
		btst	#3,d6
		beq.s	locret_548E
		addq.w	#1,$10(a1)

locret_548E:
		rts
; ---------------------------------------------------------------------------

loc_5490:
		adda.w	#$E,a2
		dbf	d2,loc_53F4
		tst.b	(a3)
		beq.s	locret_54A4
		move.b	#$1A,$20(a1)

loc_54A2:
		clr.b	(a3)

locret_54A4:
		rts
; End of function HCZ_WaterTunnels

; ---------------------------------------------------------------------------
HCZ1_WaterTunLocs:
		dc.w $E
		dc.w   $380,  $580,  $5A0,  $5C0,  $3F0, $FFE0,     0
		dc.w   $5A0,  $560,  $A80,  $5C0,  $3F0, $FFF0,     0
		dc.w  $1400,  $A80, $15A0,  $AC0,  $400,     0,     0
		dc.w  $15A0,  $A40, $1960,  $AC0,  $400, $FFC0,     0
		dc.w  $1990,  $780, $19E0,  $7F0,     0, $FC00,  $100
		dc.w  $1990,  $7F0, $19F0,  $878, $FEC0, $FC00,  $100
		dc.w  $1990,  $878, $19F0,  $8FD,  $140, $FC00,  $100
		dc.w  $1990,  $8FD, $19F0,  $978, $FEC0, $FC00,  $100
		dc.w  $1990,  $978, $19F0,  $A10,  $100, $FC00,  $100
		dc.w  $1960,  $A10, $19D0,  $A80,  $300, $FD80,  $100
		dc.w  $2B00,  $800, $2C20,  $840,  $400,     0,     0
		dc.w  $2C20,  $7C0, $2EE0,  $840,  $400, $FFC0,     0
		dc.w  $2EE0,  $790, $2F50,  $800,  $300, $FD00,  $100
		dc.w  $2F00,  $700, $2F70,  $790,  $100, $FC00,  $100
		dc.w  $2F30,  $680, $2F70,  $700,     0, $FC00,  $100
HCZ2_WaterTunLocs:
		dc.w 1
		dc.w  $3980,  $800, $3AA0,  $840,  $400,     0,     0
		dc.w  $3AA0,  $7C0, $3F00,  $840,  $400, $FFC0,     0

; =============== S U B R O U T I N E =======================================


sub_5598:
		cmpi.w	#$101,(Current_zone_and_act).w
		beq.s	loc_55AA
		cmpi.w	#$500,(Current_zone_and_act).w
		beq.s	loc_5612
		rts
; ---------------------------------------------------------------------------

loc_55AA:
		lea	(Player_1).w,a1
		move.b	(Ctrl_1_held_logical).w,d2
		bsr.s	sub_55BC
		lea	(Player_2).w,a1
		move.b	(Ctrl_2_held_logical).w,d2
; End of function sub_5598


; =============== S U B R O U T I N E =======================================


sub_55BC:
		btst	#1,$2A(a1)
		bne.s	loc_55F8
		cmpi.b	#$C,$46(a1)
		beq.s	loc_55F8
		lea	(Level_layout_header).w,a2
		move.w	$14(a1),d0
		lsr.w	#5,d0
		and.w	(Layout_row_index_mask).w,d0
		move.w	8(a2,d0.w),d0
		move.w	$10(a1),d1
		lsr.w	#7,d1
		add.w	d1,d0
		movea.w	d0,a2
		move.b	(a2),d0
		lea	byte_574E(pc),a2
		moveq	#9,d1

loc_55F0:
		cmp.b	-(a2),d0
		dbeq	d1,loc_55F0
		beq.s	loc_560C

loc_55F8:
		tst.b	$2B(a1)
		bpl.s	locret_560A
		move.w	#5,$32(a1)
		andi.b	#$7F,$2B(a1)

locret_560A:
		rts
; ---------------------------------------------------------------------------

loc_560C:
		moveq	#-8,d0
		bra.w	loc_567E
; End of function sub_55BC

; ---------------------------------------------------------------------------

loc_5612:
		lea	(Player_1).w,a1
		move.b	(Ctrl_1_held_logical).w,d2
		bsr.s	sub_5624
		lea	(Player_2).w,a1
		move.b	(Ctrl_2_held_logical).w,d2

; =============== S U B R O U T I N E =======================================


sub_5624:
		btst	#1,$2A(a1)
		bne.s	loc_5660
		btst	#3,$2A(a1)
		bne.s	loc_5660
		lea	(Level_layout_header).w,a2
		move.w	$14(a1),d0
		lsr.w	#5,d0
		and.w	(Layout_row_index_mask).w,d0
		move.w	8(a2,d0.w),d0
		move.w	$10(a1),d1
		lsr.w	#7,d1
		add.w	d1,d0
		movea.w	d0,a2
		move.b	(a2),d0
		lea	WaterTransition_AIZ1(pc),a2
		moveq	#9,d1

loc_5658:
		cmp.b	-(a2),d0
		dbeq	d1,loc_5658
		beq.s	loc_5674

loc_5660:
		tst.b	$2B(a1)
		bpl.s	locret_5672
		move.w	#5,$32(a1)
		andi.b	#$7F,$2B(a1)

locret_5672:
		rts
; ---------------------------------------------------------------------------

loc_5674:
		lea	(byte_573A).l,a2
		move.b	(a2,d1.w),d0

loc_567E:
		beq.s	loc_56CA
		move.b	$1C(a1),d1
		tst.b	d0
		bpl.s	loc_5694
		cmp.b	d0,d1
		ble.s	loc_569E
		subi.w	#$40,$1C(a1)
		bra.s	loc_569E
; ---------------------------------------------------------------------------

loc_5694:
		cmp.b	d0,d1
		bge.s	loc_569E
		addi.w	#$40,$1C(a1)

loc_569E:
		bclr	#0,$2A(a1)
		tst.b	d1
		bpl.s	loc_56AE
		bset	#0,$2A(a1)

loc_56AE:
		move.b	#$1B,$20(a1)
		cmpi.b	#5,(Current_zone).w
		bne.s	loc_56C2
		move.b	#$19,$20(a1)

loc_56C2:
		ori.b	#-$80,$2B(a1)
		rts
; ---------------------------------------------------------------------------

loc_56CA:
		move.w	#4,d1
		move.w	$1C(a1),d0
		btst	#2,d2
		beq.s	loc_56EC
		move.b	#0,$20(a1)
		bset	#0,$2A(a1)
		sub.w	d1,d0
		tst.w	d0
		bpl.s	loc_56EC
		sub.w	d1,d0

loc_56EC:
		btst	#3,d2
		beq.s	loc_5706
		move.b	#0,$20(a1)
		bclr	#0,$2A(a1)
		add.w	d1,d0
		tst.w	d0
		bmi.s	loc_5706
		add.w	d1,d0

loc_5706:
		move.w	#4,d1
		tst.w	d0
		beq.s	loc_572E
		bmi.s	loc_5720
		sub.w	d1,d0
		bhi.s	loc_571E
		move.w	#0,d0
		move.b	#5,$20(a1)

loc_571E:
		bra.s	loc_572E
; ---------------------------------------------------------------------------

loc_5720:
		add.w	d1,d0
		bhi.s	loc_572E
		move.w	#0,d0
		move.b	#5,$20(a1)

loc_572E:
		move.w	d0,$1C(a1)
		ori.b	#$80,$2B(a1)
		rts
; End of function sub_5624

; ---------------------------------------------------------------------------
byte_573A:	dc.b  $F8, $F8,   8,   8, $F4, $F4, $F4,  $C,  $C,  $C
		dc.b  $1C, $72, $83, $84, $8B, $91, $9F, $A0, $A5, $A6
byte_574E:	dc.b  $2E, $C6, $33, $C5, $24, $2A, $44, $1F, $27, $2B
WaterTransition_AIZ1:dc.w $F
		dc.w 2
		dc.w $68
		dc.w $62
		dc.w $42
		dc.w $48
		dc.w $4E
		dc.w $54
		dc.w 8
		dc.w $E
		dc.w $14
		dc.w $1A
		dc.w $34
		dc.w $22
		dc.w $3A
		dc.w $2E
		dc.w $28
WaterTransition_AIZ2:dc.w $12
		dc.w $6E
		dc.w $68
		dc.w 2
		dc.w $48
		dc.w $42
		dc.w $4E
		dc.w $5A
		dc.w $54
		dc.w $62
		dc.w $74
		dc.w 8
		dc.w $E
		dc.w $14
		dc.w $1A
		dc.w $34
		dc.w $22
		dc.w $3A
		dc.w $2E
		dc.w $28
WaterTransition_CNZ2ICZ2:dc.w $13
		dc.w $6E
		dc.w $68
		dc.w $7A
		dc.w $74
		dc.w $62
		dc.w 2
		dc.w $42
		dc.w $48
		dc.w $4E
		dc.w $5A
		dc.w 8
		dc.w $E
		dc.w $14
		dc.w $1A
		dc.w $34
		dc.w $22
		dc.w $3A
		dc.w $2E
		dc.w $28
		dc.w $54
WaterTransition_HCZLBZ1:dc.w $13
		dc.w 2
		dc.w $74
		dc.w $62
		dc.w $68
		dc.w $6E
		dc.w $42
		dc.w $48
		dc.w $7A
		dc.w $5A
		dc.w $54
		dc.w 8
		dc.w $E
		dc.w $14
		dc.w $1A
		dc.w $2E
		dc.w $34
		dc.w $28
		dc.w $3A
		dc.w $22
		dc.w $4E
WaterTransition_LBZ2:dc.w $13
		dc.w 2
		dc.w $6E
		dc.w $68
		dc.w $7A
		dc.w $62
		dc.w $74
		dc.w $42
		dc.w $48
		dc.w $5A
		dc.w $54
		dc.w 8
		dc.w $E
		dc.w $14
		dc.w $1A
		dc.w $2E
		dc.w $34
		dc.w $28
		dc.w $3A
		dc.w $22
		dc.w $4E
WaterTransition_Unk:dc.w $13
		dc.w 2
		dc.w 8
		dc.w $E
		dc.w $14
		dc.w $1A
		dc.w $42
		dc.w $48
		dc.w $4E
		dc.w $54
		dc.w $5A
		dc.w $62
		dc.w $68
		dc.w $6E
		dc.w $74
		dc.w $7A
		dc.w $22
		dc.w $28
		dc.w $2E
		dc.w $34
		dc.w $3A

; =============== S U B R O U T I N E =======================================


GetDemoPtr:
		move.w	(Next_demo_number).w,d0
		lsl.w	#2,d0
		move.l	DemoPtrs(pc,d0.w),(Demo_data_addr).w
		move.w	#$8000,(Ctrl_1).w
		move.w	#$8000,(Ctrl_2).w
		st	(Demo_start_button).w
		rts
; End of function GetDemoPtr

; ---------------------------------------------------------------------------
DemoPtrs:	dc.l DemoDat_MGZ+1
		dc.l DemoDat_AIZ+1
		dc.l DemoDat_HCZ+1

; =============== S U B R O U T I N E =======================================


Demo_PlayRecord:
		tst.w	(Demo_mode_flag).w
		bne.s	loc_587C
		rts
; ---------------------------------------------------------------------------

loc_587C:
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.b	#$80,d0
		beq.s	loc_5890
		move.b	#4,(Game_mode).w

loc_5890:
		movea.l	(Demo_data_addr).w,a0
		move.b	(Demo_start_button).w,d1
		andi.b	#$80,d1
		or.b	-1(a0),d1
		move.b	(Ctrl_1_held).w,d0
		andi.b	#$80,d0
		sne	(Demo_start_button).w
		or.b	(a0)+,d0
		move.l	a0,(Demo_data_addr).w
		move.b	d0,(Ctrl_1_held).w
		eor.b	d0,d1
		and.b	d0,d1
		move.b	d1,(Ctrl_1_pressed).w
		move.w	#$8080,d0
		and.w	d0,(Ctrl_2).w
		rts
; End of function Demo_PlayRecord


; =============== S U B R O U T I N E =======================================


LoadSolids:
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#5,d0
		lea	(SolidIndexes).l,a1
		adda.l	d0,a1
		move.l	(a1),d0
		move.l	d0,(Primary_collision_addr).w
		addi.l	#$600,d0
		move.l	d0,(Secondary_collision_addr).w
		move.l	#Primary_collision_addr,(Collision_addr).w
		rts
; End of function LoadSolids


; =============== S U B R O U T I N E =======================================


sub_58F4:
		lea	(Oscillating_table).w,a1
		lea	(word_5908).l,a2
		moveq	#(Oscillating_table_end-Oscillating_table)/2-1,d1

loc_5900:
		move.w	(a2)+,(a1)+
		dbf	d1,loc_5900
		rts
; End of function sub_58F4

; ---------------------------------------------------------------------------
word_5908:	dc.w $7D
		dc.w $80
		dc.w 0
		dc.w $80
		dc.w 0
		dc.w $80
		dc.w 0
		dc.w $80
		dc.w 0
		dc.w $80
		dc.w 0
		dc.w $80
		dc.w 0
		dc.w $80
		dc.w 0
		dc.w $80
		dc.w 0
		dc.w $80
		dc.w 0
		dc.w $3848
		dc.w $EE
		dc.w $2080
		dc.w $B4
		dc.w $3080
		dc.w $10E
		dc.w $5080
		dc.w $1C2
		dc.w $7080
		dc.w $276
		dc.w $80
		dc.w 0
		dc.w $4000
		dc.w $FE

; =============== S U B R O U T I N E =======================================


sub_594A:
		tst.w	(Competition_mode).w
		bne.s	loc_5958
		cmpi.b	#6,(Player_1+routine).w
		bcc.s	locret_599E

loc_5958:
		lea	(Oscillating_table).w,a1
		lea	(word_59A0).l,a2
		move.w	(a1)+,d3
		moveq	#$F,d1

loc_5966:
		move.w	(a2)+,d2
		move.w	(a2)+,d4
		btst	d1,d3
		bne.s	loc_5982
		move.w	2(a1),d0
		add.w	d2,d0
		move.w	d0,2(a1)
		add.w	d0,(a1)
		cmp.b	(a1),d4
		bhi.s	loc_5994
		bset	d1,d3
		bra.s	loc_5994
; ---------------------------------------------------------------------------

loc_5982:
		move.w	2(a1),d0
		sub.w	d2,d0
		move.w	d0,2(a1)
		add.w	d0,(a1)
		cmp.b	(a1),d4
		bls.s	loc_5994
		bclr	d1,d3

loc_5994:
		addq.w	#4,a1
		dbf	d1,loc_5966
		move.w	d3,(Oscillating_table).w

locret_599E:
		rts
; End of function sub_594A

; ---------------------------------------------------------------------------
word_59A0:	dc.w 2
		dc.w $10
		dc.w 2
		dc.w $18
		dc.w 2
		dc.w $20
		dc.w 2
		dc.w $30
		dc.w 4
		dc.w $20
		dc.w 8
		dc.w 8
		dc.w 8
		dc.w $40
		dc.w 4
		dc.w $40
		dc.w 2
		dc.w $38
		dc.w 2
		dc.w $38
		dc.w 2
		dc.w $20
		dc.w 3
		dc.w $30
		dc.w 5
		dc.w $50
		dc.w 7
		dc.w $70
		dc.w 2
		dc.w $40
		dc.w 2
		dc.w $40

; =============== S U B R O U T I N E =======================================


sub_59E0:
		subq.b	#1,(Rings_frame_timer).w
		bpl.s	loc_59F6
		move.b	#7,(Rings_frame_timer).w
		addq.b	#1,(Rings_frame).w
		andi.b	#3,(Rings_frame).w

loc_59F6:
		tst.b	(Ring_spill_anim_counter).w
		beq.s	loc_5A18
		moveq	#0,d0
		move.b	(Ring_spill_anim_counter).w,d0
		add.w	(Ring_spill_anim_accum).w,d0
		move.w	d0,(Ring_spill_anim_accum).w
		rol.w	#7,d0
		andi.w	#3,d0
		move.b	d0,(Ring_spill_anim_frame).w
		subq.b	#1,(Ring_spill_anim_counter).w

loc_5A18:
		addi.w	#$180,(AIZ_vine_angle).w
		rts
; End of function sub_59E0

; ---------------------------------------------------------------------------
		dc.b    0, $FF,   0, $FF
		dc.b    0, $BA,   2,   4,   0,   6, $20, $27,   0, $73,   8,   8
		dc.b    0, $57,   2,   4,   0,   7,   8, $AB, $28,   5,   8, $64
		dc.b    0,  $D,   8,   3,   0,   4,   4, $12,   0,   8, $20,  $C
		dc.b    0,  $D,   4, $12,   0,   3,   8, $37, $28,  $B,   8,   2
		dc.b    0,   2,   4,   9,   0,  $F,   8, $20, $28,  $D, $20,   3
		dc.b  $28,   3, $20,   0,   0,   3,   4,  $F,   5,   0,   9,   0
		dc.b    8,  $B, $28,   2, $20,  $C,   0,  $B,   4,   5,   0,   7
		dc.b    4, $30,   5,   0,   0,   3,   8, $12,   0, $1A, $20, $22
		dc.b  $28,   0,   8,  $E,   0, $75,   8, $5B, $28,   4,   8, $47
		dc.b  $28,  $A, $20,   0,   0,   9,   8,  $C,   0,   9,   4, $1D
		dc.b  $24,   3, $20,   4,   0,   5,   8,   8,   0,   2,   4,   8
		dc.b    0,  $B,   8,   8,   0,   3,   4,   4,   0,  $C,   8, $1B
		dc.b  $28,  $A,   8, $CD, $28,   7,   8, $54, $28,  $E,   8, $12
		dc.b    0,   4,   4,   9,   0,  $B,   8, $10, $28,   1, $20,   0
		dc.b  $24,   7, $25,   0, $28,   3,   8,   5,   4,   8,   5,   0
		dc.b    9,   0,   8, $2B,   0, $AD, $20,  $A, $28, $14,   8, $5C
		dc.b  $28,   9,   8, $14,   9,   0,   5, $12,   1,   0,   8, $FF
		dc.b    8, $72,   9,   0,   5,   9,   1,   0,   0,   7,   8, $1B
		dc.b    0, $36,   4, $56,   0,  $A,   8, $13,   0, $13,   8,  $C
		dc.b    0, $1B,   8, $11,   0, $17,   4,  $E,   0,  $D,   8, $14
		dc.b    0,  $C,   4, $17,   0, $14,   8,  $E,   0, $23,   4, $13
		dc.b    0,  $F,   8,  $C,   0, $28,   4,   3,   0,   4,   4, $1F
		dc.b    0,  $B,   8,   7,   0,  $F,   8,  $F,   0, $1A,   4,   6
		dc.b    0,   5,   4,  $E,   0,   7,   8,   8,   0,   3,   4, $10
		dc.b    0,   4,   8, $4D,   0,   5,   4, $24, $24,   8,   4, $2D
		dc.b    0,   2,   8,   9, $28,   9,   8, $34,   0, $15,   4,  $B
		dc.b  $24,   7,   4, $2D,   0, $2A,   8, $1D,   0, $1E,   8, $10
		dc.b    0, $F5, $80,   0, $40,   0,   8, $1E,   0, $18,   4, $26
		dc.b    0, $10,   8, $18,   0,  $E, $80,   0, $40,   0,   8, $24
		dc.b    0,   1, $20,   5,   0,  $E,   8, $34,   0, $FF,   0, $9B
		dc.b  $80,   0, $40,   0, $20,   7,   0,   6,   4, $2A, $25,   2
		dc.b  $21,   0, $29,   1, $28,   2, $20,   8, $25,  $C,   5,   1
		dc.b    8, $30, $28, $21,   8, $1A, $28, $3D,   8,   6,   0,   4
		dc.b    4, $25, $24, $18,   4, $15,   0,   8,   4, $3A, $24,  $C
		dc.b    4,   9,   0, $14,   4, $52,   5,   0,   1,   0,   8, $7C
		dc.b  $28, $17,   8, $22, $28, $23,   8,   2,   0,   7,   4, $33
		dc.b  $24, $19,   4, $3C, $24, $18,   4, $49,   0,   8,   8, $6A
		dc.b  $28, $1B,   8,   2, $28, $12,   8, $11,   0,   4, $20,   6
		dc.b    0,   4,   8,   8,   0,  $B,   8, $10, $28, $30,   8,  $E
		dc.b    0, $10,   4, $1E, $24, $14,   4, $33, $24, $1C,   4, $52
		dc.b    0,   5,   8, $76, $28,   9,   8,  $F,   9,   0,   5,   8
		dc.b    8, $38, $28, $3B,   8,   5,   0,   9,   4, $1D, $24, $1B
		dc.b    4, $5D, $24,  $D,   4, $1A,   0,  $E,   4, $1A,   5,   0
		dc.b    9,   0,   8, $38, $28, $24,   8,   6,   9,   1,   1,   0
		dc.b    5,   5,   1,   0,   8,   5, $28, $24,   8,   0,   0,   3
		dc.b    4, $3B, $24, $15,   4, $44,   0, $20,   8, $7B, $28, $26
		dc.b    8, $14, $28, $21, $29,   0,   1,   0,   5, $32, $25, $18
		dc.b    5, $10,   9,   0,   8, $1E, $28,  $F,   8,   3,   0,   0
		dc.b    5,   2,   4,   0,   0, $11,   8, $19, $28, $23,   0,   3
		dc.b    4, $2B, $24,   8, $20,   7,   0, $1B,   8, $25,   0,   0
		dc.b    4, $13,   0,   0,   8,   9, $28, $1B,   8,   1,   0, $14
		dc.b    4,  $C, $24, $13,   4,  $C,   0,   2,   8, $1B, $28, $10
		dc.b    8,   2,   0, $1F,   4,  $A,   5,   0, $25,   9, $24,  $A
		dc.b    4, $18,   0,  $A,   8, $2D, $28, $28,   8,   7,   0,   6
		dc.b    4, $1C, $24, $13,   4,   4,   0, $16,   8, $2B, $28, $26
		dc.b    8,  $A,   0,  $B,   4, $23, $24, $12,   4,   2,   0,   9
		dc.b    8, $2F, $28, $30,   8,  $D,   0,   2,   4, $1A, $24, $11
		dc.b    4, $15,   0,   8,   8, $21, $28, $14, $20, $2D, $24,   8
		dc.b  $20, $11,   0,   2,   4,   6, $24, $19,   4, $2E,   0,   0
		dc.b  $20,  $B,   0,  $A,   4, $1C, $24,   8,   4,   9,   0,   8
		dc.b    4, $17,   0, $13,   8, $1C, $28, $32,   8,  $B, $28, $1D
		dc.b    8, $1B, $28,   6, $20,   0,   0, $1F,   8, $10, $28,   5
		dc.b  $20,   2,   0,   3,   4,   8,   0,   7,   4,   9,   0,   0
		dc.b    8,  $A,   0,  $F,   8, $17, $28,   6, $20,   0,   0,  $B
		dc.b    4,   5,   0,   2,   8,   5,   0,  $A,   8,   9, $28,   8
		dc.b    8,   2,   0, $1C,   8, $2A, $28,   1, $20,  $A,   0,   0
		dc.b    4, $31, $24,   2, $20,   6,   0,   9,   8,   7,   0,   5
		dc.b   $A,   4,   8,   4,   0,   3,   4,  $D,   0,   0,   8, $2C
		dc.b  $28,   2, $20,   3, $24,  $A, $25,   0, $29,   0, $28,   5
		dc.b  $24,   4, $25,   0, $21,   0, $28,   8, $25,  $D,   5, $17
		dc.b  $25,   0, $29,   1, $28, $16, $20,   1,   0, $2C,   8, $8C
		dc.b  $28, $2A,   8,  $B, $28, $23,   8, $25, $28, $12,   8,   2
		dc.b  $28,  $F,   8, $FF,   8, $DD,   0, $1E, $80,   0, $40,   0
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   4, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   4, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   0, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   4, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   4, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   0, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   4, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   4, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   0, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   4, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   4, $27,   8
		dc.b    0,   0,   0,   4, $27,   8,   0,   0,   0,   0, $27,   8

; =============== S U B R O U T I N E =======================================


LoadLevelLoadBlock:
		move.w	(Current_zone_and_act).w,d0
		bne.s	loc_5E38
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_5E34
		tst.b	(Last_star_post_hit).w
		beq.s	loc_5E38

loc_5E34:
		move.w	#$D00,d0

loc_5E38:
		ror.b	#1,d0
		lsr.w	#4,d0
		andi.w	#$1F8,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		lea	(LevelLoadBlock).l,a4
		lea	(a4,d0.w),a4
		move.l	(a4)+,d0
		andi.l	#$FFFFFF,d0
		move.l	d0,d7
		movea.l	d0,a1
		move.w	(a1),d4
		move.w	#0,d2
		jsr	(Queue_Kos_Module).l
		move.l	(a4)+,d0
		andi.l	#$FFFFFF,d0
		cmp.l	d0,d7
		beq.s	loc_5E7E
		movea.l	d0,a1
		move.w	d4,d2
		jsr	(Queue_Kos_Module).l

loc_5E7E:
		move.b	#$C,(V_int_routine).w
		jsr	(Process_Kos_Queue).l
		bsr.w	Wait_VSync
		bsr.w	Process_Nem_Queue_Init
		jsr	(Process_Kos_Module_Queue).l
		tst.b	(Kos_modules_left).w
		bne.s	loc_5E7E
		rts
; End of function LoadLevelLoadBlock


; =============== S U B R O U T I N E =======================================


CheckLevelForWater:
		cmpi.b	#0,(Current_zone).w
		beq.s	loc_5EC8
		cmpi.b	#1,(Current_zone).w
		beq.s	loc_5EC8
		cmpi.w	#$301,(Current_zone_and_act).w
		beq.s	loc_5EC8
		cmpi.w	#$501,(Current_zone_and_act).w
		beq.s	loc_5EC8
		cmpi.w	#$601,(Current_zone_and_act).w
		bne.s	loc_5ED4

loc_5EC8:
		move.b	#1,(Water_flag).w
		move.w	#0,(Competition_mode).w

loc_5ED4:
		tst.b	(Water_flag).w
		beq.s	LoadWaterPalette
		move.w	#$4EF9,(H_int_jump).w
		move.l	#HInt2,(H_int_addr).w
		cmpi.b	#1,(Current_zone).w
		beq.s	loc_5F08
		move.l	#HInt3,(H_int_addr).w
		cmpi.w	#$1000,(V_blank_cycles).w
		bcs.s	loc_5F08
		move.l	#HInt4,(H_int_addr).w

loc_5F08:
		move.l	#WaterTransition_AIZ1,(Water_palette_data_addr).w
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#6,d0
		andi.w	#-2,d0
		lea	(StartingWaterHeights).l,a1
		move.w	(a1,d0.w),d0
		move.w	d0,(Water_level).w
		move.w	d0,(Mean_water_level).w
		move.w	d0,(Target_water_level).w
		clr.b	(Water_entered_counter).w
		clr.b	(Water_full_screen_flag).w
		move.b	#1,(Water_speed).w
; End of function CheckLevelForWater


; =============== S U B R O U T I N E =======================================


LoadWaterPalette:
		tst.b	(Water_flag).w
		beq.w	locret_5FEE
		moveq	#$2B,d0
		cmpi.w	#0,(Current_zone_and_act).w
		beq.w	loc_5FD6
		moveq	#$2C,d0
		move.l	#WaterTransition_AIZ2,(Water_palette_data_addr).w
		cmpi.w	#1,(Current_zone_and_act).w
		beq.s	loc_5FD6
		moveq	#$31,d0
		move.l	#WaterTransition_HCZLBZ1,(Water_palette_data_addr).w
		cmpi.w	#$100,(Current_zone_and_act).w
		beq.s	loc_5FD6
		moveq	#$32,d0
		move.l	#WaterTransition_HCZLBZ1,(Water_palette_data_addr).w
		cmpi.w	#$101,(Current_zone_and_act).w
		beq.s	loc_5FD6
		moveq	#$3A,d0
		move.l	#WaterTransition_CNZ2ICZ2,(Water_palette_data_addr).w
		cmpi.w	#$301,(Current_zone_and_act).w
		beq.s	loc_5FD6
		moveq	#$39,d0
		move.l	#WaterTransition_CNZ2ICZ2,(Water_palette_data_addr).w
		cmpi.w	#$501,(Current_zone_and_act).w
		beq.s	loc_5FD6
		moveq	#$2D,d0
		move.l	#WaterTransition_HCZLBZ1,(Water_palette_data_addr).w
		cmpi.w	#$600,(Current_zone_and_act).w
		beq.s	loc_5FD6
		moveq	#$2E,d0
		move.l	#WaterTransition_LBZ2,(Water_palette_data_addr).w
		cmpi.w	#$601,(Current_zone_and_act).w
		beq.s	loc_5FD6
		nop

loc_5FD6:
		move.w	d0,d1
		bsr.w	LoadPalette2
		move.w	d1,d0
		bsr.w	LoadPalette2_Immediate
		tst.b	(Last_star_post_hit).w
		beq.s	locret_5FEE
		move.b	(Saved_water_full_screen_flag).w,(Water_full_screen_flag).w

locret_5FEE:
		rts
; End of function LoadWaterPalette

; ---------------------------------------------------------------------------
		subq.w	#1,$24(a0)
		bpl.s	loc_6068
		move.w	#7,$24(a0)
		moveq	#0,d0
		move.b	$2E(a0),d0
		addq.b	#1,$2E(a0)
		move.b	byte_6074(pc,d0.w),d0
		bne.s	loc_6016
		move.b	#1,$2E(a0)
		move.b	byte_6074(pc),d0

loc_6016:
		lsl.w	#7,d0
		lea	(RAM_start).l,a1
		lea	(a1,d0.w),a1
		lea	(RAM_start+$200).l,a2
		move.w	#$7F,d0

loc_602C:
		move.w	(a1)+,(a2)+
		dbf	d0,loc_602C
		moveq	#0,d0
		move.b	$2F(a0),d0
		addq.b	#1,$2F(a0)
		move.b	byte_608E(pc,d0.w),d0
		bne.s	loc_604C
		move.b	#1,$2F(a0)
		move.b	byte_608E(pc),d0

loc_604C:
		lsl.w	#7,d0
		lea	(RAM_start).l,a1
		lea	(a1,d0.w),a1
		lea	(RAM_start+$F00).l,a2
		move.w	#$3F,d0

loc_6062:
		move.w	(a1)+,(a2)+
		dbf	d0,loc_6062

loc_6068:
		cmpi.w	#6,$24(a0)
		beq.w	loc_6110
		rts
; ---------------------------------------------------------------------------
byte_6074:	dc.b    2, $12,   6, $14,   8, $16,  $A, $18,  $C, $18,  $A, $16,   8, $14,   6, $12
		dc.b    3, $1A,  $E, $1C, $10, $1C,  $E, $1A,   0,   0
byte_608E:	dc.b    2, $1F, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $2A, $2B, $2C, $2D
		dc.b  $2E, $2F, $30, $31, $32, $33, $34, $35, $36, $37, $38, $39, $3A, $3B, $3C, $3D
		dc.b  $3E, $3F, $40, $41, $42, $43, $44, $45, $46, $47, $48, $49, $4A, $4B, $4C, $4D
		dc.b  $4E, $4D, $4C, $4B, $4A, $49, $48, $47, $46, $45, $44, $43, $42, $41, $40, $3F
		dc.b  $3E, $3D, $3C, $3B, $3A, $39, $38, $37, $36, $35, $34, $33, $32, $31, $30, $2F
		dc.b  $2E, $2D, $2C, $2B, $2A, $29, $28, $27, $26, $25, $24, $23, $22, $21, $20, $1F
		dc.b    2, $4F, $50, $51, $52, $53, $54, $55, $56, $57, $58, $59, $5A, $5B, $5C, $5D
		dc.b  $5E, $5D, $5C, $5B, $5A, $59, $58, $57, $56, $55, $54, $53, $52, $51, $50, $4F
		dc.b    0,   0
; ---------------------------------------------------------------------------

loc_6110:
		move	#$2700,sr
		movem.l	d0-a6,-(sp)
		lea	(Plane_buffer).w,a0
		lea	(Block_table).w,a2
		lea	(Level_layout_main).w,a3
		move.w	#$C000,d7
		move.w	(Camera_X_pos).w,d0
		move.w	d0,d1
		move.w	(Camera_Y_pos).w,d0
		andi.w	#$FF0,d0
		jsr	(Refresh_PlaneFull).l
		movem.l	(sp)+,d0-a6
		move	#$2300,sr
		rts
; ---------------------------------------------------------------------------

LevelSelect_S2Options:
		bsr.w	Pal_FadeToBlack
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#$BF,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	Clear_DisplayData
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$8230,(a6)
		move.w	#$8700,(a6)
		move.w	#$8C81,(a6)
		move.w	#$9001,(a6)
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_618C:
		move.l	d0,(a1)+
		dbf	d1,loc_618C
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_619C:
		move.l	d0,(a1)+
		dbf	d1,loc_619C
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		move.l	#$42000000,(VDP_control_port).l
		lea	(ArtNem_S22POptions).l,a0
		bsr.w	Nem_Decomp
		move.l	#$4E000000,(VDP_control_port).l
		lea	(ArtNem_S2MenuBox).l,a0
		bsr.w	Nem_Decomp
		move.l	#$52000000,(VDP_control_port).l
		lea	(ArtNem_S2LevelSelectPics).l,a0
		bsr.w	Nem_Decomp
		lea	(RAM_start).l,a1
		lea	(MapEni_S22POptions).l,a0
		move.w	#$6000,d0
		bsr.w	Eni_Decomp
		lea	(RAM_start).l,a1
		move.l	#$60000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		cmpi.b	#$24,(Game_mode).w
		beq.w	MenuScreen_Options
		cmpi.b	#$28,(Game_mode).w
		beq.w	MenuScreen_LevelSelect
		lea	(RAM_start).l,a1
		lea	(MapEni_S2LevSel2P).l,a0
		move.w	#$70,d0
		bsr.w	Eni_Decomp
		lea	(RAM_start+$198).l,a1
		lea	(MapEni_S2LevSel2P).l,a0
		move.w	#$2070,d0
		bsr.w	Eni_Decomp
		lea	(RAM_start+$330).l,a1
		lea	(MapEni_S2LevSelIcon).l,a0
		move.w	#$90,d0
		bsr.w	Eni_Decomp
		lea	(RAM_start+$498).l,a2
		moveq	#$F,d1

loc_626C:
		move.w	#$207B,(a2)+
		dbf	d1,loc_626C
		bsr.w	Update2PLevSelSelection
		addq.b	#1,(Current_zone_2P).w
		andi.b	#3,(Current_zone_2P).w
		bsr.w	ClearOld2PLevSelSelection
		addq.b	#1,(Current_zone_2P).w
		andi.b	#3,(Current_zone_2P).w
		bsr.w	ClearOld2PLevSelSelection
		addq.b	#1,(Current_zone_2P).w
		andi.b	#3,(Current_zone_2P).w
		bsr.w	ClearOld2PLevSelSelection
		addq.b	#1,(Current_zone_2P).w
		andi.b	#3,(Current_zone_2P).w
		clr.w	(Player_mode).w
		clr.b	(Current_act_2P).w
		clr.w	(Results_screen_2P).w
		clr.b	(Level_started_flag).w
		clr.w	(Anim_Counters).w
		clr.w	(_unkFF98).w
		lea	(AniPLC_SONICMILES).l,a2
		jsr	(AnimateTiles_DoAniPLC).l
		moveq	#4,d0
		bsr.w	LoadPalette
		lea	(Normal_palette_line_3).w,a1
		lea	(Target_palette_line_3).w,a2
		moveq	#7,d1

loc_62E0:
		move.l	(a1),(a2)+
		clr.l	(a1)+
		dbf	d1,loc_62E0
		moveq	#signextendB(mus_DataSelect),d0
		bsr.w	Play_Sound
		move.w	#$707,(Demo_timer).w
		clr.w	(Competition_mode).w
		clr.l	(Camera_X_pos).w
		clr.l	(Camera_Y_pos).w
		move.b	#$16,(V_int_routine).w
		bsr.w	Wait_VSync
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	Pal_FadeFromBlack

LevelSelect2P_Main:
		move.b	#$16,(V_int_routine).w
		bsr.w	Wait_VSync
		move	#$2700,sr
		bsr.w	ClearOld2PLevSelSelection
		bsr.w	LevelSelect2P_Controls
		bsr.w	Update2PLevSelSelection
		move	#$2300,sr
		lea	(AniPLC_SONICMILES).l,a2
		jsr	(AnimateTiles_DoAniPLC).l
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.b	#-$80,d0
		bne.s	LevelSelect2P_PressStart
		bra.w	LevelSelect2P_Main
; ---------------------------------------------------------------------------

LevelSelect2P_PressStart:
		bsr.w	Chk2PZoneCompletion
		bmi.s	loc_6368
		moveq	#signextendB(sfx_Error),d0
		bsr.w	Play_Sound_2
		bra.w	LevelSelect2P_Main
; ---------------------------------------------------------------------------

loc_6368:
		move.b	#0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------
		moveq	#0,d0
		move.b	(Current_zone_2P).w,d0
		add.w	d0,d0
		move.w	LevelSelect2P_LevelOrder(pc,d0.w),d0
		bmi.s	loc_63BE
		move.w	d0,(Current_zone_and_act).w
		move.w	d0,(Apparent_zone_and_act).w
		move.w	d0,(Saved_zone_and_act).w
		move.w	#1,(Competition_mode).w
		move.b	#$C,(Game_mode).w
		move.b	#0,(Last_star_post_hit).w
		move.b	#0,(Special_bonus_entry_flag).w
		moveq	#0,d0
		move.l	d0,(Score).w
		move.l	d0,(Score_P2).w
		move.l	#5000,(Next_extra_life_score).w
		move.l	#5000,(Next_extra_life_score_P2).w
		rts
; ---------------------------------------------------------------------------

loc_63BE:
		move.b	#4,(Current_special_stage).w
		move.b	#$10,(Game_mode).w
		moveq	#1,d0
		move.w	d0,(Competition_mode).w
		move.w	d0,(Competition_mode_monitors).w
		rts
; ---------------------------------------------------------------------------
LevelSelect2P_LevelOrder:
		dc.w 0
		dc.w $B00
		dc.w $C00
		dc.w $FFFF

; =============== S U B R O U T I N E =======================================


LevelSelect2P_Controls:
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		move.b	d0,d1
		andi.b	#3,d0
		beq.s	loc_63F4
		bchg	#1,(Current_zone_2P).w

loc_63F4:
		andi.b	#$C,d1
		beq.s	locret_6400
		bchg	#0,(Current_zone_2P).w

locret_6400:
		rts
; End of function LevelSelect2P_Controls


; =============== S U B R O U T I N E =======================================


Update2PLevSelSelection:
		moveq	#0,d0
		move.b	(Current_zone_2P).w,d0
		lsl.w	#4,d0
		lea	(S2LevSel2PIconData).l,a3
		lea	(a3,d0.w),a3
		move.w	#$6000,d0
		lea	(RAM_start+$48).l,a2
		movea.l	(a3)+,a1
		bsr.w	MenuScreenTextToRAM
		lea	(RAM_start+$94).l,a2
		movea.l	(a3)+,a1
		bsr.w	MenuScreenTextToRAM
		lea	(RAM_start+$D8).l,a2
		movea.l	4(a3),a1
		bsr.w	Chk2PZoneCompletion
		bmi.s	loc_6446
		lea	(RAM_start+$468).l,a1

loc_6446:
		moveq	#2,d1

loc_6448:
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		lea	$1A(a2),a2
		dbf	d1,loc_6448
		lea	(RAM_start).l,a1
		move.l	(a3)+,d0
		moveq	#$10,d1
		moveq	#$B,d2
		bsr.w	Plane_Map_To_VRAM
		lea	(Pal_S2LevelIcons).l,a1
		moveq	#0,d0
		move.b	(a3),d0
		lsl.w	#5,d0
		lea	(a1,d0.w),a1
		lea	(Normal_palette_line_3).w,a2
		moveq	#7,d1

loc_647A:
		move.l	(a1)+,(a2)+
		dbf	d1,loc_647A
		rts
; End of function Update2PLevSelSelection


; =============== S U B R O U T I N E =======================================


Chk2PZoneCompletion:
		moveq	#0,d0
		move.b	(Current_zone_2P).w,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		add.w	d0,d0
		lea	(a5,d0.w),a5
		move.w	(a5),d0
		add.w	2(a5),d0
		rts
; End of function Chk2PZoneCompletion


; =============== S U B R O U T I N E =======================================


ClearOld2PLevSelSelection:
		moveq	#0,d0
		move.b	(Current_zone_2P).w,d0
		lsl.w	#4,d0
		lea	(S2LevSel2PIconData).l,a3
		lea	(a3,d0.w),a3
		moveq	#0,d0
		lea	(RAM_start+$1E0).l,a2
		movea.l	(a3)+,a1
		bsr.w	MenuScreenTextToRAM
		lea	(RAM_start+$22C).l,a2
		movea.l	(a3)+,a1
		bsr.w	MenuScreenTextToRAM
		lea	(RAM_start+$270).l,a2
		lea	(RAM_start+$498).l,a1
		bsr.w	Chk2PZoneCompletion
		bmi.s	loc_64E0
		lea	(RAM_start+$468).l,a1

loc_64E0:
		moveq	#2,d1

loc_64E2:
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		lea	$1A(a2),a2
		dbf	d1,loc_64E2
		lea	(RAM_start+$198).l,a1
		move.l	(a3)+,d0
		moveq	#$10,d1
		moveq	#$B,d2
		bra.w	Plane_Map_To_VRAM
; End of function ClearOld2PLevSelSelection

; ---------------------------------------------------------------------------
S2LevSel2PIconData:
		dc.l Text2P_EmeraldHill
		dc.l Text2P_Zone
		dc.l $41040003
		dc.l $FF0330
		dc.l Text2P_MysticCave
		dc.l Text2P_Zone
		dc.l $412C0003
		dc.l $5FF03A8
		dc.l Text2P_CasinoNight
		dc.l Text2P_Zone
		dc.l $47840003
		dc.l $6FF03C0
		dc.l Text2P_Special
		dc.l Text2P_Stage
		dc.l $47AC0003
		dc.l $CFF0450

; =============== S U B R O U T I N E =======================================


MenuScreenTextToRAM:
		moveq	#0,d1
		move.b	(a1)+,d1

loc_6542:
		move.b	(a1)+,d0
		move.w	d0,(a2)+
		dbf	d1,loc_6542
		rts
; End of function MenuScreenTextToRAM

; ---------------------------------------------------------------------------

MenuScreen_Options:
		lea	(RAM_start).l,a1
		lea	(MapEni_S2Options).l,a0
		move.w	#$70,d0
		bsr.w	Eni_Decomp
		lea	(RAM_start+$160).l,a1
		lea	(MapEni_S2Options).l,a0
		move.w	#$2070,d0
		bsr.w	Eni_Decomp
		clr.b	(Options_menu_box).w
		bsr.w	OptionScreen_DrawSelected
		addq.b	#1,(Options_menu_box).w
		bsr.w	OptionScreen_DrawUnselected
		addq.b	#1,(Options_menu_box).w
		bsr.w	OptionScreen_DrawUnselected
		clr.b	(Options_menu_box).w
		clr.b	(Level_started_flag).w
		clr.w	(Anim_Counters).w
		lea	(AniPLC_SONICMILES).l,a2
		jsr	(AnimateTiles_DoAniPLC).l
		moveq	#4,d0
		bsr.w	LoadPalette
		moveq	#signextendB(mus_DataSelect),d0
		bsr.w	Play_Sound
		clr.w	(Competition_mode).w
		clr.l	(Camera_X_pos).w
		clr.l	(Camera_Y_pos).w
		clr.w	(Level_select_cheat_counter).w
		clr.w	(Debug_mode_cheat_counter).w
		move.b	#$16,(V_int_routine).w
		bsr.w	Wait_VSync
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	Pal_FadeFromBlack

OptionScreen_Main:
		move.b	#$16,(V_int_routine).w
		bsr.w	Wait_VSync
		move	#$2700,sr
		bsr.w	OptionScreen_DrawUnselected
		bsr.w	OptionScreen_Controls
		bsr.w	OptionScreen_DrawSelected
		move	#$2300,sr
		lea	(AniPLC_SONICMILES).l,a2
		jsr	(AnimateTiles_DoAniPLC).l
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.b	#-$80,d0
		bne.s	OptionScreen_Select
		bra.w	OptionScreen_Main
; ---------------------------------------------------------------------------

OptionScreen_Select:
		move.b	(Options_menu_box).w,d0
		bne.s	OptionScreen_Select_Not1P
		moveq	#0,d0
		move.w	d0,(Competition_mode).w
		move.w	d0,(Competition_mode_monitors).w
		move.w	d0,(Current_zone_and_act).w
		move.w	d0,(Apparent_zone_and_act).w
		move.w	d0,(Saved_zone_and_act).w
		move.b	#$C,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

OptionScreen_Select_Not1P:
		subq.b	#1,d0
		bne.s	OptionScreen_Select_Other
		moveq	#1,d0
		move.w	d0,(Competition_mode).w
		move.w	d0,(Competition_mode_monitors).w
		move.b	#$1C,(Game_mode).w
		move.b	#0,(Current_zone_2P).w
		move.w	#0,(Player_mode).w
		rts
; ---------------------------------------------------------------------------

OptionScreen_Select_Other:
		move.b	#0,(Game_mode).w
		rts

; =============== S U B R O U T I N E =======================================


OptionScreen_Controls:
		moveq	#0,d2
		move.b	(Options_menu_box).w,d2
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		btst	#0,d0
		beq.s	loc_6686
		subq.b	#1,d2
		bcc.s	loc_6686
		move.b	#2,d2

loc_6686:
		btst	#1,d0
		beq.s	loc_6696
		addq.b	#1,d2
		cmpi.b	#3,d2
		bcs.s	loc_6696
		moveq	#0,d2

loc_6696:
		move.b	d2,(Options_menu_box).w
		lsl.w	#2,d2
		move.b	OptionScreen_Choices(pc,d2.w),d3
		movea.l	OptionScreen_Choices(pc,d2.w),a1
		move.w	(a1),d2
		btst	#2,d0
		beq.s	loc_66B2
		subq.b	#1,d2
		bcc.s	loc_66B2
		move.b	d3,d2

loc_66B2:
		btst	#3,d0
		beq.s	loc_66C0
		addq.b	#1,d2
		cmp.b	d3,d2
		bls.s	loc_66C0
		moveq	#0,d2

loc_66C0:
		btst	#6,d0
		beq.s	loc_66D0
		addi.b	#$10,d2
		cmp.b	d3,d2
		bls.s	loc_66D0
		moveq	#0,d2

loc_66D0:
		move.w	d2,(a1)
		cmpi.b	#2,(Options_menu_box).w
		bne.s	locret_66FE
		andi.w	#$30,d0
		beq.s	locret_66FE
		move.w	(Sound_test_sound).w,d0
		bsr.w	Play_Sound
		lea	(S2LevelSelectCodeDat).l,a0
		lea	(S2ContinueCodeDat).l,a2
		lea	(Level_select_flag).w,a1
		moveq	#0,d2
		bsr.w	CheckCheats

locret_66FE:
		rts
; End of function OptionScreen_Controls

; ---------------------------------------------------------------------------
OptionScreen_Choices:
		dc.l $2FFFF0A
		dc.l $1FFFF0C
		dc.l $C9FFFF84

; =============== S U B R O U T I N E =======================================


OptionScreen_DrawSelected:
		bsr.w	OptionScreen_SelectTextPtr
		moveq	#0,d1
		move.b	(Options_menu_box).w,d1
		lsl.w	#3,d1
		lea	(S2OptScrBoxData).l,a3
		lea	(a3,d1.w),a3
		move.w	#$6000,d0
		lea	(RAM_start+$030).l,a2
		movea.l	(a3)+,a1
		bsr.w	MenuScreenTextToRAM
		lea	(RAM_start+$0B6).l,a2
		moveq	#0,d1
		cmpi.b	#2,(Options_menu_box).w
		beq.s	loc_6754
		move.b	(Options_menu_box).w,d1
		lsl.w	#2,d1
		lea	OptionScreen_Choices(pc),a1
		movea.l	(a1,d1.w),a1
		move.w	(a1),d1
		lsl.w	#2,d1

loc_6754:
		movea.l	(a4,d1.w),a1
		bsr.w	MenuScreenTextToRAM
		cmpi.b	#2,(Options_menu_box).w
		bne.s	loc_676E
		lea	(RAM_start+$0C2).l,a2
		bsr.w	OptionScreen_HexDumpSoundTest

loc_676E:
		lea	(RAM_start).l,a1
		move.l	(a3)+,d0
		moveq	#$15,d1
		moveq	#7,d2
		bra.w	Plane_Map_To_VRAM
; End of function OptionScreen_DrawSelected


; =============== S U B R O U T I N E =======================================


OptionScreen_DrawUnselected:
		bsr.w	OptionScreen_SelectTextPtr
		moveq	#0,d1
		move.b	(Options_menu_box).w,d1
		lsl.w	#3,d1
		lea	(S2OptScrBoxData).l,a3
		lea	(a3,d1.w),a3
		moveq	#0,d0
		lea	(RAM_start+$190).l,a2
		movea.l	(a3)+,a1
		bsr.w	MenuScreenTextToRAM
		lea	(RAM_start+$216).l,a2
		moveq	#0,d1
		cmpi.b	#2,(Options_menu_box).w
		beq.s	loc_67C4
		move.b	(Options_menu_box).w,d1
		lsl.w	#2,d1
		lea	OptionScreen_Choices(pc),a1
		movea.l	(a1,d1.w),a1
		move.w	(a1),d1
		lsl.w	#2,d1

loc_67C4:
		movea.l	(a4,d1.w),a1
		bsr.w	MenuScreenTextToRAM
		cmpi.b	#2,(Options_menu_box).w
		bne.s	loc_67DE
		lea	(RAM_start+$222).l,a2
		bsr.w	OptionScreen_HexDumpSoundTest

loc_67DE:
		lea	(RAM_start+$160).l,a1
		move.l	(a3)+,d0
		moveq	#$15,d1
		moveq	#7,d2
		bra.w	Plane_Map_To_VRAM
; End of function OptionScreen_DrawUnselected


; =============== S U B R O U T I N E =======================================


OptionScreen_SelectTextPtr:
		lea	(off_6858).l,a4
		tst.b	(Graphics_flags).w
		bpl.s	loc_6800
		lea	(off_6864).l,a4

loc_6800:
		tst.b	(Options_menu_box).w
		beq.s	loc_680C
		lea	(off_6870).l,a4

loc_680C:
		cmpi.b	#2,(Options_menu_box).w
		bne.s	locret_681A
		lea	(off_6878).l,a4

locret_681A:
		rts
; End of function OptionScreen_SelectTextPtr


; =============== S U B R O U T I N E =======================================


OptionScreen_HexDumpSoundTest:
		move.w	(Sound_test_sound).w,d1
		move.b	d1,d2
		lsr.b	#4,d1
		bsr.s	sub_6828
		move.b	d2,d1
; End of function OptionScreen_HexDumpSoundTest


; =============== S U B R O U T I N E =======================================


sub_6828:
		andi.w	#$F,d1
		cmpi.b	#$A,d1
		bcs.s	loc_6836
		addi.b	#4,d1

loc_6836:
		addi.b	#$10,d1
		move.b	d1,d0
		move.w	d0,(a2)+
		rts
; End of function sub_6828

; ---------------------------------------------------------------------------
S2OptScrBoxData:dc.l TextOptScr_PlayerSelect
		dc.l $41920003
		dc.l TextOptScr_VsModeItems
		dc.l $45920003
		dc.l TextOptScr_SoundTest
		dc.l $49920003
off_6858:	dc.l TextOptScr_SonicAndMiles
		dc.l TextOptScr_SonicAlone
		dc.l TextOptScr_MilesAlone
off_6864:	dc.l TextOptScr_SonicAndTails
		dc.l TextOptScr_SonicAlone
		dc.l TextOptScr_TailsAlone
off_6870:	dc.l TextOptScr_AllKindsItems
		dc.l TextOptScr_TeleportOnly
off_6878:	dc.l TextOptScr_0
; ---------------------------------------------------------------------------

MenuScreen_LevelSelect:
		lea	(RAM_start).l,a1
		lea	(MapEni_S2LevSel).l,a0
		move.w	#0,d0
		bsr.w	Eni_Decomp
		lea	(RAM_start).l,a3
		move.w	#$31F,d1

loc_689A:
		move.w	#0,(a3)+
		dbf	d1,loc_689A
		lea	(RAM_start+$696).l,a3
		move.w	#$F,d1

loc_68AC:
		move.w	#0,(a3)+
		dbf	d1,loc_68AC
		lea	(RAM_start).l,a3
		lea	(LevelSelectText).l,a1
		lea	(LevSel_MappingOffsets).l,a5
		moveq	#0,d0
		move.w	#$E,d1

loc_68CC:
		move.w	(a5)+,d3
		lea	(a3,d3.w),a2
		moveq	#0,d2
		move.b	(a1)+,d2
		move.w	d2,d3

loc_68D8:
		move.b	(a1)+,d0
		move.w	d0,(a2)+
		dbf	d2,loc_68D8
		move.w	#$D,d2
		sub.w	d3,d2
		bcs.s	loc_68F0

loc_68E8:
		move.w	#0,(a2)+
		dbf	d2,loc_68E8

loc_68F0:
		move.w	#$11,(a2)
		lea	$50(a2),a2
		move.w	#$12,(a2)
		dbf	d1,loc_68CC
		move.w	#0,(a2)
		lea	-$50(a2),a2
		move.w	#$1A,(a2)
		lea	(RAM_start).l,a1
		move.l	#$40000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		moveq	#0,d3
		bsr.w	LevelSelect_DrawSoundNumber
		lea	(RAM_start+$8C0).l,a1
		lea	(MapEni_S2LevSelIcon).l,a0
		move.w	#$90,d0
		bsr.w	Eni_Decomp
		bsr.w	LevelSelect_DrawIcon
		clr.w	(Player_mode).w
		clr.w	(Results_screen_2P).w
		clr.b	(Level_started_flag).w
		clr.w	(Anim_Counters).w
		lea	(AniPLC_SONICMILES).l,a2
		jsr	(AnimateTiles_DoAniPLC).l
		moveq	#4,d0
		bsr.w	LoadPalette
		lea	(Normal_palette_line_3).w,a1
		lea	(Target_palette_line_3).w,a2
		moveq	#7,d1

loc_696C:
		move.l	(a1),(a2)+
		clr.l	(a1)+
		dbf	d1,loc_696C
		moveq	#signextendB(mus_DataSelect),d0
		jsr	(Play_Sound).l
		move.w	#$707,(Demo_timer).w
		clr.w	(Competition_mode).w
		clr.l	(Camera_X_pos).w
		clr.l	(Camera_Y_pos).w
		clr.l	(Save_pointer).w
		move.w	#$101,(Level_select_flag).w
		move.w	#$101,(Debug_cheat_flag).w
		clr.w	(Level_select_cheat_counter).w
		clr.w	(Debug_mode_cheat_counter).w
		move.b	#$16,(V_int_routine).w
		bsr.w	Wait_VSync
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	Pal_FadeFromBlack

LevelSelect_Main:
		move.b	#$16,(V_int_routine).w
		bsr.w	Wait_VSync
		move	#$2700,sr
		moveq	#0,d3
		bsr.w	LevelSelect_MarkFields
		bsr.w	LevSelControls
		move.w	#$6000,d3
		bsr.w	LevelSelect_MarkFields
		bsr.w	LevelSelect_DrawIcon
		move	#$2300,sr
		lea	(AniPLC_SONICMILES).l,a2
		jsr	(AnimateTiles_DoAniPLC).l
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.b	#$80,d0
		bne.s	LevelSelect_PressStart
		bra.w	LevelSelect_Main
; ---------------------------------------------------------------------------

LevelSelect_PressStart:
		move.w	(Level_select_option).w,d0
		add.w	d0,d0
		move.w	LS_Level_Order(pc,d0.w),d0
		bmi.w	LevelSelect_Return
		cmpi.w	#$5555,d0
		beq.w	LevelSelect_Main
		cmpi.w	#$4001,d0
		beq.w	LevelSelect_SpecialStage
		cmpi.w	#$4000,d0
		bne.w	LevelSelect_StartZone
		move.b	#$2C,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

LevelSelect_SpecialStage:
		move.b	#$34,(Game_mode).w
		rts
; ---------------------------------------------------------------------------
		move.b	#$10,(Game_mode).w
		clr.w	(Current_zone_and_act).w
		clr.w	(Apparent_zone_and_act).w
		clr.w	(Saved_zone_and_act).w
		move.b	#3,(Life_count).w
		move.b	#3,(Life_count_P2).w
		moveq	#0,d0
		move.w	d0,(Ring_count).w
		move.l	d0,(Timer).w
		move.l	d0,(Score).w
		move.w	d0,(Ring_count_P2).w
		move.l	d0,(Timer_P2).w
		move.l	d0,(Score_P2).w
		move.l	#5000,(Next_extra_life_score).w
		move.l	#5000,(Next_extra_life_score_P2).w
		move.w	(Player_option).w,(Player_mode).w
		rts
; ---------------------------------------------------------------------------
LS_Level_Order:	dc.w 0		; 0
		dc.w 1		; 1
		dc.w $100	; 2
		dc.w $101	; 3
		dc.w $200	; 4
		dc.w $201	; 5
		dc.w $300	; 6
		dc.w $301	; 7
		dc.w $5555	; 8
		dc.w $5555	; 9
		dc.w $500	; 10
		dc.w $501	; 11
		dc.w $600	; 12
		dc.w $601	; 13
		dc.w $5555	; 14
		dc.w $5555	; 15
		dc.w $5555	; 16
		dc.w $5555	; 17
		dc.w $E00	; 18
		dc.w $F00	; 19
		dc.w $1000	; 20
		dc.w $1100	; 21
		dc.w $1200	; 22
		dc.w $1300	; 23
		dc.w $5555	; 24
		dc.w $5555	; 25
		dc.w $4000	; 26
		dc.w $4001	; 27
		dc.w $FFFF	; 28
; ---------------------------------------------------------------------------

LevelSelect_Return:
		move.b	#0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

LevelSelect_StartZone:
		andi.w	#$3FFF,d0
		move.w	d0,(Current_zone_and_act).w
		move.w	d0,(Apparent_zone_and_act).w
		move.w	d0,(Saved_zone_and_act).w
		move.b	#$C,(Game_mode).w
		move.b	#3,(Life_count).w
		move.b	#3,(Life_count_P2).w
		moveq	#0,d0
		move.w	d0,(Ring_count).w
		move.l	d0,(Timer).w
		move.l	d0,(Score).w
		move.w	d0,(Ring_count_P2).w
		move.l	d0,(Timer_P2).w
		move.l	d0,(Score_P2).w
		move.b	d0,(Continue_count).w
		move.l	#5000,(Next_extra_life_score).w
		move.l	#5000,(Next_extra_life_score_P2).w
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound_2).l
		moveq	#0,d0
		move.w	d0,(Competition_mode_monitors).w
		move.w	d0,(Competition_mode).w
		cmpi.b	#$E,(Current_zone).w
		bcs.s	locret_6B48
		cmpi.b	#$13,(Current_zone).w
		bcc.s	locret_6B48
		move.w	#1,(Competition_mode).w

locret_6B48:
		rts

; =============== S U B R O U T I N E =======================================


LevSelControls:
		move.b	(Ctrl_1_pressed).w,d1
		andi.b	#3,d1
		bne.s	loc_6B5A
		subq.w	#1,(Level_select_repeat).w
		bpl.s	LevSelControls_CheckLR

loc_6B5A:
		move.w	#$B,(Level_select_repeat).w
		move.b	(Ctrl_1_held).w,d1
		andi.b	#3,d1
		beq.s	LevSelControls_CheckLR
		move.w	(Level_select_option).w,d0
		btst	#0,d1
		beq.s	loc_6B7A
		subq.w	#1,d0
		bcc.s	loc_6B7A
		moveq	#$1C,d0

loc_6B7A:
		btst	#1,d1
		beq.s	loc_6B8A
		addq.w	#1,d0
		cmpi.w	#$1D,d0
		bcs.s	loc_6B8A
		moveq	#0,d0

loc_6B8A:
		move.w	d0,(Level_select_option).w
		rts
; ---------------------------------------------------------------------------

LevSelControls_CheckLR:
		cmpi.w	#$1C,(Level_select_option).w
		bne.s	LevSelControls_SwitchSide
		move.w	(Sound_test_sound).w,d0
		move.b	(Ctrl_1_pressed).w,d1
		btst	#2,d1
		beq.s	loc_6BAC
		subq.b	#1,d0
		bcc.s	loc_6BAC
		moveq	#0,d0

loc_6BAC:
		btst	#3,d1
		beq.s	loc_6BBC
		addq.b	#1,d0
		cmpi.w	#$100,d0
		bcs.s	loc_6BBC
		moveq	#0,d0

loc_6BBC:
		btst	#6,d1
		beq.s	loc_6BCA
		addi.b	#$10,d0
		andi.b	#-1,d0

loc_6BCA:
		move.w	d0,(Sound_test_sound).w
		btst	#5,d1
		beq.s	loc_6BF4
		move.w	(Sound_test_sound).w,d0
		jsr	(Play_Sound).l
		lea	(DebugCodeDat).l,a0
		lea	(AllEmeraldsCodeDat).l,a2
		lea	(Debug_cheat_flag).w,a1
		moveq	#1,d2
		bra.w	CheckCheats
; ---------------------------------------------------------------------------

loc_6BF4:
		btst	#4,d1
		beq.s	locret_6C02
		moveq	#signextendB(mus_MutePSG),d0
		jsr	(Play_Sound).l

locret_6C02:
		rts
; ---------------------------------------------------------------------------

LevSelControls_SwitchSide:
		move.b	(Ctrl_1_pressed).w,d1
		andi.b	#$C,d1
		beq.s	loc_6C1A
		move.w	(Level_select_option).w,d0
		move.b	LevelSelect_SwitchTable(pc,d0.w),d0
		move.w	d0,(Level_select_option).w

loc_6C1A:
		bra.s	loc_6C3C
; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------
LevelSelect_SwitchTable:
		dc.b $12	; 0
		dc.b $13	; 1
		dc.b $14	; 2
		dc.b $15	; 3
		dc.b $16	; 4
		dc.b $17	; 5
		dc.b $18	; 6
		dc.b $19	; 7
		dc.b $1A	; 8
		dc.b $1B	; 9
		dc.b $1C	; 10
		dc.b $1C	; 11
		dc.b $1C	; 12
		dc.b $1C	; 13
		dc.b $1C	; 14
		dc.b $1C	; 15
		dc.b $1C	; 16
		dc.b $1C	; 17
		dc.b 0		; 18
		dc.b 1		; 19
		dc.b 2		; 20
		dc.b 3		; 21
		dc.b 4		; 22
		dc.b 5		; 23
		dc.b 6		; 24
		dc.b 7		; 25
		dc.b 8		; 26
		dc.b 9		; 27
		dc.b $A		; 28
		dc.b $B		; 29
; ---------------------------------------------------------------------------

loc_6C3C:
		btst	#5,(Ctrl_1_pressed).w
		beq.s	loc_6C56
		addq.b	#1,(P1_character).w
		cmpi.b	#3,(P1_character).w
		bcs.s	loc_6C56
		move.b	#0,(P1_character).w

loc_6C56:
		btst	#5,(Ctrl_2_pressed).w
		beq.s	locret_6C70
		addq.b	#1,(P2_character).w
		cmpi.b	#3,(P2_character).w
		bcs.s	locret_6C70
		move.b	#0,(P2_character).w

locret_6C70:
		rts
; End of function LevSelControls


; =============== S U B R O U T I N E =======================================


LevelSelect_MarkFields:
		lea	(RAM_start).l,a4
		lea	(LevSel_MarkTable).l,a5
		lea	(VDP_data_port).l,a6
		moveq	#0,d0
		move.w	(Level_select_option).w,d0
		lsl.w	#2,d0
		lea	(a5,d0.w),a3
		moveq	#0,d0
		move.b	(a3),d0
		mulu.w	#$50,d0
		moveq	#0,d1
		move.b	1(a3),d1
		add.w	d1,d0
		lea	(a4,d0.w),a1
		moveq	#0,d1
		move.b	(a3),d1
		lsl.w	#7,d1
		add.b	1(a3),d1
		addi.w	#$C000,d1
		lsl.l	#2,d1
		lsr.w	#2,d1
		ori.w	#$4000,d1
		swap	d1
		move.l	d1,VDP_control_port-VDP_data_port(a6)
		moveq	#$E,d2

loc_6CC2:
		move.w	(a1)+,d0
		add.w	d3,d0
		move.w	d0,(a6)
		dbf	d2,loc_6CC2
		addq.w	#2,a3
		moveq	#0,d0
		move.b	(a3),d0
		beq.s	loc_6D06
		mulu.w	#$50,d0
		moveq	#0,d1
		move.b	1(a3),d1
		add.w	d1,d0
		lea	(a4,d0.w),a1
		moveq	#0,d1
		move.b	(a3),d1
		lsl.w	#7,d1
		add.b	1(a3),d1
		addi.w	#$C000,d1
		lsl.l	#2,d1
		lsr.w	#2,d1
		ori.w	#$4000,d1
		swap	d1
		move.l	d1,VDP_control_port-VDP_data_port(a6)
		move.w	(a1)+,d0
		add.w	d3,d0
		move.w	d0,(a6)

loc_6D06:
		cmpi.w	#$1C,(Level_select_option).w
		bne.s	LevelSelect_DrawCharacterNumber
		bra.w	LevelSelect_DrawSoundNumber
; ---------------------------------------------------------------------------

LevelSelect_DrawCharacterNumber:
		move.l	#$41B80003,(VDP_control_port).l
		move.b	(P1_character).w,d0
		bsr.s	LevelSelect_DrawContinued
		move.l	#$41C00003,(VDP_control_port).l
		move.b	(P2_character).w,d0
		bra.s	LevelSelect_DrawContinued
; End of function LevelSelect_MarkFields


; =============== S U B R O U T I N E =======================================


LevelSelect_DrawSoundNumber:
		move.l	#$48460003,(VDP_control_port).l
		move.w	(Sound_test_sound).w,d0
; End of function LevelSelect_DrawSoundNumber


; =============== S U B R O U T I N E =======================================


LevelSelect_DrawContinued:
		move.b	d0,d2
		lsr.b	#4,d0
		bsr.s	sub_6D48
		move.b	d2,d0
; End of function LevelSelect_DrawContinued


; =============== S U B R O U T I N E =======================================


sub_6D48:
		andi.w	#$F,d0
		cmpi.b	#$A,d0
		bcs.s	loc_6D56
		addi.b	#4,d0

loc_6D56:
		addi.b	#$10,d0
		add.w	d3,d0
		move.w	d0,(a6)
		rts
; End of function sub_6D48


; =============== S U B R O U T I N E =======================================


LevelSelect_DrawIcon:
		move.w	(Level_select_option).w,d0
		lea	(LevSel_IconTable).l,a3
		lea	(a3,d0.w),a3
		lea	(RAM_start+$8C0).l,a1
		moveq	#0,d0
		move.b	(a3),d0
		lsl.w	#3,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		lea	(a1,d0.w),a1
		move.l	#$4B360003,d0
		moveq	#3,d1
		moveq	#2,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(Pal_S2LevelIcons).l,a1
		moveq	#0,d0
		move.b	(a3),d0
		lsl.w	#5,d0
		lea	(a1,d0.w),a1
		lea	(Normal_palette_line_3).w,a2
		moveq	#7,d1

loc_6DAA:
		move.l	(a1)+,(a2)+
		dbf	d1,loc_6DAA
		rts
; End of function LevelSelect_DrawIcon

; ---------------------------------------------------------------------------
LevSel_IconTable:
		dc.b    0,   0
		dc.b    7,   7
		dc.b    8,   8
		dc.b    6,   6
		dc.b    2,   2
		dc.b    5,   5
		dc.b    4,   4
		dc.b    1,   1
		dc.b    9,   9
		dc.b   $A,  $A
		dc.b    3,   3
		dc.b   $B,  $B
		dc.b   $B,  $B
		dc.b   $C,  $C
		dc.b   $E,   0
LevSel_MarkTable:
		dc.b    1,   6,   1, $24
		dc.b    1,   6,   2, $24
		dc.b    4,   6,   4, $24
		dc.b    4,   6,   5, $24
		dc.b    7,   6,   7, $24
		dc.b    7,   6,   8, $24
		dc.b   $A,   6,  $A, $24
		dc.b   $A,   6,  $B, $24
		dc.b   $D,   6,  $D, $24
		dc.b   $D,   6,  $E, $24
		dc.b  $10,   6, $10, $24
		dc.b  $10,   6, $11, $24
		dc.b  $13,   6, $13, $24
		dc.b  $13,   6, $14, $24
		dc.b  $16,   6, $16, $24
		dc.b  $16,   6, $17, $24
		dc.b  $19,   6, $19, $24
		dc.b  $19,   6, $1A, $24
		dc.b    1, $2C,   1, $4A
		dc.b    1, $2C,   2, $4A
		dc.b    4, $2C,   4, $4A
		dc.b    4, $2C,   5, $4A
		dc.b    7, $2C,   7, $4A
		dc.b    7, $2C,   8, $4A
		dc.b   $A, $2C,  $A, $4A
		dc.b   $A, $2C,  $B, $4A
		dc.b   $D, $2C,  $D, $4A
		dc.b   $D, $2C,  $E, $4A
		dc.b  $10, $2C, $10, $4A
LevSel_MappingOffsets:
		dc.w $56
		dc.w $146
		dc.w $236
		dc.w $326
		dc.w $416
		dc.w $506
		dc.w $5F6
		dc.w $6E6
		dc.w $7D6
		dc.w $7C
		dc.w $16C
		dc.w $25C
		dc.w $34C
		dc.w $43C
		dc.w $52C
		dc.w $61C

; =============== S U B R O U T I N E =======================================


CheckCheats:
		move.w	(Level_select_cheat_counter).w,d0
		adda.w	d0,a0
		move.w	(Sound_test_sound).w,d0
		cmp.b	(a0),d0
		bne.s	loc_6E88
		addq.w	#1,(Level_select_cheat_counter).w
		tst.b	1(a0)
		bne.s	loc_6E8E
		move.w	#$101,(a1)
		moveq	#signextendB(sfx_RingRight),d0
		jsr	(Play_Sound_2).l

loc_6E88:
		move.w	#0,(Level_select_cheat_counter).w

loc_6E8E:
		move.w	(Debug_mode_cheat_counter).w,d0
		adda.w	d0,a2
		move.w	(Sound_test_sound).w,d0
		cmp.b	(a2),d0
		bne.s	loc_6EC8
		addq.w	#1,(Debug_mode_cheat_counter).w
		tst.b	1(a2)
		bne.s	locret_6ECE
		tst.w	d2
		bne.s	loc_6EBA
		move.b	#$F,(Continue_count).w
		moveq	#signextendB(mus_Continue),d0
		jsr	(Play_Sound).l
		bra.s	loc_6EC8
; ---------------------------------------------------------------------------

loc_6EBA:
		move.w	#7,(Emerald_count).w
		moveq	#signextendB(mus_Emerald),d0
		jsr	(Play_Sound).l

loc_6EC8:
		move.w	#0,(Debug_mode_cheat_counter).w

locret_6ECE:
		rts
; End of function CheckCheats

; ---------------------------------------------------------------------------
S2LevelSelectCodeDat:
		dc.b  $19, $65,   9, $17,   0
S2ContinueCodeDat:
		dc.b    1,   1,   2,   4,   0
DebugCodeDat:
		dc.b    1,   3,   5,   7,   0
AllEmeraldsCodeDat:
		dc.b    2,   4,   5,   6,   0
TextOptScr_PlayerSelect:
		levselstr "* PLAYER SELECT *"
TextOptScr_SonicAndMiles:
		levselstr "SONIC AND MILES"
TextOptScr_SonicAndTails:
		levselstr "SONIC AND TAILS"
TextOptScr_SonicAlone:
		levselstr "SONIC ALONE    "
TextOptScr_MilesAlone:
		levselstr "MILES ALONE    "
TextOptScr_TailsAlone:
		levselstr "TAILS ALONE    "
TextOptScr_VsModeItems:
		levselstr "* VS MODE ITEMS *"
TextOptScr_AllKindsItems:
		levselstr "ALL KINDS ITEMS"
TextOptScr_TeleportOnly:
		levselstr "TELEPORT ONLY  "
TextOptScr_SoundTest:
		levselstr "*  SOUND TEST   *"
TextOptScr_0:
		levselstr "      00       "
Text2P_EmeraldHill:
		levselstr "EMERALD HILL"
Text2P_MysticCave:
		levselstr " MYSTIC CAVE"
Text2P_CasinoNight:
		levselstr "CASINO NIGHT"
Text2P_SpecialStage:
		levselstr "SPECIAL STAGE"
Text2P_Special:	levselstr "   SPECIAL  "
Text2P_Zone:	levselstr "ZONE "
Text2P_Stage:	levselstr "STAGE"
Text2P_GameOver:levselstr "GAME OVER"
Text2P_TimeOver:levselstr "TIME OVER"
Text2P_NoGame:	levselstr "NO GAME"
Text2P_Tied:	levselstr "TIED"
Text2P_1P:	levselstr " 1P"
Text2P_2P:	levselstr " 2P"
Text2P_Blank:	levselstr "    "
LevelSelectText:levselstr "ANGEL ISLAND"
		levselstr "HYDROCITY"
		levselstr "MARBLE GARDEN"
		levselstr "CARNIVAL NIGHT"
		levselstr "FLYING BATTERY"
		levselstr "ICECAP"
		levselstr "LAUNCH BASE"
		levselstr "MUSHROOM VALLEY"
		levselstr "SANDOPOLIS"
		levselstr "2P VS"
		levselstr "2P VS"
		levselstr "2P VS"
		levselstr "BONUS"
		levselstr "SPECIAL STAGE"
		levselstr "SOUND TEST  *"
		even
Pal_S2LevelIcons:
		binclude "General/Sprites/S2Menu/Palettes/Level Select Icons.bin"
		even
MapEni_S2LevSel2P:
		binclude "General/Sprites/S2Menu/Enigma Map/Level Select 2P.bin"
		even
MapEni_S2Options:
		binclude "General/Sprites/S2Menu/Enigma Map/Options Screen.bin"
		even
MapEni_S2LevSel:binclude "General/Sprites/S2Menu/Enigma Map/Level Select.bin"
		even
MapEni_S2LevSelIcon:
		binclude "General/Sprites/S2Menu/Enigma Map/Level Select Icons.bin"
		even
AniPLC_SONICMILES:dc.w 0
		dc.l ArtUnc_SONICMILES+$FF000000
		dc.w $20
		dc.b    6,  $A
		dc.b    0, $C7
		dc.b   $A,   5
		dc.b  $14,   5
		dc.b  $1E, $C7
		dc.b  $14,   5
		dc.b   $A,   5
; ---------------------------------------------------------------------------

SpecialStage:
		moveq	#signextendB(mus_Stop),d0
		bsr.w	Play_Sound
		bsr.w	Clear_Nem_Queue
		bsr.w	Pal_FadeToWhite
		move	#$2700,sr
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$9001,(a6)
		move.w	#$9200,(a6)
		move.w	#$8B00,(a6)
		move.w	#$8720,(a6)
		clr.b	(Water_full_screen_flag).w
		move.w	#$8C81,(a6)
		bsr.w	Clear_DisplayData
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_7500:
		move.l	d0,(a1)+
		dbf	d1,loc_7500
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_7510:
		move.l	d0,(a1)+
		dbf	d1,loc_7510
		lea	(Stat_table).w,a1
		moveq	#0,d0
		move.w	#$3F,d1

loc_7520:
		move.l	d0,(a1)+
		dbf	d1,loc_7520
		jsr	(Init_SpriteTable).l
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		lea	(Pal_SStage_Main).l,a1
		lea	(Target_palette).w,a2
		move.w	#$3F,d0

loc_7546:
		move.w	(a1)+,(a2)+
		dbf	d0,loc_7546
		move.l	#$40000000,(VDP_control_port).l
		lea	(ArtNem_SStageLayout).l,a0
		bsr.w	Nem_Decomp
		lea	(MapUnc_SStageLayout).l,a1
		move.l	#$40000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		move.l	#$50000003,(VDP_control_port).l
		lea	(ArtNem_SStageSphere).l,a0
		bsr.w	Nem_Decomp
		move.l	#$74E00002,(VDP_control_port).l
		lea	(ArtNem_SStageRing).l,a0
		bsr.w	Nem_Decomp
		move.l	#$73600002,(VDP_control_port).l
		lea	(ArtNem_SStageBG).l,a0
		bsr.w	Nem_Decomp
		move.l	#$6BE00002,(VDP_control_port).l
		lea	(ArtNem_GetBlueSpheres).l,a0
		bsr.w	Nem_Decomp
		move.l	#$5F000003,(VDP_control_port).l
		lea	(ArtNem_GBSArrow).l,a0
		bsr.w	Nem_Decomp
		move.l	#$70200003,(VDP_control_port).l
		lea	(ArtNem_SStageDigits).l,a0
		bsr.w	Nem_Decomp
		lea	(ArtNem_SStageDigits).l,a0
		lea	(H_scroll_buffer+$20).w,a4
		bsr.w	Nem_Decomp_To_RAM
		move.l	#$71200002,(VDP_control_port).l
		lea	(ArtNem_SStageIcons).l,a0
		bsr.w	Nem_Decomp
		move.l	#$74000003,(VDP_control_port).l
		lea	(ArtNem_SStageShadow).l,a0
		bsr.w	Nem_Decomp
		lea	(SSNum000_Map).l,a1
		move.l	#$40840003,d0
		moveq	#7,d1
		moveq	#2,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(SSNum000_Map).l,a1
		move.l	#$40BC0003,d0
		moveq	#7,d1
		moveq	#2,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(RAM_start).l,a1
		lea	(MapEni_SStageBG).l,a0
		move.w	#$459B,d0
		bsr.w	Eni_Decomp
		lea	(RAM_start).l,a1
		move.l	#$60000003,d0
		moveq	#$3F,d1
		moveq	#$1F,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(SStageLayoutPtrs).l,a2
		tst.b	(Debug_cheat_flag).w
		beq.s	loc_7692
		move.w	(Sound_test_sound).w,d0
		btst	#6,(Ctrl_1_held).w
		bne.s	loc_76B6

loc_7692:
		moveq	#0,d0
		move.b	(Current_special_stage).w,d0
		cmpi.w	#7,(Emerald_count).w
		bcc.s	loc_76B6
		lea	(Collected_emeralds_array).w,a1

loc_76A4:
		tst.b	(a1,d0.w)
		beq.s	loc_76B6
		addq.w	#1,d0
		cmpi.w	#7,d0
		bcs.s	loc_76A4
		moveq	#0,d0
		bra.s	loc_76A4
; ---------------------------------------------------------------------------

loc_76B6:
		andi.w	#7,d0
		move.b	d0,(Current_special_stage).w
		move.w	d0,d1
		lsl.w	#2,d0
		movea.l	(a2,d0.w),a2
		lea	(Level_layout_header).w,a3
		move.w	#$FF,d0

loc_76CE:
		move.l	(a2)+,(a3)+
		dbf	d0,loc_76CE
		move.w	(a2)+,(Special_stage_angle).w
		move.w	(a2)+,(Special_stage_X_pos).w
		move.w	(a2)+,(Special_stage_Y_pos).w
		move.w	(a2)+,(Special_stage_rings_left).w
		lsl.w	#4,d1
		lea	(SS_Pal_Map_Ptrs).l,a1
		lea	(Target_palette).w,a2
		movea.l	4(a1,d1.w),a1
		move.l	a1,(Special_stage_palette_addr).w
		move.l	(a1)+,$70(a2)
		move.l	(a1)+,$74(a2)
		move.l	(a1)+,$78(a2)
		move.l	(a1)+,$7C(a2)
		move.l	$10(a1),$50(a2)
		move.w	$14(a1),$54(a2)
		bsr.w	sub_8CDC
		bsr.w	Load_SSSprite_Mappings
		clr.b	(Level_started_flag).w
		move.b	#$FF,(Special_stage_sphere_HUD_flag).w
		move.b	#$80,(Special_stage_extra_life_flags).w
		move.w	#$1000,(Special_stage_rate).w
		move.w	#$708,(Special_stage_rate_timer).w
		move.w	#0,(Camera_X_pos_copy).w
		move.w	#0,(Camera_Y_pos_copy).w
		move.w	#-1,(Screen_Y_wrap_value).w
		move.l	#Obj_SStage_7F1C,(Player_1).w
		move.l	#Obj_SStage_8380,(Dynamic_object_RAM+object_size).w
		tst.w	(Player_option).w
		bne.s	loc_7770
		move.l	#Obj_SStage_8148,(Player_2).w
		move.l	#Obj_SStage_83E4,(Dynamic_object_RAM+(object_size*2)).w

loc_7770:
		move.l	#Obj_SStage_7D70,(Reserved_object_3).w
		move.l	#Obj_SStage_7DB8,(Dynamic_object_RAM).w
		jsr	(Process_Sprites).l
		bsr.w	Animate_SSRings
		bsr.w	Touch_SSSprites
		jsr	(Render_Sprites).l
		jsr	Draw_SSSprites(pc)
		bsr.w	sub_8B9A
		move.b	#1,(Special_stage_fade_timer).w
		move.b	#$1C,(V_int_routine).w
		bsr.w	Wait_VSync
		move.b	#0,(Special_stage_fade_timer).w
		move.w	#$8C89,(VDP_control_port).l
		moveq	#signextendB(mus_SpecialStage),d0
		bsr.w	Play_Sound
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	Pal_FromBlackWhite

loc_77D2:
		bsr.w	Pause_Game
		move.b	#$1C,(V_int_routine).w
		jsr	(Process_Kos_Queue).l
		bsr.w	Wait_VSync
		addq.w	#1,(Level_frame_counter).w
		jsr	(Process_Sprites).l
		bsr.w	Animate_SSRings
		bsr.w	Touch_SSSprites
		jsr	(Render_Sprites).l
		jsr	Draw_SSSprites(pc)
		bsr.w	sub_8B9A
		bsr.w	sub_89E2
		bsr.w	Process_Nem_Queue_Init
		jsr	(Process_Kos_Module_Queue).l
		cmpi.b	#$34,(Game_mode).w
		beq.s	loc_77D2
		tst.w	(Demo_mode_flag).w
		beq.s	loc_7828
		move.b	#0,(Game_mode).w

loc_7828:
		move.w	#$3C,(Demo_timer).w
		move.w	#$3F,(Palette_fade_info).w
		clr.w	(Pal_fade_delay).w

loc_7838:
		move.b	#$1C,(V_int_routine).w
		bsr.w	Wait_VSync
		jsr	(Process_Sprites).l
		bsr.w	Animate_SSRings
		bsr.w	Touch_SSSprites
		jsr	(Render_Sprites).l
		jsr	Draw_SSSprites(pc)
		bsr.w	sub_8B9A
		bsr.w	sub_89E2
		bsr.w	Process_Nem_Queue_Init
		jsr	(Process_Kos_Module_Queue).l
		subq.w	#1,(Pal_fade_delay).w
		bpl.s	loc_787C
		move.w	#2,(Pal_fade_delay).w
		bsr.w	Pal_ToWhite

loc_787C:
		tst.w	(Demo_timer).w
		bne.s	loc_7838
		addq.b	#1,(Current_special_stage).w
		cmpi.b	#7,(Current_special_stage).w
		bcs.s	locret_7894
		move.b	#0,(Current_special_stage).w

locret_7894:
		rts

; =============== S U B R O U T I N E =======================================


Rotate_SSPal:
		tst.b	(Special_stage_fade_timer).w
		bne.s	locret_78DA
		lea	(SS_Pal_Map_Ptrs).l,a1
		move.w	(Special_stage_anim_frame).w,d0
		cmpi.w	#$10,d0
		bcs.s	loc_78BA
		tst.b	(Special_stage_turning).w
		bpl.s	locret_78DA
		move.b	(Special_stage_palette_frame).w,d0
		andi.w	#$F,d0

loc_78BA:
		andi.w	#$E,d0
		neg.w	d0
		addi.w	#$10,d0
		movea.l	(Special_stage_palette_addr).w,a1
		lea	(a1,d0.w),a1
		lea	(Normal_palette_line_4+$10).w,a2
		move.w	#7,d0

loc_78D4:
		move.w	(a1)+,(a2)+
		dbf	d0,loc_78D4

locret_78DA:
		rts
; End of function Rotate_SSPal


; =============== S U B R O U T I N E =======================================


Update_SSMap:
		lea	(VDP_data_port).l,a6
		lea	(SS_Pal_Map_Ptrs).l,a1
		move.w	(Special_stage_anim_frame).w,d0
		cmp.b	(Special_stage_prev_anim_frame).w,d0
		beq.s	loc_7938
		move.b	d0,(Special_stage_prev_anim_frame).w
		lsl.w	#3,d0
		movea.l	(a1,d0.w),a3
		lea	$10E(a3),a1
		move.l	#$419E0003,(VDP_control_port).l
		moveq	#9,d1

loc_790C:
		move.w	(a1)+,(a6)
		dbf	d1,loc_790C
		lea	$140(a3),a3
		move.l	#$42000003,d0
		moveq	#$27,d1
		moveq	#$17,d2
		move.l	#$800000,d4

loc_7926:
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		move.w	d1,d3

loc_792C:
		move.w	(a3)+,(a6)
		dbf	d3,loc_792C
		add.l	d4,d0
		dbf	d2,loc_7926

loc_7938:
		tst.b	(Special_stage_sphere_HUD_flag).w
		beq.s	loc_7952
		move.b	#0,(Special_stage_sphere_HUD_flag).w
		move.l	#$40860003,d0
		move.w	(Special_stage_spheres_left).w,d1
		bsr.w	Draw_SSNum

loc_7952:
		tst.b	(Special_stage_extra_life_flags).w
		bpl.s	locret_796C
		bclr	#7,(Special_stage_extra_life_flags).w
		move.l	#$40BE0003,d0
		move.w	(Special_stage_ring_count).w,d1
		bsr.w	Draw_SSNum

locret_796C:
		rts
; End of function Update_SSMap

; ---------------------------------------------------------------------------
SS_Pal_Map_Ptrs:dc.l MapUnc_SStageLayout
		dc.l Pal_SStage_1
		dc.l MapUnc_SStageLayout+$8C0
		dc.l Pal_SStage_1
		dc.l MapUnc_SStageLayout
		dc.l Pal_SStage_2
		dc.l MapUnc_SStageLayout+$8C0
		dc.l Pal_SStage_2
		dc.l MapUnc_SStageLayout
		dc.l Pal_SStage_3
		dc.l MapUnc_SStageLayout+$8C0
		dc.l Pal_SStage_3
		dc.l MapUnc_SStageLayout
		dc.l Pal_SStage_4
		dc.l MapUnc_SStageLayout+$8C0
		dc.l Pal_SStage_4
		dc.l MapUnc_SStageLayout
		dc.l Pal_SStage_5
		dc.l MapUnc_SStageLayout+$8C0
		dc.l Pal_SStage_5
		dc.l MapUnc_SStageLayout
		dc.l Pal_SStage_6
		dc.l MapUnc_SStageLayout+$8C0
		dc.l Pal_SStage_6
		dc.l MapUnc_SStageLayout
		dc.l Pal_SStage_7
		dc.l MapUnc_SStageLayout+$8C0
		dc.l Pal_SStage_7
		dc.l MapUnc_SStageLayout
		dc.l Pal_SStage_8
		dc.l MapUnc_SStageLayout+$8C0
		dc.l Pal_SStage_8
		dc.l MapUnc_SStageLayout+$4600
		dc.l Pal_SStage_1
		dc.l MapUnc_SStageLayout+$3D40
		dc.l Pal_SStage_1
		dc.l MapUnc_SStageLayout+$3480
		dc.l Pal_SStage_1
		dc.l MapUnc_SStageLayout+$2BC0
		dc.l Pal_SStage_1
		dc.l MapUnc_SStageLayout+$2300
		dc.l Pal_SStage_1
		dc.l MapUnc_SStageLayout+$1A40
		dc.l Pal_SStage_1
		dc.l MapUnc_SStageLayout+$1180
		dc.l Pal_SStage_1
Pal_SStage_Main:binclude "General/Special Stage/Palettes/Main.bin"
		even
Pal_SStage_1:	binclude "General/Special Stage/Palettes/3-1.bin"
		even
Pal_SStage_2:	binclude "General/Special Stage/Palettes/3-2.bin"
		even
Pal_SStage_3:	binclude "General/Special Stage/Palettes/3-3.bin"
		even
Pal_SStage_4:	binclude "General/Special Stage/Palettes/3-4.bin"
		even
Pal_SStage_5:	binclude "General/Special Stage/Palettes/3-5.bin"
		even
Pal_SStage_6:	binclude "General/Special Stage/Palettes/3-6.bin"
		even
Pal_SStage_7:	binclude "General/Special Stage/Palettes/3-7.bin"
		even
Pal_SStage_8:	binclude "General/Special Stage/Palettes/3-8 S3.bin"
		even

; =============== S U B R O U T I N E =======================================


Draw_SSNum:
		lea	(SSNum_Precision).l,a2
		moveq	#2,d6
		lea	SSNum_Map(pc),a1

loc_7BE2:
		moveq	#0,d2
		move.w	(a2)+,d3

loc_7BE6:
		sub.w	d3,d1
		bcs.s	loc_7BEE
		addq.w	#1,d2
		bra.s	loc_7BE6
; ---------------------------------------------------------------------------

loc_7BEE:
		add.w	d3,d1
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		add.w	d2,d2
		add.w	d2,d2
		lea	(a1,d2.w),a3
		move.l	(a3),(a6)
		addi.l	#$800000,d0
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		move.l	$28(a3),(a6)
		addi.l	#$800000,d0
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		move.l	$50(a3),(a6)
		subi.l	#$FC0000,d0
		dbf	d6,loc_7BE2
		rts
; End of function Draw_SSNum

; ---------------------------------------------------------------------------
SSNum_Precision:dc.w $64
		dc.w $A
		dc.w 1
SSNum_Map:	dc.l $C781CF81,$C782C783,$C781CF81,$C781CF81,$C784C785,$C786C787,$C781CF81,$CF87C788,$C781CF81,$C781CF81
		dc.l $C78ACF8A,$C78BC78C,$C78DC78E,$C78FC790,$C791C792,$C793C794,$C795C796,$C797C798,$C799CF99,$DF96DF95
		dc.l $D781DF81,$C79BD783,$DF88D787,$D781DF81,$C79CC79D,$D781DF81,$D781DF81,$C79EC79F,$D781DF81,$D781DF81
SSNum000_Map:	dc.w  $CF89, $C781, $CF81, $C781, $CF81, $C781, $CF81, $C789
		dc.w  $CF9A, $C78A, $CF8A, $C78A, $CF8A, $C78A, $CF8A, $C79A
		dc.w  $DF89, $D781, $DF81, $D781, $DF81, $D781, $DF81, $D789

; =============== S U B R O U T I N E =======================================


Create_New_Sprite2:
		movea.l	a0,a1
		move.w	#Wave_Splash,d0
		sub.w	a0,d0
		lsr.w	#6,d0
		move.b	Find_First_Sprite_Table(pc,d0.w),d0
		bmi.s	locret_7CEE

loc_7CE4:
		lea	$4A(a1),a1
		tst.l	(a1)
		dbeq	d0,loc_7CE4

locret_7CEE:
		rts
; End of function Create_New_Sprite2

; ---------------------------------------------------------------------------
Find_First_Sprite_Table:
.a		set	Object_RAM
.b		set	Object_RAM_end+object_size
.c		set	.b			; begin from bottom of array and decrease backwards
		rept	(.b-.a)/$40		; repeat for all slots, minus exception
.c		set	.c-$40			; address for previous $40 (also skip last part)
		dc.b	(.b-.c-1)/object_size-1	; write possible slots according to object_size division + hack + dbf hack
		endm
		even
; ---------------------------------------------------------------------------

Obj_SStage_7D70:
		move.b	#-$80,7(a0)
		move.b	#-$80,6(a0)
		move.w	#0,8(a0)
		move.l	#Map_SSIcons,$C(a0)
		move.w	#$C589,$A(a0)
		move.w	#$120,$10(a0)
		move.w	#$94,$14(a0)
		move.l	#loc_7DA2,(a0)

loc_7DA2:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_SSIcons:	include "General/Special Stage/Map - Icons.asm"
; ---------------------------------------------------------------------------

Obj_SStage_7DB8:
		jsr	(Create_New_Sprite2).l
		bne.w	loc_7DD4
		move.l	#loc_7DD4,(a1)
		bset	#0,$2A(a1)
		move.b	#1,$22(a1)

loc_7DD4:
		move.b	#$80,7(a0)
		move.b	#$80,6(a0)
		move.w	#0,8(a0)
		move.l	#Map_GetBlueSpheres,$C(a0)
		move.w	#$A55F,$A(a0)
		move.w	#$120,$10(a0)
		move.w	#$E8,$14(a0)
		move.w	#$B4,$32(a0)
		move.l	#loc_7E0C,(a0)

loc_7E0C:
		tst.w	$32(a0)
		beq.s	loc_7E1C
		subq.w	#1,$32(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_7E1C:
		cmpi.w	#$C0,$30(a0)
		bcs.s	loc_7E3C
		move.l	#loc_7E5E,(a0)
		addq.b	#2,$22(a0)
		tst.w	(Special_stage_velocity).w
		bne.s	loc_7E42
		move.b	#1,(Special_stage_advancing).w
		bra.s	loc_7E42
; ---------------------------------------------------------------------------

loc_7E3C:
		addi.w	#$10,$30(a0)

loc_7E42:
		move.w	$30(a0),d0
		btst	#0,$2A(a0)
		bne.s	loc_7E50
		neg.w	d0

loc_7E50:
		addi.w	#$120,d0
		move.w	d0,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_7E5E:
		tst.w	(Special_stage_rings_left).w
		beq.s	loc_7E66
		rts
; ---------------------------------------------------------------------------

loc_7E66:
		subi.w	#$10,$30(a0)
		bne.s	loc_7E7A
		move.l	#loc_7E96,(a0)
		move.w	#$B4,$32(a0)

loc_7E7A:
		move.w	$30(a0),d0
		btst	#0,$2A(a0)
		bne.s	loc_7E88
		neg.w	d0

loc_7E88:
		addi.w	#$120,d0
		move.w	d0,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_7E96:
		tst.w	$32(a0)
		beq.s	loc_7EA6
		subq.w	#1,$32(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_7EA6:
		cmpi.w	#$C0,$30(a0)
		bcc.s	loc_7EB4
		addi.w	#$10,$30(a0)

loc_7EB4:
		move.w	$30(a0),d0
		btst	#0,$2A(a0)
		bne.s	loc_7EC2
		neg.w	d0

loc_7EC2:
		addi.w	#$120,d0
		move.w	d0,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_GetBlueSpheres:
		include "General/Special Stage/Map - Get Blue Spheres.asm"
; ---------------------------------------------------------------------------

Obj_SStage_7F1C:
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$200,8(a0)
		move.l	#Map_SStageSonic,$C(a0)
		move.w	#$87D4,$A(a0)
		cmpi.w	#2,(Player_option).w
		bne.s	loc_7F6C
		move.l	#Map_SStageTails,$C(a0)
		move.w	#$A7EB,$A(a0)
		jsr	(Create_New_Sprite2).l
		bne.w	loc_7F6C
		move.l	#Obj_SStage_82EE,(a1)
		move.w	a0,$3E(a1)

loc_7F6C:
		move.w	#$A0,$30(a0)
		move.w	#$70,$32(a0)
		move.w	#0,$34(a0)
		move.w	#$F800,$36(a0)
		move.w	#0,$38(a0)
		bsr.w	sub_8402
		move.b	#$FF,$3A(a0)
		move.l	#loc_7F9A,(a0)

loc_7F9A:
		tst.w	(Special_stage_rate_timer).w
		beq.s	loc_7FCE
		subq.w	#1,(Special_stage_rate_timer).w
		bne.s	loc_7FCE
		move.w	#$708,(Special_stage_rate_timer).w
		cmpi.w	#$2000,(Special_stage_rate).w
		beq.s	loc_7FCE
		addi.w	#$400,(Special_stage_rate).w
		move.b	(Special_stage_rate).w,d0
		subi.b	#$20,d0
		neg.b	d0
		add.b	d0,d0
		addq.b	#8,d0
		jsr	(Change_Music_Tempo).l

loc_7FCE:
		bsr.w	sub_8476
		moveq	#$C,d0
		move.w	(Special_stage_velocity).w,d1
		beq.s	loc_7FF8
		asr.w	#5,d1
		add.w	d1,$24(a0)
		moveq	#0,d0
		move.b	$24(a0),d0
		bpl.s	loc_7FEE
		addi.b	#$C,d0
		bra.s	loc_7FF8
; ---------------------------------------------------------------------------

loc_7FEE:
		cmpi.b	#$C,d0
		bcs.s	loc_7FF8
		subi.b	#$C,d0

loc_7FF8:
		move.b	d0,$24(a0)
		lea	(byte_811E).l,a1
		tst.b	(Special_stage_jumping).w
		bpl.s	loc_801C
		lea	(byte_812C).l,a1
		move.w	(Special_stage_velocity).w,d1
		bne.s	loc_801C
		move.b	(Level_frame_counter+1).w,d0
		andi.w	#3,d0

loc_801C:
		move.b	(a1,d0.w),$22(a0)
		tst.b	(Special_stage_clear_routine).w
		bne.s	loc_803E
		move.w	(Ctrl_1).w,d0
		andi.w	#$70,d0
		beq.s	loc_803E
		tst.b	(Special_stage_jumping).w
		bmi.s	loc_803E
		move.b	#1,(Special_stage_jumping).w

loc_803E:
		move.b	(Special_stage_angle).w,d0
		andi.b	#$3F,d0
		bne.w	loc_80A2
		cmpi.b	#1,(Special_stage_jumping).w
		bne.s	loc_806E
		move.l	#-$100000,$40(a0)
		move.b	#-$80,(Special_stage_jumping).w
		move.b	#0,(Special_stage_turning).w
		moveq	#signextendB(sfx_Jump),d0
		jsr	(Play_Sound_2).l

loc_806E:
		tst.b	(Special_stage_jumping).w
		bpl.s	loc_80A2
		move.l	$3C(a0),d0
		add.l	$40(a0),d0
		bmi.s	loc_8088
		moveq	#0,d0
		move.l	d0,$40(a0)
		move.b	d0,(Special_stage_jumping).w

loc_8088:
		move.w	(Special_stage_rate).w,d1
		ext.l	d1
		lsl.l	#4,d1
		add.l	d1,$40(a0)
		move.l	d0,$3C(a0)
		swap	d0
		addi.w	#-$800,d0
		move.w	d0,$36(a0)

loc_80A2:
		bsr.w	sub_8402
		bsr.w	sub_8434
		jsr	(Draw_Sprite).l
		lea	(PLC_SStageSonic).l,a2
		move.l	#ArtUnc_SStageSonic,d6
		move.w	#$FA80,d4
		cmpi.w	#2,(Player_option).w
		bne.s	loc_80D8
		lea	(PLC_SStageTails).l,a2
		move.l	#ArtUnc_SStageTails,d6
		move.w	#$FD60,d4

loc_80D8:
		moveq	#0,d0
		move.b	$22(a0),d0
		cmp.b	$3A(a0),d0
		beq.s	locret_811C
		move.b	d0,$3A(a0)
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_811C

loc_80F4:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		add.l	d6,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_80F4

locret_811C:
		rts
; ---------------------------------------------------------------------------
byte_811E:	dc.b    2,   6,   7,   8,   7,   6,   2,   3,   4,   5,   4,   3,   1,   0
byte_812C:	dc.b    9,  $B,  $A,  $B,   9,  $B,  $A,  $B,   9,  $B,  $A,  $B,  $B,   0
byte_813A:	dc.b    9,  $A,  $B,   9,  $A,  $B,   9,  $A,  $B,   9,  $A,  $B,  $B,   0
; ---------------------------------------------------------------------------

Obj_SStage_8148:
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$180,8(a0)
		move.l	#Map_SStageTails,$C(a0)
		move.w	#$A7EB,$A(a0)
		move.w	#$A0,$30(a0)
		move.w	#$70,$32(a0)
		move.w	#0,$34(a0)
		move.w	#-$800,$36(a0)
		move.w	#-$20,$38(a0)
		move.b	#$FF,$3A(a0)
		bsr.w	sub_82CE
		jsr	(Create_New_Sprite2).l
		bne.w	loc_81AA
		move.l	#Obj_SStage_82EE,(a1)
		move.w	a0,$3E(a1)

loc_81AA:
		move.l	#loc_81B0,(a0)

loc_81B0:
		moveq	#$C,d0
		move.w	(Special_stage_velocity).w,d1
		beq.s	loc_81D6
		asr.w	#5,d1
		add.w	d1,$24(a0)
		moveq	#0,d0
		move.b	$24(a0),d0
		bpl.s	loc_81CC
		addi.b	#$C,d0
		bra.s	loc_81D6
; ---------------------------------------------------------------------------

loc_81CC:
		cmpi.b	#$C,d0
		bcs.s	loc_81D6
		subi.b	#$C,d0

loc_81D6:
		move.b	d0,$24(a0)
		lea	(byte_811E).l,a1
		tst.b	(Special_stage_jumping_P2).w
		beq.s	loc_81FA
		lea	(byte_813A).l,a1
		move.w	(Special_stage_velocity).w,d1
		bne.s	loc_81FA
		move.b	(Level_frame_counter+1).w,d0
		andi.w	#3,d0

loc_81FA:
		move.b	(a1,d0.w),$22(a0)
		bsr.w	sub_8272
		andi.w	#$70,d0
		beq.s	loc_8226
		tst.b	(Special_stage_jumping_P2).w
		bne.s	loc_8226
		move.l	#-$100000,$40(a0)
		move.b	#1,(Special_stage_jumping_P2).w
		moveq	#signextendB(sfx_Jump),d0
		jsr	(Play_Sound_2).l

loc_8226:
		move.l	$3C(a0),d0
		add.l	$40(a0),d0
		bmi.s	loc_823A
		moveq	#0,d0
		move.l	d0,$40(a0)
		move.b	d0,(Special_stage_jumping_P2).w

loc_823A:
		move.w	(Special_stage_rate).w,d1
		ext.l	d1
		lsl.l	#4,d1
		add.l	d1,$40(a0)
		move.l	d0,$3C(a0)
		swap	d0
		addi.w	#-$800,d0
		move.w	d0,$36(a0)
		bsr.w	sub_8434
		jsr	(Draw_Sprite).l
		lea	(PLC_SStageTails).l,a2
		move.l	#ArtUnc_SStageTails,d6
		move.w	#$FD60,d4
		bra.w	loc_80D8

; =============== S U B R O U T I N E =======================================


sub_8272:
		move.w	(Pos_table_index).w,d0
		lea	(Pos_table).w,a1
		lea	(a1,d0.w),a1
		move.w	(Ctrl_1).w,(a1)
		move.b	(Special_stage_jumping).w,2(a1)
		addq.b	#4,(Pos_table_index+1).w
		move.b	(Ctrl_2).w,d0
		andi.b	#$7F,d0
		beq.s	loc_829C
		move.w	#600,(Tails_CPU_idle_timer).w

loc_829C:
		tst.w	(Tails_CPU_idle_timer).w
		beq.s	loc_82AC
		subq.w	#1,(Tails_CPU_idle_timer).w
		move.w	(Ctrl_2).w,d0
		rts
; ---------------------------------------------------------------------------

loc_82AC:
		lea	(Pos_table).w,a1
		move.w	#8,d1
		lsl.b	#2,d1
		addq.b	#4,d1
		move.w	(Pos_table_index).w,d0
		sub.b	d1,d0
		move.b	2(a1,d0.w),d1
		moveq	#0,d0
		tst.b	d1
		bpl.s	locret_82CC
		move.w	#$70,d0

locret_82CC:
		rts
; End of function sub_8272


; =============== S U B R O U T I N E =======================================


sub_82CE:
		lea	(Pos_table).w,a2
		move.w	#$3F,d0

loc_82D6:
		move.l	#0,(a2)+
		dbf	d0,loc_82D6
		move.w	#0,(Pos_table_index).w
		move.w	#0,(Tails_CPU_idle_timer).w
		rts
; End of function sub_82CE

; ---------------------------------------------------------------------------

Obj_SStage_82EE:
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$100,8(a0)
		move.l	#Map_SStageTailstails,$C(a0)
		move.w	#$A7B0,$A(a0)
		move.w	#$A0,$30(a0)
		move.w	#$70,$32(a0)
		move.b	#-1,$3A(a0)
		move.b	#1,$22(a0)
		move.l	#loc_8332,(a0)

loc_8332:
		movea.w	$3E(a0),a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		move.w	#$2AAA,d0
		move.w	(Special_stage_velocity).w,d1
		bmi.s	loc_834E
		add.w	d1,d0

loc_834E:
		add.w	d0,$24(a0)
		bcc.s	loc_8366
		move.b	$22(a0),d0
		addq.b	#1,d0
		cmpi.b	#$F,d0
		bcs.s	loc_8362
		moveq	#1,d0

loc_8362:
		move.b	d0,$22(a0)

loc_8366:
		jsr	(Draw_Sprite).l
		lea	(PLC_SStageTailstails).l,a2
		move.l	#ArtUnc_SStageTailstails,d6
		move.w	#$F600,d4
		bra.w	loc_80D8
; ---------------------------------------------------------------------------

Obj_SStage_8380:
		move.w	#0,$34(a0)
		move.w	#$F800,$36(a0)
		move.w	#0,$38(a0)

loc_8392:
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$380,8(a0)
		move.l	#Map_SStageShadow,$C(a0)
		move.w	#$E7A0,$A(a0)
		move.w	#$A0,$30(a0)
		move.w	#$70,$32(a0)
		move.b	#-1,$3A(a0)
		bsr.w	sub_8434
		move.l	#loc_83D6,(a0)
		rts
; ---------------------------------------------------------------------------

loc_83D6:
		tst.b	(Special_stage_fade_timer).w
		beq.s	loc_83DE
		rts
; ---------------------------------------------------------------------------

loc_83DE:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_SStage_83E4:
		move.w	#0,$34(a0)
		move.w	#$F800,$36(a0)
		move.w	#$FFE0,$38(a0)
		bra.s	loc_8392
; ---------------------------------------------------------------------------
Map_SStageShadow:
		include "General/Special Stage/Map - Shadow.asm"

; =============== S U B R O U T I N E =======================================


sub_8402:
		move.w	(SStage_scalar_index_2).w,d0
		lea	(SStage_scalar_result_2).w,a1
		bsr.w	GetScalars2
		move.w	(SStage_scalar_index_1).w,d0
		lea	(SStage_scalar_result_1).w,a1
		bsr.w	GetScalars2
		move.w	(SStage_scalar_index_0).w,d0
		lea	(SStage_scalar_result_0).w,a1
		bsr.w	GetScalars2
		move.w	#$E0,d0
		lea	(SStage_scalar_result_3).w,a1
		bsr.w	GetScalars2
		rts
; End of function sub_8402


; =============== S U B R O U T I N E =======================================


sub_8434:
		move.w	$34(a0),d1
		move.w	$36(a0),d2
		move.w	$38(a0),d0
		bsr.w	sub_8FE4
		bsr.w	sub_8FBA
		bsr.w	sub_8F90
		addi.w	#$100,d0
		addi.w	#$980,d2
		bsr.w	sub_900E
		ext.l	d1
		lsl.l	#8,d1
		divs.w	d0,d1
		ext.l	d2
		lsl.l	#8,d2
		divs.w	d0,d2
		add.w	$30(a0),d1
		move.w	d1,$10(a0)
		add.w	$32(a0),d2
		move.w	d2,$14(a0)
		rts
; End of function sub_8434


; =============== S U B R O U T I N E =======================================


sub_8476:
		tst.b	(Special_stage_fade_timer).w
		beq.s	loc_84A4
		cmpi.b	#$61,(Special_stage_fade_timer).w
		bcc.s	loc_8490
		moveq	#8,d1
		add.b	d1,(Special_stage_angle).w
		addq.b	#1,(Special_stage_fade_timer).w
		rts
; ---------------------------------------------------------------------------

loc_8490:
		move.w	(Special_stage_X_pos).w,d0
		or.w	(Special_stage_Y_pos).w,d0
		andi.w	#$E0,d0
		beq.s	loc_84A4
		move.b	#0,(Special_stage_fade_timer).w

loc_84A4:
		move.w	(Special_stage_X_pos).w,d3
		btst	#6,(Special_stage_angle).w
		bne.s	loc_84B4
		move.w	(Special_stage_Y_pos).w,d3

loc_84B4:
		moveq	#0,d2
		move.b	(Special_stage_turning).w,d1
		beq.s	loc_84F0
		andi.w	#$E0,d3
		bne.s	loc_84F0
		tst.b	(Special_stage_jumping).w
		bmi.s	loc_84FC
		add.b	d1,(Special_stage_angle).w
		move.b	(Special_stage_angle).w,d0
		andi.b	#$3F,d0
		bne.w	locret_85FC
		move.b	#0,(Special_stage_turning).w
		move.b	#0,(Special_stage_bumper_lock).w
		tst.w	(Special_stage_velocity).w
		beq.s	loc_84F0
		move.b	#1,(Special_stage_turn_lock).w

loc_84F0:
		andi.w	#$E0,d3
		beq.s	loc_84FC
		move.b	#0,(Special_stage_turn_lock).w

loc_84FC:
		move.b	(Ctrl_1_held).w,d1
		move.w	(Special_stage_velocity).w,d2
		tst.b	(Special_stage_clear_routine).w
		bne.w	loc_85D4
		tst.b	(Special_stage_bumper_lock).w
		bne.s	loc_8532
		btst	#0,d1
		beq.s	loc_851E
		move.b	#1,(Special_stage_advancing).w

loc_851E:
		tst.b	(Special_stage_advancing).w
		beq.s	loc_8532
		move.w	(Special_stage_rate).w,d3
		addi.w	#$200,d2
		cmp.w	d3,d2
		blt.s	loc_8532
		move.w	d3,d2

loc_8532:
		tst.b	(Special_stage_turn_lock).w
		bne.s	loc_8550
		btst	#2,d1
		beq.s	loc_8544
		move.b	#4,(Special_stage_turning).w

loc_8544:
		btst	#3,d1
		beq.s	loc_8550
		move.b	#-4,(Special_stage_turning).w

loc_8550:
		move.w	d2,(Special_stage_velocity).w
		tst.b	(Special_stage_bumper_lock).w
		beq.s	loc_85D4
		move.w	(Special_stage_X_pos).w,d0
		btst	#6,(Special_stage_angle).w
		bne.s	loc_856A
		move.w	(Special_stage_Y_pos).w,d0

loc_856A:
		andi.w	#$E0,d0
		bne.s	loc_85AE
		move.w	(Special_stage_X_pos).w,d0
		addi.w	#$80,d0
		lsr.w	#8,d0
		andi.w	#$1F,d0
		move.w	(Special_stage_Y_pos).w,d1
		addi.w	#$80,d1
		lsr.w	#8,d1
		andi.w	#$1F,d1
		lsl.w	#5,d1
		or.b	d0,d1
		cmp.w	(Special_stage_interact).w,d1
		beq.s	loc_85AE
		move.b	#0,(Special_stage_bumper_lock).w
		move.w	(Special_stage_rate).w,d2
		tst.w	(Special_stage_velocity).w
		bmi.s	loc_85A8
		neg.w	d2

loc_85A8:
		move.w	d2,(Special_stage_velocity).w
		rts
; ---------------------------------------------------------------------------

loc_85AE:
		move.w	(Special_stage_velocity).w,d2
		bne.s	loc_85D2
		move.b	#0,(Special_stage_bumper_lock).w
		move.b	#1,(Special_stage_advancing).w
		move.w	(Special_stage_rate).w,d2
		tst.w	(Special_stage_velocity).w
		bmi.s	loc_85CC
		neg.w	d2

loc_85CC:
		move.w	d2,(Special_stage_velocity).w
		bra.s	loc_85D4
; ---------------------------------------------------------------------------

loc_85D2:
		neg.w	d2

loc_85D4:
		move.b	(Special_stage_angle).w,d0
		jsr	(GetSineCosine).l
		muls.w	d2,d0
		muls.w	d2,d1
		swap	d0
		sub.w	d0,(Special_stage_X_pos).w
		swap	d1
		sub.w	d1,(Special_stage_Y_pos).w
		tst.b	(Special_stage_jumping).w
		bmi.s	locret_85FC
		tst.b	(Special_stage_clear_routine).w
		bne.s	locret_85FC
		bsr.s	sub_85FE

locret_85FC:
		rts
; End of function sub_8476


; =============== S U B R O U T I N E =======================================


sub_85FE:
		lea	(Level_layout_header).w,a1
		move.w	(Special_stage_X_pos).w,d0
		addi.w	#$80,d0
		lsr.w	#8,d0
		andi.w	#$1F,d0
		move.w	(Special_stage_Y_pos).w,d1
		addi.w	#$80,d1
		lsr.w	#8,d1
		andi.w	#$1F,d1
		lsl.w	#5,d1
		or.b	d0,d1
		lea	(a1,d1.w),a1
		move.b	(a1),d2
		beq.w	locret_872E
		cmpi.b	#1,d2
		bne.s	loc_866E
		move.w	(Special_stage_X_pos).w,d0
		or.w	(Special_stage_Y_pos).w,d0
		andi.w	#$E0,d0
		bne.s	locret_866C
		tst.b	(Special_stage_fade_timer).w
		bne.s	locret_866C
		move.b	#1,(Special_stage_fade_timer).w
		move.b	#$48,(Game_mode).w
		tst.b	(Special_bonus_entry_flag).w
		beq.s	loc_8664
		move.w	(Saved2_zone_and_act).w,(Current_zone_and_act).w
		ori.b	#-$80,(Last_star_post_hit).w

loc_8664:
		moveq	#signextendB(sfx_Goal),d0
		jsr	(Play_Sound_2).l

locret_866C:
		rts
; ---------------------------------------------------------------------------

loc_866E:
		cmpi.b	#2,d2
		bne.s	loc_868C
		bsr.w	Find_SStageCollisionResponseSlot
		bne.s	loc_8682
		move.b	#2,(a2)
		move.l	a1,4(a2)

loc_8682:
		moveq	#signextendB(sfx_BlueSphere),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_868C:
		cmpi.b	#3,d2
		bne.s	loc_86B2
		tst.b	(Special_stage_bumper_lock).w
		bne.s	loc_86B2
		move.w	d1,(Special_stage_interact).w
		move.b	#1,(Special_stage_bumper_lock).w
		move.b	#0,(Special_stage_advancing).w
		moveq	#signextendB(sfx_Bumper),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_86B2:
		cmpi.b	#4,d2
		bne.s	locret_872E
		bsr.w	Find_SStageCollisionResponseSlot
		bne.s	loc_86C6
		move.b	#1,(a2)
		move.l	a1,4(a2)

loc_86C6:
		subq.w	#1,(Special_stage_rings_left).w
		bne.s	loc_86D4
		moveq	#signextendB(sfx_Perfect),d0
		jsr	(Play_Sound).l

loc_86D4:
		addi.w	#1,(Special_stage_ring_count).w
		bset	#7,(Special_stage_extra_life_flags).w
		cmpi.w	#50,(Special_stage_ring_count).w
		bcs.s	loc_86FE
		bset	#0,(Special_stage_extra_life_flags).w
		bne.s	loc_86FE
		addq.b	#1,(Continue_count).w
		move.w	#$FF00|sfx_Continue,d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

loc_86FE:
		moveq	#signextendB(sfx_RingRight),d0
		cmpi.w	#100,(Special_stage_ring_count).w
		bcs.s	loc_8726
		bset	#1,(Special_stage_extra_life_flags).w
		beq.s	loc_8720
		cmpi.w	#200,(Special_stage_ring_count).w
		bcs.s	loc_8726
		bset	#2,(Special_stage_extra_life_flags).w
		bne.s	loc_8726

loc_8720:
		addq.b	#1,(Life_count).w
		moveq	#signextendB(sfx_RingLoss),d0

loc_8726:
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

locret_872E:
		rts
; End of function sub_85FE

; ---------------------------------------------------------------------------
word_8730:	dc.w $18
		dc.w 6
		dc.w 1
		dc.w $1F
		dc.w $FFFF
		dc.w $1F
		dc.w 0
		dc.w 0
		dc.w 8
		dc.w 6
		dc.w $FFFF
		dc.w $1F
		dc.w $FFFF
		dc.w $1F
		dc.w 0
		dc.w 0
		dc.w 8
		dc.w $1A
		dc.w $FFFF
		dc.w $1F
		dc.w 1
		dc.w $1F
		dc.w 0
		dc.w 0
		dc.w $18
		dc.w $1A
		dc.w 1
		dc.w $1F
		dc.w 1
		dc.w $1F
		dc.w 0
		dc.w 0

; =============== S U B R O U T I N E =======================================


Draw_SSSprites:
		move.b	(Special_stage_angle).w,d0
		andi.w	#$C0,d0
		lsr.w	#2,d0
		lea	word_8730(pc,d0.w),a5
		moveq	#0,d1
		move.b	(Special_stage_X_pos).w,d1
		move.w	(Special_stage_X_pos).w,d0
		addi.w	#$100,d0
		move.w	(Special_stage_Y_pos).w,d2
		andi.w	#$100,d2
		add.w	d2,d0
		btst	#6,(Special_stage_angle).w
		bne.s	loc_87B0
		move.b	(Special_stage_Y_pos).w,d1
		move.w	(Special_stage_Y_pos).w,d0
		move.w	(Special_stage_X_pos).w,d2
		andi.w	#$100,d2
		add.w	d2,d0

loc_87B0:
		tst.b	(Special_stage_angle).w
		bmi.s	loc_87C6
		neg.w	d0
		addi.w	#$1F,d0
		move.w	d0,d2
		andi.w	#$E0,d2
		beq.s	loc_87C6
		addq.b	#1,d1

loc_87C6:
		andi.w	#$1E0,d0
		lsr.w	#5,d0
		move.w	d0,(Special_stage_anim_frame).w
		move.b	d0,(Special_stage_palette_frame).w
		move.b	(Special_stage_angle).w,d0
		andi.w	#$38,d0
		beq.s	loc_87E8
		lsr.w	#3,d0
		addi.w	#$F,d0
		move.w	d0,(Special_stage_anim_frame).w

loc_87E8:
		lea	(Draw_SSSprite_Normal).l,a0
		tst.w	(Special_stage_clear_timer).w
		beq.s	loc_87FA
		lea	(Draw_SSSprite_FlyAway).l,a0

loc_87FA:
		btst	#6,(Special_stage_angle).w
		bne.w	loc_88BC
		move.w	2(a5),d5
		add.w	d1,d5
		and.w	$A(a5),d5
		move.w	(Special_stage_anim_frame).w,d0
		add.w	d0,d0
		add.w	d0,d0
		lea	(SStage_PerspectiveMapPtrs).l,a1
		movea.l	(a1,d0.w),a1
		lea	(Level_layout_header).w,a2
		lea	(SStage_extra_sprites).w,a4
		lea	(Sprite_table_buffer).w,a6
		moveq	#$4F,d7
		moveq	#0,d6
		move.b	(Sprites_drawn).w,d6
		sub.b	d6,d7
		lsl.w	#3,d6
		adda.w	d6,a6
		moveq	#$F,d2

loc_883C:
		move.w	(a5),d4
		moveq	#0,d0
		move.b	(Special_stage_X_pos).w,d0
		add.w	d0,d4
		and.w	6(a5),d4
		moveq	#$E,d3

loc_884C:
		move.w	d5,d0
		lsl.w	#5,d0
		or.b	d4,d0
		move.b	(a2,d0.w),d0
		beq.s	loc_88A0
		move.w	(a1),d1
		andi.w	#$7C,d1
		beq.s	loc_88A0
		lsr.w	#2,d1
		subq.w	#6,d1
		cmpi.w	#$10,d1
		bcc.s	loc_88A0
		add.w	d1,d1
		andi.w	#$FF,d0
		lsl.w	#3,d0
		movea.l	(a4,d0.w),a3
		move.w	4(a4,d0.w),d6
		cmpi.w	#$54,(a1)
		bcs.s	loc_8884
		andi.w	#$7FFF,d6

loc_8884:
		move.w	6(a4,d0.w),d0
		add.w	d0,d0
		bcc.s	loc_888E
		moveq	#0,d1

loc_888E:
		add.w	d0,d1
		adda.w	(a3,d1.w),a3
		move.w	(a3)+,d1
		subq.w	#1,d1
		bmi.s	loc_88A0
		jsr	(a0)
		tst.w	d7
		bmi.s	locret_88BA

loc_88A0:
		addq.w	#6,a1
		add.w	4(a5),d4
		and.w	6(a5),d4
		dbf	d3,loc_884C
		add.w	8(a5),d5
		and.w	$A(a5),d5
		dbf	d2,loc_883C

locret_88BA:
		rts
; ---------------------------------------------------------------------------

loc_88BC:
		move.w	2(a5),d5
		add.w	d1,d5
		and.w	$A(a5),d5
		move.w	(Special_stage_anim_frame).w,d0
		add.w	d0,d0
		add.w	d0,d0
		lea	(SStage_PerspectiveMapPtrs).l,a1
		movea.l	(a1,d0.w),a1
		lea	(Level_layout_header).w,a2
		lea	(SStage_extra_sprites).w,a4
		lea	(Sprite_table_buffer).w,a6
		moveq	#$4F,d7
		moveq	#0,d6
		move.b	(Sprites_drawn).w,d6
		sub.b	d6,d7
		lsl.w	#3,d6
		adda.w	d6,a6
		moveq	#$F,d2

loc_88F4:
		move.w	(a5),d4
		moveq	#0,d0
		move.b	(Special_stage_Y_pos).w,d0
		add.w	d0,d4
		and.w	6(a5),d4
		moveq	#$E,d3

loc_8904:
		move.w	d4,d0
		lsl.w	#5,d0
		or.b	d5,d0
		move.b	(a2,d0.w),d0
		beq.s	loc_8958
		move.w	(a1),d1
		andi.w	#$7C,d1
		beq.s	loc_8958
		lsr.w	#2,d1
		subq.w	#6,d1
		cmpi.w	#$10,d1
		bcc.s	loc_8958
		add.w	d1,d1
		andi.w	#$FF,d0
		lsl.w	#3,d0
		movea.l	(a4,d0.w),a3
		move.w	4(a4,d0.w),d6
		cmpi.w	#$54,(a1)
		bcs.s	loc_893C
		andi.w	#$7FFF,d6

loc_893C:
		move.w	6(a4,d0.w),d0
		add.w	d0,d0
		bcc.s	loc_8946
		moveq	#0,d1

loc_8946:
		add.w	d0,d1
		adda.w	(a3,d1.w),a3
		move.w	(a3)+,d1
		subq.w	#1,d1
		bmi.s	loc_8958
		jsr	(a0)
		tst.w	d7
		bmi.s	locret_8972

loc_8958:
		addq.w	#6,a1
		add.w	4(a5),d4
		and.w	6(a5),d4
		dbf	d3,loc_8904
		add.w	8(a5),d5
		and.w	$A(a5),d5
		dbf	d2,loc_88F4

locret_8972:
		rts
; End of function Draw_SSSprites

; ---------------------------------------------------------------------------

Draw_SSSprite_Normal:
		move.b	(a3)+,d0
		ext.w	d0
		add.w	4(a1),d0
		move.w	d0,(a6)+
		move.b	(a3)+,(a6)+
		addq.w	#1,a6
		move.w	(a3)+,d0
		add.w	d6,d0
		move.w	d0,(a6)+
		move.w	(a3)+,d0
		add.w	2(a1),d0
		move.w	d0,(a6)+
		subq.w	#1,d7
		dbmi	d1,Draw_SSSprite_Normal
		rts
; ---------------------------------------------------------------------------

Draw_SSSprite_FlyAway:
		move.b	(a3)+,d0
		ext.w	d0
		add.w	4(a1),d0
		sub.w	(Special_stage_clear_timer).w,d0
		move.w	d0,(a6)+
		move.b	(a3)+,(a6)+
		addq.w	#1,a6
		move.w	(a3)+,d0
		add.w	d6,d0
		move.w	d0,(a6)+
		move.w	(a3)+,d0
		add.w	2(a1),d0
		move.w	d1,-(sp)
		subi.w	#$120,d0
		move.w	(Special_stage_clear_timer).w,d1
		addi.w	#$100,d1
		muls.w	d1,d0
		asr.l	#8,d0
		addi.w	#$120,d0
		cmpi.w	#$1D0,d0
		bcs.s	loc_89D6
		move.w	#1,d0

loc_89D6:
		move.w	(sp)+,d1
		move.w	d0,(a6)+
		subq.w	#1,d7
		dbmi	d1,Draw_SSSprite_FlyAway
		rts

; =============== S U B R O U T I N E =======================================


sub_89E2:
		move.b	(Special_stage_clear_routine).w,d1
		beq.w	locret_8B58
		subq.b	#1,d1
		bne.w	loc_8AB6
		cmpi.w	#$100,(Special_stage_clear_timer).w
		bcc.s	loc_8A26
		addq.w	#2,(Special_stage_clear_timer).w
		cmpi.w	#2,(Special_stage_clear_timer).w
		bne.s	loc_8A0C
		moveq	#signextendB(sfx_AllSpheres),d0
		jsr	(Play_Sound).l

loc_8A0C:
		cmpi.w	#$40,(Special_stage_clear_timer).w
		bcs.s	locret_8A24
		addq.w	#1,(Special_stage_clear_timer).w
		cmpi.w	#$80,(Special_stage_clear_timer).w
		bcs.s	locret_8A24
		addq.w	#1,(Special_stage_clear_timer).w

locret_8A24:
		rts
; ---------------------------------------------------------------------------

loc_8A26:
		addq.b	#1,(Special_stage_clear_routine).w
		lea	(Level_layout_header).w,a1
		move.w	#$FF,d0

loc_8A32:
		move.l	#0,(a1)+
		dbf	d0,loc_8A32
		move.b	(Special_stage_angle).w,d0
		jsr	(GetSineCosine).l
		move.w	(Special_stage_X_pos).w,d2
		move.w	(Special_stage_Y_pos).w,d3
		asl.w	#3,d0
		asl.w	#3,d1
		sub.w	d0,d2
		sub.w	d1,d3
		lea	(Level_layout_header).w,a1
		move.w	d2,d0
		addi.w	#$80,d0
		lsr.w	#8,d0
		andi.w	#$1F,d0
		move.w	d3,d1
		addi.w	#$80,d1
		lsr.w	#8,d1
		andi.w	#$1F,d1
		lsl.w	#5,d1
		or.b	d0,d1
		move.b	#$A,(a1,d1.w)
		move.w	d1,(Special_stage_interact).w
		move.w	#$800,(Special_stage_velocity).w
		move.b	#$78,(Special_stage_emerald_timer).w
		moveq	#0,d0
		move.b	(Current_special_stage).w,d0
		lea	(Pal_SStage_Emeralds).l,a1
		lsl.w	#3,d0
		lea	(a1,d0.w),a1
		lea	(Normal_palette_line_4+4).w,a2
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		lea	(ArtKosM_SStageChaosEmerald).l,a1
		move.w	#$B4E0,d2
		jmp	(Queue_Kos_Module).l
; ---------------------------------------------------------------------------

loc_8AB6:
		subq.b	#1,d1
		bne.s	loc_8ADA
		tst.b	(Kos_modules_left).w
		bne.s	locret_8AD8
		move.w	#0,(Special_stage_clear_timer).w
		subq.b	#1,(Special_stage_emerald_timer).w
		bne.s	locret_8AD8
		addq.b	#1,(Special_stage_clear_routine).w
		moveq	#signextendB(mus_Emerald),d0
		jsr	(Play_Sound).l

locret_8AD8:
		rts
; ---------------------------------------------------------------------------

loc_8ADA:
		subq.b	#1,d1
		bne.s	locret_8B58
		move.w	(Special_stage_X_pos).w,d0
		addi.w	#$80,d0
		lsr.w	#8,d0
		andi.w	#$1F,d0
		move.w	(Special_stage_Y_pos).w,d1
		addi.w	#$80,d1
		lsr.w	#8,d1
		andi.w	#$1F,d1
		lsl.w	#5,d1
		or.b	d0,d1
		cmp.w	(Special_stage_interact).w,d1
		bne.s	locret_8B58
		move.w	(Special_stage_X_pos).w,d0
		or.w	(Special_stage_Y_pos).w,d0
		andi.w	#$E0,d0
		bne.s	locret_8B58
		cmpi.w	#7,(Emerald_count).w
		bcc.s	loc_8B2E
		addq.w	#1,(Emerald_count).w
		lea	(Collected_emeralds_array).w,a1
		moveq	#0,d0
		move.b	(Current_special_stage).w,d0
		move.b	#1,(a1,d0.w)

loc_8B2E:
		addq.b	#1,(Special_stage_clear_routine).w
		move.b	#1,(Special_stage_fade_timer).w
		move.b	#$48,(Game_mode).w
		tst.b	(Special_bonus_entry_flag).w
		beq.s	loc_8B50
		move.w	(Saved2_zone_and_act).w,(Current_zone_and_act).w
		ori.b	#$80,(Last_star_post_hit).w

loc_8B50:
		moveq	#signextendB(sfx_Goal),d0
		jsr	(Play_Sound_2).l

locret_8B58:
		rts
; End of function sub_89E2

; ---------------------------------------------------------------------------
Pal_SStage_Emeralds:
		binclude "General/Special Stage/Palettes/Emeralds S3.bin"
		even

; =============== S U B R O U T I N E =======================================


sub_8B9A:
		move.w	(Special_stage_X_pos).w,d0
		sub.w	(Special_stage_prev_X_pos).w,d0
		btst	#6,(Special_stage_angle).w
		bne.s	loc_8BB2
		move.w	(Special_stage_Y_pos).w,d0
		sub.w	(Special_stage_prev_Y_pos).w,d0

loc_8BB2:
		tst.b	(Special_stage_angle).w
		bmi.s	loc_8BBA
		neg.w	d0

loc_8BBA:
		asr.w	#2,d0
		add.w	d0,(V_scroll_value_BG).w
		moveq	#0,d1
		move.b	(Special_stage_angle).w,d1
		asl.w	#2,d1
		move.w	d1,(H_scroll_buffer+2).w
		move.w	(Special_stage_X_pos).w,(Special_stage_prev_X_pos).w
		move.w	(Special_stage_Y_pos).w,(Special_stage_prev_Y_pos).w
		rts
; End of function sub_8B9A


; =============== S U B R O U T I N E =======================================


Animate_SSRings:
		lea	(SStage_extra_sprites+$07).w,a1
		subq.b	#1,(Rings_frame_timer).w
		bpl.s	loc_8BFE
		move.b	#7,(Rings_frame_timer).w
		addi.b	#$10,(Rings_frame).w
		cmpi.b	#$30,(Rings_frame).w
		bcs.s	loc_8BFE
		move.b	#0,(Rings_frame).w

loc_8BFE:
		move.b	(Rings_frame).w,$20(a1)
		rts
; End of function Animate_SSRings


; =============== S U B R O U T I N E =======================================


Find_SStageCollisionResponseSlot:
		lea	(SStage_collision_response_list).w,a2
		move.w	#$1F,d0

loc_8C0E:
		tst.b	(a2)
		beq.s	locret_8C18
		addq.w	#8,a2
		dbf	d0,loc_8C0E

locret_8C18:
		rts
; End of function Find_SStageCollisionResponseSlot


; =============== S U B R O U T I N E =======================================


Touch_SSSprites:
		lea	(SStage_collision_response_list).w,a0
		move.w	#$1F,d7

loc_8C22:
		moveq	#0,d0
		move.b	(a0),d0
		beq.s	loc_8C30
		lsl.w	#2,d0
		movea.l	off_8C38-4(pc,d0.w),a1
		jsr	(a1)

loc_8C30:
		addq.w	#8,a0
		dbf	d7,loc_8C22
		rts
; End of function Touch_SSSprites

; ---------------------------------------------------------------------------
off_8C38:	dc.l Touch_SSSprites_Ring
		dc.l Touch_SSSprites_BlueSphere
; ---------------------------------------------------------------------------

Touch_SSSprites_Ring:
		subq.b	#1,2(a0)
		bpl.s	locret_8C68
		move.b	#5,2(a0)
		moveq	#0,d0
		move.b	3(a0),d0
		addq.b	#1,3(a0)
		movea.l	4(a0),a1
		move.b	byte_8C6A(pc,d0.w),d0
		move.b	d0,(a1)
		bne.s	locret_8C68
		clr.l	(a0)
		clr.l	4(a0)

locret_8C68:
		rts
; ---------------------------------------------------------------------------
byte_8C6A:	dc.b    5,   6,   7,   8,   0,   0
; ---------------------------------------------------------------------------

Touch_SSSprites_BlueSphere:
		subq.b	#1,2(a0)
		bpl.s	locret_8CC2
		move.b	#9,2(a0)
		movea.l	4(a0),a1
		cmpi.b	#2,(a1)
		bne.s	loc_8C9E
		bsr.w	sub_8CC4
		move.b	#9,(a1)
		bsr.s	sub_8CF8
		beq.s	locret_8C9C
		move.b	#4,(a1)
		clr.l	(a0)
		clr.l	4(a0)

locret_8C9C:
		rts
; ---------------------------------------------------------------------------

loc_8C9E:
		move.b	#0,2(a0)
		move.w	(Special_stage_X_pos).w,d0
		or.w	(Special_stage_Y_pos).w,d0
		andi.w	#$E0,d0
		beq.s	locret_8CC2
		cmpi.b	#9,(a1)
		bne.s	loc_8CBC
		move.b	#1,(a1)

loc_8CBC:
		clr.l	(a0)
		clr.l	4(a0)

locret_8CC2:
		rts

; =============== S U B R O U T I N E =======================================


sub_8CC4:
		move.w	d0,-(sp)
		move.b	#-1,(Special_stage_sphere_HUD_flag).w
		subq.w	#1,(Special_stage_spheres_left).w
		bne.s	loc_8CD8
		move.b	#1,(Special_stage_clear_routine).w

loc_8CD8:
		move.w	(sp)+,d0
		rts
; End of function sub_8CC4


; =============== S U B R O U T I N E =======================================


sub_8CDC:
		lea	(Level_layout_header).w,a3
		moveq	#0,d1
		move.w	#$3FF,d0

loc_8CE6:
		cmpi.b	#2,(a3)+
		bne.s	loc_8CEE
		addq.w	#1,d1

loc_8CEE:
		dbf	d0,loc_8CE6
		move.w	d1,(Special_stage_spheres_left).w
		rts
; End of function sub_8CDC


; =============== S U B R O U T I N E =======================================


sub_8CF8:
		lea	(Level_layout_header).w,a2
		move.l	a1,d5
		sub.l	a2,d5
		bsr.s	sub_8D78
		moveq	#0,d6
		move.l	a5,d1
		lea	(SStage_unkA500).w,a4
		sub.l	a4,d1
		beq.s	locret_8D76

loc_8D0E:
		move.w	(a4)+,d5
		lea	(word_8EDA).l,a3
		move.w	#7,d0

loc_8D1A:
		move.w	(a3)+,d2
		add.w	d5,d2
		cmpi.b	#2,(a2,d2.w)
		bne.s	loc_8D34
		bsr.w	sub_8CC4
		move.b	#4,(a2,d2.w)
		move.w	d2,(a5)+
		addq.w	#2,d1

loc_8D34:
		dbf	d0,loc_8D1A
		subq.w	#2,d1
		bne.s	loc_8D0E
		move.l	a5,d1
		lea	(SStage_unkA500).w,a4
		sub.l	a4,d1
		beq.s	locret_8D76

loc_8D46:
		move.w	(a4)+,d5
		lea	(word_8EDA).l,a3
		move.w	#7,d0

loc_8D52:
		move.w	(a3)+,d2
		add.w	d5,d2
		cmpi.b	#1,(a2,d2.w)
		bne.s	loc_8D64
		move.b	#4,(a2,d2.w)

loc_8D64:
		dbf	d0,loc_8D52
		subq.w	#2,d1
		bne.s	loc_8D46
		moveq	#signextendB(sfx_RingLoss),d0
		jsr	(Play_Sound_2).l
		moveq	#1,d1

locret_8D76:
		rts
; End of function sub_8CF8


; =============== S U B R O U T I N E =======================================


sub_8D78:
		lea	(SStage_unkA500).w,a5
		lea	(word_8EDA).l,a3
		moveq	#0,d2
		move.w	#7,d0

loc_8D88:
		move.w	(a3)+,d1
		add.w	d5,d1
		cmpi.b	#9,(a2,d1.w)
		bne.s	loc_8D9A
		move.b	#1,(a2,d1.w)

loc_8D9A:
		cmpi.b	#2,(a2,d1.w)
		bne.s	loc_8DA4
		addq.w	#1,d2

loc_8DA4:
		dbf	d0,loc_8D88
		tst.w	d2
		beq.w	locret_8E8A
		moveq	#0,d2
		move.w	d5,d1

loc_8DB2:
		addq.w	#1,d2
		addi.w	#-1,d1
		tst.b	(a2,d1.w)
		bne.s	loc_8DB2
		move.w	d5,d1

loc_8DC0:
		addq.w	#1,d2
		addi.w	#1,d1
		tst.b	(a2,d1.w)
		bne.s	loc_8DC0
		cmpi.w	#4,d2
		bcs.w	locret_8E8A
		moveq	#0,d2
		move.w	d5,d1

loc_8DD8:
		addq.w	#1,d2
		addi.w	#-$20,d1
		tst.b	(a2,d1.w)
		bne.s	loc_8DD8
		move.w	d5,d1

loc_8DE6:
		addq.w	#1,d2
		addi.w	#$20,d1
		tst.b	(a2,d1.w)
		bne.s	loc_8DE6
		cmpi.w	#4,d2
		bcs.w	locret_8E8A
		lea	(SStage_unkA600).w,a4
		lea	(word_8EEA).l,a3
		moveq	#0,d6
		moveq	#0,d3
		moveq	#6,d4
		add.w	d3,d4
		move.w	d5,d0

loc_8E0E:
		move.w	(a3,d4.w),d1
		add.w	d0,d1
		move.b	(a2,d1.w),d2
		cmpi.b	#-$77,d2
		beq.s	loc_8E8C
		cmpi.b	#1,d2
		bne.s	loc_8E68
		cmpi.w	#2,d6
		bcs.s	loc_8E48
		move.w	d1,d2
		sub.w	-6(a4),d2
		cmpi.w	#-1,d2
		beq.s	loc_8E68
		cmpi.w	#1,d2
		beq.s	loc_8E68
		cmpi.w	#$20,d2
		beq.s	loc_8E68
		cmpi.w	#-$20,d2
		beq.s	loc_8E68

loc_8E48:
		ori.b	#$80,(a2,d0.w)
		move.b	d3,(a4)+
		move.b	d4,(a4)+
		move.w	d0,(a4)+
		addq.w	#1,d6
		move.w	d4,d3
		subq.w	#2,d3
		andi.w	#6,d3
		move.w	#4,d4
		add.w	d3,d4
		move.w	d1,d0
		bra.s	loc_8E0E
; ---------------------------------------------------------------------------

loc_8E68:
		subq.w	#2,d4
		cmp.w	d3,d4
		bge.s	loc_8E0E

loc_8E6E:
		moveq	#0,d3
		moveq	#0,d4
		move.w	-(a4),d0
		move.b	-(a4),d4
		move.b	-(a4),d3
		subq.w	#1,d6
		bcs.s	locret_8E8A
		andi.b	#$7F,(a2,d0.w)
		subq.w	#2,d4
		cmp.w	d3,d4
		bge.s	loc_8E0E
		bra.s	loc_8E6E
; ---------------------------------------------------------------------------

locret_8E8A:
		rts
; ---------------------------------------------------------------------------

loc_8E8C:
		movem.l	d0/d3/d6/a4,-(sp)
		sub.w	d5,d0
		move.w	d0,d2
		neg.w	d2
		lea	(SStage_unkA600+6).w,a4
		move.w	d5,d3

loc_8E9C:
		move.w	(a4)+,d0
		addq.w	#2,a4
		sub.w	d3,d0
		cmp.w	d2,d0
		bne.s	loc_8EAA
		add.w	d0,d3
		bra.s	loc_8E9C
; ---------------------------------------------------------------------------

loc_8EAA:
		add.w	d5,d0
		cmpi.b	#2,(a2,d0.w)
		beq.s	loc_8EC8
		cmpi.b	#4,(a2,d0.w)
		beq.s	loc_8ED4
		sub.w	d2,d0
		cmpi.b	#2,(a2,d0.w)
		beq.s	loc_8EC8
		bra.s	loc_8ED4
; ---------------------------------------------------------------------------

loc_8EC8:
		bsr.w	sub_8CC4
		move.b	#4,(a2,d0.w)
		move.w	d0,(a5)+

loc_8ED4:
		movem.l	(sp)+,d0/d3/d6/a4
		bra.s	loc_8E68
; End of function sub_8D78

; ---------------------------------------------------------------------------
word_8EDA:	dc.w $FFDF
		dc.w $FFE0
		dc.w $FFE1
		dc.w $FFFF
		dc.w 1
		dc.w $1F
		dc.w $20
		dc.w $21
word_8EEA:	dc.w $FFFF
		dc.w $FFE0
		dc.w 1
		dc.w $20
		dc.w $FFFF
		dc.w $FFE0

; =============== S U B R O U T I N E =======================================


Load_SSSprite_Mappings:
		lea	(SStage_extra_sprites).w,a1
		lea	(MapPtr_8F1A).l,a0
		moveq	#$C,d1

loc_8F02:
		move.l	(a0)+,(a1)+
		move.l	(a0)+,(a1)+
		dbf	d1,loc_8F02
		lea	(SStage_collision_response_list).w,a1
		move.w	#$3F,d1

loc_8F12:
		clr.l	(a1)+
		dbf	d1,loc_8F12
		rts
; End of function Load_SSSprite_Mappings

; ---------------------------------------------------------------------------
MapPtr_8F1A:	dc.l Map_SStageSphere
		dc.l $86800000
		dc.l Map_SStageSphere
		dc.l $86800000
		dc.l Map_SStageSphere
		dc.l $C6800000
		dc.l Map_SStageSphere
		dc.l $A6800000
		dc.l Map_SStageRing
		dc.l $C5A70000
		dc.l Map_SStageRing
		dc.l $C5A78030
		dc.l Map_SStageRing
		dc.l $C5A78031
		dc.l Map_SStageRing
		dc.l $C5A78032
		dc.l Map_SStageRing
		dc.l $C5A78033
		dc.l Map_SStageSphere
		dc.l $C6800000
		dc.l Map_SStageChaosEmerald
		dc.l $E5A70000
		dc.l Map_SStageSphere
		dc.l $C6800000
		dc.l Map_SStageSphere
		dc.l $C6800000
; ---------------------------------------------------------------------------
		ext.l	d1
		lsl.l	#8,d1
		divs.w	d0,d1
		ext.l	d2
		lsl.l	#8,d2
		divs.w	d0,d2
		rts

; =============== S U B R O U T I N E =======================================


sub_8F90:
		swap	d0
		move.w	d1,d3
		move.w	d2,d4
		move.w	(SStage_scalar_result_2).w,d0
		muls.w	d0,d3
		muls.w	d0,d4
		move.w	(SStage_scalar_result_2+2).w,d0
		muls.w	d0,d1
		muls.w	d0,d2
		sub.l	d4,d1
		add.l	d1,d1
		add.l	d1,d1
		swap	d1
		add.l	d3,d2
		add.l	d2,d2
		add.l	d2,d2
		swap	d2
		swap	d0
		rts
; End of function sub_8F90


; =============== S U B R O U T I N E =======================================


sub_8FBA:
		swap	d2
		move.w	d0,d3
		move.w	d1,d4
		move.w	(SStage_scalar_result_1).w,d2
		muls.w	d2,d3
		muls.w	d2,d4
		move.w	(SStage_scalar_result_1+2).w,d2
		muls.w	d2,d0
		muls.w	d2,d1
		sub.l	d4,d0
		add.l	d0,d0
		add.l	d0,d0
		swap	d0
		add.l	d3,d1
		add.l	d1,d1
		add.l	d1,d1
		swap	d1
		swap	d2
		rts
; End of function sub_8FBA


; =============== S U B R O U T I N E =======================================


sub_8FE4:
		swap	d1
		move.w	d0,d3
		move.w	d2,d4
		move.w	(SStage_scalar_result_0).w,d1
		muls.w	d1,d3
		muls.w	d1,d4
		move.w	(SStage_scalar_result_0+2).w,d1
		muls.w	d1,d0
		muls.w	d1,d2
		sub.l	d4,d0
		add.l	d0,d0
		add.l	d0,d0
		swap	d0
		add.l	d3,d2
		add.l	d2,d2
		add.l	d2,d2
		swap	d2
		swap	d1
		rts
; End of function sub_8FE4


; =============== S U B R O U T I N E =======================================


sub_900E:
		swap	d1
		move.w	d0,d3
		move.w	d2,d4
		move.w	(SStage_scalar_result_3).w,d1
		muls.w	d1,d3
		muls.w	d1,d4
		move.w	(SStage_scalar_result_3+2).w,d1
		muls.w	d1,d0
		muls.w	d1,d2
		sub.l	d4,d0
		add.l	d0,d0
		add.l	d0,d0
		swap	d0
		add.l	d3,d2
		add.l	d2,d2
		add.l	d2,d2
		swap	d2
		swap	d1
		rts
; End of function sub_900E


; =============== S U B R O U T I N E =======================================


GetScalars2:
		add.w	d0,d0
		andi.w	#$1FE,d0
		move.w	ScalarTable2(pc,d0.w),(a1)+
		addi.w	#$80,d0
		andi.w	#$1FE,d0
		move.w	ScalarTable2(pc,d0.w),(a1)+
		rts
; End of function GetScalars2

; ---------------------------------------------------------------------------
ScalarTable2:	dc.w      0,  $192,  $324,  $4B5,  $646,  $7D6,  $964,  $AF1,  $C7C,  $E06,  $F8D, $1112, $1294, $1413, $1590, $1709
		dc.w  $187E, $19EF, $1B5D, $1CC6, $1E2B, $1F8C, $20E7, $223D, $238E, $24DA, $2620, $2760, $289A, $29CE, $2AFB, $2C21
		dc.w  $2D41, $2E5A, $2F6C, $3076, $3179, $3274, $3368, $3453, $3537, $3612, $36E5, $37B0, $3871, $392B, $39DB, $3A82
		dc.w  $3B21, $3BB6, $3C42, $3CC5, $3D3F, $3DAF, $3E15, $3E72, $3EC5, $3F0F, $3F4F, $3F85, $3FB1, $3FD4, $3FEC, $3FFB
		dc.w  $4000, $3FFB, $3FEC, $3FD4, $3FB1, $3F85, $3F4F, $3F0F, $3EC5, $3E72, $3E15, $3DAF, $3D3F, $3CC5, $3C42, $3BB6
		dc.w  $3B21, $3A82, $39DB, $392B, $3871, $37B0, $36E5, $3612, $3537, $3453, $3368, $3274, $3179, $3076, $2F6C, $2E5A
		dc.w  $2D41, $2C21, $2AFB, $29CE, $289A, $2760, $2620, $24DA, $238E, $223D, $20E7, $1F8C, $1E2B, $1CC6, $1B5D, $19EF
		dc.w  $187E, $1709, $1590, $1413, $1294, $1112,  $F8D,  $E06,  $C7C,  $AF1,  $964,  $7D6,  $646,  $4B5,  $324,  $192
		dc.w      0, $FE6E, $FCDC, $FB4B, $F9BA, $F82A, $F69C, $F50F, $F384, $F1FA, $F073, $EEEE, $ED6C, $EBED, $EA70, $E8F7
		dc.w  $E782, $E611, $E4A3, $E33A, $E1D5, $E074, $DF19, $DDC3, $DC72, $DB26, $D9E0, $D8A0, $D766, $D632, $D505, $D3DF
		dc.w  $D2BF, $D1A6, $D094, $CF8A, $CE87, $CD8C, $CC98, $CBAD, $CAC9, $C9EE, $C91B, $C850, $C78F, $C6D5, $C625, $C57E
		dc.w  $C4DF, $C44A, $C3BE, $C33B, $C2C1, $C251, $C1EB, $C18E, $C13B, $C0F1, $C0B1, $C07B, $C04F, $C02C, $C014, $C005
		dc.w  $C000, $C005, $C014, $C02C, $C04F, $C07B, $C0B1, $C0F1, $C13B, $C18E, $C1EB, $C251, $C2C1, $C33B, $C3BE, $C44A
		dc.w  $C4DF, $C57E, $C625, $C6D5, $C78F, $C850, $C91B, $C9EE, $CAC9, $CBAD, $CC98, $CD8C, $CE87, $CF8A, $D094, $D1A6
		dc.w  $D2BF, $D3DF, $D505, $D632, $D766, $D8A0, $D9E0, $DB26, $DC72, $DDC3, $DF19, $E074, $E1D5, $E33A, $E4A3, $E611
		dc.w  $E782, $E8F7, $EA70, $EBED, $ED6C, $EEEE, $F073, $F1FA, $F384, $F50F, $F69C, $F82A, $F9BA, $FB4B, $FCDC, $FE6E
Map_SStageSphere:
		include "General/Special Stage/Map - Sphere.asm"
Map_SStageRing:
		include "General/Special Stage/Map - Ring.asm"
Map_SStageChaosEmerald:
		include "General/Special Stage/Map - Chaos Emerald.asm"
; ---------------------------------------------------------------------------

locret_952E:
		rts
; ---------------------------------------------------------------------------

Competition_Menu:
		bsr.w	Pal_FadeToBlack
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#-$41,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Clear_DisplayData).l
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$8730,(a6)
		move.w	#$8B00,(a6)
		move.w	#$8C81,(a6)
		move.w	#$9011,(a6)
		jsr	sub_B512(pc)
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_957C:
		move.l	d0,(a1)+
		dbf	d1,loc_957C
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_958C:
		move.l	d0,(a1)+
		dbf	d1,loc_958C
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		clr.w	(Level_frame_counter).w
		cmpi.b	#3,(Competition_menu_selection).w
		bcs.s	loc_95AE
		clr.b	(Competition_menu_selection).w

loc_95AE:
		lea	(MapEni_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		move.w	#$6001,d0
		jsr	(Eni_Decomp).l
		lea	(RAM_start).l,a1
		move.l	#$60000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(ArtKos_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$20,a2
		jsr	KosArt_To_VDP(pc)
		move.l	#locret_952E,(_unkEF44_1).w
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(ArtKos_CompetitionLevel).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$53E0,a2
		jsr	KosArt_To_VDP(pc)
		lea	(ArtKos_CompetitionMode).l,a0
		movea.w	#$6940,a2
		jsr	KosArt_To_VDP(pc)
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	Pal_Competition1(pc),a0
		lea	(Target_palette).w,a1
		moveq	#$17,d0

loc_963A:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_963A
		lea	(Pal_CompetitionMenuBG).l,a0
		moveq	#7,d0

loc_9648:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_9648
		lea	(Object_RAM).w,a0
		lea	ObjDat_9878(pc),a1
		move.w	(a1)+,d0

loc_9658:
		move.l	(a1)+,(a0)
		move.w	#$34A,$A(a0)
		move.l	#Map_CompetitionObject,$C(a0)
		move.w	(a1)+,$10(a0)
		move.w	(a1)+,$14(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$2E(a0)
		lea	$4A(a0),a0
		dbf	d0,loc_9658
		jsr	(Init_SpriteTable).l
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		moveq	#signextendB(mus_CompetitionMenu),d0
		jsr	(Play_Sound).l
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		bsr.w	Pal_FadeFromBlack

loc_96B8:
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		addq.w	#1,(Level_frame_counter).w
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		move.b	d0,d1
		andi.b	#-$10,d1
		beq.w	loc_9776
		btst	#4,d1
		bne.s	loc_96FE
		moveq	#0,d2
		move.b	(Competition_menu_selection).w,d2
		add.w	d2,d2
		jmp	loc_96F8(pc,d2.w)
; ---------------------------------------------------------------------------

loc_96F8:
		bra.s	loc_9706
; ---------------------------------------------------------------------------
		bra.s	loc_9724
; ---------------------------------------------------------------------------
		bra.s	loc_9744
; ---------------------------------------------------------------------------

loc_96FE:
		move.b	#4,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_9706:
		clr.b	(Competition_mode_type).w
		move.b	(Competition_menu_monitors).w,(Competition_mode_monitors).w
		move.b	(Ctrl_2_pressed).w,d0
		andi.b	#-$20,d0
		sne	(Not_ghost_flag).w
		move.b	#$3C,(Game_mode).w
		bra.s	loc_975E
; ---------------------------------------------------------------------------

loc_9724:
		move.b	#3,(Competition_mode_type).w
		move.b	(Competition_menu_monitors).w,(Competition_mode_monitors).w
		move.b	(Ctrl_2_pressed).w,d0
		andi.b	#-$20,d0
		sne	(Not_ghost_flag).w
		move.b	#$40,(Game_mode).w
		bra.s	loc_975E
; ---------------------------------------------------------------------------

loc_9744:
		move.b	(Ctrl_1_pressed).w,d2
		andi.w	#$E0,d2
		beq.s	loc_9776
		move.w	#-1,(Competition_mode_monitors).w
		clr.b	(Not_ghost_flag).w
		move.b	#-$40,(Game_mode).w

loc_975E:
		lea	($FF7800).l,a1
		moveq	#0,d0
		moveq	#9,d1

loc_9768:
		move.l	d0,(a1)+
		dbf	d1,loc_9768
		moveq	#signextendB(sfx_Starpost),d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

loc_9776:
		moveq	#0,d2
		move.b	(Competition_menu_selection).w,d1
		lsr.w	#1,d0
		bcc.s	loc_978A
		moveq	#signextendB(sfx_Switch),d2
		subq.b	#1,d1
		bcc.s	loc_979A
		moveq	#3,d1
		bra.s	loc_979A
; ---------------------------------------------------------------------------

loc_978A:
		lsr.w	#1,d0
		bcc.s	loc_979A
		moveq	#signextendB(sfx_Switch),d2
		addq.b	#1,d1
		cmpi.b	#3,d1
		bls.s	loc_979A
		moveq	#0,d1

loc_979A:
		move.b	d1,(Competition_menu_selection).w
		move.w	d2,d0
		beq.s	loc_97A8
		jsr	(Play_Sound_2).l

loc_97A8:
		bra.w	loc_96B8
; ---------------------------------------------------------------------------

Obj_Competition_97AC:
		move.b	$2E(a0),d0
		bmi.s	loc_97CA
		andi.w	#$9FFF,$A(a0)
		move.w	#$2000,d1
		cmp.b	(Competition_menu_selection).w,d0
		bne.s	loc_97C6
		move.w	#$4000,d1

loc_97C6:
		or.w	d1,$A(a0)

loc_97CA:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_Competition_97D0:
		cmpi.b	#1,(Competition_menu_selection).w
		bhi.s	locret_9816
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.w	#$C,d0
		beq.s	loc_97F6
		tst.b	(Competition_menu_monitors).w
		seq	(Competition_menu_monitors).w
		moveq	#signextendB(sfx_Switch),d0
		jsr	(Play_Sound_2).l

loc_97F6:
		move.w	#$15C,d0
		tst.b	(Competition_menu_monitors).w
		beq.s	loc_9804
		addi.w	#$20,d0

loc_9804:
		move.w	d0,$10(a0)
		btst	#3,(Level_frame_counter+1).w
		beq.s	locret_9816
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_9816:
		rts
; ---------------------------------------------------------------------------
Pal_Competition1:
		binclude "General/Competition Menu/Palettes/1.bin"
		even
ObjDat_9878:	dc.w 6
		dc.l Obj_Competition_97AC
		dc.w $114
		dc.w $A0
		dc.b 0
		dc.b 0
		dc.l Obj_Competition_97AC
		dc.w $10C
		dc.w $C0
		dc.b 1
		dc.b 1
		dc.l Obj_Competition_97AC
		dc.w $108
		dc.w $E0
		dc.b 2
		dc.b 2
		dc.l Obj_Competition_97AC
		dc.w $13C
		dc.w $120
		dc.b 3
		dc.b 3
		dc.l Obj_Competition_97AC
		dc.w $164
		dc.w $B0
		dc.b 4
		dc.b $FF
		dc.l Obj_Competition_97AC
		dc.w $184
		dc.w $B0
		dc.b 5
		dc.b $FF
		dc.l Obj_Competition_97D0
		dc.w 0
		dc.w $A8
		dc.b 6
		dc.b $FF
Map_CompetitionObject:
		include "General/Competition Menu/Map - Competition Objects.asm"
; ---------------------------------------------------------------------------

Competition_LevelSelect:
		bsr.w	Pal_FadeToBlack
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#-$41,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Clear_DisplayData).l
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$8700,(a6)
		move.w	#$8B00,(a6)
		move.w	#$8C89,(a6)
		move.w	#$9011,(a6)
		jsr	sub_B512(pc)
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_9A48:
		move.l	d0,(a1)+
		dbf	d1,loc_9A48
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_9A58:
		move.l	d0,(a1)+
		dbf	d1,loc_9A58
		clr.w	(DMA_queue).w
		move.l	#-$500,(DMA_queue_slot).w
		clr.w	(Level_frame_counter).w
		clr.w	(Competition_mode).w
		clr.b	(Level_started_flag).w
		move.w	#-1,(Events_bg+$10).w
		clr.w	(Events_bg+$12).w
		clr.w	(Events_bg+$14).w
		lea	(MapEni_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		move.w	#1,d0
		jsr	(Eni_Decomp).l
		lea	(RAM_start).l,a1
		move.l	#$60000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(MapEni_CompetitionLevBorder).l,a0
		lea	(RAM_start).l,a1
		move.w	#-$7D61,d0
		jsr	(Eni_Decomp).l
		lea	(MapEni_CompetitionLevImage).l,a0
		lea	(RAM_start+$1000).l,a1
		move.w	#-$1D61,d0
		jsr	(Eni_Decomp).l
		lea	(MapEni_CompetitionLevName).l,a0
		lea	(RAM_start+$2000).l,a1
		move.w	#-$5D61,d0
		jsr	(Eni_Decomp).l
		lea	VRAMDatList_CompetitionLevelSelect(pc),a0
		jsr	Copy_Listed_Data_To_VRAM(pc)
		jsr	sub_9E18(pc)
		mulu.w	#$48,d0
		move.w	d0,(V_scroll_value).w
		jsr	sub_9E6C(pc)
		jsr	sub_9E9C(pc)
		lea	(ArtKos_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$20,a2
		jsr	KosArt_To_VDP(pc)
		move.l	#locret_952E,(_unkEF44_1).w
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(ArtKos_CompetitionLevel).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$53E0,a2
		jsr	KosArt_To_VDP(pc)
		lea	(ArtKos_CompetitionPlayer).l,a0
		movea.w	#$B920,a2
		jsr	KosArt_To_VDP(pc)
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(Pal_CompetitionMenuBG).l,a0
		lea	(Target_palette).w,a1
		moveq	#7,d0

loc_9B70:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_9B70
		lea	Pal_Competition2(pc),a0
		moveq	#$17,d0

loc_9B7C:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_9B7C
		lea	(Object_RAM).w,a0
		lea	ObjDat_CompetitionMatchRace(pc),a1
		tst.b	(Game_mode).w
		bpl.s	loc_9B94
		lea	ObjDat_CompetitionTimeAttack(pc),a1

loc_9B94:
		move.w	(a1)+,d0

loc_9B96:
		move.l	(a1)+,(a0)
		move.l	#Map_CompetitionSelect,$C(a0)
		move.w	(a1),$10(a0)
		move.w	(a1)+,$12(a0)
		move.w	(a1),$14(a0)
		move.w	(a1)+,$16(a0)
		move.w	(a1)+,d1
		addi.w	#$829F,d1
		move.w	d1,$A(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$2E(a0)
		lea	$4A(a0),a0
		dbf	d0,loc_9B96
		moveq	#0,d0
		move.b	(P1_character).w,d0
		mulu.w	#$55,d0
		addi.b	#$40,d0
		move.b	d0,(Reserved_object_3+objoff_2E).w
		tst.b	(Game_mode).w
		bmi.s	loc_9BF4
		moveq	#0,d0
		move.b	(P2_character).w,d0
		mulu.w	#$55,d0
		addi.b	#$40,d0
		move.b	d0,(Dynamic_object_RAM+(object_size*4)+objoff_2E).w

loc_9BF4:
		jsr	(Init_SpriteTable).l
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		jsr	sub_B596(pc)
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		lea	(Dynamic_object_RAM+(object_size*9)).w,a0
		move.l	#loc_9DC2,(a0)
		move.l	#Map_CompetitionSelect,$C(a0)
		addi.w	#$C29F,$A(a0)
		move.w	#$B0,$10(a0)
		moveq	#signextendB(mus_CompetitionMenu),d0
		jsr	(Play_Sound).l
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Pal_FadeFromBlack).l

loc_9C5C:
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		addq.w	#1,(Level_frame_counter).w
		jsr	(Process_Sprites).l
		jsr	sub_B596(pc)
		jsr	(Render_Sprites).l
		move.b	(Events_bg+$12).w,d0
		beq.s	loc_9C88
		move.b	d0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_9C88:
		move.w	(Events_bg+$10).w,d0
		tst.b	(Not_ghost_flag).w
		bne.s	loc_9C94
		lsr.w	#8,d0

loc_9C94:
		tst.w	d0
		beq.s	loc_9CB4
		move.w	(H_scroll_buffer).w,d0
		beq.s	loc_9C5C
		cmpi.w	#-$58,d0
		bne.s	loc_9CAC
		move.l	#loc_9E2E,(_unkEF44_1).w

loc_9CAC:
		addq.w	#8,d0
		move.w	d0,(H_scroll_buffer).w
		bra.s	loc_9C5C
; ---------------------------------------------------------------------------

loc_9CB4:
		cmpi.w	#-$58,(H_scroll_buffer).w
		beq.s	loc_9CC2
		subq.w	#8,(H_scroll_buffer).w
		bra.s	loc_9C5C
; ---------------------------------------------------------------------------

loc_9CC2:
		moveq	#8,d0
		move.w	(Events_bg+$14).w,d1
		beq.s	loc_9CD8
		bpl.s	loc_9CCE
		neg.w	d0

loc_9CCE:
		add.w	d0,(V_scroll_value).w
		sub.w	d0,(Events_bg+$14).w
		bra.s	loc_9C5C
; ---------------------------------------------------------------------------

loc_9CD8:
		move.b	(Ctrl_1_pressed).w,d1
		moveq	#0,d2
		tst.b	(Not_ghost_flag).w
		beq.s	loc_9CE8
		move.b	(Ctrl_2_pressed).w,d2

loc_9CE8:
		btst	#4,d2
		beq.s	loc_9CF6
		sf	(Dynamic_object_RAM+(object_size*4)+objoff_2F).w
		st	(Events_bg+$11).w

loc_9CF6:
		btst	#4,d1
		beq.s	loc_9D04
		sf	(Reserved_object_3+objoff_2F).w
		st	(Events_bg+$10).w

loc_9D04:
		or.b	d2,d1
		move.b	d1,d2
		andi.w	#3,d2
		beq.s	loc_9D5C
		lea	(Competition_menu_zone).w,a0
		lsr.w	#1,d2
		bcs.s	loc_9D3C
		cmpi.b	#4,(a0)
		beq.s	loc_9D5C
		moveq	#signextendB(sfx_Switch),d0
		jsr	(Play_Sound_2).l
		addq.b	#1,(a0)
		cmpi.b	#4,(a0)
		beq.s	loc_9D5C
		cmpi.b	#1,(a0)
		beq.s	loc_9D5C
		move.w	#$48,(Events_bg+$14).w
		bra.w	loc_9C5C
; ---------------------------------------------------------------------------

loc_9D3C:
		tst.b	(a0)
		beq.s	loc_9D5C
		moveq	#signextendB(sfx_Switch),d0
		jsr	(Play_Sound_2).l
		subq.b	#1,(a0)
		beq.s	loc_9D5C
		cmpi.b	#3,(a0)
		beq.s	loc_9D5C
		move.w	#-$48,(Events_bg+$14).w
		bra.w	loc_9C5C
; ---------------------------------------------------------------------------

loc_9D5C:
		andi.w	#$E0,d1
		beq.w	loc_9C5C
		moveq	#signextendB(sfx_Starpost),d0
		jsr	(Play_Sound_2).l
		moveq	#0,d0
		move.b	(Competition_menu_zone).w,d0
		move.b	Comp_ZoneList(pc,d0.w),(Current_zone_and_act).w
		clr.b	(Current_act).w
		jsr	sub_B5EC(pc)
		move.b	#$C,(Game_mode).w
		rts
; ---------------------------------------------------------------------------
Comp_ZoneList:	dc.b   $E
		dc.b   $F
		dc.b  $11
		dc.b  $10
		dc.b  $12
		dc.b  $FF
; ---------------------------------------------------------------------------

Obj_Competition_ZoneSelect:
		cmpi.w	#-$58,(H_scroll_buffer).w
		bne.s	locret_9DC0
		tst.w	(Events_bg+$14).w
		bne.s	locret_9DC0
		moveq	#0,d0
		move.b	(Competition_menu_zone).w,d0
		mulu.w	#$48,d0
		addi.w	#$AC,d0
		sub.w	(V_scroll_value).w,d0
		move.w	d0,$14(a0)
		btst	#3,(Level_frame_counter+1).w
		beq.s	locret_9DC0
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_9DC0:
		rts
; ---------------------------------------------------------------------------

loc_9DC2:
		cmpi.w	#-$58,(H_scroll_buffer).w
		bne.s	loc_9E06
		tst.w	(Events_bg+$14).w
		bne.s	loc_9E06
		moveq	#0,d0
		move.b	(Competition_menu_zone).w,d0
		mulu.w	#$48,d0
		addi.w	#$A8,d0
		sub.w	(V_scroll_value).w,d0
		move.w	d0,$14(a0)
		move.b	(Competition_menu_zone).w,d0
		addq.b	#6,d0
		move.b	d0,$22(a0)
		jsr	(Draw_Sprite).l
		moveq	#0,d0
		move.b	(Competition_menu_zone).w,d0
		lsl.w	#5,d0
		lea	Pal_Competition4(pc),a1
		adda.w	d0,a1
		bra.s	loc_9E0A
; ---------------------------------------------------------------------------

loc_9E06:
		lea	Pal_Competition3(pc),a1

loc_9E0A:
		lea	(Normal_palette_line_3).w,a2
		moveq	#7,d0

loc_9E10:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_9E10
		rts

; =============== S U B R O U T I N E =======================================


sub_9E18:
		moveq	#0,d0
		move.b	(Competition_menu_zone).w,d0
		subq.w	#1,d0
		bcc.s	loc_9E24
		moveq	#0,d0

loc_9E24:
		cmpi.w	#2,d0
		bls.s	locret_9E2C
		moveq	#2,d0

locret_9E2C:
		rts
; End of function sub_9E18

; ---------------------------------------------------------------------------

loc_9E2E:
		move.l	#locret_952E,(_unkEF44_1).w
		move.l	#$42040003,d0
		lea	(VDP_data_port).l,a6
		move.l	#$80008000,d1
		move.w	#$8F80,VDP_control_port-VDP_data_port(a6)
		moveq	#8,d2

loc_9E50:
		moveq	#$12,d3
		move.l	d0,VDP_control_port-VDP_data_port(a6)

loc_9E56:
		move.l	d1,(a6)
		dbf	d3,loc_9E56
		addi.l	#$20000,d0
		dbf	d2,loc_9E50
		move.w	#$8F02,VDP_control_port-VDP_data_port(a6)

; =============== S U B R O U T I N E =======================================


sub_9E6C:
		bsr.s	sub_9E18
		mulu.w	#$48,d0
		addi.w	#$20,d0
		lsl.w	#4,d0
		addi.w	#$C004,d0
		move.w	d0,d7
		tst.b	(Game_mode).w
		bmi.s	loc_9E94
		jsr	sub_B534(pc)
		move.w	d7,d0
		addi.w	#$600,d0
		jmp	sub_B534(pc)
; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------

loc_9E94:
		addi.w	#$300,d0
		jmp	sub_B534(pc)
; End of function sub_9E6C


; =============== S U B R O U T I N E =======================================


sub_9E9C:
		move.w	#-$3D2E,d7
		move.l	(Competition_saved_data).w,d6
		bsr.s	sub_9ECC
		addi.w	#$480,d7
		move.l	(Competition_saved_data+$10).w,d6
		bsr.s	sub_9ECC
		addi.w	#$480,d7
		move.l	(Competition_saved_data+$30).w,d6
		bsr.s	sub_9ECC
		addi.w	#$480,d7
		move.l	(Competition_saved_data+$20).w,d6
		bsr.s	sub_9ECC
		addi.w	#$480,d7
		move.l	(Competition_saved_data+$40).w,d6
; End of function sub_9E9C


; =============== S U B R O U T I N E =======================================


sub_9ECC:
		moveq	#0,d5
		lsl.l	#8,d6
		moveq	#2,d3

loc_9ED2:
		rol.l	#8,d6
		moveq	#0,d0
		move.b	d6,d0
		jsr	(LevResults_GetDecimalScore).l
		move.b	d1,d5
		lsl.l	#8,d5
		dbf	d3,loc_9ED2
		lea	(Plane_buffer).w,a1
		lea	MapUnc_CompetitionNumbers(pc),a2
		moveq	#0,d0
		bsr.s	sub_9F26
		st	d0
		bsr.s	sub_9F26
		moveq	#$A,d1
		bsr.s	sub_9F38
		bsr.s	sub_9F26
		bsr.s	sub_9F26
		moveq	#$B,d1
		bsr.s	sub_9F38
		bsr.s	sub_9F26
		bsr.s	sub_9F26
		lea	(Plane_buffer).w,a1

loc_9F0A:
		move.w	d7,d0
		swap	d0
		clr.w	d0
		swap	d0
		lsl.l	#2,d0
		lsr.w	#2,d0
		ori.w	#$4000,d0
		swap	d0
		moveq	#7,d1
		moveq	#1,d2
		jmp	(Plane_Map_To_VRAM).l
; End of function sub_9ECC


; =============== S U B R O U T I N E =======================================


sub_9F26:
		rol.l	#4,d5
		move.w	d5,d1
		andi.w	#$F,d1
		bne.s	sub_9F38
		tst.w	d0
		bne.s	sub_9F38
		moveq	#$C,d1
		st	d0
; End of function sub_9F26


; =============== S U B R O U T I N E =======================================


sub_9F38:
		add.w	d1,d1
		add.w	d1,d1
		move.w	(a2,d1.w),(a1)+
		move.w	2(a2,d1.w),$E(a1)
		rts
; End of function sub_9F38


; =============== S U B R O U T I N E =======================================


sub_9F48:
		lea	(byte_373E4).l,a1
		moveq	#0,d0
		move.b	d6,d0
		move.b	(a1,d0.w),d6
		rts
; End of function sub_9F48

; ---------------------------------------------------------------------------
VRAMDatList_CompetitionLevelSelect:dc.w	$18
		dc.l RAM_start
		dc.w $C098
		dc.w $1A
		dc.w 8
		dc.l RAM_start
		dc.w $C518
		dc.w $1A
		dc.w 8
		dc.l RAM_start
		dc.w $C998
		dc.w $1A
		dc.w 8
		dc.l RAM_start
		dc.w $CE18
		dc.w $1A
		dc.w 8
		dc.l RAM_start
		dc.w $D298
		dc.w $1A
		dc.w 8
		dc.l Chunk_table+$1180
		dc.w $C11A
		dc.w 7
		dc.w 5
		dc.l Chunk_table+$1120
		dc.w $C59A
		dc.w 7
		dc.w 5
		dc.l RAM_start+$1000
		dc.w $CA1A
		dc.w 7
		dc.w 5
		dc.l Chunk_table+$1060
		dc.w $CE9A
		dc.w 7
		dc.w 5
		dc.l Chunk_table+$10C0
		dc.w $D31A
		dc.w 7
		dc.w 5
		dc.l RAM_start+$2000
		dc.w $C1AC
		dc.w $E
		dc.w 4
		dc.l Chunk_table+$2258
		dc.w $C62C
		dc.w $E
		dc.w 4
		dc.l Chunk_table+$2096
		dc.w $CAAC
		dc.w $E
		dc.w 4
		dc.l Chunk_table+$21C2
		dc.w $CF2C
		dc.w $E
		dc.w 4
		dc.l Chunk_table+$212C
		dc.w $D3AC
		dc.w $E
		dc.w 4
		dc.l MapUnc_CompetitionTimeBorder
		dc.w $C0CE
		dc.w $B
		dc.w 8
		dc.l MapUnc_CompetitionTimeBorder
		dc.w $C54E
		dc.w $B
		dc.w 8
		dc.l MapUnc_CompetitionTimeBorder
		dc.w $C9CE
		dc.w $B
		dc.w 8
		dc.l MapUnc_CompetitionTimeBorder
		dc.w $CE4E
		dc.w $B
		dc.w 8
		dc.l MapUnc_CompetitionTimeBorder
		dc.w $D2CE
		dc.w $B
		dc.w 8
		dc.l MapUnc_CompetitionBESTTIME
		dc.w $C1D0
		dc.w 8
		dc.w 1
		dc.l MapUnc_CompetitionBESTTIME
		dc.w $C650
		dc.w 8
		dc.w 1
		dc.l MapUnc_CompetitionBESTTIME
		dc.w $CAD0
		dc.w 8
		dc.w 1
		dc.l MapUnc_CompetitionBESTTIME
		dc.w $CF50
		dc.w 8
		dc.w 1
		dc.l MapUnc_CompetitionBESTTIME
		dc.w $D3D0
		dc.w 8
		dc.w 1
ObjDat_CompetitionMatchRace:dc.w $B
		dc.l Obj_Competition_ZoneSelect
		dc.w $F4
		dc.w 0
		dc.w 0
		dc.b 2
		dc.b 0
		dc.l Obj_Competition_StaticSprite
		dc.w $B0
		dc.w $A9
		dc.w $2000
		dc.b 3
		dc.b 0
		dc.l Obj_Competition_1PSelect
		dc.w $B5
		dc.w $C1
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite
		dc.w $B5
		dc.w $D5
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite
		dc.w $B5
		dc.w $D5
		dc.w 0
		dc.b 2
		dc.b 1
		dc.l Obj_CompetitionPlayerSprite
		dc.w $B5
		dc.w $D5
		dc.w 0
		dc.b 1
		dc.b 2
		dc.l Obj_Competition_StaticSprite
		dc.w $B2
		dc.w $109
		dc.w $2000
		dc.b 4
		dc.b 0
		dc.l Obj_Competition_2PSelect
		dc.w $B5
		dc.w $121
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite2P
		dc.w $B5
		dc.w $135
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite2P
		dc.w $B5
		dc.w $135
		dc.w 0
		dc.b 2
		dc.b 1
		dc.l Obj_CompetitionPlayerSprite2P
		dc.w $B5
		dc.w $135
		dc.w 0
		dc.b 1
		dc.b 2
		dc.l Obj_Competition_PRESSSTART
		dc.w $B1
		dc.w $126
		dc.w $2000
		dc.b 5
		dc.b 0
ObjDat_CompetitionTimeAttack:dc.w 5
		dc.l Obj_Competition_ZoneSelect
		dc.w $F4
		dc.w $30
		dc.w 0
		dc.b 2
		dc.b 0
		dc.l Obj_Competition_StaticSprite
		dc.w $B0
		dc.w 0
		dc.w $2000
		dc.b 3
		dc.b 0
		dc.l Obj_Competition_1PSelect
		dc.w $B5
		dc.w $F1
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite
		dc.w $B5
		dc.w $101
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite
		dc.w $B5
		dc.w $101
		dc.w 0
		dc.b 2
		dc.b 1
		dc.l Obj_CompetitionPlayerSprite
		dc.w $B5
		dc.w $101
		dc.w 0
		dc.b 1
		dc.b 2
MapUnc_CompetitionNumbers:
		binclude "General/Competition Menu/Uncompressed Map/Numbers.bin"
		even
; ---------------------------------------------------------------------------

Competition_PlayerSelect:
		jsr	(Pal_FadeToBlack).l
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#$BF,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Clear_DisplayData).l
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$8700,(a6)
		move.w	#$8B00,(a6)
		move.w	#$8C89,(a6)
		move.w	#$9011,(a6)
		jsr	sub_B512(pc)
		move.w	#$C220,d0
		jsr	sub_B534(pc)
		move.w	#$C820,d0
		jsr	sub_B534(pc)
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_A1C2:
		move.l	d0,(a1)+
		dbf	d1,loc_A1C2
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_A1D2:
		move.l	d0,(a1)+
		dbf	d1,loc_A1D2
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		clr.w	(Level_frame_counter).w
		move.w	#-1,(Events_bg+$10).w
		clr.w	(Events_bg+$12).w
		lea	(MapEni_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		move.w	#1,d0
		jsr	(Eni_Decomp).l
		lea	(RAM_start).l,a1
		move.l	#$60000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(ArtKos_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$20,a2
		jsr	KosArt_To_VDP(pc)
		move.l	#locret_952E,(_unkEF44_1).w
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(ArtKos_CompetitionLevel).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$53E0,a2
		jsr	KosArt_To_VDP(pc)
		lea	(ArtKos_CompetitionPlayer).l,a0
		movea.w	#-$46E0,a2
		jsr	KosArt_To_VDP(pc)
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(Pal_CompetitionMenuBG).l,a0
		lea	(Target_palette).w,a1
		moveq	#7,d0

loc_A280:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_A280
		lea	Pal_Competition2(pc),a0
		moveq	#$17,d0

loc_A28C:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_A28C
		lea	(Player_2).w,a0
		lea	ObjDat_A65E(pc),a1
		move.w	(a1)+,d0

loc_A29C:
		move.l	(a1)+,(a0)
		move.l	#Map_CompetitionSelect,$C(a0)
		move.w	(a1),$10(a0)
		move.w	(a1)+,$12(a0)
		move.w	(a1),$14(a0)
		move.w	(a1)+,$16(a0)
		move.w	(a1)+,d1
		addi.w	#$829F,d1
		move.w	d1,$A(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$2E(a0)
		lea	$4A(a0),a0
		dbf	d0,loc_A29C
		moveq	#0,d0
		move.b	(P1_character).w,d0
		mulu.w	#$55,d0
		addi.b	#$40,d0
		move.b	d0,(Reserved_object_3+objoff_2E).w
		moveq	#0,d0
		move.b	(P2_character).w,d0
		mulu.w	#$55,d0
		addi.b	#$40,d0
		move.b	d0,(Dynamic_object_RAM+(object_size*4)+objoff_2E).w
		jsr	(Init_SpriteTable).l
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		jsr	sub_B596(pc)
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		moveq	#signextendB(mus_CompetitionMenu),d0
		jsr	(Play_Sound).l
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Pal_FadeFromBlack).l

loc_A33E:
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		addq.w	#1,(Level_frame_counter).w
		jsr	(Process_Sprites).l
		jsr	sub_B596(pc)
		jsr	(Render_Sprites).l
		move.b	(Events_bg+$12).w,d0
		beq.s	loc_A36A
		move.b	d0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_A36A:
		move.w	(Events_bg+$10).w,d0
		tst.b	(Not_ghost_flag).w
		bne.s	loc_A376
		lsr.w	#8,d0

loc_A376:
		tst.w	d0
		bne.s	loc_A33E
		move.w	#$E00,(Current_zone_and_act).w
		jsr	sub_B5EC(pc)
		move.b	#$C,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

Obj_Competition_StaticSprite:
		move.w	$12(a0),d0
		add.w	(H_scroll_buffer).w,d0
		move.w	d0,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_Competition_2PSelect:
		lea	(Ctrl_2_pressed).w,a1
		lea	(Events_bg+$11).w,a2
		lea	(P2_character).w,a3
		tst.b	(Not_ghost_flag).w
		bne.s	loc_A3CE
		tst.w	(Events_bg+$14).w
		bne.s	loc_A3BC
		tst.b	(a1)
		smi	(Not_ghost_flag).w

loc_A3BC:
		moveq	#0,d0
		bra.w	loc_A4CE
; ---------------------------------------------------------------------------

Obj_Competition_1PSelect:
		lea	(Ctrl_1_pressed).w,a1
		lea	(Events_bg+$10).w,a2
		lea	(P1_character).w,a3

loc_A3CE:
		tst.w	(H_scroll_buffer).w
		bne.w	loc_A4BC
		tst.b	$2F(a0)
		beq.s	loc_A3EE
		btst	#4,(a1)
		beq.w	loc_A4BC
		sf	$2F(a0)
		st	(a2)
		bra.w	loc_A4BC
; ---------------------------------------------------------------------------

loc_A3EE:
		tst.b	$30(a0)
		bne.s	loc_A466
		move.b	(a1),d0
		andi.w	#$C,d0
		beq.w	loc_A498
		move.l	d0,-(sp)
		moveq	#signextendB(sfx_GravityTunnel),d0
		jsr	(Play_Sound_2).l
		move.l	(sp)+,d0
		clr.b	$34(a0)
		move.b	$2E(a0),$35(a0)
		btst	#2,d0
		bne.s	loc_A442
		move.b	#1,$30(a0)
		move.b	(a3),d0
		addq.b	#1,d0
		cmpi.b	#2,d0
		bls.s	loc_A42C
		moveq	#0,d0

loc_A42C:
		move.b	d0,(a3)
		mulu.w	#$55,d0
		bne.s	loc_A438
		move.w	#$100,d0

loc_A438:
		addi.w	#$40,d0
		move.w	d0,$32(a0)
		bra.s	loc_A466
; ---------------------------------------------------------------------------

loc_A442:
		move.b	#-1,$30(a0)
		move.b	(a3),d0
		subq.b	#1,d0
		bcc.s	loc_A450
		moveq	#2,d0

loc_A450:
		move.b	d0,(a3)
		mulu.w	#$55,d0
		cmpi.w	#$80,d0
		bcs.s	loc_A45E
		ext.w	d0

loc_A45E:
		addi.w	#$40,d0
		move.w	d0,$32(a0)

loc_A466:
		move.w	$34(a0),d0
		move.w	$32(a0),d1
		tst.b	$30(a0)
		bmi.s	loc_A482
		addq.w	#5,d0
		cmp.w	d0,d1
		bgt.s	loc_A48E
		move.w	d1,d0
		clr.b	$30(a0)
		bra.s	loc_A48E
; ---------------------------------------------------------------------------

loc_A482:
		subq.w	#5,d0
		cmp.w	d0,d1
		blt.s	loc_A48E
		move.w	d1,d0
		clr.b	$30(a0)

loc_A48E:
		move.w	d0,$34(a0)
		move.b	d0,$2E(a0)
		bra.s	loc_A4BC
; ---------------------------------------------------------------------------

loc_A498:
		btst	#4,(a1)
		beq.s	loc_A4A6
		move.b	#$38,(Events_bg+$12).w
		bra.s	loc_A4BC
; ---------------------------------------------------------------------------

loc_A4A6:
		move.b	(a1),d0
		andi.w	#$E0,d0
		beq.s	loc_A4BC
		st	$2F(a0)
		sf	(a2)
		moveq	#signextendB(sfx_Starpost),d0
		jsr	(Play_Sound_2).l

loc_A4BC:
		moveq	#1,d0
		tst.b	$2F(a0)
		bne.s	loc_A4CE
		move.w	(Level_frame_counter).w,d0
		lsr.w	#3,d0
		andi.w	#1,d0

loc_A4CE:
		move.b	d0,$22(a0)
		move.w	$12(a0),d0
		add.w	(H_scroll_buffer).w,d0
		move.w	d0,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_CompetitionPlayerSprite2P:
		tst.b	(Not_ghost_flag).w
		bne.s	Obj_CompetitionPlayerSprite
		rts
; ---------------------------------------------------------------------------

Obj_CompetitionPlayerSprite:
		move.l	#Map_CompetitionPlayerSprite,$C(a0)
		move.w	#$25C9,$A(a0)
		moveq	#0,d0
		moveq	#-$55,d1
		moveq	#0,d2
		move.b	$2E(a0),d2

loc_A504:
		addi.w	#$4A,d0
		addi.w	#$55,d1
		dbf	d2,loc_A504
		neg.w	d0
		move.b	$2E(a0,d0.w),d0
		add.b	d1,d0
		jsr	(GetSineCosine).l
		asr.w	#4,d1
		add.w	$12(a0),d1
		add.w	(H_scroll_buffer).w,d1
		move.w	d1,$10(a0)
		asr.w	#5,d0
		add.w	$16(a0),d0
		move.w	d0,$14(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_Competition_PRESSSTART:
		tst.b	(Not_ghost_flag).w
		bne.s	locret_A55C
		btst	#5,(Level_frame_counter+1).w
		beq.s	locret_A55C
		move.w	$12(a0),d0
		add.w	(H_scroll_buffer).w,d0
		move.w	d0,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_A55C:
		rts
; ---------------------------------------------------------------------------
Pal_Competition2:
		binclude "General/Competition Menu/Palettes/2.bin"
		even
Pal_Competition3:
		binclude "General/Competition Menu/Palettes/3.bin"
		even
Pal_Competition4:
		binclude "General/Competition Menu/Palettes/4.bin"
		even
ObjDat_A65E:	dc.w $A
		dc.l Obj_Competition_StaticSprite
		dc.w $120
		dc.w $A9
		dc.w $2000
		dc.b 3
		dc.b 0
		dc.l Obj_Competition_1PSelect
		dc.w $125
		dc.w $C1
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite
		dc.w $125
		dc.w $D5
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite
		dc.w $125
		dc.w $D5
		dc.w 0
		dc.b 2
		dc.b 1
		dc.l Obj_CompetitionPlayerSprite
		dc.w $125
		dc.w $D5
		dc.w 0
		dc.b 1
		dc.b 2
		dc.l Obj_Competition_StaticSprite
		dc.w $122
		dc.w $109
		dc.w $2000
		dc.b 4
		dc.b 0
		dc.l Obj_Competition_2PSelect
		dc.w $125
		dc.w $121
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite2P
		dc.w $125
		dc.w $135
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_CompetitionPlayerSprite2P
		dc.w $125
		dc.w $135
		dc.w 0
		dc.b 2
		dc.b 1
		dc.l Obj_CompetitionPlayerSprite2P
		dc.w $125
		dc.w $135
		dc.w 0
		dc.b 1
		dc.b 2
		dc.l Obj_Competition_PRESSSTART
		dc.w $121
		dc.w $126
		dc.w $2000
		dc.b 5
		dc.b 0
Map_CompetitionSelect:
		include "General/Competition Menu/Map - Competition Select.asm"
; ---------------------------------------------------------------------------

Competition_Results:
		jsr	(Pal_FadeToBlack).l
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#$BF,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Clear_DisplayData).l
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$8700,(a6)
		move.w	#$8B00,(a6)
		move.w	#$8C89,(a6)
		move.w	#$9011,(a6)
		jsr	sub_B512(pc)
		move.w	#$C1AA,d0
		jsr	sub_B534(pc)
		move.w	#$C82A,d0
		jsr	sub_B534(pc)
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_A9F2:
		move.l	d0,(a1)+
		dbf	d1,loc_A9F2
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_AA02:
		move.l	d0,(a1)+
		dbf	d1,loc_AA02
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		clr.w	(Level_frame_counter).w
		clr.w	(Competition_mode).w
		clr.b	(Level_started_flag).w
		move.w	#$1E,(Events_bg+$16).w
		lea	(MapEni_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		move.w	#1,d0
		jsr	(Eni_Decomp).l
		lea	MapEni_CompetitionResultsLED(pc),a0
		lea	(RAM_start+$1000).l,a1
		move.w	#$A34A,d0
		jsr	(Eni_Decomp).l
		lea	VRAMDatList_AE06(pc),a0
		jsr	Copy_Listed_Data_To_VRAM(pc)
		jsr	sub_AC44(pc)
		lea	(ArtKos_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$20,a2
		jsr	KosArt_To_VDP(pc)
		move.l	#locret_952E,(_unkEF44_1).w
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(ArtKos_CompetitionLevel).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$53E0,a2
		jsr	KosArt_To_VDP(pc)
		lea	(ArtKos_CompetitionResults).l,a0
		movea.w	#$6940,a2
		jsr	KosArt_To_VDP(pc)
		lea	(ArtKos_CompetitionPlayer).l,a0
		movea.w	#-$46E0,a2
		jsr	KosArt_To_VDP(pc)
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(Pal_CompetitionMenuBG).l,a0
		lea	(Target_palette).w,a1
		moveq	#7,d0

loc_AACC:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_AACC
		lea	Pal_Competition2(pc),a0
		moveq	#$F,d0

loc_AAD8:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_AAD8
		lea	Pal_CompetitionResults(pc),a0
		moveq	#7,d0

loc_AAE4:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_AAE4
		lea	(Object_RAM).w,a0
		lea	ObjDat_ADA4(pc),a1
		move.w	(a1)+,d0

loc_AAF4:
		move.l	(a1)+,(a0)
		move.l	#Map_CompetitionSelect,$C(a0)
		move.w	(a1),$10(a0)
		move.w	(a1)+,$12(a0)
		move.w	(a1),$14(a0)
		move.w	(a1)+,$16(a0)
		move.w	(a1)+,d1
		addi.w	#$829F,d1
		move.w	d1,$A(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$2E(a0)
		lea	$4A(a0),a0
		dbf	d0,loc_AAF4
		jsr	(Init_SpriteTable).l
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		moveq	#signextendB(mus_Continue),d0
		jsr	(Play_Sound).l
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Pal_FadeFromBlack).l

loc_AB62:
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		addq.w	#1,(Level_frame_counter).w
		move.w	(_unkEEA0).w,d7
		beq.s	loc_AB92
		btst	#3,(Level_frame_counter+1).w
		bne.s	loc_AB8A
		lea	(Plane_buffer+$20).w,a1
		jsr	loc_9F0A(pc)
		bra.s	loc_AB92
; ---------------------------------------------------------------------------

loc_AB8A:
		move.l	(_unkEE98).w,d6
		jsr	sub_9ECC(pc)

loc_AB92:
		tst.w	(Events_bg+$16).w
		beq.s	loc_AB9E
		subq.w	#1,(Events_bg+$16).w
		bra.s	loc_ABD6
; ---------------------------------------------------------------------------

loc_AB9E:
		move.b	(Ctrl_1_pressed).w,d0
		tst.b	(Not_ghost_flag).w
		beq.s	loc_ABAC
		or.b	(Ctrl_2_pressed).w,d0

loc_ABAC:
		move.w	(H_scroll_buffer).w,d1
		beq.s	loc_ABBA
		cmpi.w	#$FF78,d1
		beq.s	loc_ABC8
		bra.s	loc_ABC0
; ---------------------------------------------------------------------------

loc_ABBA:
		andi.w	#$E0,d0
		beq.s	loc_ABD6

loc_ABC0:
		subq.w	#8,d1
		move.w	d1,(H_scroll_buffer).w
		bra.s	loc_ABD6
; ---------------------------------------------------------------------------

loc_ABC8:
		andi.w	#$E0,d0
		beq.s	loc_ABD6
		move.b	#$38,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_ABD6:
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		bra.w	loc_AB62
; ---------------------------------------------------------------------------

Obj_Competition_ABE6:
		move.l	#Map_CompetitionPlayerSprite,$C(a0)
		move.w	#$A5C9,$A(a0)
		move.b	(P1_character).w,d0
		tst.b	$2E(a0)
		beq.s	loc_AC02
		move.b	(P2_character).w,d0

loc_AC02:
		move.b	d0,$22(a0)
		jmp	Obj_Competition_StaticSprite(pc)
; ---------------------------------------------------------------------------

Obj_Competition_AC0A:
		move.w	#$A34A,$A(a0)
		move.b	(_unkEEA2).w,d0
		move.b	(_unkEEA2+1).w,d1
		tst.b	$2E(a0)
		beq.s	loc_AC20
		exg	d0,d1

loc_AC20:
		moveq	#$D,d2
		cmp.b	d0,d1
		beq.s	loc_AC2C
		bcs.s	loc_AC2A
		addq.w	#1,d2

loc_AC2A:
		subq.b	#2,d2

loc_AC2C:
		move.b	d2,$22(a0)
		cmpi.b	#$B,d2
		bne.w	Obj_Competition_StaticSprite
		btst	#3,(Level_frame_counter+1).w
		bne.w	Obj_Competition_StaticSprite
		rts

; =============== S U B R O U T I N E =======================================


sub_AC44:
		lea	($FF7800).l,a0
		move.w	#$C15A,d7
		jsr	sub_AD28(pc)
		move.w	#$C7DA,d7
		jsr	sub_AD28(pc)
		lea	($FF7800).l,a0
		jsr	sub_AD3E(pc)
		move.w	#$C65A,d7
		move.l	d6,(_unkEE98).w
		move.w	d7,(_unkEEA0).w
		jsr	sub_9ECC(pc)
		jsr	sub_AD3E(pc)
		move.w	#$CCDA,d7
		cmp.l	(_unkEE98).w,d6
		bhi.s	loc_AC92
		bne.s	loc_AC8A
		clr.w	(_unkEEA0).w
		bra.s	loc_AC92
; ---------------------------------------------------------------------------

loc_AC8A:
		move.l	d6,(_unkEE98).w
		move.w	d7,(_unkEEA0).w

loc_AC92:
		jsr	sub_9ECC(pc)
		clr.w	(_unkEEA2).w
		lea	($FF7800).l,a0
		move.l	#$41480003,d5
		moveq	#4,d7

loc_ACA8:
		lea	MapUnc_ResultsWin(pc),a1
		lea	MapUnc_ResultsLose(pc),a2
		addq.b	#1,(_unkEEA2).w
		move.l	(a0)+,d0
		cmp.l	$10(a0),d0
		beq.s	loc_ACCA
		bcs.s	loc_ACD4
		exg	a1,a2
		subq.b	#1,(_unkEEA2).w
		addq.b	#1,(_unkEEA2+1).w
		bra.s	loc_ACD4
; ---------------------------------------------------------------------------

loc_ACCA:
		lea	MapUnc_ResultsTie(pc),a1
		movea.l	a1,a2
		subq.b	#1,(_unkEEA2).w

loc_ACD4:
		move.l	d5,d0
		moveq	#1,d1
		moveq	#1,d2
		jsr	(Plane_Map_To_VRAM).l
		movea.l	a2,a1
		move.l	d5,d0
		addi.l	#$6800000,d0
		moveq	#1,d1
		moveq	#1,d2
		jsr	(Plane_Map_To_VRAM).l
		addi.l	#$1000000,d5
		dbf	d7,loc_ACA8
		move.w	(_unkEEA0).w,d7
		beq.s	locret_AD26
		move.l	(_unkEE98).w,d6
		jsr	sub_9ECC(pc)
		lea	(Plane_buffer).w,a0
		lea	$20(a0),a1
		moveq	#$F,d0

loc_AD16:
		move.w	(a0)+,d1
		andi.w	#-$6001,d1
		ori.w	#$6000,d1
		move.w	d1,(a1)+
		dbf	d0,loc_AD16

locret_AD26:
		rts
; End of function sub_AC44


; =============== S U B R O U T I N E =======================================


sub_AD28:
		moveq	#4,d0

loc_AD2A:
		move.w	d0,-(sp)
		move.l	(a0)+,d6
		jsr	sub_9ECC(pc)
		addi.w	#$100,d7
		move.w	(sp)+,d0
		dbf	d0,loc_AD2A
		rts
; End of function sub_AD28


; =============== S U B R O U T I N E =======================================


sub_AD3E:
		clr.l	(_unkEF40_1).w
		moveq	#4,d7

loc_AD44:
		move.l	(a0)+,d6
		lea	(_unkEF44_2).w,a1
		add.b	d6,-(a1)
		cmpi.b	#$64,(a1)
		bcs.s	loc_AD5A
		subi.b	#$64,(a1)
		addq.b	#1,-1(a1)

loc_AD5A:
		lsr.l	#8,d6
		add.b	d6,-(a1)
		cmpi.b	#$3C,(a1)
		bcs.s	loc_AD6C
		subi.b	#$3C,(a1)
		addq.b	#1,-1(a1)

loc_AD6C:
		lsr.l	#8,d6
		add.b	d6,-(a1)
		cmpi.b	#$64,(a1)
		bcs.s	loc_AD7A
		move.b	#$63,(a1)

loc_AD7A:
		dbf	d7,loc_AD44
		move.l	(_unkEF40_1).w,d6
		rts
; End of function sub_AD3E

; ---------------------------------------------------------------------------
Pal_CompetitionResults:
		binclude "General/Competition Menu/Palettes/Results.bin"
		even
ObjDat_ADA4:	dc.w 7
		dc.l Obj_Competition_StaticSprite
		dc.w $148
		dc.w $A1
		dc.w $2000
		dc.b 3
		dc.b 0
		dc.l Obj_Competition_StaticSprite
		dc.w $14D
		dc.w $B9
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_Competition_ABE6
		dc.w $14D
		dc.w $D3
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_Competition_AC0A
		dc.w $CC
		dc.w $BC
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_Competition_StaticSprite
		dc.w $14A
		dc.w $109
		dc.w $2000
		dc.b 4
		dc.b 0
		dc.l Obj_Competition_StaticSprite
		dc.w $14D
		dc.w $121
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_Competition_ABE6
		dc.w $14D
		dc.w $13B
		dc.w 0
		dc.b 0
		dc.b 1
		dc.l Obj_Competition_AC0A
		dc.w $CC
		dc.w $124
		dc.w 0
		dc.b 0
		dc.b 1
VRAMDatList_AE06:dc.w 8
		dc.l RAM_start
		dc.w $E000
		dc.w $27
		dc.w $1B
		dc.l RAM_start+$1000
		dc.w $C204
		dc.w $E
		dc.w 5
		dc.l RAM_start+$1000
		dc.w $C884
		dc.w $E
		dc.w 5
		dc.l MapUnc_CompetitionResultsLetters
		dc.w $C142
		dc.w 1
		dc.w 9
		dc.l MapUnc_CompetitionResultsLetters
		dc.w $C7C2
		dc.w 1
		dc.w 9
		dc.l MapUnc_CompetitionResultsDividers
		dc.w $C152
		dc.w 3
		dc.w 9
		dc.l MapUnc_CompetitionResultsDividers
		dc.w $C7D2
		dc.w 3
		dc.w 9
		dc.l MapUnc_CompetitionResultsTOTAL
		dc.w $C650
		dc.w 4
		dc.w 1
		dc.l MapUnc_CompetitionResultsTOTAL
		dc.w $CCD0
		dc.w 4
		dc.w 1
MapEni_CompetitionResultsLED:
		binclude "General/Competition Menu/Enigma Map/Menu.bin"
		even
MapUnc_CompetitionResultsLetters:
		binclude "General/Competition Menu/Uncompressed Map/Results Letters.bin"
		even
MapUnc_CompetitionResultsDividers:
		binclude "General/Competition Menu/Uncompressed Map/Results Dividers.bin"
		even
MapUnc_CompetitionResultsTOTAL:
		binclude "General/Competition Menu/Uncompressed Map/Results TOTAL.bin"
		even
MapUnc_ResultsWin:
		binclude "General/Competition Menu/Uncompressed Map/Results Win.bin"
		even
MapUnc_ResultsLose:
		binclude "General/Competition Menu/Uncompressed Map/Results Lose.bin"
		even
MapUnc_ResultsTie:
		binclude "General/Competition Menu/Uncompressed Map/Results Tie.bin"
		even
; ---------------------------------------------------------------------------

TimeAttack_Records:
		jsr	(Pal_FadeToBlack).l
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#$BF,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Clear_DisplayData).l
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$8700,(a6)
		move.w	#$8B00,(a6)
		move.w	#$8C89,(a6)
		move.w	#$9011,(a6)
		jsr	sub_B512(pc)
		move.w	#$C1AA,d0
		jsr	sub_B534(pc)
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_AF76:
		move.l	d0,(a1)+
		dbf	d1,loc_AF76
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_AF86:
		move.l	d0,(a1)+
		dbf	d1,loc_AF86
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		clr.w	(Level_frame_counter).w
		clr.w	(Competition_mode).w
		clr.b	(Level_started_flag).w
		move.w	#$1E,(Events_bg+$16).w
		move.w	#-$88,(H_scroll_buffer).w
		lea	(MapEni_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		move.w	#1,d0
		jsr	(Eni_Decomp).l
		lea	VRAMDatList_B2CA(pc),a0
		jsr	Copy_Listed_Data_To_VRAM(pc)
		moveq	#0,d0
		move.b	(Current_zone).w,d0
		subi.w	#$E,d0
		lsl.w	#2,d0
		lea	CompTimeAttack_LevelNameMaps(pc),a1
		movea.l	(a1,d0.w),a1
		move.l	#$48260003,d0
		moveq	#$C,d1
		moveq	#1,d2
		jsr	(Plane_Map_To_VRAM).l
		jsr	sub_B1C6(pc)
		move.l	#$71A00002,(VDP_control_port).l
		lea	(ArtNem_ContinueDigits).l,a0
		jsr	(Nem_Decomp).l
		move.l	#$74200002,(VDP_control_port).l
		lea	(ArtNem_S38x16Font).l,a0
		jsr	(Nem_Decomp).l
		lea	(ArtKos_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$20,a2
		jsr	KosArt_To_VDP(pc)
		move.l	#locret_952E,(_unkEF44_1).w
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(ArtKos_CompetitionLevel).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$53E0,a2
		jsr	KosArt_To_VDP(pc)
		lea	(ArtKos_CompetitionResults).l,a0
		movea.w	#$6940,a2
		jsr	KosArt_To_VDP(pc)
		lea	(ArtKos_CompetitionPlayer).l,a0
		movea.w	#-$46E0,a2
		jsr	KosArt_To_VDP(pc)
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(ArtKos_SSResultsGeneral).l,a0
		lea	(RAM_start+$20).l,a1
		jsr	(Kos_Decomp).l
		lea	(ArtKos_SSResultsTKIcons).l,a0
		jsr	(Kos_Decomp).l
		move	#$2700,sr
		move.l	#$6E400002,(VDP_control_port).l
		lea	(RAM_start+$EE0).l,a0
		lea	(VDP_data_port).l,a6
		move.w	#$D7,d0

loc_B0C2:
		move.l	(a0)+,(a6)
		dbf	d0,loc_B0C2
		lea	(Pal_CompetitionMenuBG).l,a0
		lea	(Target_palette).w,a1
		moveq	#7,d0

loc_B0D4:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_B0D4
		lea	Pal_Competition2(pc),a0
		moveq	#$F,d0

loc_B0E0:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_B0E0
		lea	Pal_CompetitionTimeAttack(pc),a0
		moveq	#7,d0

loc_B0EC:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_B0EC
		lea	(Object_RAM).w,a0
		lea	ObjDat_B28C(pc),a1
		move.w	(a1)+,d0

loc_B0FC:
		move.l	(a1)+,(a0)
		move.l	#Map_CompetitionSelect,$C(a0)
		move.w	(a1),$10(a0)
		move.w	(a1)+,$12(a0)
		move.w	(a1),$14(a0)
		move.w	(a1)+,$16(a0)
		move.w	(a1)+,d1
		addi.w	#$829F,d1
		move.w	d1,$A(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$2E(a0)
		lea	$4A(a0),a0
		dbf	d0,loc_B0FC
		jsr	(Init_SpriteTable).l
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		moveq	#signextendB(mus_Continue),d0
		jsr	(Play_Sound).l
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Pal_FadeFromBlack).l

loc_B16A:
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		addq.w	#1,(Level_frame_counter).w
		move.w	(_unkEEA0).w,d7
		beq.s	loc_B19A
		btst	#3,(Level_frame_counter+1).w
		bne.s	loc_B192
		lea	(Plane_buffer+$20).w,a1
		jsr	loc_9F0A(pc)
		bra.s	loc_B19A
; ---------------------------------------------------------------------------

loc_B192:
		move.l	(_unkEE98).w,d6
		jsr	sub_9ECC(pc)

loc_B19A:
		tst.w	(Events_bg+$16).w
		beq.s	loc_B1A6
		subq.w	#1,(Events_bg+$16).w
		bra.s	loc_B1B8
; ---------------------------------------------------------------------------

loc_B1A6:
		move.b	(Ctrl_1_pressed).w,d0
		andi.w	#$E0,d0
		beq.s	loc_B1B8
		move.b	#$C0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_B1B8:
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		bra.s	loc_B16A

; =============== S U B R O U T I N E =======================================


sub_B1C6:
		lea	($FF7828).l,a0
		move.w	#-$3EA6,d7
		moveq	#5,d0
		jsr	loc_AD2A(pc)
		moveq	#0,d0
		move.b	(Current_zone).w,d0
		subi.w	#$E,d0
		lsl.w	#4,d0
		lea	(Competition_saved_data).w,a0
		adda.w	d0,a0
		move.w	#-$36A6,d7
		move.l	(a0)+,d6
		jsr	sub_9ECC(pc)
		addi.w	#$180,d7
		move.l	(a0)+,d6
		jsr	sub_9ECC(pc)
		addi.w	#$180,d7
		move.l	(a0)+,d6
		jsr	sub_9ECC(pc)
		clr.w	(_unkEEA0).w
		rts
; End of function sub_B1C6

; ---------------------------------------------------------------------------

Obj_Competition_B20C:
		move.l	#Map_Results,$C(a0)
		move.w	#$A4FB,$A(a0)
		moveq	#0,d0
		move.b	(Current_zone).w,d0
		subi.w	#$E,d0
		lsl.w	#4,d0
		lea	(Competition_saved_data).w,a1
		lea	$C(a1,d0.w),a1
		moveq	#0,d0
		move.b	$2E(a0),d0
		move.b	(a1,d0.w),d0
		cmpi.w	#2,d0
		bne.s	loc_B244
		addi.w	#$2000,$A(a0)

loc_B244:
		addi.w	#$29,d0
		move.b	d0,$22(a0)
		move.l	#loc_B252,(a0)

loc_B252:
		move.b	(Competition_time_attack_new_top_record).w,d0
		cmp.b	$2E(a0),d0
		bne.s	loc_B264
		btst	#3,(Level_frame_counter+1).w
		beq.s	locret_B26A

loc_B264:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_B26A:
		rts
; ---------------------------------------------------------------------------
Pal_CompetitionTimeAttack:
		binclude "General/Competition Menu/Palettes/Time Attack.bin"
		even
ObjDat_B28C:	dc.w 4
		dc.l Obj_Competition_StaticSprite
		dc.w $14D
		dc.w $B9
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_Competition_ABE6
		dc.w $14D
		dc.w $CB
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_Competition_B20C
		dc.w $130
		dc.w $120
		dc.w 0
		dc.b 0
		dc.b 0
		dc.l Obj_Competition_B20C
		dc.w $130
		dc.w $138
		dc.w 0
		dc.b 0
		dc.b 1
		dc.l Obj_Competition_B20C
		dc.w $130
		dc.w $150
		dc.w 0
		dc.b 0
		dc.b 2
VRAMDatList_B2CA:dc.w 8
		dc.l RAM_start
		dc.w $E000
		dc.w $27
		dc.w $1B
		dc.l MapUnc_CompetitionLAPNum
		dc.w $C144
		dc.w 4
		dc.w 9
		dc.l MapUnc_CompetitionResultsDividers
		dc.w $C152
		dc.w 3
		dc.w 9
		dc.l MapUnc_CompetitionResultsTOTAL
		dc.w $C650
		dc.w 4
		dc.w 1
		dc.l MapUnc_CompetitionResultsDividers
		dc.w $C952
		dc.w 3
		dc.w 1
		dc.l MapUnc_CompetitionResultsDividers
		dc.w $CAD2
		dc.w 3
		dc.w 1
		dc.l MapUnc_CompetitionResultsDividers
		dc.w $CC52
		dc.w 3
		dc.w 1
		dc.l MapUnc_CompetitionRECORDS
		dc.w $C92C
		dc.w 6
		dc.w 1
		dc.l MapUnc_Competition1st2nd3rd
		dc.w $C944
		dc.w 2
		dc.w 7
MapUnc_CompetitionLAPNum:
		binclude "General/Competition Menu/Uncompressed Map/LAP.bin"
		even
MapUnc_CompetitionRECORDS:
		binclude "General/Competition Menu/Uncompressed Map/RECORDS.bin"
		even
MapUnc_Competition1st2nd3rd:
		binclude "General/Competition Menu/Uncompressed Map/1ST 2ND 3RD.bin"
		even
CompTimeAttack_LevelNameMaps:
		dc.l MapUnc_CompetitionAZURELAKE
		dc.l MapUnc_CompetitionBALLOONPARK
		dc.l MapUnc_CompetitionDESERTPALACE
		dc.l MapUnc_CompetitionCHROMEGADGET
		dc.l MapUnc_CompetitionENDLESSMINE
MapUnc_CompetitionAZURELAKE:
		binclude "General/Competition Menu/Uncompressed Map/AZURE LAKE.bin"
		even
MapUnc_CompetitionBALLOONPARK:
		binclude "General/Competition Menu/Uncompressed Map/BALLOON PARK.bin"
		even
MapUnc_CompetitionCHROMEGADGET:
		binclude "General/Competition Menu/Uncompressed Map/CHROME GADGET.bin"
		even
MapUnc_CompetitionDESERTPALACE:
		binclude "General/Competition Menu/Uncompressed Map/DESERT PALACE.bin"
		even
MapUnc_CompetitionENDLESSMINE:
		binclude "General/Competition Menu/Uncompressed Map/ENDLESS MINE.bin"
		even

; =============== S U B R O U T I N E =======================================


KosArt_To_VDP:
		movea.l	a1,a3
		jsr	(Kos_Decomp).l
		move.l	a3,d1
		andi.l	#$FFFFFF,d1
		move.l	a1,d3
		sub.l	a3,d3
		lsr.l	#1,d3
		move.w	a2,d2
		movea.l	a1,a3
		jsr	(Add_To_DMA_Queue).l
		movea.l	a3,a1
		rts
; End of function KosArt_To_VDP


; =============== S U B R O U T I N E =======================================


sub_B512:
		move.l	#$80008000,d0
		move.w	#$7FF,d1
		move.l	#$40000003,(VDP_control_port).l
		lea	(VDP_data_port).l,a6

loc_B52C:
		move.l	d0,(a6)
		dbf	d1,loc_B52C
		rts
; End of function sub_B512


; =============== S U B R O U T I N E =======================================


sub_B534:
		moveq	#7,d2
		lea	(VDP_data_port).l,a6
		moveq	#0,d1

loc_B53E:
		move.w	d0,d3
		bsr.s	sub_B550
		addi.w	#$80,d0
		andi.w	#$DFFF,d0
		dbf	d2,loc_B53E
		rts
; End of function sub_B534


; =============== S U B R O U T I N E =======================================


sub_B550:
		swap	d3
		clr.w	d3
		swap	d3
		lsl.l	#2,d3
		lsr.w	#2,d3
		ori.w	#$4000,d3
		swap	d3
		move.l	d3,VDP_control_port-VDP_data_port(a6)
		move.l	d1,(a6)
		move.l	d1,(a6)
		move.l	d1,(a6)
		move.l	d1,(a6)
		move.w	d1,(a6)
		rts
; End of function sub_B550


; =============== S U B R O U T I N E =======================================


Copy_Listed_Data_To_VRAM:
		move.w	(a0)+,d7

loc_B572:
		movea.l	(a0)+,a1
		move.w	(a0)+,d0
		swap	d0
		clr.w	d0
		swap	d0
		lsl.l	#2,d0
		lsr.w	#2,d0
		ori.w	#$4000,d0
		swap	d0
		move.w	(a0)+,d1
		move.w	(a0)+,d2
		jsr	(Plane_Map_To_VRAM).l
		dbf	d7,loc_B572
		rts
; End of function Copy_Listed_Data_To_VRAM


; =============== S U B R O U T I N E =======================================


sub_B596:
		lea	(Dynamic_object_RAM).w,a0
		bsr.s	sub_B5A0
		lea	(Dynamic_object_RAM+(object_size*5)).w,a0
; End of function sub_B596


; =============== S U B R O U T I N E =======================================


sub_B5A0:
		lea	$4A(a0),a1
		lea	$4A(a1),a2
		bsr.s	sub_B5D2
		bsr.s	sub_B5D2
		move.w	#$80,8(a0)
		move.w	#$100,8(a1)
		move.w	#$180,8(a2)
		bset	#7,$A(a0)
		bclr	#7,$A(a1)
		bclr	#7,$A(a2)
		rts
; End of function sub_B5A0


; =============== S U B R O U T I N E =======================================


sub_B5D2:
		move.w	$14(a0),d0
		cmp.w	$14(a1),d0
		bgt.s	loc_B5DE
		exg	a0,a1

loc_B5DE:
		move.w	$14(a1),d0
		cmp.w	$14(a2),d0
		bgt.s	locret_B5EA
		exg	a1,a2

locret_B5EA:
		rts
; End of function sub_B5D2


; =============== S U B R O U T I N E =======================================


sub_B5EC:
		move.w	#1,(Competition_mode).w
		bra.s	loc_B5F8
; ---------------------------------------------------------------------------

Set_Lives_and_Continues:
		clr.w	(Competition_mode).w

loc_B5F8:
		move.b	#3,(Life_count).w
		move.b	#3,(Life_count_P2).w
		moveq	#0,d0
		move.b	d0,(Last_star_post_hit).w
		move.b	d0,(Special_bonus_entry_flag).w
		move.w	d0,(Ring_count).w
		move.l	d0,(Timer).w
		move.l	d0,(Score).w
		move.w	d0,(Ring_count_P2).w
		move.l	d0,(Timer_P2).w
		move.l	d0,(Score_P2).w
		move.b	d0,(Continue_count).w
		move.l	#5000,(Next_extra_life_score).w
		move.l	#5000,(Next_extra_life_score_P2).w
		rts
; End of function sub_B5EC


; =============== S U B R O U T I N E =======================================


SRAM_Load:
		move.b	#1,($A130F1).l
		lea	($200011).l,a0
		lea	($2000BD).l,a1
		lea	(Competition_saved_data).w,a2
		moveq	#$29,d0
		move.w	#$4C44,d1
		jsr	Get_From_SRAM(pc)
		beq.s	loc_B674
		lea	SaveData_GeneralDefault(pc),a0
		lea	(Competition_saved_data).w,a1
		moveq	#$28,d0

loc_B66A:
		move.w	(a0)+,(a1)+
		dbf	d0,loc_B66A
		jsr	Write_SaveGeneral(pc)

loc_B674:
		lea	($200169).l,a0
		lea	($2001F5).l,a1
		lea	(Saved_data).w,a2
		moveq	#$19,d0
		move.w	#$4244,d1
		jsr	Get_From_SRAM(pc)
		beq.s	loc_B6A4
		lea	SaveData_GameDefault(pc),a0
		lea	(Saved_data).w,a1
		moveq	#$18,d0

loc_B69A:
		move.w	(a0)+,(a1)+
		dbf	d0,loc_B69A
		jsr	Write_SaveGame(pc)

loc_B6A4:
		clr.w	(Dataselect_nosave_player).w
		move.b	#1,(Dataselect_entry).w
		rts
; End of function SRAM_Load

; ---------------------------------------------------------------------------
SaveData_GeneralDefault:
		dc.w  $8000,     0, $8000,     0, $8000,     0,     1,  $200
		dc.w  $8000,     0, $8000,     0, $8000,     0,     1,  $200
		dc.w  $8000,     0, $8000,     0, $8000,     0,     1,  $200
		dc.w  $8000,     0, $8000,     0, $8000,     0,     1,  $200
		dc.w  $8000,     0, $8000,     0, $8000,     0,     1,  $200
		dc.w  $4C44
SaveData_GameDefault:
		dc.w  $8000,     0,     0,     0, $8000,     0,     0,     0
		dc.w  $8000,     0,     0,     0, $8000,     0,     0,     0
		dc.w  $8000,     0,     0,     0, $8000,     0,     0,     0
		dc.w  $4244

; =============== S U B R O U T I N E =======================================


Get_From_SRAM:
		movea.l	a2,a3
		move.w	d0,d2
		bsr.s	Read_SRAM
		beq.s	locret_B744
		movea.l	a1,a0
		movea.l	a3,a2
		move.w	d2,d0
		bsr.s	Read_SRAM

locret_B744:
		rts
; End of function Get_From_SRAM


; =============== S U B R O U T I N E =======================================


Read_SRAM:
		movea.l	a2,a6
		move.w	d0,d6

loc_B74A:
		movep.w	0(a0),d3
		move.w	d3,(a2)+
		addq.w	#4,a0
		dbf	d0,loc_B74A
		subq.w	#1,d6
		bsr.s	Create_SRAMChecksum
		cmp.w	(a6),d7
		bne.s	locret_B762
		cmp.w	-2(a6),d1

locret_B762:
		rts
; End of function Read_SRAM


; =============== S U B R O U T I N E =======================================


Create_SRAMChecksum:
		moveq	#0,d7

loc_B766:
		move.w	(a6)+,d5
		eor.w	d5,d7
		lsr.w	#1,d7
		bcc.s	loc_B772
		eori.w	#$8810,d7

loc_B772:
		dbf	d6,loc_B766
		rts
; End of function Create_SRAMChecksum


; =============== S U B R O U T I N E =======================================


Write_SRAM:
		movea.l	a2,a6
		move.w	d0,d6
		subq.w	#1,d6
		bsr.s	Create_SRAMChecksum
		move.w	d7,(a6)
		movea.l	a2,a3
		move.w	d0,d1

loc_B786:
		move.w	(a2)+,d2
		movep.w	d2,0(a0)
		addq.w	#4,a0
		dbf	d0,loc_B786

loc_B792:
		move.w	(a3)+,d2
		movep.w	d2,0(a1)
		addq.w	#4,a1
		dbf	d1,loc_B792
		rts
; End of function Write_SRAM


; =============== S U B R O U T I N E =======================================


Write_SaveGeneral:
		move.l	a0,-(sp)
		move.w	d7,-(sp)
		lea	($200011).l,a0
		lea	($2000BD).l,a1
		lea	(Competition_saved_data).w,a2
		moveq	#$29,d0
		bsr.s	Write_SRAM
		move.w	(sp)+,d7
		movea.l	(sp)+,a0
		rts
; End of function Write_SaveGeneral


; =============== S U B R O U T I N E =======================================


Write_SaveGame:
		move.l	a0,-(sp)
		move.w	d7,-(sp)
		lea	($200169).l,a0
		lea	($2001F5).l,a1
		lea	(Saved_data).w,a2
		moveq	#$19,d0
		bsr.s	Write_SRAM
		move.w	(sp)+,d7
		movea.l	(sp)+,a0
		rts
; End of function Write_SaveGame


; =============== S U B R O U T I N E =======================================


SaveGame:
		tst.b	(Apparent_act).w
		beq.s	locret_B80E
		move.l	(Save_pointer).w,d0
		beq.s	loc_B80A
		movea.l	d0,a1
		cmpi.b	#6,3(a1)
		bhi.s	loc_B80A
		moveq	#0,d0
		move.b	(Apparent_zone).w,d0
		move.b	SaveGame_NextLevel(pc,d0.w),3(a1)
		clr.b	7(a1)
		clr.b	1(a1)
		jsr	Write_SaveGame(pc)

loc_B80A:
		clr.l	(Collected_special_ring_array).w

locret_B80E:
		rts
; End of function SaveGame

; ---------------------------------------------------------------------------
SaveGame_NextLevel:dc.b    1,   2,   3,   5,   5,   6,   7,   0

; =============== S U B R O U T I N E =======================================


SaveGame_SpecialStage:
		move.l	(Save_pointer).w,d0
		beq.s	locret_B858
		movea.l	d0,a1
		move.b	(Current_special_stage).w,4(a1)
		move.b	(Emerald_count+1).w,5(a1)
		lea	(Collected_emeralds_array).w,a2
		moveq	#0,d0
		moveq	#6,d1

loc_B834:
		tst.b	(a2)+
		beq.s	loc_B83C
		ori.w	#1,d0

loc_B83C:
		lsl.b	#1,d0
		dbf	d1,loc_B834
		move.b	d0,6(a1)
		move.l	(Collected_special_ring_array).w,d0
		move.b	d0,7(a1)
		lsr.l	#8,d0
		move.b	d0,1(a1)
		jmp	Write_SaveGame(pc)
; ---------------------------------------------------------------------------

locret_B858:
		rts
; End of function SaveGame_SpecialStage

; ---------------------------------------------------------------------------

locret_B85A:
		rts
; ---------------------------------------------------------------------------

SaveScreen:
		jsr	(Pal_FadeToBlack).l
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#$BF,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Clear_DisplayData).l
		lea	(VDP_control_port).l,a5
		move.w	#$8F01,(a5)
		move.l	#$940F93FF,(a5)
		move.w	#$9780,(a5)
		move.l	#$50000083,(a5)
		move.w	#0,(VDP_data_port).l

loc_B89C:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	loc_B89C
		move.w	#$8F02,(a5)
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8238,(a6)
		move.w	#$8338,(a6)
		move.w	#$8406,(a6)
		move.w	#$8700,(a6)
		move.w	#$8B00,(a6)
		move.w	#$8C81,(a6)
		move.w	#$9003,(a6)
		move.w	#$9280,(a6)
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_B8DC:
		move.l	d0,(a1)+
		dbf	d1,loc_B8DC
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_B8EC:
		move.l	d0,(a1)+
		dbf	d1,loc_B8EC
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		clr.w	(Level_frame_counter).w
		clr.w	(Events_bg+$10).w
		clr.w	(Events_bg+$12).w
		lea	(MapEni_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		move.w	#1,d0
		jsr	(Eni_Decomp).l
		lea	(RAM_start).l,a1
		move.l	#$60000003,d0
		moveq	#$27,d1
		moveq	#$1B,d2
		jsr	(Plane_Map_To_VRAM).l
		lea	(MapEni_SaveScreen_Layout).l,a0
		lea	(RAM_start).l,a1
		move.w	#$829F,d0
		jsr	(Eni_Decomp).l
		lea	word_BD16(pc),a0
		jsr	sub_BAE0(pc)
		move.l	#$6C400002,(VDP_control_port).l
		lea	(ArtNem_S22POptions).l,a0
		jsr	(Nem_Decomp).l
		lea	byte_C7BE(pc),a1
		move.w	#$CD06,d0
		jsr	sub_C794(pc)
		move.w	#$CDB8,d0
		jsr	sub_C794(pc)
		lea	(ArtKos_S3MenuBG).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$20,a2
		jsr	(KosArt_To_VDP).l
		move.l	#locret_B85A,(_unkEF44_1).w
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(ArtKos_SaveScreenMisc).l,a0
		lea	(RAM_start).l,a1
		movea.w	#$53E0,a2
		jsr	KosArt_To_VDP(pc)
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		lea	(Pal_SaveMenuBG).l,a0
		lea	(Target_palette).w,a1
		moveq	#7,d0

loc_B9D4:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_B9D4
		lea	Pal_Save_Chars(pc),a0
		moveq	#$F,d0

loc_B9E0:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_B9E0
		lea	(Object_RAM).w,a0
		lea	ObjDat_SaveScreen(pc),a1
		move.w	(a1)+,d0

loc_B9F0:
		move.l	(a1)+,(a0)
		move.w	#$829F,$A(a0)
		move.l	#Map_SaveScreen,$C(a0)
		move.w	(a1),$10(a0)
		move.w	(a1)+,$12(a0)
		move.w	(a1)+,$14(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$2E(a0)
		move.b	#$40,4(a0)
		lea	$4A(a0),a0
		dbf	d0,loc_B9F0
		jsr	(Init_SpriteTable).l
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		lea	(Normal_palette_line_4).w,a0
		lea	(Target_palette_line_4).w,a1
		moveq	#7,d0

loc_BA3E:
		move.l	(a0),(a1)+
		clr.l	(a0)+
		dbf	d0,loc_BA3E
		lea	(ArtKos_SaveScreenS3Zone).l,a0
		lea	(RAM_start).l,a1
		jsr	(Kos_Decomp).l
		moveq	#signextendB(mus_DataSelect),d0
		jsr	(Play_Sound).l
		move.l	#loc_BB0A,(_unkEF44_1).w
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Pal_FadeFromBlack).l

SaveScreen_MainLoop:
		move.b	#$1E,(V_int_routine).w
		jsr	(Wait_VSync).l
		addq.w	#1,(Level_frame_counter).w
		jsr	(Process_Sprites).l
		move.w	(Camera_X_pos_copy).w,d0
		neg.w	d0
		move.w	d0,(H_scroll_buffer+2).w
		jsr	(Render_Sprites).l
		lea	(Normal_palette_line_3+2).w,a0
		moveq	#$E,d0
		btst	#0,(Level_frame_counter+1).w
		beq.s	loc_BAC8
		lea	Pal_Save_Emeralds(pc),a1

loc_BAC0:
		move.w	(a1)+,(a0)+
		dbf	d0,loc_BAC0
		bra.s	loc_BAD0
; ---------------------------------------------------------------------------

loc_BAC8:
		move.w	#$CCC,(a0)+
		dbf	d0,loc_BAC8

loc_BAD0:
		cmpi.b	#$4C,(Game_mode).w
		beq.s	SaveScreen_MainLoop
		moveq	#signextendB(sfx_EnterSS),d0
		jmp	(Play_Sound_2).l

; =============== S U B R O U T I N E =======================================


sub_BAE0:
		move.w	(a0)+,d7

loc_BAE2:
		movea.l	(a0)+,a1
		move.w	(a0)+,d0
		bsr.s	sub_BAF8
		move.w	(a0)+,d1
		move.w	(a0)+,d2
		jsr	(Plane_Map_To_VRAM_2).l
		dbf	d7,loc_BAE2
		rts
; End of function sub_BAE0


; =============== S U B R O U T I N E =======================================


sub_BAF8:
		swap	d0
		clr.w	d0
		swap	d0
		lsl.l	#2,d0
		lsr.w	#2,d0
		ori.w	#$4000,d0
		swap	d0
		rts
; End of function sub_BAF8

; ---------------------------------------------------------------------------

loc_BB0A:
		move.w	(Level_frame_counter).w,d0
		andi.w	#$C,d0
		lea	(MapPtrs_SaveScreenStatic).l,a2
		movea.l	(a2,d0.w),a2
		lea	(Saved_data).w,a0
		move.w	#$C31A,d7
		moveq	#5,d6

loc_BB26:
		lea	(MapUnc_SaveScreenNEW).l,a1
		tst.b	(a0)
		bmi.s	loc_BB32
		movea.l	a2,a1

loc_BB32:
		move.w	d7,d0
		bsr.s	sub_BAF8
		moveq	#9,d1
		moveq	#6,d2
		jsr	(Plane_Map_To_VRAM_2).l
		addi.w	#$1A,d7
		addq.w	#8,a0
		dbf	d6,loc_BB26
		lea	(Saved_data).w,a0
		lea	(Dynamic_object_RAM+object_size).w,a3
		move.w	#-$34E0,d7
		moveq	#5,d3

loc_BB58:
		move.w	d7,d0
		subq.w	#2,d0
		jsr	sub_BAF8(pc)
		move.l	d0,4(a6)
		move.w	#$82B1,(a6)
		lea	byte_C7CD(pc),a1
		tst.b	(a0)
		bmi.s	loc_BB98
		lea	byte_C7D9(pc),a1
		cmpi.w	#6,$36(a3)
		bhi.s	loc_BB98
		lea	byte_C7D3(pc),a1
		move.w	d7,d0
		subq.w	#2,d0
		jsr	sub_C794(pc)
		move.w	$36(a3),d0
		move.b	byte_BBAE(pc,d0.w),d0
		addi.w	#$A562,d0
		move.w	d0,(a6)
		bra.s	loc_BB9E
; ---------------------------------------------------------------------------

loc_BB98:
		move.w	d7,d0
		jsr	sub_C794(pc)

loc_BB9E:
		addi.w	#$1A,d7
		addq.w	#8,a0
		lea	$4A(a3),a3
		dbf	d3,loc_BB58
		rts
; ---------------------------------------------------------------------------
byte_BBAE:	dc.b 1
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b 5
		dc.b 6
		dc.b 0
Pal_Save_Chars:	binclude "General/Save Menu/Palettes/Chars.bin"
		even
Pal_Save_Emeralds:
		binclude "General/Save Menu/Palettes/Emeralds.bin"
		even
Pal_Save_FinishCard1:
		binclude "General/Save Menu/Palettes/Finish Card 1.bin"
		even
Pal_Save_FinishCard2:
		binclude "General/Save Menu/Palettes/Finish Card 2.bin"
		even
Pal_Save_ZoneCard1:
		binclude "General/Save Menu/Palettes/Zone Card 1.bin"
		even
Pal_Save_ZoneCard2:
		binclude "General/Save Menu/Palettes/Zone Card 2.bin"
		even
Pal_Save_ZoneCard3:
		binclude "General/Save Menu/Palettes/Zone Card 3.bin"
		even
Pal_Save_ZoneCard4:
		binclude "General/Save Menu/Palettes/Zone Card 4.bin"
		even
Pal_Save_ZoneCard8:
		binclude "General/Save Menu/Palettes/Zone Card 8 S3.bin"
		even
Pal_Save_ZoneCard5:
		binclude "General/Save Menu/Palettes/Zone Card 5.bin"
		even
Pal_Save_ZoneCard6:
		binclude "General/Save Menu/Palettes/Zone Card 6.bin"
		even
word_BD16:	dc.w 7
		dc.l Chunk_table+$222
		dc.w $C202
		dc.w $A
		dc.w $B
		dc.l Chunk_table
		dc.w $C218
		dc.w $C
		dc.w $14
		dc.l Chunk_table
		dc.w $C232
		dc.w $C
		dc.w $14
		dc.l Chunk_table
		dc.w $C24C
		dc.w $C
		dc.w $14
		dc.l Chunk_table
		dc.w $C266
		dc.w $C
		dc.w $14
		dc.l Chunk_table
		dc.w $C280
		dc.w $C
		dc.w $14
		dc.l Chunk_table
		dc.w $C29A
		dc.w $C
		dc.w $14
		dc.l Chunk_table+$222
		dc.w $C2B4
		dc.w $A
		dc.w $B
Map_SaveScreen:	include "General/Save Menu/Map - Save Screen General S3.asm"
ObjDat_SaveScreen:dc.w 9
		dc.l Draw_Sprite
		dc.w $120
		dc.w $14C
		dc.b 3
		dc.b 0
		dc.l Obj_SaveScreen_Selector
		dc.w $120
		dc.w $E2
		dc.b 1
		dc.b 0
		dc.l Obj_SaveScreen_Delete_Save
		dc.w $378
		dc.w $E0
		dc.b $D
		dc.b 0
		dc.l Obj_SaveScreen_NoSave_Slot
		dc.w $B0
		dc.w $D0
		dc.b 0
		dc.b 0
		dc.l Obj_SaveScreen_Save_Slot
		dc.w $110
		dc.w $118
		dc.b 0
		dc.b 0
		dc.l Obj_SaveScreen_Save_Slot
		dc.w $178
		dc.w $118
		dc.b 0
		dc.b 1
		dc.l Obj_SaveScreen_Save_Slot
		dc.w $1E0
		dc.w $118
		dc.b 0
		dc.b 2
		dc.l Obj_SaveScreen_Save_Slot
		dc.w $248
		dc.w $118
		dc.b 0
		dc.b 3
		dc.l Obj_SaveScreen_Save_Slot
		dc.w $2B0
		dc.w $118
		dc.b 0
		dc.b 4
		dc.l Obj_SaveScreen_Save_Slot
		dc.w $318
		dc.w $118
		dc.b 0
		dc.b 5
; ---------------------------------------------------------------------------

Obj_SaveScreen_Selector:
		move.w	#$A8,d0
		moveq	#0,d1
		moveq	#0,d2
		move.b	(Dataselect_entry).w,d2
		subq.w	#1,d2
		bcs.s	loc_C098

loc_C078:
		moveq	#$C,d4

loc_C07A:
		addq.w	#8,d0
		cmpi.w	#$120,d0
		bls.s	loc_C090
		subq.w	#8,d0
		addq.w	#8,d1
		cmpi.w	#$1F0,d1
		bls.s	loc_C090
		subq.w	#8,d1
		addq.w	#8,d0

loc_C090:
		dbf	d4,loc_C07A
		dbf	d2,loc_C078

loc_C098:
		move.w	d0,$12(a0)
		move.w	d1,(Camera_X_pos_copy).w
		neg.w	d1
		move.w	d1,(H_scroll_buffer+2).w
		move.l	#loc_C0AC,(a0)

loc_C0AC:
		tst.w	(Events_bg+$12).w
		bne.s	loc_C0C4
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_C0C4
		move.b	#4,(Game_mode).w
		bra.w	loc_C180
; ---------------------------------------------------------------------------

loc_C0C4:
		tst.w	(Events_bg+$10).w
		bne.w	loc_C180
		tst.w	$30(a0)
		bne.s	loc_C13C
		moveq	#0,d0
		btst	#2,(Ctrl_1_pressed).w
		beq.s	loc_C106
		tst.w	(Events_bg+$12).w
		beq.s	loc_C0EA
		cmpi.b	#1,(Dataselect_entry).w
		beq.s	loc_C106

loc_C0EA:
		tst.b	(Dataselect_entry).w
		beq.s	loc_C106
		subq.b	#1,(Dataselect_entry).w
		moveq	#signextendB(sfx_SlotMachine),d0
		tst.w	(Events_bg+$12).w
		beq.s	loc_C0FE
		moveq	#signextendB(sfx_SmallBumpers),d0

loc_C0FE:
		jsr	(Play_Sound_2).l
		moveq	#-8,d0

loc_C106:
		btst	#3,(Ctrl_1_pressed).w
		beq.s	loc_C12C
		cmpi.b	#7,(Dataselect_entry).w
		beq.s	loc_C12C
		addq.b	#1,(Dataselect_entry).w
		moveq	#signextendB(sfx_SlotMachine),d0
		tst.w	(Events_bg+$12).w
		beq.s	loc_C124
		moveq	#signextendB(sfx_SmallBumpers),d0

loc_C124:
		jsr	(Play_Sound_2).l
		moveq	#8,d0

loc_C12C:
		move.w	d0,$2E(a0)
		beq.s	loc_C13A
		move.w	#$D,$30(a0)
		bra.s	loc_C13C
; ---------------------------------------------------------------------------

loc_C13A:
		bra.s	loc_C180
; ---------------------------------------------------------------------------

loc_C13C:
		move.w	$12(a0),d0
		move.w	(Camera_X_pos_copy).w,d1
		move.w	$2E(a0),d2
		bmi.s	loc_C162
		add.w	d2,d0
		cmpi.w	#$120,d0
		bls.s	loc_C174
		sub.w	d2,d0
		add.w	d2,d1
		cmpi.w	#$1F0,d1
		bls.s	loc_C174
		sub.w	d2,d1
		add.w	d2,d0
		bra.s	loc_C174
; ---------------------------------------------------------------------------

loc_C162:
		add.w	d2,d0
		cmpi.w	#$120,d0
		bcc.s	loc_C174
		sub.w	d2,d0
		add.w	d2,d1
		bpl.s	loc_C174
		sub.w	d2,d1
		add.w	d2,d0

loc_C174:
		move.w	d0,$12(a0)
		move.w	d1,(Camera_X_pos_copy).w
		subq.w	#1,$30(a0)

loc_C180:
		moveq	#8,d2
		move.b	(Dataselect_entry).w,d1
		beq.s	loc_C192
		neg.w	d2
		cmpi.b	#7,d1
		beq.s	loc_C192
		moveq	#0,d2

loc_C192:
		add.w	$12(a0),d2
		move.w	d2,$10(a0)
		moveq	#2,d0
		cmpi.w	#$F0,d2
		bcs.s	loc_C1AA
		cmpi.w	#$148,d2
		bhi.s	loc_C1AA
		moveq	#1,d0

loc_C1AA:
		move.b	d0,$22(a0)
		btst	#2,(Level_frame_counter+1).w
		beq.s	locret_C1BC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_C1BC:
		rts
; ---------------------------------------------------------------------------

Obj_SaveScreen_NoSave_Slot:
		move.b	#$F,$1D(a0)
		move.w	(Dataselect_nosave_player).w,d0
		addq.w	#4,d0
		move.b	d0,$22(a0)
		tst.b	(Dataselect_entry).w
		bne.s	loc_C244
		move.w	(Player_2+object_control).w,d0
		or.w	(Events_bg+$12).w,d0
		bne.s	loc_C244
		move.b	(Ctrl_1_pressed).w,d0
		andi.w	#$E0,d0
		beq.s	loc_C224
		move.b	#$C,(Game_mode).w
		move.w	(Dataselect_nosave_player).w,(Player_option).w
		clr.w	(Current_zone_and_act).w
		clr.w	(Apparent_zone_and_act).w
		clr.w	(Current_special_stage).w
		clr.w	(Emerald_count).w
		clr.l	(Collected_emeralds_array).w
		clr.w	(Collected_emeralds_array+4).w
		clr.b	(Collected_emeralds_array+6).w
		clr.l	(Collected_special_ring_array).w
		clr.l	(Save_pointer).w
		jsr	(Set_Lives_and_Continues).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_C224:
		move.w	(Dataselect_nosave_player).w,d0
		jsr	sub_C4CC(pc)
		move.w	d0,(Dataselect_nosave_player).w
		addq.w	#4,d0
		move.b	d0,$22(a0)
		move.w	#1,$16(a0)
		btst	#4,(Level_frame_counter+1).w
		bne.s	loc_C248

loc_C244:
		clr.w	$16(a0)

loc_C248:
		bra.w	Set_ChildSprites
; ---------------------------------------------------------------------------

Obj_SaveScreen_Save_Slot:
		jsr	(Create_New_Sprite3).l
		bne.s	loc_C25E
		move.l	#Obj_SaveScreen_Emeralds,(a1)
		move.w	a0,$48(a1)

loc_C25E:
		moveq	#0,d0
		move.b	$2E(a0),d0
		lsl.w	#3,d0
		addi.l	#-$1934,d0
		move.l	d0,$30(a0)
		movea.l	d0,a1
		move.b	2(a1),$35(a0)
		move.b	3(a1),$37(a0)
		move.l	#loc_C284,(a0)

loc_C284:
		clr.w	$16(a0)
		movea.l	$30(a0),a1
		move.b	(Dataselect_entry).w,d0
		subq.b	#1,d0
		cmp.b	$2E(a0),d0
		beq.s	loc_C2B0
		move.b	3(a1),$37(a0)
		clr.w	$38(a0)

loc_C2A2:
		move.w	$34(a0),d0
		addq.w	#4,d0
		move.b	d0,$22(a0)
		bra.w	Set_ChildSprites
; ---------------------------------------------------------------------------

loc_C2B0:
		tst.b	(a1)
		bmi.w	loc_C40A
		move.w	$36(a0),d1
		jsr	Load_Icon_Art(pc)
		move.b	#$17,$23(a0)
		cmpi.w	#6,$36(a0)
		bls.s	loc_C2DC
		addq.b	#1,$23(a0)
		cmpi.b	#7,5(a1)
		bcs.s	loc_C2DC
		addq.b	#1,$23(a0)

loc_C2DC:
		tst.w	$38(a0)
		bne.s	loc_C2EE
		cmpi.w	#6,$36(a0)
		bls.s	loc_C360
		st	$38(a0)

loc_C2EE:
		tst.w	(Player_2+object_control).w
		bne.s	loc_C2A2
		tst.w	(Events_bg+$12).w
		beq.s	loc_C306
		clr.b	$1D(a0)
		move.w	#2,$16(a0)
		bra.s	loc_C2A2
; ---------------------------------------------------------------------------

loc_C306:
		moveq	#0,d2
		move.w	$36(a0),d1
		move.b	(Ctrl_1_pressed).w,d0
		btst	#1,d0
		beq.s	loc_C32A
		moveq	#signextendB(sfx_Switch),d2
		subq.w	#1,d1
		bpl.s	loc_C320
		moveq	#6,d1
		bra.s	loc_C344
; ---------------------------------------------------------------------------

loc_C320:
		cmpi.w	#4,d1
		bne.s	loc_C344
		subq.w	#1,d1
		bra.s	loc_C344
; ---------------------------------------------------------------------------

loc_C32A:
		btst	#0,d0
		beq.s	loc_C344
		moveq	#signextendB(sfx_Switch),d2
		addq.w	#1,d1
		cmpi.w	#4,d1
		bne.s	loc_C33C
		addq.w	#1,d1

loc_C33C:
		cmpi.w	#6,d1
		bls.s	loc_C344
		moveq	#0,d1

loc_C344:
		move.w	d1,$36(a0)
		move.l	d2,d0
		jsr	(Play_Sound_2).l
		move.b	#$1A,$1D(a0)
		btst	#4,(Level_frame_counter+1).w
		beq.s	loc_C368
		bra.s	loc_C36C
; ---------------------------------------------------------------------------

loc_C360:
		tst.w	(Player_2+object_control).w
		bne.w	loc_C2A2

loc_C368:
		clr.b	$1D(a0)

loc_C36C:
		move.w	#2,$16(a0)
		tst.w	(Events_bg+$12).w
		bne.w	loc_C2A2
		move.b	(Ctrl_1_pressed).w,d0
		andi.w	#$E0,d0
		beq.w	loc_C2A2
		move.b	#$C,(Game_mode).w
		clr.l	(Collected_special_ring_array).w
		cmpi.b	#6,3(a1)
		bls.s	loc_C3AE
		move.w	$36(a0),d0
		cmpi.b	#6,d0
		bls.s	loc_C3BE
		move.w	#$601,d0
		move.b	#$20,(Game_mode).w
		bra.s	loc_C3C0
; ---------------------------------------------------------------------------

loc_C3AE:
		move.b	1(a1),(Collected_special_ring_array+2).w
		move.b	7(a1),(Collected_special_ring_array+3).w
		move.b	3(a1),d0

loc_C3BE:
		lsl.w	#8,d0

loc_C3C0:
		move.w	d0,(Current_zone_and_act).w
		move.w	d0,(Apparent_zone_and_act).w
		moveq	#0,d0
		move.b	2(a1),d0
		move.w	d0,(Player_option).w
		move.b	4(a1),(Current_special_stage).w
		moveq	#0,d0
		move.b	5(a1),d0
		move.w	d0,(Emerald_count).w
		move.b	6(a1),d0
		lea	(Collected_emeralds_array).w,a3
		moveq	#6,d1

loc_C3EC:
		moveq	#0,d2
		lsl.b	#1,d0
		bcc.s	loc_C3F4
		moveq	#1,d2

loc_C3F4:
		move.b	d2,(a3)+
		dbf	d1,loc_C3EC
		move.l	a1,(Save_pointer).w
		jsr	(Set_Lives_and_Continues).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_C40A:
		move.b	#$F,$1D(a0)
		clr.b	$23(a0)
		move.w	(Player_2+object_control).w,d0
		or.w	(Events_bg+$12).w,d0
		bne.w	loc_C2A2
		move.b	(Ctrl_1_pressed).w,d0
		andi.w	#$E0,d0
		beq.s	loc_C476
		move.b	#$C,(Game_mode).w
		clr.l	(a1)
		clr.l	4(a1)
		move.w	$34(a0),d0
		move.b	d0,2(a1)
		move.w	d0,(Player_option).w
		clr.w	(Current_zone_and_act).w
		clr.w	(Apparent_zone_and_act).w
		clr.w	(Current_special_stage).w
		clr.w	(Emerald_count).w
		clr.l	(Collected_emeralds_array).w
		clr.w	(Collected_emeralds_array+4).w
		clr.b	(Collected_emeralds_array+6).w
		clr.l	(Collected_special_ring_array).w
		move.l	a1,(Save_pointer).w
		jsr	(Set_Lives_and_Continues).l
		jsr	Write_SaveGame(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_C476:
		move.w	$34(a0),d0
		jsr	sub_C4CC(pc)
		move.w	d0,$34(a0)
		addq.w	#4,d0
		move.b	d0,$22(a0)
		move.w	#1,$16(a0)
		btst	#4,(Level_frame_counter+1).w
		bne.s	Set_ChildSprites
		clr.w	$16(a0)

Set_ChildSprites:
		move.w	$12(a0),d0
		sub.w	(Camera_X_pos_copy).w,d0
		move.w	d0,$10(a0)
		move.w	$14(a0),d1
		move.w	d0,$18(a0)
		move.w	d1,$1A(a0)
		move.w	d0,$1E(a0)
		move.w	d1,$20(a0)
		cmpi.b	#$1A,$1D(a0)
		bne.s	loc_C4C6
		subq.w	#8,$1A(a0)

loc_C4C6:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_C4CC:
		moveq	#0,d2
		tst.w	(Player_2+objoff_30).w
		bne.s	loc_C4F6
		move.b	(Ctrl_1_pressed).w,d1
		lsr.w	#1,d1
		bcc.s	loc_C4EA
		moveq	#signextendB(sfx_Switch),d2
		addq.w	#1,d0
		cmpi.w	#2,d0
		bls.s	loc_C4F6
		moveq	#0,d0
		bra.s	loc_C4F6
; ---------------------------------------------------------------------------

loc_C4EA:
		lsr.w	#1,d1
		bcc.s	loc_C4F6
		moveq	#signextendB(sfx_Switch),d2
		subq.w	#1,d0
		bpl.s	loc_C4F6
		moveq	#2,d0

loc_C4F6:
		tst.w	d2
		beq.s	locret_C506
		move.l	d0,-(sp)
		move.l	d2,d0
		jsr	(Play_Sound_2).l
		move.l	(sp)+,d0

locret_C506:
		rts
; End of function sub_C4CC

; ---------------------------------------------------------------------------

Obj_SaveScreen_Emeralds:
		move.b	#$40,4(a0)
		move.w	#$829F,$A(a0)
		move.l	#Map_SaveScreen,$C(a0)
		move.b	#$40,7(a0)
		move.w	#7,$16(a0)
		movea.w	$48(a0),a1
		movea.l	$30(a1),a2
		move.b	6(a2),d4
		move.w	$10(a1),d0
		move.w	$14(a1),d1
		move.w	d0,$10(a0)
		move.w	d1,$14(a0)
		lea	$18(a0),a1
		moveq	#$10,d2
		moveq	#6,d3

loc_C54C:
		clr.b	5(a1)
		lsl.b	#1,d4
		bcc.s	loc_C55E
		move.w	d0,(a1)
		move.w	d1,2(a1)
		move.b	d2,5(a1)

loc_C55E:
		addq.w	#1,d2
		addq.w	#6,a1
		dbf	d3,loc_C54C
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_SaveScreen_Delete_Save:
		moveq	#0,d0
		move.b	5(a0),d0
		jmp	loc_C576(pc,d0.w)
; ---------------------------------------------------------------------------

loc_C576:
		bra.w	loc_C58E
; ---------------------------------------------------------------------------
		bra.w	loc_C5AA
; ---------------------------------------------------------------------------
		bra.w	loc_C5D4
; ---------------------------------------------------------------------------
		bra.w	loc_C66C
; ---------------------------------------------------------------------------
		bra.w	loc_C68C
; ---------------------------------------------------------------------------
		bra.w	loc_C6AC
; ---------------------------------------------------------------------------

loc_C58E:
		move.b	#$40,4(a0)
		move.b	#$30,7(a0)
		move.w	#1,$16(a0)
		move.b	#8,$1D(a0)
		addq.b	#4,5(a0)

loc_C5AA:
		cmpi.b	#7,(Dataselect_entry).w
		bne.w	loc_C688
		move.b	(Ctrl_1_pressed).w,d0
		andi.w	#$E0,d0
		beq.w	loc_C688
		moveq	#signextendB(sfx_Starpost),d0
		jsr	(Play_Sound_2).l
		st	(Events_bg+$12).w
		addq.b	#4,5(a0)
		bra.w	loc_C688
; ---------------------------------------------------------------------------

loc_C5D4:
		jsr	sub_C6EE(pc)
		jsr	sub_C726(pc)
		tst.w	(Player_2+object_control).w
		bne.s	loc_C624
		move.b	(Ctrl_1_pressed).w,d0
		btst	#4,d0
		bne.s	loc_C63C
		andi.w	#$E0,d0
		beq.s	loc_C624
		cmpi.b	#7,(Dataselect_entry).w
		beq.s	loc_C63C
		moveq	#0,d0
		move.b	(Dataselect_entry).w,d0
		subq.w	#1,d0
		lsl.w	#3,d0
		addi.l	#-$1934,d0
		move.l	d0,$2E(a0)
		movea.l	d0,a1
		tst.b	(a1)
		bmi.s	loc_C63C
		moveq	#signextendB(sfx_Starpost),d0
		jsr	(Play_Sound_2).l
		st	(Events_bg+$10).w
		addq.b	#8,5(a0)

loc_C624:
		move.w	(Player_2+x_pos).w,d0
		move.w	d0,$10(a0)
		move.w	d0,$18(a0)
		move.w	$14(a0),$1A(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_C63C:
		clr.b	$24(a0)
		clr.b	$23(a0)
		clr.b	$25(a0)
		clr.b	$28(a0)
		move.b	#$D,$22(a0)
		move.b	#8,$1D(a0)
		move.w	(Player_2+x_pos).w,d0
		add.w	(Camera_X_pos_copy).w,d0
		move.w	d0,$12(a0)
		addq.b	#4,5(a0)
		bra.w	Set_ChildSprites
; ---------------------------------------------------------------------------

loc_C66C:
		clr.w	(Events_bg+$12).w
		move.w	$12(a0),d0
		cmpi.w	#$378,d0
		bcs.s	loc_C682
		move.b	#4,5(a0)
		bra.s	loc_C688
; ---------------------------------------------------------------------------

loc_C682:
		addq.w	#8,d0
		move.w	d0,$12(a0)

loc_C688:
		bra.w	Set_ChildSprites
; ---------------------------------------------------------------------------

loc_C68C:
		jsr	sub_C6EE(pc)
		jsr	sub_C726(pc)
		cmpi.b	#$B,$1D(a0)
		bne.s	loc_C6A6
		move.b	#$C,$1D(a0)
		addq.b	#4,5(a0)

loc_C6A6:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_C6AC:
		jsr	sub_C6EE(pc)
		btst	#3,(Ctrl_1_pressed).w
		bne.s	loc_C6DA
		btst	#2,(Ctrl_1_pressed).w
		beq.s	loc_C6E8
		moveq	#signextendB(sfx_Perfect),d0
		jsr	(Play_Sound_2).l
		movea.l	$2E(a0),a1
		clr.l	(a1)
		clr.l	4(a1)
		bset	#7,(a1)
		jsr	Write_SaveGame(pc)

loc_C6DA:
		move.b	#8,5(a0)
		clr.w	(Events_bg+$10).w
		bra.w	loc_C63C
; ---------------------------------------------------------------------------

loc_C6E8:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_C6EE:
		subq.b	#1,$24(a0)
		bpl.s	locret_C714
		move.b	#5,$24(a0)

loc_C6FA:
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.b	#1,$23(a0)
		move.b	byte_C716(pc,d0.w),d0
		bpl.s	loc_C710
		clr.b	$23(a0)
		bra.s	loc_C6FA
; ---------------------------------------------------------------------------

loc_C710:
		move.b	d0,$22(a0)

locret_C714:
		rts
; End of function sub_C6EE

; ---------------------------------------------------------------------------
byte_C716:	dc.b   $D,  $E,  $D,  $E,  $D,  $E,  $D,  $E,  $D,  $E,  $D,  $D,  $D,  $D, $FF,   0

; =============== S U B R O U T I N E =======================================


sub_C726:
		subq.b	#1,$25(a0)
		bpl.s	locret_C744
		move.b	#3,$25(a0)
		addq.b	#1,$28(a0)
		move.b	$28(a0),d0
		andi.b	#3,d0
		addq.b	#8,d0
		move.b	d0,$1D(a0)

locret_C744:
		rts
; End of function sub_C726


; =============== S U B R O U T I N E =======================================


Load_Icon_Art:
		cmpi.b	#6,d1
		bhi.s	loc_C772
		move.l	a1,-(sp)
		move.w	d1,-(sp)
		mulu.w	#$8C0,d1
		addi.l	#-$10000,d1
		move.w	#-$48C0,d2
		move.w	#$460,d3
		jsr	(Add_To_DMA_Queue).l
		move.w	(sp)+,d0
		movea.l	(sp)+,a1
		lea	Pal_Save_ZoneCard1(pc),a2
		bra.s	loc_C782
; ---------------------------------------------------------------------------

loc_C772:
		lea	Pal_Save_FinishCard1(pc),a2
		moveq	#0,d0
		cmpi.b	#7,5(a1)
		bcs.s	loc_C782
		moveq	#1,d0

loc_C782:
		lsl.w	#5,d0
		adda.w	d0,a2
		lea	(Normal_palette_line_4).w,a3
		moveq	#7,d0

loc_C78C:
		move.l	(a2)+,(a3)+
		dbf	d0,loc_C78C
		rts
; End of function Load_Icon_Art


; =============== S U B R O U T I N E =======================================


sub_C794:
		lea	(VDP_data_port).l,a6
		jsr	sub_BAF8(pc)
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		move.w	#$A552,d5
		moveq	#0,d6

loc_C7A8:
		move.b	(a1)+,d6
		bne.s	loc_C7B2
		move.w	#$8000,(a6)
		bra.s	loc_C7A8
; ---------------------------------------------------------------------------

loc_C7B2:
		bmi.s	locret_C7BC
		move.w	d5,d4
		add.w	d6,d4
		move.w	d4,(a6)
		bra.s	loc_C7A8
; ---------------------------------------------------------------------------

locret_C7BC:
		rts
; End of function sub_C794

; ---------------------------------------------------------------------------
byte_C7BE:	dc.b  $2B, $2C,   0, $30, $1E, $33, $22, $FF, $21, $22, $29, $22, $31, $22, $FF
byte_C7CD:	dc.b    0,   0,   0,   0,   0, $FF
byte_C7D3:	dc.b  $37, $2C, $2B, $22,   0, $FF
byte_C7D9:	dc.b  $20, $29, $22, $1E, $2F, $FF,   0
ArtKos_SaveScreenS3Zone:
		binclude "General/Save Menu/Kosinski Art/Zone Art.bin"
		even

; =============== S U B R O U T I N E =======================================


sub_E8C0:
		tst.w	(Debug_mode_flag).w
		bne.s	sub_E8C8
		rts
; End of function sub_E8C0


; =============== S U B R O U T I N E =======================================


sub_E8C8:
		cmpi.b	#$13,(Current_zone).w
		bcs.s	loc_E8E4
		moveq	#8,d4
		btst	#3,(Level_frame_counter+1).w
		bne.s	loc_E900
		tst.w	(Ring_count).w
		bne.s	loc_E900
		addq.w	#2,d4
		bra.s	loc_E900
; ---------------------------------------------------------------------------

loc_E8E4:
		moveq	#0,d4
		btst	#3,(Level_frame_counter+1).w
		bne.s	loc_E900
		tst.w	(Ring_count).w
		bne.s	loc_E8F6
		addq.w	#2,d4

loc_E8F6:
		cmpi.b	#9,(Timer_minute).w
		bne.s	loc_E900
		addq.w	#4,d4

loc_E900:
		move.b	(Level_started_flag).w,d0
		ext.w	d0
		bpl.s	loc_E90E
		addq.w	#8,d0
		move.b	d0,(Level_started_flag).w

loc_E90E:
		addi.w	#$8F,d0
		move.w	#$108,d1
		move.w	#make_art_tile(ArtTile_Ring+$E,0,1),d5
		lea	Map_HUD(pc),a1
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	locret_E92E
		jmp	(sub_195CE).l
; ---------------------------------------------------------------------------

locret_E92E:
		rts
; End of function sub_E8C8


; =============== S U B R O U T I N E =======================================


nullsub_2:
		rts
; End of function nullsub_2

; ---------------------------------------------------------------------------
Map_HUD:	include "General/Sprites/HUD Icon/Map - HUD.asm"

; =============== S U B R O U T I N E =======================================


HUD_AddToScore:
		move.b	#1,(Update_HUD_score).w
		lea	(Score).w,a3
		add.l	d0,(a3)
		move.l	#$F423F,d1
		cmp.l	(a3),d1
		bhi.s	loc_EA5E
		move.l	d1,(a3)

loc_EA5E:
		move.l	(a3),d0
		cmp.l	(Next_extra_life_score).w,d0
		bcs.s	locret_EA80
		addi.l	#5000,(Next_extra_life_score).w
		addq.b	#1,(Life_count).w
		addq.b	#1,(Update_HUD_life_count).w
		move.w	#mus_ExtraLife,d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

locret_EA80:
		rts
; End of function HUD_AddToScore


; =============== S U B R O U T I N E =======================================


UpdateHUD:
		nop
		lea	(VDP_data_port).l,a6
		tst.w	(Competition_mode).w
		bne.w	loc_EBF2
		tst.w	(Debug_mode_flag).w
		bne.w	loc_EB68
		tst.b	(Update_HUD_score).w
		beq.s	loc_EAB2
		clr.b	(Update_HUD_score).w
		move.l	#$5C800003,d0
		move.l	(Score).w,d1
		bsr.w	DrawSixDigitNumber

loc_EAB2:
		tst.b	(Update_HUD_ring_count).w
		beq.s	loc_EAD2
		bpl.s	loc_EABE
		bsr.w	HUD_DrawZeroRings

loc_EABE:
		clr.b	(Update_HUD_ring_count).w
		move.l	#$5F400003,d0
		moveq	#0,d1
		move.w	(Ring_count).w,d1
		bsr.w	DrawThreeDigitNumber

loc_EAD2:
		tst.b	(Update_HUD_timer).w
		bpl.s	loc_EAE0
		move.b	#1,(Update_HUD_timer).w
		bra.s	loc_EB1A
; ---------------------------------------------------------------------------

loc_EAE0:
		beq.s	loc_EB3A
		tst.w	(Game_paused).w
		bne.s	loc_EB3A
		lea	(Timer).w,a1
		cmpi.l	#$93B3B,(a1)+
		beq.w	UpdateHUD_TimeOver
		addq.b	#1,-(a1)
		cmpi.b	#$3C,(a1)
		bcs.s	loc_EB3A
		move.b	#0,(a1)
		addq.b	#1,-(a1)
		cmpi.b	#$3C,(a1)
		bcs.s	loc_EB1A
		move.b	#0,(a1)
		addq.b	#1,-(a1)
		cmpi.b	#9,(a1)
		bcs.s	loc_EB1A
		move.b	#9,(a1)

loc_EB1A:
		move.l	#$5E400003,d0
		moveq	#0,d1
		move.b	(Timer_minute).w,d1
		bsr.w	DrawSingleDigitNumber
		move.l	#$5EC00003,d0
		moveq	#0,d1
		move.b	(Timer_second).w,d1
		bsr.w	DrawTwoDigitNumber

loc_EB3A:
		tst.b	(Update_HUD_life_count).w
		beq.s	locret_EB48
		clr.b	(Update_HUD_life_count).w
		bsr.w	HUD_Lives

locret_EB48:
		rts
; ---------------------------------------------------------------------------

UpdateHUD_TimeOver:
		clr.b	(Update_HUD_timer).w
		lea	(Player_1).w,a0
		cmpi.b	#6,5(a0)
		bcc.s	loc_EB60
		movea.l	a0,a2
		bsr.w	Kill_Character

loc_EB60:
		move.b	#1,(Time_over_flag).w
		rts
; ---------------------------------------------------------------------------

loc_EB68:
		bsr.w	HUD_Debug
		tst.b	(Update_HUD_ring_count).w
		beq.s	loc_EB8C
		bpl.s	loc_EB78
		bsr.w	HUD_DrawZeroRings

loc_EB78:
		clr.b	(Update_HUD_ring_count).w
		move.l	#$5F400003,d0
		moveq	#0,d1
		move.w	(Ring_count).w,d1
		bsr.w	DrawThreeDigitNumber

loc_EB8C:
		move.l	#$5E400003,d0
		moveq	#0,d1
		move.w	(Lag_frame_count).w,d1
		bsr.w	DrawSingleDigitNumber
		move.l	#$5EC00003,d0
		moveq	#0,d1
		move.b	(Sprites_drawn).w,d1
		bsr.w	DrawTwoDigitNumber
		tst.b	(Update_HUD_life_count).w
		beq.s	loc_EBBA
		clr.b	(Update_HUD_life_count).w
		bsr.w	HUD_Lives

loc_EBBA:
		tst.w	(Game_paused).w
		bne.s	locret_EBF0
		lea	(Timer).w,a1
		cmpi.l	#$93B3B,(a1)+
		nop
		addq.b	#1,-(a1)
		cmpi.b	#$3C,(a1)
		bcs.s	locret_EBF0
		move.b	#0,(a1)
		addq.b	#1,-(a1)
		cmpi.b	#$3C,(a1)
		bcs.s	locret_EBF0
		move.b	#0,(a1)
		addq.b	#1,-(a1)
		cmpi.b	#9,(a1)
		bcs.s	locret_EBF0
		move.b	#9,(a1)

locret_EBF0:
		rts
; ---------------------------------------------------------------------------

loc_EBF2:
		tst.w	(Debug_mode_flag).w
		bne.w	HUD_Debug
		rts
; End of function UpdateHUD


; =============== S U B R O U T I N E =======================================


HUD_DrawZeroRings:
		move.l	#$5F400003,(VDP_control_port).l
		lea	HUD_Zero_Rings(pc),a2
		move.w	#2,d2
		bra.s	loc_EC32
; End of function HUD_DrawZeroRings


; =============== S U B R O U T I N E =======================================


HUD_DrawInitial:
		lea	(VDP_data_port).l,a6
		bsr.w	HUD_Lives
		tst.w	(Competition_mode).w
		bne.s	locret_EC5E
		move.l	#$5C400003,(VDP_control_port).l
		lea	HUD_Initial_Parts(pc),a2
		move.w	#$E,d2

loc_EC32:
		lea	ArtUnc_HUDDigits(pc),a1

loc_EC36:
		move.w	#$F,d1
		move.b	(a2)+,d0
		bmi.s	loc_EC52
		ext.w	d0
		lsl.w	#5,d0
		lea	(a1,d0.w),a3

loc_EC46:
		move.l	(a3)+,(a6)
		dbf	d1,loc_EC46

loc_EC4C:
		dbf	d2,loc_EC36
		rts
; ---------------------------------------------------------------------------

loc_EC52:
		move.l	#0,(a6)
		dbf	d1,loc_EC52
		bra.s	loc_EC4C
; ---------------------------------------------------------------------------

locret_EC5E:
		rts
; End of function HUD_DrawInitial

; ---------------------------------------------------------------------------
HUD_Initial_Parts:
		dc.b  $16, $FF, $FF, $FF, $FF, $FF, $FF,   0
		dc.b    0, $14,   0,   0
HUD_Zero_Rings:	dc.b  $FF, $FF,   0,   0

; =============== S U B R O U T I N E =======================================


HUD_Debug:
		move.l	#$5C400003,(VDP_control_port).l
		move.w	(Camera_X_pos).w,d1
		swap	d1
		move.w	(Player_1+x_pos).w,d1
		bsr.s	sub_EC90
		move.w	(Camera_Y_pos).w,d1
		swap	d1
		move.w	(Player_1+y_pos).w,d1
; End of function HUD_Debug


; =============== S U B R O U T I N E =======================================


sub_EC90:
		moveq	#7,d6
		lea	(ArtUnc_DebugDigits).l,a1

loc_EC98:
		rol.w	#4,d1
		move.w	d1,d2
		andi.w	#$F,d2
		cmpi.w	#$A,d2
		bcs.s	loc_ECAA
		addi.w	#7,d2

loc_ECAA:
		lsl.w	#5,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		swap	d1
		dbf	d6,loc_EC98
		rts
; End of function sub_EC90


; =============== S U B R O U T I N E =======================================


DrawThreeDigitNumber:
		lea	(dword_ED94).l,a2
		moveq	#2,d6
		bra.s	loc_ECDA
; End of function DrawThreeDigitNumber


; =============== S U B R O U T I N E =======================================


DrawSixDigitNumber:
		lea	(dword_ED88).l,a2
		moveq	#5,d6

loc_ECDA:
		moveq	#0,d4
		lea	ArtUnc_HUDDigits(pc),a1

loc_ECE0:
		moveq	#0,d2
		move.l	(a2)+,d3

loc_ECE4:
		sub.l	d3,d1
		bcs.s	loc_ECEC
		addq.w	#1,d2
		bra.s	loc_ECE4
; ---------------------------------------------------------------------------

loc_ECEC:
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_ECF6
		move.w	#1,d4

loc_ECF6:
		tst.w	d4
		beq.s	loc_ED24
		lsl.w	#6,d2
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)

loc_ED24:
		addi.l	#$400000,d0
		dbf	d6,loc_ECE0
		rts
; End of function DrawSixDigitNumber

; ---------------------------------------------------------------------------
		move.l	#$5F800003,(VDP_control_port).l
		lea	(VDP_data_port).l,a6
		lea	(dword_ED98).l,a2
		moveq	#1,d6
		moveq	#0,d4
		lea	ArtUnc_HUDDigits(pc),a1

loc_ED4E:
		moveq	#0,d2
		move.l	(a2)+,d3

loc_ED52:
		sub.l	d3,d1
		bcs.s	loc_ED5A
		addq.w	#1,d2
		bra.s	loc_ED52
; ---------------------------------------------------------------------------

loc_ED5A:
		add.l	d3,d1
		lsl.w	#6,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		dbf	d6,loc_ED4E
		rts
; ---------------------------------------------------------------------------
dword_ED88:	dc.l 100000
		dc.l 10000
dword_ED90:	dc.l 1000
dword_ED94:	dc.l 100
dword_ED98:	dc.l 10
dword_ED9C:	dc.l 1

; =============== S U B R O U T I N E =======================================


DrawSingleDigitNumber:
		lea	(dword_ED9C).l,a2
		moveq	#0,d6
		bra.s	loc_EDB2
; End of function DrawSingleDigitNumber


; =============== S U B R O U T I N E =======================================


DrawTwoDigitNumber:
		lea	(dword_ED98).l,a2
		moveq	#1,d6

loc_EDB2:
		moveq	#0,d4
		lea	ArtUnc_HUDDigits(pc),a1

loc_EDB8:
		moveq	#0,d2
		move.l	(a2)+,d3

loc_EDBC:
		sub.l	d3,d1
		bcs.s	loc_EDC4
		addq.w	#1,d2
		bra.s	loc_EDBC
; ---------------------------------------------------------------------------

loc_EDC4:
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_EDCE
		move.w	#1,d4

loc_EDCE:
		lsl.w	#6,d2
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		addi.l	#$400000,d0
		dbf	d6,loc_EDB8
		rts
; End of function DrawTwoDigitNumber

; ---------------------------------------------------------------------------
		lea	(dword_ED90).l,a2
		moveq	#3,d6
		moveq	#0,d4
		lea	ArtUnc_HUDDigits(pc),a1

loc_EE12:
		moveq	#0,d2
		move.l	(a2)+,d3

loc_EE16:
		sub.l	d3,d1
		bcs.s	loc_EE1E
		addq.w	#1,d2
		bra.s	loc_EE16
; ---------------------------------------------------------------------------

loc_EE1E:
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_EE28
		move.w	#1,d4

loc_EE28:
		tst.w	d4
		beq.s	loc_EE58
		lsl.w	#6,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)

loc_EE52:
		dbf	d6,loc_EE12
		rts
; ---------------------------------------------------------------------------

loc_EE58:
		moveq	#$F,d5

loc_EE5A:
		move.l	#0,(a6)
		dbf	d5,loc_EE5A
		bra.s	loc_EE52

; =============== S U B R O U T I N E =======================================


HUD_Lives:
		move.l	#$7BA00003,d0
		moveq	#0,d1
		move.b	(Life_count).w,d1
		lea	(dword_ED98).l,a2
		moveq	#1,d6
		moveq	#0,d4
		lea	ArtUnc_LivesDigits(pc),a1

loc_EE80:
		move.l	d0,VDP_control_port-VDP_data_port(a6)
		moveq	#0,d2
		move.l	(a2)+,d3

loc_EE88:
		sub.l	d3,d1
		bcs.s	loc_EE90
		addq.w	#1,d2
		bra.s	loc_EE88
; ---------------------------------------------------------------------------

loc_EE90:
		add.l	d3,d1
		tst.w	d2
		beq.s	loc_EE9A
		move.w	#1,d4

loc_EE9A:
		tst.w	d4
		beq.s	loc_EEC0

loc_EE9E:
		lsl.w	#5,d2
		lea	(a1,d2.w),a3
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)
		move.l	(a3)+,(a6)

loc_EEB4:
		addi.l	#$400000,d0
		dbf	d6,loc_EE80
		rts
; ---------------------------------------------------------------------------

loc_EEC0:
		tst.w	d6
		beq.s	loc_EE9E
		moveq	#7,d5

loc_EEC6:
		move.l	#0,(a6)
		dbf	d5,loc_EEC6
		bra.s	loc_EEB4
; End of function HUD_Lives

; ---------------------------------------------------------------------------
ArtUnc_HUDDigits:
		binclude "General/Sprites/HUD Icon/HUD Digits.bin"
		even
ArtUnc_LivesDigits:
		binclude "General/Sprites/HUD Icon/Lives Digits.bin"
		even
ArtUnc_DebugDigits:
		binclude "General/Sprites/HUD Icon/Debug Digits.bin"
		even

; =============== S U B R O U T I N E =======================================


Load_Rings:
		moveq	#0,d0
		move.b	(Rings_manager_routine).w,d0
		move.w	off_F600(pc,d0.w),d0
		jmp	off_F600(pc,d0.w)
; End of function Load_Rings

; ---------------------------------------------------------------------------
off_F600:	dc.w loc_F604-off_F600
		dc.w loc_F642-off_F600
; ---------------------------------------------------------------------------

loc_F604:
		addq.b	#2,(Rings_manager_routine).w
		bsr.w	sub_F7C0
		movea.l	(Ring_start_addr_ROM).w,a1
		lea	(Ring_status_table).w,a2
		move.w	(Camera_X_pos).w,d4
		subq.w	#8,d4
		bhi.s	loc_F624
		moveq	#1,d4
		bra.s	loc_F624
; ---------------------------------------------------------------------------

loc_F620:
		addq.w	#4,a1
		addq.w	#2,a2

loc_F624:
		cmp.w	(a1),d4
		bhi.s	loc_F620
		move.l	a1,(Ring_start_addr_ROM).w
		move.w	a2,(Ring_start_addr_RAM).w
		addi.w	#$150,d4
		bra.s	loc_F638
; ---------------------------------------------------------------------------

loc_F636:
		addq.w	#4,a1

loc_F638:
		cmp.w	(a1),d4
		bhi.s	loc_F636
		move.l	a1,(Ring_end_addr_ROM).w
		rts
; ---------------------------------------------------------------------------

loc_F642:
		lea	(Ring_consumption_table).w,a2
		move.w	(a2)+,d1
		subq.w	#1,d1
		bcs.s	loc_F676

loc_F64C:
		move.w	(a2)+,d0
		beq.s	loc_F64C
		movea.w	d0,a1
		subq.b	#1,(a1)
		bne.s	loc_F672
		move.b	#6,(a1)
		addq.b	#1,1(a1)
		cmpi.b	#8,1(a1)
		bne.s	loc_F672
		move.w	#-1,(a1)
		clr.w	-2(a2)
		subq.w	#1,(Ring_consumption_table).w

loc_F672:
		dbf	d1,loc_F64C

loc_F676:
		movea.l	(Ring_start_addr_ROM).w,a1
		movea.w	(Ring_start_addr_RAM).w,a2
		move.w	(Camera_X_pos).w,d4
		subq.w	#8,d4
		bhi.s	loc_F68E
		moveq	#1,d4
		bra.s	loc_F68E
; ---------------------------------------------------------------------------

loc_F68A:
		addq.w	#4,a1
		addq.w	#2,a2

loc_F68E:
		cmp.w	(a1),d4
		bhi.s	loc_F68A
		bra.s	loc_F698
; ---------------------------------------------------------------------------

loc_F694:
		subq.w	#4,a1
		subq.w	#2,a2

loc_F698:
		cmp.w	-4(a1),d4
		bls.s	loc_F694
		move.l	a1,(Ring_start_addr_ROM).w
		move.w	a2,(Ring_start_addr_RAM).w
		movea.l	(Ring_end_addr_ROM).w,a2
		addi.w	#$150,d4
		bra.s	loc_F6B2
; ---------------------------------------------------------------------------

loc_F6B0:
		addq.w	#4,a2

loc_F6B2:
		cmp.w	(a2),d4
		bhi.s	loc_F6B0
		bra.s	loc_F6BA
; ---------------------------------------------------------------------------

loc_F6B8:
		subq.w	#4,a2

loc_F6BA:
		cmp.w	-4(a2),d4
		bls.s	loc_F6B8
		move.l	a2,(Ring_end_addr_ROM).w
		rts

; =============== S U B R O U T I N E =======================================


Test_Ring_Collisions:
		cmpi.b	#$5A,$34(a0)
		bcc.w	locret_F78A
		movea.l	(Ring_start_addr_ROM).w,a1
		movea.l	(Ring_end_addr_ROM).w,a2
		cmpa.l	a1,a2
		beq.w	locret_F78A
		movea.w	(Ring_start_addr_RAM).w,a4
		btst	#5,$2B(a0)
		beq.s	Test_Ring_Collisions_NoAttraction
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#$40,d2
		subi.w	#$40,d3
		move.w	#6,d1
		move.w	#$C,d6
		move.w	#$80,d4
		move.w	#$80,d5
		bra.s	Test_Ring_Collisions_NextRing
; ---------------------------------------------------------------------------

Test_Ring_Collisions_NoAttraction:
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#8,d2
		moveq	#0,d5
		move.b	$1E(a0),d5
		subq.b	#3,d5
		sub.w	d5,d3
		move.w	#6,d1
		move.w	#$C,d6
		move.w	#$10,d4
		add.w	d5,d5

Test_Ring_Collisions_NextRing:
		tst.w	(a4)
		bne.w	loc_F780
		move.w	(a1),d0
		sub.w	d1,d0
		sub.w	d2,d0
		bcc.s	loc_F746
		add.w	d6,d0
		bcs.s	loc_F74C
		bra.w	loc_F780
; ---------------------------------------------------------------------------

loc_F746:
		cmp.w	d4,d0
		bhi.w	loc_F780

loc_F74C:
		move.w	2(a1),d0
		sub.w	d1,d0
		sub.w	d3,d0
		bcc.s	loc_F75E
		add.w	d6,d0
		bcs.s	loc_F764
		bra.w	loc_F780
; ---------------------------------------------------------------------------

loc_F75E:
		cmp.w	d5,d0
		bhi.w	loc_F780

loc_F764:
		btst	#5,$2B(a0)
		bne.s	Test_Ring_Collisions_AttractRing

loc_F76C:
		move.w	#$604,(a4)
		bsr.s	sub_F78C
		lea	(Ring_consumption_table+2).w,a3

loc_F776:
		tst.w	(a3)+
		bne.s	loc_F776
		move.w	a4,-(a3)
		addq.w	#1,(Ring_consumption_table).w

loc_F780:
		addq.w	#4,a1
		addq.w	#2,a4
		cmpa.l	a1,a2
		bne.w	Test_Ring_Collisions_NextRing

locret_F78A:
		rts
; End of function Test_Ring_Collisions


; =============== S U B R O U T I N E =======================================


sub_F78C:
		subq.w	#1,(Perfect_rings_left).w
		jmp	(GiveRing).l
; End of function sub_F78C

; ---------------------------------------------------------------------------

Test_Ring_Collisions_AttractRing:
		movea.l	a1,a3
		jsr	(Create_New_Sprite).l
		bne.w	loc_F7BC
		move.l	#Obj_Attracted_Ring,(a1)
		move.w	(a3),$10(a1)
		move.w	2(a3),$14(a1)
		move.w	a4,$30(a1)
		move.w	#-1,(a4)
		rts
; ---------------------------------------------------------------------------

loc_F7BC:
		movea.l	a3,a1
		bra.s	loc_F76C

; =============== S U B R O U T I N E =======================================


sub_F7C0:
		moveq	#0,d0
		tst.b	(Respawn_table_keep).w
		bne.s	loc_F7D6
		lea	(Ring_status_table).w,a1
		move.w	#$FF,d1

loc_F7D0:
		move.l	d0,(a1)+
		dbf	d1,loc_F7D0

loc_F7D6:
		lea	(Ring_consumption_table).w,a1
		moveq	#$1F,d1

loc_F7DC:
		move.l	d0,(a1)+
		dbf	d1,loc_F7DC
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#5,d0
		lea	(RingLocPtrs).l,a1
		movea.l	(a1,d0.w),a1
		move.l	a1,(Ring_start_addr_ROM).w
		addq.w	#4,a1
		moveq	#0,d5
		move.w	#$1FE,d0

loc_F800:
		tst.l	(a1)+
		bmi.s	loc_F80A
		addq.w	#1,d5
		dbf	d0,loc_F800

loc_F80A:
		move.w	d5,(Perfect_rings_left).w
		move.w	#0,(_unkFF06).w
		rts
; End of function sub_F7C0


; =============== S U B R O U T I N E =======================================


sub_F816:
		movea.l	(Ring_start_addr_ROM).w,a0
		move.l	(Ring_end_addr_ROM).w,d2
		sub.l	a0,d2
		beq.s	locret_F87C
		movea.w	(Ring_start_addr_RAM).w,a4
		lea	CMap_Ring(pc),a1
		move.w	4(a3),d4
		move.w	#$F0,d5
		move.w	(Screen_Y_wrap_value).w,d3

loc_F836:
		tst.w	(a4)+
		bmi.s	loc_F876
		move.w	2(a0),d1
		sub.w	d4,d1
		addq.w	#8,d1
		and.w	d3,d1
		cmp.w	d5,d1
		bcc.s	loc_F876
		addi.w	#$78,d1
		move.w	(a0),d0
		sub.w	(a3),d0
		addi.w	#$80,d0
		move.b	-1(a4),d6
		bne.s	loc_F85E
		move.b	(Rings_frame).w,d6

loc_F85E:
		lsl.w	#3,d6
		lea	(a1,d6.w),a2
		add.w	(a2)+,d1
		move.w	d1,(a6)+
		move.w	(a2)+,d6
		move.b	d6,(a6)
		addq.w	#2,a6
		move.w	(a2)+,(a6)+
		add.w	(a2)+,d0
		move.w	d0,(a6)+
		subq.w	#1,d7

loc_F876:
		addq.w	#4,a0
		subq.w	#4,d2
		bne.s	loc_F836

locret_F87C:
		rts
; End of function sub_F816

; ---------------------------------------------------------------------------
CMap_Ring:	dc.w $FFF8, $0005, $0000+make_art_tile(ArtTile_Ring,1,0), $FFF8
		dc.w $FFF8, $0005, $0004+make_art_tile(ArtTile_Ring,1,0), $FFF8
		dc.w $FFF8, $0001, $0008+make_art_tile(ArtTile_Ring,1,0), $FFFC
		dc.w $FFF8, $0005, $0804+make_art_tile(ArtTile_Ring,1,0), $FFF8
		dc.w $FFF8, $0005, $000A+make_art_tile(ArtTile_Ring,1,0), $FFF8
		dc.w $FFF8, $0005, $180A+make_art_tile(ArtTile_Ring,1,0), $FFF8
		dc.w $FFF8, $0005, $080A+make_art_tile(ArtTile_Ring,1,0), $FFF8
		dc.w $FFF8, $0005, $100A+make_art_tile(ArtTile_Ring,1,0), $FFF8

; =============== S U B R O U T I N E =======================================


S2_SpecialCNZBumpers:
		moveq	#0,d0
		move.b	(CNZ_bumper_routine).w,d0
		move.w	SpecialCNZBumpers_Index(pc,d0.w),d0
		jmp	SpecialCNZBumpers_Index(pc,d0.w)
; End of function S2_SpecialCNZBumpers

; ---------------------------------------------------------------------------
SpecialCNZBumpers_Index:dc.w SpecialCNZBumpers_Init-SpecialCNZBumpers_Index
		dc.w SpecialCNZBumpers_Main-SpecialCNZBumpers_Index
; ---------------------------------------------------------------------------

SpecialCNZBumpers_Init:
		addq.b	#2,(CNZ_bumper_routine).w
		lea	(SpecialCNZBumpers_Act1).l,a1
		tst.b	(Current_act).w
		beq.s	loc_F8E6
		lea	(SpecialCNZBumpers_Act2).l,a1

loc_F8E6:
		move.w	(Camera_X_pos).w,d4
		subq.w	#8,d4
		bhi.s	loc_F8F6
		moveq	#1,d4
		bra.s	loc_F8F6
; ---------------------------------------------------------------------------

loc_F8F2:
		lea	6(a1),a1

loc_F8F6:
		cmp.w	2(a1),d4
		bhi.s	loc_F8F2
		move.l	a1,(CNZ_visible_bumpers_start).w
		move.l	a1,(CNZ_Visible_bumpers_start_P2).w
		addi.w	#$150,d4
		bra.s	loc_F90E
; ---------------------------------------------------------------------------

loc_F90A:
		lea	6(a1),a1

loc_F90E:
		cmp.w	2(a1),d4
		bhi.s	loc_F90A
		move.l	a1,(CNZ_Visible_bumpers_end).w
		move.l	a1,(CNZ_Visible_bumpers_end_P2).w
		move.b	#1,(CNZ_bumper_unk).w
		rts
; ---------------------------------------------------------------------------

SpecialCNZBumpers_Main:
		movea.l	(CNZ_visible_bumpers_start).w,a1
		move.w	(Camera_X_pos).w,d4
		subq.w	#8,d4
		bhi.s	loc_F938
		moveq	#1,d4
		bra.s	loc_F938
; ---------------------------------------------------------------------------

loc_F934:
		lea	6(a1),a1

loc_F938:
		cmp.w	2(a1),d4
		bhi.s	loc_F934
		bra.s	loc_F942
; ---------------------------------------------------------------------------

loc_F940:
		subq.w	#6,a1

loc_F942:
		cmp.w	-4(a1),d4
		bls.s	loc_F940
		move.l	a1,(CNZ_visible_bumpers_start).w
		movea.l	(CNZ_Visible_bumpers_end).w,a2
		addi.w	#$150,d4
		bra.s	loc_F95A
; ---------------------------------------------------------------------------

loc_F956:
		lea	6(a2),a2

loc_F95A:
		cmp.w	2(a2),d4
		bhi.s	loc_F956
		bra.s	loc_F964
; ---------------------------------------------------------------------------

loc_F962:
		subq.w	#6,a2

loc_F964:
		cmp.w	-4(a2),d4
		bls.s	loc_F962
		move.l	a2,(CNZ_Visible_bumpers_end).w
		tst.w	(Competition_mode).w
		bne.s	loc_F97E
		move.l	a1,(CNZ_Visible_bumpers_start_P2).w
		move.l	a2,(CNZ_Visible_bumpers_end_P2).w
		rts
; ---------------------------------------------------------------------------

loc_F97E:
		movea.l	(CNZ_Visible_bumpers_start_P2).w,a1
		move.w	(Camera_X_pos_P2).w,d4
		subq.w	#8,d4
		bhi.s	loc_F992
		moveq	#1,d4
		bra.s	loc_F992
; ---------------------------------------------------------------------------

loc_F98E:
		lea	6(a1),a1

loc_F992:
		cmp.w	2(a1),d4
		bhi.s	loc_F98E
		bra.s	loc_F99C
; ---------------------------------------------------------------------------

loc_F99A:
		subq.w	#6,a1

loc_F99C:
		cmp.w	-4(a1),d4
		bls.s	loc_F99A
		move.l	a1,(CNZ_Visible_bumpers_start_P2).w
		movea.l	(CNZ_Visible_bumpers_end_P2).w,a2
		addi.w	#$150,d4
		bra.s	loc_F9B4
; ---------------------------------------------------------------------------

loc_F9B0:
		lea	6(a2),a2

loc_F9B4:
		cmp.w	2(a2),d4
		bhi.s	loc_F9B0
		bra.s	loc_F9BE
; ---------------------------------------------------------------------------

loc_F9BC:
		subq.w	#6,a2

loc_F9BE:
		cmp.w	-4(a2),d4
		bls.s	loc_F9BC
		move.l	a2,(CNZ_Visible_bumpers_end_P2).w
		rts

; =============== S U B R O U T I N E =======================================


Check_CNZ_Bumpers:
		movea.l	(CNZ_visible_bumpers_start).w,a1
		movea.l	(CNZ_Visible_bumpers_end).w,a2
		cmpa.w	#Player_1,a0
		beq.s	loc_F9E0
		movea.l	(CNZ_Visible_bumpers_start_P2).w,a1
		movea.l	(CNZ_Visible_bumpers_end_P2).w,a2

loc_F9E0:
		cmpa.l	a1,a2
		beq.w	locret_FA7A
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#9,d2
		moveq	#0,d5
		move.b	$1E(a0),d5
		subq.b	#3,d5
		sub.w	d5,d3
		cmpi.b	#$4D,$22(a0)
		bne.s	loc_FA0A
		addi.w	#$C,d3
		moveq	#$A,d5

loc_FA0A:
		move.w	#$12,d4
		add.w	d5,d5

CNZ_Bumper_Loop:
		move.w	(a1),d0
		andi.w	#$E,d0
		lea	byte_FA5A(pc,d0.w),a3
		moveq	#0,d1
		move.b	(a3)+,d1
		move.w	2(a1),d0
		sub.w	d1,d0
		sub.w	d2,d0
		bcc.s	loc_FA32
		add.w	d1,d1
		add.w	d1,d0
		bcs.s	loc_FA38
		bra.w	CNZ_Bumper_Next
; ---------------------------------------------------------------------------

loc_FA32:
		cmp.w	d4,d0
		bhi.w	CNZ_Bumper_Next

loc_FA38:
		moveq	#0,d1
		move.b	(a3)+,d1
		move.w	4(a1),d0
		sub.w	d1,d0
		sub.w	d3,d0
		bcc.s	loc_FA52
		add.w	d1,d1
		add.w	d1,d0
		bcs.w	loc_FA66
		bra.w	CNZ_Bumper_Next
; ---------------------------------------------------------------------------

loc_FA52:
		cmp.w	d5,d0
		bhi.w	CNZ_Bumper_Next
		bra.s	loc_FA66
; ---------------------------------------------------------------------------
byte_FA5A:	dc.b $20
		dc.b $20
		dc.b $20
		dc.b $20
		dc.b $40
		dc.b 8
		dc.b $40
		dc.b 8
		dc.b 8
		dc.b $40
		dc.b 8
		dc.b $40
; ---------------------------------------------------------------------------

loc_FA66:
		move.w	(a1),d0
		move.w	off_FA7C(pc,d0.w),d0
		jmp	off_FA7C(pc,d0.w)
; ---------------------------------------------------------------------------

CNZ_Bumper_Next:
		lea	6(a1),a1
		cmpa.l	a1,a2
		bne.w	CNZ_Bumper_Loop

locret_FA7A:
		rts
; ---------------------------------------------------------------------------
off_FA7C:	dc.w loc_FA88-off_FA7C
		dc.w loc_FB3A-off_FA7C
		dc.w loc_FBA0-off_FA7C
		dc.w loc_FBF8-off_FA7C
		dc.w loc_FC4E-off_FA7C
		dc.w loc_FCA6-off_FA7C
; ---------------------------------------------------------------------------

loc_FA88:
		move.w	4(a1),d0
		sub.w	$14(a0),d0
		neg.w	d0
		cmpi.w	#$20,d0
		blt.s	loc_FAA2
		move.w	#$A00,$1A(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FAA2:
		move.w	2(a1),d0
		sub.w	$10(a0),d0
		neg.w	d0
		cmpi.w	#$20,d0
		blt.s	loc_FABC
		move.w	#$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FABC:
		move.w	2(a1),d0
		sub.w	$10(a0),d0
		cmpi.w	#$20,d0
		blt.s	loc_FACE
		move.w	#$20,d0

loc_FACE:
		add.w	4(a1),d0
		subq.w	#8,d0
		move.w	$14(a0),d1
		addi.w	#$E,d1
		sub.w	d1,d0
		bcc.s	locret_FAEA
		move.w	#$20,d3
		bsr.s	loc_FAEC
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

locret_FAEA:
		rts
; ---------------------------------------------------------------------------

loc_FAEC:
		move.w	$18(a0),d1
		move.w	$1A(a0),d2
		jsr	(GetArcTan).l
		move.b	d0,(_dbgFFDC).w
		sub.w	d3,d0
		move.w	d0,d1
		bpl.s	loc_FB06
		neg.w	d1

loc_FB06:
		neg.w	d0
		add.w	d3,d0
		move.b	d0,(_dbgFFDD).w
		move.b	d1,(_dbgFFDF).w
		cmpi.b	#$38,d1
		bcs.s	loc_FB1A
		move.w	d3,d0

loc_FB1A:
		move.b	d0,(_dbgFFDE).w
		jsr	(GetSineCosine).l
		muls.w	#-$A00,d1
		asr.l	#8,d1
		move.w	d1,$18(a0)
		muls.w	#-$A00,d0
		asr.l	#8,d0
		move.w	d0,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_FB3A:
		move.w	4(a1),d0
		sub.w	$14(a0),d0
		neg.w	d0
		cmpi.w	#$20,d0
		blt.s	loc_FB54
		move.w	#$A00,$1A(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FB54:
		move.w	2(a1),d0
		sub.w	$10(a0),d0
		cmpi.w	#$20,d0
		blt.s	loc_FB6C
		move.w	#-$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FB6C:
		move.w	2(a1),d0
		sub.w	$10(a0),d0
		neg.w	d0
		cmpi.w	#$20,d0
		blt.s	loc_FB80
		move.w	#$20,d0

loc_FB80:
		add.w	4(a1),d0
		subq.w	#8,d0
		move.w	$14(a0),d1
		addi.w	#$E,d1
		sub.w	d1,d0
		bcc.s	locret_FB9E
		move.w	#$60,d3
		bsr.w	loc_FAEC
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

locret_FB9E:
		rts
; ---------------------------------------------------------------------------

loc_FBA0:
		move.w	4(a1),d0
		sub.w	$14(a0),d0
		neg.w	d0
		cmpi.w	#8,d0
		blt.s	loc_FBBA
		move.w	#$A00,$1A(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FBBA:
		move.w	2(a1),d0
		sub.w	$10(a0),d0
		cmpi.w	#$40,d0
		blt.s	loc_FBD2
		move.w	#-$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FBD2:
		neg.w	d0
		cmpi.w	#$40,d0
		blt.s	loc_FBE4
		move.w	#$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FBE4:
		move.w	#$38,d3
		tst.w	d0
		bmi.s	loc_FBF0
		move.w	#$48,d3

loc_FBF0:
		bsr.w	loc_FAEC
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FBF8:
		move.w	4(a1),d0
		sub.w	$14(a0),d0
		cmpi.w	#8,d0
		blt.s	loc_FC10
		move.w	#-$A00,$1A(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FC10:
		move.w	2(a1),d0
		sub.w	$10(a0),d0
		cmpi.w	#$40,d0
		blt.s	loc_FC28
		move.w	#-$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FC28:
		neg.w	d0
		cmpi.w	#$40,d0
		blt.s	loc_FC3A
		move.w	#$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FC3A:
		move.w	#$C8,d3
		tst.w	d0
		bmi.s	loc_FC46
		move.w	#$B8,d3

loc_FC46:
		bsr.w	loc_FAEC
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FC4E:
		move.w	2(a1),d0
		sub.w	$10(a0),d0
		neg.w	d0
		cmpi.w	#8,d0
		blt.s	loc_FC68
		move.w	#$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FC68:
		move.w	4(a1),d0
		sub.w	$14(a0),d0
		cmpi.w	#$40,d0
		blt.s	loc_FC80
		move.w	#-$A00,$1A(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FC80:
		neg.w	d0
		cmpi.w	#$40,d0
		blt.s	loc_FC92
		move.w	#$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FC92:
		move.w	#8,d3
		tst.w	d0
		bmi.s	loc_FC9E
		move.w	#$F8,d3

loc_FC9E:
		bsr.w	loc_FAEC
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FCA6:
		move.w	2(a1),d0
		sub.w	$10(a0),d0
		cmpi.w	#8,d0
		blt.s	loc_FCBE
		move.w	#$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FCBE:
		move.w	4(a1),d0
		sub.w	$14(a0),d0
		cmpi.w	#$40,d0
		blt.s	loc_FCD6
		move.w	#-$A00,$1A(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FCD6:
		neg.w	d0
		cmpi.w	#$40,d0
		blt.s	loc_FCE8
		move.w	#$A00,$18(a0)
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FCE8:
		move.w	#$78,d3
		tst.w	d0
		bmi.s	loc_FCF4
		move.w	#$88,d3

loc_FCF4:
		bsr.w	loc_FAEC
		bra.w	loc_FCFC
; ---------------------------------------------------------------------------

loc_FCFC:
		bset	#1,$2A(a0)
		bclr	#4,$2A(a0)
		bclr	#5,$2A(a0)
		clr.b	$40(a0)
		move.w	#sfx_MagneticSpike,d0
		jmp	(Play_Sound_2).l
; End of function Check_CNZ_Bumpers

; ---------------------------------------------------------------------------
SpecialCNZBumpers_Act1:
		dc.w     $A,  $410,  $540,     0,  $560,  $520
		dc.w     $A,  $810,  $400,     8,  $8F0,  $400
		dc.w      4,  $C40,  $1E0,     4,  $CC0,  $1E0
		dc.w      4,  $D40,  $1E0,     4,  $DC0,  $1E0
		dc.w      4,  $E40,  $1E0,     4,  $E40,  $460
		dc.w      4,  $EC0,  $460,     4,  $F40,  $460
		dc.w      4,  $FC0,  $460,     6, $11C0,  $120
		dc.w      4, $11C0,  $1E0,     6, $1240,  $120
		dc.w      4, $1240,  $1E0,     6, $12C0,  $120
		dc.w      6, $1440,  $320,     4, $1440,  $3E0
		dc.w      6, $1440,  $420,     6, $14C0,  $320
		dc.w     $A, $1590,  $640,     6, $15C0,  $420
		dc.w      8, $15F0,  $6C0,    $A, $1610,  $6C0
		dc.w      6, $1640,  $420,     8, $1670,  $640
		dc.w      6, $19C0,  $220,     0, $19E0,  $360
		dc.w      6, $1A40,  $220,     2, $1A60,  $320
		dc.w      2, $1AA0,  $6E0,     4, $1AC0,  $360
		dc.w      6, $1AC0,  $620,     4, $1AC0,  $760
		dc.w      4, $1B40,  $360,     6, $1B40,  $620
		dc.w      4, $1B40,  $760,     4, $1BC0,  $360
		dc.w      6, $1BC0,  $620,     4, $1BC0,  $760
		dc.w      4, $1C40,  $760,     4, $1CC0,  $760
		dc.w      0, $1CE0,  $360,     0, $1D20,  $320
		dc.w      2, $1F60,  $620,     0, $2060,  $620
		dc.w      0, $20A0,  $4A0,     2, $21E0,  $1A0
		dc.w      2, $2260,  $4E0,     8, $22F0,  $1C0
		dc.w      8, $23F0,  $3C0,     0, $FFFF,     0
SpecialCNZBumpers_Act2:
		dc.w      0,     0,     0,     2,  $DA0,  $5A0
		dc.w      0,  $EE0,  $5A0,     2, $1320,  $320
		dc.w      0, $1360,  $2A0,     4, $1540,  $1E0
		dc.w      6, $1540,  $220,     4, $15C0,  $1E0
		dc.w      6, $15C0,  $220,     4, $1640,  $1E0
		dc.w      6, $1640,  $220,     6, $1740,  $720
		dc.w      4, $1740,  $7E0,     6, $17C0,  $720
		dc.w      4, $17C0,  $7E0,    $A, $1810,  $240
		dc.w      6, $1840,  $720,     4, $1840,  $7E0
		dc.w      6, $18C0,  $720,     4, $18C0,  $7E0
		dc.w     $A, $1890,  $3C0,     8, $1930,  $240
		dc.w      6, $1940,  $720,     4, $1940,  $7E0
		dc.w      6, $19C0,  $720,     4, $19C0,  $7E0
		dc.w      6, $1A40,  $720,     4, $1A40,  $7E0
		dc.w      6, $1AC0,  $720,     4, $1AC0,  $7E0
		dc.w     $A, $1C90,  $240,     2, $1CA0,  $360
		dc.w      2, $1D20,  $3E0,     4, $1DC0,  $1E0
		dc.w      6, $1DC0,  $220,     4, $1E40,  $1E0
		dc.w      6, $1E40,  $220,     8, $1E70,  $380
		dc.w      4, $1EC0,  $5E0,     6, $1F80,  $590
		dc.w      2, $2220,  $1A0,     2, $2260,  $1E0
		dc.w      2, $22A0,  $220,     2, $22E0,  $260
		dc.w      2, $23A0,  $4E0,     0, $2520,  $520
		dc.w      8, $2530,  $1C0,     8, $2530,  $2C0
		dc.w      8, $2530,  $340,     8, $2530,  $3C0
		dc.w      8, $2530,  $4C0,     0, $25A0,  $360
		dc.w      0, $25E0,  $320,     0, $FFFF,     0

; =============== S U B R O U T I N E =======================================


Player_AnglePos:
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_FFB8
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_FFB8:
		move.b	$46(a0),d5
		btst	#3,$2A(a0)
		beq.s	loc_FFD0
		moveq	#0,d0
		move.b	d0,(Primary_Angle).w
		move.b	d0,(Secondary_Angle).w
		rts
; ---------------------------------------------------------------------------

loc_FFD0:
		moveq	#3,d0
		move.b	d0,(Primary_Angle).w
		move.b	d0,(Secondary_Angle).w
		move.b	$26(a0),d0
		addi.b	#$20,d0
		bpl.s	loc_FFF2
		move.b	$26(a0),d0
		bpl.s	loc_FFEC
		subq.b	#1,d0

loc_FFEC:
		addi.b	#$20,d0
		bra.s	loc_FFFE
; ---------------------------------------------------------------------------

loc_FFF2:
		move.b	$26(a0),d0
		bpl.s	loc_FFFA
		addq.b	#1,d0

loc_FFFA:
		addi.b	#$1F,d0

loc_FFFE:
		andi.b	#-$40,d0
		cmpi.b	#$40,d0
		beq.w	Player_WalkVertL
		cmpi.b	#-$80,d0
		beq.w	Player_WalkCeiling
		cmpi.b	#-$40,d0
		beq.w	Player_WalkVertR
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Primary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1F(a0),d0
		ext.w	d0
		neg.w	d0
		add.w	d0,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.w	(sp)+,d0
		bsr.w	Player_Angle
		tst.w	d1
		beq.s	locret_10088
		bpl.s	loc_1008A
		cmpi.w	#-$E,d1
		blt.s	locret_10088
		add.w	d1,$14(a0)

locret_10088:
		rts
; ---------------------------------------------------------------------------

loc_1008A:
		tst.b	$3C(a0)
		bne.s	loc_100A8
		move.b	$18(a0),d0
		bpl.s	loc_10098
		neg.b	d0

loc_10098:
		addq.b	#4,d0
		cmpi.b	#$E,d0
		bcs.s	loc_100A4
		move.b	#$E,d0

loc_100A4:
		cmp.b	d0,d1
		bgt.s	loc_100AE

loc_100A8:
		add.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_100AE:
		bset	#1,$2A(a0)
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)
		rts
; End of function Player_AnglePos


; =============== S U B R O U T I N E =======================================


Player_Angle:
		move.w	d0,d3
		move.b	(Secondary_Angle).w,d2
		cmp.w	d0,d1
		ble.s	loc_100D4
		move.b	(Primary_Angle).w,d2
		move.w	d1,d3
		move.w	d0,d1

loc_100D4:
		btst	#0,d2
		bne.s	loc_100F0
		move.b	d2,d0
		sub.b	$26(a0),d0
		bpl.s	loc_100E4
		neg.b	d0

loc_100E4:
		cmpi.b	#$20,d0
		bcc.s	loc_100F0
		move.b	d2,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_100F0:
		move.b	$26(a0),d2
		addi.b	#$20,d2
		andi.b	#-$40,d2
		move.b	d2,$26(a0)
		rts
; End of function Player_Angle

; ---------------------------------------------------------------------------

Player_WalkVertR:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1F(a0),d0
		ext.w	d0
		neg.w	d0
		add.w	d0,d2
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Primary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		bsr.w	Player_Angle
		tst.w	d1
		beq.s	locret_10176
		bpl.s	loc_10198
		cmpi.w	#-$E,d1
		blt.s	loc_10184
		tst.b	$41(a0)
		bne.s	loc_10178
		add.w	d1,$10(a0)

locret_10176:
		rts
; ---------------------------------------------------------------------------

loc_10178:
		subq.b	#1,$41(a0)
		move.b	#-$40,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_10184:
		tst.w	(Current_zone_and_act).w
		bne.s	locret_10176
		move.b	#-$40,$26(a0)
		move.b	#3,$41(a0)
		rts
; ---------------------------------------------------------------------------

loc_10198:
		tst.b	$3C(a0)
		bne.s	loc_101B6
		move.b	$1A(a0),d0
		bpl.s	loc_101A6
		neg.b	d0

loc_101A6:
		addq.b	#4,d0
		cmpi.b	#$E,d0
		bcs.s	loc_101B2
		move.b	#$E,d0

loc_101B2:
		cmp.b	d0,d1
		bgt.s	loc_101BC

loc_101B6:
		add.w	d1,$10(a0)
		rts
; ---------------------------------------------------------------------------

loc_101BC:
		bset	#1,$2A(a0)
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)
		rts
; ---------------------------------------------------------------------------

Player_WalkCeiling:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	(sp)+,d0
		bsr.w	Player_Angle
		tst.w	d1
		beq.s	locret_10244
		bpl.s	loc_10246
		cmpi.w	#-$E,d1
		blt.s	locret_10244
		sub.w	d1,$14(a0)

locret_10244:
		rts
; ---------------------------------------------------------------------------

loc_10246:
		tst.b	$3C(a0)
		bne.s	loc_10264
		move.b	$18(a0),d0
		bpl.s	loc_10254
		neg.b	d0

loc_10254:
		addq.b	#4,d0
		cmpi.b	#$E,d0
		bcs.s	loc_10260
		move.b	#$E,d0

loc_10260:
		cmp.b	d0,d1
		bgt.s	loc_1026A

loc_10264:
		sub.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_1026A:
		bset	#1,$2A(a0)
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)
		rts
; ---------------------------------------------------------------------------

Player_WalkVertL:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d2
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		bsr.w	Player_Angle
		tst.w	d1
		beq.s	locret_102F2
		bpl.s	loc_102F4
		cmpi.w	#-$E,d1
		blt.s	locret_102F2
		sub.w	d1,$10(a0)

locret_102F2:
		rts
; ---------------------------------------------------------------------------

loc_102F4:
		tst.b	$3C(a0)
		bne.s	loc_10312
		move.b	$1A(a0),d0
		bpl.s	loc_10302
		neg.b	d0

loc_10302:
		addq.b	#4,d0
		cmpi.b	#$E,d0
		bcs.s	loc_1030E
		move.b	#$E,d0

loc_1030E:
		cmp.b	d0,d1
		bgt.s	loc_10318

loc_10312:
		sub.w	d1,$10(a0)
		rts
; ---------------------------------------------------------------------------

loc_10318:
		bset	#1,$2A(a0)
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)
		rts
; ---------------------------------------------------------------------------

GetFloorPosition_BG:
		lea	(Level_layout_header).w,a1
		move.w	d2,d0
		lsr.w	#5,d0
		and.w	(Layout_row_index_mask).w,d0
		move.w	$A(a1,d0.w),d0
		move.w	d3,d1
		lsr.w	#3,d1
		move.w	d1,d4
		lsr.w	#4,d1
		add.w	d1,d0
		moveq	#-1,d1
		clr.w	d1
		movea.w	d0,a1
		move.b	(a1),d1
		add.w	d1,d1
		move.w	ChunkAddrArray(pc,d1.w),d1
		move.w	d2,d0
		andi.w	#$70,d0
		add.w	d0,d1
		andi.w	#$E,d4
		add.w	d4,d1
		movea.l	d1,a1
		rts
; ---------------------------------------------------------------------------

GetFloorPosition_FG:
		lea	(Level_layout_header).w,a1
		move.w	d2,d0
		lsr.w	#5,d0
		and.w	(Layout_row_index_mask).w,d0
		move.w	8(a1,d0.w),d0
		move.w	d3,d1
		lsr.w	#3,d1
		move.w	d1,d4
		lsr.w	#4,d1
		add.w	d1,d0
		moveq	#-1,d1
		clr.w	d1
		movea.w	d0,a1
		move.b	(a1),d1
		add.w	d1,d1
		move.w	ChunkAddrArray(pc,d1.w),d1
		move.w	d2,d0
		andi.w	#$70,d0
		add.w	d0,d1
		andi.w	#$E,d4
		add.w	d4,d1
		movea.l	d1,a1
		rts
; ---------------------------------------------------------------------------
ChunkAddrArray:	dc.w     0,  $80, $100, $180, $200, $280, $300, $380, $400, $480, $500, $580, $600, $680, $700, $780
		dc.w  $800, $880, $900, $980, $A00, $A80, $B00, $B80, $C00, $C80, $D00, $D80, $E00, $E80, $F00, $F80
		dc.w $1000,$1080,$1100,$1180,$1200,$1280,$1300,$1380,$1400,$1480,$1500,$1580,$1600,$1680,$1700,$1780
		dc.w $1800,$1880,$1900,$1980,$1A00,$1A80,$1B00,$1B80,$1C00,$1C80,$1D00,$1D80,$1E00,$1E80,$1F00,$1F80
		dc.w $2000,$2080,$2100,$2180,$2200,$2280,$2300,$2380,$2400,$2480,$2500,$2580,$2600,$2680,$2700,$2780
		dc.w $2800,$2880,$2900,$2980,$2A00,$2A80,$2B00,$2B80,$2C00,$2C80,$2D00,$2D80,$2E00,$2E80,$2F00,$2F80
		dc.w $3000,$3080,$3100,$3180,$3200,$3280,$3300,$3380,$3400,$3480,$3500,$3580,$3600,$3680,$3700,$3780
		dc.w $3800,$3880,$3900,$3980,$3A00,$3A80,$3B00,$3B80,$3C00,$3C80,$3D00,$3D80,$3E00,$3E80,$3F00,$3F80
		dc.w $4000,$4080,$4100,$4180,$4200,$4280,$4300,$4380,$4400,$4480,$4500,$4580,$4600,$4680,$4700,$4780
		dc.w $4800,$4880,$4900,$4980,$4A00,$4A80,$4B00,$4B80,$4C00,$4C80,$4D00,$4D80,$4E00,$4E80,$4F00,$4F80
		dc.w $5000,$5080,$5100,$5180,$5200,$5280,$5300,$5380,$5400,$5480,$5500,$5580,$5600,$5680,$5700,$5780
		dc.w $5800,$5880,$5900,$5980,$5A00,$5A80,$5B00,$5B80,$5C00,$5C80,$5D00,$5D80,$5E00,$5E80,$5F00,$5F80
		dc.w $6000,$6080,$6100,$6180,$6200,$6280,$6300,$6380,$6400,$6480,$6500,$6580,$6600,$6680,$6700,$6780
		dc.w $6800,$6880,$6900,$6980,$6A00,$6A80,$6B00,$6B80,$6C00,$6C80,$6D00,$6D80,$6E00,$6E80,$6F00,$6F80
		dc.w $7000,$7080,$7100,$7180,$7200,$7280,$7300,$7380,$7400,$7480,$7500,$7580,$7600,$7680,$7700,$7780
		dc.w $7800,$7880,$7900,$7980,$7A00,$7A80,$7B00,$7B80,$7C00,$7C80,$7D00,$7D80,$7E00,$7E80,$7F00,$7F80

; =============== S U B R O U T I N E =======================================


FindFloor:
		lea	(GetFloorPosition_FG).l,a5
		tst.b	(Background_collision_flag).w
		beq.s	sub_105DA
		bsr.s	sub_105DA
		move.b	(a4),1(a4)
		move.w	d1,-(sp)
		sub.w	(Camera_X_diff).w,d3
		sub.w	(Camera_Y_diff).w,d2
		lea	(GetFloorPosition_BG).l,a5
		bsr.s	sub_105DA
		add.w	(Camera_X_diff).w,d3
		add.w	(Camera_Y_diff).w,d2
		move.w	(sp)+,d0
		cmp.w	d0,d1
		ble.s	locret_105D8
		move.b	1(a4),(a4)
		move.w	d0,d1

locret_105D8:
		rts
; End of function FindFloor


; =============== S U B R O U T I N E =======================================


sub_105DA:
		jsr	(a5)
		move.w	(a1),d0
		move.w	d0,d4
		andi.w	#$3FF,d0
		beq.s	loc_105EA
		btst	d5,d4
		bne.s	loc_105F8

loc_105EA:
		add.w	a3,d2
		bsr.w	sub_1067E
		sub.w	a3,d2
		addi.w	#$10,d1
		rts
; ---------------------------------------------------------------------------

loc_105F8:
		movea.l	(Collision_addr).w,a2
		add.w	d0,d0
		move.w	(a2,d0.w),d0
		beq.s	loc_105EA
		lea	(AngleArray).l,a2
		move.b	(a2,d0.w),(a4)
		lsl.w	#4,d0
		move.w	d3,d1
		btst	#$A,d4
		beq.s	loc_1061C
		not.w	d1
		neg.b	(a4)

loc_1061C:
		btst	#$B,d4
		beq.s	loc_1062C
		addi.b	#$40,(a4)
		neg.b	(a4)
		subi.b	#$40,(a4)

loc_1062C:
		andi.w	#$F,d1
		add.w	d0,d1
		lea	(HeightMaps).l,a2
		move.b	(a2,d1.w),d0
		ext.w	d0
		eor.w	d6,d4
		btst	#%1011,d4
		beq.s	loc_10648
		neg.w	d0

loc_10648:
		tst.w	d0
		beq.s	loc_105EA
		bmi.s	loc_10664
		cmpi.b	#$10,d0
		beq.s	loc_10670
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		move.w	#$F,d1
		sub.w	d0,d1
		rts
; ---------------------------------------------------------------------------

loc_10664:
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		bpl.w	loc_105EA

loc_10670:
		sub.w	a3,d2
		bsr.w	sub_1067E
		add.w	a3,d2
		subi.w	#$10,d1
		rts
; End of function sub_105DA


; =============== S U B R O U T I N E =======================================


sub_1067E:
		jsr	(a5)
		move.w	(a1),d0
		move.w	d0,d4
		andi.w	#$3FF,d0
		beq.s	loc_1068E
		btst	d5,d4
		bne.s	loc_1069C

loc_1068E:
		move.w	#$F,d1
		move.w	d2,d0
		andi.w	#$F,d0
		sub.w	d0,d1
		rts
; ---------------------------------------------------------------------------

loc_1069C:
		movea.l	(Collision_addr).w,a2
		add.w	d0,d0
		move.w	(a2,d0.w),d0
		beq.s	loc_1068E
		lea	(AngleArray).l,a2
		move.b	(a2,d0.w),(a4)
		lsl.w	#4,d0
		move.w	d3,d1
		btst	#$A,d4
		beq.s	loc_106C0
		not.w	d1
		neg.b	(a4)

loc_106C0:
		btst	#$B,d4
		beq.s	loc_106D0
		addi.b	#$40,(a4)
		neg.b	(a4)
		subi.b	#$40,(a4)

loc_106D0:
		andi.w	#$F,d1
		add.w	d0,d1
		lea	(HeightMaps).l,a2
		move.b	(a2,d1.w),d0
		ext.w	d0
		eor.w	d6,d4
		btst	#$B,d4
		beq.s	loc_106EC
		neg.w	d0

loc_106EC:
		tst.w	d0
		beq.s	loc_1068E
		bmi.s	loc_10702
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		move.w	#$F,d1
		sub.w	d0,d1
		rts
; ---------------------------------------------------------------------------

loc_10702:
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		bpl.w	loc_1068E
		not.w	d1
		rts
; End of function sub_1067E

; ---------------------------------------------------------------------------

loc_10712:
		lea	(GetFloorPosition_FG).l,a5
		tst.b	(Background_collision_flag).w
		beq.s	sub_1074C
		bsr.s	sub_1074C
		move.b	(a4),1(a4)
		move.w	d1,-(sp)
		sub.w	(Camera_X_diff).w,d3
		sub.w	(Camera_Y_diff).w,d2
		lea	(GetFloorPosition_BG).l,a5
		bsr.s	sub_1074C
		add.w	(Camera_X_diff).w,d3
		add.w	(Camera_Y_diff).w,d2
		move.w	(sp)+,d0
		cmp.w	d0,d1
		ble.s	locret_1074A
		move.b	1(a4),(a4)
		move.w	d0,d1

locret_1074A:
		rts

; =============== S U B R O U T I N E =======================================


sub_1074C:
		jsr	(a5)
		move.w	(a1),d0
		move.w	d0,d4
		andi.w	#$3FF,d0
		beq.s	loc_1075C
		btst	d5,d4
		bne.s	loc_10762

loc_1075C:
		move.w	#$10,d1
		rts
; ---------------------------------------------------------------------------

loc_10762:
		movea.l	(Collision_addr).w,a2
		add.w	d0,d0
		move.w	(a2,d0.w),d0
		beq.s	loc_1075C
		lea	(AngleArray).l,a2
		move.b	(a2,d0.w),(a4)
		lsl.w	#4,d0
		move.w	d3,d1
		btst	#$A,d4
		beq.s	loc_10786
		not.w	d1
		neg.b	(a4)

loc_10786:
		btst	#$B,d4
		beq.s	loc_10796
		addi.b	#$40,(a4)
		neg.b	(a4)
		subi.b	#$40,(a4)

loc_10796:
		andi.w	#$F,d1
		add.w	d0,d1
		lea	(HeightMaps).l,a2
		move.b	(a2,d1.w),d0
		ext.w	d0
		eor.w	d6,d4
		btst	#$B,d4
		beq.s	loc_107B2
		neg.w	d0

loc_107B2:
		tst.w	d0
		beq.s	loc_1075C
		bmi.s	loc_107CE
		cmpi.b	#$10,d0
		beq.s	loc_107DA
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		move.w	#$F,d1
		sub.w	d0,d1
		rts
; ---------------------------------------------------------------------------

loc_107CE:
		move.w	d2,d1
		andi.w	#$F,d1
		add.w	d1,d0
		bpl.w	loc_1075C

loc_107DA:
		sub.w	a3,d2
		bsr.w	sub_1067E
		add.w	a3,d2
		subi.w	#$10,d1
		rts
; End of function sub_1074C


; =============== S U B R O U T I N E =======================================


FindWall:
		lea	(GetFloorPosition_FG).l,a5
		tst.b	(Background_collision_flag).w
		beq.s	sub_10846
		bsr.s	sub_10846
		move.b	(a4),1(a4)
		move.w	d1,-(sp)
		move.w	a3,d0
		bpl.s	loc_1080E
		eori.w	#$F,d3
		sub.w	(Camera_X_diff).w,d3
		eori.w	#$F,d3
		bra.s	loc_10812
; ---------------------------------------------------------------------------

loc_1080E:
		sub.w	(Camera_X_diff).w,d3

loc_10812:
		sub.w	(Camera_Y_diff).w,d2
		lea	(GetFloorPosition_BG).l,a5
		bsr.s	sub_10846
		move.w	a3,d0
		bpl.s	loc_10830
		eori.w	#$F,d3
		add.w	(Camera_X_diff).w,d3
		eori.w	#$F,d3
		bra.s	loc_10834
; ---------------------------------------------------------------------------

loc_10830:
		add.w	(Camera_X_diff).w,d3

loc_10834:
		add.w	(Camera_Y_diff).w,d2
		move.w	(sp)+,d0
		cmp.w	d0,d1
		ble.s	locret_10844
		move.b	1(a4),(a4)
		move.w	d0,d1

locret_10844:
		rts
; End of function FindWall


; =============== S U B R O U T I N E =======================================


sub_10846:
		jsr	(a5)
		move.w	(a1),d0
		move.w	d0,d4
		andi.w	#$3FF,d0
		beq.s	loc_10856
		btst	d5,d4
		bne.s	loc_10864

loc_10856:
		add.w	a3,d3
		bsr.w	sub_108EA
		sub.w	a3,d3
		addi.w	#$10,d1
		rts
; ---------------------------------------------------------------------------

loc_10864:
		movea.l	(Collision_addr).w,a2
		add.w	d0,d0
		move.w	(a2,d0.w),d0
		beq.s	loc_10856
		lea	(AngleArray).l,a2
		move.b	(a2,d0.w),(a4)
		lsl.w	#4,d0
		move.w	d2,d1
		btst	#$B,d4
		beq.s	loc_10890
		not.w	d1
		addi.b	#$40,(a4)
		neg.b	(a4)
		subi.b	#$40,(a4)

loc_10890:
		btst	#$A,d4
		beq.s	loc_10898
		neg.b	(a4)

loc_10898:
		andi.w	#$F,d1
		add.w	d0,d1
		lea	(HeightMapsRot).l,a2
		move.b	(a2,d1.w),d0
		ext.w	d0
		eor.w	d6,d4
		btst	#$A,d4
		beq.s	loc_108B4
		neg.w	d0

loc_108B4:
		tst.w	d0
		beq.s	loc_10856
		bmi.s	loc_108D0
		cmpi.b	#$10,d0
		beq.s	loc_108DC
		move.w	d3,d1
		andi.w	#$F,d1
		add.w	d1,d0
		move.w	#$F,d1
		sub.w	d0,d1
		rts
; ---------------------------------------------------------------------------

loc_108D0:
		move.w	d3,d1
		andi.w	#$F,d1
		add.w	d1,d0
		bpl.w	loc_10856

loc_108DC:
		sub.w	a3,d3
		bsr.w	sub_108EA
		add.w	a3,d3
		subi.w	#$10,d1
		rts
; End of function sub_10846


; =============== S U B R O U T I N E =======================================


sub_108EA:
		jsr	(a5)
		move.w	(a1),d0
		move.w	d0,d4
		andi.w	#$3FF,d0
		beq.s	loc_108FA
		btst	d5,d4
		bne.s	loc_10908

loc_108FA:
		move.w	#$F,d1
		move.w	d3,d0
		andi.w	#$F,d0
		sub.w	d0,d1
		rts
; ---------------------------------------------------------------------------

loc_10908:
		movea.l	(Collision_addr).w,a2
		add.w	d0,d0
		move.w	(a2,d0.w),d0
		beq.s	loc_108FA
		lea	(AngleArray).l,a2
		move.b	(a2,d0.w),(a4)
		lsl.w	#4,d0
		move.w	d2,d1
		btst	#$B,d4
		beq.s	loc_10934
		not.w	d1
		addi.b	#$40,(a4)
		neg.b	(a4)
		subi.b	#$40,(a4)

loc_10934:
		btst	#$A,d4
		beq.s	loc_1093C
		neg.b	(a4)

loc_1093C:
		andi.w	#$F,d1
		add.w	d0,d1
		lea	(HeightMapsRot).l,a2
		move.b	(a2,d1.w),d0
		ext.w	d0
		eor.w	d6,d4
		btst	#$A,d4
		beq.s	loc_10958
		neg.w	d0

loc_10958:
		tst.w	d0
		beq.s	loc_108FA
		bmi.s	loc_1096E
		move.w	d3,d1
		andi.w	#$F,d1
		add.w	d1,d0
		move.w	#$F,d1
		sub.w	d0,d1
		rts
; ---------------------------------------------------------------------------

loc_1096E:
		move.w	d3,d1
		andi.w	#$F,d1
		add.w	d1,d0
		bpl.w	loc_108FA
		not.w	d1
		rts
; End of function sub_108EA


; =============== S U B R O U T I N E =======================================


nullsub_4:
		rts
; End of function nullsub_4


; =============== S U B R O U T I N E =======================================


sub_10980:
		tst.w	(Competition_mode).w
		bne.w	sub_10A10
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_1099C
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_1099C:
		move.b	$47(a0),d5
		move.l	$10(a0),d3
		move.l	$14(a0),d2
		move.w	$18(a0),d1
		ext.l	d1
		asl.l	#8,d1
		add.l	d1,d3
		move.w	$1A(a0),d1
		ext.l	d1
		asl.l	#8,d1
		add.l	d1,d2
		swap	d2
		swap	d3
		move.b	d0,(Primary_Angle).w
		move.b	d0,(Secondary_Angle).w
		move.b	d0,d1
		addi.b	#$20,d0
		bpl.s	loc_109DC
		move.b	d1,d0
		bpl.s	loc_109D6
		subq.b	#1,d0

loc_109D6:
		addi.b	#$20,d0
		bra.s	loc_109E6
; ---------------------------------------------------------------------------

loc_109DC:
		move.b	d1,d0
		bpl.s	loc_109E2
		addq.b	#1,d0

loc_109E2:
		addi.b	#$1F,d0

loc_109E6:
		andi.b	#$C0,d0
		beq.w	CheckFloorDist_Part2
		cmpi.b	#$80,d0
		beq.w	CheckCeilingDist_Part2
		tst.w	(Competition_mode).w
		bne.s	loc_10A04
		andi.b	#$38,d1
		bne.s	loc_10A04
		addq.w	#8,d2

loc_10A04:
		cmpi.b	#$40,d0
		beq.w	loc_11084
		bra.w	loc_10DE4
; End of function sub_10980


; =============== S U B R O U T I N E =======================================


sub_10A10:
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_10A24
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_10A24:
		move.b	$47(a0),d5
		move.l	$10(a0),d3
		move.l	$14(a0),d2
		move.w	$18(a0),d1
		ext.l	d1
		asl.l	#8,d1
		add.l	d1,d3
		move.w	$1A(a0),d1
		ext.l	d1
		asl.l	#8,d1
		add.l	d1,d2
		swap	d2
		swap	d3
		move.b	d0,(Primary_Angle).w
		move.b	d0,(Secondary_Angle).w
		move.b	d0,d1
		addi.b	#$20,d0
		bpl.s	loc_10A64
		move.b	d1,d0
		bpl.s	loc_10A5E
		subq.b	#1,d0

loc_10A5E:
		addi.b	#$20,d0
		bra.s	loc_10A6E
; ---------------------------------------------------------------------------

loc_10A64:
		move.b	d1,d0
		bpl.s	loc_10A6A
		addq.b	#1,d0

loc_10A6A:
		addi.b	#$1F,d0

loc_10A6E:
		andi.b	#-$40,d0
		beq.w	sub_10B84
		cmpi.b	#-$80,d0
		beq.w	loc_10F4A
		cmpi.b	#$40,d0
		beq.w	loc_110A4
		bra.w	loc_10E00
; End of function sub_10A10


; =============== S U B R O U T I N E =======================================


CalcRoomOverHead:
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_10A9E
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_10A9E:
		move.b	$47(a0),d5
		move.b	d0,(Primary_Angle).w
		move.b	d0,(Secondary_Angle).w
		addi.b	#$20,d0
		andi.b	#-$40,d0
		cmpi.b	#$40,d0
		beq.w	CheckLeftCeilingDist
		cmpi.b	#-$80,d0
		beq.w	Sonic_CheckCeiling
		cmpi.b	#-$40,d0
		beq.w	CheckRightCeilingDist
; End of function CalcRoomOverHead


; =============== S U B R O U T I N E =======================================


Sonic_CheckFloor:
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_10ADE
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_10ADE:
		move.b	$46(a0),d5
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Primary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.w	(sp)+,d0
		move.b	#0,d2

loc_10B3E:
		move.b	(Secondary_Angle).w,d3
		cmp.w	d0,d1
		ble.s	loc_10B4C
		move.b	(Primary_Angle).w,d3
		exg	d0,d1

loc_10B4C:
		btst	#0,d3
		beq.s	locret_10B54
		move.b	d2,d3

locret_10B54:
		rts
; End of function Sonic_CheckFloor

; ---------------------------------------------------------------------------

CheckFloorDist:
		move.w	$14(a0),d2
		move.w	$10(a0),d3

CheckFloorDist_Part2:
		addi.w	#$A,d2
		lea	(Primary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.b	#0,d2

loc_10B76:
		move.b	(Primary_Angle).w,d3
		btst	#0,d3
		beq.s	locret_10B82
		move.b	d2,d3

locret_10B82:
		rts

; =============== S U B R O U T I N E =======================================


sub_10B84:
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d2
		lea	(Primary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindFloor
		move.b	#0,d2
		bra.s	loc_10B76
; End of function sub_10B84


; =============== S U B R O U T I N E =======================================


sub_10BA2:
		move.w	$10(a0),d3
		move.w	$14(a0),d2
		subq.w	#4,d2
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$D,$47(a0)
		beq.s	loc_10BC0
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_10BC0:
		lea	(Primary_Angle).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		move.b	$47(a0),d5
		movem.l	a4-a6,-(sp)
		bsr.w	FindFloor
		movem.l	(sp)+,a4-a6
		move.b	(Primary_Angle).w,d3
		btst	#0,d3
		beq.s	locret_10BEE
		move.b	#0,d3

locret_10BEE:
		rts
; End of function sub_10BA2


; =============== S U B R O U T I N E =======================================


ChkFloorEdge:
		move.w	$10(a0),d3

ChkFloorEdge_Part2:
		move.w	%10100(a0),d2
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d2

ChkFloorEdge_Part3:
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_10C16
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_10C16:
		lea	(Primary_Angle).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		move.b	$46(a0),d5
		movem.l	a4-a6,-(sp)
		bsr.w	FindFloor
		movem.l	(sp)+,a4-a6
		move.b	(Primary_Angle).w,d3
		btst	#0,d3
		beq.s	locret_10C44
		move.b	#0,d3

locret_10C44:
		rts
; End of function ChkFloorEdge


; =============== S U B R O U T I N E =======================================


SonicOnObjHitFloor:
		move.w	$10(a1),d3
		move.w	$14(a1),d2
		moveq	#0,d0
		move.b	$1E(a1),d0
		ext.w	d0
		add.w	d0,d2
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a1)
		beq.s	loc_10C6C
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_10C6C:
		lea	(Primary_Angle).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		move.b	$46(a1),d5
		bsr.w	FindFloor
		move.b	(Primary_Angle).w,d3
		btst	#0,d3
		beq.s	locret_10C92
		move.b	#0,d3

locret_10C92:
		rts
; End of function SonicOnObjHitFloor


; =============== S U B R O U T I N E =======================================


ObjCheckFloorDist:
		move.w	$10(a0),d3

ObjCheckFloorDist2:
		move.w	$14(a0),d2
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d2
		lea	(Primary_Angle).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		moveq	#$C,d5
		bsr.w	FindFloor
		move.b	(Primary_Angle).w,d3
		btst	#0,d3
		beq.s	locret_10CC8
		move.b	#0,d3

locret_10CC8:
		rts
; End of function ObjCheckFloorDist

; ---------------------------------------------------------------------------

FireCheckFloorDist:
		move.w	$10(a1),d3
		move.w	$14(a1),d2
		move.b	$1E(a1),d0
		ext.w	d0
		add.w	d0,d2
		lea	(Primary_Angle).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		moveq	#$C,d5
		bra.w	FindFloor

; =============== S U B R O U T I N E =======================================


RingCheckFloorDist:
		move.w	$10(a0),d3
		move.w	$14(a0),d2
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d2
		lea	(Primary_Angle).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		moveq	#$C,d5
		bra.w	loc_10712
; End of function RingCheckFloorDist

; ---------------------------------------------------------------------------

CheckRightCeilingDist:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d2
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Primary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		move.b	#-$40,d2
		bra.w	loc_10B3E

; =============== S U B R O U T I N E =======================================


sub_10D76:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d2
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Primary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		move.b	#-$40,d2
		bra.w	loc_10B3E
; End of function sub_10D76


; =============== S U B R O U T I N E =======================================


CheckRightWallDist:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		tst.w	(Competition_mode).w
		bne.s	loc_10E00

loc_10DE4:
		addi.w	#$A,d3
		lea	(Primary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.b	#-$40,d2
		bra.w	loc_10B76
; ---------------------------------------------------------------------------

loc_10E00:
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Primary_Angle).w,a4
		movea.w	#$10,a3
		move.w	#0,d6
		bsr.w	FindWall
		move.b	#-$40,d2
		bra.w	loc_10B76
; End of function CheckRightWallDist


; =============== S U B R O U T I N E =======================================


ObjCheckRightWallDist:
		add.w	$10(a0),d3
		move.w	$14(a0),d2
		lea	(Primary_Angle).w,a4
		move.b	#0,(a4)
		movea.w	#$10,a3
		move.w	#0,d6
		moveq	#$D,d5
		bsr.w	FindWall
		move.b	(Primary_Angle).w,d3
		btst	#0,d3
		beq.s	locret_10E4C
		move.b	#-$40,d3

locret_10E4C:
		rts
; End of function ObjCheckRightWallDist


; =============== S U B R O U T I N E =======================================


Sonic_CheckCeiling:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d3
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	(sp)+,d0
		move.b	#-$80,d2
		bra.w	loc_10B3E
; End of function Sonic_CheckCeiling


; =============== S U B R O U T I N E =======================================


sub_10EB6:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$1F(a0),d0
		ext.w	d0
		subq.w	#2,d0
		add.w	d0,d3
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		move.b	$1F(a0),d0
		ext.w	d0
		subq.w	#2,d0
		sub.w	d0,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.w	(sp)+,d0
		move.b	#-$80,d2
		bra.w	loc_10B3E
; End of function sub_10EB6

; ---------------------------------------------------------------------------

CheckCeilingDist:
		move.w	$14(a0),d2
		move.w	$10(a0),d3

CheckCeilingDist_Part2:
		subi.w	#$A,d2
		eori.w	#$F,d2
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.b	#-$80,d2
		bra.w	loc_10B76
; ---------------------------------------------------------------------------

loc_10F4A:
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$800,d6
		bsr.w	FindFloor
		move.b	#-$80,d2
		bra.w	loc_10B76

; =============== S U B R O U T I N E =======================================


ObjCheckCeilingDist:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d2
		eori.w	#$F,d2
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$800,d6
		moveq	#$D,d5
		bsr.w	FindFloor
		move.b	(Primary_Angle).w,d3
		btst	#0,d3
		beq.s	locret_10FA4
		move.b	#-$80,d3

locret_10FA4:
		rts
; End of function ObjCheckCeilingDist

; ---------------------------------------------------------------------------

CheckLeftCeilingDist:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d2
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1F(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		move.b	#$40,d2
		bra.w	loc_10B3E

; =============== S U B R O U T I N E =======================================


sub_1100E:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d2
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	d1,-(sp)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		moveq	#0,d0
		move.b	$1E(a0),d0
		ext.w	d0
		add.w	d0,d2
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	(Secondary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.w	(sp)+,d0
		move.b	#$40,d2
		bra.w	loc_10B3E
; End of function sub_1100E


; =============== S U B R O U T I N E =======================================


CheckLeftWallDist:
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		tst.w	(Competition_mode).w
		bne.s	loc_110A4

loc_11084:
		subi.w	#$A,d3
		eori.w	#$F,d3
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.b	#$40,d2
		bra.w	loc_10B76
; ---------------------------------------------------------------------------

loc_110A4:
		move.b	$1F(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	(Primary_Angle).w,a4
		movea.w	#-$10,a3
		move.w	#$400,d6
		bsr.w	FindWall
		move.b	#$40,d2
		bra.w	loc_10B76
; End of function CheckLeftWallDist


; =============== S U B R O U T I N E =======================================


sub_110C8:
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_110DC
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_110DC:
		move.w	$10(a0),d3
		move.w	$14(a0),d2
		move.b	$1E(a0),d0
		ext.w	d0
		sub.w	d0,d3
		eori.w	#$F,d3
		lea	(Primary_Angle).w,a4
		move.b	#0,(a4)
		movea.w	#-$10,a3
		move.w	#$400,d6
		move.b	$47(a0),d5
		bsr.w	FindWall
		move.b	(Primary_Angle).w,d3
		btst	#0,d3
		beq.s	locret_11116
		move.b	#$40,d3

locret_11116:
		rts
; End of function sub_110C8


; =============== S U B R O U T I N E =======================================


ObjCheckLeftWallDist:
		add.w	$10(a0),d3

ObjCheckLeftWallDist_Part2:
		move.w	$14(a0),d2
		lea	(Primary_Angle).w,a4
		move.b	#0,(a4)
		movea.w	#-$10,a3
		move.w	#$400,d6
		moveq	#$D,d5
		bsr.w	FindWall
		move.b	(Primary_Angle).w,d3
		btst	#0,d3
		beq.s	locret_11144
		move.b	#$40,d3

locret_11144:
		rts
; End of function ObjCheckLeftWallDist

; ---------------------------------------------------------------------------
		rts

; =============== S U B R O U T I N E =======================================


TouchResponse_CompetitionMode:
		nop
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#4,d2
		moveq	#0,d5
		move.b	$1E(a0),d5
		subq.b	#3,d5
		sub.w	d5,d3
		move.w	#8,d4
		add.w	d5,d5
		bra.s	Touch_Process
; ---------------------------------------------------------------------------

TouchResponse:
		nop
		jsr	(Test_Ring_Collisions).l
		bsr.w	ShieldTouchResponse
		tst.b	$38(a0)
		bne.s	Touch_NoInstaShield
		move.b	$2B(a0),d0
		andi.b	#$73,d0
		bne.s	Touch_NoInstaShield
		cmpi.b	#1,$2F(a0)
		bne.s	Touch_NoInstaShield
		move.b	$2B(a0),d0
		move.w	d0,-(sp)
		bset	#1,$2B(a0)
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#$18,d2
		subi.w	#$18,d3
		move.w	#$30,d4
		move.w	#$30,d5
		bsr.s	Touch_Process
		move.w	(sp)+,d0
		btst	#1,d0
		bne.s	loc_111C0
		bclr	#1,$2B(a0)

loc_111C0:
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

Touch_NoInstaShield:
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#8,d2
		moveq	#0,d5
		move.b	$1E(a0),d5
		subq.b	#3,d5
		sub.w	d5,d3
		move.w	#$10,d4
		add.w	d5,d5

Touch_Process:
		lea	(Collision_response_list).w,a4
		move.w	(a4)+,d6
		beq.s	locret_111F6

Touch_Loop:
		movea.w	(a4)+,a1
		move.b	$28(a1),d0
		bne.s	Touch_Width

Touch_NextObj:
		subq.w	#2,d6
		bne.s	Touch_Loop
		moveq	#0,d0

locret_111F6:
		rts
; ---------------------------------------------------------------------------

Touch_Width:
		andi.w	#$3F,d0
		add.w	d0,d0
		lea	Touch_Sizes(pc,d0.w),a2
		moveq	#0,d1
		move.b	(a2)+,d1
		move.w	$10(a1),d0
		sub.w	d1,d0
		sub.w	d2,d0
		bcc.s	loc_11218
		add.w	d1,d1
		add.w	d1,d0
		bcs.s	Touch_Height
		bra.s	Touch_NextObj
; ---------------------------------------------------------------------------

loc_11218:
		cmp.w	d4,d0
		bhi.s	Touch_NextObj

Touch_Height:
		moveq	#0,d1
		move.b	(a2)+,d1
		move.w	$14(a1),d0
		sub.w	d1,d0
		sub.w	d3,d0
		bcc.s	loc_11234
		add.w	d1,d1
		add.w	d1,d0
		bcs.w	Touch_ChkValue
		bra.s	Touch_NextObj
; ---------------------------------------------------------------------------

loc_11234:
		cmp.w	d5,d0
		bhi.s	Touch_NextObj
		bra.w	Touch_ChkValue
; ---------------------------------------------------------------------------
Touch_Sizes:	dc.b    4,   4
		dc.b  $14, $14
		dc.b   $C, $14
		dc.b  $14,  $C
		dc.b    4, $10
		dc.b   $C, $12
		dc.b  $10, $10
		dc.b    6,   6
		dc.b  $18,  $C
		dc.b   $C, $10
		dc.b  $10,   8
		dc.b    8,   8
		dc.b  $14, $10
		dc.b  $14,   8
		dc.b   $E,  $E
		dc.b  $18, $18
		dc.b  $28, $10
		dc.b  $10, $18
		dc.b    8, $10
		dc.b  $20, $70
		dc.b  $40, $20
		dc.b  $80, $20
		dc.b  $20, $20
		dc.b    8,   8
		dc.b    4,   4
		dc.b  $20,   8
		dc.b   $C,  $C
		dc.b    8,   4
		dc.b  $18,   4
		dc.b  $28,   4
		dc.b    4,   8
		dc.b    4, $18
		dc.b    4, $28
		dc.b  $18, $18
		dc.b  $18, $18
		dc.b   $C, $18
		dc.b  $48,   8
		dc.b  $18, $28
		dc.b  $10,   4
		dc.b  $20,   2
		dc.b  $10, $1C
		dc.b   $C, $24
		dc.b  $10,   2
		dc.b    4, $40
		dc.b  $18, $40
		dc.b  $20, $10
		dc.b  $1C, $14
		dc.b  $10,   2
		dc.b  $10,   1
		dc.b    2,   8
; ---------------------------------------------------------------------------

Touch_ChkValue:
		move.b	$28(a1),d1
		andi.b	#-$40,d1
		beq.w	Touch_Enemy
		cmpi.b	#-$40,d1
		beq.w	Touch_Special
		tst.b	d1
		bmi.w	Touch_ChkHurt
		move.b	$28(a1),d0
		andi.b	#$3F,d0
		cmpi.b	#6,d0
		beq.s	Touch_Monitor
		move.b	(Player_1+invulnerability_timer).w,d0
		tst.w	(Competition_mode).w
		beq.s	loc_112D6
		move.b	$34(a0),d0

loc_112D6:
		cmpi.b	#$5A,d0
		bcc.w	locret_112E4
		move.b	#4,5(a1)

locret_112E4:
		rts
; ---------------------------------------------------------------------------

Touch_Monitor:
		tst.w	$1A(a0)
		bpl.s	loc_11312
		move.w	$14(a0),d0
		subi.w	#$10,d0
		cmp.w	$14(a1),d0
		bcs.s	locret_11334
		neg.w	$1A(a0)
		move.w	#-$180,$1A(a1)
		tst.b	$3C(a1)
		bne.s	locret_11334
		move.b	#4,$3C(a1)
		rts
; ---------------------------------------------------------------------------

loc_11312:
		cmpa.w	#-$5000,a0
		beq.s	loc_1131E
		tst.w	(Competition_mode).w
		beq.s	locret_11334

loc_1131E:
		cmpi.b	#2,$20(a0)
		bne.s	locret_11334
		neg.w	$1A(a0)
		move.b	#4,5(a1)
		move.w	a0,$42(a1)

locret_11334:
		rts
; ---------------------------------------------------------------------------

Touch_Enemy:
		btst	#1,$2B(a0)
		bne.s	loc_1138C
		cmpi.b	#9,$20(a0)
		beq.s	loc_1138C
		cmpi.b	#2,$20(a0)
		beq.s	loc_1138C
		cmpi.b	#1,$38(a0)
		bne.w	Touch_ChkHurt
		tst.b	$2F(a0)
		beq.w	Touch_ChkHurt
		btst	#6,$2A(a0)
		bne.w	Touch_ChkHurt
		move.w	$10(a0),d1
		move.w	$14(a0),d2
		sub.w	$10(a1),d1
		sub.w	$14(a1),d2
		jsr	(GetArcTan).l
		subi.b	#$20,d0
		cmpi.b	#$40,d0
		bcc.w	Touch_ChkHurt

loc_1138C:
		tst.b	$29(a1)
		beq.s	Touch_EnemyNormal
		neg.w	$18(a0)
		neg.w	$1A(a0)
		neg.w	$1C(a0)
		move.b	$28(a1),$25(a1)
		move.b	#0,$28(a1)
		subq.b	#1,$29(a1)
		bne.s	locret_113B6
		bset	#7,$2A(a1)

locret_113B6:
		rts
; ---------------------------------------------------------------------------

Touch_EnemyNormal:
		btst	#2,$2A(a1)
		beq.s	loc_113CA
		move.b	$3B(a1),d0
		movea.w	$3C(a1),a2
		bclr	d0,(a2)

loc_113CA:
		bset	#7,$2A(a1)
		moveq	#0,d0
		move.w	(Chain_bonus_counter).w,d0
		addq.w	#2,(Chain_bonus_counter).w
		cmpi.w	#6,d0
		bcs.s	loc_113E2
		moveq	#6,d0

loc_113E2:
		move.w	d0,$3E(a1)
		move.w	Enemy_Points(pc,d0.w),d0
		cmpi.w	#$20,(Chain_bonus_counter).w
		bcs.s	loc_113FC
		move.w	#$3E8,d0
		move.w	#$A,$3E(a1)

loc_113FC:
		movea.w	a0,a3
		bsr.w	HUD_AddToScore
		move.l	#Obj_Explosion,(a1)
		move.b	#0,5(a1)
		tst.w	$1A(a0)
		bmi.s	loc_11424
		move.w	$14(a0),d0
		cmp.w	$14(a1),d0
		bcc.s	loc_1142C
		neg.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_11424:
		addi.w	#$100,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_1142C:
		subi.w	#$100,$1A(a0)
		rts
; ---------------------------------------------------------------------------
Enemy_Points:	dc.w 10, 20, 50, 100
; ---------------------------------------------------------------------------
		bset	#7,$2A(a1)

Touch_ChkHurt:
		move.b	$2B(a0),d0
		andi.b	#$73,d0
		beq.s	Touch_ChkHurt_NoPowerUp
		and.b	$2B(a1),d0
		bne.s	Touch_ChkHurt_Return
		btst	#0,$2B(a0)
		bne.s	Touch_ChkHurt_HaveShield

Touch_ChkHurt2:
		btst	#1,$2B(a0)
		beq.s	Touch_Hurt

Touch_ChkHurt_Return:
		moveq	#-1,d0
		rts
; ---------------------------------------------------------------------------

Touch_ChkHurt_NoPowerUp:
		cmpi.b	#1,$2F(a0)
		bne.s	Touch_ChkHurt2

Touch_ChkHurt_HaveShield:
		move.b	$2B(a1),d0
		andi.b	#8,d0
		beq.s	Touch_ChkHurt2
		move.w	$10(a0),d1
		move.w	$14(a0),d2
		sub.w	$10(a1),d1
		sub.w	$14(a1),d2
		jsr	(GetArcTan).l
		jsr	(GetSineCosine).l
		muls.w	#-$800,d1
		asr.l	#8,d1
		move.w	d1,$18(a1)
		muls.w	#-$800,d0
		asr.l	#8,d0
		move.w	d0,$1A(a1)
		clr.b	$28(a1)
		bra.s	Touch_ChkHurt_Return
; ---------------------------------------------------------------------------

Touch_Hurt:
		nop
		tst.b	$34(a0)
		bne.s	Touch_ChkHurt_Return
		movea.l	a1,a2
; End of function TouchResponse_CompetitionMode


; =============== S U B R O U T I N E =======================================


HurtCharacter:
		move.w	(Ring_count).w,d0
		cmpa.w	#Player_1,a0
		beq.s	loc_114CC
		tst.w	(Competition_mode).w
		beq.s	loc_11504
		move.w	(Ring_count_P2).w,d0

loc_114CC:
		btst	#0,$2B(a0)
		bne.s	loc_114FE
		tst.b	$37(a0)
		bmi.s	loc_11504
		tst.w	d0
		beq.w	Kill_Character
		jsr	(Create_New_Sprite).l
		bne.s	loc_114FE
		move.l	#Obj_Bouncing_Ring,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	a0,$3E(a1)

loc_114FE:
		andi.b	#$8E,$2B(a0)

loc_11504:
		move.b	#4,5(a0)
		jsr	(Player_TouchFloor).l
		bset	#1,$2A(a0)
		move.w	#-$400,$1A(a0)
		move.w	#-$200,$18(a0)
		btst	#6,$2A(a0)
		beq.s	loc_11536
		move.w	#-$200,$1A(a0)
		move.w	#-$100,$18(a0)

loc_11536:
		move.w	$10(a0),d0
		cmp.w	$10(a2),d0
		bcs.s	loc_11544
		neg.w	$18(a0)

loc_11544:
		move.w	#0,$1C(a0)
		move.b	#$1A,$20(a0)
		move.b	#$78,$34(a0)
		moveq	#signextendB(sfx_Death),d0
		jsr	(Play_Sound_2).l
		moveq	#-1,d0
		rts
; End of function HurtCharacter


; =============== S U B R O U T I N E =======================================


Kill_Character:
		tst.w	(Debug_placement_mode).w
		bne.s	loc_115A8
		clr.b	$2B(a0)
		clr.b	$37(a0)
		move.b	#6,5(a0)
		jsr	(Player_TouchFloor).l
		bset	#1,$2A(a0)
		move.w	#-$700,$1A(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1C(a0)
		move.b	#$18,$20(a0)
		bset	#7,$A(a0)
		moveq	#signextendB(sfx_Death),d0
		jsr	(Play_Sound_2).l

loc_115A8:
		moveq	#-1,d0
		rts
; End of function Kill_Character

; ---------------------------------------------------------------------------

Touch_Special:
		move.b	$28(a1),d1
		andi.b	#$3F,d1
		cmpi.b	#7,d1
		beq.s	loc_115EC
		cmpi.b	#6,d1
		beq.s	loc_115EC
		cmpi.b	#$A,d1
		beq.s	loc_115EC
		cmpi.b	#$C,d1
		beq.s	loc_115EC
		cmpi.b	#$15,d1
		beq.s	loc_115EC
		cmpi.b	#$16,d1
		beq.s	loc_115EC
		cmpi.b	#$17,d1
		beq.s	loc_115EC
		cmpi.b	#$18,d1
		beq.s	loc_115EC
		cmpi.b	#$21,d1
		beq.s	loc_115EC
		rts
; ---------------------------------------------------------------------------

loc_115EC:
		move.w	a0,d1
		subi.w	#Object_RAM,d1
		beq.s	loc_115F8
		addq.b	#1,$29(a1)

loc_115F8:
		addq.b	#1,$29(a1)
		rts

; =============== S U B R O U T I N E =======================================


Add_SpriteToCollisionResponseList:
		lea	(Collision_response_list).w,a1
		cmpi.w	#$7E,(a1)
		bcc.s	locret_1160E
		addq.w	#2,(a1)
		adda.w	(a1),a1
		move.w	a0,(a1)

locret_1160E:
		rts
; End of function Add_SpriteToCollisionResponseList


; =============== S U B R O U T I N E =======================================


ShieldTouchResponse:
		move.b	$2B(a0),d0
		andi.b	#$71,d0
		beq.s	locret_1164E
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#$18,d2
		subi.w	#$18,d3
		move.w	#$30,d4
		move.w	#$30,d5
		lea	(Collision_response_list).w,a4
		move.w	(a4)+,d6
		beq.s	locret_1164E

ShieldTouch_Loop:
		movea.w	(a4)+,a1
		move.b	$28(a1),d0
		andi.b	#-$40,d0
		cmpi.b	#-$80,d0
		beq.s	ShieldTouch_Width

ShieldTouch_NextObj:
		subq.w	#2,d6
		bne.s	ShieldTouch_Loop

locret_1164E:
		rts
; ---------------------------------------------------------------------------

ShieldTouch_Width:
		move.b	$28(a1),d0
		andi.w	#$3F,d0
		beq.s	ShieldTouch_NextObj
		add.w	d0,d0
		lea	(Touch_Sizes).l,a2
		lea	(a2,d0.w),a2
		moveq	#0,d1
		move.b	(a2)+,d1
		move.w	$10(a1),d0
		sub.w	d1,d0
		sub.w	d2,d0
		bcc.s	loc_1167C
		add.w	d1,d1
		add.w	d1,d0
		bcs.s	ShieldTouch_Height
		bra.s	ShieldTouch_NextObj
; ---------------------------------------------------------------------------

loc_1167C:
		cmp.w	d4,d0
		bhi.s	ShieldTouch_NextObj

ShieldTouch_Height:
		moveq	#0,d1
		move.b	(a2)+,d1
		move.w	$14(a1),d0
		sub.w	d1,d0
		sub.w	d3,d0
		bcc.s	loc_11698
		add.w	d1,d1
		add.w	d1,d0
		bcs.w	loc_1169C
		bra.s	ShieldTouch_NextObj
; ---------------------------------------------------------------------------

loc_11698:
		cmp.w	d5,d0
		bhi.s	ShieldTouch_NextObj

loc_1169C:
		move.b	$2B(a1),d0
		andi.b	#8,d0
		beq.s	ShieldTouch_NextObj
		move.w	$10(a0),d1
		move.w	$14(a0),d2
		sub.w	$10(a1),d1
		sub.w	$14(a1),d2
		jsr	(GetArcTan).l
		jsr	(GetSineCosine).l
		muls.w	#-$800,d1
		asr.l	#8,d1
		move.w	d1,$18(a1)
		muls.w	#-$800,d0
		asr.l	#8,d0
		move.w	d0,$1A(a1)
		clr.b	$28(a1)
		rts
; End of function ShieldTouchResponse

; ---------------------------------------------------------------------------

Obj_Sonic2P:
		cmpa.w	#Player_1,a0
		bne.s	loc_1170A
		lea	(Max_speed).w,a4
		lea	(Distance_from_top).w,a5
		lea	(Dust).w,a6
		move.b	(Player_2+character_id).w,d0
		cmp.b	$38(a0),d0
		bne.s	loc_116FE
		bchg	#3,4(a0)

loc_116FE:
		tst.w	(Debug_placement_mode).w
		beq.s	loc_11726
		jmp	(DebugMode).l
; ---------------------------------------------------------------------------

loc_1170A:
		lea	(Max_speed_P2).w,a4
		lea	(Distance_from_top_P2).w,a5
		lea	(Dust_P2).w,a6
		move.b	(Player_1+character_id).w,d0
		cmp.b	$38(a0),d0
		bne.s	loc_11726
		bchg	#4,4(a0)

loc_11726:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_11734(pc,d0.w),d1
		jmp	off_11734(pc,d1.w)
; ---------------------------------------------------------------------------
off_11734:	dc.w loc_11740-off_11734
		dc.w loc_11858-off_11734
		dc.w loc_13142-off_11734
		dc.w loc_131FE-off_11734
		dc.w loc_133D4-off_11734
		dc.w loc_133E8-off_11734
; ---------------------------------------------------------------------------

loc_11740:
		addq.b	#2,5(a0)
		move.b	#$B,$1E(a0)
		move.b	#5,$1F(a0)
		move.b	#$B,$44(a0)
		move.b	#5,$45(a0)
		move.w	#$100,8(a0)
		move.b	#$C,7(a0)
		move.b	#$C,6(a0)
		move.b	#4,4(a0)
		lea	(Character_Speeds).l,a1
		moveq	#0,d0
		move.b	$38(a0),d0
		lsl.w	#3,d0
		lea	(a1,d0.w),a1
		move.w	(a1)+,(a4)
		move.w	(a1)+,2(a4)
		move.w	(a1)+,4(a4)
		tst.b	(Last_star_post_hit).w
		bne.w	loc_1183C
		move.b	#$C,$46(a0)
		move.b	#$D,$47(a0)
		cmpa.w	#Player_1,a0
		bne.s	loc_117F4
		move.w	#ArtTile_Player_1,$A(a0)
		move.l	#Map_Sonic2P,$C(a0)
		tst.b	$38(a0)
		beq.s	loc_117CC
		move.l	#Map_Knuckles2P,$C(a0)
		addi.w	#$2000,$A(a0)

loc_117CC:
		cmpi.b	#$12,(Current_zone).w
		bne.s	loc_117DA
		ori.w	#$8000,$A(a0)

loc_117DA:
		move.w	$10(a0),(Saved_X_pos).w
		move.w	$14(a0),(Saved_Y_pos).w
		move.w	$A(a0),(Saved_art_tile).w
		move.w	$46(a0),(Saved_solid_bits).w
		bra.s	loc_1183C
; ---------------------------------------------------------------------------

loc_117F4:
		move.w	#ArtTile_Player_2,$A(a0)
		move.l	#Map_Sonic2P,$C(a0)
		tst.b	$38(a0)
		beq.s	loc_11816
		move.l	#Map_Knuckles2P,$C(a0)
		addi.w	#$2000,$A(a0)

loc_11816:
		cmpi.b	#$12,(Current_zone).w
		bne.s	loc_11824
		ori.w	#$8000,$A(a0)

loc_11824:
		move.w	$10(a0),(Saved2_X_pos).w
		move.w	$14(a0),(Saved2_Y_pos).w
		move.w	$A(a0),(Saved2_art_tile).w
		move.w	$46(a0),(Saved2_solid_bits).w

loc_1183C:
		move.b	#0,$30(a0)
		move.b	#4,$31(a0)
		move.b	#0,(Super_Sonic_Knux_flag).w
		move.b	#$1E,$2C(a0)
		bsr.w	Reset_Player_Position_Array

loc_11858:
		tst.w	(Debug_mode_flag).w
		beq.s	loc_11878
		cmpa.w	#Player_1,a0
		bne.s	loc_11878
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_11878
		move.w	#1,(Debug_placement_mode).w
		clr.b	(Ctrl_1_locked).w
		rts
; ---------------------------------------------------------------------------

loc_11878:
		cmpa.w	#Player_1,a0
		bne.s	loc_1188C
		tst.b	(Ctrl_1_locked).w
		bne.s	loc_11898
		move.w	(Ctrl_1).w,(Ctrl_1_logical).w
		bra.s	loc_11898
; ---------------------------------------------------------------------------

loc_1188C:
		tst.b	(Ctrl_2_locked).w
		bne.s	loc_11898
		move.w	(Ctrl_2).w,(Ctrl_1_logical).w

loc_11898:
		bsr.w	Sonic_Display
		btst	#0,$2E(a0)
		bne.s	loc_118B6
		moveq	#0,d0
		move.b	$2A(a0),d0
		andi.w	#6,d0
		move.w	off_11906(pc,d0.w),d1
		jsr	off_11906(pc,d1.w)

loc_118B6:
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_118C6
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)

loc_118C6:
		move.w	(Screen_X_wrap_value).w,d0
		and.w	d0,$10(a0)
		addi.w	#$400,$10(a0)
		bsr.w	Sonic_RecordPos
		move.b	(Primary_Angle).w,$3A(a0)
		move.b	(Secondary_Angle).w,$3B(a0)
		btst	#1,$2E(a0)
		bne.s	loc_118F4
		bsr.w	Animate_SonicKnuckles_2P
		bsr.w	SonicKnuckles2P_Load_PLC

loc_118F4:
		move.b	$2E(a0),d0
		andi.b	#-$60,d0
		bne.s	locret_11904
		jsr	(TouchResponse_CompetitionMode).l

locret_11904:
		rts
; ---------------------------------------------------------------------------
off_11906:	dc.w loc_1190E-off_11906
		dc.w loc_11980-off_11906
		dc.w loc_119AE-off_11906
		dc.w loc_119D0-off_11906
; ---------------------------------------------------------------------------

loc_1190E:
		move.b	(Ctrl_1_pressed_logical).w,d0
		andi.b	#$70,d0
		bne.s	loc_1195C
		cmpi.b	#$A,$20(a0)
		beq.s	locret_1197E
		cmpi.b	#$B,$20(a0)
		beq.s	locret_1197E
		cmpi.b	#5,$20(a0)
		bne.s	loc_1195C
		cmpi.b	#$1E,$23(a0)
		bcs.s	loc_1195C
		bsr.w	Player_SlopeResist
		move.b	(Ctrl_1_held_logical).w,d0
		andi.b	#$7F,d0
		beq.s	loc_11976
		move.b	#$A,$20(a0)
		cmpi.b	#-$54,$23(a0)
		bcs.s	loc_11976
		move.b	#$B,$20(a0)
		bra.s	loc_11976
; ---------------------------------------------------------------------------

loc_1195C:
		bsr.w	sub_11A64
		bsr.w	Sonic_Jump
		bsr.w	Player_SlopeResist
		bsr.w	Sonic_Move
		bsr.w	sub_119FE
		jsr	(MoveSprite2).l

loc_11976:
		bsr.w	Player_AnglePos
		bsr.w	Player_SlopeRepel

locret_1197E:
		rts
; ---------------------------------------------------------------------------

loc_11980:
		bsr.w	Sonic_JumpHeight
		bsr.w	Sonic_ChgJumpDir
		jsr	(MoveSprite).l
		btst	#6,$2A(a0)
		beq.s	loc_1199C
		subi.w	#$28,$1A(a0)

loc_1199C:
		bsr.w	Player_JumpAngle
		movem.l	a4-a6,-(sp)
		bsr.w	Sonic_DoLevelCollision
		movem.l	(sp)+,a4-a6
		rts
; ---------------------------------------------------------------------------

loc_119AE:
		tst.b	$3D(a0)
		bne.s	loc_119B8
		bsr.w	Sonic_Jump

loc_119B8:
		bsr.w	Player_RollRepel
		bsr.w	Sonic_RollSpeed
		jsr	(MoveSprite2).l
		bsr.w	Player_AnglePos
		bsr.w	Player_SlopeRepel
		rts
; ---------------------------------------------------------------------------

loc_119D0:
		bsr.w	Sonic_JumpHeight
		bsr.w	Sonic_ChgJumpDir
		jsr	(MoveSprite).l
		btst	#6,$2A(a0)
		beq.s	loc_119EC
		subi.w	#$28,$1A(a0)

loc_119EC:
		bsr.w	Player_JumpAngle
		movem.l	a4-a6,-(sp)
		bsr.w	Sonic_DoLevelCollision
		movem.l	(sp)+,a4-a6
		rts

; =============== S U B R O U T I N E =======================================


sub_119FE:
		tst.b	$2B(a0)
		bmi.s	locret_11A24
		move.w	$1C(a0),d0
		bpl.s	loc_11A0C
		neg.w	d0

loc_11A0C:
		cmpi.w	#$80,d0
		bcs.s	locret_11A24
		move.b	(Ctrl_1_held_logical).w,d0
		andi.b	#$C,d0
		bne.s	locret_11A24
		btst	#1,(Ctrl_1_held_logical).w
		bne.s	loc_11A26

locret_11A24:
		rts
; ---------------------------------------------------------------------------

loc_11A26:
		btst	#2,$2A(a0)
		beq.s	loc_11A30
		rts
; ---------------------------------------------------------------------------

loc_11A30:
		bset	#2,$2A(a0)
		move.b	#7,$1E(a0)
		move.b	#3,$1F(a0)
		move.b	#2,$20(a0)
		addq.w	#4,$14(a0)
		move.w	#sfx_Roll,d0
		jsr	(Play_Sound_2).l
		tst.w	$1C(a0)
		bne.s	locret_11A62
		move.w	#$200,$1C(a0)

locret_11A62:
		rts
; End of function sub_119FE


; =============== S U B R O U T I N E =======================================


sub_11A64:
		tst.b	$3D(a0)
		bne.s	loc_11AB0
		cmpi.b	#8,$20(a0)
		bne.s	locret_11AAE
		move.b	(Ctrl_1_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	locret_11AAE
		move.b	#9,$20(a0)
		move.w	#$FF00|sfx_Spindash,d0
		jsr	(Play_Sound_2).l
		addq.l	#4,sp
		move.b	#1,$3D(a0)
		move.w	#0,$3E(a0)
		cmpi.b	#$C,$2C(a0)
		bcs.s	loc_11AAA
		move.b	#2,$20(a6)

loc_11AAA:
		bsr.w	Player_AnglePos

locret_11AAE:
		rts
; ---------------------------------------------------------------------------

loc_11AB0:
		move.b	(Ctrl_1_held_logical).w,d0
		btst	#1,d0
		bne.w	loc_11B5C
		move.b	#7,$1E(a0)
		move.b	#3,$1F(a0)
		move.b	#2,$20(a0)
		addq.w	#4,$14(a0)
		move.b	#0,$3D(a0)
		moveq	#0,d0
		move.b	$3E(a0),d0
		add.w	d0,d0
		move.w	word_11B38(pc,d0.w),$1C(a0)
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_11AF2
		move.w	word_11B4A(pc,d0.w),$1C(a0)

loc_11AF2:
		move.w	$1C(a0),d0
		subi.w	#$800,d0
		add.w	d0,d0
		andi.w	#$1F00,d0
		neg.w	d0
		addi.w	#$2000,d0
		lea	(H_scroll_frame_offset).w,a1
		cmpa.w	#Player_1,a0
		beq.s	loc_11B14
		lea	(H_scroll_frame_offset_P2).w,a1

loc_11B14:
		move.w	d0,(a1)
		btst	#0,$2A(a0)
		beq.s	loc_11B22
		neg.w	$1C(a0)

loc_11B22:
		bset	#2,$2A(a0)
		move.b	#0,$20(a6)
		moveq	#signextendB(sfx_Dash),d0
		jsr	(Play_Sound_2).l
		bra.s	loc_11BA4
; ---------------------------------------------------------------------------
word_11B38:	dc.w  $800
		dc.w  $880
		dc.w  $900
		dc.w  $980
		dc.w  $A00
		dc.w  $A80
		dc.w  $B00
		dc.w  $B80
		dc.w  $C00
word_11B4A:	dc.w  $B00
		dc.w  $B80
		dc.w  $C00
		dc.w  $C80
		dc.w  $D00
		dc.w  $D80
		dc.w  $E00
		dc.w  $E80
		dc.w  $F00
; ---------------------------------------------------------------------------

loc_11B5C:
		tst.w	$3E(a0)
		beq.s	loc_11B74
		move.w	$3E(a0),d0
		lsr.w	#5,d0
		sub.w	d0,$3E(a0)
		bcc.s	loc_11B74
		move.w	#0,$3E(a0)

loc_11B74:
		move.b	(Ctrl_1_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	loc_11BA4
		move.w	#$900,$20(a0)
		move.w	#$FF00|sfx_Spindash,d0
		jsr	(Play_Sound_2).l
		addi.w	#$200,$3E(a0)
		cmpi.w	#$800,$3E(a0)
		bcs.s	loc_11BA4
		move.w	#$800,$3E(a0)

loc_11BA4:
		addq.l	#4,sp
		cmpi.w	#$60,(a5)
		beq.s	loc_11BB2
		bcc.s	loc_11BB0
		addq.w	#4,(a5)

loc_11BB0:
		subq.w	#2,(a5)

loc_11BB2:
		bsr.w	Player_AnglePos
		rts
; End of function sub_11A64

; ---------------------------------------------------------------------------

Obj_Sonic:
		lea	(Max_speed).w,a4
		lea	(Distance_from_top).w,a5
		lea	(Dust).w,a6
		tst.w	(Debug_placement_mode).w
		beq.s	Sonic_Normal
		cmpi.b	#1,(Debug_placement_type).w
		beq.s	JmpTo_DebugMode
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_11BE0
		move.w	#0,(Debug_placement_mode).w

loc_11BE0:
		addq.b	#1,$22(a0)
		cmpi.b	#-$27,$22(a0)
		bcs.s	loc_11BF2
		move.b	#0,$22(a0)

loc_11BF2:
		bsr.w	Sonic_Load_PLC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

JmpTo_DebugMode:
		jmp	(DebugMode).l
; ---------------------------------------------------------------------------

Sonic_Normal:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	Sonic_Index(pc,d0.w),d1
		jmp	Sonic_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Sonic_Index:	dc.w Sonic_Init-Sonic_Index
		dc.w Sonic_Control-Sonic_Index
		dc.w loc_13142-Sonic_Index
		dc.w loc_131FE-Sonic_Index
		dc.w loc_133D4-Sonic_Index
		dc.w loc_133E8-Sonic_Index
		dc.w loc_13404-Sonic_Index
; ---------------------------------------------------------------------------

Sonic_Init:
		addq.b	#2,5(a0)
		move.b	#$13,$1E(a0)
		move.b	#9,$1F(a0)
		move.b	#$13,$44(a0)
		move.b	#9,$45(a0)
		move.l	#Map_Sonic,$C(a0)
		move.w	#$100,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.b	#4,4(a0)
		move.b	#0,$38(a0)
		move.w	#$600,(a4)
		move.w	#$C,2(a4)
		move.w	#$80,4(a4)
		tst.b	(Last_star_post_hit).w
		bne.s	Sonic_Init_Continued
		move.w	#ArtTile_Player_1,$A(a0)
		move.b	#$C,$46(a0)
		move.b	#$D,$47(a0)
		cmpi.b	#2,(Special_bonus_entry_flag).w
		beq.s	Sonic_Init_Continued
		move.w	$10(a0),(Saved_X_pos).w
		move.w	$14(a0),(Saved_Y_pos).w
		move.w	$A(a0),(Saved_art_tile).w
		move.w	$46(a0),(Saved_solid_bits).w

Sonic_Init_Continued:
		move.b	#0,$30(a0)
		move.b	#4,$31(a0)
		move.b	#0,(Super_Sonic_Knux_flag).w
		move.b	#$1E,$2C(a0)
		subi.w	#$20,$10(a0)
		addi.w	#4,$14(a0)
		bsr.w	Reset_Player_Position_Array
		addi.w	#$20,$10(a0)
		subi.w	#4,$14(a0)
		rts
; ---------------------------------------------------------------------------

Sonic_Control:
		tst.w	(Debug_mode_flag).w
		beq.s	loc_11D06
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_11D06
		move.w	#1,(Debug_placement_mode).w
		clr.b	(Ctrl_1_locked).w
		btst	#5,(Ctrl_1_held).w
		beq.s	locret_11D04
		move.w	#2,(Debug_placement_mode).w

locret_11D04:
		rts
; ---------------------------------------------------------------------------

loc_11D06:
		tst.b	(Ctrl_1_locked).w
		bne.s	loc_11D12
		move.w	(Ctrl_1).w,(Ctrl_1_logical).w

loc_11D12:
		btst	#0,$2E(a0)
		beq.s	loc_11D22
		move.b	#0,$2F(a0)
		bra.s	loc_11D3C
; ---------------------------------------------------------------------------

loc_11D22:
		movem.l	a4-a6,-(sp)
		moveq	#0,d0
		move.b	$2A(a0),d0
		andi.w	#6,d0
		move.w	Sonic_Modes(pc,d0.w),d1
		jsr	Sonic_Modes(pc,d1.w)
		movem.l	(sp)+,a4-a6

loc_11D3C:
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_11D4C
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)

loc_11D4C:
		bsr.s	Sonic_Display
		bsr.w	Sonic_Super
		bsr.w	Sonic_RecordPos
		bsr.w	Sonic_Water
		move.b	(Primary_Angle).w,$3A(a0)
		move.b	(Secondary_Angle).w,$3B(a0)
		tst.b	(WindTunnel_flag).w
		beq.s	loc_11D78
		tst.b	$20(a0)
		bne.s	loc_11D78
		move.b	$21(a0),$20(a0)

loc_11D78:
		btst	#1,$2E(a0)
		bne.s	loc_11D88
		bsr.w	Animate_Sonic
		bsr.w	Sonic_Load_PLC

loc_11D88:
		move.b	$2E(a0),d0
		andi.b	#$A0,d0
		bne.s	locret_11D98
		jsr	(TouchResponse).l

locret_11D98:
		rts
; ---------------------------------------------------------------------------
Sonic_Modes:	dc.w Sonic_MdNormal-Sonic_Modes
		dc.w Sonic_MdAir-Sonic_Modes
		dc.w Sonic_MdRoll-Sonic_Modes
		dc.w Sonic_MdJump-Sonic_Modes

; =============== S U B R O U T I N E =======================================


Sonic_Display:
		move.b	$34(a0),d0
		beq.s	loc_11DB0
		subq.b	#1,$34(a0)
		lsr.b	#3,d0
		bcc.s	loc_11DB6

loc_11DB0:
		jsr	(Draw_Sprite).l

loc_11DB6:
		btst	#1,$2B(a0)
		beq.s	Sonic_ChkShoes
		tst.b	$35(a0)
		beq.s	Sonic_ChkShoes
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#7,d0
		bne.s	Sonic_ChkShoes
		subq.b	#1,$35(a0)
		bne.s	Sonic_ChkShoes
		tst.b	(Boss_flag).w
		bne.s	Sonic_RmvInvin
		cmpi.b	#$C,$2C(a0)
		bcs.s	Sonic_RmvInvin
		move.w	(Level_music).w,d0
		jsr	(Play_Sound).l

Sonic_RmvInvin:
		bclr	#1,$2B(a0)

Sonic_ChkShoes:
		btst	#2,$2B(a0)
		beq.s	Sonic_ExitChk
		tst.b	$36(a0)
		beq.s	Sonic_ExitChk
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#7,d0
		bne.s	Sonic_ExitChk
		subq.b	#1,$36(a0)
		bne.s	Sonic_ExitChk
		tst.w	(Competition_mode).w
		bne.s	Sonic_ChkShoesCompetition
		move.w	#$600,(a4)
		move.w	#$C,2(a4)
		move.w	#$80,4(a4)
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_11E3C
		move.w	#$A00,(a4)
		move.w	#$30,2(a4)
		move.w	#$100,4(a4)

loc_11E3C:
		bclr	#2,$2B(a0)
		moveq	#0,d0
		jmp	(Change_Music_Tempo).l
; ---------------------------------------------------------------------------

Sonic_ExitChk:
		rts
; ---------------------------------------------------------------------------

Sonic_ChkShoesCompetition:
		lea	(Character_Speeds).l,a1
		moveq	#0,d0
		move.b	$38(a0),d0
		lsl.w	#3,d0
		lea	(a1,d0.w),a1
		move.w	(a1)+,(a4)
		move.w	(a1)+,2(a4)
		move.w	(a1)+,4(a4)
		bclr	#2,$2B(a0)
		rts
; End of function Sonic_Display


; =============== S U B R O U T I N E =======================================


Sonic_RecordPos:
		tst.w	(Competition_mode).w
		bne.s	Sonic_RecordPosCompetition
		cmpa.w	#Player_1,a0
		bne.s	locret_11EA4
		move.w	(Pos_table_index).w,d0
		lea	(Pos_table).w,a1
		lea	(a1,d0.w),a1
		move.w	$10(a0),(a1)+
		move.w	$14(a0),(a1)+
		addq.b	#4,(Pos_table_index+1).w
		lea	(Stat_table).w,a1
		lea	(a1,d0.w),a1
		move.w	(Ctrl_1_logical).w,(a1)+
		move.w	$2A(a0),(a1)+

locret_11EA4:
		rts
; ---------------------------------------------------------------------------

Sonic_RecordPosCompetition:
		cmpa.w	#Player_1,a0
		bne.s	Sonic_RecordPosCompetitionP2
		move.w	(Pos_table_index).w,d0
		lea	(Pos_table).w,a1
		lea	(a1,d0.w),a1
		move.w	$10(a0),(a1)+
		move.w	$14(a0),(a1)+
		addq.b	#4,(Pos_table_index+1).w
		rts
; ---------------------------------------------------------------------------

Sonic_RecordPosCompetitionP2:
		move.w	(Pos_table_index_P2).w,d0
		lea	(Stat_table).w,a1
		lea	(a1,d0.w),a1
		move.w	$10(a0),(a1)+
		move.w	$14(a0),(a1)+
		addq.b	#4,(Pos_table_index_P2+1).w
		rts
; End of function Sonic_RecordPos


; =============== S U B R O U T I N E =======================================


Reset_Player_Position_Array:
		cmpa.w	#-$5000,a0
		bne.s	Reset_Player_Position_ArrayP2
		lea	(Pos_table).w,a1
		lea	(Stat_table).w,a2
		move.w	#$3F,d0

loc_11EF2:
		move.w	$10(a0),(a1)+
		move.w	$14(a0),(a1)+
		move.l	#0,(a2)+
		dbf	d0,loc_11EF2
		move.w	#0,(Pos_table_index).w

Reset_Player_Position_ArrayP2:
		tst.w	(Competition_mode).w
		beq.s	locret_11F2A
		lea	(Stat_table).w,a1
		move.w	#$3F,d0

loc_11F18:
		move.w	$10(a0),(a1)+
		move.w	$14(a0),(a1)+
		dbf	d0,loc_11F18
		move.w	#0,(Pos_table_index_P2).w

locret_11F2A:
		rts
; End of function Reset_Player_Position_Array


; =============== S U B R O U T I N E =======================================


Sonic_Water:
		tst.b	(Water_flag).w
		bne.s	Sonic_InWater

locret_11F32:
		rts
; ---------------------------------------------------------------------------

Sonic_InWater:
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bge.s	Sonic_OutWater
		bset	#6,$2A(a0)
		bne.s	locret_11F32
		addq.b	#1,(Water_entered_counter).w
		movea.l	a0,a1
		bsr.w	Player_ResetAirTimer
		move.l	#Obj_Air_CountDown,(Breathing_bubbles).w
		move.b	#$81,(Breathing_bubbles+subtype).w
		move.l	a0,(Breathing_bubbles+$40).w
		move.w	#$300,(a4)
		move.w	#6,2(a4)
		move.w	#$40,4(a4)
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_11F88
		move.w	#$500,(a4)
		move.w	#$18,2(a4)
		move.w	#$80,4(a4)

loc_11F88:
		tst.b	$2E(a0)
		bne.s	locret_11F32
		asr	$18(a0)
		asr	$1A(a0)
		asr	$1A(a0)
		beq.s	locret_11F32
		move.w	#$100,$20(a6)
		move.w	#sfx_Splash,d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

Sonic_OutWater:
		bclr	#6,$2A(a0)
		beq.w	locret_11F32
		addq.b	#1,(Water_entered_counter).w
		movea.l	a0,a1
		bsr.w	Player_ResetAirTimer
		move.w	#$600,(a4)
		move.w	#$C,2(a4)
		move.w	#$80,4(a4)
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_11FE6
		move.w	#$A00,(a4)
		move.w	#$30,2(a4)
		move.w	#$100,4(a4)

loc_11FE6:
		cmpi.b	#4,5(a0)
		beq.s	loc_12002
		tst.b	$2E(a0)
		bne.s	loc_12002
		move.w	$1A(a0),d0
		cmpi.w	#-$400,d0
		blt.s	loc_12002
		asl	$1A(a0)

loc_12002:
		cmpi.b	#$1C,$20(a0)
		beq.w	locret_11F32
		tst.w	$1A(a0)
		beq.w	locret_11F32
		move.w	#$100,$20(a6)
		cmpi.w	#-$1000,$1A(a0)
		bgt.s	loc_12028
		move.w	#-$1000,$1A(a0)

loc_12028:
		move.w	#sfx_Splash,d0
		jmp	(Play_Sound_2).l
; End of function Sonic_Water

; ---------------------------------------------------------------------------

Sonic_MdNormal:
		bsr.w	Sonic_Spindash
		bsr.w	Sonic_Jump
		bsr.w	Player_SlopeResist
		bsr.w	Sonic_Move
		bsr.w	Sonic_Roll
		bsr.w	Player_LevelBound
		jsr	(MoveSprite2).l
		bsr.w	Player_AnglePos
		bsr.w	Player_SlopeRepel
		tst.b	(Background_collision_flag).w
		beq.s	locret_1207C
		bsr.w	sub_10BA2
		tst.w	d1
		bmi.w	Kill_Character
		movem.l	a4-a6,-(sp)
		bsr.w	CheckLeftWallDist
		movem.l	(sp)+,a4-a6
		tst.w	d1
		bpl.s	locret_1207C
		sub.w	d1,$10(a0)

locret_1207C:
		rts
; ---------------------------------------------------------------------------

Sonic_MdAir:
		bsr.w	Sonic_JumpHeight
		bsr.w	Sonic_ChgJumpDir
		bsr.w	Player_LevelBound
		jsr	(MoveSprite).l
		btst	#6,$2A(a0)
		beq.s	loc_1209E
		subi.w	#$28,$1A(a0)

loc_1209E:
		bsr.w	Player_JumpAngle
		bsr.w	Sonic_DoLevelCollision
		rts
; ---------------------------------------------------------------------------

Sonic_MdRoll:
		tst.b	$3D(a0)
		bne.s	loc_120B2
		bsr.w	Sonic_Jump

loc_120B2:
		bsr.w	Player_RollRepel
		bsr.w	Sonic_RollSpeed
		bsr.w	Player_LevelBound
		jsr	(MoveSprite2).l
		bsr.w	Player_AnglePos
		bsr.w	Player_SlopeRepel
		tst.b	(Background_collision_flag).w
		beq.s	locret_120F0
		bsr.w	sub_10BA2
		tst.w	d1
		bmi.w	Kill_Character
		movem.l	a4-a6,-(sp)
		bsr.w	CheckLeftWallDist
		movem.l	(sp)+,a4-a6
		tst.w	d1
		bpl.s	locret_120F0
		sub.w	d1,$10(a0)

locret_120F0:
		rts
; ---------------------------------------------------------------------------

Sonic_MdJump:
		bsr.w	Sonic_JumpHeight
		bsr.w	Sonic_ChgJumpDir
		bsr.w	Player_LevelBound
		jsr	(MoveSprite).l
		btst	#6,$2A(a0)
		beq.s	loc_12112
		subi.w	#$28,$1A(a0)

loc_12112:
		bsr.w	Player_JumpAngle
		bsr.w	Sonic_DoLevelCollision
		rts

; =============== S U B R O U T I N E =======================================


Sonic_Move:
		move.w	(a4),d6
		move.w	2(a4),d5
		move.w	4(a4),d4
		tst.b	$2B(a0)
		bmi.w	loc_123D6
		tst.w	$32(a0)
		bne.w	loc_1238C
		btst	#2,(Ctrl_1_held_logical).w
		beq.s	Sonic_NotLeft
		bsr.w	sub_12480

Sonic_NotLeft:
		btst	#3,(Ctrl_1_held_logical).w
		beq.s	Sonic_NotRight
		bsr.w	sub_1250C

Sonic_NotRight:
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#-$40,d0
		bne.w	loc_1238C
		tst.w	$1C(a0)
		bne.w	loc_1238C
		bclr	#5,$2A(a0)
		move.b	#5,$20(a0)
		btst	#3,$2A(a0)
		beq.w	Sonic_Balance
		movea.w	$42(a0),a1
		tst.b	$2A(a1)
		bmi.w	loc_12338
		moveq	#0,d1
		move.b	7(a1),d1
		move.w	d1,d2
		add.w	d2,d2
		subq.w	#2,d2
		add.w	$10(a0),d1
		sub.w	$10(a1),d1
		tst.b	(Super_Sonic_Knux_flag).w
		bne.w	SuperSonic_Balance
		cmpi.w	#2,d1
		blt.s	Sonic_BalanceOnObjLeft
		cmp.w	d2,d1
		bge.s	Sonic_BalanceOnObjRight
		bra.w	loc_12338
; ---------------------------------------------------------------------------

SuperSonic_Balance:
		cmpi.w	#2,d1
		blt.w	loc_1232A
		cmp.w	d2,d1
		bge.w	loc_1231A
		bra.w	loc_12338
; ---------------------------------------------------------------------------

Sonic_BalanceOnObjRight:
		btst	#0,$2A(a0)
		bne.s	loc_121E4
		move.b	#6,$20(a0)
		addq.w	#6,d2
		cmp.w	d2,d1
		blt.w	loc_1238C
		move.b	#$C,$20(a0)
		bra.w	loc_1238C
; ---------------------------------------------------------------------------

loc_121E4:
		bclr	#0,$2A(a0)
		move.b	#6,$20(a0)
		addq.w	#6,d2
		cmp.w	d2,d1
		blt.w	loc_1238C
		move.b	#$C,$20(a0)
		bra.w	loc_1238C
; ---------------------------------------------------------------------------

Sonic_BalanceOnObjLeft:
		btst	#0,$2A(a0)
		beq.s	loc_12222
		move.b	#6,$20(a0)
		cmpi.w	#-4,d1
		bge.w	loc_1238C
		move.b	#$C,$20(a0)
		bra.w	loc_1238C
; ---------------------------------------------------------------------------

loc_12222:
		bset	#0,$2A(a0)
		move.b	#6,$20(a0)
		cmpi.w	#-4,d1
		bge.w	loc_1238C
		move.b	#$C,$20(a0)
		bra.w	loc_1238C
; ---------------------------------------------------------------------------

Sonic_Balance:
		jsr	(ChkFloorEdge).l
		cmpi.w	#$C,d1
		blt.w	loc_12338
		tst.b	(Super_Sonic_Knux_flag).w
		bne.w	loc_12312
		cmpi.b	#3,$3A(a0)
		bne.s	loc_122B4
		btst	#0,$2A(a0)
		bne.s	loc_1228A
		move.b	#6,$20(a0)
		move.w	$10(a0),d3
		subq.w	#6,d3
		jsr	(ChkFloorEdge_Part2).l
		cmpi.w	#$C,d1
		blt.w	loc_1238C
		move.b	#$C,$20(a0)
		bra.w	loc_1238C
; ---------------------------------------------------------------------------

loc_1228A:
		bclr	#0,$2A(a0)
		move.b	#6,$20(a0)
		move.w	$10(a0),d3
		subq.w	#6,d3
		jsr	(ChkFloorEdge_Part2).l
		cmpi.w	#$C,d1
		blt.w	loc_1238C
		move.b	#$C,$20(a0)
		bra.w	loc_1238C
; ---------------------------------------------------------------------------

loc_122B4:
		cmpi.b	#3,$3B(a0)
		bne.s	loc_12338
		btst	#0,$2A(a0)
		beq.s	loc_122E8
		move.b	#6,$20(a0)
		move.w	$10(a0),d3
		addq.w	#6,d3
		jsr	(ChkFloorEdge_Part2).l
		cmpi.w	#$C,d1
		blt.w	loc_1238C
		move.b	#$C,$20(a0)
		bra.w	loc_1238C
; ---------------------------------------------------------------------------

loc_122E8:
		bset	#0,$2A(a0)
		move.b	#6,$20(a0)
		move.w	$10(a0),d3
		addq.w	#6,d3
		jsr	(ChkFloorEdge_Part2).l
		cmpi.w	#$C,d1
		blt.w	loc_1238C
		move.b	#$C,$20(a0)
		bra.w	loc_1238C
; ---------------------------------------------------------------------------

loc_12312:
		cmpi.b	#3,$3A(a0)
		bne.s	loc_12322

loc_1231A:
		bclr	#0,$2A(a0)
		bra.s	loc_12330
; ---------------------------------------------------------------------------

loc_12322:
		cmpi.b	#3,$3B(a0)
		bne.s	loc_12338

loc_1232A:
		bset	#0,$2A(a0)

loc_12330:
		move.b	#6,$20(a0)
		bra.s	loc_1238C
; ---------------------------------------------------------------------------

loc_12338:
		btst	#0,(Ctrl_1_held_logical).w
		beq.s	loc_12362
		move.b	#7,$20(a0)
		addq.b	#1,$39(a0)
		cmpi.b	#$78,$39(a0)
		bcs.s	loc_12392
		move.b	#$78,$39(a0)
		cmpi.w	#$C8,(a5)
		beq.s	loc_1239E
		addq.w	#2,(a5)
		bra.s	loc_1239E
; ---------------------------------------------------------------------------

loc_12362:
		btst	#1,(Ctrl_1_held_logical).w
		beq.s	loc_1238C
		move.b	#8,$20(a0)
		addq.b	#1,$39(a0)
		cmpi.b	#$78,$39(a0)
		bcs.s	loc_12392
		move.b	#$78,$39(a0)
		cmpi.w	#8,(a5)
		beq.s	loc_1239E
		subq.w	#2,(a5)
		bra.s	loc_1239E
; ---------------------------------------------------------------------------

loc_1238C:
		move.b	#0,$39(a0)

loc_12392:
		cmpi.w	#$60,(a5)
		beq.s	loc_1239E
		bcc.s	loc_1239C
		addq.w	#4,(a5)

loc_1239C:
		subq.w	#2,(a5)

loc_1239E:
		tst.b	(Super_Sonic_Knux_flag).w
		beq.w	loc_123AA
		move.w	#$C,d5

loc_123AA:
		move.b	(Ctrl_1_held_logical).w,d0
		andi.b	#$C,d0
		bne.s	loc_123D6
		move.w	$1C(a0),d0
		beq.s	loc_123D6
		bmi.s	loc_123CA
		sub.w	d5,d0
		bcc.s	loc_123C4
		move.w	#0,d0

loc_123C4:
		move.w	d0,$1C(a0)
		bra.s	loc_123D6
; ---------------------------------------------------------------------------

loc_123CA:
		add.w	d5,d0
		bcc.s	loc_123D2
		move.w	#0,d0

loc_123D2:
		move.w	d0,$1C(a0)

loc_123D6:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	$1C(a0),d1
		asr.l	#8,d1
		move.w	d1,$18(a0)
		muls.w	$1C(a0),d0
		asr.l	#8,d0
		move.w	d0,$1A(a0)

loc_123F4:
		btst	#6,$2E(a0)
		bne.w	locret_1247E
		move.b	$26(a0),d0
		addi.b	#$40,d0
		bmi.s	locret_1247E
		move.b	#$40,d1
		tst.w	$1C(a0)
		beq.s	locret_1247E
		bmi.s	loc_12416
		neg.w	d1

loc_12416:
		move.b	$26(a0),d0
		add.b	d1,d0
		move.w	d0,-(sp)
		bsr.w	sub_10980
		move.w	(sp)+,d0
		tst.w	d1
		bpl.s	locret_1247E
		asl.w	#8,d1
		addi.b	#$20,d0
		andi.b	#-$40,d0
		beq.s	loc_1247A
		cmpi.b	#$40,d0
		beq.s	loc_12460
		cmpi.b	#-$80,d0
		beq.s	loc_1245A
		add.w	d1,$18(a0)
		move.w	#0,$1C(a0)
		btst	#0,$2A(a0)
		bne.s	locret_12458
		bset	#5,$2A(a0)

locret_12458:
		rts
; ---------------------------------------------------------------------------

loc_1245A:
		sub.w	d1,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_12460:
		sub.w	d1,$18(a0)
		move.w	#0,$1C(a0)
		btst	#0,$2A(a0)
		beq.s	locret_12458
		bset	#5,$2A(a0)
		rts
; ---------------------------------------------------------------------------

loc_1247A:
		add.w	d1,$1A(a0)

locret_1247E:
		rts
; End of function Sonic_Move


; =============== S U B R O U T I N E =======================================


sub_12480:
		move.w	$1C(a0),d0
		beq.s	loc_12488
		bpl.s	loc_124BA

loc_12488:
		bset	#0,$2A(a0)
		bne.s	loc_1249C
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)

loc_1249C:
		sub.w	d5,d0
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0
		bgt.s	loc_124AE
		add.w	d5,d0
		cmp.w	d1,d0
		ble.s	loc_124AE
		move.w	d1,d0

loc_124AE:
		move.w	d0,$1C(a0)
		move.b	#0,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_124BA:
		sub.w	d4,d0
		bcc.s	loc_124C2
		move.w	#-$80,d0

loc_124C2:
		move.w	d0,$1C(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#-$40,d0
		bne.s	locret_1250A
		cmpi.w	#$400,d0
		blt.s	locret_1250A
		tst.b	$2D(a0)
		bmi.s	locret_1250A
		move.w	#sfx_Skid,d0
		jsr	(Play_Sound_2).l
		move.b	#$D,$20(a0)
		bclr	#0,$2A(a0)
		cmpi.b	#$C,$2C(a0)
		bcs.s	locret_1250A
		move.b	#6,5(a6)
		move.b	#$15,$22(a6)

locret_1250A:
		rts
; End of function sub_12480


; =============== S U B R O U T I N E =======================================


sub_1250C:
		move.w	$1C(a0),d0
		bmi.s	loc_12540
		bclr	#0,$2A(a0)
		beq.s	loc_12526
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)

loc_12526:
		add.w	d5,d0
		cmp.w	d6,d0
		blt.s	loc_12534
		sub.w	d5,d0
		cmp.w	d6,d0
		bge.s	loc_12534
		move.w	d6,d0

loc_12534:
		move.w	d0,$1C(a0)
		move.b	#0,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_12540:
		add.w	d4,d0
		bcc.s	loc_12548
		move.w	#$80,d0

loc_12548:
		move.w	d0,$1C(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#-$40,d0
		bne.s	locret_12590
		cmpi.w	#-$400,d0
		bgt.s	locret_12590
		tst.b	$2D(a0)
		bmi.s	locret_12590
		move.w	#sfx_Skid,d0
		jsr	(Play_Sound_2).l
		move.b	#$D,$20(a0)
		bset	#0,$2A(a0)
		cmpi.b	#$C,$2C(a0)
		bcs.s	locret_12590
		move.b	#6,5(a6)
		move.b	#$15,$22(a6)

locret_12590:
		rts
; End of function sub_1250C


; =============== S U B R O U T I N E =======================================


Sonic_RollSpeed:
		move.w	(a4),d6
		asl.w	#1,d6
		move.w	2(a4),d5
		asr.w	#1,d5
		move.w	#$20,d4
		tst.b	$3D(a0)
		bmi.w	loc_12636
		tst.b	$2B(a0)
		bmi.w	loc_12636
		tst.w	$32(a0)
		bne.s	loc_125CE
		btst	#2,(Ctrl_1_held_logical).w
		beq.s	loc_125C2
		bsr.w	sub_12678

loc_125C2:
		btst	#3,(Ctrl_1_held_logical).w
		beq.s	loc_125CE
		bsr.w	sub_1269C

loc_125CE:
		move.w	$1C(a0),d0
		beq.s	loc_125F0
		bmi.s	loc_125E4
		sub.w	d5,d0
		bcc.s	loc_125DE
		move.w	#0,d0

loc_125DE:
		move.w	d0,$1C(a0)
		bra.s	loc_125F0
; ---------------------------------------------------------------------------

loc_125E4:
		add.w	d5,d0
		bcc.s	loc_125EC
		move.w	#0,d0

loc_125EC:
		move.w	d0,$1C(a0)

loc_125F0:
		tst.w	$1C(a0)
		bne.s	loc_12636
		tst.b	$3D(a0)
		bne.s	loc_12624
		bclr	#2,$2A(a0)
		move.b	$1E(a0),d0
		move.b	$44(a0),$1E(a0)
		move.b	$45(a0),$1F(a0)
		move.b	#5,$20(a0)
		sub.b	$44(a0),d0
		ext.w	d0
		add.w	d0,$14(a0)
		bra.s	loc_12636
; ---------------------------------------------------------------------------

loc_12624:
		move.w	#$400,$1C(a0)
		btst	#0,$2A(a0)
		beq.s	loc_12636
		neg.w	$1C(a0)

loc_12636:
		cmpi.w	#$60,(a5)
		beq.s	loc_12642
		bcc.s	loc_12640
		addq.w	#4,(a5)

loc_12640:
		subq.w	#2,(a5)

loc_12642:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	$1C(a0),d0
		asr.l	#8,d0
		move.w	d0,$1A(a0)
		muls.w	$1C(a0),d1
		asr.l	#8,d1
		cmpi.w	#$1000,d1
		ble.s	loc_12666
		move.w	#$1000,d1

loc_12666:
		cmpi.w	#-$1000,d1
		bge.s	loc_12670
		move.w	#-$1000,d1

loc_12670:
		move.w	d1,$18(a0)
		bra.w	loc_123F4
; End of function Sonic_RollSpeed


; =============== S U B R O U T I N E =======================================


sub_12678:
		move.w	$1C(a0),d0
		beq.s	loc_12680
		bpl.s	loc_1268E

loc_12680:
		bset	#0,$2A(a0)
		move.b	#2,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_1268E:
		sub.w	d4,d0
		bcc.s	loc_12696
		move.w	#-$80,d0

loc_12696:
		move.w	d0,$1C(a0)
		rts
; End of function sub_12678


; =============== S U B R O U T I N E =======================================


sub_1269C:
		move.w	$1C(a0),d0
		bmi.s	loc_126B0
		bclr	#0,$2A(a0)
		move.b	#2,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_126B0:
		add.w	d4,d0
		bcc.s	loc_126B8
		move.w	#$80,d0

loc_126B8:
		move.w	d0,$1C(a0)
		rts
; End of function sub_1269C


; =============== S U B R O U T I N E =======================================


Sonic_ChgJumpDir:
		move.w	(a4),d6
		move.w	2(a4),d5
		asl.w	#1,d5
		btst	#4,$2A(a0)
		bne.s	Sonic_Jump_ResetScr
		move.w	$18(a0),d0
		btst	#2,(Ctrl_1_held_logical).w
		beq.s	loc_126F2
		bset	#0,$2A(a0)
		sub.w	d5,d0
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0
		bgt.s	loc_126F2
		add.w	d5,d0
		cmp.w	d1,d0
		ble.s	loc_126F2
		move.w	d1,d0

loc_126F2:
		btst	#3,(Ctrl_1_held_logical).w
		beq.s	loc_1270E
		bclr	#0,$2A(a0)
		add.w	d5,d0
		cmp.w	d6,d0
		blt.s	loc_1270E
		sub.w	d5,d0
		cmp.w	d6,d0
		bge.s	loc_1270E
		move.w	d6,d0

loc_1270E:
		move.w	d0,$18(a0)

Sonic_Jump_ResetScr:
		cmpi.w	#$60,(a5)
		beq.s	Sonic_JumpPeakDecelerate
		bcc.s	loc_1271C
		addq.w	#4,(a5)

loc_1271C:
		subq.w	#2,(a5)

Sonic_JumpPeakDecelerate:
		cmpi.w	#-$400,$1A(a0)
		bcs.s	locret_1274C
		move.w	$18(a0),d0
		move.w	d0,d1
		asr.w	#5,d1
		beq.s	locret_1274C
		bmi.s	Sonic_JumpPeakDecelerateLeft
		sub.w	d1,d0
		bcc.s	loc_1273A
		move.w	#0,d0

loc_1273A:
		move.w	d0,$18(a0)
		rts
; ---------------------------------------------------------------------------

Sonic_JumpPeakDecelerateLeft:
		sub.w	d1,d0
		bcs.s	loc_12748
		move.w	#0,d0

loc_12748:
		move.w	d0,$18(a0)

locret_1274C:
		rts
; End of function Sonic_ChgJumpDir


; =============== S U B R O U T I N E =======================================


Player_LevelBound:
		move.l	$10(a0),d1
		move.w	$18(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d1
		swap	d1
		move.w	(Camera_min_X_pos).w,d0
		addi.w	#$10,d0
		cmp.w	d1,d0
		bhi.s	Player_Boundary_Sides
		move.w	(Camera_max_X_pos).w,d0
		addi.w	#$128,d0
		cmp.w	d1,d0
		bls.s	Player_Boundary_Sides

Player_Boundary_CheckBottom:
		tst.b	(Disable_death_plane).w
		bne.s	locret_1278A
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$E0,d0
		cmp.w	$14(a0),d0
		blt.s	Player_Boundary_Bottom

locret_1278A:
		rts
; ---------------------------------------------------------------------------

Player_Boundary_Bottom:
		jmp	(Kill_Character).l
; ---------------------------------------------------------------------------

Player_Boundary_Sides:
		move.w	d0,$10(a0)
		move.w	#0,$12(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1C(a0)
		bra.s	Player_Boundary_CheckBottom
; End of function Player_LevelBound


; =============== S U B R O U T I N E =======================================


Sonic_Roll:
		tst.b	$2B(a0)
		bmi.s	locret_127D0
		move.w	$1C(a0),d0
		bpl.s	loc_127B8
		neg.w	d0

loc_127B8:
		cmpi.w	#$80,d0
		bcs.s	locret_127D0
		move.b	(Ctrl_1_held_logical).w,d0
		andi.b	#$C,d0
		bne.s	locret_127D0
		btst	#1,(Ctrl_1_held_logical).w
		bne.s	Player_ChkRoll

locret_127D0:
		rts
; ---------------------------------------------------------------------------

Player_ChkRoll:
		btst	#2,$2A(a0)
		beq.s	Player_DoRoll
		rts
; ---------------------------------------------------------------------------

Player_DoRoll:
		bset	#2,$2A(a0)
		move.b	#$E,$1E(a0)
		move.b	#7,$1F(a0)
		move.b	#2,$20(a0)
		addq.w	#5,$14(a0)
		move.w	#sfx_Roll,d0
		jsr	(Play_Sound_2).l
		tst.w	$1C(a0)
		bne.s	locret_1280E
		move.w	#$200,$1C(a0)

locret_1280E:
		rts
; End of function Sonic_Roll


; =============== S U B R O U T I N E =======================================


Sonic_Jump:
		move.b	(Ctrl_1_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	locret_128D0
		moveq	#0,d0
		move.b	$26(a0),d0
		addi.b	#-$80,d0
		movem.l	a4-a6,-(sp)
		bsr.w	CalcRoomOverHead
		movem.l	(sp)+,a4-a6
		cmpi.w	#6,d1
		blt.w	locret_128D0
		move.w	#$680,d2
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_12848
		move.w	#$800,d2

loc_12848:
		btst	#6,$2A(a0)
		beq.s	loc_12854
		move.w	#$380,d2

loc_12854:
		moveq	#0,d0
		move.b	$26(a0),d0
		subi.b	#$40,d0
		jsr	(GetSineCosine).l
		muls.w	d2,d1
		asr.l	#8,d1
		add.w	d1,$18(a0)
		muls.w	d2,d0
		asr.l	#8,d0
		add.w	d0,$1A(a0)
		bset	#1,$2A(a0)
		bclr	#5,$2A(a0)
		addq.l	#4,sp
		move.b	#1,$40(a0)
		clr.b	$3C(a0)
		move.w	#sfx_Jump,d0
		jsr	(Play_Sound_2).l
		move.b	$44(a0),$1E(a0)
		move.b	$45(a0),$1F(a0)
		btst	#2,$2A(a0)
		bne.s	Sonic_RollJump
		move.b	#$E,$1E(a0)
		move.b	#7,$1F(a0)
		move.b	#2,$20(a0)
		bset	#2,$2A(a0)
		move.b	$1E(a0),d0
		sub.b	$44(a0),d0
		ext.w	d0
		sub.w	d0,$14(a0)

locret_128D0:
		rts
; ---------------------------------------------------------------------------

Sonic_RollJump:
		bset	#4,$2A(a0)
		rts
; End of function Sonic_Jump


; =============== S U B R O U T I N E =======================================


Sonic_JumpHeight:
		tst.b	$40(a0)
		beq.s	Sonic_UpVelCap
		move.w	#-$400,d1
		btst	#6,$2A(a0)
		beq.s	loc_128F0
		move.w	#-$200,d1

loc_128F0:
		cmp.w	$1A(a0),d1
		ble.w	Sonic_InstaAndShieldMoves
		move.b	(Ctrl_1_held_logical).w,d0
		andi.b	#$70,d0
		bne.s	locret_12906
		move.w	d1,$1A(a0)

locret_12906:
		rts
; ---------------------------------------------------------------------------

Sonic_UpVelCap:
		tst.b	$3D(a0)
		bne.s	locret_1291C
		cmpi.w	#-$FC0,$1A(a0)
		bge.s	locret_1291C
		move.w	#-$FC0,$1A(a0)

locret_1291C:
		rts
; ---------------------------------------------------------------------------

Sonic_InstaAndShieldMoves:
		tst.b	$2F(a0)
		bne.w	locret_12A20
		move.b	(Ctrl_1_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	locret_12A20
		bclr	#4,$2A(a0)
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	Sonic_FireShield
		move.b	#1,$2F(a0)
		rts
; ---------------------------------------------------------------------------

Sonic_FireShield:
		btst	#1,$2B(a0)
		bne.w	locret_12A20
		btst	#4,$2B(a0)
		beq.s	Sonic_LightningShield
		move.b	#1,(Shield+anim).w
		move.b	#1,$2F(a0)
		move.w	#$800,d0
		btst	#0,$2A(a0)
		beq.s	loc_12972
		neg.w	d0

loc_12972:
		move.w	d0,$18(a0)
		move.w	d0,$1C(a0)
		move.w	#0,$1A(a0)
		move.w	#$2000,(H_scroll_frame_offset).w
		bsr.w	Reset_Player_Position_Array
		move.w	#sfx_FireAttack,d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

Sonic_LightningShield:
		btst	#5,$2B(a0)
		beq.s	Sonic_BubbleShield
		move.b	#1,(Shield+anim).w
		move.b	#1,$2F(a0)
		move.w	#-$580,$1A(a0)
		clr.b	$40(a0)
		move.w	#sfx_ElectricAttack,d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

Sonic_BubbleShield:
		btst	#6,$2B(a0)
		beq.s	Sonic_CheckTransform
		move.b	#1,(Shield+anim).w
		move.b	#1,$2F(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1C(a0)
		move.w	#$800,$1A(a0)
		move.w	#sfx_BubbleAttack,d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

Sonic_CheckTransform:
		cmpi.w	#7,(Emerald_count).w
		bcs.s	Sonic_InstaShield
		cmpi.w	#50,(Ring_count).w
		bcs.s	Sonic_InstaShield
		tst.b	(Update_HUD_timer).w
		bne.s	Sonic_Transform

Sonic_InstaShield:
		btst	#0,$2B(a0)
		bne.s	locret_12A20
		move.b	#1,(Shield+anim).w
		move.b	#1,$2F(a0)
		move.w	#sfx_InstaAttack,d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

locret_12A20:
		rts
; ---------------------------------------------------------------------------

Sonic_Transform:
		move.b	#1,(Super_palette_status).w
		move.b	#$F,(Palette_timer).w
		move.b	#1,(Super_Sonic_Knux_flag).w
		move.w	#60,(Super_frame_count).w
		move.l	#Map_SuperSonic,$C(a0)
		move.b	#$81,$2E(a0)
		move.b	#$1F,$20(a0)
		move.l	#Obj_SuperSonic_Stars,(Super_stars).w
		move.w	#$A00,(a4)
		move.w	#$30,2(a4)
		move.w	#$100,4(a4)
		move.b	#0,$35(a0)
		bset	#1,$2B(a0)
		move.w	#$FF00|sfx_SuperTransform,d0
		jsr	(Play_Sound_2).l
		move.w	#mus_Invincibility,d0
		jmp	(Play_Sound).l
; End of function Sonic_JumpHeight


; =============== S U B R O U T I N E =======================================


Sonic_Super:
		tst.b	(Super_Sonic_Knux_flag).w
		beq.w	locret_12B26
		tst.b	(Update_HUD_timer).w
		beq.s	loc_12AD2
		subq.w	#1,(Super_frame_count).w
		bpl.w	locret_12B26
		move.w	#60,(Super_frame_count).w
		tst.w	(Ring_count).w
		beq.s	loc_12AD2
		ori.b	#1,(Update_HUD_ring_count).w
		cmpi.w	#1,(Ring_count).w
		beq.s	loc_12AC6
		cmpi.w	#$A,(Ring_count).w
		beq.s	loc_12AC6
		cmpi.w	#$64,(Ring_count).w
		bne.s	loc_12ACC

loc_12AC6:
		ori.b	#$80,(Update_HUD_ring_count).w

loc_12ACC:
		subq.w	#1,(Ring_count).w
		bne.s	locret_12B26

loc_12AD2:
		move.b	#2,(Super_palette_status).w
		move.w	#$1E,(Palette_frame).w
		move.b	#0,(Super_Sonic_Knux_flag).w
		move.b	#-1,(Player_prev_frame).w
		move.l	#Map_Sonic,$C(a0)
		move.b	#1,$21(a0)
		move.b	#1,$35(a0)
		move.w	#$600,(a4)
		move.w	#$C,2(a4)
		move.w	#$80,4(a4)
		btst	#6,$2A(a0)
		beq.s	locret_12B26
		move.w	#$300,(a4)
		move.w	#6,2(a4)
		move.w	#$40,4(a4)

locret_12B26:
		rts
; End of function Sonic_Super


; =============== S U B R O U T I N E =======================================


Sonic_Spindash:
		tst.b	$3D(a0)
		bne.s	loc_12B9C
		cmpi.b	#8,$20(a0)
		bne.s	locret_12B9A
		move.b	(Ctrl_1_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	locret_12B9A
		move.b	#9,$20(a0)
		move.w	#$FF00|sfx_Spindash,d0
		jsr	(Play_Sound_2).l
		addq.l	#4,sp
		move.b	#1,$3D(a0)
		move.w	#0,$3E(a0)
		cmpi.b	#$C,$2C(a0)
		bcs.s	loc_12B6E
		move.b	#2,$20(a6)

loc_12B6E:
		bsr.w	Player_LevelBound
		bsr.w	Player_AnglePos
		tst.b	(Background_collision_flag).w
		beq.s	locret_12B9A
		bsr.w	sub_10BA2
		tst.w	d1
		bmi.w	Kill_Character
		movem.l	a4-a6,-(sp)
		bsr.w	CheckLeftWallDist
		movem.l	(sp)+,a4-a6
		tst.w	d1
		bpl.s	locret_12B9A
		sub.w	d1,$10(a0)

locret_12B9A:
		rts
; ---------------------------------------------------------------------------

loc_12B9C:
		move.b	(Ctrl_1_held_logical).w,d0
		btst	#1,d0
		bne.w	loc_12C48
		move.b	#$E,$1E(a0)
		move.b	#7,$1F(a0)
		move.b	#2,$20(a0)
		addq.w	#5,$14(a0)
		move.b	#0,$3D(a0)
		moveq	#0,d0
		move.b	$3E(a0),d0
		add.w	d0,d0
		move.w	word_12C24(pc,d0.w),$1C(a0)
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_12BDE
		move.w	word_12C36(pc,d0.w),$1C(a0)

loc_12BDE:
		move.w	$1C(a0),d0
		subi.w	#$800,d0
		add.w	d0,d0
		andi.w	#$1F00,d0
		neg.w	d0
		addi.w	#$2000,d0
		lea	(H_scroll_frame_offset).w,a1
		cmpa.w	#Player_1,a0
		beq.s	loc_12C00
		lea	(H_scroll_frame_offset_P2).w,a1

loc_12C00:
		move.w	d0,(a1)
		btst	#0,$2A(a0)
		beq.s	loc_12C0E
		neg.w	$1C(a0)

loc_12C0E:
		bset	#2,$2A(a0)
		move.b	#0,$20(a6)
		moveq	#signextendB(sfx_Dash),d0
		jsr	(Play_Sound_2).l
		bra.s	loc_12C90
; ---------------------------------------------------------------------------
word_12C24:	dc.w $800
		dc.w $880
		dc.w $900
		dc.w $980
		dc.w $A00
		dc.w $A80
		dc.w $B00
		dc.w $B80
		dc.w $C00
word_12C36:	dc.w $B00
		dc.w $B80
		dc.w $C00
		dc.w $C80
		dc.w $D00
		dc.w $D80
		dc.w $E00
		dc.w $E80
		dc.w $F00
; ---------------------------------------------------------------------------

loc_12C48:
		tst.w	$3E(a0)
		beq.s	loc_12C60
		move.w	$3E(a0),d0
		lsr.w	#5,d0
		sub.w	d0,$3E(a0)
		bcc.s	loc_12C60
		move.w	#0,$3E(a0)

loc_12C60:
		move.b	(Ctrl_1_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	loc_12C90
		move.w	#$900,$20(a0)
		move.w	#$FF00|sfx_Spindash,d0
		jsr	(Play_Sound_2).l
		addi.w	#$200,$3E(a0)
		cmpi.w	#$800,$3E(a0)
		bcs.s	loc_12C90
		move.w	#$800,$3E(a0)

loc_12C90:
		addq.l	#4,sp
		cmpi.w	#$60,(a5)
		beq.s	loc_12C9E
		bcc.s	loc_12C9C
		addq.w	#4,(a5)

loc_12C9C:
		subq.w	#2,(a5)

loc_12C9E:
		bsr.w	Player_LevelBound
		bsr.w	Player_AnglePos
		tst.b	(Background_collision_flag).w
		beq.s	locret_12CCA
		bsr.w	sub_10BA2
		tst.w	d1
		bmi.w	Kill_Character
		movem.l	a4-a6,-(sp)
		bsr.w	CheckLeftWallDist
		movem.l	(sp)+,a4-a6
		tst.w	d1
		bpl.s	locret_12CCA
		sub.w	d1,$10(a0)

locret_12CCA:
		rts
; End of function Sonic_Spindash


; =============== S U B R O U T I N E =======================================


Player_SlopeResist:
		move.b	$26(a0),d0
		addi.b	#$60,d0
		cmpi.b	#-$40,d0
		bcc.s	locret_12D00
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	#$20,d0
		asr.l	#8,d0
		tst.w	$1C(a0)
		beq.s	loc_12D02
		bmi.s	loc_12CFC
		tst.w	d0
		beq.s	locret_12CFA
		add.w	d0,$1C(a0)

locret_12CFA:
		rts
; ---------------------------------------------------------------------------

loc_12CFC:
		add.w	d0,$1C(a0)

locret_12D00:
		rts
; ---------------------------------------------------------------------------

loc_12D02:
		move.w	d0,d1
		bpl.s	loc_12D08
		neg.w	d1

loc_12D08:
		cmpi.w	#$D,d1
		bcs.s	locret_12D00
		add.w	d0,$1C(a0)
		rts
; End of function Player_SlopeResist


; =============== S U B R O U T I N E =======================================


Player_RollRepel:
		move.b	$26(a0),d0
		addi.b	#$60,d0
		cmpi.b	#-$40,d0
		bcc.s	locret_12D4E
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	#$50,d0
		asr.l	#8,d0
		tst.w	$1C(a0)
		bmi.s	loc_12D44
		tst.w	d0
		bpl.s	loc_12D3E
		asr.l	#2,d0

loc_12D3E:
		add.w	d0,$1C(a0)
		rts
; ---------------------------------------------------------------------------

loc_12D44:
		tst.w	d0
		bmi.s	loc_12D4A
		asr.l	#2,d0

loc_12D4A:
		add.w	d0,$1C(a0)

locret_12D4E:
		rts
; End of function Player_RollRepel


; =============== S U B R O U T I N E =======================================


Player_SlopeRepel:
		nop
		tst.b	$3C(a0)
		bne.s	locret_12D94
		tst.w	$32(a0)
		bne.s	loc_12DAC
		move.b	$26(a0),d0
		addi.b	#$18,d0
		cmpi.b	#$30,d0
		bcs.s	locret_12D94
		move.w	$1C(a0),d0
		bpl.s	loc_12D74
		neg.w	d0

loc_12D74:
		cmpi.w	#$280,d0
		bcc.s	locret_12D94
		move.w	#$1E,$32(a0)
		move.b	$26(a0),d0
		addi.b	#$30,d0
		cmpi.b	#$60,d0
		bcs.s	loc_12D96
		bset	#1,$2A(a0)

locret_12D94:
		rts
; ---------------------------------------------------------------------------

loc_12D96:
		cmpi.b	#$30,d0
		bcs.s	loc_12DA4
		addi.w	#$80,$1C(a0)
		rts
; ---------------------------------------------------------------------------

loc_12DA4:
		subi.w	#$80,$1C(a0)
		rts
; ---------------------------------------------------------------------------

loc_12DAC:
		subq.w	#1,$32(a0)
		rts
; End of function Player_SlopeRepel


; =============== S U B R O U T I N E =======================================


Player_JumpAngle:
		move.b	$26(a0),d0
		beq.s	Player_JumpFlip
		bpl.s	loc_12DC2
		addq.b	#2,d0
		bcc.s	loc_12DC0
		moveq	#0,d0

loc_12DC0:
		bra.s	Player_JumpAngleSet
; ---------------------------------------------------------------------------

loc_12DC2:
		subq.b	#2,d0
		bcc.s	Player_JumpAngleSet
		moveq	#0,d0

Player_JumpAngleSet:
		move.b	d0,$26(a0)

Player_JumpFlip:
		move.b	$27(a0),d0
		beq.s	locret_12E10
		tst.w	$1C(a0)
		bmi.s	Player_JumpLeftFlip

Player_JumpRightFlip:
		move.b	$31(a0),d1
		add.b	d1,d0
		bcc.s	loc_12DEE
		subq.b	#1,$30(a0)
		bcc.s	loc_12DEE
		move.b	#0,$30(a0)
		moveq	#0,d0

loc_12DEE:
		bra.s	Player_JumpFlipSet
; ---------------------------------------------------------------------------

Player_JumpLeftFlip:
		tst.b	$2D(a0)
		bmi.s	Player_JumpRightFlip
		move.b	$31(a0),d1
		sub.b	d1,d0
		bcc.s	Player_JumpFlipSet
		subq.b	#1,$30(a0)
		bcc.s	Player_JumpFlipSet
		move.b	#0,$30(a0)
		moveq	#0,d0

Player_JumpFlipSet:
		move.b	d0,$27(a0)

locret_12E10:
		rts
; End of function Player_JumpAngle


; =============== S U B R O U T I N E =======================================


Sonic_DoLevelCollision:
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_12E26
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_12E26:
		move.b	$47(a0),d5
		move.w	$18(a0),d1
		move.w	$1A(a0),d2
		jsr	(GetArcTan).l
		subi.b	#$20,d0
		andi.b	#-$40,d0
		cmpi.b	#$40,d0
		beq.w	Player_HitLeftWall
		cmpi.b	#-$80,d0
		beq.w	Player_HitCeilingAndWalls
		cmpi.b	#-$40,d0
		beq.w	loc_12FCC
		bsr.w	CheckLeftWallDist
		tst.w	d1
		bpl.s	loc_12E6A
		sub.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_12E6A:
		bsr.w	CheckRightWallDist
		tst.w	d1
		bpl.s	loc_12E7C
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_12E7C:
		bsr.w	Sonic_CheckFloor
		tst.w	d1
		bpl.s	locret_12EF2
		move.b	$1A(a0),d2
		addq.b	#8,d2
		neg.b	d2
		cmp.b	d2,d1
		bge.s	loc_12E94
		cmp.b	d2,d0
		blt.s	locret_12EF2

loc_12E94:
		add.w	d1,$14(a0)
		move.b	d3,$26(a0)
		move.b	d3,d0
		addi.b	#$20,d0
		andi.b	#$40,d0
		bne.s	loc_12ECC
		move.b	d3,d0
		addi.b	#$10,d0
		andi.b	#$20,d0
		beq.s	loc_12EBA
		asr	$1A(a0)
		bra.s	loc_12EE0
; ---------------------------------------------------------------------------

loc_12EBA:
		move.w	#0,$1A(a0)
		move.w	$18(a0),$1C(a0)
		bsr.w	Player_TouchFloor_Check_Spindash
		rts
; ---------------------------------------------------------------------------

loc_12ECC:
		move.w	#0,$18(a0)
		cmpi.w	#$FC0,$1A(a0)
		ble.s	loc_12EE0
		move.w	#$FC0,$1A(a0)

loc_12EE0:
		bsr.w	Player_TouchFloor_Check_Spindash
		move.w	$1A(a0),$1C(a0)
		tst.b	d3
		bpl.s	locret_12EF2
		neg.w	$1C(a0)

locret_12EF2:
		rts
; ---------------------------------------------------------------------------

Player_HitLeftWall:
		bsr.w	CheckLeftWallDist
		tst.w	d1
		bpl.s	Player_HitCeiling
		sub.w	d1,$10(a0)
		move.w	#0,$18(a0)
		move.w	$1A(a0),$1C(a0)

Player_HitCeiling:
		bsr.w	Sonic_CheckCeiling
		tst.w	d1
		bpl.s	loc_12F42
		neg.w	d1
		cmpi.w	#$14,d1
		bcc.s	loc_12F2E
		add.w	d1,$14(a0)
		tst.w	$1A(a0)
		bpl.s	locret_12F2C
		move.w	#0,$1A(a0)

locret_12F2C:
		rts
; ---------------------------------------------------------------------------

loc_12F2E:
		bsr.w	CheckRightWallDist
		tst.w	d1
		bpl.s	locret_12F40
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)

locret_12F40:
		rts
; ---------------------------------------------------------------------------

loc_12F42:
		tst.b	(WindTunnel_flag).w
		bne.s	loc_12F4E
		tst.w	$1A(a0)
		bmi.s	locret_12F6E

loc_12F4E:
		bsr.w	Sonic_CheckFloor
		tst.w	d1
		bpl.s	locret_12F6E
		add.w	d1,$14(a0)
		move.b	d3,$26(a0)
		move.w	#0,$1A(a0)
		move.w	$18(a0),$1C(a0)
		bsr.w	Player_TouchFloor_Check_Spindash

locret_12F6E:
		rts
; ---------------------------------------------------------------------------

Player_HitCeilingAndWalls:
		bsr.w	CheckLeftWallDist
		tst.w	d1
		bpl.s	loc_12F82
		sub.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_12F82:
		bsr.w	CheckRightWallDist
		tst.w	d1
		bpl.s	loc_12F94
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_12F94:
		bsr.w	Sonic_CheckCeiling
		tst.w	d1
		bpl.s	locret_12FCA
		sub.w	d1,$14(a0)
		move.b	d3,d0
		addi.b	#$20,d0
		andi.b	#$40,d0
		bne.s	loc_12FB4
		move.w	#0,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_12FB4:
		move.b	d3,$26(a0)
		bsr.w	Player_TouchFloor_Check_Spindash
		move.w	$1A(a0),$1C(a0)
		tst.b	d3
		bpl.s	locret_12FCA
		neg.w	$1C(a0)

locret_12FCA:
		rts
; ---------------------------------------------------------------------------

loc_12FCC:
		bsr.w	CheckRightWallDist
		tst.w	d1
		bpl.s	loc_12FE4
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)
		move.w	$1A(a0),$1C(a0)

loc_12FE4:
		bsr.w	Sonic_CheckCeiling
		tst.w	d1
		bpl.s	loc_12FFE
		sub.w	d1,$14(a0)
		tst.w	$1A(a0)
		bpl.s	locret_12FFC
		move.w	#0,$1A(a0)

locret_12FFC:
		rts
; ---------------------------------------------------------------------------

loc_12FFE:
		tst.b	(WindTunnel_flag).w
		bne.s	loc_1300A
		tst.w	$1A(a0)
		bmi.s	locret_1302A

loc_1300A:
		bsr.w	Sonic_CheckFloor
		tst.w	d1
		bpl.s	locret_1302A
		add.w	d1,$14(a0)
		move.b	d3,$26(a0)
		move.w	#0,$1A(a0)
		move.w	$18(a0),$1C(a0)
		bsr.w	Player_TouchFloor_Check_Spindash

locret_1302A:
		rts
; End of function Sonic_DoLevelCollision


; =============== S U B R O U T I N E =======================================


Player_TouchFloor_Check_Spindash:
		tst.b	$3D(a0)
		bne.s	loc_13070
		move.b	#0,$20(a0)
; End of function Player_TouchFloor_Check_Spindash


; =============== S U B R O U T I N E =======================================


Player_TouchFloor:
		cmpi.l	#Obj_Tails,(a0)
		beq.w	Tails_TouchFloor
		move.b	$1E(a0),d0
		move.b	$44(a0),$1E(a0)
		move.b	$45(a0),$1F(a0)
		btst	#2,$2A(a0)
		beq.s	loc_13070
		bclr	#2,$2A(a0)
		move.b	#0,$20(a0)
		sub.b	$44(a0),d0
		ext.w	d0
		add.w	d0,$14(a0)

loc_13070:
		bclr	#1,$2A(a0)
		bclr	#5,$2A(a0)
		bclr	#4,$2A(a0)
		move.b	#0,$40(a0)
		move.w	#0,(Chain_bonus_counter).w
		move.b	#0,$27(a0)
		move.b	#0,$2D(a0)
		move.b	#0,$30(a0)
		move.b	#0,$39(a0)
		tst.b	$2F(a0)
		beq.s	locret_130BC
		btst	#6,$2B(a0)
		beq.s	loc_130B6
		bsr.s	BubbleShield_Bounce

loc_130B6:
		move.b	#0,$2F(a0)

locret_130BC:
		rts
; End of function Player_TouchFloor


; =============== S U B R O U T I N E =======================================


BubbleShield_Bounce:
		movem.l	d1-d2,-(sp)
		move.w	#$780,d2
		btst	#6,$2A(a0)
		beq.s	loc_130D2
		move.w	#$400,d2

loc_130D2:
		moveq	#0,d0
		move.b	$26(a0),d0
		subi.b	#$40,d0
		jsr	(GetSineCosine).l
		muls.w	d2,d1
		asr.l	#8,d1
		add.w	d1,$18(a0)
		muls.w	d2,d0
		asr.l	#8,d0
		add.w	d0,$1A(a0)
		movem.l	(sp)+,d1-d2
		bset	#1,$2A(a0)
		bclr	#5,$2A(a0)
		move.b	#1,$40(a0)
		clr.b	$3C(a0)
		move.b	#$E,$1E(a0)
		move.b	#7,$1F(a0)
		move.b	#2,$20(a0)
		bset	#2,$2A(a0)
		move.b	$1E(a0),d0
		sub.b	$44(a0),d0
		ext.w	d0
		sub.w	d0,$14(a0)
		move.b	#2,(Shield+anim).w
		move.w	#sfx_BubbleAttack,d0
		jmp	(Play_Sound_2).l
; End of function BubbleShield_Bounce

; ---------------------------------------------------------------------------

loc_13142:
		tst.w	(Debug_mode_flag).w
		beq.s	loc_1315C
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_1315C
		move.w	#1,(Debug_placement_mode).w
		clr.b	(Ctrl_1_locked).w
		rts
; ---------------------------------------------------------------------------

loc_1315C:
		jsr	(MoveSprite2).l
		addi.w	#$30,$1A(a0)
		btst	#6,$2A(a0)
		beq.s	loc_13176
		subi.w	#$20,$1A(a0)

loc_13176:
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_13186
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)

loc_13186:
		bsr.w	sub_1319C
		bsr.w	Player_LevelBound
		bsr.w	Sonic_RecordPos
		bsr.w	sub_13438
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_1319C:
		tst.b	(Disable_death_plane).w
		bne.s	loc_131B2
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$E0,d0
		cmp.w	$14(a0),d0
		blt.w	loc_131F8

loc_131B2:
		movem.l	a4-a6,-(sp)
		bsr.w	Sonic_DoLevelCollision
		movem.l	(sp)+,a4-a6
		btst	#1,$2A(a0)
		bne.s	locret_131F6
		moveq	#0,d0
		move.w	d0,$1A(a0)
		move.w	d0,$18(a0)
		move.w	d0,$1C(a0)
		move.b	d0,$2E(a0)
		move.b	#0,$20(a0)
		move.w	#$100,8(a0)
		move.b	#2,5(a0)
		move.b	#$78,$34(a0)
		move.b	#0,$3D(a0)

locret_131F6:
		rts
; ---------------------------------------------------------------------------

loc_131F8:
		jmp	(Kill_Character).l
; End of function sub_1319C

; ---------------------------------------------------------------------------

loc_131FE:
		tst.w	(Debug_mode_flag).w
		beq.s	loc_13218
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_13218
		move.w	#1,(Debug_placement_mode).w
		clr.b	(Ctrl_1_locked).w
		rts
; ---------------------------------------------------------------------------

loc_13218:
		bsr.w	sub_13230
		jsr	(MoveSprite).l
		bsr.w	Sonic_RecordPos
		bsr.w	sub_13438
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_13230:
		cmpa.w	#Player_1,a0
		bne.s	loc_13242
		move.w	(Camera_Y_pos).w,d0
		move.b	#1,(Scroll_lock).w
		bra.s	loc_1324C
; ---------------------------------------------------------------------------

loc_13242:
		move.w	(Camera_Y_pos).w,d0
		move.b	#1,(Scroll_lock_P2).w

loc_1324C:
		move.b	#0,$3D(a0)
		addi.w	#$100,d0
		tst.w	(Competition_mode).w
		beq.s	loc_13260
		subi.w	#$70,d0

loc_13260:
		cmp.w	$14(a0),d0
		bge.w	locret_1331E
		tst.w	(Competition_mode).w
		bne.w	loc_13320
		cmpi.b	#1,$38(a0)
		bne.s	loc_1328A
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_1328A
		move.b	#2,5(a0)
		bra.w	sub_14B58
; ---------------------------------------------------------------------------

loc_1328A:
		move.b	#8,5(a0)
		move.w	#$3C,$3E(a0)
		move.b	#0,(Respawn_table_keep).w
		addq.b	#1,(Update_HUD_life_count).w
		subq.b	#1,(Life_count).w
		bne.s	loc_132F0
		move.w	#0,$3E(a0)
		move.l	#loc_2C9AC,(Reserved_object_3).w
		move.l	#loc_2C9AC,(Dynamic_object_RAM).w
		move.b	#0,(Reserved_object_3+mapping_frame).w
		move.b	#1,(Dynamic_object_RAM+mapping_frame).w
		move.w	a0,(Reserved_object_3+objoff_3E).w
		clr.b	(Time_over_flag).w

loc_132D0:
		clr.b	(Update_HUD_timer).w
		clr.b	(_unkFEC7).w
		move.b	#8,5(a0)
		move.w	#mus_GameOver,d0
		jsr	(Play_Sound).l
		moveq	#3,d0
		jmp	(Load_PLC_2).l
; ---------------------------------------------------------------------------

loc_132F0:
		tst.b	(Time_over_flag).w
		beq.s	locret_1331E
		move.w	#0,$3E(a0)
		move.l	#loc_2C9AC,(Reserved_object_3).w
		move.l	#loc_2C9AC,(Dynamic_object_RAM).w
		move.b	#2,(Reserved_object_3+mapping_frame).w
		move.b	#3,(Dynamic_object_RAM+mapping_frame).w
		move.w	a0,(Reserved_object_3+objoff_3E).w
		bra.s	loc_132D0
; ---------------------------------------------------------------------------

locret_1331E:
		rts
; ---------------------------------------------------------------------------

loc_13320:
		move.b	#2,5(a0)
		cmpa.w	#Player_1,a0
		bne.s	loc_1335A
		move.b	#0,(Scroll_lock).w
		move.w	(Saved_X_pos).w,$10(a0)
		move.w	(Saved_Y_pos).w,$14(a0)
		move.w	(Saved_art_tile).w,$A(a0)
		move.w	(Saved_solid_bits).w,$46(a0)
		clr.w	(Ring_count).w
		clr.b	(Extra_life_flags).w
		move.b	#1,(_unkF74A).w
		bra.s	loc_13382
; ---------------------------------------------------------------------------

loc_1335A:
		move.b	#0,(Scroll_lock_P2).w
		move.w	(Saved2_X_pos).w,$10(a0)
		move.w	(Saved2_Y_pos).w,$14(a0)
		move.w	(Saved2_art_tile).w,$A(a0)
		move.w	(Saved2_solid_bits).w,$46(a0)
		clr.w	(Ring_count_P2).w
		move.b	#1,(_unkF74B).w

loc_13382:
		move.b	#0,$2E(a0)
		move.b	#5,$20(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		move.b	#2,$2A(a0)
		move.w	#0,$32(a0)
		move.w	#0,$3E(a0)
		clr.b	$36(a0)
		lea	(Character_Speeds).l,a1
		moveq	#0,d0
		move.b	$38(a0),d0
		lsl.w	#3,d0
		lea	(a1,d0.w),a1
		move.w	(a1)+,(a4)
		move.w	(a1)+,2(a4)
		move.w	(a1)+,4(a4)
		rts
; End of function sub_13230

; ---------------------------------------------------------------------------

loc_133D4:
		tst.w	$3E(a0)
		beq.s	locret_133E6
		subq.w	#1,$3E(a0)
		bne.s	locret_133E6
		move.w	#1,(Restart_level_flag).w

locret_133E6:
		rts
; ---------------------------------------------------------------------------

loc_133E8:
		tst.w	(Camera_RAM).w
		bne.s	loc_133FA
		tst.w	(V_scroll_amount).w
		bne.s	loc_133FA
		move.b	#2,5(a0)

loc_133FA:
		bsr.w	sub_13438
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_13404:
		tst.w	(Debug_mode_flag).w
		beq.s	loc_1341E
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_1341E
		move.w	#1,(Debug_placement_mode).w
		clr.b	(Ctrl_1_locked).w
		rts
; ---------------------------------------------------------------------------

loc_1341E:
		jsr	(MoveSprite2).l
		addi.w	#$10,$1A(a0)
		bsr.w	Sonic_RecordPos
		bsr.w	sub_13438
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_13438:
		tst.w	(Competition_mode).w
		bne.s	loc_13444
		bsr.s	Animate_Sonic
		bra.w	Sonic_Load_PLC
; ---------------------------------------------------------------------------

loc_13444:
		bsr.w	Animate_SonicKnuckles_2P
		bra.w	SonicKnuckles2P_Load_PLC
; End of function sub_13438


; =============== S U B R O U T I N E =======================================


Animate_Sonic:
		lea	(AniSonic).l,a1
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_1345E
		lea	(AniSuperSonic).l,a1

loc_1345E:
		moveq	#0,d0
		move.b	$20(a0),d0
		cmp.b	$21(a0),d0
		beq.s	loc_13480
		move.b	d0,$21(a0)
		move.b	#0,$23(a0)
		move.b	#0,$24(a0)
		bclr	#5,$2A(a0)

loc_13480:
		add.w	d0,d0
		adda.w	(a1,d0.w),a1
		move.b	(a1),d0
		bmi.s	loc_134F0
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		subq.b	#1,$24(a0)
		bpl.s	locret_134BE
		move.b	d0,$24(a0)

loc_134A6:
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#-4,d0
		bcc.s	loc_134C0

loc_134B6:
		move.b	d0,$22(a0)
		addq.b	#1,$23(a0)

locret_134BE:
		rts
; ---------------------------------------------------------------------------

loc_134C0:
		addq.b	#1,d0
		bne.s	loc_134D0
		move.b	#0,$23(a0)
		move.b	1(a1),d0
		bra.s	loc_134B6
; ---------------------------------------------------------------------------

loc_134D0:
		addq.b	#1,d0
		bne.s	loc_134E4
		move.b	2(a1,d1.w),d0
		sub.b	d0,$23(a0)
		sub.b	d0,d1
		move.b	1(a1,d1.w),d0
		bra.s	loc_134B6
; ---------------------------------------------------------------------------

loc_134E4:
		addq.b	#1,d0
		bne.s	locret_134EE
		move.b	2(a1,d1.w),$20(a0)

locret_134EE:
		rts
; ---------------------------------------------------------------------------

loc_134F0:
		addq.b	#1,d0
		bne.w	loc_13786
		moveq	#0,d0
		tst.b	$2D(a0)
		bmi.w	loc_1360C
		move.b	$27(a0),d0
		bne.w	loc_1360C
		moveq	#0,d1
		move.b	$26(a0),d0
		bmi.s	loc_13514
		beq.s	loc_13514
		subq.b	#1,d0

loc_13514:
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_13520
		not.b	d0

loc_13520:
		addi.b	#$10,d0
		bpl.s	loc_13528
		moveq	#3,d1

loc_13528:
		andi.b	#-4,4(a0)
		eor.b	d1,d2
		or.b	d2,4(a0)
		btst	#5,$2A(a0)
		bne.w	loc_137CE
		lsr.b	#4,d0
		andi.b	#6,d0
		move.w	$1C(a0),d2
		bpl.s	loc_1354C
		neg.w	d2

loc_1354C:
		tst.b	$2B(a0)
		bpl.w	loc_13556
		add.w	d2,d2

loc_13556:
		tst.b	(Super_Sonic_Knux_flag).w
		bne.s	loc_135B2
		lea	(AniSonic01).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_13570
		lea	(AniSonic00).l,a1
		add.b	d0,d0

loc_13570:
		add.b	d0,d0
		move.b	d0,d3
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#-1,d0
		bne.s	loc_1358E
		move.b	#0,$23(a0)
		move.b	1(a1),d0

loc_1358E:
		move.b	d0,$22(a0)
		add.b	d3,$22(a0)
		subq.b	#1,$24(a0)
		bpl.s	locret_135B0
		neg.w	d2
		addi.w	#$800,d2
		bpl.s	loc_135A6
		moveq	#0,d2

loc_135A6:
		lsr.w	#8,d2
		move.b	d2,$24(a0)
		addq.b	#1,$23(a0)

locret_135B0:
		rts
; ---------------------------------------------------------------------------

loc_135B2:
		lea	(AniSuperSonic01).l,a1
		cmpi.w	#$800,d2
		bcc.s	loc_135CA
		lea	(AniSuperSonic00).l,a1
		add.b	d0,d0
		add.b	d0,d0
		bra.s	loc_135CC
; ---------------------------------------------------------------------------

loc_135CA:
		add.b	d0,d0

loc_135CC:
		move.b	d0,d3
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#-1,d0
		bne.s	loc_135E8
		move.b	#0,$23(a0)
		move.b	1(a1),d0

loc_135E8:
		move.b	d0,$22(a0)
		add.b	d3,$22(a0)
		subq.b	#1,$24(a0)
		bpl.s	locret_1360A
		neg.w	d2
		addi.w	#$800,d2
		bpl.s	loc_13600
		moveq	#0,d2

loc_13600:
		lsr.w	#8,d2
		move.b	d2,$24(a0)
		addq.b	#1,$23(a0)

locret_1360A:
		rts
; ---------------------------------------------------------------------------

loc_1360C:
		move.b	$2D(a0),d1
		andi.w	#$7F,d1
		bne.s	loc_13682
		move.b	$27(a0),d0
		moveq	#0,d1
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_13658
		andi.b	#-4,4(a0)
		tst.b	$2D(a0)
		bpl.s	loc_13640
		ori.b	#2,4(a0)
		neg.b	d0
		addi.b	#-$71,d0
		bra.s	loc_13644
; ---------------------------------------------------------------------------

loc_13640:
		addi.b	#$B,d0

loc_13644:
		divu.w	#$16,d0
		addi.b	#$31,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_13658:
		andi.b	#-4,4(a0)
		ori.b	#3,4(a0)
		neg.b	d0
		addi.b	#-$71,d0
		divu.w	#$16,d0
		addi.b	#$31,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------
byte_1367E:	dc.b 0
		dc.b $3D
		dc.b $49
		dc.b $49
; ---------------------------------------------------------------------------

loc_13682:
		move.b	byte_1367E(pc,d1.w),d3
		cmpi.b	#1,d1
		bne.s	loc_136DA
		move.b	$27(a0),d0
		moveq	#0,d1
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_136B8
		andi.b	#-4,4(a0)
		addi.b	#-8,d0
		divu.w	#$16,d0
		add.b	d3,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_136B8:
		andi.b	#-4,4(a0)
		ori.b	#1,4(a0)
		addi.b	#-8,d0
		divu.w	#$16,d0
		add.b	d3,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_136DA:
		cmpi.b	#2,d1
		bne.s	loc_13730
		move.b	$27(a0),d0
		moveq	#0,d1
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_1370C
		andi.b	#-4,4(a0)
		addi.b	#$B,d0
		divu.w	#$16,d0
		add.b	d3,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_1370C:
		andi.b	#-4,4(a0)
		ori.b	#3,4(a0)
		neg.b	d0
		addi.b	#-$71,d0
		divu.w	#$16,d0
		add.b	d3,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_13730:
		move.b	$27(a0),d0
		moveq	#0,d1
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_13764
		andi.b	#-4,4(a0)
		ori.b	#2,4(a0)
		neg.b	d0
		addi.b	#-$71,d0
		divu.w	#$16,d0
		add.b	d3,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_13764:
		andi.b	#-4,4(a0)
		ori.b	#1,4(a0)
		addi.b	#$B,d0
		divu.w	#$16,d0
		add.b	d3,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_13786:
		subq.b	#1,$24(a0)
		bpl.w	locret_134BE
		move.w	$1C(a0),d2
		bpl.s	loc_13796
		neg.w	d2

loc_13796:
		lea	(AniSonic03).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_137A8
		lea	(AniSonic02).l,a1

loc_137A8:
		neg.w	d2
		addi.w	#$400,d2
		bpl.s	loc_137B2
		moveq	#0,d2

loc_137B2:
		lsr.w	#8,d2
		move.b	d2,$24(a0)
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		bra.w	loc_134A6
; ---------------------------------------------------------------------------

loc_137CE:
		subq.b	#1,$24(a0)
		bpl.w	locret_134BE
		move.w	$1C(a0),d2
		bmi.s	loc_137DE
		neg.w	d2

loc_137DE:
		addi.w	#$800,d2
		bpl.s	loc_137E6
		moveq	#0,d2

loc_137E6:
		lsr.w	#6,d2
		move.b	d2,$24(a0)
		lea	(AniSonic04).l,a1
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_137FE
		lea	(AniSuperSonic04).l,a1

loc_137FE:
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		bra.w	loc_134A6
; End of function Animate_Sonic

; ---------------------------------------------------------------------------
AniSonic:	include "General/Sprites/Sonic/Anim - Sonic S3.asm"

; =============== S U B R O U T I N E =======================================


Sonic_Load_PLC:
		moveq	#0,d0
		move.b	$22(a0),d0

Sonic_Load_PLC2:
		cmp.b	(Player_prev_frame).w,d0
		beq.s	locret_13A80
		move.b	d0,(Player_prev_frame).w
		lea	(PLC_Sonic).l,a2
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_13A44
		lea	(PLC_SuperSonic).l,a2

loc_13A44:
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_13A80
		move.w	#tiles_to_bytes(ArtTile_Player_1),d4

loc_13A54:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		addi.l	#ArtUnc_Sonic,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_13A54

locret_13A80:
		rts
; End of function Sonic_Load_PLC


; =============== S U B R O U T I N E =======================================


Perform_Player_DPLC:
		tst.b	$38(a1)
		beq.s	Sonic_Load_PLC2
		bra.w	Tails_Load_PLC2
; End of function Perform_Player_DPLC


; =============== S U B R O U T I N E =======================================


Animate_SonicKnuckles_2P:
		lea	(AniSonic2P).l,a1
		tst.b	$38(a0)
		beq.s	loc_13A9E
		lea	(AniKnuckles2P).l,a1

loc_13A9E:
		moveq	#0,d0
		move.b	$20(a0),d0
		cmp.b	$21(a0),d0
		beq.s	loc_13AC0
		move.b	d0,$21(a0)
		move.b	#0,$23(a0)
		move.b	#0,$24(a0)
		bclr	#5,$2A(a0)

loc_13AC0:
		add.w	d0,d0
		adda.w	(a1,d0.w),a1
		move.b	(a1),d0
		bmi.s	loc_13B30
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		subq.b	#1,$24(a0)
		bpl.s	locret_13AFE
		move.b	d0,$24(a0)

loc_13AE6:
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#-4,d0
		bcc.s	loc_13B00

loc_13AF6:
		move.b	d0,$22(a0)
		addq.b	#1,$23(a0)

locret_13AFE:
		rts
; ---------------------------------------------------------------------------

loc_13B00:
		addq.b	#1,d0
		bne.s	loc_13B10
		move.b	#0,$23(a0)
		move.b	1(a1),d0
		bra.s	loc_13AF6
; ---------------------------------------------------------------------------

loc_13B10:
		addq.b	#1,d0
		bne.s	loc_13B24
		move.b	2(a1,d1.w),d0
		sub.b	d0,$23(a0)
		sub.b	d0,d1
		move.b	1(a1,d1.w),d0
		bra.s	loc_13AF6
; ---------------------------------------------------------------------------

loc_13B24:
		addq.b	#1,d0
		bne.s	locret_13B2E
		move.b	2(a1,d1.w),$20(a0)

locret_13B2E:
		rts
; ---------------------------------------------------------------------------

loc_13B30:
		addq.b	#1,d0
		bne.w	loc_13C4A
		moveq	#0,d0
		move.b	$27(a0),d0
		bne.w	loc_13BE4
		moveq	#0,d1
		move.b	$26(a0),d0
		bmi.s	loc_13B4C
		beq.s	loc_13B4C
		subq.b	#1,d0

loc_13B4C:
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_13B58
		not.b	d0

loc_13B58:
		addi.b	#$10,d0
		bpl.s	loc_13B60
		moveq	#3,d1

loc_13B60:
		andi.b	#-4,4(a0)
		eor.b	d1,d2
		or.b	d2,4(a0)
		btst	#5,$2A(a0)
		bne.w	loc_13C92
		lsr.b	#5,d0
		andi.b	#3,d0
		move.w	$1C(a0),d2
		bpl.s	loc_13B84
		neg.w	d2

loc_13B84:
		tst.b	$2B(a0)
		bpl.w	loc_13B8E
		add.w	d2,d2

loc_13B8E:
		move.b	d0,d3
		lea	(AniSonic2P01).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_13BA4
		lea	(AniSonic2P00).l,a1
		add.b	d0,d0

loc_13BA4:
		add.b	d0,d3
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#-1,d0
		bne.s	loc_13BC0
		move.b	#0,$23(a0)
		move.b	1(a1),d0

loc_13BC0:
		move.b	d0,$22(a0)
		add.b	d3,$22(a0)
		subq.b	#1,$24(a0)
		bpl.s	locret_13BE2
		neg.w	d2
		addi.w	#$800,d2
		bpl.s	loc_13BD8
		moveq	#0,d2

loc_13BD8:
		lsr.w	#8,d2
		move.b	d2,$24(a0)
		addq.b	#1,$23(a0)

locret_13BE2:
		rts
; ---------------------------------------------------------------------------

loc_13BE4:
		move.b	$27(a0),d0
		moveq	#0,d1
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_13C12
		andi.b	#-4,4(a0)
		addi.b	#$16,d0
		divu.w	#$2C,d0
		addi.b	#$15,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_13C12:
		andi.b	#-4,4(a0)
		tst.b	$2D(a0)
		bpl.s	loc_13C2A
		ori.b	#1,4(a0)
		addi.b	#$16,d0
		bra.s	loc_13C36
; ---------------------------------------------------------------------------

loc_13C2A:
		ori.b	#3,4(a0)
		neg.b	d0
		addi.b	#-$66,d0

loc_13C36:
		divu.w	#$2C,d0
		addi.b	#$15,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_13C4A:
		subq.b	#1,$24(a0)
		bpl.w	locret_13AFE
		move.w	$1C(a0),d2
		bpl.s	loc_13C5A
		neg.w	d2

loc_13C5A:
		lea	(AniSonic2P03).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_13C6C
		lea	(AniSonic2P02).l,a1

loc_13C6C:
		neg.w	d2
		addi.w	#$400,d2
		bpl.s	loc_13C76
		moveq	#0,d2

loc_13C76:
		lsr.w	#8,d2
		move.b	d2,$24(a0)
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		bra.w	loc_13AE6
; ---------------------------------------------------------------------------

loc_13C92:
		subq.b	#1,$24(a0)
		bpl.w	locret_13AFE
		move.w	$1C(a0),d2
		bmi.s	loc_13CA2
		neg.w	d2

loc_13CA2:
		addi.w	#$800,d2
		bpl.s	loc_13CAA
		moveq	#0,d2

loc_13CAA:
		lsr.w	#6,d2
		lea	(AniSonic2P04).l,a1
		tst.b	$38(a0)
		beq.s	loc_13CC0
		lea	(AniKnuckles2P04).l,a1
		lsr.w	#2,d2

loc_13CC0:
		move.b	d2,$24(a0)
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		bra.w	loc_13AE6
; End of function Animate_SonicKnuckles_2P

; ---------------------------------------------------------------------------
AniSonic2P:	include "General/Sprites/Sonic/Anim - Sonic Knuckles 2P.asm"

; =============== S U B R O U T I N E =======================================


SonicKnuckles2P_Load_PLC:
		moveq	#0,d0
		move.b	$22(a0),d0
		lea	(PLC_Sonic2P).l,a2
		move.l	#ArtUnc_Sonic2P,d6
		tst.b	$38(a0)
		beq.s	loc_13E14
		lea	(PLC_Knuckles2P).l,a2
		move.l	#ArtUnc_Knuckles2P,d6

loc_13E14:
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_13E56
		move.w	#tiles_to_bytes(ArtTile_Player_1),d4
		cmpa.w	#Player_1,a0
		beq.s	loc_13E2E
		move.w	#tiles_to_bytes(ArtTile_Player_2),d4

loc_13E2E:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		add.l	d6,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_13E2E

locret_13E56:
		rts
; End of function SonicKnuckles2P_Load_PLC

; ---------------------------------------------------------------------------

Obj_Tails2P:
		cmpa.w	#Player_1,a0
		bne.s	loc_13E86
		lea	(Max_speed).w,a4
		lea	(Distance_from_top).w,a5
		lea	(Dust).w,a6
		move.b	(Player_2+character_id).w,d0
		cmp.b	$38(a0),d0
		bne.s	loc_13E7A
		bchg	#3,4(a0)

loc_13E7A:
		tst.w	(Debug_placement_mode).w
		beq.s	loc_13EA2
		jmp	(DebugMode).l
; ---------------------------------------------------------------------------

loc_13E86:
		lea	(Max_speed_P2).w,a4
		lea	(Distance_from_top_P2).w,a5
		lea	(Dust_P2).w,a6
		move.b	(Player_1+character_id).w,d0
		cmp.b	$38(a0),d0
		bne.s	loc_13EA2
		bchg	#4,4(a0)

loc_13EA2:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_13EB0(pc,d0.w),d1
		jmp	off_13EB0(pc,d1.w)
; ---------------------------------------------------------------------------
off_13EB0:	dc.w loc_13EBC-off_13EB0
		dc.w loc_13FCA-off_13EB0
		dc.w loc_1620A-off_13EB0
		dc.w loc_162C4-off_13EB0
		dc.w loc_162F4-off_13EB0
		dc.w loc_16308-off_13EB0
; ---------------------------------------------------------------------------

loc_13EBC:
		addq.b	#2,5(a0)
		move.b	#$B,$1E(a0)
		move.b	#5,$1F(a0)
		move.b	#$B,$44(a0)
		move.b	#5,$45(a0)
		move.l	#Map_Tails2P,$C(a0)
		move.w	#$100,8(a0)
		move.b	#$C,7(a0)
		move.b	#$C,6(a0)
		move.b	#$84,4(a0)
		move.b	#1,$38(a0)
		lea	(Character_Speeds).l,a1
		moveq	#0,d0
		move.b	$38(a0),d0
		lsl.w	#3,d0
		lea	(a1,d0.w),a1
		move.w	(a1)+,(a4)
		move.w	(a1)+,2(a4)
		move.w	(a1)+,4(a4)
		tst.b	(Last_star_post_hit).w
		bne.w	loc_13FA6
		move.b	#$C,$46(a0)
		move.b	#$D,$47(a0)
		cmpa.w	#Player_1,a0
		bne.s	loc_13F6E
		move.w	#ArtTile_Player_1,$A(a0)
		cmpi.b	#$12,(Current_zone).w
		bne.s	loc_13F48
		ori.w	#$8000,$A(a0)

loc_13F48:
		move.w	$10(a0),(Saved_X_pos).w
		move.w	$14(a0),(Saved_Y_pos).w
		move.w	$A(a0),(Saved_art_tile).w
		move.w	$46(a0),(Saved_solid_bits).w
		move.l	#Obj_Tails2P_Tail,(Tails_tails_2P).w
		move.w	a0,(Tails_tails_2P+$30).w
		bra.s	loc_13FA6
; ---------------------------------------------------------------------------

loc_13F6E:
		move.w	#ArtTile_Player_2,$A(a0)
		cmpi.b	#$12,(Current_zone).w
		bne.s	loc_13F82
		ori.w	#$8000,$A(a0)

loc_13F82:
		move.w	$10(a0),(Saved2_X_pos).w
		move.w	$14(a0),(Saved2_Y_pos).w
		move.w	$A(a0),(Saved2_art_tile).w
		move.w	$46(a0),(Saved2_solid_bits).w
		move.l	#Obj_Tails2P_Tail,(Tails_tails).w
		move.w	a0,(Tails_tails+$30).w

loc_13FA6:
		move.b	#0,$30(a0)
		move.b	#4,$31(a0)
		move.b	#$1E,$2C(a0)
		move.w	#0,(Tails_CPU_routine).w
		move.w	#600,(Tails_CPU_idle_timer).w
		move.w	#0,(Tails_CPU_flight_timer).w

loc_13FCA:
		tst.w	(Debug_mode_flag).w
		beq.s	loc_13FEA
		cmpa.w	#Player_1,a0
		bne.s	loc_13FEA
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_13FEA
		move.w	#1,(Debug_placement_mode).w
		clr.b	(Ctrl_1_locked).w
		rts
; ---------------------------------------------------------------------------

loc_13FEA:
		cmpa.w	#Player_1,a0
		bne.s	loc_1400A
		move.w	(Ctrl_1_logical).w,(Ctrl_2_logical).w
		tst.b	(Ctrl_1_locked).w
		bne.s	loc_14016
		move.w	(Ctrl_1).w,(Ctrl_2_logical).w
		move.w	(Ctrl_1).w,(Ctrl_1_logical).w
		bra.s	loc_14016
; ---------------------------------------------------------------------------

loc_1400A:
		tst.b	(Ctrl_2_locked).w
		bne.s	loc_14016
		move.w	(Ctrl_2).w,(Ctrl_2_logical).w

loc_14016:
		bsr.w	sub_14626
		btst	#0,$2E(a0)
		bne.s	loc_14034
		moveq	#0,d0
		move.b	$2A(a0),d0
		andi.w	#6,d0
		move.w	off_14084(pc,d0.w),d1
		jsr	off_14084(pc,d1.w)

loc_14034:
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_14044
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)

loc_14044:
		move.w	(Screen_X_wrap_value).w,d0
		and.w	d0,$10(a0)
		addi.w	#$400,$10(a0)
		bsr.w	Sonic_RecordPos
		move.b	(Primary_Angle).w,$3A(a0)
		move.b	(Secondary_Angle).w,$3B(a0)
		btst	#1,$2E(a0)
		bne.s	loc_14072
		bsr.w	Animate_Tails2P
		bsr.w	Tails2P_Load_PLC

loc_14072:
		move.b	$2E(a0),d0
		andi.b	#-$60,d0
		bne.s	locret_14082
		jsr	(TouchResponse_CompetitionMode).l

locret_14082:
		rts
; ---------------------------------------------------------------------------
off_14084:	dc.w loc_1408C-off_14084
		dc.w loc_140B0-off_14084
		dc.w loc_141C0-off_14084
		dc.w loc_141E2-off_14084
; ---------------------------------------------------------------------------

loc_1408C:
		bsr.w	sub_14276
		bsr.w	Tails_Jump
		bsr.w	Tails_SlopeResist
		bsr.w	Tails_InputAcceleration_Path
		bsr.w	sub_14210
		jsr	(MoveSprite2).l
		bsr.w	Player_AnglePos
		bsr.w	Tails_SlopeRepel
		rts
; ---------------------------------------------------------------------------

loc_140B0:
		tst.b	$2F(a0)
		bne.s	loc_140E4
		bsr.w	Tails_JumpHeight
		bsr.w	Tails_InputAcceleration_Freespace
		jsr	(MoveSprite).l
		btst	#6,$2A(a0)
		beq.s	loc_140D2
		subi.w	#$28,$1A(a0)

loc_140D2:
		bsr.w	Tails_JumpAngle
		movem.l	a4-a6,-(sp)
		bsr.w	Tails_DoLevelCollision
		movem.l	(sp)+,a4-a6
		rts
; ---------------------------------------------------------------------------

loc_140E4:
		bsr.w	sub_14104
		bsr.w	Tails_InputAcceleration_Freespace
		jsr	(MoveSprite2).l
		bsr.w	Tails_JumpAngle
		movem.l	a4-a6,-(sp)
		bsr.w	Tails_DoLevelCollision
		movem.l	(sp)+,a4-a6
		rts

; =============== S U B R O U T I N E =======================================


sub_14104:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#1,d0
		beq.s	loc_14118
		tst.b	$25(a0)
		beq.s	loc_14118
		subq.b	#1,$25(a0)

loc_14118:
		cmpi.b	#1,$2F(a0)
		beq.s	loc_14142
		cmpi.w	#-$100,$1A(a0)
		blt.s	loc_1413A
		subi.w	#$20,$1A(a0)
		addq.b	#1,$2F(a0)
		cmpi.b	#$20,$2F(a0)
		bne.s	loc_14140

loc_1413A:
		move.b	#1,$2F(a0)

loc_14140:
		bra.s	loc_14174
; ---------------------------------------------------------------------------

loc_14142:
		move.b	(Ctrl_2_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.s	loc_1416E
		cmpi.w	#-$100,$1A(a0)
		blt.s	loc_1416E
		tst.b	$25(a0)
		beq.s	loc_1416E
		btst	#6,$2A(a0)
		beq.s	loc_14168
		tst.b	(Flying_carrying_Sonic_flag).w
		bne.s	loc_1416E

loc_14168:
		move.b	#2,$2F(a0)

loc_1416E:
		addi.w	#8,$1A(a0)

loc_14174:
		move.w	(Camera_min_Y_pos).w,d0
		addi.w	#$10,d0
		cmp.w	$14(a0),d0
		blt.s	loc_1418E
		tst.w	$1A(a0)
		bpl.s	loc_1418E
		move.w	#0,$1A(a0)

loc_1418E:
		tst.b	$25(a0)
		bne.s	loc_141AA
		move.b	(Level_frame_counter+1).w,d0
		addq.b	#8,d0
		andi.b	#$F,d0
		bne.s	locret_141A8
		moveq	#signextendB(sfx_FlyTired),d0
		jsr	(Play_Sound_2).l

locret_141A8:
		rts
; ---------------------------------------------------------------------------

loc_141AA:
		move.b	(Level_frame_counter+1).w,d0
		addq.b	#8,d0
		andi.b	#$F,d0
		bne.s	locret_141BE
		moveq	#signextendB(sfx_Flying),d0
		jsr	(Play_Sound_2).l

locret_141BE:
		rts
; End of function sub_14104

; ---------------------------------------------------------------------------

loc_141C0:
		tst.b	$3D(a0)
		bne.s	loc_141CA
		bsr.w	Tails_Jump

loc_141CA:
		bsr.w	Tails_RollRepel
		bsr.w	Tails_RollSpeed
		jsr	(MoveSprite2).l
		bsr.w	Player_AnglePos
		bsr.w	Tails_SlopeRepel
		rts
; ---------------------------------------------------------------------------

loc_141E2:
		bsr.w	Tails_JumpHeight
		bsr.w	Tails_InputAcceleration_Freespace
		jsr	(MoveSprite).l
		btst	#6,$2A(a0)
		beq.s	loc_141FE
		subi.w	#$28,$1A(a0)

loc_141FE:
		bsr.w	Tails_JumpAngle
		movem.l	a4-a6,-(sp)
		bsr.w	Tails_DoLevelCollision
		movem.l	(sp)+,a4-a6
		rts

; =============== S U B R O U T I N E =======================================


sub_14210:
		tst.b	$2B(a0)
		bmi.s	locret_14236
		move.w	$1C(a0),d0
		bpl.s	loc_1421E
		neg.w	d0

loc_1421E:
		cmpi.w	#$80,d0
		bcs.s	locret_14236
		move.b	(Ctrl_2_held_logical).w,d0
		andi.b	#$C,d0
		bne.s	locret_14236
		btst	#1,(Ctrl_2_held_logical).w
		bne.s	loc_14238

locret_14236:
		rts
; ---------------------------------------------------------------------------

loc_14238:
		btst	#2,$2A(a0)
		beq.s	loc_14242
		rts
; ---------------------------------------------------------------------------

loc_14242:
		bset	#2,$2A(a0)
		move.b	#7,$1E(a0)
		move.b	#3,$1F(a0)
		move.b	#2,$20(a0)
		addq.w	#4,$14(a0)
		move.w	#sfx_Roll,d0
		jsr	(Play_Sound_2).l
		tst.w	$1C(a0)
		bne.s	locret_14274
		move.w	#$200,$1C(a0)

locret_14274:
		rts
; End of function sub_14210


; =============== S U B R O U T I N E =======================================


sub_14276:
		tst.b	$3D(a0)
		bne.s	loc_142C6
		cmpi.b	#8,$20(a0)
		bne.s	locret_142C4
		move.b	(Ctrl_2_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	locret_142C4
		move.b	#9,$20(a0)
		move.w	#$FF00|sfx_Spindash,d0
		jsr	(Play_Sound_2).l
		addq.l	#4,sp
		move.b	#1,$3D(a0)
		move.w	#0,$3E(a0)
		cmpi.b	#$C,$2C(a0)
		bcs.s	loc_142BC
		move.b	#2,$20(a6)

loc_142BC:
		bsr.w	Tails_Check_Screen_Boundaries
		bsr.w	Player_AnglePos

locret_142C4:
		rts
; ---------------------------------------------------------------------------

loc_142C6:
		move.b	(Ctrl_2_held_logical).w,d0
		btst	#1,d0
		bne.w	loc_14356
		move.b	#7,$1E(a0)
		move.b	#3,$1F(a0)
		move.b	#2,$20(a0)
		addq.w	#4,$14(a0)
		move.b	#0,$3D(a0)
		moveq	#0,d0
		move.b	$3E(a0),d0
		add.w	d0,d0
		move.w	word_14344(pc,d0.w),$1C(a0)
		move.w	$1C(a0),d0
		subi.w	#$800,d0
		add.w	d0,d0
		andi.w	#$1F00,d0
		neg.w	d0
		addi.w	#$2000,d0
		lea	(H_scroll_frame_offset).w,a1
		cmpa.w	#Player_1,a0
		beq.s	loc_1431E
		lea	(H_scroll_frame_offset_P2).w,a1

loc_1431E:
		move.w	d0,(a1)
		btst	#0,$2A(a0)
		beq.s	loc_1432C
		neg.w	$1C(a0)

loc_1432C:
		bset	#2,$2A(a0)
		move.b	#0,$20(a6)
		move.w	#$FF00|sfx_Dash,d0
		jsr	(Play_Sound_2).l
		bra.s	loc_1439E
; ---------------------------------------------------------------------------
word_14344:	dc.w $800
		dc.w $880
		dc.w $900
		dc.w $980
		dc.w $A00
		dc.w $A80
		dc.w $B00
		dc.w $B80
		dc.w $C00
; ---------------------------------------------------------------------------

loc_14356:
		tst.w	$3E(a0)
		beq.s	loc_1436E
		move.w	$3E(a0),d0
		lsr.w	#5,d0
		sub.w	d0,$3E(a0)
		bcc.s	loc_1436E
		move.w	#0,$3E(a0)

loc_1436E:
		move.b	(Ctrl_2_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	loc_1439E
		move.w	#$900,$20(a0)
		move.w	#$FF00|sfx_Spindash,d0
		jsr	(Play_Sound_2).l
		addi.w	#$200,$3E(a0)
		cmpi.w	#$800,$3E(a0)
		bcs.s	loc_1439E
		move.w	#$800,$3E(a0)

loc_1439E:
		addq.l	#4,sp
		cmpi.w	#$60,(a5)
		beq.s	loc_143AC
		bcc.s	loc_143AA
		addq.w	#4,(a5)

loc_143AA:
		subq.w	#2,(a5)

loc_143AC:
		bsr.w	Player_AnglePos
		rts
; End of function sub_14276

; ---------------------------------------------------------------------------

Obj_Tails:
		lea	(Max_speed_P2).w,a4
		lea	(Distance_from_top_P2).w,a5
		lea	(Dust_P2).w,a6
		cmpi.w	#2,(Player_mode).w
		bne.s	loc_14404
		tst.w	(Debug_placement_mode).w
		beq.s	loc_14404
		cmpi.b	#1,(Debug_placement_type).w
		beq.s	loc_143FE
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_143E2
		move.w	#0,(Debug_placement_mode).w

loc_143E2:
		addq.b	#1,$22(a0)
		cmpi.b	#-$2F,$22(a0)
		bcs.s	loc_143F4
		move.b	#0,$22(a0)

loc_143F4:
		bsr.w	Tails_Load_PLC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_143FE:
		jmp	(DebugMode).l
; ---------------------------------------------------------------------------

loc_14404:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_14412(pc,d0.w),d1
		jmp	off_14412(pc,d1.w)
; ---------------------------------------------------------------------------
off_14412:	dc.w loc_14420-off_14412
		dc.w loc_14514-off_14412
		dc.w loc_1620A-off_14412
		dc.w loc_162C4-off_14412
		dc.w loc_162F4-off_14412
		dc.w loc_16308-off_14412
		dc.w loc_16324-off_14412
; ---------------------------------------------------------------------------

loc_14420:
		addq.b	#2,5(a0)
		move.b	#$F,$1E(a0)
		move.b	#9,$1F(a0)
		move.b	#$F,$44(a0)
		move.b	#9,$45(a0)
		move.l	#Map_Tails,$C(a0)
		move.w	#$100,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.b	#$84,4(a0)
		move.b	#1,$38(a0)
		move.w	#$600,(a4)
		move.w	#$C,2(a4)
		move.w	#$80,4(a4)
		cmpi.w	#2,(Player_mode).w
		bne.s	loc_144B4
		tst.b	(Last_star_post_hit).w
		bne.s	loc_144CC
		move.w	#ArtTile_Player_2,$A(a0)
		move.b	#$C,$46(a0)
		move.b	#$D,$47(a0)
		cmpi.b	#2,(Special_bonus_entry_flag).w
		beq.s	loc_144CC
		move.w	$10(a0),(Saved_X_pos).w
		move.w	$14(a0),(Saved_Y_pos).w
		move.w	$A(a0),(Saved_art_tile).w
		move.w	$46(a0),(Saved_solid_bits).w
		bra.s	loc_144CC
; ---------------------------------------------------------------------------

loc_144B4:
		move.w	#ArtTile_Player_2,$A(a0)
		move.w	(Player_1+top_solid_bit).w,$46(a0)
		tst.w	(Player_1+art_tile).w
		bpl.s	loc_144CC
		ori.w	#$8000,$A(a0)

loc_144CC:
		move.b	#0,$30(a0)
		move.b	#4,$31(a0)
		move.b	#$1E,$2C(a0)
		cmpi.w	#$20,(Tails_CPU_routine).w
		beq.s	loc_144F4
		cmpi.w	#$12,(Tails_CPU_routine).w
		beq.s	loc_144F4
		move.w	#0,(Tails_CPU_routine).w

loc_144F4:
		move.w	#0,(Tails_CPU_idle_timer).w
		move.w	#0,(Tails_CPU_flight_timer).w
		move.l	#Obj_Tails_Tail,(Tails_tails).w
		move.w	a0,(Tails_tails+$30).w
		move.b	(Last_star_post_hit).w,(Tails_CPU_star_post_flag).w
		rts
; ---------------------------------------------------------------------------

loc_14514:
		cmpi.w	#2,(Player_mode).w
		bne.s	loc_14544
		tst.w	(Debug_mode_flag).w
		beq.s	loc_14544
		btst	#4,(Ctrl_1_pressed).w
		beq.s	loc_14544
		move.w	#1,(Debug_placement_mode).w
		clr.b	(Ctrl_1_locked).w
		btst	#5,(Ctrl_1_held).w
		beq.s	locret_14542
		move.w	#2,(Debug_placement_mode).w

locret_14542:
		rts
; ---------------------------------------------------------------------------

loc_14544:
		cmpa.w	#Player_1,a0
		bne.s	loc_1456C
		move.w	(Ctrl_1_logical).w,(Ctrl_2_logical).w
		tst.b	(Ctrl_1_locked).w
		bne.s	loc_14582
		move.w	(Ctrl_1).w,(Ctrl_2_logical).w
		move.w	(Ctrl_1).w,(Ctrl_1_logical).w
		cmpi.w	#$1A,(Tails_CPU_routine).w
		bcc.s	loc_14578
		bra.s	loc_14582
; ---------------------------------------------------------------------------

loc_1456C:
		tst.b	(Ctrl_2_locked).w
		bne.s	loc_14582
		move.w	(Ctrl_2).w,(Ctrl_2_logical).w

loc_14578:
		tst.w	(Competition_mode).w
		bne.s	loc_14582
		bsr.w	Tails_CPU_Control

loc_14582:
		btst	#0,$2E(a0)
		beq.s	loc_145AA
		move.b	#0,$2F(a0)
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	loc_145C4
		lea	(Player_1).w,a1
		clr.b	$2E(a1)
		bset	#1,$2A(a1)
		clr.w	(Flying_carrying_Sonic_flag).w
		bra.s	loc_145C4
; ---------------------------------------------------------------------------

loc_145AA:
		movem.l	a4-a6,-(sp)
		moveq	#0,d0
		move.b	$2A(a0),d0
		andi.w	#6,d0
		move.w	off_1461E(pc,d0.w),d1
		jsr	off_1461E(pc,d1.w)
		movem.l	(sp)+,a4-a6

loc_145C4:
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_145D4
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)

loc_145D4:
		bsr.s	sub_14626
		bsr.w	Sonic_RecordPos
		bsr.w	sub_15284
		move.b	(Primary_Angle).w,$3A(a0)
		move.b	(Secondary_Angle).w,$3B(a0)
		tst.b	(WindTunnel_flag_P2).w
		beq.s	loc_145FC
		tst.b	$20(a0)
		bne.s	loc_145FC
		move.b	$21(a0),$20(a0)

loc_145FC:
		btst	#1,$2E(a0)
		bne.s	loc_1460C
		bsr.w	Animate_Tails
		bsr.w	Tails_Load_PLC

loc_1460C:
		move.b	$2E(a0),d0
		andi.b	#-$60,d0
		bne.s	locret_1461C
		jsr	(TouchResponse).l

locret_1461C:
		rts
; ---------------------------------------------------------------------------
off_1461E:	dc.w Tails_Stand_Path-off_1461E
		dc.w Tails_Stand_Freespace-off_1461E
		dc.w Tails_Spin_Path-off_1461E
		dc.w Tails_Spin_Freespace-off_1461E

; =============== S U B R O U T I N E =======================================


sub_14626:
		move.b	$34(a0),d0
		beq.s	loc_14634
		subq.b	#1,$34(a0)
		lsr.b	#3,d0
		bcc.s	loc_1463A

loc_14634:
		jsr	(Draw_Sprite).l

loc_1463A:
		btst	#1,$2B(a0)
		beq.s	loc_14676
		tst.b	$35(a0)
		beq.s	loc_14676
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#7,d0
		bne.s	loc_14676
		subq.b	#1,$35(a0)
		bne.s	loc_14676
		tst.b	(Boss_flag).w
		bne.s	loc_14670
		cmpi.b	#$C,$2C(a0)
		bcs.s	loc_14670
		move.w	(Level_music).w,d0
		jsr	(Play_Sound).l

loc_14670:
		bclr	#1,$2B(a0)

loc_14676:
		btst	#2,$2B(a0)
		beq.s	locret_146B8
		tst.b	$36(a0)
		beq.s	locret_146B8
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#7,d0
		bne.s	locret_146B8
		subq.b	#1,$36(a0)
		bne.s	locret_146B8
		tst.w	(Competition_mode).w
		bne.s	loc_146BA
		move.w	#$600,(a4)
		move.w	#$C,2(a4)
		move.w	#$80,4(a4)
		bclr	#2,$2B(a0)
		moveq	#0,d0
		jmp	(Change_Music_Tempo).l
; ---------------------------------------------------------------------------

locret_146B8:
		rts
; ---------------------------------------------------------------------------

loc_146BA:
		lea	(Character_Speeds).l,a1
		moveq	#0,d0
		move.b	$38(a0),d0
		lsl.w	#3,d0
		lea	(a1,d0.w),a1
		move.w	(a1)+,(a4)
		move.w	(a1)+,2(a4)
		move.w	(a1)+,4(a4)
		bclr	#2,$2B(a0)
		rts
; End of function sub_14626


; =============== S U B R O U T I N E =======================================


Tails_CPU_Control:
		move.b	(Ctrl_2).w,d0
		andi.b	#$7F,d0
		beq.s	loc_146EE
		move.w	#600,(Tails_CPU_idle_timer).w

loc_146EE:
		lea	(Player_1).w,a1
		move.w	(Tails_CPU_routine).w,d0
		move.w	off_146FE(pc,d0.w),d0
		jmp	off_146FE(pc,d0.w)
; End of function Tails_CPU_Control

; ---------------------------------------------------------------------------
off_146FE:	dc.w loc_14722-off_146FE
		dc.w Tails_Catch_Up_Flying-off_146FE
		dc.w Tails_FlySwim_Unknown-off_146FE
		dc.w loc_149E8-off_146FE
		dc.w loc_14BC6-off_146FE
		dc.w locret_14C46-off_146FE
		dc.w loc_14C48-off_146FE
		dc.w loc_14C80-off_146FE
		dc.w loc_14D10-off_146FE
		dc.w loc_14D4C-off_146FE
		dc.w loc_14D54-off_146FE
		dc.w loc_14D8C-off_146FE
		dc.w loc_14DD2-off_146FE
		dc.w loc_14E78-off_146FE
		dc.w loc_14EA2-off_146FE
		dc.w loc_14EDA-off_146FE
		dc.w loc_14EE2-off_146FE
		dc.w loc_14F0C-off_146FE
; ---------------------------------------------------------------------------

loc_14722:
		tst.b	(Tails_CPU_star_post_flag).w
		bne.w	loc_147A8
		cmpi.w	#0,(Current_zone_and_act).w
		bne.s	loc_14744
		bsr.w	sub_14B58
		move.w	#$A,(Tails_CPU_routine).w
		move.b	#$83,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_14744:
		cmpi.w	#$100,(Current_zone_and_act).w
		beq.w	loc_147C6
		cmpi.w	#$200,(Current_zone_and_act).w
		beq.w	loc_147C6
		cmpi.w	#$300,(Current_zone_and_act).w
		bne.s	loc_14786
		move.w	#0,(Tails_CPU_idle_timer).w
		move.w	#0,(Tails_CPU_flight_timer).w
		move.b	#2,$2A(a0)
		move.w	#$18,$10(a0)
		move.w	#$600,$14(a0)
		move.w	#$C,(Tails_CPU_routine).w
		rts
; ---------------------------------------------------------------------------

loc_14786:
		cmpi.w	#$500,(Current_zone_and_act).w
		bne.s	loc_147A0
		bsr.w	sub_14B58
		move.w	#$A,(Tails_CPU_routine).w
		move.b	#$83,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_147A0:
		cmpi.w	#$600,(Current_zone_and_act).w
		beq.s	loc_147C6

loc_147A8:
		move.b	#0,$20(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		move.b	#0,$2A(a0)

loc_147C6:
		move.w	#6,(Tails_CPU_routine).w
		move.b	#0,$2E(a0)
		move.w	#0,(Tails_CPU_flight_timer).w
		rts
; ---------------------------------------------------------------------------

Tails_Catch_Up_Flying:
		move.b	(Ctrl_2_held_logical).w,d0
		andi.b	#$F0,d0
		bne.s	loc_14804
		move.w	(Level_frame_counter).w,d0
		andi.w	#$3F,d0
		bne.w	locret_148A0
		tst.b	$2E(a1)
		bne.w	locret_148A0
		move.b	$2A(a1),d0
		andi.b	#$92,d0
		bne.w	locret_148A0

loc_14804:
		move.w	#4,(Tails_CPU_routine).w
		move.w	$10(a1),d0
		move.w	d0,$10(a0)
		move.w	d0,(Tails_CPU_target_X).w
		move.w	$14(a1),d0
		move.w	d0,(Tails_CPU_target_Y).w
		subi.w	#$C0,d0
		move.w	d0,$14(a0)
		ori.w	#$8000,$A(a0)
		move.w	#$100,8(a0)
		moveq	#0,d0
		move.w	d0,$18(a0)
		move.w	d0,$1A(a0)
		move.w	d0,$1C(a0)
		move.b	d0,$2D(a0)
		move.b	d0,$2F(a0)
		move.b	#2,$2A(a0)
		move.b	#$1E,$2C(a0)
		move.b	#-$7F,$2E(a0)
		move.b	d0,$30(a0)
		move.b	d0,$31(a0)
		move.w	d0,$32(a0)
		move.b	d0,$34(a0)
		move.b	d0,$35(a0)
		move.b	d0,$36(a0)
		move.b	d0,$37(a0)
		move.b	d0,$39(a0)
		move.w	d0,$3A(a0)
		move.b	d0,$3C(a0)
		move.b	d0,$3D(a0)
		move.b	d0,$3D(a0)
		move.w	d0,$3E(a0)
		move.b	d0,$40(a0)
		move.b	d0,$41(a0)
		move.b	#-$10,$25(a0)
		bsr.w	Tails_Set_Flying_Animation

locret_148A0:
		rts
; ---------------------------------------------------------------------------

Tails_FlySwim_Unknown:
		tst.b	4(a0)
		bmi.s	loc_148E4
		addq.w	#1,(Tails_CPU_flight_timer).w
		cmpi.w	#300,(Tails_CPU_flight_timer).w
		bcs.s	loc_148FA
		move.w	#0,(Tails_CPU_flight_timer).w
		move.w	#2,(Tails_CPU_routine).w
		move.b	#$81,$2E(a0)
		move.b	#2,$2A(a0)
		move.w	#0,$10(a0)
		move.w	#0,$14(a0)
		move.b	#-$10,$25(a0)
		bsr.w	Tails_Set_Flying_Animation
		rts
; ---------------------------------------------------------------------------

loc_148E4:
		move.b	#-$10,$25(a0)
		ori.b	#2,$2A(a0)
		bsr.w	Tails_Set_Flying_Animation
		move.w	#0,(Tails_CPU_flight_timer).w

loc_148FA:
		lea	(Pos_table).w,a2
		move.w	#$10,d2
		lsl.b	#2,d2
		addq.b	#4,d2
		move.w	(Pos_table_index).w,d3
		sub.b	d2,d3
		move.w	(a2,d3.w),(Tails_CPU_target_X).w
		move.w	2(a2,d3.w),(Tails_CPU_target_Y).w
		bsr.w	Tails_Set_Flying_Animation
		move.w	$10(a0),d0
		sub.w	(Tails_CPU_target_X).w,d0
		beq.s	loc_1496C
		move.w	d0,d2
		bpl.s	loc_1492C
		neg.w	d2

loc_1492C:
		lsr.w	#4,d2
		cmpi.w	#$C,d2
		bcs.s	loc_14936
		moveq	#$C,d2

loc_14936:
		move.b	$18(a1),d1
		bpl.s	loc_1493E
		neg.b	d1

loc_1493E:
		add.b	d1,d2
		addq.w	#1,d2
		tst.w	d0
		bmi.s	loc_14958
		bset	#0,$2A(a0)
		cmp.w	d0,d2
		bcs.s	loc_14954
		move.w	d0,d2
		moveq	#0,d0

loc_14954:
		neg.w	d2
		bra.s	loc_14968
; ---------------------------------------------------------------------------

loc_14958:
		bclr	#0,$2A(a0)
		neg.w	d0
		cmp.w	d0,d2
		bcs.s	loc_14968
		move.b	d0,d2
		moveq	#0,d0

loc_14968:
		add.w	d2,$10(a0)

loc_1496C:
		moveq	#1,d2
		move.w	$14(a0),d1
		sub.w	(Tails_CPU_target_Y).w,d1
		beq.s	loc_14980
		bmi.s	loc_1497C
		neg.w	d2

loc_1497C:
		add.w	d2,$14(a0)

loc_14980:
		lea	(Stat_table).w,a2
		move.b	2(a2,d3.w),d2
		andi.b	#$92,d2
		bne.s	locret_149E6
		or.w	d0,d1
		bne.s	locret_149E6
		move.w	#6,(Tails_CPU_routine).w
		move.b	#0,$2E(a0)
		move.b	#0,$20(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		andi.b	#$40,$2A(a0)
		ori.b	#2,$2A(a0)
		move.w	#0,$32(a0)
		andi.w	#$7FFF,$A(a0)
		tst.b	$A(a1)
		bpl.s	loc_149DA
		ori.w	#$8000,$A(a0)

loc_149DA:
		move.b	$46(a1),$46(a0)
		move.b	$47(a1),$47(a0)

locret_149E6:
		rts
; ---------------------------------------------------------------------------

loc_149E8:
		cmpi.b	#6,(Player_1+routine).w
		bcs.s	loc_14A16
		move.w	#4,(Tails_CPU_routine).w
		move.b	#0,$3D(a0)
		move.w	#0,$3E(a0)
		move.b	#-$7F,$2E(a0)
		move.b	#2,$2A(a0)
		move.b	#$20,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_14A16:
		bsr.w	sub_14B8A
		tst.w	(Tails_CPU_idle_timer).w
		bne.w	loc_14B4C
		tst.b	$2E(a0)
		bmi.w	loc_14B4C
		tst.b	$37(a1)
		bmi.w	loc_14B4C
		tst.w	$32(a0)
		beq.s	loc_14A44
		tst.w	$1C(a0)
		bne.s	loc_14A44
		move.w	#8,(Tails_CPU_routine).w

loc_14A44:
		lea	(Pos_table).w,a2
		move.w	#$10,d1
		lsl.b	#2,d1
		addq.b	#4,d1
		move.w	(Pos_table_index).w,d0
		sub.b	d1,d0
		move.w	(a2,d0.w),d2
		btst	#3,$2A(a1)
		bne.s	loc_14A6E
		cmpi.w	#$400,$1C(a1)
		bge.s	loc_14A6E
		subi.w	#$20,d2

loc_14A6E:
		move.w	2(a2,d0.w),d3
		lea	(Stat_table).w,a2
		move.w	(a2,d0.w),d1
		move.b	2(a2,d0.w),d4
		move.w	d1,d0
		btst	#5,$2A(a0)
		beq.s	loc_14A90
		btst	#5,d4
		beq.w	loc_14B2A

loc_14A90:
		sub.w	$10(a0),d2
		beq.s	loc_14ADE
		bpl.s	loc_14ABC
		neg.w	d2
		cmpi.w	#$30,d2
		bcs.s	loc_14AA8
		andi.w	#-$C0D,d1
		ori.w	#$404,d1

loc_14AA8:
		tst.w	$1C(a0)
		beq.s	loc_14AF2
		btst	#0,$2A(a0)
		beq.s	loc_14AF2
		subq.w	#1,$10(a0)
		bra.s	loc_14AF2
; ---------------------------------------------------------------------------

loc_14ABC:
		cmpi.w	#$30,d2
		bcs.s	loc_14ACA
		andi.w	#-$C0D,d1
		ori.w	#$808,d1

loc_14ACA:
		tst.w	$1C(a0)
		beq.s	loc_14AF2
		btst	#0,$2A(a0)
		bne.s	loc_14AF2
		addq.w	#1,$10(a0)
		bra.s	loc_14AF2
; ---------------------------------------------------------------------------

loc_14ADE:
		bclr	#0,$2A(a0)
		move.b	d4,d0
		andi.b	#1,d0
		beq.s	loc_14AF2
		bset	#0,$2A(a0)

loc_14AF2:
		tst.b	(Tails_CPU_auto_jump_flag).w
		beq.s	loc_14B0A
		ori.w	#$7000,d1
		btst	#1,$2A(a0)
		bne.s	loc_14B46
		move.b	#0,(Tails_CPU_auto_jump_flag).w

loc_14B0A:
		move.w	(Level_frame_counter).w,d0
		andi.w	#$FF,d0
		beq.s	loc_14B1A
		cmpi.w	#$40,d2
		bcc.s	loc_14B46

loc_14B1A:
		sub.w	$14(a0),d3
		beq.s	loc_14B46
		bpl.s	loc_14B46
		neg.w	d3
		cmpi.w	#$20,d3
		bcs.s	loc_14B46

loc_14B2A:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$3F,d0
		bne.s	loc_14B46
		cmpi.b	#8,$20(a0)
		beq.s	loc_14B46
		ori.w	#$7070,d1
		move.b	#1,(Tails_CPU_auto_jump_flag).w

loc_14B46:
		move.w	d1,(Ctrl_2_logical).w
		rts
; ---------------------------------------------------------------------------

loc_14B4C:
		tst.w	(Tails_CPU_idle_timer).w
		beq.s	locret_14B56
		subq.w	#1,(Tails_CPU_idle_timer).w

locret_14B56:
		rts

; =============== S U B R O U T I N E =======================================


sub_14B58:
		move.w	#0,(Tails_CPU_idle_timer).w
		move.w	#0,(Tails_CPU_flight_timer).w
		move.w	#2,(Tails_CPU_routine).w
		move.b	#$81,$2E(a0)
		move.b	#2,$2A(a0)
		move.w	#$7F00,$10(a0)
		move.w	#0,$14(a0)
		move.b	#0,$2F(a0)
		rts
; End of function sub_14B58


; =============== S U B R O U T I N E =======================================


sub_14B8A:
		tst.b	4(a0)
		bmi.s	loc_14BB6
		btst	#3,$2A(a0)
		beq.s	loc_14BA6
		moveq	#0,d0
		movea.w	$42(a0),a3
		move.w	(Tails_CPU_interact).w,d0
		cmp.w	(a3),d0
		bne.s	loc_14BB2

loc_14BA6:
		addq.w	#1,(Tails_CPU_flight_timer).w
		cmpi.w	#300,(Tails_CPU_flight_timer).w
		bcs.s	loc_14BBC

loc_14BB2:
		bra.w	sub_14B58
; ---------------------------------------------------------------------------

loc_14BB6:
		move.w	#0,(Tails_CPU_flight_timer).w

loc_14BBC:
		movea.w	$42(a0),a3
		move.w	(a3),(Tails_CPU_interact).w
		rts
; End of function sub_14B8A

; ---------------------------------------------------------------------------

loc_14BC6:
		bsr.w	sub_14B8A
		tst.w	(Tails_CPU_idle_timer).w
		bne.w	locret_14C44
		tst.w	$32(a0)
		bne.s	locret_14C44
		tst.b	$3D(a0)
		bne.s	loc_14C1A
		tst.w	$1C(a0)
		bne.s	locret_14C44
		bclr	#0,$2A(a0)
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		bcs.s	loc_14BFA
		bset	#0,$2A(a0)

loc_14BFA:
		move.w	#$202,(Ctrl_2_logical).w
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$7F,d0
		beq.s	loc_14C2A
		cmpi.b	#8,$20(a0)
		bne.s	locret_14C44
		move.w	#$7272,(Ctrl_2_logical).w
		rts
; ---------------------------------------------------------------------------

loc_14C1A:
		move.w	#$202,(Ctrl_2_logical).w
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$7F,d0
		bne.s	loc_14C38

loc_14C2A:
		move.w	#0,(Ctrl_2_logical).w
		move.w	#6,(Tails_CPU_routine).w
		rts
; ---------------------------------------------------------------------------

loc_14C38:
		andi.b	#$1F,d0
		bne.s	locret_14C44
		ori.w	#$7070,(Ctrl_2_logical).w

locret_14C44:
		rts
; ---------------------------------------------------------------------------

locret_14C46:
		rts
; ---------------------------------------------------------------------------

loc_14C48:
		move.b	#1,$2F(a0)
		move.b	#-$10,$25(a0)
		move.b	#2,$2A(a0)
		move.w	#$100,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		lea	(Player_1).w,a1
		bsr.w	sub_15202
		move.b	#1,(Flying_carrying_Sonic_flag).w
		move.w	#$E,(Tails_CPU_routine).w

loc_14C80:
		move.w	#0,(Tails_CPU_idle_timer).w
		move.w	#0,(Ctrl_2_logical).w
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$1F,d0
		bne.s	loc_14C9C
		ori.w	#$808,(Ctrl_2_logical).w

loc_14C9C:
		lea	(Flying_carrying_Sonic_flag).w,a2
		lea	(Player_1).w,a1
		btst	#1,$2A(a1)
		bne.s	loc_14D08
		move.w	#6,(Tails_CPU_routine).w
		move.b	#0,$2E(a0)
		move.b	#0,$20(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		move.b	#2,$2A(a0)
		move.w	#0,$32(a0)
		andi.w	#$7FFF,$A(a0)
		tst.b	$A(a1)
		bpl.s	loc_14CEE
		ori.w	#-$8000,$A(a0)

loc_14CEE:
		move.b	$46(a1),$46(a0)
		move.b	$47(a1),$47(a0)
		cmpi.w	#1,(Player_mode).w
		bne.s	loc_14D08
		move.w	#$10,(Tails_CPU_routine).w

loc_14D08:
		move.w	(Ctrl_1).w,d0
		bra.w	Tails_Carry_Sonic
; ---------------------------------------------------------------------------

loc_14D10:
		move.w	#0,(Tails_CPU_idle_timer).w
		move.b	#-$10,$25(a0)
		move.w	#0,(Ctrl_2_logical).w
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$F,d0
		bne.s	loc_14D32
		ori.w	#$7878,(Ctrl_2_logical).w

loc_14D32:
		tst.b	4(a0)
		bmi.s	locret_14D4A
		move.w	#$7F00,$10(a0)
		move.w	#0,$14(a0)
		move.w	#$A,(Tails_CPU_routine).w

locret_14D4A:
		rts
; ---------------------------------------------------------------------------

loc_14D4C:
		move.w	#0,(Ctrl_2_logical).w
		rts
; ---------------------------------------------------------------------------

loc_14D54:
		move.b	#1,$2F(a0)
		move.b	#-$10,$25(a0)
		move.b	#2,$2A(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		lea	(Player_1).w,a1
		bsr.w	sub_15202
		move.b	#1,(Flying_carrying_Sonic_flag).w
		move.w	#$16,(Tails_CPU_routine).w

loc_14D8C:
		move.w	#0,(Tails_CPU_idle_timer).w
		move.b	#-$10,$25(a0)
		move.w	#0,(Ctrl_2_logical).w
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#7,d0
		bne.s	loc_14DAE
		ori.w	#$7070,(Ctrl_2_logical).w

loc_14DAE:
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$90,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_14DC2
		move.w	#$18,(Tails_CPU_routine).w

loc_14DC2:
		lea	(Flying_carrying_Sonic_flag).w,a2
		lea	(Player_1).w,a1
		move.w	(Ctrl_1).w,d0
		bra.w	Tails_Carry_Sonic
; ---------------------------------------------------------------------------

loc_14DD2:
		move.b	#-$10,$25(a0)
		tst.w	(Tails_CPU_idle_timer).w
		beq.s	loc_14DEA
		tst.b	(Flying_carrying_Sonic_flag).w
		bne.w	loc_14E68
		bra.w	loc_14F68
; ---------------------------------------------------------------------------

loc_14DEA:
		move.w	#0,(Ctrl_2_logical).w
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.w	loc_14F68
		clr.b	(_unkFAAC).w
		btst	#1,(Ctrl_1_held).w
		beq.s	loc_14E1E
		addq.b	#1,(Tails_CPU_auto_fly_timer).w
		cmpi.b	#-$40,(Tails_CPU_auto_fly_timer).w
		bcs.s	loc_14E58
		move.b	#0,(Tails_CPU_auto_fly_timer).w
		ori.w	#$7070,(Ctrl_2_logical).w
		bra.s	loc_14E58
; ---------------------------------------------------------------------------

loc_14E1E:
		btst	#0,(Ctrl_1_held).w
		beq.s	loc_14E40
		addq.b	#1,(Tails_CPU_auto_fly_timer).w
		cmpi.b	#$20,(Tails_CPU_auto_fly_timer).w
		bcs.s	loc_14E58
		move.b	#0,(Tails_CPU_auto_fly_timer).w
		ori.w	#$7070,(Ctrl_2_logical).w
		bra.s	loc_14E58
; ---------------------------------------------------------------------------

loc_14E40:
		addq.b	#1,(Tails_CPU_auto_fly_timer).w
		cmpi.b	#$58,(Tails_CPU_auto_fly_timer).w
		bcs.s	loc_14E58
		move.b	#0,(Tails_CPU_auto_fly_timer).w
		ori.w	#$7070,(Ctrl_2_logical).w

loc_14E58:
		move.b	(Ctrl_1_held).w,d0
		andi.b	#$C,d0
		or.b	(Ctrl_2_held_logical).w,d0
		move.b	d0,(Ctrl_2_logical).w

loc_14E68:
		lea	(Flying_carrying_Sonic_flag).w,a2
		lea	(Player_1).w,a1
		move.w	(Ctrl_1).w,d0
		bra.w	Tails_Carry_Sonic
; ---------------------------------------------------------------------------

loc_14E78:
		move.b	#1,$2F(a0)
		move.b	#-$10,$25(a0)
		move.b	#2,$2A(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		move.w	#$1C,(Tails_CPU_routine).w

loc_14EA2:
		move.w	#0,(Tails_CPU_idle_timer).w
		move.b	#-$10,$25(a0)
		move.w	#0,(Ctrl_2_logical).w
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#7,d0
		bne.s	loc_14EC4
		ori.w	#$7070,(Ctrl_2_logical).w

loc_14EC4:
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$90,d0
		cmp.w	$14(a0),d0
		bcs.s	locret_14ED8
		move.w	#$1E,(Tails_CPU_routine).w

locret_14ED8:
		rts
; ---------------------------------------------------------------------------

loc_14EDA:
		move.b	#-$10,$25(a0)
		rts
; ---------------------------------------------------------------------------

loc_14EE2:
		move.b	#1,$2F(a0)
		move.b	#-$10,$25(a0)
		move.b	#2,$2A(a0)
		move.w	#$100,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		move.w	#$22,(Tails_CPU_routine).w

loc_14F0C:
		move.w	#0,(Tails_CPU_idle_timer).w
		move.w	#0,(Ctrl_2_logical).w
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$1F,d0
		bne.s	loc_14F28
		ori.w	#$808,(Ctrl_2_logical).w

loc_14F28:
		btst	#1,$2A(a0)
		bne.s	locret_14F66
		move.w	#6,(Tails_CPU_routine).w
		move.b	#0,$2E(a0)
		move.b	#0,$20(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		move.b	#2,$2A(a0)
		move.w	#0,$32(a0)
		andi.w	#$7FFF,$A(a0)

locret_14F66:
		rts
; ---------------------------------------------------------------------------

loc_14F68:
		tst.b	(_unkFAAC).w
		bne.s	loc_14FE8
		lea	(Player_1).w,a1
		tst.b	4(a1)
		bpl.s	loc_14FB6
		tst.w	(Tails_CPU_idle_timer).w
		bne.w	loc_15030
		cmpi.w	#$300,$1A(a1)
		bge.s	loc_14FB6
		move.w	#0,$18(a0)
		move.w	#0,(Ctrl_2_logical).w
		cmpi.w	#$200,$1A(a0)
		bge.s	loc_14FAE
		addq.b	#1,(Tails_CPU_auto_fly_timer).w
		cmpi.b	#$58,(Tails_CPU_auto_fly_timer).w
		bcs.s	loc_14FB4
		move.b	#0,(Tails_CPU_auto_fly_timer).w

loc_14FAE:
		ori.w	#$7070,(Ctrl_2_logical).w

loc_14FB4:
		bra.s	loc_15030
; ---------------------------------------------------------------------------

loc_14FB6:
		st	(_unkFAAC).w
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		bpl.s	loc_14FC6
		neg.w	d1

loc_14FC6:
		lsr.w	#2,d1
		move.w	d1,d2
		lsr.w	#1,d2
		add.w	d2,d1
		move.w	d1,(Target_camera_min_X_pos).w
		move.w	$10(a1),d1
		sub.w	$10(a0),d1
		bpl.s	loc_14FDE
		neg.w	d1

loc_14FDE:
		lsr.w	#2,d1
		move.w	d1,(Target_camera_max_X_pos).w
		bra.w	loc_15030
; ---------------------------------------------------------------------------

loc_14FE8:
		move.w	#0,(Ctrl_2_logical).w
		lea	(Player_1).w,a1
		move.w	$10(a0),d0
		move.w	$14(a0),d1
		subi.w	#$10,d1
		move.w	(Target_camera_max_X_pos).w,d2
		bclr	#0,$2A(a0)
		cmp.w	$10(a1),d0
		bcs.s	loc_15016
		bset	#0,$2A(a0)
		neg.w	d2

loc_15016:
		add.w	d2,$18(a0)
		cmp.w	$14(a1),d1
		bcc.s	loc_15030
		move.w	(Target_camera_min_X_pos).w,d2
		cmp.w	$14(a1),d1
		bcs.s	loc_1502C
		neg.w	d2

loc_1502C:
		add.w	d2,$1A(a0)

loc_15030:
		lea	(Flying_carrying_Sonic_flag).w,a2
		lea	(Player_1).w,a1
		move.w	(Ctrl_1).w,d0
		bra.w	Tails_Carry_Sonic

; =============== S U B R O U T I N E =======================================


Tails_Carry_Sonic:
		tst.b	(a2)
		beq.w	loc_151A2
		cmpi.b	#4,5(a1)
		bcc.w	loc_150EC
		btst	#1,$2A(a1)
		beq.w	loc_150E0
		move.w	(_unkF744).w,d1
		cmp.w	$18(a1),d1
		bne.s	loc_150E0
		move.w	(_unkF74C).w,d1
		cmp.w	$1A(a1),d1
		bne.s	loc_150E6
		tst.b	$2E(a1)
		bmi.s	loc_150F0
		andi.b	#$70,d0
		beq.w	loc_150FA
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$12,1(a2)
		andi.w	#$F00,d0
		beq.w	loc_15096
		move.b	#$3C,1(a2)

loc_15096:
		btst	#$A,d0
		beq.s	loc_150A2
		move.w	#-$200,$18(a1)

loc_150A2:
		btst	#$B,d0
		beq.s	loc_150AE
		move.w	#$200,$18(a1)

loc_150AE:
		move.w	#-$380,$1A(a1)
		bset	#1,$2A(a1)
		move.b	#1,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		bclr	#4,$2A(a1)
		rts
; ---------------------------------------------------------------------------

loc_150E0:
		move.w	#-$100,$1A(a1)

loc_150E6:
		move.b	#0,$40(a1)

loc_150EC:
		clr.b	$2E(a1)

loc_150F0:
		clr.b	(a2)
		move.b	#$3C,1(a2)
		rts
; ---------------------------------------------------------------------------

loc_150FA:
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$1C,$14(a1)
		andi.b	#-4,4(a1)
		andi.b	#-2,$2A(a1)
		move.b	$2A(a0),d0
		andi.b	#1,d0
		or.b	d0,4(a1)
		or.b	d0,$2A(a1)
		subq.b	#1,$24(a1)
		bpl.s	loc_15166
		move.b	#$B,$24(a1)
		moveq	#0,d1
		move.b	$23(a1),d1
		addq.b	#1,$23(a1)
		move.b	byte_15190(pc,d1.w),d0
		cmpi.b	#-1,d0
		bne.s	loc_15152
		move.b	#0,$23(a1)
		move.b	byte_15190(pc),d0

loc_15152:
		move.b	d0,$22(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		move.l	a2,-(sp)
		jsr	(Perform_Player_DPLC).l
		movea.l	(sp)+,a2

loc_15166:
		move.w	$18(a0),(Player_1+x_vel).w
		move.w	$18(a0),(_unkF744).w
		move.w	$1A(a0),(Player_1+y_vel).w
		move.w	$1A(a0),(_unkF74C).w
		movem.l	d0-a6,-(sp)
		lea	(Player_1).w,a0
		bsr.w	Sonic_DoLevelCollision
		movem.l	(sp)+,d0-a6
		rts
; ---------------------------------------------------------------------------
byte_15190:	dc.b $91
		dc.b $91
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $91
		dc.b $91
		dc.b $FF
		dc.b 0
; ---------------------------------------------------------------------------

loc_151A2:
		tst.b	1(a2)
		beq.s	loc_151B0
		subq.b	#1,1(a2)
		bne.w	locret_15200

loc_151B0:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$10,d0
		cmpi.w	#$20,d0
		bcc.w	locret_15200
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		subi.w	#$20,d1
		cmpi.w	#$10,d1
		bcc.w	locret_15200
		tst.b	$2E(a1)
		bne.s	locret_15200
		cmpi.b	#4,5(a1)
		bcc.s	locret_15200
		tst.w	(Debug_placement_mode).w
		bne.s	locret_15200
		tst.b	$3D(a1)
		bne.s	locret_15200
		bsr.s	sub_15202
		moveq	#signextendB(sfx_Grab),d0
		jsr	(Play_Sound_2).l
		move.b	#1,(a2)

locret_15200:
		rts
; End of function Tails_Carry_Sonic


; =============== S U B R O U T I N E =======================================


sub_15202:
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		clr.w	$26(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$1C,$14(a1)
		move.w	#$2200,$20(a1)
		move.b	#0,$24(a1)
		move.b	#0,$23(a1)
		move.b	#3,$2E(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		move.b	#0,$3D(a1)
		andi.b	#-4,4(a1)
		andi.b	#-2,$2A(a1)
		move.b	$2A(a0),d0
		andi.b	#1,d0
		or.b	d0,4(a1)
		or.b	d0,$2A(a1)
		move.w	$18(a0),(_unkF744).w
		move.w	$18(a0),$18(a1)
		move.w	$1A(a0),(_unkF74C).w
		move.w	$1A(a0),$1A(a1)
		rts
; End of function sub_15202


; =============== S U B R O U T I N E =======================================


sub_15284:
		tst.b	(Water_flag).w
		bne.s	loc_1528C

locret_1528A:
		rts
; ---------------------------------------------------------------------------

loc_1528C:
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bge.s	loc_152F6
		bset	#6,$2A(a0)
		bne.s	locret_1528A
		addq.b	#1,(Water_entered_counter).w
		movea.l	a0,a1
		bsr.w	Player_ResetAirTimer
		move.l	#Obj_Air_CountDown,(Breathing_bubbles_P2).w
		move.b	#$81,(Breathing_bubbles_P2+subtype).w
		move.l	a0,(Breathing_bubbles_P2+$40).w
		move.w	#$300,(a4)
		move.w	#6,2(a4)
		move.w	#$40,4(a4)
		cmpi.w	#4,(Tails_CPU_routine).w
		beq.s	loc_152D8
		tst.b	$2E(a0)
		bne.s	locret_1528A

loc_152D8:
		asr	$18(a0)
		asr	$1A(a0)
		asr	$1A(a0)
		beq.s	locret_1528A
		move.w	#$100,$20(a6)
		move.w	#sfx_Splash,d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

loc_152F6:
		bclr	#6,$2A(a0)
		beq.s	locret_1528A
		addq.b	#1,(Water_entered_counter).w
		movea.l	a0,a1
		bsr.w	Player_ResetAirTimer
		move.w	#$600,(a4)
		move.w	#$C,2(a4)
		move.w	#$80,4(a4)
		cmpi.b	#4,5(a0)
		beq.s	loc_1533C
		cmpi.w	#4,(Tails_CPU_routine).w
		beq.s	loc_1532E
		tst.b	$2E(a0)
		bne.s	loc_1533C

loc_1532E:
		move.w	$1A(a0),d0
		cmpi.w	#-$400,d0
		blt.s	loc_1533C
		asl	$1A(a0)

loc_1533C:
		cmpi.b	#$1C,$20(a0)
		beq.w	locret_1528A
		tst.w	$1A(a0)
		beq.w	locret_1528A
		move.w	#$100,$20(a6)
		cmpi.w	#-$1000,$1A(a0)
		bgt.s	loc_15362
		move.w	#-$1000,$1A(a0)

loc_15362:
		move.w	#sfx_Splash,d0
		jmp	(Play_Sound_2).l
; End of function sub_15284

; ---------------------------------------------------------------------------

Tails_Stand_Path:
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	loc_15384
		lea	(Player_1).w,a1
		clr.b	$2E(a1)
		bset	#1,$2A(a1)
		clr.w	(Flying_carrying_Sonic_flag).w

loc_15384:
		bsr.w	Tails_Spindash
		bsr.w	Tails_Jump
		bsr.w	Tails_SlopeResist
		bsr.w	Tails_InputAcceleration_Path
		bsr.w	Tails_Roll
		bsr.w	Tails_Check_Screen_Boundaries
		jsr	(MoveSprite2).l
		bsr.w	Player_AnglePos
		bsr.w	Tails_SlopeRepel
		tst.b	(Background_collision_flag).w
		beq.s	locret_153CE
		bsr.w	sub_10BA2
		tst.w	d1
		bmi.w	Kill_Character
		movem.l	a4-a6,-(sp)
		bsr.w	CheckLeftWallDist
		movem.l	(sp)+,a4-a6
		tst.w	d1
		bpl.s	locret_153CE
		sub.w	d1,$10(a0)

locret_153CE:
		rts
; ---------------------------------------------------------------------------

Tails_Stand_Freespace:
		tst.b	$2F(a0)
		bne.s	Tails_FlyingSwimming
		bsr.w	Tails_JumpHeight
		bsr.w	Tails_InputAcceleration_Freespace
		bsr.w	Tails_Check_Screen_Boundaries
		jsr	(MoveSprite).l
		btst	#6,$2A(a0)
		beq.s	loc_153F6
		subi.w	#$28,$1A(a0)

loc_153F6:
		bsr.w	Tails_JumpAngle
		bsr.w	Tails_DoLevelCollision
		rts
; ---------------------------------------------------------------------------

Tails_FlyingSwimming:
		bsr.w	Tails_Move_FlySwim
		bsr.w	Tails_InputAcceleration_Freespace
		bsr.w	Tails_Check_Screen_Boundaries
		jsr	(MoveSprite2).l
		bsr.w	Tails_JumpAngle
		movem.l	a4-a6,-(sp)
		bsr.w	Tails_DoLevelCollision
		movem.l	(sp)+,a4-a6
		tst.w	(Player_mode).w
		bne.s	locret_15438
		lea	(Flying_carrying_Sonic_flag).w,a2
		lea	(Player_1).w,a1
		move.w	(Ctrl_1).w,d0
		bsr.w	Tails_Carry_Sonic

locret_15438:
		rts

; =============== S U B R O U T I N E =======================================


Tails_Move_FlySwim:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#1,d0
		beq.s	loc_1544E
		tst.b	$25(a0)
		beq.s	loc_1544E
		subq.b	#1,$25(a0)

loc_1544E:
		cmpi.b	#1,$2F(a0)
		beq.s	loc_15478
		cmpi.w	#-$100,$1A(a0)
		blt.s	loc_15470
		subi.w	#$20,$1A(a0)
		addq.b	#1,$2F(a0)
		cmpi.b	#$20,$2F(a0)
		bne.s	loc_15476

loc_15470:
		move.b	#1,$2F(a0)

loc_15476:
		bra.s	loc_154AA
; ---------------------------------------------------------------------------

loc_15478:
		move.b	(Ctrl_2_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.s	loc_154A4
		cmpi.w	#-$100,$1A(a0)
		blt.s	loc_154A4
		tst.b	$25(a0)
		beq.s	loc_154A4
		btst	#6,$2A(a0)
		beq.s	loc_1549E
		tst.b	(Flying_carrying_Sonic_flag).w
		bne.s	loc_154A4

loc_1549E:
		move.b	#2,$2F(a0)

loc_154A4:
		addi.w	#8,$1A(a0)

loc_154AA:
		move.w	(Camera_min_Y_pos).w,d0
		addi.w	#$10,d0
		cmp.w	$14(a0),d0
		blt.s	Tails_Set_Flying_Animation
		tst.w	$1A(a0)
		bpl.s	Tails_Set_Flying_Animation
		move.w	#0,$1A(a0)
; End of function Tails_Move_FlySwim


; =============== S U B R O U T I N E =======================================


Tails_Set_Flying_Animation:
		btst	#6,$2A(a0)
		bne.s	loc_1552C
		moveq	#$20,d0
		tst.w	(Competition_mode).w
		bne.s	loc_1550C
		tst.w	$1A(a0)
		bpl.s	loc_154DC
		moveq	#$21,d0

loc_154DC:
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	loc_154E4
		addq.b	#2,d0

loc_154E4:
		tst.b	$25(a0)
		bne.s	loc_1550C
		moveq	#$24,d0
		move.b	d0,$20(a0)
		tst.b	4(a0)
		bpl.s	locret_1550A
		move.b	(Level_frame_counter+1).w,d0
		addq.b	#8,d0
		andi.b	#$F,d0
		bne.s	locret_1550A
		moveq	#signextendB(sfx_FlyTired),d0
		jsr	(Play_Sound_2).l

locret_1550A:
		rts
; ---------------------------------------------------------------------------

loc_1550C:
		move.b	d0,$20(a0)
		tst.b	4(a0)
		bpl.s	locret_1552A
		move.b	(Level_frame_counter+1).w,d0
		addq.b	#8,d0
		andi.b	#$F,d0
		bne.s	locret_1552A
		moveq	#signextendB(sfx_Flying),d0
		jsr	(Play_Sound_2).l

locret_1552A:
		rts
; ---------------------------------------------------------------------------

loc_1552C:
		moveq	#$25,d0
		tst.w	$1A(a0)
		bpl.s	loc_15536
		moveq	#$26,d0

loc_15536:
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	loc_1553E
		moveq	#$27,d0

loc_1553E:
		tst.b	$25(a0)
		bne.s	loc_15546
		moveq	#$28,d0

loc_15546:
		move.b	d0,$20(a0)
		rts
; End of function Tails_Set_Flying_Animation

; ---------------------------------------------------------------------------

Tails_Spin_Path:
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	loc_15564
		lea	(Player_1).w,a1
		clr.b	$2E(a1)
		bset	#1,$2A(a1)
		clr.w	(Flying_carrying_Sonic_flag).w

loc_15564:
		tst.b	$3D(a0)
		bne.s	loc_1556E
		bsr.w	Tails_Jump

loc_1556E:
		bsr.w	Tails_RollRepel
		bsr.w	Tails_RollSpeed
		bsr.w	Tails_Check_Screen_Boundaries
		jsr	(MoveSprite2).l
		bsr.w	Player_AnglePos
		bsr.w	Tails_SlopeRepel
		tst.b	(Background_collision_flag).w
		beq.s	locret_155AC
		bsr.w	sub_10BA2
		tst.w	d1
		bmi.w	Kill_Character
		movem.l	a4-a6,-(sp)
		bsr.w	CheckLeftWallDist
		movem.l	(sp)+,a4-a6
		tst.w	d1
		bpl.s	locret_155AC
		sub.w	d1,$10(a0)

locret_155AC:
		rts
; ---------------------------------------------------------------------------

Tails_Spin_Freespace:
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	loc_155C6
		lea	(Player_1).w,a1
		clr.b	$2E(a1)
		bset	#1,$2A(a1)
		clr.w	(Flying_carrying_Sonic_flag).w

loc_155C6:
		bsr.w	Tails_JumpHeight
		bsr.w	Tails_InputAcceleration_Freespace
		bsr.w	Tails_Check_Screen_Boundaries
		jsr	(MoveSprite).l
		btst	#6,$2A(a0)
		beq.s	loc_155E6
		subi.w	#$28,$1A(a0)

loc_155E6:
		bsr.w	Tails_JumpAngle
		bsr.w	Tails_DoLevelCollision
		rts

; =============== S U B R O U T I N E =======================================


Tails_InputAcceleration_Path:
		move.w	(a4),d6
		move.w	2(a4),d5
		move.w	4(a4),d4
		tst.b	$2B(a0)
		bmi.w	loc_1573C
		tst.w	$32(a0)
		bne.w	loc_156FE
		btst	#2,(Ctrl_2_held_logical).w
		beq.s	loc_15616
		bsr.w	sub_157E6

loc_15616:
		btst	#3,(Ctrl_2_held_logical).w
		beq.s	loc_15622
		bsr.w	sub_15872

loc_15622:
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#-$40,d0
		bne.w	loc_156FE
		tst.w	$1C(a0)
		bne.w	loc_156FE
		bclr	#5,$2A(a0)
		move.b	#5,$20(a0)
		btst	#3,$2A(a0)
		beq.s	loc_15678
		movea.w	$42(a0),a1
		tst.b	$2A(a1)
		bmi.s	loc_156AA
		moveq	#0,d1
		move.b	7(a1),d1
		move.w	d1,d2
		add.w	d2,d2
		subq.w	#4,d2
		add.w	$10(a0),d1
		sub.w	$10(a1),d1
		cmpi.w	#4,d1
		blt.s	loc_1569C
		cmp.w	d2,d1
		bge.s	loc_1568C
		bra.s	loc_156AA
; ---------------------------------------------------------------------------

loc_15678:
		jsr	(ChkFloorEdge).l
		cmpi.w	#$C,d1
		blt.s	loc_156AA
		cmpi.b	#3,$3A(a0)
		bne.s	loc_15694

loc_1568C:
		bclr	#0,$2A(a0)
		bra.s	loc_156A2
; ---------------------------------------------------------------------------

loc_15694:
		cmpi.b	#3,$3B(a0)
		bne.s	loc_156AA

loc_1569C:
		bset	#0,$2A(a0)

loc_156A2:
		move.b	#6,$20(a0)
		bra.s	loc_156FE
; ---------------------------------------------------------------------------

loc_156AA:
		btst	#0,(Ctrl_2_held_logical).w
		beq.s	loc_156D4
		move.b	#7,$20(a0)
		addq.b	#1,$39(a0)
		cmpi.b	#$78,$39(a0)
		bcs.s	loc_15704
		move.b	#$78,$39(a0)
		cmpi.w	#$C8,(a5)
		beq.s	loc_15710
		addq.w	#2,(a5)
		bra.s	loc_15710
; ---------------------------------------------------------------------------

loc_156D4:
		btst	#1,(Ctrl_2_held_logical).w
		beq.s	loc_156FE
		move.b	#8,$20(a0)
		addq.b	#1,$39(a0)
		cmpi.b	#$78,$39(a0)
		bcs.s	loc_15704
		move.b	#$78,$39(a0)
		cmpi.w	#8,(a5)
		beq.s	loc_15710
		subq.w	#2,(a5)
		bra.s	loc_15710
; ---------------------------------------------------------------------------

loc_156FE:
		move.b	#0,$39(a0)

loc_15704:
		cmpi.w	#$60,(a5)
		beq.s	loc_15710
		bcc.s	loc_1570E
		addq.w	#4,(a5)

loc_1570E:
		subq.w	#2,(a5)

loc_15710:
		move.b	(Ctrl_2_held_logical).w,d0
		andi.b	#$C,d0
		bne.s	loc_1573C
		move.w	$1C(a0),d0
		beq.s	loc_1573C
		bmi.s	loc_15730
		sub.w	d5,d0
		bcc.s	loc_1572A
		move.w	#0,d0

loc_1572A:
		move.w	d0,$1C(a0)
		bra.s	loc_1573C
; ---------------------------------------------------------------------------

loc_15730:
		add.w	d5,d0
		bcc.s	loc_15738
		move.w	#0,d0

loc_15738:
		move.w	d0,$1C(a0)

loc_1573C:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	$1C(a0),d1
		asr.l	#8,d1
		move.w	d1,$18(a0)
		muls.w	$1C(a0),d0
		asr.l	#8,d0
		move.w	d0,$1A(a0)

loc_1575A:
		btst	#6,$2E(a0)
		bne.w	locret_157E4
		move.b	$26(a0),d0
		addi.b	#$40,d0
		bmi.s	locret_157E4
		move.b	#$40,d1
		tst.w	$1C(a0)
		beq.s	locret_157E4
		bmi.s	loc_1577C
		neg.w	d1

loc_1577C:
		move.b	$26(a0),d0
		add.b	d1,d0
		move.w	d0,-(sp)
		bsr.w	sub_10980
		move.w	(sp)+,d0
		tst.w	d1
		bpl.s	locret_157E4
		asl.w	#8,d1
		addi.b	#$20,d0
		andi.b	#-$40,d0
		beq.s	loc_157E0
		cmpi.b	#$40,d0
		beq.s	loc_157C6
		cmpi.b	#-$80,d0
		beq.s	loc_157C0
		add.w	d1,$18(a0)
		move.w	#0,$1C(a0)
		btst	#0,$2A(a0)
		bne.s	locret_157BE
		bset	#5,$2A(a0)

locret_157BE:
		rts
; ---------------------------------------------------------------------------

loc_157C0:
		sub.w	d1,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_157C6:
		sub.w	d1,$18(a0)
		move.w	#0,$1C(a0)
		btst	#0,$2A(a0)
		beq.s	locret_157BE
		bset	#5,$2A(a0)
		rts
; ---------------------------------------------------------------------------

loc_157E0:
		add.w	d1,$1A(a0)

locret_157E4:
		rts
; End of function Tails_InputAcceleration_Path


; =============== S U B R O U T I N E =======================================


sub_157E6:
		move.w	$1C(a0),d0
		beq.s	loc_157EE
		bpl.s	loc_15820

loc_157EE:
		bset	#0,$2A(a0)
		bne.s	loc_15802
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)

loc_15802:
		sub.w	d5,d0
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0
		bgt.s	loc_15814
		add.w	d5,d0
		cmp.w	d1,d0
		ble.s	loc_15814
		move.w	d1,d0

loc_15814:
		move.w	d0,$1C(a0)
		move.b	#0,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_15820:
		sub.w	d4,d0
		bcc.s	loc_15828
		move.w	#-$80,d0

loc_15828:
		move.w	d0,$1C(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#-$40,d0
		bne.s	locret_15870
		cmpi.w	#$400,d0
		blt.s	locret_15870
		tst.b	$2D(a0)
		bmi.s	locret_15870
		move.w	#sfx_Skid,d0
		jsr	(Play_Sound_2).l
		move.b	#$D,$20(a0)
		bclr	#0,$2A(a0)
		cmpi.b	#$C,$2C(a0)
		bcs.s	locret_15870
		move.b	#6,5(a6)
		move.b	#$15,$22(a6)

locret_15870:
		rts
; End of function sub_157E6


; =============== S U B R O U T I N E =======================================


sub_15872:
		move.w	$1C(a0),d0
		bmi.s	loc_158A6
		bclr	#0,$2A(a0)
		beq.s	loc_1588C
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)

loc_1588C:
		add.w	d5,d0
		cmp.w	d6,d0
		blt.s	loc_1589A
		sub.w	d5,d0
		cmp.w	d6,d0
		bge.s	loc_1589A
		move.w	d6,d0

loc_1589A:
		move.w	d0,$1C(a0)
		move.b	#0,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_158A6:
		add.w	d4,d0
		bcc.s	loc_158AE
		move.w	#$80,d0

loc_158AE:
		move.w	d0,$1C(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#-$40,d0
		bne.s	locret_158F6
		cmpi.w	#-$400,d0
		bgt.s	locret_158F6
		tst.b	$2D(a0)
		bmi.s	locret_158F6
		move.w	#sfx_Skid,d0
		jsr	(Play_Sound_2).l
		move.b	#$D,$20(a0)
		bset	#0,$2A(a0)
		cmpi.b	#$C,$2C(a0)
		bcs.s	locret_158F6
		move.b	#6,5(a6)
		move.b	#$15,$22(a6)

locret_158F6:
		rts
; End of function sub_15872


; =============== S U B R O U T I N E =======================================


Tails_RollSpeed:
		move.w	(a4),d6
		asl.w	#1,d6
		move.w	2(a4),d5
		asr.w	#1,d5
		move.w	4(a4),d4
		asr.w	#2,d4
		tst.b	$3D(a0)
		bmi.w	loc_1599E
		tst.b	$2B(a0)
		bmi.w	loc_1599E
		tst.w	$32(a0)
		bne.s	loc_15936
		btst	#2,(Ctrl_2_held_logical).w
		beq.s	loc_1592A
		bsr.w	sub_159E0

loc_1592A:
		btst	#3,(Ctrl_2_held_logical).w
		beq.s	loc_15936
		bsr.w	sub_15A04

loc_15936:
		move.w	$1C(a0),d0
		beq.s	loc_15958
		bmi.s	loc_1594C
		sub.w	d5,d0
		bcc.s	loc_15946
		move.w	#0,d0

loc_15946:
		move.w	d0,$1C(a0)
		bra.s	loc_15958
; ---------------------------------------------------------------------------

loc_1594C:
		add.w	d5,d0
		bcc.s	loc_15954
		move.w	#0,d0

loc_15954:
		move.w	d0,$1C(a0)

loc_15958:
		tst.w	$1C(a0)
		bne.s	loc_1599E
		tst.b	$3D(a0)
		bne.s	loc_1598C
		bclr	#2,$2A(a0)
		move.b	$1E(a0),d0
		move.b	$44(a0),$1E(a0)
		move.b	$45(a0),$1F(a0)
		move.b	#5,$20(a0)
		sub.b	$44(a0),d0
		ext.w	d0
		add.w	d0,$14(a0)
		bra.s	loc_1599E
; ---------------------------------------------------------------------------

loc_1598C:
		move.w	#$400,$1C(a0)
		btst	#0,$2A(a0)
		beq.s	loc_1599E
		neg.w	$1C(a0)

loc_1599E:
		cmpi.w	#$60,(a5)
		beq.s	loc_159AA
		bcc.s	loc_159A8
		addq.w	#4,(a5)

loc_159A8:
		subq.w	#2,(a5)

loc_159AA:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	$1C(a0),d0
		asr.l	#8,d0
		move.w	d0,$1A(a0)
		muls.w	$1C(a0),d1
		asr.l	#8,d1
		cmpi.w	#$1000,d1
		ble.s	loc_159CE
		move.w	#$1000,d1

loc_159CE:
		cmpi.w	#-$1000,d1
		bge.s	loc_159D8
		move.w	#-$1000,d1

loc_159D8:
		move.w	d1,$18(a0)
		bra.w	loc_1575A
; End of function Tails_RollSpeed


; =============== S U B R O U T I N E =======================================


sub_159E0:
		move.w	$1C(a0),d0
		beq.s	loc_159E8
		bpl.s	loc_159F6

loc_159E8:
		bset	#0,$2A(a0)
		move.b	#2,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_159F6:
		sub.w	d4,d0
		bcc.s	loc_159FE
		move.w	#-$80,d0

loc_159FE:
		move.w	d0,$1C(a0)
		rts
; End of function sub_159E0


; =============== S U B R O U T I N E =======================================


sub_15A04:
		move.w	$1C(a0),d0
		bmi.s	loc_15A18
		bclr	#0,$2A(a0)
		move.b	#2,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_15A18:
		add.w	d4,d0
		bcc.s	loc_15A20
		move.w	#$80,d0

loc_15A20:
		move.w	d0,$1C(a0)
		rts
; End of function sub_15A04


; =============== S U B R O U T I N E =======================================


Tails_InputAcceleration_Freespace:
		move.w	(a4),d6
		move.w	2(a4),d5
		asl.w	#1,d5
		btst	#4,$2A(a0)
		bne.s	loc_15A7A
		move.w	$18(a0),d0
		btst	#2,(Ctrl_2_held_logical).w
		beq.s	loc_15A5A
		bset	#0,$2A(a0)
		sub.w	d5,d0
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0
		bgt.s	loc_15A5A
		add.w	d5,d0
		cmp.w	d1,d0
		ble.s	loc_15A5A
		move.w	d1,d0

loc_15A5A:
		btst	#3,(Ctrl_2_held_logical).w
		beq.s	loc_15A76
		bclr	#0,$2A(a0)
		add.w	d5,d0
		cmp.w	d6,d0
		blt.s	loc_15A76
		sub.w	d5,d0
		cmp.w	d6,d0
		bge.s	loc_15A76
		move.w	d6,d0

loc_15A76:
		move.w	d0,$18(a0)

loc_15A7A:
		cmpi.w	#$60,(a5)
		beq.s	loc_15A86
		bcc.s	loc_15A84
		addq.w	#4,(a5)

loc_15A84:
		subq.w	#2,(a5)

loc_15A86:
		cmpi.w	#-$400,$1A(a0)
		bcs.s	locret_15AB4
		move.w	$18(a0),d0
		move.w	d0,d1
		asr.w	#5,d1
		beq.s	locret_15AB4
		bmi.s	loc_15AA8
		sub.w	d1,d0
		bcc.s	loc_15AA2
		move.w	#0,d0

loc_15AA2:
		move.w	d0,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_15AA8:
		sub.w	d1,d0
		bcs.s	loc_15AB0
		move.w	#0,d0

loc_15AB0:
		move.w	d0,$18(a0)

locret_15AB4:
		rts
; End of function Tails_InputAcceleration_Freespace


; =============== S U B R O U T I N E =======================================


Tails_Check_Screen_Boundaries:
		move.l	$10(a0),d1
		move.w	$18(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d1
		swap	d1
		move.w	(Camera_min_X_pos).w,d0
		addi.w	#$10,d0
		cmp.w	d1,d0
		bhi.s	loc_15AFA
		move.w	(Camera_max_X_pos).w,d0
		addi.w	#$128,d0
		cmp.w	d1,d0
		bls.s	loc_15AFA

loc_15ADE:
		tst.b	(Disable_death_plane).w
		bne.s	locret_15AF2
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$E0,d0
		cmp.w	$14(a0),d0
		blt.s	loc_15AF4

locret_15AF2:
		rts
; ---------------------------------------------------------------------------

loc_15AF4:
		jmp	(Kill_Character).l
; ---------------------------------------------------------------------------

loc_15AFA:
		move.w	d0,$10(a0)
		move.w	#0,$12(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1C(a0)
		bra.s	loc_15ADE
; End of function Tails_Check_Screen_Boundaries


; =============== S U B R O U T I N E =======================================


Tails_Roll:
		tst.b	$2B(a0)
		bmi.s	locret_15B38
		move.w	$1C(a0),d0
		bpl.s	loc_15B20
		neg.w	d0

loc_15B20:
		cmpi.w	#$80,d0
		bcs.s	locret_15B38
		move.b	(Ctrl_2_held_logical).w,d0
		andi.b	#$C,d0
		bne.s	locret_15B38
		btst	#1,(Ctrl_2_held_logical).w
		bne.s	loc_15B3A

locret_15B38:
		rts
; ---------------------------------------------------------------------------

loc_15B3A:
		btst	#2,$2A(a0)
		beq.s	loc_15B44
		rts
; ---------------------------------------------------------------------------

loc_15B44:
		bset	#2,$2A(a0)
		move.b	#$E,$1E(a0)
		move.b	#7,$1F(a0)
		move.b	#2,$20(a0)
		addq.w	#1,$14(a0)
		move.w	#sfx_Roll,d0
		jsr	(Play_Sound_2).l
		tst.w	$1C(a0)
		bne.s	locret_15B76
		move.w	#$200,$1C(a0)

locret_15B76:
		rts
; End of function Tails_Roll


; =============== S U B R O U T I N E =======================================


Tails_Jump:
		move.b	(Ctrl_2_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	locret_15C2E
		moveq	#0,d0
		move.b	$26(a0),d0
		addi.b	#-$80,d0
		movem.l	a4-a6,-(sp)
		bsr.w	CalcRoomOverHead
		movem.l	(sp)+,a4-a6
		cmpi.w	#6,d1
		blt.w	locret_15C2E
		move.w	#$680,d2
		btst	#6,$2A(a0)
		beq.s	loc_15BB2
		move.w	#$380,d2

loc_15BB2:
		moveq	#0,d0
		move.b	$26(a0),d0
		subi.b	#$40,d0
		jsr	(GetSineCosine).l
		muls.w	d2,d1
		asr.l	#8,d1
		add.w	d1,$18(a0)
		muls.w	d2,d0
		asr.l	#8,d0
		add.w	d0,$1A(a0)
		bset	#1,$2A(a0)
		bclr	#5,$2A(a0)
		addq.l	#4,sp
		move.b	#1,$40(a0)
		clr.b	$3C(a0)
		move.w	#sfx_Jump,d0
		jsr	(Play_Sound_2).l
		move.b	$44(a0),$1E(a0)
		move.b	$45(a0),$1F(a0)
		btst	#2,$2A(a0)
		bne.s	loc_15C30
		move.b	#$E,$1E(a0)
		move.b	#7,$1F(a0)
		move.b	#2,$20(a0)
		bset	#2,$2A(a0)
		move.b	$1E(a0),d0
		sub.b	$44(a0),d0
		ext.w	d0
		sub.w	d0,$14(a0)

locret_15C2E:
		rts
; ---------------------------------------------------------------------------

loc_15C30:
		bset	#4,$2A(a0)
		rts
; End of function Tails_Jump


; =============== S U B R O U T I N E =======================================


Tails_JumpHeight:
		tst.b	$40(a0)
		beq.s	loc_15C64
		move.w	#-$400,d1
		btst	#6,$2A(a0)
		beq.s	loc_15C4E
		move.w	#-$200,d1

loc_15C4E:
		cmp.w	$1A(a0),d1
		ble.s	Tails_Test_For_Flight
		move.b	(Ctrl_2_held_logical).w,d0
		andi.b	#$70,d0
		bne.s	locret_15C62
		move.w	d1,$1A(a0)

locret_15C62:
		rts
; ---------------------------------------------------------------------------

loc_15C64:
		tst.b	$3D(a0)
		bne.s	locret_15C78
		cmpi.w	#-$FC0,$1A(a0)
		bge.s	locret_15C78
		move.w	#-$FC0,$1A(a0)

locret_15C78:
		rts
; ---------------------------------------------------------------------------

Tails_Test_For_Flight:
		tst.b	$2F(a0)
		bne.w	locret_15CDA
		move.b	(Ctrl_2_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	locret_15CDA
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_15C9C
		tst.w	(Tails_CPU_idle_timer).w
		beq.s	locret_15CDA

loc_15C9C:
		btst	#2,$2A(a0)
		beq.s	loc_15CC4
		bclr	#2,$2A(a0)
		move.b	$1E(a0),d1
		move.b	$44(a0),$1E(a0)
		move.b	$45(a0),$1F(a0)
		sub.b	$44(a0),d1
		ext.w	d1
		add.w	d1,$14(a0)

loc_15CC4:
		bclr	#4,$2A(a0)
		move.b	#1,$2F(a0)
		move.b	#-$10,$25(a0)
		bsr.w	Tails_Set_Flying_Animation

locret_15CDA:
		rts
; End of function Tails_JumpHeight


; =============== S U B R O U T I N E =======================================


Tails_Spindash:
		tst.b	$3D(a0)
		bne.s	loc_15D50
		cmpi.b	#8,$20(a0)
		bne.s	locret_15D4E
		move.b	(Ctrl_2_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	locret_15D4E
		move.b	#9,$20(a0)
		move.w	#$FF00|sfx_Spindash,d0
		jsr	(Play_Sound_2).l
		addq.l	#4,sp
		move.b	#1,$3D(a0)
		move.w	#0,$3E(a0)
		cmpi.b	#$C,$2C(a0)
		bcs.s	loc_15D22
		move.b	#2,$20(a6)

loc_15D22:
		bsr.w	Tails_Check_Screen_Boundaries
		bsr.w	Player_AnglePos
		tst.b	(Background_collision_flag).w
		beq.s	locret_15D4E
		bsr.w	sub_10BA2
		tst.w	d1
		bmi.w	Kill_Character
		movem.l	a4-a6,-(sp)
		bsr.w	CheckLeftWallDist
		movem.l	(sp)+,a4-a6
		tst.w	d1
		bpl.s	locret_15D4E
		sub.w	d1,$10(a0)

locret_15D4E:
		rts
; ---------------------------------------------------------------------------

loc_15D50:
		move.b	(Ctrl_2_held_logical).w,d0
		btst	#1,d0
		bne.w	loc_15DE0
		move.b	#$E,$1E(a0)
		move.b	#7,$1F(a0)
		move.b	#2,$20(a0)
		addq.w	#1,$14(a0)
		move.b	#0,$3D(a0)
		moveq	#0,d0
		move.b	$3E(a0),d0
		add.w	d0,d0
		move.w	word_15DCE(pc,d0.w),$1C(a0)
		move.w	$1C(a0),d0
		subi.w	#$800,d0
		add.w	d0,d0
		andi.w	#$1F00,d0
		neg.w	d0
		addi.w	#$2000,d0
		lea	(H_scroll_frame_offset).w,a1
		cmpa.w	#-$5000,a0
		beq.s	loc_15DA8
		lea	(H_scroll_frame_offset_P2).w,a1

loc_15DA8:
		move.w	d0,(a1)
		btst	#0,$2A(a0)
		beq.s	loc_15DB6
		neg.w	$1C(a0)

loc_15DB6:
		bset	#2,$2A(a0)
		move.b	#0,$20(a6)
		move.w	#$FF00|sfx_Dash,d0
		jsr	(Play_Sound_2).l
		bra.s	loc_15E28
; ---------------------------------------------------------------------------
word_15DCE:	dc.w $800
		dc.w $880
		dc.w $900
		dc.w $980
		dc.w $A00
		dc.w $A80
		dc.w $B00
		dc.w $B80
		dc.w $C00
; ---------------------------------------------------------------------------

loc_15DE0:
		tst.w	$3E(a0)
		beq.s	loc_15DF8
		move.w	$3E(a0),d0
		lsr.w	#5,d0
		sub.w	d0,$3E(a0)
		bcc.s	loc_15DF8
		move.w	#0,$3E(a0)

loc_15DF8:
		move.b	(Ctrl_2_pressed_logical).w,d0
		andi.b	#$70,d0
		beq.w	loc_15E28
		move.w	#$900,$20(a0)
		move.w	#$FF00|sfx_Spindash,d0
		jsr	(Play_Sound_2).l
		addi.w	#$200,$3E(a0)
		cmpi.w	#$800,$3E(a0)
		bcs.s	loc_15E28
		move.w	#$800,$3E(a0)

loc_15E28:
		addq.l	#4,sp
		cmpi.w	#$60,(a5)
		beq.s	loc_15E36
		bcc.s	loc_15E34
		addq.w	#4,(a5)

loc_15E34:
		subq.w	#2,(a5)

loc_15E36:
		bsr.w	Tails_Check_Screen_Boundaries
		bsr.w	Player_AnglePos
		tst.b	(Background_collision_flag).w
		beq.s	locret_15E62
		bsr.w	sub_10BA2
		tst.w	d1
		bmi.w	Kill_Character
		movem.l	a4-a6,-(sp)
		bsr.w	CheckLeftWallDist
		movem.l	(sp)+,a4-a6
		tst.w	d1
		bpl.s	locret_15E62
		sub.w	d1,$10(a0)

locret_15E62:
		rts
; End of function Tails_Spindash


; =============== S U B R O U T I N E =======================================


Tails_SlopeResist:
		move.b	$26(a0),d0
		addi.b	#$60,d0
		cmpi.b	#-$40,d0
		bcc.s	locret_15E98
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	#$20,d0
		asr.l	#8,d0
		tst.w	$1C(a0)
		beq.s	locret_15E98
		bmi.s	loc_15E94
		tst.w	d0
		beq.s	locret_15E92
		add.w	d0,$1C(a0)

locret_15E92:
		rts
; ---------------------------------------------------------------------------

loc_15E94:
		add.w	d0,$1C(a0)

locret_15E98:
		rts
; End of function Tails_SlopeResist


; =============== S U B R O U T I N E =======================================


Tails_RollRepel:
		move.b	$26(a0),d0
		addi.b	#$60,d0
		cmpi.b	#-$40,d0
		bcc.s	locret_15ED4
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	#$50,d0
		asr.l	#8,d0
		tst.w	$1C(a0)
		bmi.s	loc_15ECA
		tst.w	d0
		bpl.s	loc_15EC4
		asr.l	#2,d0

loc_15EC4:
		add.w	d0,$1C(a0)
		rts
; ---------------------------------------------------------------------------

loc_15ECA:
		tst.w	d0
		bmi.s	loc_15ED0
		asr.l	#2,d0

loc_15ED0:
		add.w	d0,$1C(a0)

locret_15ED4:
		rts
; End of function Tails_RollRepel


; =============== S U B R O U T I N E =======================================


Tails_SlopeRepel:
		nop
		tst.b	$3C(a0)
		bne.s	locret_15F10
		tst.w	$32(a0)
		bne.s	loc_15F12
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#-$40,d0
		beq.s	locret_15F10
		move.w	$1C(a0),d0
		bpl.s	loc_15EFA
		neg.w	d0

loc_15EFA:
		cmpi.w	#$280,d0
		bcc.s	locret_15F10
		clr.w	$1C(a0)
		bset	#1,$2A(a0)
		move.w	#$1E,$32(a0)

locret_15F10:
		rts
; ---------------------------------------------------------------------------

loc_15F12:
		subq.w	#1,$32(a0)
		rts
; End of function Tails_SlopeRepel


; =============== S U B R O U T I N E =======================================


Tails_JumpAngle:
		move.b	$26(a0),d0
		beq.s	loc_15F32
		bpl.s	loc_15F28
		addq.b	#2,d0
		bcc.s	loc_15F26
		moveq	#0,d0

loc_15F26:
		bra.s	loc_15F2E
; ---------------------------------------------------------------------------

loc_15F28:
		subq.b	#2,d0
		bcc.s	loc_15F2E
		moveq	#0,d0

loc_15F2E:
		move.b	d0,$26(a0)

loc_15F32:
		move.b	$27(a0),d0
		beq.s	locret_15F76
		tst.w	$1C(a0)
		bmi.s	loc_15F56

loc_15F3E:
		move.b	$31(a0),d1
		add.b	d1,d0
		bcc.s	loc_15F54
		subq.b	#1,$30(a0)
		bcc.s	loc_15F54
		move.b	#0,$30(a0)
		moveq	#0,d0

loc_15F54:
		bra.s	loc_15F72
; ---------------------------------------------------------------------------

loc_15F56:
		tst.b	$2D(a0)
		bmi.s	loc_15F3E
		move.b	$31(a0),d1
		sub.b	d1,d0
		bcc.s	loc_15F72
		subq.b	#1,$30(a0)
		bcc.s	loc_15F72
		move.b	#0,$30(a0)
		moveq	#0,d0

loc_15F72:
		move.b	d0,$27(a0)

locret_15F76:
		rts
; End of function Tails_JumpAngle


; =============== S U B R O U T I N E =======================================


Tails_DoLevelCollision:
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_15F8C
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_15F8C:
		move.b	$47(a0),d5
		move.w	$18(a0),d1
		move.w	$1A(a0),d2
		jsr	(GetArcTan).l
		subi.b	#$20,d0
		andi.b	#-$40,d0
		cmpi.b	#$40,d0
		beq.w	loc_1605A
		cmpi.b	#-$80,d0
		beq.w	loc_160D6
		cmpi.b	#-$40,d0
		beq.w	loc_16132
		bsr.w	CheckLeftWallDist
		tst.w	d1
		bpl.s	loc_15FD0
		sub.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_15FD0:
		bsr.w	CheckRightWallDist
		tst.w	d1
		bpl.s	loc_15FE2
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_15FE2:
		bsr.w	Sonic_CheckFloor
		tst.w	d1
		bpl.s	locret_16058
		move.b	$1A(a0),d2
		addq.b	#8,d2
		neg.b	d2
		cmp.b	d2,d1
		bge.s	loc_15FFA
		cmp.b	d2,d0
		blt.s	locret_16058

loc_15FFA:
		add.w	d1,$14(a0)
		move.b	d3,$26(a0)
		move.b	d3,d0
		addi.b	#$20,d0
		andi.b	#$40,d0
		bne.s	loc_16032
		move.b	d3,d0
		addi.b	#$10,d0
		andi.b	#$20,d0
		beq.s	loc_16020
		asr	$1A(a0)
		bra.s	loc_16046
; ---------------------------------------------------------------------------

loc_16020:
		move.w	#0,$1A(a0)
		move.w	$18(a0),$1C(a0)
		bsr.w	Tails_TouchFloor_Check_Spindash
		rts
; ---------------------------------------------------------------------------

loc_16032:
		move.w	#0,$18(a0)
		cmpi.w	#$FC0,$1A(a0)
		ble.s	loc_16046
		move.w	#$FC0,$1A(a0)

loc_16046:
		bsr.w	Tails_TouchFloor_Check_Spindash
		move.w	$1A(a0),$1C(a0)
		tst.b	d3
		bpl.s	locret_16058
		neg.w	$1C(a0)

locret_16058:
		rts
; ---------------------------------------------------------------------------

loc_1605A:
		bsr.w	CheckLeftWallDist
		tst.w	d1
		bpl.s	loc_16072
		sub.w	d1,$10(a0)
		move.w	#0,$18(a0)
		move.w	$1A(a0),$1C(a0)

loc_16072:
		bsr.w	Sonic_CheckCeiling
		tst.w	d1
		bpl.s	loc_160A8
		neg.w	d1
		cmpi.w	#$14,d1
		bcc.s	loc_16094
		add.w	d1,$14(a0)
		tst.w	$1A(a0)
		bpl.s	locret_16092
		move.w	#0,$1A(a0)

locret_16092:
		rts
; ---------------------------------------------------------------------------

loc_16094:
		bsr.w	CheckRightWallDist
		tst.w	d1
		bpl.s	locret_160A6
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)

locret_160A6:
		rts
; ---------------------------------------------------------------------------

loc_160A8:
		tst.b	(WindTunnel_flag_P2).w
		bne.s	loc_160B4
		tst.w	$1A(a0)
		bmi.s	locret_160D4

loc_160B4:
		bsr.w	Sonic_CheckFloor
		tst.w	d1
		bpl.s	locret_160D4
		add.w	d1,$14(a0)
		move.b	d3,$26(a0)
		move.w	#0,$1A(a0)
		move.w	$18(a0),$1C(a0)
		bsr.w	Tails_TouchFloor_Check_Spindash

locret_160D4:
		rts
; ---------------------------------------------------------------------------

loc_160D6:
		bsr.w	CheckLeftWallDist
		tst.w	d1
		bpl.s	loc_160E8
		sub.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_160E8:
		bsr.w	CheckRightWallDist
		tst.w	d1
		bpl.s	loc_160FA
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_160FA:
		bsr.w	Sonic_CheckCeiling
		tst.w	d1
		bpl.s	locret_16130
		sub.w	d1,$14(a0)
		move.b	d3,d0
		addi.b	#$20,d0
		andi.b	#$40,d0
		bne.s	loc_1611A
		move.w	#0,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_1611A:
		move.b	d3,$26(a0)
		bsr.w	Tails_TouchFloor_Check_Spindash
		move.w	$1A(a0),$1C(a0)
		tst.b	d3
		bpl.s	locret_16130
		neg.w	$1C(a0)

locret_16130:
		rts
; ---------------------------------------------------------------------------

loc_16132:
		bsr.w	CheckRightWallDist
		tst.w	d1
		bpl.s	loc_1614A
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)
		move.w	$1A(a0),$1C(a0)

loc_1614A:
		bsr.w	Sonic_CheckCeiling
		tst.w	d1
		bpl.s	loc_16164
		sub.w	d1,$14(a0)
		tst.w	$1A(a0)
		bpl.s	locret_16162
		move.w	#0,$1A(a0)

locret_16162:
		rts
; ---------------------------------------------------------------------------

loc_16164:
		tst.b	(WindTunnel_flag_P2).w
		bne.s	loc_16170
		tst.w	$1A(a0)
		bmi.s	locret_16190

loc_16170:
		bsr.w	Sonic_CheckFloor
		tst.w	d1
		bpl.s	locret_16190
		add.w	d1,$14(a0)
		move.b	d3,$26(a0)
		move.w	#0,$1A(a0)
		move.w	$18(a0),$1C(a0)
		bsr.w	Tails_TouchFloor_Check_Spindash

locret_16190:
		rts
; End of function Tails_DoLevelCollision


; =============== S U B R O U T I N E =======================================


Tails_TouchFloor_Check_Spindash:
		tst.b	$3D(a0)
		bne.s	loc_161CC
		move.b	#0,$20(a0)
; End of function Tails_TouchFloor_Check_Spindash


; =============== S U B R O U T I N E =======================================


Tails_TouchFloor:
		move.b	$1E(a0),d0
		move.b	$44(a0),$1E(a0)
		move.b	$45(a0),$1F(a0)
		btst	#2,$2A(a0)
		beq.s	loc_161CC
		bclr	#2,$2A(a0)
		move.b	#0,$20(a0)
		sub.b	$44(a0),d0
		ext.w	d0
		add.w	d0,$14(a0)

loc_161CC:
		bclr	#1,$2A(a0)
		bclr	#5,$2A(a0)
		bclr	#4,$2A(a0)
		move.b	#0,$40(a0)
		move.w	#0,(Chain_bonus_counter).w
		move.b	#0,$27(a0)
		move.b	#0,$2D(a0)
		move.b	#0,$30(a0)
		move.b	#0,$39(a0)
		move.b	#0,$2F(a0)
		rts
; End of function Tails_TouchFloor

; ---------------------------------------------------------------------------

loc_1620A:
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	loc_16222
		lea	(Player_1).w,a1
		clr.b	$2E(a1)
		bset	#1,$2A(a1)
		clr.w	(Flying_carrying_Sonic_flag).w

loc_16222:
		jsr	(MoveSprite2).l
		addi.w	#$30,$1A(a0)
		btst	#6,$2A(a0)
		beq.s	loc_1623C
		subi.w	#$20,$1A(a0)

loc_1623C:
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_1624C
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)

loc_1624C:
		bsr.w	sub_16262
		bsr.w	Tails_Check_Screen_Boundaries
		bsr.w	Sonic_RecordPos
		bsr.w	sub_16356
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_16262:
		tst.b	(Disable_death_plane).w
		bne.s	loc_16278
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$E0,d0
		cmp.w	$14(a0),d0
		blt.w	loc_162BE

loc_16278:
		movem.l	a4-a6,-(sp)
		bsr.w	Tails_DoLevelCollision
		movem.l	(sp)+,a4-a6
		btst	#1,$2A(a0)
		bne.s	locret_162BC
		moveq	#0,d0
		move.w	d0,$1A(a0)
		move.w	d0,$18(a0)
		move.w	d0,$1C(a0)
		move.b	d0,$2E(a0)
		move.b	#0,$20(a0)
		move.w	#$100,8(a0)
		move.b	#2,5(a0)
		move.b	#$78,$34(a0)
		move.b	#0,$3D(a0)

locret_162BC:
		rts
; ---------------------------------------------------------------------------

loc_162BE:
		jmp	(Kill_Character).l
; End of function sub_16262

; ---------------------------------------------------------------------------

loc_162C4:
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	loc_162DC
		lea	(Player_1).w,a1
		clr.b	$2E(a1)
		bset	#1,$2A(a1)
		clr.w	(Flying_carrying_Sonic_flag).w

loc_162DC:
		bsr.w	sub_13230
		jsr	(MoveSprite).l
		bsr.w	Sonic_RecordPos
		bsr.w	sub_16356
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_162F4:
		tst.w	$3E(a0)
		beq.s	locret_16306
		subq.w	#1,$3E(a0)
		bne.s	locret_16306
		move.w	#1,(Restart_level_flag).w

locret_16306:
		rts
; ---------------------------------------------------------------------------

loc_16308:
		tst.w	(H_scroll_amount_P2).w
		bne.s	loc_1631A
		tst.w	(V_scroll_amount_P2).w
		bne.s	loc_1631A
		move.b	#2,5(a0)

loc_1631A:
		bsr.w	sub_16356
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_16324:
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	loc_1633C
		lea	(Player_1).w,a1
		clr.b	$2E(a1)
		bset	#1,$2A(a1)
		clr.w	(Flying_carrying_Sonic_flag).w

loc_1633C:
		jsr	(MoveSprite2).l
		addi.w	#$10,$1A(a0)
		bsr.w	Sonic_RecordPos
		bsr.w	sub_16356
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_16356:
		tst.w	(Competition_mode).w
		bne.s	loc_16362
		bsr.s	Animate_Tails
		bra.w	Tails_Load_PLC
; ---------------------------------------------------------------------------

loc_16362:
		bsr.w	Animate_Tails2P
		bra.w	Tails2P_Load_PLC
; End of function sub_16356


; =============== S U B R O U T I N E =======================================


Animate_Tails:
		lea	(AniTails).l,a1
; End of function Animate_Tails


; =============== S U B R O U T I N E =======================================


Animate_Tails_Part2:
		moveq	#0,d0
		move.b	$20(a0),d0
		cmp.b	$21(a0),d0
		beq.s	loc_16392
		move.b	d0,$21(a0)
		move.b	#0,$23(a0)
		move.b	#0,$24(a0)
		bclr	#5,$2A(a0)

loc_16392:
		add.w	d0,d0
		adda.w	(a1,d0.w),a1
		move.b	(a1),d0
		bmi.s	loc_16402
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		subq.b	#1,$24(a0)
		bpl.s	locret_163D0
		move.b	d0,$24(a0)
; End of function Animate_Tails_Part2


; =============== S U B R O U T I N E =======================================


sub_163B8:
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#-$10,d0
		bcc.s	loc_163D2

loc_163C8:
		move.b	d0,$22(a0)
		addq.b	#1,$23(a0)

locret_163D0:
		rts
; ---------------------------------------------------------------------------

loc_163D2:
		addq.b	#1,d0
		bne.s	loc_163E2
		move.b	#0,$23(a0)
		move.b	1(a1),d0
		bra.s	loc_163C8
; ---------------------------------------------------------------------------

loc_163E2:
		addq.b	#1,d0
		bne.s	loc_163F6
		move.b	2(a1,d1.w),d0
		sub.b	d0,$23(a0)
		sub.b	d0,d1
		move.b	1(a1,d1.w),d0
		bra.s	loc_163C8
; ---------------------------------------------------------------------------

loc_163F6:
		addq.b	#1,d0
		bne.s	locret_16400
		move.b	2(a1,d1.w),$20(a0)

locret_16400:
		rts
; End of function sub_163B8

; ---------------------------------------------------------------------------

loc_16402:
		addq.b	#1,d0
		bne.w	loc_164D0
		moveq	#0,d0
		tst.b	$2D(a0)
		bmi.w	loc_1360C
		move.b	$27(a0),d0
		bne.w	loc_1360C
		moveq	#0,d1
		move.b	$26(a0),d0
		bmi.s	loc_16426
		beq.s	loc_16426
		subq.b	#1,d0

loc_16426:
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_16432
		not.b	d0

loc_16432:
		addi.b	#$10,d0
		bpl.s	loc_1643A
		moveq	#3,d1

loc_1643A:
		andi.b	#-4,4(a0)
		eor.b	d1,d2
		or.b	d2,4(a0)
		btst	#5,$2A(a0)
		bne.w	loc_1651C
		lsr.b	#4,d0
		andi.b	#6,d0
		move.w	$1C(a0),d2
		bpl.s	loc_1645E
		neg.w	d2

loc_1645E:
		tst.b	$2B(a0)
		bpl.w	loc_16468
		add.w	d2,d2

loc_16468:
		move.b	d0,d3
		add.b	d3,d3
		add.b	d3,d3
		lea	(AniTails00).l,a1
		cmpi.w	#$600,d2
		bcs.s	loc_16492
		lea	(AniTails01).l,a1
		move.b	d0,d3
		add.b	d3,d3
		cmpi.w	#$700,d2
		bcs.s	loc_16492
		lea	(AniTails1F).l,a1
		move.b	d0,d3

loc_16492:
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#-1,d0
		bne.s	loc_164AC
		move.b	#0,$23(a0)
		move.b	1(a1),d0

loc_164AC:
		move.b	d0,$22(a0)
		add.b	d3,$22(a0)
		subq.b	#1,$24(a0)
		bpl.s	locret_164CE
		neg.w	d2
		addi.w	#$800,d2
		bpl.s	loc_164C4
		moveq	#0,d2

loc_164C4:
		lsr.w	#8,d2
		move.b	d2,$24(a0)
		addq.b	#1,$23(a0)

locret_164CE:
		rts
; ---------------------------------------------------------------------------

loc_164D0:
		subq.b	#1,$24(a0)
		bpl.w	locret_163D0
		addq.b	#1,d0
		bne.s	loc_16556
		move.w	$1C(a0),d2
		bpl.s	loc_164E4
		neg.w	d2

loc_164E4:
		lea	(AniTails03).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_164F6
		lea	(AniTails02).l,a1

loc_164F6:
		neg.w	d2
		addi.w	#$400,d2
		bpl.s	loc_16500
		moveq	#0,d2

loc_16500:
		lsr.w	#8,d2
		move.b	d2,$24(a0)
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		bra.w	sub_163B8
; ---------------------------------------------------------------------------

loc_1651C:
		subq.b	#1,$24(a0)
		bpl.w	locret_163D0
		move.w	$1C(a0),d2
		bmi.s	loc_1652C
		neg.w	d2

loc_1652C:
		addi.w	#$800,d2
		bpl.s	loc_16534
		moveq	#0,d2

loc_16534:
		lsr.w	#6,d2
		move.b	d2,$24(a0)
		lea	(AniTails04).l,a1
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		bra.w	sub_163B8
; ---------------------------------------------------------------------------

loc_16556:
		move.w	$18(a2),d1
		move.w	$1A(a2),d2
		jsr	(GetArcTan).l
		moveq	#0,d1
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_16574
		not.b	d0
		bra.s	loc_16578
; ---------------------------------------------------------------------------

loc_16574:
		addi.b	#$80,d0

loc_16578:
		addi.b	#$10,d0
		bpl.s	loc_16580
		moveq	#3,d1

loc_16580:
		andi.b	#-4,4(a0)
		eor.b	d1,d2
		or.b	d2,4(a0)
		lsr.b	#3,d0
		andi.b	#$C,d0
		move.b	d0,d3
		lea	(AniTails_Tail03).l,a1
		move.b	#3,$24(a0)
		bsr.w	sub_163B8
		add.b	d3,$22(a0)
		rts
; ---------------------------------------------------------------------------
AniTails:	include "General/Sprites/Tails/Anim - Tails S3.asm"

; =============== S U B R O U T I N E =======================================


Tails_Tail_Load_PLC:
		moveq	#0,d0
		move.b	$22(a0),d0
		cmp.b	(Player_prev_frame_P2_tail).w,d0
		beq.s	locret_167AA
		move.b	d0,(Player_prev_frame_P2_tail).w
		lea	(PLC_Tails_Tail).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_167AA
		move.w	#tiles_to_bytes(ArtTile_Player_2_Tail),d4
		move.l	#ArtUnc_Tails_Tail,d6
		bra.s	loc_16782
; End of function Tails_Tail_Load_PLC


; =============== S U B R O U T I N E =======================================


Tails_Load_PLC:
		moveq	#0,d0
		move.b	$22(a0),d0

Tails_Load_PLC2:
		cmp.b	(Player_prev_frame_P2).w,d0
		beq.s	locret_167AA
		move.b	d0,(Player_prev_frame_P2).w
		lea	(PLC_Tails).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_167AA
		move.w	#tiles_to_bytes(ArtTile_Player_2),d4
		move.l	#ArtUnc_Tails,d6

loc_16782:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		add.l	d6,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_16782

locret_167AA:
		rts
; End of function Tails_Load_PLC


; =============== S U B R O U T I N E =======================================


Animate_Tails2P:
		lea	(AniTails2P).l,a1

loc_167B2:
		moveq	#0,d0
		move.b	$20(a0),d0
		cmp.b	$21(a0),d0
		beq.s	loc_167D4
		move.b	d0,$21(a0)
		move.b	#0,$23(a0)
		move.b	#0,$24(a0)
		bclr	#5,$2A(a0)

loc_167D4:
		add.w	d0,d0
		adda.w	(a1,d0.w),a1
		move.b	(a1),d0
		bmi.s	loc_16844
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		subq.b	#1,$24(a0)
		bpl.s	locret_16812
		move.b	d0,$24(a0)
; End of function Animate_Tails2P


; =============== S U B R O U T I N E =======================================


sub_167FA:
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#-$10,d0
		bcc.s	loc_16814

loc_1680A:
		move.b	d0,$22(a0)
		addq.b	#1,$23(a0)

locret_16812:
		rts
; ---------------------------------------------------------------------------

loc_16814:
		addq.b	#1,d0
		bne.s	loc_16824
		move.b	#0,$23(a0)
		move.b	1(a1),d0
		bra.s	loc_1680A
; ---------------------------------------------------------------------------

loc_16824:
		addq.b	#1,d0
		bne.s	loc_16838
		move.b	2(a1,d1.w),d0
		sub.b	d0,$23(a0)
		sub.b	d0,d1
		move.b	1(a1,d1.w),d0
		bra.s	loc_1680A
; ---------------------------------------------------------------------------

loc_16838:
		addq.b	#1,d0
		bne.s	locret_16842
		move.b	2(a1,d1.w),$20(a0)

locret_16842:
		rts
; End of function sub_167FA

; ---------------------------------------------------------------------------

loc_16844:
		addq.b	#1,d0
		bne.w	loc_1695E
		moveq	#0,d0
		move.b	$27(a0),d0
		bne.w	loc_168F8
		moveq	#0,d1
		move.b	$26(a0),d0
		bmi.s	loc_16860
		beq.s	loc_16860
		subq.b	#1,d0

loc_16860:
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_1686C
		not.b	d0

loc_1686C:
		addi.b	#$10,d0
		bpl.s	loc_16874
		moveq	#3,d1

loc_16874:
		andi.b	#-4,4(a0)
		eor.b	d1,d2
		or.b	d2,4(a0)
		btst	#5,$2A(a0)
		bne.w	loc_169AA
		lsr.b	#5,d0
		andi.b	#3,d0
		move.w	$1C(a0),d2
		bpl.s	loc_16898
		neg.w	d2

loc_16898:
		tst.b	$2B(a0)
		bpl.w	loc_168A2
		add.w	d2,d2

loc_168A2:
		move.b	d0,d3
		lea	(AniTails2P01).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_168B8
		lea	(AniTails2P00).l,a1
		add.b	d0,d0

loc_168B8:
		add.b	d0,d3
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		cmpi.b	#-1,d0
		bne.s	loc_168D4
		move.b	#0,$23(a0)
		move.b	1(a1),d0

loc_168D4:
		move.b	d0,$22(a0)
		add.b	d3,$22(a0)
		subq.b	#1,$24(a0)
		bpl.s	locret_168F6
		neg.w	d2
		addi.w	#$800,d2
		bpl.s	loc_168EC
		moveq	#0,d2

loc_168EC:
		lsr.w	#8,d2
		move.b	d2,$24(a0)
		addq.b	#1,$23(a0)

locret_168F6:
		rts
; ---------------------------------------------------------------------------

loc_168F8:
		move.b	$27(a0),d0
		moveq	#0,d1
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_16926
		andi.b	#-4,4(a0)
		addi.b	#$16,d0
		divu.w	#$2C,d0
		addi.b	#$15,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_16926:
		andi.b	#-4,4(a0)
		tst.b	$2D(a0)
		bpl.s	loc_1693E
		ori.b	#1,4(a0)
		addi.b	#$16,d0
		bra.s	loc_1694A
; ---------------------------------------------------------------------------

loc_1693E:
		ori.b	#3,4(a0)
		neg.b	d0
		addi.b	#-$66,d0

loc_1694A:
		divu.w	#$2C,d0
		addi.b	#$15,d0
		move.b	d0,$22(a0)
		move.b	#0,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_1695E:
		subq.b	#1,$24(a0)
		bpl.w	locret_16812
		addq.b	#1,d0
		bne.s	loc_169E4
		move.w	$1C(a0),d2
		bpl.s	loc_16972
		neg.w	d2

loc_16972:
		lea	(AniTails2P03).l,a1
		cmpi.w	#$600,d2
		bcc.s	loc_16984
		lea	(AniTails2P02).l,a1

loc_16984:
		neg.w	d2
		addi.w	#$400,d2
		bpl.s	loc_1698E
		moveq	#0,d2

loc_1698E:
		lsr.w	#8,d2
		move.b	d2,$24(a0)
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		bra.w	sub_167FA
; ---------------------------------------------------------------------------

loc_169AA:
		subq.b	#1,$24(a0)
		bpl.w	locret_16812
		move.w	$1C(a0),d2
		bmi.s	loc_169BA
		neg.w	d2

loc_169BA:
		addi.w	#$800,d2
		bpl.s	loc_169C2
		moveq	#0,d2

loc_169C2:
		lsr.w	#6,d2
		move.b	d2,$24(a0)
		lea	(AniTails2P04).l,a1
		move.b	$2A(a0),d1
		andi.b	#1,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		bra.w	sub_167FA
; ---------------------------------------------------------------------------

loc_169E4:
		move.w	$18(a2),d1
		move.w	$1A(a2),d2
		jsr	(GetArcTan).l
		moveq	#0,d1
		move.b	$2A(a0),d2
		andi.b	#1,d2
		bne.s	loc_16A02
		not.b	d0
		bra.s	loc_16A06
; ---------------------------------------------------------------------------

loc_16A02:
		addi.b	#-$80,d0

loc_16A06:
		addi.b	#$10,d0
		bpl.s	loc_16A0E
		moveq	#3,d1

loc_16A0E:
		andi.b	#-4,4(a0)
		eor.b	d1,d2
		or.b	d2,4(a0)
		lsr.b	#5,d0
		andi.b	#3,d0
		move.b	d0,d3
		add.b	d0,d0
		add.b	d0,d3
		lea	(AniTails2P_Tail03).l,a1
		move.b	#3,$24(a0)
		bsr.w	sub_167FA
		add.b	d3,$22(a0)
		rts
; ---------------------------------------------------------------------------
AniTails2P:	include "General/Sprites/Tails/Anim - Tails 2P.asm"

; =============== S U B R O U T I N E =======================================


Tails2P_Tail_Load_PLC:
		moveq	#0,d0
		move.b	$22(a0),d0
		lea	(DPLC_Tails2P_Tail).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_16B80
		move.l	#ArtUnc_Tails2P_Tail,d6
		move.w	#tiles_to_bytes(ArtTile_Player_2_Tail),d4
		cmpa.w	#Tails_tails,a0
		beq.s	loc_16B58
		move.w	#$D200,d4
		bra.s	loc_16B58
; End of function Tails2P_Tail_Load_PLC


; =============== S U B R O U T I N E =======================================


Tails2P_Load_PLC:
		moveq	#0,d0
		move.b	$22(a0),d0
		lea	(PLC_Tails2P).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_16B80
		move.l	#ArtUnc_Tails2P,d6
		move.w	#tiles_to_bytes(ArtTile_Player_1),d4
		cmpa.w	#Player_1,a0
		beq.s	loc_16B58
		move.w	#tiles_to_bytes(ArtTile_Player_2),d4

loc_16B58:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		add.l	d6,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_16B58

locret_16B80:
		rts
; End of function Tails2P_Load_PLC

; ---------------------------------------------------------------------------

Obj_Tails_Tail:
		move.l	#Map_Tails_Tail,$C(a0)
		move.w	#ArtTile_Player_2_Tail,$A(a0)
		move.w	#$100,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.b	#4,4(a0)
		move.l	#Obj_Tails_Tail_Main,(a0)

Obj_Tails_Tail_Main:
		movea.w	$30(a0),a2
		move.b	$26(a2),$26(a0)
		move.b	$2A(a2),$2A(a0)
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		move.w	8(a2),8(a0)
		andi.w	#$7FFF,$A(a0)
		tst.w	$A(a2)
		bpl.s	loc_16BE2
		ori.w	#-$8000,$A(a0)

loc_16BE2:
		moveq	#0,d0
		move.b	$20(a2),d0
		btst	#5,$2A(a2)
		beq.s	loc_16BF8
		tst.b	(WindTunnel_flag_P2).w
		bne.s	loc_16BF8
		moveq	#4,d0

loc_16BF8:
		cmp.b	$34(a0),d0
		beq.s	loc_16C08
		move.b	d0,$34(a0)
		move.b	Obj_Tails_Tail_AniSelection(pc,d0.w),$20(a0)

loc_16C08:
		lea	(AniTails_Tail).l,a1
		bsr.w	Animate_Tails_Part2
		bsr.w	Tails_Tail_Load_PLC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Obj_Tails_Tail_AniSelection:
		dc.b 0,0
		dc.b 3
		dc.b 3
		dc.b 9
		dc.b 1
		dc.b 0
		dc.b 2
		dc.b 1
		dc.b 7
		dc.b 0,0,0
		dc.b 8
		dc.b 0,0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b $A
		dc.b 0
		dc.b 0,0,0
		dc.b 0
		dc.b 0,0
		dc.b 0
		dc.b 0,0
		dc.b 0
		dc.b $B,$C
		dc.b $B
		dc.b $C
		dc.b $B
		dc.b 0,0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0,0,0
AniTails_Tail:	include "General/Sprites/Tails/Anim - Tails Tail.asm"
; ---------------------------------------------------------------------------

Obj_Tails2P_Tail:
		move.l	#Map_Tails2P_Tail,$C(a0)
		move.w	#ArtTile_Player_2_Tail,$A(a0)
		cmpa.w	#Tails_tails,a0
		beq.s	loc_16CCC
		move.w	#$690,$A(a0)

loc_16CCC:
		move.w	#$100,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.b	#4,4(a0)
		move.l	#loc_16CEA,(a0)

loc_16CEA:
		movea.w	$30(a0),a2
		move.b	$26(a2),$26(a0)
		move.b	$2A(a2),$2A(a0)
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		move.w	8(a2),8(a0)
		andi.w	#$7FFF,$A(a0)
		tst.w	$A(a2)
		bpl.s	loc_16D1E
		ori.w	#$8000,$A(a0)

loc_16D1E:
		moveq	#0,d0
		move.b	$20(a2),d0
		btst	#5,$2A(a2)
		beq.s	loc_16D34
		cmpi.b	#5,d0
		beq.s	loc_16D34
		moveq	#4,d0

loc_16D34:
		cmp.b	$34(a0),d0
		beq.s	loc_16D44
		move.b	d0,$34(a0)
		move.b	byte_16D58(pc,d0.w),$20(a0)

loc_16D44:
		lea	(AniTails2P_Tail).l,a1
		bsr.w	loc_167B2
		bsr.w	Tails2P_Tail_Load_PLC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
byte_16D58:	dc.b    0,   0,   3,   3,   0,   1,   1,   1,   1,   0,   1,   1,   1,   0,   0,   0,   0,   0,   0,   0
		dc.b    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
AniTails2P_Tail:include "General/Sprites/Tails/Anim - Tails 2P Tail.asm"
; ---------------------------------------------------------------------------

Obj_MGZ2_BossTransition:
		cmpi.w	#2,(Player_mode).w
		beq.w	loc_16E88
		move.w	(Camera_X_pos).w,d0
		addi.w	#$40,d0
		move.w	d0,$10(a0)
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$100,d0
		move.w	d0,$14(a0)
		lea	(Player_2).w,a1
		tst.b	4(a1)
		bmi.s	loc_16DE0
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		subq.w	#1,$14(a1)
		move.l	#Obj_Tails,(Player_2).w
		move.w	#$12,(Tails_CPU_routine).w
		move.w	#0,(Flying_carrying_Sonic_flag).w

loc_16DE0:
		move.w	#$168,$30(a0)
		move.l	#loc_16DEC,(a0)

loc_16DEC:
		subq.w	#1,$30(a0)
		bne.s	loc_16DF8
		move.l	#loc_16DF8,(a0)

loc_16DF8:
		tst.b	(Flying_carrying_Sonic_flag).w
		bne.s	loc_16E3C
		lea	(Player_1).w,a1
		move.w	$14(a0),d0
		cmp.w	$14(a1),d0
		bcc.s	loc_16E3C
		move.w	d0,$14(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.w	#0,$1C(a1)
		move.b	#0,$3D(a1)
		cmpi.w	#$14,(Tails_CPU_routine).w
		bcs.s	loc_16E36
		move.w	$10(a1),$10(a0)

loc_16E36:
		move.b	#2,5(a1)

loc_16E3C:
		tst.b	(Player_1+render_flags).w
		bmi.s	locret_16E86
		cmpi.b	#2,(Player_1+routine).w
		bne.s	locret_16E86
		lea	(Player_2).w,a1
		move.w	$14(a0),d0
		cmp.w	$14(a1),d0
		bcc.s	locret_16E86
		move.w	#$12,(Tails_CPU_routine).w
		tst.w	$30(a0)
		bne.s	locret_16E86
		move.w	d0,$14(a1)
		move.b	#2,5(a1)
		move.b	#0,$2E(a1)
		move.b	#0,$3D(a1)
		move.w	$10(a0),$10(a1)
		move.w	#$14,(Tails_CPU_routine).w

locret_16E86:
		rts
; ---------------------------------------------------------------------------

loc_16E88:
		move.w	(Camera_X_pos).w,d0
		addi.w	#$40,d0
		move.w	d0,$10(a0)
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$100,d0
		move.w	d0,$14(a0)
		move.w	#$168,$30(a0)
		move.l	#loc_16EAC,(a0)

loc_16EAC:
		subq.w	#1,$30(a0)
		bne.s	loc_16EC2
		move.l	#loc_16EC2,(a0)
		lea	(Player_1).w,a1
		move.w	$10(a0),$10(a1)

loc_16EC2:
		lea	(Player_1).w,a1
		move.w	$14(a0),d0
		cmp.w	$14(a1),d0
		bcc.s	locret_16EFA
		move.w	d0,$14(a1)
		addq.w	#8,$14(a1)
		tst.w	$30(a0)
		bne.s	locret_16EFA
		move.w	d0,$14(a1)
		move.b	#2,5(a1)
		move.b	#0,$2E(a1)
		move.b	#0,$3D(a1)
		move.w	#$1A,(Tails_CPU_routine).w

locret_16EFA:
		rts
; ---------------------------------------------------------------------------

Obj_Air_CountDown:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	AirCountdown_Index(pc,d0.w),d1
		jmp	AirCountdown_Index(pc,d1.w)
; ---------------------------------------------------------------------------
AirCountdown_Index:dc.w	AirCountdown_Init-AirCountdown_Index
		dc.w AirCountdown_Animate-AirCountdown_Index
		dc.w AirCountdown_ChkWater-AirCountdown_Index
		dc.w AirCountdown_Display-AirCountdown_Index
		dc.w AirCountdown_Delete-AirCountdown_Index
		dc.w AirCountdown_Countdown-AirCountdown_Index
		dc.w AirCountdown_AirLeft-AirCountdown_Index
		dc.w AirCountdown_DisplayNumber-AirCountdown_Index
		dc.w AirCountdown_Delete-AirCountdown_Index
; ---------------------------------------------------------------------------

AirCountdown_Init:
		addq.b	#2,5(a0)
		move.l	#Map_Bubbler,$C(a0)
		tst.b	$43(a0)
		beq.s	loc_16F36
		move.l	#Map_Bubbler2,$C(a0)

loc_16F36:
		move.w	#$45C,$A(a0)
		move.b	#$84,4(a0)
		move.b	#$10,7(a0)
		move.w	#$80,8(a0)
		move.b	$2C(a0),d0
		bpl.s	loc_16F64
		addq.b	#8,5(a0)
		andi.w	#$7F,d0
		move.b	d0,$37(a0)
		bra.w	AirCountdown_Countdown
; ---------------------------------------------------------------------------

loc_16F64:
		move.b	d0,$20(a0)
		move.w	$10(a0),$34(a0)
		move.w	#-$100,$1A(a0)

AirCountdown_Animate:
		lea	(Ani_Shields).l,a1
		jsr	(Animate_Sprite).l

AirCountdown_ChkWater:
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bcs.s	AirCountdown_Wobble
		move.b	#6,5(a0)
		addq.b	#7,$20(a0)
		cmpi.b	#$D,$20(a0)
		beq.s	AirCountdown_Display
		bcs.s	AirCountdown_Display
		move.b	#$D,$20(a0)
		bra.s	AirCountdown_Display
; ---------------------------------------------------------------------------

AirCountdown_Wobble:
		tst.w	(WindTunnel_flag).w
		beq.s	loc_16FB0
		addq.w	#4,$34(a0)

loc_16FB0:
		move.b	$26(a0),d0
		addq.b	#1,$26(a0)
		andi.w	#$7F,d0
		lea	(AirCountdown_WobbleData).l,a1
		move.b	(a1,d0.w),d0
		ext.w	d0
		add.w	$34(a0),d0
		move.w	d0,$10(a0)
		bsr.w	AirCountdown_ShowNumber
		jsr	(MoveSprite2).l
		tst.b	4(a0)
		bpl.s	loc_16FE6
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_16FE6:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

AirCountdown_Display:
		bsr.s	AirCountdown_ShowNumber
		lea	(Ani_Shields).l,a1
		jsr	(Animate_Sprite).l
		bsr.w	AirCountdown_Load_Art
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

AirCountdown_Delete:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

AirCountdown_AirLeft:
		movea.l	$40(a0),a2
		cmpi.b	#$C,$2C(a2)
		bhi.s	loc_17044
		subq.w	#1,$3C(a0)
		bne.s	AirCountdown_Display2
		move.b	#$E,5(a0)
		addq.b	#7,$20(a0)
		bra.s	AirCountdown_Display
; ---------------------------------------------------------------------------

AirCountdown_Display2:
		lea	(Ani_Shields).l,a1
		jsr	(Animate_Sprite).l
		bsr.w	AirCountdown_Load_Art
		tst.b	4(a0)
		bpl.s	loc_17044
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_17044:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

AirCountdown_DisplayNumber:
		movea.l	$40(a0),a2
		cmpi.b	#$C,$2C(a2)
		bhi.s	AirCountdown_Delete
		bsr.s	AirCountdown_ShowNumber
		lea	(Ani_Shields).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


AirCountdown_ShowNumber:
		tst.w	$3C(a0)
		beq.s	locret_170B4
		subq.w	#1,$3C(a0)
		bne.s	locret_170B4
		cmpi.b	#7,$20(a0)
		bcc.s	locret_170B4
		move.w	#$F,$3C(a0)
		clr.w	$1A(a0)
		move.b	#$80,4(a0)
		move.w	$10(a0),d0
		sub.w	(Camera_X_pos).w,d0
		addi.w	#$80,d0
		move.w	d0,$10(a0)
		move.w	$14(a0),d0
		sub.w	(Camera_Y_pos).w,d0
		addi.w	#$80,d0
		move.w	d0,$14(a0)
		move.b	#$C,5(a0)

locret_170B4:
		rts
; End of function AirCountdown_ShowNumber

; ---------------------------------------------------------------------------
AirCountdown_WobbleData:
		dc.b  0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2
		dc.b  2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
		dc.b  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2
		dc.b  2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0
		dc.b  0,-1,-1,-1,-1,-1,-2,-2,-2,-2,-2,-3,-3,-3,-3,-3
		dc.b -3,-3,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4
		dc.b -4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-3
		dc.b -3,-3,-3,-3,-3,-3,-2,-2,-2,-2,-2,-1,-1,-1,-1,-1
		dc.b  0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2
		dc.b  2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3
		dc.b  3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2
		dc.b  2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0
		dc.b  0,-1,-1,-1,-1,-1,-2,-2,-2,-2,-2,-3,-3,-3,-3,-3
		dc.b -3,-3,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4
		dc.b -4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-4,-3
		dc.b -3,-3,-3,-3,-3,-3,-2,-2,-2,-2,-2,-1,-1,-1,-1,-1

; =============== S U B R O U T I N E =======================================


AirCountdown_Load_Art:
		moveq	#0,d1
		move.b	$22(a0),d1
		cmpi.b	#9,d1
		bcs.s	locret_171FC
		cmpi.b	#$13,d1
		bcc.s	locret_171FC
		cmp.b	$32(a0),d1
		beq.s	locret_171FC
		move.b	d1,$32(a0)
		subi.w	#9,d1
		move.w	d1,d0
		add.w	d1,d1
		add.w	d0,d1
		lsl.w	#6,d1
		addi.l	#ArtUnc_AirCountDown,d1
		move.w	#tiles_to_bytes(ArtTile_DashDust),d2
		tst.b	$43(a0)
		beq.s	loc_171F2
		move.w	#tiles_to_bytes(ArtTile_DashDust_P2),d2

loc_171F2:
		move.w	#$60,d3
		jsr	(Add_To_DMA_Queue).l

locret_171FC:
		rts
; End of function AirCountdown_Load_Art

; ---------------------------------------------------------------------------

AirCountdown_Countdown:
		movea.l	$40(a0),a2
		tst.w	$30(a0)
		bne.w	loc_1730C
		cmpi.b	#6,5(a2)
		bcc.w	locret_17410
		btst	#6,$2B(a2)
		bne.w	locret_17410
		btst	#6,$2A(a2)
		beq.w	locret_17410
		subq.w	#1,$3C(a0)
		bpl.w	loc_17324
		move.w	#$3B,$3C(a0)
		move.w	#1,$3A(a0)
		jsr	(Random_Number).l
		andi.w	#1,d0
		move.b	d0,$38(a0)
		moveq	#0,d0
		move.b	$2C(a2),d0
		cmpi.w	#$19,d0
		beq.s	AirCountdown_WarnSound
		cmpi.w	#$14,d0
		beq.s	AirCountdown_WarnSound
		cmpi.w	#$F,d0
		beq.s	AirCountdown_WarnSound
		cmpi.w	#$C,d0
		bhi.s	AirCountdown_ReduceAir
		bne.s	loc_17278
		tst.b	$43(a0)
		bne.s	loc_17278
		moveq	#signextendB(mus_Drowning),d0
		jsr	(Play_Sound).l

loc_17278:
		subq.b	#1,$36(a0)
		bpl.s	AirCountdown_ReduceAir
		move.b	$37(a0),$36(a0)
		bset	#7,$3A(a0)
		bra.s	AirCountdown_ReduceAir
; ---------------------------------------------------------------------------

AirCountdown_WarnSound:
		tst.b	$43(a0)
		bne.s	AirCountdown_ReduceAir
		moveq	#signextendB(sfx_AirDing),d0
		jsr	(Play_Sound_2).l

AirCountdown_ReduceAir:
		subq.b	#1,$2C(a2)
		bcc.w	loc_17322
		move.b	#-$7F,$2E(a2)
		move.w	#sfx_Drown,d0
		jsr	(Play_Sound_2).l
		move.b	#$A,$38(a0)
		move.w	#1,$3A(a0)
		move.w	#$78,$30(a0)
		movea.l	a2,a1
		bsr.w	Player_ResetAirTimer
		move.l	a0,-(sp)
		movea.l	a2,a0
		bsr.w	Player_TouchFloor
		move.b	#$17,$20(a0)
		bset	#1,$2A(a0)
		bset	#7,$A(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1C(a0)
		move.b	#$C,5(a0)
		movea.l	(sp)+,a0
		cmpa.w	#Player_1,a2
		bne.s	locret_1730A
		move.b	#1,(Deform_lock).w

locret_1730A:
		rts
; ---------------------------------------------------------------------------

loc_1730C:
		move.b	#$17,$20(a2)
		subq.w	#1,$30(a0)
		bne.s	loc_17320
		move.b	#6,5(a2)
		rts
; ---------------------------------------------------------------------------

loc_17320:
		bra.s	loc_17324
; ---------------------------------------------------------------------------

loc_17322:
		bra.s	AirCountdown_MakeItem
; ---------------------------------------------------------------------------

loc_17324:
		tst.w	$3A(a0)
		beq.w	locret_17410
		subq.w	#1,$3E(a0)
		bpl.w	locret_17410

AirCountdown_MakeItem:
		jsr	(Random_Number).l
		andi.w	#$F,d0
		addq.w	#8,d0
		move.w	d0,$3E(a0)
		jsr	(Create_New_Sprite).l
		bne.w	locret_17410
		move.l	(a0),(a1)
		move.w	$10(a2),$10(a1)
		moveq	#6,d0
		btst	#0,$2A(a2)
		beq.s	loc_17368
		neg.w	d0
		move.b	#$40,$26(a1)

loc_17368:
		add.w	d0,$10(a1)
		move.w	$14(a2),$14(a1)
		move.l	$40(a0),$40(a1)
		move.b	#6,$2C(a1)
		tst.w	$30(a0)
		beq.w	loc_173BA
		andi.w	#7,$3E(a0)
		addi.w	#0,$3E(a0)
		move.w	$14(a2),d0
		subi.w	#$C,d0
		move.w	d0,$14(a1)
		jsr	(Random_Number).l
		move.b	d0,$26(a1)
		move.w	(Level_frame_counter).w,d0
		andi.b	#3,d0
		bne.s	loc_17406
		move.b	#$E,$2C(a1)
		bra.s	loc_17406
; ---------------------------------------------------------------------------

loc_173BA:
		btst	#7,$3A(a0)
		beq.s	loc_17406
		moveq	#0,d2
		move.b	$2C(a2),d2
		cmpi.b	#$C,d2
		bcc.s	loc_17406
		lsr.w	#1,d2
		jsr	(Random_Number).l
		andi.w	#3,d0
		bne.s	loc_173EE
		bset	#6,$3A(a0)
		bne.s	loc_17406
		move.b	d2,$2C(a1)
		move.w	#$1C,$3C(a1)

loc_173EE:
		tst.b	$38(a0)
		bne.s	loc_17406
		bset	#6,$3A(a0)
		bne.s	loc_17406
		move.b	d2,$2C(a1)
		move.w	#$1C,$3C(a1)

loc_17406:
		subq.b	#1,$38(a0)
		bpl.s	locret_17410
		clr.w	$3A(a0)

locret_17410:
		rts

; =============== S U B R O U T I N E =======================================


Player_ResetAirTimer:
		cmpi.b	#$C,$2C(a1)
		bhi.s	loc_1744C
		cmpa.w	#Player_1,a1
		bne.s	loc_1744C
		move.w	(Level_music).w,d0
		btst	#1,$2B(a1)
		beq.s	loc_17430
		move.w	#mus_Invincibility,d0

loc_17430:
		tst.b	(Super_Sonic_Knux_flag).w
		beq.w	loc_1743C
		move.w	#mus_Invincibility,d0

loc_1743C:
		tst.b	(Boss_flag).w
		beq.s	loc_17446
		move.w	#mus_MinibossK,d0

loc_17446:
		jsr	(Play_Sound).l

loc_1744C:
		move.b	#$1E,$2C(a1)
		rts
; End of function Player_ResetAirTimer

; ---------------------------------------------------------------------------
Ani_Shields:	include "General/Sprites/Shields/Anim - Shields.asm"
; ---------------------------------------------------------------------------

Obj_Shield_S2:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	Obj_Shield_S2_Index(pc,d0.w),d1
		jmp	Obj_Shield_S2_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Obj_Shield_S2_Index:dc.w Obj_Shield_S2_Init-Obj_Shield_S2_Index
		dc.w Obj_Shield_S2_Main-Obj_Shield_S2_Index
; ---------------------------------------------------------------------------

Obj_Shield_S2_Init:
		addq.b	#2,5(a0)
		move.l	#Map_Shield_S2,$C(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$18,7(a0)
		move.w	#ArtTile_Shield,$A(a0)

Obj_Shield_S2_Main:
		movea.w	$42(a0),a2
		btst	#1,$2B(a2)
		bne.s	locret_17566
		btst	#0,$2B(a2)
		beq.s	Obj_Shield_S2_Destroy
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		move.b	$2A(a2),$2A(a0)
		andi.w	#$7FFF,$A(a0)
		tst.w	$A(a2)
		bpl.s	Obj_Shield_S2_Display
		ori.w	#$8000,$A(a0)

Obj_Shield_S2_Display:
		lea	(Ani_Shield_S2).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_17566:
		rts
; ---------------------------------------------------------------------------

Obj_Shield_S2_Destroy:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
off_1756E:	dc.l byte_1776D
		dc.w $B
		dc.l byte_17782
		dc.w $160D
		dc.l byte_1779B
		dc.w $2C0D
; ---------------------------------------------------------------------------

Obj_Invincibility:
		move.l	#ArtUnc_Invincibility,d1
		move.w	#tiles_to_bytes(ArtTile_Shield),d2
		move.w	#$200,d3
		jsr	(Add_To_DMA_Queue).l
		moveq	#0,d2
		lea	off_1756E-6(pc),a2
		lea	(a0),a1
		moveq	#3,d1

loc_1759E:
		move.l	#Obj_17670,(a1)
		move.l	#Map_Invincibility,$C(a1)
		move.w	#ArtTile_Shield,$A(a1)
		move.w	#$80,8(a1)
		move.b	#4,4(a1)
		bset	#6,4(a1)
		move.b	#$10,7(a1)
		move.w	#2,$16(a1)
		move.w	$42(a0),$42(a1)
		move.b	d2,$36(a1)
		addq.w	#1,d2
		move.l	(a2)+,$30(a1)
		move.w	(a2)+,$34(a1)
		lea	$4A(a1),a1
		dbf	d1,loc_1759E
		move.l	#loc_175F8,(a0)
		move.b	#4,$34(a0)

loc_175F8:
		tst.b	(Super_Sonic_Knux_flag).w
		bne.w	Delete_Current_Sprite
		movea.w	$42(a0),a1
		btst	#1,$2B(a1)
		beq.w	Delete_Current_Sprite
		move.w	$10(a1),d0
		move.w	d0,$10(a0)
		move.w	$14(a1),d1
		move.w	d1,$14(a0)
		lea	$18(a0),a2
		lea	byte_17760(pc),a3
		moveq	#0,d5

loc_17628:
		move.w	$38(a0),d2
		move.b	(a3,d2.w),d5
		bpl.s	loc_17638
		clr.w	$38(a0)
		bra.s	loc_17628
; ---------------------------------------------------------------------------

loc_17638:
		addq.w	#1,$38(a0)
		lea	word_17720(pc),a6
		move.b	$34(a0),d6
		jsr	sub_1770A(pc)
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		move.w	d5,(a2)+
		addi.w	#$20,d6
		jsr	sub_1770A(pc)
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		move.w	d5,(a2)+
		moveq	#$12,d0
		btst	#0,$2A(a1)
		beq.s	loc_17668
		neg.w	d0

loc_17668:
		add.b	d0,$34(a0)
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

Obj_17670:
		tst.b	(Super_Sonic_Knux_flag).w
		bne.w	Delete_Current_Sprite
		movea.w	$42(a0),a1
		btst	#1,$2B(a1)
		beq.w	Delete_Current_Sprite
		lea	(Pos_table_index).w,a5
		lea	(Pos_table).w,a6
		move.b	$36(a0),d1
		lsl.b	#2,d1
		move.w	d1,d2
		add.w	d1,d1
		add.w	d2,d1
		move.w	(a5),d0
		sub.b	d1,d0
		lea	(a6,d0.w),a2
		move.w	(a2)+,d0
		move.w	(a2)+,d1
		move.w	d0,$10(a0)
		move.w	d1,$14(a0)
		lea	$18(a0),a2
		movea.l	$30(a0),a3

loc_176B6:
		move.w	$38(a0),d2
		move.b	(a3,d2.w),d5
		bpl.s	loc_176C6
		clr.w	$38(a0)
		bra.s	loc_176B6
; ---------------------------------------------------------------------------

loc_176C6:
		swap	d5
		add.b	$35(a0),d2
		move.b	(a3,d2.w),d5
		addq.w	#1,$38(a0)
		lea	word_17720(pc),a6
		move.b	$34(a0),d6
		jsr	sub_1770A(pc)
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		move.w	d5,(a2)+
		addi.w	#$20,d6
		swap	d5
		jsr	sub_1770A(pc)
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		move.w	d5,(a2)+
		moveq	#2,d0
		btst	#0,$2A(a1)
		beq.s	loc_17702
		neg.w	d0

loc_17702:
		add.b	d0,$34(a0)
		bra.w	Draw_Sprite

; =============== S U B R O U T I N E =======================================


sub_1770A:
		andi.w	#$3E,d6
		move.b	(a6,d6.w),d2
		move.b	1(a6,d6.w),d3
		ext.w	d2
		ext.w	d3
		add.w	d0,d2
		add.w	d1,d3
		rts
; End of function sub_1770A

; ---------------------------------------------------------------------------
word_17720:	dc.w   $F00,  $F03,  $E06,  $D08,  $B0B,  $80D,  $60E,  $30F,   $10, $FC0F, $F90E, $F70D, $F40B, $F208, $F106, $F003
		dc.w  $F000, $F0FC, $F1F9, $F2F7, $F4F4, $F7F2, $F9F1, $FCF0, $FFF0,  $3F0,  $6F1,  $8F2,  $BF4,  $DF7,  $EF9,  $FFC
byte_17760:	dc.b    8,   5,   7,   6,   6,   7,   5,   8,   6,   7,   7,   6, $FF
byte_1776D:	dc.b    8,   7,   6,   5,   4,   3,   4,   5,   6,   7, $FF,   3,   4,   5,   6,   7,   8,   7,   6,   5
		dc.b    4
byte_17782:	dc.b    8,   7,   6,   5,   4,   3,   2,   3,   4,   5,   6,   7, $FF,   2,   3,   4,   5,   6,   7,   8
		dc.b    7,   6,   5,   4,   3
byte_1779B:	dc.b    7,   6,   5,   4,   3,   2,   1,   2,   3,   4,   5,   6, $FF,   1,   2,   3,   4,   5,   6,   7
		dc.b    6,   5,   4,   3,   2
Ani_Shield_S2:	include "General/Sprites/Shields/Anim - Shield S2.asm"
Map_Shield_S2:	include "General/Sprites/Shields/Map - Shield S2.asm"
Map_Invincibility:
		include "General/Sprites/Shields/Map - Invincibility.asm"
; ---------------------------------------------------------------------------

Obj_DashDust:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_178CC(pc,d0.w),d1
		jmp	off_178CC(pc,d1.w)
; ---------------------------------------------------------------------------
off_178CC:	dc.w loc_178D4-off_178CC
		dc.w loc_1792A-off_178CC
		dc.w loc_17A1C-off_178CC
		dc.w loc_17A20-off_178CC
; ---------------------------------------------------------------------------

loc_178D4:
		addq.b	#2,5(a0)
		move.l	#Map_DashDust,$C(a0)
		ori.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$10,7(a0)
		move.w	#ArtTile_DashDust,$A(a0)
		move.w	#Player_1,$42(a0)
		move.w	#tiles_to_bytes(ArtTile_DashDust),$40(a0)
		cmpa.w	#Dust,a0
		beq.s	loc_1792A
		move.b	#1,$38(a0)
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_1792A
		move.w	#ArtTile_DashDust_P2,$A(a0)
		move.w	#Player_2,$42(a0)
		move.w	#tiles_to_bytes(ArtTile_DashDust_P2),$40(a0)

loc_1792A:
		movea.w	$42(a0),a2
		moveq	#0,d0
		move.b	$20(a0),d0
		add.w	d0,d0
		move.w	off_1793E(pc,d0.w),d1
		jmp	off_1793E(pc,d1.w)
; ---------------------------------------------------------------------------
off_1793E:	dc.w loc_179FE-off_1793E
		dc.w loc_17948-off_1793E
		dc.w loc_179A0-off_1793E
		dc.w loc_179F6-off_1793E
		dc.w loc_1796C-off_1793E
; ---------------------------------------------------------------------------

loc_17948:
		move.w	(Water_level).w,$14(a0)
		tst.b	$21(a0)
		bne.w	loc_179FE
		move.w	$10(a2),$10(a0)
		move.b	#0,$2A(a0)
		andi.w	#$7FFF,$A(a0)
		bra.w	loc_179FE
; ---------------------------------------------------------------------------

loc_1796C:
		tst.b	$21(a0)
		bne.s	loc_17984
		move.w	$10(a2),$10(a0)
		move.b	#0,$2A(a0)
		andi.w	#$7FFF,$A(a0)

loc_17984:
		lea	(Ani_DashSplashDrown).l,a1
		jsr	(Animate_Sprite).l
		move.l	#ArtUnc_SplashDrown,d6
		bsr.w	SplashDrown_Load_DPLC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_179A0:
		cmpi.b	#$C,$2C(a2)
		bcs.w	loc_17A14
		cmpi.b	#4,5(a2)
		bcc.s	loc_17A14
		tst.b	$3D(a2)
		beq.s	loc_17A14
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		move.b	$2A(a2),$2A(a0)
		andi.b	#1,$2A(a0)
		tst.b	$38(a0)
		beq.s	loc_179DC
		subi.w	#4,$14(a0)

loc_179DC:
		tst.b	$21(a0)
		bne.s	loc_179FE
		andi.w	#$7FFF,$A(a0)
		tst.w	$A(a2)
		bpl.s	loc_179FE
		ori.w	#-$8000,$A(a0)
		bra.s	loc_179FE
; ---------------------------------------------------------------------------

loc_179F6:
		cmpi.b	#$C,$2C(a2)
		bcs.s	loc_17A14

loc_179FE:
		lea	(Ani_DashSplashDrown).l,a1
		jsr	(Animate_Sprite).l
		bsr.w	DashDust_Load_DPLC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_17A14:
		move.b	#0,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_17A1C:
		bra.w	Delete_Current_Sprite
; ---------------------------------------------------------------------------

loc_17A20:
		movea.w	$42(a0),a2
		cmpi.b	#$D,$20(a2)
		beq.s	loc_17A3A
		move.b	#2,5(a0)
		move.b	#0,$36(a0)
		rts
; ---------------------------------------------------------------------------

loc_17A3A:
		subq.b	#1,$36(a0)
		bpl.s	loc_17AB2
		move.b	#3,$36(a0)
		bsr.w	Create_New_Sprite
		bne.s	loc_17AB2
		move.l	(a0),(a1)
		move.w	$10(a2),$10(a1)
		move.w	$14(a2),$14(a1)
		addi.w	#$10,$14(a1)
		tst.b	$38(a0)
		beq.s	loc_17A6C
		subi.w	#4,$14(a1)

loc_17A6C:
		move.b	#0,$2A(a1)
		move.b	#3,$20(a1)
		addq.b	#2,5(a1)
		move.l	$C(a0),$C(a1)
		move.b	4(a0),4(a1)
		move.w	#$80,8(a1)
		move.b	#4,7(a1)
		move.w	$A(a0),$A(a1)
		move.w	$42(a0),$42(a1)
		andi.w	#$7FFF,$A(a1)
		tst.w	$A(a2)
		bpl.s	loc_17AB2
		ori.w	#$8000,$A(a1)

loc_17AB2:
		bsr.s	DashDust_Load_DPLC
		rts

; =============== S U B R O U T I N E =======================================


DashDust_Load_DPLC:
		move.l	#ArtUnc_DashDust,d6

SplashDrown_Load_DPLC:
		moveq	#0,d0
		move.b	$22(a0),d0
		cmp.b	$34(a0),d0
		beq.s	locret_17B0A
		move.b	d0,$34(a0)
		lea	(DPLC_DashSplashDrown).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_17B0A
		move.w	$40(a0),d4

loc_17AE2:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		add.l	d6,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_17AE2

locret_17B0A:
		rts
; End of function DashDust_Load_DPLC

; ---------------------------------------------------------------------------
Ani_DashSplashDrown:
		include "General/Sprites/Dash Dust/Anim - Dash Dust.asm"
Map_DashDust:
		include "General/Sprites/Dash Dust/Map - Dash Dust.asm"
DPLC_DashSplashDrown:
		include "General/Sprites/Dash Dust/DPLC - Dash Dust.asm"
; ---------------------------------------------------------------------------

Obj_DashDust2P:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_17CE0(pc,d0.w),d1
		jmp	off_17CE0(pc,d1.w)
; ---------------------------------------------------------------------------
off_17CE0:	dc.w loc_17CE8-off_17CE0
		dc.w loc_17D1E-off_17CE0
		dc.w loc_17DAC-off_17CE0
		dc.w loc_17DB0-off_17CE0
; ---------------------------------------------------------------------------

loc_17CE8:
		addq.b	#2,5(a0)
		move.l	#Map_DashDust2P,$C(a0)
		ori.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$10,7(a0)
		move.w	#ArtTile_DashDust,$A(a0)
		move.w	#Player_1,$42(a0)
		cmpa.w	#Dust,a0
		beq.s	loc_17D1E
		move.w	#Player_2,$42(a0)

loc_17D1E:
		movea.w	$42(a0),a2
		moveq	#0,d0
		move.b	$20(a0),d0
		add.w	d0,d0
		move.w	off_17D32(pc,d0.w),d1
		jmp	off_17D32(pc,d1.w)
; ---------------------------------------------------------------------------
off_17D32:	dc.w loc_17D3A-off_17D32
		dc.w loc_17D3A-off_17D32
		dc.w loc_17D42-off_17D32
		dc.w loc_17D8A-off_17D32
; ---------------------------------------------------------------------------

loc_17D3A:
		move.b	#0,$22(a0)
		bra.s	loc_17D92
; ---------------------------------------------------------------------------

loc_17D42:
		cmpi.b	#$C,$2C(a2)
		bcs.s	loc_17DA4
		cmpi.b	#4,5(a2)
		bcc.s	loc_17DA4
		tst.b	$3D(a2)
		beq.s	loc_17DA4
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		move.b	$2A(a2),$2A(a0)
		andi.b	#1,$2A(a0)
		tst.b	$21(a0)
		bne.s	loc_17D92
		andi.w	#$7FFF,$A(a0)
		tst.w	$A(a2)
		bpl.s	loc_17D92
		ori.w	#$8000,$A(a0)
		bra.s	loc_17D92
; ---------------------------------------------------------------------------

loc_17D8A:
		cmpi.b	#$C,$2C(a2)
		bcs.s	loc_17DA4

loc_17D92:
		lea	(Ani_DashDust2P).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_17DA4:
		move.b	#0,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_17DAC:
		bra.w	Delete_Current_Sprite
; ---------------------------------------------------------------------------

loc_17DB0:
		movea.w	$42(a0),a2
		cmpi.b	#$D,$20(a2)
		beq.s	loc_17DCA
		move.b	#2,5(a0)
		move.b	#0,$36(a0)
		rts
; ---------------------------------------------------------------------------

loc_17DCA:
		move.b	#0,$22(a0)
		subq.b	#1,$36(a0)
		bpl.s	locret_17E3C
		move.b	#3,$36(a0)
		bsr.w	Create_New_Sprite
		bne.s	locret_17E3C
		move.l	(a0),(a1)
		move.w	$10(a2),$10(a1)
		move.w	$14(a2),$14(a1)
		addi.w	#$C,$14(a1)
		move.b	#0,$2A(a1)
		move.b	#3,$20(a1)
		addq.b	#2,5(a1)
		move.l	$C(a0),$C(a1)
		move.b	4(a0),4(a1)
		move.w	#$80,8(a1)
		move.b	#4,7(a1)
		move.w	$A(a0),$A(a1)
		move.w	$42(a0),$42(a1)
		andi.w	#$7FFF,$A(a1)
		tst.w	$A(a2)
		bpl.s	locret_17E3C
		ori.w	#$8000,$A(a1)

locret_17E3C:
		rts
; ---------------------------------------------------------------------------
Ani_DashDust2P:	include "General/Sprites/Dash Dust/Anim - Dash Dust 2P.asm"
Map_DashDust2P:	include "General/Sprites/Dash Dust/Map - Dash Dust 2P.asm"
; ---------------------------------------------------------------------------

Obj_SuperSonic_Stars:
		move.l	#ArtUnc_SuperSonic_Stars,d1
		move.w	#tiles_to_bytes(ArtTile_Shield),d2
		move.w	#$1A0,d3
		jsr	(Add_To_DMA_Queue).l
		move.l	#Map_SuperSonic_Stars,$C(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.w	#ArtTile_Shield,$A(a0)
		btst	#7,(Player_1+art_tile).w
		beq.s	loc_17EEA
		bset	#7,$A(a0)

loc_17EEA:
		move.l	#loc_17EF0,(a0)

loc_17EF0:
		tst.b	(Super_Sonic_Knux_flag).w
		beq.w	loc_17F7C
		tst.b	$20(a0)
		beq.s	loc_17F02
		bsr.w	sub_17F82

loc_17F02:
		tst.b	$34(a0)
		beq.s	loc_17F4C
		subq.b	#1,$24(a0)
		bpl.s	loc_17F34
		move.b	#1,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#6,$22(a0)
		bcs.s	loc_17F34
		move.b	#0,$22(a0)
		move.b	#0,$34(a0)
		move.b	#1,$35(a0)
		rts
; ---------------------------------------------------------------------------

loc_17F34:
		tst.b	$35(a0)
		bne.s	loc_17F46

loc_17F3A:
		move.w	(Player_1+x_pos).w,$10(a0)
		move.w	(Player_1+y_pos).w,$14(a0)

loc_17F46:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_17F4C:
		tst.b	(Player_1+object_control).w
		bne.s	loc_17F6E
		move.w	(Player_1+ground_vel).w,d0
		bpl.s	loc_17F5A
		neg.w	d0

loc_17F5A:
		cmpi.w	#$800,d0
		bcs.s	loc_17F6E
		move.b	#0,$22(a0)
		move.b	#1,$34(a0)
		bra.s	loc_17F3A
; ---------------------------------------------------------------------------

loc_17F6E:
		move.b	#0,$34(a0)
		move.b	#0,$35(a0)
		rts
; ---------------------------------------------------------------------------

loc_17F7C:
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_17F82:
		move.b	#0,$20(a0)
		lea	(Player_1).w,a2
		moveq	#$F,d5
		move.w	#$488,d4

loc_17F92:
		bsr.w	Create_New_Sprite
		bne.w	locret_1800A
		move.l	#Obj_SuperSonic_Stars_Timer,(a1)
		move.w	$10(a2),$10(a1)
		move.w	$14(a2),$14(a1)
		move.l	#Map_SuperSonic_Stars2,$C(a1)
		move.w	#$879C,$A(a1)
		move.b	#$84,4(a1)
		move.w	#$380,8(a1)
		move.b	#8,7(a1)
		move.b	#8,6(a1)
		tst.w	d4
		bmi.s	loc_17FFA
		move.w	d4,d0
		jsr	(GetSineCosine).l
		move.w	d4,d2
		lsr.w	#8,d2
		asl.w	d2,d0
		asl.w	d2,d1
		move.w	d0,d2
		move.w	d1,d3
		addi.b	#$10,d4
		bcc.s	loc_17FFA
		subi.w	#$80,d4
		bcc.s	loc_17FFA
		move.w	#$488,d4

loc_17FFA:
		move.w	d2,$18(a1)
		move.w	d3,$1A(a1)
		neg.w	d2
		neg.w	d4
		dbf	d5,loc_17F92

locret_1800A:
		rts
; End of function sub_17F82

; ---------------------------------------------------------------------------

Obj_SuperSonic_Stars_Timer:
		tst.b	4(a0)
		bmi.s	loc_18018
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_18018:
		addq.b	#1,$22(a0)
		andi.b	#3,$22(a0)
		bsr.w	MoveSprite2
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------
Map_SuperSonic_Stars:
		include "General/Sprites/Shields/Map - Super Sonic Stars.asm"
; ---------------------------------------------------------------------------

Obj_Insta_Shield:
		move.l	#Map_InstaShield,$C(a0)
		move.l	#DPLC_InstaShield,$3C(a0)
		move.l	#ArtUnc_InstaShield,$38(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.w	#ArtTile_Shield,$A(a0)
		move.w	#tiles_to_bytes(ArtTile_Shield),$40(a0)
		btst	#7,(Player_1+art_tile).w
		beq.s	loc_180DE
		bset	#7,$A(a0)

loc_180DE:
		move.w	#1,$20(a0)
		move.b	#-1,$34(a0)
		move.l	#Obj_Insta_Shield_Main,(a0)

Obj_Insta_Shield_Main:
		movea.w	$42(a0),a2
		btst	#1,$2B(a2)
		bne.s	locret_18158
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		move.b	$2A(a2),$2A(a0)
		andi.b	#1,$2A(a0)
		andi.w	#$7FFF,$A(a0)
		tst.w	$A(a2)
		bpl.s	loc_18126
		ori.w	#$8000,$A(a0)

loc_18126:
		lea	(Ani_InstaShield).l,a1
		jsr	(Animate_Sprite).l
		cmpi.b	#7,$22(a0)
		bne.s	loc_18140
		move.b	#2,$2F(a2)

loc_18140:
		tst.b	$22(a0)
		beq.s	loc_1814E
		cmpi.b	#3,$22(a0)
		bne.s	loc_18152

loc_1814E:
		bsr.w	PLCLoad_Shields

loc_18152:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_18158:
		rts
; ---------------------------------------------------------------------------

Obj_Fire_Shield:
		move.l	#Map_FireShield,$C(a0)
		move.l	#DPLC_FireShield,$3C(a0)
		move.l	#ArtUnc_FireShield,$38(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.w	#ArtTile_Shield,$A(a0)
		move.w	#tiles_to_bytes(ArtTile_Shield),$40(a0)
		btst	#7,(Player_1+art_tile).w
		beq.s	loc_181A4
		bset	#7,$A(a0)

loc_181A4:
		move.w	#1,$20(a0)
		move.b	#-1,$34(a0)
		move.l	#Obj_Fire_Shield_Main,(a0)

Obj_Fire_Shield_Main:
		movea.w	$42(a0),a2
		btst	#1,$2B(a2)
		bne.s	locret_18236
		cmpi.b	#$1C,$20(a2)
		beq.s	locret_18236
		btst	#0,$2B(a2)
		beq.w	Obj_Fire_Shield_Destroy
		btst	#6,$2A(a2)
		bne.s	Obj_Fire_Shield_DestroyUnderwater
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		tst.b	$20(a0)
		bne.s	loc_1820C
		move.b	$2A(a2),$2A(a0)
		andi.b	#1,$2A(a0)
		andi.w	#$7FFF,$A(a0)
		tst.w	$A(a2)
		bpl.s	loc_1820C
		ori.w	#-$8000,$A(a0)

loc_1820C:
		lea	(Ani_FireShield).l,a1
		jsr	(Animate_Sprite).l
		move.w	#$80,8(a0)
		cmpi.b	#$F,$22(a0)
		bcs.s	loc_1822C
		move.w	#$200,8(a0)

loc_1822C:
		bsr.w	PLCLoad_Shields
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_18236:
		rts
; ---------------------------------------------------------------------------

Obj_Fire_Shield_DestroyUnderwater:
		andi.b	#-$72,$2B(a2)
		jsr	(Create_New_Sprite).l
		bne.w	Obj_Fire_Shield_Destroy
		move.l	#Obj_FireShield_Dissipate,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)

Obj_Fire_Shield_Destroy:
		andi.b	#$8E,$2B(a2)
		move.l	#Obj_Insta_Shield,(a0)
		rts
; ---------------------------------------------------------------------------

Obj_Lightning_Shield:
		move.l	#ArtUnc_Obj_Lightning_Shield_Sparks,d1
		move.w	#tiles_to_bytes(ArtTile_Shield_Sparks),d2
		move.w	#$50,d3
		jsr	(Add_To_DMA_Queue).l
		move.l	#Map_LightningShield,$C(a0)
		move.l	#DPLC_LightningShield,$3C(a0)
		move.l	#ArtUnc_LightningShield,$38(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.w	#ArtTile_Shield,$A(a0)
		move.w	#tiles_to_bytes(ArtTile_Shield),$40(a0)
		btst	#7,(Player_1+art_tile).w
		beq.s	loc_182C6
		bset	#7,$A(a0)

loc_182C6:
		move.w	#1,$20(a0)
		move.b	#-1,$34(a0)
		move.l	#Obj_Lightning_Shield_Main,(a0)

Obj_Lightning_Shield_Main:
		movea.w	$42(a0),a2
		btst	#1,$2B(a2)
		bne.s	locret_1835E
		cmpi.b	#$1C,$20(a2)
		beq.s	locret_1835E
		btst	#0,$2B(a2)
		beq.w	Obj_Lightning_Shield_Destroy
		btst	#6,$2A(a2)
		bne.s	Obj_Lightning_Shield_DestroyUnderwater
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		move.b	$2A(a2),$2A(a0)
		andi.b	#1,$2A(a0)
		andi.w	#$7FFF,$A(a0)
		tst.w	$A(a2)
		bpl.s	loc_18328
		ori.w	#-$8000,$A(a0)

loc_18328:
		tst.b	$20(a0)
		beq.s	Obj_Lightning_Shield_Display
		bsr.s	Obj_Lightning_Shield_Create_Spark
		clr.b	$20(a0)

Obj_Lightning_Shield_Display:
		lea	(Ani_LightningShield).l,a1
		jsr	(Animate_Sprite).l
		move.w	#$80,8(a0)
		cmpi.b	#$E,$22(a0)
		bcs.s	loc_18354
		move.w	#$200,8(a0)

loc_18354:
		bsr.w	PLCLoad_Shields
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_1835E:
		rts
; ---------------------------------------------------------------------------

Obj_Lightning_Shield_DestroyUnderwater:
		tst.w	(Palette_fade_timer).w
		bne.s	Obj_Lightning_Shield_Destroy
		andi.b	#$8E,$2B(a2)
		lea	(Water_palette).w,a1
		lea	(Target_water_palette).w,a2
		move.w	#$1F,d0

loc_18378:
		move.l	(a1),(a2)+
		move.l	#$0EEE0EEE,(a1)+
		dbf	d0,loc_18378
		move.w	#0,(Water_palette_line_3).w
		move.b	#3,$24(a0)
		move.l	#Obj_Lightning_Shield_DestroyUnderwater2,(a0)
		rts
; ---------------------------------------------------------------------------

Obj_Lightning_Shield_Destroy:
		andi.b	#-$72,$2B(a2)
		move.l	#Obj_Insta_Shield,(a0)
		rts

; =============== S U B R O U T I N E =======================================


Obj_Lightning_Shield_Create_Spark:
		lea	(SparkVelocities).l,a2
		moveq	#3,d1

loc_183AE:
		bsr.w	Create_New_Sprite
		bne.s	locret_183FC
		move.l	#Obj_Lightning_Shield_Spark,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		move.b	#4,4(a1)
		move.w	#$80,8(a1)
		move.b	#8,7(a1)
		move.b	#8,6(a1)
		move.b	#1,$20(a1)
		move.w	(a2)+,$18(a1)
		move.w	(a2)+,$1A(a1)
		dbf	d1,loc_183AE

locret_183FC:
		rts
; End of function Obj_Lightning_Shield_Create_Spark

; ---------------------------------------------------------------------------
SparkVelocities:dc.w  -$200, -$200
		dc.w   $200, -$200
		dc.w  -$200,  $200
		dc.w   $200,  $200
; ---------------------------------------------------------------------------

Obj_Lightning_Shield_Spark:
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		lea	(Ani_LightningShield).l,a1
		jsr	(Animate_Sprite).l
		tst.b	5(a0)
		bne.s	Obj_Lightning_Shield_Spark_Delete
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_Lightning_Shield_Spark_Delete:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_Lightning_Shield_DestroyUnderwater2:
		subq.b	#1,$24(a0)
		bpl.s	locret_18456
		lea	(Target_water_palette).w,a1
		lea	(Water_palette).w,a2
		move.w	#$1F,d0

loc_1844A:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_1844A
		move.l	#Obj_Insta_Shield,(a0)

locret_18456:
		rts
; ---------------------------------------------------------------------------

Obj_Bubble_Shield:
		move.l	#Map_BubbleShield,$C(a0)
		move.l	#DPLC_BubbleShield,$3C(a0)
		move.l	#ArtUnc_BubbleShield,$38(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.w	#ArtTile_Shield,$A(a0)
		move.w	#tiles_to_bytes(ArtTile_Shield),$40(a0)
		btst	#7,(Player_1+art_tile).w
		beq.s	loc_184A2
		bset	#7,$A(a0)

loc_184A2:
		move.w	#1,$20(a0)
		move.b	#-1,$34(a0)
		movea.w	$42(a0),a1
		bsr.w	Player_ResetAirTimer
		move.l	#Obj_Bubble_Shield_Main,(a0)

Obj_Bubble_Shield_Main:
		movea.w	$42(a0),a2
		btst	#1,$2B(a2)
		bne.s	locret_18518
		cmpi.b	#$1C,$20(a2)
		beq.s	locret_18518
		btst	#0,$2B(a2)
		beq.s	Obj_Bubble_Shield_Destroy
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		move.b	$2A(a2),$2A(a0)
		andi.b	#1,$2A(a0)
		andi.w	#$7FFF,$A(a0)
		tst.w	$A(a2)
		bpl.s	loc_18502
		ori.w	#$8000,$A(a0)

loc_18502:
		lea	(Ani_BubbleShield).l,a1
		jsr	(Animate_Sprite).l
		bsr.w	PLCLoad_Shields
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_18518:
		rts
; ---------------------------------------------------------------------------

Obj_Bubble_Shield_Destroy:
		andi.b	#$8E,$2B(a2)
		move.l	#Obj_Insta_Shield,(a0)
		rts

; =============== S U B R O U T I N E =======================================


PLCLoad_Shields:
		moveq	#0,d0
		move.b	$22(a0),d0
		cmp.b	$34(a0),d0
		beq.s	locret_18576
		move.b	d0,$34(a0)
		movea.l	$3C(a0),a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_18576
		move.w	$40(a0),d4

PLCLoad_Shields_ReadEntry:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		add.l	$38(a0),d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,PLCLoad_Shields_ReadEntry

locret_18576:
		rts
; End of function PLCLoad_Shields

; ---------------------------------------------------------------------------
Ani_InstaShield:
		include "General/Sprites/Shields/Anim - Insta-Shield.asm"
Ani_FireShield:
		include "General/Sprites/Shields/Anim - Fire Shield.asm"
Ani_LightningShield:
		include "General/Sprites/Shields/Anim - Lightning Shield S3.asm"
Ani_BubbleShield:
		include "General/Sprites/Shields/Anim - Bubble Shield.asm"
Map_FireShield:
		include "General/Sprites/Shields/Map - Fire Shield.asm"
DPLC_FireShield:
		include "General/Sprites/Shields/DPLC - Fire Shield.asm"
Map_LightningShield:
		include "General/Sprites/Shields/Map - Lightning Shield.asm"
DPLC_LightningShield:
		include "General/Sprites/Shields/DPLC - Lightning Shield.asm"
Map_BubbleShield:
		include "General/Sprites/Shields/Map - Bubble Shield.asm"
DPLC_BubbleShield:
		include "General/Sprites/Shields/DPLC - Bubble Shield.asm"
Map_InstaShield:
		include "General/Sprites/Shields/Map - Insta-Shield.asm"
DPLC_InstaShield:
		include "General/Sprites/Shields/DPLC - Insta-Shield.asm"
; ---------------------------------------------------------------------------

Obj_Ring:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	Ring_Index(pc,d0.w),d1
		jmp	Ring_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Ring_Index:	dc.w Obj_RingInit-Ring_Index
		dc.w Obj_RingAnimate-Ring_Index
		dc.w Obj_RingCollect-Ring_Index
		dc.w Obj_RingSparkle-Ring_Index
		dc.w Obj_RingDelete-Ring_Index
; ---------------------------------------------------------------------------

Obj_RingInit:
		addq.b	#2,5(a0)
		move.l	#Map_Ring,$C(a0)
		move.w	#make_art_tile(ArtTile_Ring,1,1),$A(a0)
		move.b	#4,4(a0)
		move.w	#$100,8(a0)
		move.b	#$47,$28(a0)
		move.b	#8,7(a0)
		tst.w	(Competition_mode).w
		beq.s	Obj_RingAnimate
		move.w	#$63D2,$A(a0)

Obj_RingAnimate:
		move.b	(Rings_frame).w,$22(a0)
		bra.w	loc_19CC4
; ---------------------------------------------------------------------------

Obj_RingCollect:
		addq.b	#2,5(a0)
		move.b	#0,$28(a0)
		move.w	#$80,8(a0)
		bsr.s	GiveRing

Obj_RingSparkle:
		lea	(Ani_RingSparkle).l,a1
		bsr.w	Animate_Sprite
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

Obj_RingDelete:
		bra.w	Delete_Current_Sprite

; =============== S U B R O U T I N E =======================================


GiveRing:
		cmpi.w	#999,(Total_ring_count).w
		bcc.s	GiveRing_1P
		addq.w	#1,(Total_ring_count).w

GiveRing_1P:
		move.w	#sfx_RingRight,d0
		cmpi.w	#$3E7,(Ring_count).w
		bcc.s	JmpTo_Play_Sound_2
		addq.w	#1,(Ring_count).w
		ori.b	#1,(Update_HUD_ring_count).w
		cmpi.w	#100,(Ring_count).w
		bcs.s	JmpTo_Play_Sound_2
		bset	#1,(Extra_life_flags).w
		beq.s	loc_18DB4
		cmpi.w	#200,(Ring_count).w
		bcs.s	JmpTo_Play_Sound_2
		bset	#2,(Extra_life_flags).w
		bne.s	JmpTo_Play_Sound_2

loc_18DB4:
		addq.b	#1,(Life_count).w
		addq.b	#1,(Update_HUD_life_count).w
		moveq	#signextendB(mus_ExtraLife),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

JmpTo_Play_Sound_2:
		jmp	(Play_Sound_2).l
; End of function GiveRing

; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------

loc_18DCC:
		cmpi.w	#999,(Total_ring_count_P2).w
		bcc.s	loc_18DD8
		addq.w	#1,(Total_ring_count_P2).w

loc_18DD8:
		cmpi.w	#999,(Ring_count_P2).w
		bcc.s	loc_18DE4
		addq.w	#1,(Ring_count_P2).w

loc_18DE4:
		tst.w	(Competition_mode).w
		beq.s	GiveRing_1P
		ori.b	#1,(_unkFEBE).w
		move.w	#sfx_RingRight,d0
		cmpi.w	#100,(Ring_count_P2).w
		bcs.s	loc_18E20
		bset	#1,(Extra_life_flags_P2).w
		beq.s	loc_18E14
		cmpi.w	#200,(Ring_count_P2).w
		bcs.s	loc_18E20
		bset	#2,(Extra_life_flags_P2).w
		bne.s	loc_18E20

loc_18E14:
		addq.b	#1,(Life_count_P2).w
		moveq	#signextendB(mus_ExtraLife),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

loc_18E20:
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

Obj_Bouncing_Ring:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_18E34(pc,d0.w),d1
		jmp	off_18E34(pc,d1.w)
; ---------------------------------------------------------------------------
off_18E34:	dc.w loc_18E3E-off_18E34
		dc.w loc_18F0A-off_18E34
		dc.w loc_18F6E-off_18E34
		dc.w loc_18F82-off_18E34
		dc.w loc_18F90-off_18E34
; ---------------------------------------------------------------------------

loc_18E3E:
		movea.l	a0,a1
		moveq	#0,d5
		move.w	(Ring_count).w,d5
		tst.b	$3F(a0)
		beq.s	loc_18E50
		move.w	(Ring_count_P2).w,d5

loc_18E50:
		moveq	#$20,d0
		cmp.w	d0,d5
		bcs.s	loc_18E58
		move.w	d0,d5

loc_18E58:
		subq.w	#1,d5
		move.w	#$288,d4
		bra.s	loc_18E68
; ---------------------------------------------------------------------------

loc_18E60:
		bsr.w	Create_New_Sprite3
		bne.w	loc_18EEE

loc_18E68:
		move.l	#Obj_Bouncing_Ring,(a1)
		addq.b	#2,5(a1)
		move.b	#8,$1E(a1)
		move.b	#8,$1F(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	#Map_Ring,$C(a1)
		move.w	#make_art_tile(ArtTile_Ring,1,1),$A(a1)
		move.b	#$84,4(a1)
		move.w	#$180,8(a1)
		move.b	#$47,$28(a1)
		move.b	#8,7(a1)
		move.b	#-1,(Ring_spill_anim_counter).w
		tst.w	d4
		bmi.s	loc_18EDE
		move.w	d4,d0
		jsr	(GetSineCosine).l
		move.w	d4,d2
		lsr.w	#8,d2
		asl.w	d2,d0
		asl.w	d2,d1
		move.w	d0,d2
		move.w	d1,d3
		addi.b	#$10,d4
		bcc.s	loc_18EDE
		subi.w	#$80,d4
		bcc.s	loc_18EDE
		move.w	#$288,d4

loc_18EDE:
		move.w	d2,$18(a1)
		move.w	d3,$1A(a1)
		neg.w	d2
		neg.w	d4
		dbf	d5,loc_18E60

loc_18EEE:
		move.w	#$FF00|sfx_RingLoss,d0
		jsr	(Play_Sound_2).l
		move.w	#0,(Ring_count).w
		move.b	#$80,(Update_HUD_ring_count).w
		move.b	#0,(Extra_life_flags).w

loc_18F0A:
		move.b	(Ring_spill_anim_frame).w,$22(a0)
		bsr.w	MoveSprite2
		addi.w	#$18,$1A(a0)
		bmi.s	loc_18F4A
		move.b	(V_int_run_count+3).w,d0
		add.b	d7,d0
		andi.b	#7,d0
		bne.s	loc_18F4A
		tst.b	4(a0)
		bpl.s	loc_18F4A
		jsr	(RingCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_18F4A
		add.w	d1,$14(a0)
		move.w	$1A(a0),d0
		asr.w	#2,d0
		sub.w	d0,$1A(a0)
		neg.w	$1A(a0)

loc_18F4A:
		tst.b	(Ring_spill_anim_counter).w
		beq.s	loc_18F90
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$E0,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_18F90
		bsr.w	Add_SpriteToCollisionResponseList
		move.w	(Level_repeat_offset).w,d0
		sub.w	d0,$10(a0)
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_18F6E:
		addq.b	#2,5(a0)
		move.b	#0,$28(a0)
		move.w	#$80,8(a0)
		bsr.w	GiveRing

loc_18F82:
		lea	(Ani_RingSparkle).l,a1
		bsr.w	Animate_Sprite
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_18F90:
		bra.w	Delete_Current_Sprite
; ---------------------------------------------------------------------------

Obj_Attracted_Ring:
		move.l	#Map_Ring,$C(a0)
		move.w	#make_art_tile(ArtTile_Ring,1,1),$A(a0)
		move.b	#4,4(a0)
		move.w	#$100,8(a0)
		move.b	#$47,$28(a0)
		move.b	#8,7(a0)
		move.b	#8,6(a0)
		move.b	#8,$1E(a0)
		move.b	#8,$1F(a0)
		move.l	#loc_18FD2,(a0)

loc_18FD2:
		tst.b	5(a0)
		bne.s	AttractedRing_GiveRing
		bsr.w	AttractedRing_Move
		btst	#5,(Player_1+status_secondary).w
		bne.s	Obj_Attracted_RingAnimate
		move.l	#Obj_Bouncing_Ring,(a0)
		move.b	#2,5(a0)
		move.b	#-1,(Ring_spill_anim_counter).w

Obj_Attracted_RingAnimate:
		subq.b	#1,$24(a0)
		bpl.s	loc_1900C
		move.b	#3,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#3,$22(a0)

loc_1900C:
		move.w	$10(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_19028
		bsr.w	Add_SpriteToCollisionResponseList
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_19028:
		move.w	$48(a0),d0
		beq.s	loc_19034
		movea.w	d0,a2
		bclr	#7,(a2)

loc_19034:
		; Bug: probably meant to be $30(a0), as Test_Ring_Collisions_AttractRing
		; stores the ring's address in the ring status table there
		move.w	$30,d0
		beq.s	loc_19040
		movea.w	d0,a2
		move.w	#0,(a2)

loc_19040:
		bra.w	Delete_Current_Sprite
; ---------------------------------------------------------------------------

AttractedRing_GiveRing:
		move.b	#0,$28(a0)
		move.w	#$80,8(a0)
		subq.w	#1,(Perfect_rings_left).w
		bsr.w	GiveRing
		move.l	#loc_19064,(a0)
		move.b	#0,5(a0)

loc_19064:
		tst.b	5(a0)
		bne.s	loc_19078
		lea	(Ani_RingSparkle).l,a1
		bsr.w	Animate_Sprite
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_19078:
		bra.w	Delete_Current_Sprite

; =============== S U B R O U T I N E =======================================


AttractedRing_Move:
		move.w	#$30,d1
		move.w	(Player_1+x_pos).w,d0
		cmp.w	$10(a0),d0
		bcc.s	AttractedRing_MoveRight
		neg.w	d1
		tst.w	$18(a0)
		bmi.s	AttractedRing_ApplyMovementX
		add.w	d1,d1
		add.w	d1,d1
		bra.s	AttractedRing_ApplyMovementX
; ---------------------------------------------------------------------------

AttractedRing_MoveRight:
		tst.w	$18(a0)
		bpl.s	AttractedRing_ApplyMovementX
		add.w	d1,d1
		add.w	d1,d1

AttractedRing_ApplyMovementX:
		add.w	d1,$18(a0)
		move.w	#$30,d1
		move.w	(Player_1+y_pos).w,d0
		cmp.w	$14(a0),d0
		bcc.s	AttractedRing_MoveUp
		neg.w	d1
		tst.w	$1A(a0)
		bmi.s	AttractedRing_ApplyMovementY
		add.w	d1,d1
		add.w	d1,d1
		bra.s	AttractedRing_ApplyMovementY
; ---------------------------------------------------------------------------

AttractedRing_MoveUp:
		tst.w	$1A(a0)
		bpl.s	AttractedRing_ApplyMovementY
		add.w	d1,d1
		add.w	d1,d1

AttractedRing_ApplyMovementY:
		add.w	d1,$1A(a0)
		jmp	(MoveSprite2).l
; End of function AttractedRing_Move

; ---------------------------------------------------------------------------
Ani_RingSparkle:include "General/Sprites/Ring/Anim - Ring Sparkle.asm"
Map_Ring:	include "General/Sprites/Ring/Map - Ring.asm"

; =============== S U B R O U T I N E =======================================


Init_SpriteTable:
		clr.w	(Spritemask_flag).w
		clr.l	(Use_normal_sprite_table).w
		tst.w	(Competition_mode).w
		beq.s	loc_19162
		lea	(Sprite_table_buffer).w,a0
		bsr.s	Init_SpriteTable2
		bsr.s	Init_SpriteTable_2Player
		lea	(Sprite_table_buffer_2).l,a0
		bsr.s	Init_SpriteTable2
		bsr.s	Init_SpriteTable_2Player
		lea	(Sprite_table_buffer_P2).l,a0
		bsr.s	Init_SpriteTable2
		lea	(Sprite_table_buffer_P2_2).l,a0
		bra.s	Init_SpriteTable2
; ---------------------------------------------------------------------------

loc_19162:
		lea	(Sprite_table_buffer).w,a0
; End of function Init_SpriteTable


; =============== S U B R O U T I N E =======================================


Init_SpriteTable2:
		moveq	#0,d0
		moveq	#1,d1
		moveq	#$4F,d7

loc_1916C:
		move.w	d0,(a0)
		move.b	d1,3(a0)
		addq.w	#1,d1
		addq.w	#8,a0
		dbf	d7,loc_1916C
		move.b	d0,-5(a0)
		rts
; End of function Init_SpriteTable2


; =============== S U B R O U T I N E =======================================


Init_SpriteTable_2Player:
		lea	-$280(a0),a0
		move.l	#$EB0301,(a0)+
		move.l	#1,(a0)+
		move.l	#$EB0302,(a0)+
		move.l	#0,(a0)
		rts
; End of function Init_SpriteTable_2Player


; =============== S U B R O U T I N E =======================================


Process_Sprites:
		tst.b	(Teleport_active_flag).w
		bne.s	locret_191D0
		lea	(Object_RAM).w,a0
		tst.w	(Competition_mode).w
		bne.s	loc_191BE
		cmpi.b	#$C,(Player_1+routine).w
		beq.s	loc_191BE
		cmpi.b	#6,(Player_1+routine).w
		bcc.s	loc_191D2

loc_191BE:
		moveq	#(Object_RAM_end-Object_RAM)/object_size-1,d7
; End of function Process_Sprites


; =============== S U B R O U T I N E =======================================


sub_191C0:
		move.l	(a0),d0
		beq.s	loc_191C8
		movea.l	d0,a1
		jsr	(a1)

loc_191C8:
		lea	next_object(a0),a0
		dbf	d7,sub_191C0

locret_191D0:
		rts
; End of function sub_191C0

; ---------------------------------------------------------------------------

loc_191D2:	; this is broken?
		moveq	#((Dynamic_object_RAM+object_size)-Object_RAM)/object_size-1,d7
		bsr.s	sub_191C0
		moveq	#((Level_object_RAM+object_size)-(Dynamic_object_RAM+object_size))/object_size-1,d7
		bsr.s	sub_191DE
		moveq	#(Object_RAM_end-(Level_object_RAM+object_size))/object_size-1,d7
		bra.s	sub_191C0

; =============== S U B R O U T I N E =======================================


sub_191DE:
		move.l	(a0),d0
		beq.s	loc_191EC
		tst.b	render_flags(a0)
		bpl.s	loc_191EC
		jsr	Draw_Sprite(pc)

loc_191EC:
		lea	next_object(a0),a0
		dbf	d7,sub_191DE
		rts
; End of function sub_191DE


; =============== S U B R O U T I N E =======================================


MoveSprite:
		move.w	$18(a0),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$10(a0)
		move.w	$1A(a0),d0
		addi.w	#$38,$1A(a0)
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$14(a0)
		rts
; End of function MoveSprite


; =============== S U B R O U T I N E =======================================


MoveSprite2:
		move.w	$18(a0),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$10(a0)
		move.w	$1A(a0),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$14(a0)
		rts
; End of function MoveSprite2


; =============== S U B R O U T I N E =======================================


Delete_Current_Sprite:
		movea.l	a0,a1
; End of function Delete_Current_Sprite


; =============== S U B R O U T I N E =======================================


Delete_Referenced_Sprite:
		moveq	#$11,d0
		moveq	#0,d1

loc_19236:
		move.l	d1,(a1)+
		dbf	d0,loc_19236
		move.w	d1,(a1)+
		rts
; End of function Delete_Referenced_Sprite


; =============== S U B R O U T I N E =======================================


Draw_Sprite:
		lea	(Sprite_table_input).w,a1
		adda.w	8(a0),a1
		cmpi.w	#$7E,(a1)
		bcc.s	locret_19254
		addq.w	#2,(a1)
		adda.w	(a1),a1
		move.w	a0,(a1)

locret_19254:
		rts
; End of function Draw_Sprite


; =============== S U B R O U T I N E =======================================


Animate_Sprite:
		moveq	#0,d0
		move.b	$20(a0),d0
		cmp.b	$21(a0),d0
		beq.s	loc_1926E
		move.b	d0,$21(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)

loc_1926E:
		subq.b	#1,$24(a0)
		bcc.s	locret_192A4
		add.w	d0,d0
		adda.w	(a1,d0.w),a1
		move.b	(a1),$24(a0)
		moveq	#0,d1
		move.b	$23(a0),d1
		move.b	1(a1,d1.w),d0
		bmi.s	loc_192A6

loc_1928A:
		move.b	d0,$22(a0)
		move.b	$2A(a0),d1
		andi.b	#3,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		addq.b	#1,$23(a0)

locret_192A4:
		rts
; ---------------------------------------------------------------------------

loc_192A6:
		addq.b	#1,d0
		bne.s	loc_192B6
		move.b	#0,$23(a0)
		move.b	1(a1),d0
		bra.s	loc_1928A
; ---------------------------------------------------------------------------

loc_192B6:
		addq.b	#1,d0
		bne.s	loc_192CA
		move.b	2(a1,d1.w),d0
		sub.b	d0,$23(a0)
		sub.b	d0,d1
		move.b	1(a1,d1.w),d0
		bra.s	loc_1928A
; ---------------------------------------------------------------------------

loc_192CA:
		addq.b	#1,d0
		bne.s	loc_192D6
		move.b	2(a1,d1.w),$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_192D6:
		addq.b	#1,d0
		bne.s	loc_192E8
		addq.b	#2,5(a0)
		clr.b	$24(a0)
		addq.b	#1,$23(a0)
		rts
; ---------------------------------------------------------------------------

loc_192E8:
		addq.b	#1,d0
		bne.s	locret_192F4
		move.w	#$7F00,$10(a0)
		rts
; ---------------------------------------------------------------------------

locret_192F4:
		rts
; End of function Animate_Sprite


; =============== S U B R O U T I N E =======================================


Animate_SpriteIrregularDelay:
		moveq	#0,d0
		move.b	$20(a0),d0
		cmp.b	$21(a0),d0
		beq.s	loc_1930E
		move.b	d0,$21(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)

loc_1930E:
		subq.b	#1,$24(a0)
		bcc.s	locret_19348
		add.w	d0,d0
		adda.w	(a1,d0.w),a1
		moveq	#0,d1
		move.b	$23(a0),d1
		add.w	d1,d1
		move.b	(a1,d1.w),d0
		bmi.s	loc_1934A

loc_19328:
		move.b	1(a1,d1.w),$24(a0)
		move.b	d0,$22(a0)
		move.b	$2A(a0),d1
		andi.b	#3,d1
		andi.b	#-4,4(a0)
		or.b	d1,4(a0)
		addq.b	#1,$23(a0)

locret_19348:
		rts
; ---------------------------------------------------------------------------

loc_1934A:
		addq.b	#1,d0
		bne.s	loc_19358
		move.b	#0,$23(a0)
		move.b	(a1),d0
		bra.s	loc_19328
; ---------------------------------------------------------------------------

loc_19358:
		addq.b	#1,d0
		bne.s	loc_1936E
		move.b	1(a1,d1.w),d0
		sub.b	d0,$23(a0)
		add.w	d0,d0
		sub.b	d0,d1
		move.b	(a1,d1.w),d0
		bra.s	loc_19328
; ---------------------------------------------------------------------------

loc_1936E:
		addq.b	#1,d0
		bne.s	loc_1937A
		move.b	1(a1,d1.w),$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_1937A:
		addq.b	#1,d0
		bne.s	locret_1938C
		addq.b	#2,5(a0)
		clr.b	$24(a0)
		addq.b	#1,$23(a0)
		rts
; ---------------------------------------------------------------------------

locret_1938C:
		rts
; End of function Animate_SpriteIrregularDelay


; =============== S U B R O U T I N E =======================================


Render_Sprites:
		tst.w	(Competition_mode).w
		bne.w	Render_Sprites_CompetitionMode
		moveq	#$4F,d7
		moveq	#0,d6
		lea	(Sprite_table_input).w,a5
		lea	(Camera_X_pos_copy).w,a3
		lea	(Sprite_table_buffer).w,a6
		tst.b	(Level_started_flag).w
		beq.s	loc_193B8
		jsr	(sub_E8C8).l
		jsr	(sub_F816).l

loc_193B8:
		tst.w	(a5)
		beq.w	Render_Sprites_NextLevel
		lea	2(a5),a4

loc_193C2:
		movea.w	(a4)+,a0
		andi.b	#$7F,4(a0)
		move.b	4(a0),d6
		move.w	$10(a0),d0
		move.w	$14(a0),d1
		btst	#6,d6
		bne.w	loc_194BA
		btst	#2,d6
		beq.s	loc_19420
		moveq	#0,d2
		move.b	7(a0),d2
		sub.w	(a3),d0
		move.w	d0,d3
		add.w	d2,d3
		bmi.s	Render_Sprites_NextObj
		move.w	d0,d3
		sub.w	d2,d3
		cmpi.w	#$140,d3
		bge.s	Render_Sprites_NextObj
		addi.w	#$80,d0
		sub.w	4(a3),d1
		move.b	6(a0),d2
		add.w	d2,d1
		and.w	(Screen_Y_wrap_value).w,d1
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$E0,d2
		cmp.w	d2,d1
		bcc.s	Render_Sprites_NextObj
		addi.w	#$80,d1
		sub.w	d3,d1

loc_19420:
		ori.b	#$80,4(a0)
		tst.w	d7
		bmi.s	Render_Sprites_NextObj
		movea.l	$C(a0),a1
		moveq	#0,d4
		btst	#5,d6
		bne.s	loc_19446
		move.b	$22(a0),d4
		add.w	d4,d4
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	Render_Sprites_NextObj

loc_19446:
		move.w	$A(a0),d5
		jsr	sub_195CE(pc)

Render_Sprites_NextObj:
		subq.w	#2,(a5)
		bne.w	loc_193C2

Render_Sprites_NextLevel:
		cmpa.l	#Sprite_table_input,a5
		bne.s	loc_1946A
		cmpi.w	#$900,(Current_zone_and_act).w
		bne.s	loc_1946A
		jsr	(sub_1AF14).l

loc_1946A:
		lea	$80(a5),a5
		cmpa.l	#Player_1,a5
		bcs.w	loc_193B8
		move.w	d7,d6
		bmi.s	loc_19486
		moveq	#0,d0

loc_1947E:
		move.w	d0,(a6)
		addq.w	#8,a6
		dbf	d7,loc_1947E

loc_19486:
		subi.w	#$4F,d6
		neg.w	d6
		move.b	d6,(Sprites_drawn).w
		tst.w	(Spritemask_flag).w
		beq.s	locret_194B8
		clr.w	(Spritemask_flag).w
		lea	(Sprite_table_buffer-4).w,a0
		move.w	#$7C0,d0
		moveq	#$4F,d1

loc_194A4:
		addq.w	#8,a0
		cmp.w	(a0),d0
		dbeq	d1,loc_194A4
		bne.s	locret_194B8
		move.w	#1,2(a0)
		clr.w	$A(a0)

locret_194B8:
		rts
; ---------------------------------------------------------------------------

loc_194BA:
		btst	#2,d6
		bne.s	loc_19504
		moveq	#0,d2
		move.b	7(a0),d2
		subi.w	#$80,d0
		move.w	d0,d3
		add.w	d2,d3
		bmi.w	Render_Sprites_NextObj
		move.w	d0,d3
		sub.w	d2,d3
		cmpi.w	#$140,d3
		bge.w	Render_Sprites_NextObj
		addi.w	#$80,d0
		move.b	6(a0),d2
		subi.w	#$80,d1
		move.w	d1,d3
		add.w	d2,d3
		bmi.w	Render_Sprites_NextObj
		move.w	d1,d3
		sub.w	d2,d3
		cmpi.w	#$E0,d3
		bge.w	Render_Sprites_NextObj
		addi.w	#$80,d1
		bra.s	loc_19546
; ---------------------------------------------------------------------------

loc_19504:
		moveq	#0,d2
		move.b	7(a0),d2
		sub.w	(a3),d0
		move.w	d0,d3
		add.w	d2,d3
		bmi.w	Render_Sprites_NextObj
		move.w	d0,d3
		sub.w	d2,d3
		cmpi.w	#$140,d3
		bge.w	Render_Sprites_NextObj
		addi.w	#$80,d0
		sub.w	4(a3),d1
		move.b	6(a0),d2
		add.w	d2,d1
		and.w	(Screen_Y_wrap_value).w,d1
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$E0,d2
		cmp.w	d2,d1
		bcc.w	Render_Sprites_NextObj
		addi.w	#$80,d1
		sub.w	d3,d1

loc_19546:
		ori.b	#$80,4(a0)
		tst.w	d7
		bmi.w	Render_Sprites_NextObj
		move.w	$A(a0),d5
		movea.l	$C(a0),a2
		moveq	#0,d4
		move.b	$22(a0),d4
		beq.s	loc_1957E
		add.w	d4,d4
		lea	(a2),a1
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	loc_1957E
		move.w	d6,d3
		jsr	sub_196D2(pc)
		move.w	d3,d6
		tst.w	d7
		bmi.w	Render_Sprites_NextObj

loc_1957E:
		move.w	$16(a0),d3
		subq.w	#1,d3
		bcs.w	Render_Sprites_NextObj
		lea	$18(a0),a0

loc_1958C:
		move.w	(a0)+,d0
		move.w	(a0)+,d1
		btst	#2,d6
		beq.s	loc_195A8
		sub.w	(a3),d0
		addi.w	#$80,d0
		sub.w	4(a3),d1
		addi.w	#$80,d1
		and.w	(Screen_Y_wrap_value).w,d1

loc_195A8:
		addq.w	#1,a0
		moveq	#0,d4
		move.b	(a0)+,d4
		add.w	d4,d4
		lea	(a2),a1
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	loc_195C4
		move.w	d6,-(sp)
		jsr	sub_196D2(pc)
		move.w	(sp)+,d6

loc_195C4:
		tst.w	d7
		dbmi	d3,loc_1958C
		bra.w	Render_Sprites_NextObj
; End of function Render_Sprites


; =============== S U B R O U T I N E =======================================


sub_195CE:
		lsr.b	#1,d6
		bcs.s	loc_19600
		lsr.b	#1,d6
		bcs.w	loc_1969A

loc_195D8:
		move.b	(a1)+,d2
		ext.w	d2
		add.w	d1,d2
		move.w	d2,(a6)+
		move.b	(a1)+,(a6)+
		addq.w	#1,a6
		move.w	(a1)+,d2
		add.w	d5,d2
		move.w	d2,(a6)+
		move.w	(a1)+,d2
		add.w	d0,d2
		andi.w	#$1FF,d2
		bne.s	loc_195F6
		addq.w	#1,d2

loc_195F6:
		move.w	d2,(a6)+
		subq.w	#1,d7
		dbmi	d4,loc_195D8
		rts
; ---------------------------------------------------------------------------

loc_19600:
		lsr.b	#1,d6
		bcs.s	loc_1964A

loc_19604:
		move.b	(a1)+,d2
		ext.w	d2
		add.w	d1,d2
		move.w	d2,(a6)+
		move.b	(a1)+,d6
		move.b	d6,(a6)+
		addq.w	#1,a6
		move.w	(a1)+,d2
		add.w	d5,d2
		eori.w	#$800,d2
		move.w	d2,(a6)+
		move.w	(a1)+,d2
		neg.w	d2
		move.b	byte_1963A(pc,d6.w),d6
		sub.w	d6,d2
		add.w	d0,d2
		andi.w	#$1FF,d2
		bne.s	loc_19630
		addq.w	#1,d2

loc_19630:
		move.w	d2,(a6)+
		subq.w	#1,d7
		dbmi	d4,loc_19604
		rts
; ---------------------------------------------------------------------------
byte_1963A:	dc.b 8
		dc.b 8
		dc.b 8
		dc.b 8
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $18
		dc.b $18
		dc.b $18
		dc.b $18
		dc.b $20
		dc.b $20
		dc.b $20
		dc.b $20
; ---------------------------------------------------------------------------

loc_1964A:
		move.b	(a1)+,d2
		ext.w	d2
		neg.w	d2
		move.b	(a1),d6
		move.b	byte_1968A(pc,d6.w),d6
		sub.w	d6,d2
		add.w	d1,d2
		move.w	d2,(a6)+
		move.b	(a1)+,d6
		move.b	d6,(a6)+
		addq.w	#1,a6
		move.w	(a1)+,d2
		add.w	d5,d2
		eori.w	#$1800,d2
		move.w	d2,(a6)+
		move.w	(a1)+,d2
		neg.w	d2
		move.b	byte_1963A(pc,d6.w),d6
		sub.w	d6,d2
		add.w	d0,d2
		andi.w	#$1FF,d2
		bne.s	loc_19680
		addq.w	#1,d2

loc_19680:
		move.w	d2,(a6)+
		subq.w	#1,d7
		dbmi	d4,loc_1964A
		rts
; ---------------------------------------------------------------------------
byte_1968A:	dc.b 8
		dc.b $10
		dc.b $18
		dc.b $20
		dc.b 8
		dc.b $10
		dc.b $18
		dc.b $20
		dc.b 8
		dc.b $10
		dc.b $18
		dc.b $20
		dc.b 8
		dc.b $10
		dc.b $18
		dc.b $20
; ---------------------------------------------------------------------------

loc_1969A:
		move.b	(a1)+,d2
		ext.w	d2
		neg.w	d2
		move.b	(a1)+,d6
		move.b	d6,2(a6)
		move.b	byte_1968A(pc,d6.w),d6
		sub.w	d6,d2
		add.w	d1,d2
		move.w	d2,(a6)+
		addq.w	#2,a6
		move.w	(a1)+,d2
		add.w	d5,d2
		eori.w	#$1000,d2
		move.w	d2,(a6)+
		move.w	(a1)+,d2
		add.w	d0,d2
		andi.w	#$1FF,d2
		bne.s	loc_196C8
		addq.w	#1,d2

loc_196C8:
		move.w	d2,(a6)+
		subq.w	#1,d7
		dbmi	d4,loc_1969A
		rts
; End of function sub_195CE


; =============== S U B R O U T I N E =======================================


sub_196D2:
		lsr.b	#1,d6
		bcs.s	loc_19724
		lsr.b	#1,d6
		bcs.w	loc_197FE

loc_196DC:
		move.b	(a1)+,d2
		ext.w	d2
		add.w	d1,d2
		cmpi.w	#$60,d2
		bls.s	loc_1971C
		cmpi.w	#$160,d2
		bcc.s	loc_1971C
		move.w	d2,(a6)+
		move.b	(a1)+,(a6)+
		addq.w	#1,a6
		move.w	(a1)+,d2
		add.w	d5,d2
		move.w	d2,(a6)+
		move.w	(a1)+,d2
		add.w	d0,d2
		cmpi.w	#$60,d2
		bls.s	loc_19714
		cmpi.w	#$1C0,d2
		bcc.s	loc_19714
		move.w	d2,(a6)+
		subq.w	#1,d7
		dbmi	d4,loc_196DC
		rts
; ---------------------------------------------------------------------------

loc_19714:
		subq.w	#6,a6
		dbf	d4,loc_196DC
		rts
; ---------------------------------------------------------------------------

loc_1971C:
		addq.w	#5,a1
		dbf	d4,loc_196DC
		rts
; ---------------------------------------------------------------------------

loc_19724:
		lsr.b	#1,d6
		bcs.s	loc_1978E

loc_19728:
		move.b	(a1)+,d2
		ext.w	d2
		add.w	d1,d2
		cmpi.w	#$60,d2
		bls.s	loc_19776
		cmpi.w	#$160,d2
		bcc.s	loc_19776
		move.w	d2,(a6)+
		move.b	(a1)+,d6
		move.b	d6,(a6)+
		addq.w	#1,a6
		move.w	(a1)+,d2
		add.w	d5,d2
		eori.w	#$800,d2
		move.w	d2,(a6)+
		move.w	(a1)+,d2
		neg.w	d2
		move.b	byte_1977E(pc,d6.w),d6
		sub.w	d6,d2
		add.w	d0,d2
		cmpi.w	#$60,d2
		bls.s	loc_1976E
		cmpi.w	#$1C0,d2
		bcc.s	loc_1976E
		move.w	d2,(a6)+
		subq.w	#1,d7
		dbmi	d4,loc_19728
		rts
; ---------------------------------------------------------------------------

loc_1976E:
		subq.w	#6,a6
		dbf	d4,loc_19728
		rts
; ---------------------------------------------------------------------------

loc_19776:
		addq.w	#5,a1
		dbf	d4,loc_19728
		rts
; ---------------------------------------------------------------------------
byte_1977E:	dc.b 8
		dc.b 8
		dc.b 8
		dc.b 8
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $18
		dc.b $18
		dc.b $18
		dc.b $18
		dc.b $20
		dc.b $20
		dc.b $20
		dc.b $20
; ---------------------------------------------------------------------------

loc_1978E:
		move.b	(a1)+,d2
		ext.w	d2
		neg.w	d2
		move.b	(a1),d6
		move.b	byte_197EE(pc,d6.w),d6
		sub.w	d6,d2
		add.w	d1,d2
		cmpi.w	#$60,d2
		bls.s	loc_197E6
		cmpi.w	#$160,d2
		bcc.s	loc_197E6
		move.w	d2,(a6)+
		move.b	(a1)+,d6
		move.b	d6,(a6)+
		addq.w	#1,a6
		move.w	(a1)+,d2
		add.w	d5,d2
		eori.w	#$1800,d2
		move.w	d2,(a6)+
		move.w	(a1)+,d2
		neg.w	d2
		move.b	byte_1977E(pc,d6.w),d6
		sub.w	d6,d2
		add.w	d0,d2
		cmpi.w	#$60,d2
		bls.s	loc_197DE
		cmpi.w	#$1C0,d2
		bcc.s	loc_197DE
		move.w	d2,(a6)+
		subq.w	#1,d7
		dbmi	d4,loc_1978E
		rts
; ---------------------------------------------------------------------------

loc_197DE:
		subq.w	#6,a6
		dbf	d4,loc_1978E
		rts
; ---------------------------------------------------------------------------

loc_197E6:
		addq.w	#5,a1
		dbf	d4,loc_1978E
		rts
; ---------------------------------------------------------------------------
byte_197EE:	dc.b 8
		dc.b $10
		dc.b $18
		dc.b $20
		dc.b 8
		dc.b $10
		dc.b $18
		dc.b $20
		dc.b 8
		dc.b $10
		dc.b $18
		dc.b $20
		dc.b 8
		dc.b $10
		dc.b $18
		dc.b $20
; ---------------------------------------------------------------------------

loc_197FE:
		move.b	(a1)+,d2
		ext.w	d2
		neg.w	d2
		move.b	(a1)+,d6
		move.b	d6,2(a6)
		move.b	byte_197EE(pc,d6.w),d6
		sub.w	d6,d2
		add.w	d1,d2
		cmpi.w	#$60,d2
		bls.s	loc_1984E
		cmpi.w	#$160,d2
		bcc.s	loc_1984E
		move.w	d2,(a6)+
		addq.w	#2,a6
		move.w	(a1)+,d2
		add.w	d5,d2
		eori.w	#$1000,d2
		move.w	d2,(a6)+
		move.w	(a1)+,d2
		add.w	d0,d2
		cmpi.w	#$60,d2
		bls.s	loc_19846
		cmpi.w	#$1C0,d2
		bcc.s	loc_19846
		move.w	d2,(a6)+
		subq.w	#1,d7
		dbmi	d4,loc_197FE
		rts
; ---------------------------------------------------------------------------

loc_19846:
		subq.w	#6,a6
		dbf	d4,loc_197FE
		rts
; ---------------------------------------------------------------------------

loc_1984E:
		addq.w	#4,a1
		dbf	d4,loc_197FE
		rts
; End of function sub_196D2

; ---------------------------------------------------------------------------

Render_Sprites_CompetitionMode:
		moveq	#$4D,d7
		moveq	#0,d6
		lea	(Sprite_table_input).w,a5
		lea	(Camera_X_pos_copy).w,a3
		lea	(Sprite_table_buffer+$10).w,a6
		tst.w	(Use_normal_sprite_table).w
		beq.s	loc_19872
		lea	(Sprite_table_buffer_2+$10).l,a6

loc_19872:
		tst.b	(Level_started_flag).w
		beq.s	loc_1987E
		jsr	(sub_E8C0).l

loc_1987E:
		move.b	1(a5),(a5)
		beq.w	loc_1992A
		lea	2(a5),a4

loc_1988A:
		movea.w	(a4)+,a0
		andi.b	#$7F,4(a0)
		move.b	4(a0),d6
		btst	#4,d6
		bne.w	loc_19924
		move.w	$10(a0),d0
		move.w	$14(a0),d1
		btst	#6,d6
		bne.w	loc_19A4E
		btst	#2,d6
		beq.s	loc_198F6
		moveq	#0,d2
		sub.w	(a3),d0
		move.b	7(a0),d2
		add.w	d2,d0
		and.w	(Screen_X_wrap_value).w,d0
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$140,d2
		cmp.w	d2,d0
		bcc.s	loc_19924
		addi.w	#$80,d0
		sub.w	d3,d0
		moveq	#0,d2
		sub.w	4(a3),d1
		move.b	6(a0),d2
		add.w	d2,d1
		and.w	(Screen_Y_wrap_value).w,d1
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$70,d2
		cmp.w	d2,d1
		bcc.s	loc_19924
		addi.w	#$80,d1
		sub.w	d3,d1

loc_198F6:
		ori.b	#$80,4(a0)
		tst.w	d7
		bmi.s	loc_19924
		movea.l	$C(a0),a1
		moveq	#0,d4
		btst	#5,d6
		bne.s	loc_1991C
		move.b	$22(a0),d4
		add.w	d4,d4
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	loc_19924

loc_1991C:
		move.w	$A(a0),d5
		jsr	sub_195CE(pc)

loc_19924:
		subq.b	#2,(a5)
		bne.w	loc_1988A

loc_1992A:
		lea	$80(a5),a5
		cmpa.l	#Player_1,a5
		bcs.w	loc_1987E
		tst.w	d7
		bmi.s	loc_19946
		moveq	#0,d0

loc_1993E:
		move.w	d0,(a6)
		addq.w	#8,a6
		dbf	d7,loc_1993E

loc_19946:
		move.l	(Sprite_table_input+2+($80*2)).w,d0
		cmpi.l	#((Player_1&$FFFF)<<16)|(Player_2&$FFFF),d0
		bne.s	loc_19958
		swap	d0
		move.l	d0,(Sprite_table_input+2+($80*2)).w

loc_19958:
		moveq	#$4F,d7
		lea	(Sprite_table_input).w,a5
		lea	(Camera_X_pos_P2_copy).w,a3
		lea	(Sprite_table_buffer_P2).l,a6
		tst.w	(Use_normal_sprite_table).w
		beq.s	loc_19974
		lea	(Sprite_table_buffer_P2_2).l,a6

loc_19974:
		tst.b	(Level_started_flag).w
		beq.s	loc_19980
		jsr	(nullsub_2).l

loc_19980:
		tst.b	1(a5)
		beq.w	loc_19A2C
		lea	2(a5),a4

loc_1998C:
		movea.w	(a4)+,a0
		move.b	4(a0),d6
		btst	#3,d6
		bne.w	loc_19A24
		move.w	$10(a0),d0
		move.w	$14(a0),d1
		btst	#6,d6
		bne.w	loc_19B1A
		btst	#2,d6
		beq.s	loc_199F2
		moveq	#0,d2
		sub.w	(a3),d0
		move.b	7(a0),d2
		add.w	d2,d0
		and.w	(Screen_X_wrap_value).w,d0
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$140,d2
		cmp.w	d2,d0
		bcc.s	loc_19A24
		addi.w	#$80,d0
		sub.w	d3,d0
		moveq	#0,d2
		sub.w	4(a3),d1
		move.b	6(a0),d2
		add.w	d2,d1
		and.w	(Screen_Y_wrap_value).w,d1
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$70,d2
		cmp.w	d2,d1
		bcc.s	loc_19A24
		addi.w	#$80,d1
		sub.w	d3,d1

loc_199F2:
		addi.w	#$70,d1
		ori.b	#$80,4(a0)
		tst.w	d7
		bmi.s	loc_19A24
		movea.l	$C(a0),a1
		moveq	#0,d4
		btst	#5,d6
		bne.s	loc_19A1C
		move.b	$22(a0),d4
		add.w	d4,d4
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	loc_19A24

loc_19A1C:
		move.w	$A(a0),d5
		jsr	sub_195CE(pc)

loc_19A24:
		subq.b	#2,1(a5)
		bne.w	loc_1998C

loc_19A2C:
		lea	$80(a5),a5
		cmpa.l	#Player_1,a5
		bcs.w	loc_19980
		tst.w	d7
		bmi.s	loc_19A48
		moveq	#0,d0

loc_19A40:
		move.w	d0,(a6)
		addq.w	#8,a6
		dbf	d7,loc_19A40

loc_19A48:
		st	(Switch_sprite_table).w
		rts
; ---------------------------------------------------------------------------

loc_19A4E:
		moveq	#0,d2
		sub.w	(a3),d0
		move.b	7(a0),d2
		add.w	d2,d0
		and.w	(Screen_X_wrap_value).w,d0
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$140,d2
		cmp.w	d2,d0
		bcc.w	loc_19924
		addi.w	#$80,d0
		sub.w	d3,d0
		moveq	#0,d2
		sub.w	4(a3),d1
		move.b	6(a0),d2
		add.w	d2,d1
		and.w	(Screen_Y_wrap_value).w,d1
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$70,d2
		cmp.w	d2,d1
		bcc.w	loc_19924
		addi.w	#$80,d1
		sub.w	d3,d1
		ori.b	#$80,4(a0)
		tst.w	d7
		bmi.w	loc_19924
		move.w	$A(a0),d5
		movea.l	$C(a0),a2
		moveq	#0,d4
		move.b	$22(a0),d4
		beq.s	loc_19ACC
		add.w	d4,d4
		lea	(a2),a1
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	loc_19ACC
		move.w	d6,d3
		jsr	sub_196D2(pc)
		move.w	d3,d6
		tst.w	d7
		bmi.w	loc_19924

loc_19ACC:
		move.w	$16(a0),d3
		subq.w	#1,d3
		bcs.w	loc_19924
		lea	$18(a0),a0

loc_19ADA:
		move.w	(a0)+,d0
		sub.w	(a3),d0
		addi.w	#$80,d0
		and.w	(Screen_X_wrap_value).w,d0
		move.w	(a0)+,d1
		sub.w	4(a3),d1
		addi.w	#$80,d1
		and.w	(Screen_Y_wrap_value).w,d1
		addq.w	#1,a0
		moveq	#0,d4
		move.b	(a0)+,d4
		add.w	d4,d4
		lea	(a2),a1
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	loc_19B10
		move.w	d6,-(sp)
		jsr	sub_196D2(pc)
		move.w	(sp)+,d6

loc_19B10:
		tst.w	d7
		dbmi	d3,loc_19ADA
		bra.w	loc_19924
; ---------------------------------------------------------------------------

loc_19B1A:
		moveq	#0,d2
		sub.w	(a3),d0
		move.b	7(a0),d2
		add.w	d2,d0
		and.w	(Screen_X_wrap_value).w,d0
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$140,d2
		cmp.w	d2,d0
		bcc.w	loc_19A24
		addi.w	#$80,d0
		sub.w	d3,d0
		moveq	#0,d2
		sub.w	4(a3),d1
		move.b	6(a0),d2
		add.w	d2,d1
		and.w	(Screen_Y_wrap_value).w,d1
		move.w	d2,d3
		add.w	d2,d2
		addi.w	#$70,d2
		cmp.w	d2,d1
		bcc.w	loc_19A24
		addi.w	#$F0,d1
		sub.w	d3,d1
		ori.b	#$80,4(a0)
		tst.w	d7
		bmi.w	loc_19A24
		move.w	$A(a0),d5
		movea.l	$C(a0),a2
		moveq	#0,d4
		move.b	$22(a0),d4
		beq.s	loc_19B98
		add.w	d4,d4
		lea	(a2),a1
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	loc_19B98
		move.w	d6,d3
		jsr	sub_196D2(pc)
		move.w	d3,d6
		tst.w	d7
		bmi.w	loc_19A24

loc_19B98:
		move.w	$16(a0),d3
		subq.w	#1,d3
		bcs.w	loc_19A24
		lea	$18(a0),a0

loc_19BA6:
		move.w	(a0)+,d0
		sub.w	(a3),d0
		addi.w	#$80,d0
		and.w	(Screen_X_wrap_value).w,d0
		move.w	(a0)+,d1
		sub.w	4(a3),d1
		addi.w	#$80,d1
		and.w	(Screen_Y_wrap_value).w,d1
		addi.w	#$70,d1
		addq.w	#1,a0
		moveq	#0,d4
		move.b	(a0)+,d4
		add.w	d4,d4
		lea	(a2),a1
		adda.w	(a1,d4.w),a1
		move.w	(a1)+,d4
		subq.w	#1,d4
		bmi.s	loc_19BE0
		move.w	d6,-(sp)
		jsr	sub_196D2(pc)
		move.w	(sp)+,d6

loc_19BE0:
		tst.w	d7
		dbmi	d3,loc_19BA6
		bra.w	loc_19A24
; ---------------------------------------------------------------------------

Sprite_OnScreen_Test:
		move.w	$10(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_19C02
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_19C02:
		move.w	$48(a0),d0
		beq.s	loc_19C0E
		movea.w	d0,a2
		bclr	#7,(a2)

loc_19C0E:
		bra.w	Delete_Current_Sprite
; ---------------------------------------------------------------------------

Sprite_OnScreen_Test2:
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_19C26
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_19C26:
		move.w	$48(a0),d0
		beq.s	loc_19C32
		movea.w	d0,a2
		bclr	#7,(a2)

loc_19C32:
		bra.w	Delete_Current_Sprite

; =============== S U B R O U T I N E =======================================


Delete_Sprite_If_Not_In_Range:
		move.w	$10(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_19C4C
		rts
; ---------------------------------------------------------------------------

loc_19C4C:
		move.w	$48(a0),d0
		beq.s	loc_19C58
		movea.w	d0,a2
		bclr	#7,(a2)

loc_19C58:
		bra.w	Delete_Current_Sprite
; End of function Delete_Sprite_If_Not_In_Range

; ---------------------------------------------------------------------------
		tst.w	(Competition_mode).w
		bne.s	loc_19C8A
		move.w	$10(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_19C7A
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_19C7A:
		move.w	$48(a0),d0
		beq.s	loc_19C86
		movea.w	d0,a2
		bclr	#7,(a2)

loc_19C86:
		bra.w	Delete_Current_Sprite
; ---------------------------------------------------------------------------

loc_19C8A:
		move.w	$10(a0),d0
		andi.w	#$FF00,d0
		move.w	d0,d1
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$300,d0
		bhi.w	loc_19CA4
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_19CA4:
		sub.w	(_unkF7DC).w,d1
		cmpi.w	#$300,d1
		bhi.w	loc_19CB4
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_19CB4:
		move.w	$48(a0),d0
		beq.s	loc_19CC0
		movea.w	d0,a2
		bclr	#7,(a2)

loc_19CC0:
		bra.w	Delete_Current_Sprite
; ---------------------------------------------------------------------------

loc_19CC4:
		move.w	$10(a0),d0

loc_19CC8:
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_19CE2
		jsr	(Add_SpriteToCollisionResponseList).l
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_19CE2:
		move.w	$48(a0),d0
		beq.s	loc_19CEE
		movea.w	d0,a2
		bclr	#7,(a2)

loc_19CEE:
		bra.w	Delete_Current_Sprite

; =============== S U B R O U T I N E =======================================


Load_Sprites:
		moveq	#0,d0
		move.b	(Object_load_routine).w,d0
		jmp	loc_19CFC(pc,d0.w)
; End of function Load_Sprites

; ---------------------------------------------------------------------------

loc_19CFC:
		bra.w	loc_19D0A
; ---------------------------------------------------------------------------
		bra.w	loc_19DD0
; ---------------------------------------------------------------------------
		bra.w	loc_19DD0
; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------

loc_19D0A:
		addq.b	#4,(Object_load_routine).w
		tst.b	(Respawn_table_keep).w
		bne.s	loc_19D24
		lea	(Object_respawn_table).w,a0
		moveq	#0,d0
		move.w	#$BF,d1

loc_19D1E:
		move.l	d0,(a0)+
		dbf	d1,loc_19D1E

loc_19D24:
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#5,d0
		lea	(SpriteLocPtrs).l,a0
		movea.l	(a0,d0.w),a0
		cmpi.b	#$13,(Current_zone).w
		bcc.s	loc_19D44
		tst.w	(Competition_mode).w
		beq.s	loc_19D6C

loc_19D44:
		addq.b	#8,(Object_load_routine).w
		jsr	Create_New_Sprite(pc)
		bne.s	loc_19D66
		lea	(_unkF712).w,a3
		lea	(Sprite_Listing).l,a4
		move.w	#$800,d6

loc_19D5C:
		cmp.w	(a0),d6
		bls.s	loc_19D66
		jsr	sub_19FDC(pc)
		beq.s	loc_19D5C

loc_19D66:
		clr.w	(Camera_X_pos_coarse_back).w
		rts
; ---------------------------------------------------------------------------

loc_19D6C:
		move.l	a0,(Object_load_addr_front).w
		move.l	a0,(Object_load_addr_back).w
		lea	(Object_respawn_table).w,a3
		move.w	(Camera_X_pos).w,d6
		subi.w	#$80,d6
		bcc.s	loc_19D84
		moveq	#0,d6

loc_19D84:
		andi.w	#-$80,d6
		movea.l	(Object_load_addr_front).w,a0

loc_19D8C:
		cmp.w	(a0),d6
		bls.s	loc_19D96
		addq.w	#6,a0
		addq.w	#1,a3
		bra.s	loc_19D8C
; ---------------------------------------------------------------------------

loc_19D96:
		move.l	a0,(Object_load_addr_front).w
		move.w	a3,(Object_respawn_index_front).w
		lea	(Object_respawn_table).w,a3
		movea.l	(Object_load_addr_back).w,a0
		subi.w	#$80,d6
		bcs.s	loc_19DB6

loc_19DAC:
		cmp.w	(a0),d6
		bls.s	loc_19DB6
		addq.w	#6,a0
		addq.w	#1,a3
		bra.s	loc_19DAC
; ---------------------------------------------------------------------------

loc_19DB6:
		move.l	a0,(Object_load_addr_back).w
		move.w	a3,(Object_respawn_index_back).w
		move.w	#-1,(Camera_X_pos_coarse).w
		move.w	(Camera_Y_pos).w,d0
		andi.w	#-$80,d0
		move.w	d0,(Camera_Y_pos_coarse).w

loc_19DD0:
		move.w	(Camera_X_pos).w,d1
		subi.w	#$80,d1
		andi.w	#-$80,d1
		move.w	d1,(Camera_X_pos_coarse_back).w
		lea	(Sprite_Listing).l,a4
		tst.w	(Camera_min_Y_pos).w
		bpl.s	loc_19E1A
		lea	loc_1A010(pc),a6
		move.w	(Camera_Y_pos).w,d3
		andi.w	#-$80,d3
		move.w	d3,d4
		addi.w	#$200,d4
		subi.w	#$80,d3
		bpl.s	loc_19E0A
		and.w	(Screen_Y_wrap_value).w,d3
		bra.s	loc_19E34
; ---------------------------------------------------------------------------

loc_19E0A:
		move.w	(Screen_Y_wrap_value).w,d0
		addq.w	#1,d0
		cmp.w	d0,d4
		bls.s	loc_19E30
		and.w	(Screen_Y_wrap_value).w,d4
		bra.s	loc_19E34
; ---------------------------------------------------------------------------

loc_19E1A:
		move.w	(Camera_Y_pos).w,d3
		andi.w	#-$80,d3
		move.w	d3,d4
		addi.w	#$200,d4
		subi.w	#$80,d3
		bpl.s	loc_19E30
		moveq	#0,d3

loc_19E30:
		lea	loc_1A062(pc),a6

loc_19E34:
		move.w	#$FFF,d5
		move.w	(Camera_X_pos).w,d6
		andi.w	#-$80,d6
		cmp.w	(Camera_X_pos_coarse).w,d6
		beq.w	loc_19EEA
		bge.s	loc_19EA2
		move.w	d6,(Camera_X_pos_coarse).w
		movea.l	(Object_load_addr_back).w,a0
		movea.w	(Object_respawn_index_back).w,a3
		subi.w	#$80,d6
		bcs.s	loc_19E78
		jsr	Create_New_Sprite(pc)
		bne.s	loc_19E78

loc_19E62:
		cmp.w	-6(a0),d6
		bge.s	loc_19E78
		subq.w	#6,a0
		subq.w	#1,a3
		jsr	(a6)
		bne.s	loc_19E74
		subq.w	#6,a0
		bra.s	loc_19E62
; ---------------------------------------------------------------------------

loc_19E74:
		addq.w	#6,a0
		addq.w	#1,a3

loc_19E78:
		move.l	a0,(Object_load_addr_back).w
		move.w	a3,(Object_respawn_index_back).w
		movea.l	(Object_load_addr_front).w,a0
		movea.w	(Object_respawn_index_front).w,a3
		addi.w	#$300,d6

loc_19E8C:
		cmp.w	-6(a0),d6
		bgt.s	loc_19E98
		subq.w	#6,a0
		subq.w	#1,a3
		bra.s	loc_19E8C
; ---------------------------------------------------------------------------

loc_19E98:
		move.l	a0,(Object_load_addr_front).w
		move.w	a3,(Object_respawn_index_front).w
		bra.s	loc_19EEA
; ---------------------------------------------------------------------------

loc_19EA2:
		move.w	d6,(Camera_X_pos_coarse).w
		movea.l	(Object_load_addr_front).w,a0
		movea.w	(Object_respawn_index_front).w,a3
		addi.w	#$280,d6
		jsr	Create_New_Sprite(pc)
		bne.s	loc_19EC2

loc_19EB8:
		cmp.w	(a0),d6
		bls.s	loc_19EC2
		jsr	(a6)
		addq.w	#1,a3
		beq.s	loc_19EB8

loc_19EC2:
		move.l	a0,(Object_load_addr_front).w
		move.w	a3,(Object_respawn_index_front).w
		movea.l	(Object_load_addr_back).w,a0
		movea.w	(Object_respawn_index_back).w,a3
		subi.w	#$300,d6
		bcs.s	loc_19EE2

loc_19ED8:
		cmp.w	(a0),d6
		bls.s	loc_19EE2
		addq.w	#6,a0
		addq.w	#1,a3
		bra.s	loc_19ED8
; ---------------------------------------------------------------------------

loc_19EE2:
		move.l	a0,(Object_load_addr_back).w
		move.w	a3,(Object_respawn_index_back).w

loc_19EEA:
		move.w	(Camera_Y_pos).w,d6
		andi.w	#-$80,d6
		move.w	d6,d3
		cmp.w	(Camera_Y_pos_coarse).w,d6
		beq.w	loc_19FCA
		bge.s	loc_19F26
		tst.w	(Camera_min_Y_pos).w
		bpl.s	loc_19F1C
		tst.w	d6
		bne.s	loc_19F10
		cmpi.w	#$80,(Camera_Y_pos_coarse).w
		bne.s	loc_19F38

loc_19F10:
		subi.w	#$80,d3
		bpl.s	loc_19F52
		and.w	(Screen_Y_wrap_value).w,d3
		bra.s	loc_19F52
; ---------------------------------------------------------------------------

loc_19F1C:
		subi.w	#$80,d3
		bmi.w	loc_19FCA
		bra.s	loc_19F52
; ---------------------------------------------------------------------------

loc_19F26:
		tst.w	(Camera_min_Y_pos).w
		bpl.s	loc_19F48
		tst.w	(Camera_Y_pos_coarse).w
		bne.s	loc_19F38
		cmpi.w	#$80,d6
		bne.s	loc_19F10

loc_19F38:
		addi.w	#$180,d3
		cmp.w	(Screen_Y_wrap_value).w,d3
		bcs.s	loc_19F52
		and.w	(Screen_Y_wrap_value).w,d3
		bra.s	loc_19F52
; ---------------------------------------------------------------------------

loc_19F48:
		addi.w	#$180,d3
		cmp.w	(Screen_Y_wrap_value).w,d3
		bhi.s	loc_19FCA

loc_19F52:
		jsr	Create_New_Sprite(pc)
		bne.s	loc_19FCA
		move.w	d3,d4
		addi.w	#$80,d4
		move.w	#$FFF,d5
		movea.l	(Object_load_addr_back).w,a0
		movea.w	(Object_respawn_index_back).w,a3
		move.l	(Object_load_addr_front).w,d7
		sub.l	a0,d7
		beq.s	loc_19FCA
		addq.w	#2,a0

loc_19F74:
		tst.b	(a3)
		bmi.s	loc_19FC2
		move.w	(a0),d1
		and.w	d5,d1
		cmp.w	d3,d1
		bcs.s	loc_19FC2
		cmp.w	d4,d1
		bhi.s	loc_19FC2
		bset	#7,(a3)
		move.w	-2(a0),$10(a1)
		move.w	(a0),d1
		move.w	d1,d2
		and.w	d5,d1
		move.w	d1,$14(a1)
		rol.w	#3,d2
		andi.w	#3,d2
		move.b	d2,4(a1)
		move.b	d2,$2A(a1)
		move.b	2(a0),d2
		add.w	d2,d2
		add.w	d2,d2
		move.l	(a4,d2.w),(a1)
		move.b	3(a0),$2C(a1)
		move.w	a3,$48(a1)
		jsr	CreateNewSprite4(pc)
		bne.s	loc_19FCA

loc_19FC2:
		addq.w	#6,a0
		addq.w	#1,a3
		subq.w	#6,d7
		bne.s	loc_19F74

loc_19FCA:
		move.w	d6,(Camera_Y_pos_coarse).w
		rts
; ---------------------------------------------------------------------------
		bset	#7,(a3)
		beq.s	sub_19FDC
		addq.w	#6,a0
		moveq	#0,d1
		rts

; =============== S U B R O U T I N E =======================================


sub_19FDC:
		move.w	(a0)+,$10(a1)
		move.w	(a0)+,d1
		move.w	d1,d2
		andi.w	#$FFF,d1
		move.w	d1,$14(a1)
		rol.w	#3,d2
		andi.w	#3,d2
		move.b	d2,4(a1)
		move.b	d2,$2A(a1)
		move.b	(a0)+,d2
		add.w	d2,d2
		add.w	d2,d2
		move.l	(a4,d2.w),(a1)
		move.b	(a0)+,$2C(a1)
		move.w	a3,$48(a1)
		bra.w	CreateNewSprite4
; ---------------------------------------------------------------------------

loc_1A010:
		tst.b	(a3)
		bpl.s	loc_1A01A
		addq.w	#6,a0
		moveq	#0,d1
		rts
; ---------------------------------------------------------------------------

loc_1A01A:
		move.w	(a0)+,d7
		move.w	(a0)+,d1
		move.w	d1,d2
		bmi.s	loc_1A032
		and.w	d5,d1
		cmp.w	d3,d1
		bcc.s	loc_1A034
		cmp.w	d4,d1
		bls.s	loc_1A034
		addq.w	#2,a0
		moveq	#0,d1
		rts
; ---------------------------------------------------------------------------

loc_1A032:
		and.w	d5,d1

loc_1A034:
		bset	#7,(a3)
		move.w	d7,$10(a1)
		move.w	d1,$14(a1)
		rol.w	#3,d2
		andi.w	#3,d2
		move.b	d2,4(a1)
		move.b	d2,$2A(a1)
		move.b	(a0)+,d2
		add.w	d2,d2
		add.w	d2,d2
		move.l	(a4,d2.w),(a1)
		move.b	(a0)+,$2C(a1)
		move.w	a3,$48(a1)
		bra.s	CreateNewSprite4
; ---------------------------------------------------------------------------

loc_1A062:
		tst.b	(a3)
		bpl.s	loc_1A06C
		addq.w	#6,a0
		moveq	#0,d1
		rts
; ---------------------------------------------------------------------------

loc_1A06C:
		move.w	(a0)+,d7
		move.w	(a0)+,d1
		move.w	d1,d2
		bmi.s	loc_1A084
		and.w	d5,d1
		cmp.w	d3,d1
		bcs.s	loc_1A07E
		cmp.w	d4,d1
		bls.s	loc_1A086

loc_1A07E:
		addq.w	#2,a0
		moveq	#0,d1
		rts
; ---------------------------------------------------------------------------

loc_1A084:
		and.w	d5,d1

loc_1A086:
		bset	#7,(a3)
		move.w	d7,$10(a1)
		move.w	d1,$14(a1)
		rol.w	#3,d2
		andi.w	#3,d2
		move.b	d2,4(a1)
		move.b	d2,$2A(a1)
		move.b	(a0)+,d2
		add.w	d2,d2
		add.w	d2,d2
		move.l	(a4,d2.w),(a1)
		move.b	(a0)+,$2C(a1)
		move.w	a3,$48(a1)

CreateNewSprite4:
		subq.w	#1,d0
		bmi.s	locret_1A0C0

loc_1A0B6:
		lea	$4A(a1),a1
		tst.l	(a1)
		dbeq	d0,loc_1A0B6

locret_1A0C0:
		rts
; End of function sub_19FDC


; =============== S U B R O U T I N E =======================================


Create_New_Sprite:
		lea	(Dynamic_object_RAM).w,a1
		moveq	#((Dynamic_object_RAM_end-Dynamic_object_RAM)/object_size)-1,d0
		bra.s	loc_1A0DA
; End of function Create_New_Sprite


; =============== S U B R O U T I N E =======================================


Create_New_Sprite3:
		movea.l	a0,a1
		move.w	#Dynamic_object_RAM_end,d0
		sub.w	a0,d0
		lsr.w	#6,d0
		move.b	byte_1A0E6(pc,d0.w),d0
		bmi.s	locret_1A0E4

loc_1A0DA:
		lea	next_object(a1),a1
		tst.l	(a1)
		dbeq	d0,loc_1A0DA

locret_1A0E4:
		rts
; End of function Create_New_Sprite3

; ---------------------------------------------------------------------------
byte_1A0E6:
.a		set	Dynamic_object_RAM
.b		set	Dynamic_object_RAM_end
.c		set	.b			; begin from bottom of array and decrease backwards
		rept	(.b-.a)/$40		; repeat for all slots, minus exception
.c		set	.c-$40			; address for previous $40 (also skip last part)
		dc.b	(.b-.c-1)/object_size-1	; write possible slots according to object_size division + hack + dbf hack
		endm
		even

; =============== S U B R O U T I N E =======================================


Clear_SpriteRingMem:
		lea	(Dynamic_object_RAM).w,a1
		moveq	#((Dynamic_object_RAM_end-Dynamic_object_RAM)/object_size)-1,d1

loc_1A154:
		lea	next_object(a1),a1
		tst.l	(a1)
		beq.s	loc_1A168
		move.w	respawn_addr(a1),d0
		beq.s	loc_1A168
		movea.w	d0,a2
		bclr	#7,(a2)

loc_1A168:
		dbf	d1,loc_1A154
		lea	(Ring_consumption_table).w,a2
		move.w	(a2)+,d1
		subq.w	#1,d1
		bcs.s	locret_1A18C

loc_1A176:
		move.w	(a2)+,d0
		beq.s	loc_1A176
		movea.w	d0,a1
		move.w	#-1,(a1)
		clr.w	-2(a2)
		subq.w	#1,(Ring_consumption_table).w
		dbf	d1,loc_1A176

locret_1A18C:
		rts
; End of function Clear_SpriteRingMem


; =============== S U B R O U T I N E =======================================


Get_LevelSizeStart:
		clr.b	(Deform_lock).w
		clr.b	(_unkEE08).w
		clr.b	(Scroll_lock).w
		clr.b	(Scroll_lock_P2).w
		clr.b	(Fast_V_scroll_flag).w
		moveq	#0,d0
		move.b	d0,(Dynamic_resize_routine).w
		move.w	d0,(_unkF660).w
		move.w	d0,(_unkF662).w
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#4,d0
		lea	LevelSizes(pc,d0.w),a0
		move.l	(a0)+,d0
		move.l	d0,(Camera_min_X_pos).w
		move.l	d0,(Camera_target_min_X_pos).w
		move.l	d0,(Camera_min_X_pos_P2).w
		move.l	(a0)+,d0
		move.l	d0,(Camera_min_Y_pos).w
		move.l	d0,(Camera_target_min_Y_pos).w
		move.l	d0,(Camera_min_Y_pos_P2).w
		move.w	#$60,(Distance_from_top).w
		move.w	#$60,(Distance_from_top_P2).w
		move.w	#-1,(Screen_X_wrap_value).w
		move.w	#-1,(Screen_Y_wrap_value).w
		bra.w	loc_1A374
; ---------------------------------------------------------------------------
;		      xstart    xend  ystart yend	; Level
LevelSizes:	dc.w   $1308,  $6000,      0,   $390 	; AIZ1
		dc.w       0,  $4640,      0,   $590	; AIZ2
		dc.w       0,  $6000,      0,  $1000	; HCZ1
		dc.w       0,  $6000,      0,  $1000	; HCZ2
		dc.w       0,  $6000,  -$100,  $1000	; MGZ1
		dc.w       0,  $6000,      0,  $1000	; MGZ2
		dc.w       0,  $6000,      0,   $B20	; CNZ1
		dc.w       0,  $6000,      0,  $1000	; CNZ2
		dc.w       0,  $6000,      0,  $1000	; FBZ1
		dc.w       0,  $6000,      0,  $1000	; FBZ2
		dc.w       0,  $7000,  -$100,   $800	; ICZ1
		dc.w       0,  $7000,      0,   $B20	; ICZ2
		dc.w       0,  $6000,      0,  $1000	; LBZ1
		dc.w       0,  $6000,      0,  $1000	; LBZ2
		dc.w       0,  $6000,      0,  $1000	; MHZ1
		dc.w       0,  $6000,      0,  $1000	; MHZ2
		dc.w       0,  $6000,      0,  $1000	; SOZ1
		dc.w       0,  $6000,      0,  $1000	; SOZ2
		dc.w       0,  $6000,      0,  $1000	; LRZ1
		dc.w       0,  $6000,      0,  $1000	; LRZ2
		dc.w       0,  $6000,      0,  $1000	; SSZ1
		dc.w       0,  $6000,      0,  $1000	; SSZ2
		dc.w       0,  $6000,      0,  $1000	; DEZ1
		dc.w       0,  $6000,      0,  $1000	; DEZ2
		dc.w       0,  $6000,      0,  $1000	; DDZ
		dc.w       0,  $6000,      0,  $1000	; DDZ
		dc.w       0,  $6000,      0,  $1000	; AIZ Intro (?)
		dc.w       0,  $6000,      0,  $1000	; Ending scene
		dc.w       0,  $12C0,   $100,   $190	; ALZ
		dc.w       0,  $12C0,   $100,   $190	; ALZ
		dc.w       0,  $12C0,   $200,   $390	; BPZ
		dc.w       0,  $12C0,   $200,   $390	; BPZ
		dc.w       0,  $12C0,   $100,   $190	; DPZ
		dc.w       0,  $12C0,   $100,   $190	; DPZ
		dc.w       0,  $12C0,  -$100,  $1000	; CGZ
		dc.w       0,  $12C0,      0,    $90	; CGZ
		dc.w       0,  $12C0,   $100,   $190	; EMZ
		dc.w       0,  $12C0,   $100,   $190	; EMZ
		dc.w     $60,    $60,      0,   $240	; Gumball
		dc.w     $60,    $60,      0,   $240	; Gumball
		dc.w       0,  $6000,      0,  $1000	; Pachinko
		dc.w       0,  $6000,      0,  $1000	; Pachinko
		dc.w       0,  $6000,      0,  $1000	; Slots
		dc.w       0,  $6000,      0,  $1000	; Slots
		dc.w       0,  $6000,      0,  $1000	; LRZ Boss
		dc.w       0,  $6000,      0,  $1000	; HPZ
		dc.w       0,  $6000,      0,  $1000	; DEZ Boss
		dc.w       0,  $6000,      0,  $1000	; Special Stage Arena (HPZ)
; ---------------------------------------------------------------------------

loc_1A374:
		tst.b	(Last_star_post_hit).w
		beq.s	loc_1A38C
		jsr	(Load_Starpost_Settings).l
		move.w	(Player_1+x_pos).w,d1
		move.w	(Player_1+y_pos).w,d0
		bra.w	loc_1A43C
; ---------------------------------------------------------------------------

loc_1A38C:
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#5,d0
		lea	(Start_Locations).l,a1
		lea	(a1,d0.w),a1
		moveq	#0,d1
		move.w	(a1)+,d1
		move.w	d1,(Player_1+x_pos).w
		moveq	#0,d0
		move.w	(a1),d0
		move.w	d0,(Player_1+y_pos).w
		tst.b	(Last_star_post_hit).w
		bne.w	loc_1A43C
		cmpi.w	#0,(Current_zone_and_act).w
		bne.s	loc_1A3E6
		cmpi.w	#2,(Player_mode).w
		bcc.s	loc_1A3E6
		move.w	#$40,d1
		move.w	d1,(Player_1+x_pos).w
		move.w	#$420,d0
		move.w	d0,(Player_1+y_pos).w
		move.w	#0,d1
		move.w	d1,(Camera_min_X_pos).w
		move.w	d1,(Camera_target_min_X_pos).w
		move.w	d1,(Camera_min_X_pos_P2).w

loc_1A3E6:
		cmpi.w	#$500,(Current_zone_and_act).w
		bne.s	loc_1A43C
		cmpi.w	#2,(Player_mode).w
		bcs.s	loc_1A43C
		move.w	#$35A0,d1
		move.w	d1,(Camera_min_X_pos).w
		move.w	d1,(Camera_target_min_X_pos).w
		move.w	d1,(Camera_min_X_pos_P2).w
		move.w	#$3780,d1
		move.w	d1,(Player_1+x_pos).w
		move.w	#$36F0,d1
		move.w	d1,(Camera_X_pos).w
		move.w	d1,(Camera_X_pos_P2).w
		move.w	#$1E0,d0
		move.w	d0,(Player_1+y_pos).w
		move.w	#$200,d0
		move.w	d0,(Camera_min_Y_pos).w
		move.w	d0,(Camera_target_min_Y_pos).w
		move.w	d0,(Camera_min_Y_pos_P2).w
		move.w	d0,(Camera_Y_pos).w
		move.w	d0,(Camera_Y_pos_P2).w
		rts
; ---------------------------------------------------------------------------

loc_1A43C:
		subi.w	#$A0,d1
		bcc.s	loc_1A444
		moveq	#0,d1

loc_1A444:
		tst.w	(Competition_mode).w
		bne.s	loc_1A454
		move.w	(Camera_max_X_pos).w,d2
		cmp.w	d2,d1
		bcs.s	loc_1A454
		move.w	d2,d1

loc_1A454:
		move.w	d1,(Camera_X_pos).w
		move.w	d1,(Camera_X_pos_P2).w
		subi.w	#$60,d0
		bcc.s	loc_1A464
		moveq	#0,d0

loc_1A464:
		cmp.w	(Camera_max_Y_pos).w,d0
		blt.s	loc_1A46E
		move.w	(Camera_max_Y_pos).w,d0

loc_1A46E:
		move.w	d0,(Camera_Y_pos).w
		move.w	d0,(Camera_Y_pos_P2).w
		rts
; End of function Get_LevelSizeStart


; =============== S U B R O U T I N E =======================================


DeformBgLayer:
		tst.b	(Deform_lock).w
		beq.s	loc_1A480
		rts
; ---------------------------------------------------------------------------

loc_1A480:
		clr.w	(Camera_RAM).w
		clr.w	(V_scroll_amount).w
		clr.w	(H_scroll_amount_P2).w
		clr.w	(V_scroll_amount_P2).w
		tst.w	(Competition_mode).w
		bne.w	loc_1A4DE
		tst.b	(Scroll_lock).w
		bne.s	loc_1A4DA
		lea	(Player_1).w,a0
		lea	(Camera_X_pos).w,a1
		lea	(Camera_min_X_pos).w,a2
		lea	(Camera_RAM).w,a4
		lea	(H_scroll_frame_offset).w,a5
		lea	(Pos_table).w,a6
		bsr.w	MoveCameraX
		lea	(Camera_Y_pos).w,a1
		lea	(Camera_min_X_pos).w,a2
		lea	(V_scroll_amount).w,a4
		move.w	(Distance_from_top).w,d3
		cmpi.w	#2,(Player_mode).w
		bne.s	loc_1A4D6
		move.w	(Distance_from_top_P2).w,d3

loc_1A4D6:
		bsr.w	MoveCameraY

loc_1A4DA:
		bra.w	Do_ResizeEvents
; ---------------------------------------------------------------------------

loc_1A4DE:
		tst.b	(Scroll_lock).w
		bne.s	loc_1A520
		lea	(Player_1).w,a0
		lea	(Camera_X_pos).w,a1
		lea	(Camera_min_X_pos).w,a2
		lea	(Camera_RAM).w,a4
		lea	(H_scroll_frame_offset).w,a5
		lea	(Pos_table).w,a6
		bsr.w	MoveCameraX_2P
		lea	(Camera_Y_pos).w,a1
		lea	(Camera_min_X_pos).w,a2
		lea	(V_scroll_amount).w,a4
		move.w	(Distance_from_top).w,d3
		cmpi.w	#2,(Player_mode).w
		bne.s	loc_1A51C
		move.w	(Distance_from_top_P2).w,d3

loc_1A51C:
		bsr.w	MoveCameraY

loc_1A520:
		tst.b	(Scroll_lock_P2).w
		bne.s	loc_1A556
		lea	(Player_2).w,a0
		lea	(Camera_X_pos_P2).w,a1
		lea	(Camera_min_X_pos_P2).w,a2
		lea	(H_scroll_amount_P2).w,a4
		lea	(H_scroll_frame_offset_P2).w,a5
		lea	(Stat_table).w,a6
		bsr.w	MoveCameraX_2P
		lea	(Camera_Y_pos_P2).w,a1
		lea	(Camera_min_X_pos_P2).w,a2
		lea	(V_scroll_amount_P2).w,a4
		move.w	(Distance_from_top_P2).w,d3
		bsr.w	MoveCameraY

loc_1A556:
		bra.w	Do_ResizeEvents
; End of function DeformBgLayer


; =============== S U B R O U T I N E =======================================


MoveCameraX:
		move.w	(a1),d4
		tst.b	(Teleport_active_flag).w
		bne.s	locret_1A598
		move.w	(a5),d1
		beq.s	loc_1A584
		subi.w	#$100,d1
		move.w	d1,(a5)
		moveq	#0,d1
		move.b	(a5),d1
		lsl.b	#2,d1
		addq.b	#4,d1
		move.w	2(a5),d0
		sub.b	d1,d0
		move.w	(a6,d0.w),d0
		andi.w	#$7FFF,d0
		bra.s	loc_1A588
; ---------------------------------------------------------------------------

loc_1A584:
		move.w	$10(a0),d0

loc_1A588:
		sub.w	(a1),d0
		subi.w	#$90,d0
		blt.s	loc_1A59A
		subi.w	#$10,d0
		bge.s	loc_1A5AE
		clr.w	(a4)

locret_1A598:
		rts
; ---------------------------------------------------------------------------

loc_1A59A:
		cmpi.w	#-$18,d0
		bgt.s	loc_1A5A4
		move.w	#-$18,d0

loc_1A5A4:
		add.w	(a1),d0
		cmp.w	(a2),d0
		bgt.s	loc_1A5C4
		move.w	(a2),d0
		bra.s	loc_1A5C4
; ---------------------------------------------------------------------------

loc_1A5AE:
		cmpi.w	#$18,d0
		bcs.s	loc_1A5B8
		move.w	#$18,d0

loc_1A5B8:
		add.w	(a1),d0
		cmp.w	2(a2),d0
		blt.s	loc_1A5C4
		move.w	2(a2),d0

loc_1A5C4:
		move.w	d0,d1
		sub.w	(a1),d1
		asl.w	#8,d1
		move.w	d0,(a1)
		move.w	d1,(a4)
		rts
; End of function MoveCameraX


; =============== S U B R O U T I N E =======================================


MoveCameraY:
		moveq	#0,d1
		move.w	$14(a0),d0
		sub.w	(a1),d0
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_1A5E4
		and.w	(Screen_Y_wrap_value).w,d0

loc_1A5E4:
		btst	#2,$2A(a0)
		beq.s	loc_1A5EE
		subq.w	#5,d0

loc_1A5EE:
		move.w	d3,d1
		tst.w	(Competition_mode).w
		beq.s	loc_1A5F8
		lsr.w	#1,d1

loc_1A5F8:
		btst	#1,$2A(a0)
		beq.s	loc_1A616
		addi.w	#$20,d0
		sub.w	d1,d0
		bcs.s	loc_1A662
		subi.w	#$40,d0
		bcc.s	loc_1A662
		tst.b	(Camera_max_Y_pos_changing).w
		bne.s	loc_1A674
		bra.s	loc_1A620
; ---------------------------------------------------------------------------

loc_1A616:
		sub.w	d1,d0
		bne.s	loc_1A624
		tst.b	(Camera_max_Y_pos_changing).w
		bne.s	loc_1A674

loc_1A620:
		clr.w	(a4)
		rts
; ---------------------------------------------------------------------------

loc_1A624:
		cmpi.w	#$60,d3
		bne.s	loc_1A650
		tst.b	(Fast_V_scroll_flag).w
		bne.s	loc_1A662
		move.w	$1C(a0),d1
		bpl.s	loc_1A638
		neg.w	d1

loc_1A638:
		cmpi.w	#$800,d1
		bcc.s	loc_1A662
		move.w	#$600,d1
		cmpi.w	#6,d0
		bgt.s	loc_1A6AC
		cmpi.w	#-6,d0
		blt.s	loc_1A68A
		bra.s	loc_1A67A
; ---------------------------------------------------------------------------

loc_1A650:
		move.w	#$200,d1
		cmpi.w	#2,d0
		bgt.s	loc_1A6AC
		cmpi.w	#-2,d0
		blt.s	loc_1A68A
		bra.s	loc_1A67A
; ---------------------------------------------------------------------------

loc_1A662:
		move.w	#$1800,d1
		cmpi.w	#$18,d0
		bgt.s	loc_1A6AC
		cmpi.w	#-$18,d0
		blt.s	loc_1A68A
		bra.s	loc_1A67A
; ---------------------------------------------------------------------------

loc_1A674:
		moveq	#0,d0
		move.b	d0,(Camera_max_Y_pos_changing).w

loc_1A67A:
		moveq	#0,d1
		move.w	d0,d1
		add.w	(a1),d1
		tst.w	d0
		bpl.w	loc_1A6B4
		bra.w	loc_1A694
; ---------------------------------------------------------------------------

loc_1A68A:
		neg.w	d1
		ext.l	d1
		asl.l	#8,d1
		add.l	(a1),d1
		swap	d1

loc_1A694:
		cmp.w	4(a2),d1
		bgt.s	loc_1A6CC
		cmpi.w	#-$100,d1
		bgt.s	loc_1A6A6
		and.w	(Screen_Y_wrap_value).w,d1
		bra.s	loc_1A6CC
; ---------------------------------------------------------------------------

loc_1A6A6:
		move.w	4(a2),d1
		bra.s	loc_1A6CC
; ---------------------------------------------------------------------------

loc_1A6AC:
		ext.l	d1
		asl.l	#8,d1
		add.l	(a1),d1
		swap	d1

loc_1A6B4:
		cmp.w	6(a2),d1
		blt.s	loc_1A6CC
		move.w	(Screen_Y_wrap_value).w,d3
		addq.w	#1,d3
		sub.w	d3,d1
		bcs.s	loc_1A6C8
		sub.w	d3,(a1)
		bra.s	loc_1A6CC
; ---------------------------------------------------------------------------

loc_1A6C8:
		move.w	6(a2),d1

loc_1A6CC:
		move.w	(a1),d4
		swap	d1
		move.l	d1,d3
		sub.l	(a1),d3
		ror.l	#8,d3
		move.w	d3,(a4)
		move.l	d1,(a1)
		tst.w	(Competition_mode).w
		beq.s	locret_1A6E8
		swap	d1
		and.w	(Screen_Y_wrap_value).w,d1
		move.w	d1,(a1)

locret_1A6E8:
		rts
; End of function MoveCameraY


; =============== S U B R O U T I N E =======================================


MoveCameraX_2P:
		move.w	(a1),d4
		tst.b	(Teleport_active_flag).w
		bne.s	locret_1A72E
		move.w	(a5),d1
		beq.s	loc_1A714
		subi.w	#$100,d1
		move.w	d1,(a5)
		moveq	#0,d1
		move.b	(a5),d1
		lsl.b	#2,d1
		addq.b	#4,d1
		move.w	2(a5),d0
		sub.b	d1,d0
		move.w	(a6,d0.w),d0
		andi.w	#$7FFF,d0
		bra.s	loc_1A718
; ---------------------------------------------------------------------------

loc_1A714:
		move.w	$10(a0),d0

loc_1A718:
		move.w	(Screen_X_wrap_value).w,d2
		sub.w	(a1),d0
		and.w	d2,d0
		subi.w	#$90,d0
		blt.s	loc_1A730
		subi.w	#$10,d0
		bge.s	loc_1A73E
		clr.w	(a4)

locret_1A72E:
		rts
; ---------------------------------------------------------------------------

loc_1A730:
		cmpi.w	#-$10,d0
		bgt.s	loc_1A73A
		move.w	#-$10,d0

loc_1A73A:
		add.w	(a1),d0
		bra.s	loc_1A74A
; ---------------------------------------------------------------------------

loc_1A73E:
		cmpi.w	#$10,d0
		bcs.s	loc_1A748
		move.w	#$10,d0

loc_1A748:
		add.w	(a1),d0

loc_1A74A:
		move.w	d0,d1
		sub.w	(a1),d1
		asl.w	#8,d1
		and.w	d2,d0
		addi.w	#$400,d0
		move.w	d0,(a1)
		move.w	d1,(a4)
		rts
; End of function MoveCameraX_2P


; =============== S U B R O U T I N E =======================================


j_LevelSetup:
		jmp	(LevelSetup).l
; End of function j_LevelSetup


; =============== S U B R O U T I N E =======================================


LoadLevelLoadBlock2:
		move.w	(Current_zone_and_act).w,d0
		bne.s	loc_1A77A
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_1A776
		tst.b	(Last_star_post_hit).w
		beq.s	loc_1A77A

loc_1A776:
		move.w	#$D00,d0

loc_1A77A:
		ror.b	#1,d0
		lsr.w	#4,d0
		andi.w	#$1F8,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		lea	(LevelLoadBlock).l,a2
		lea	(a2,d0.w),a2
		move.l	a2,-(sp)
		addq.w	#8,a2
		move.l	(a2)+,d0
		andi.l	#$FFFFFF,d0
		move.l	d0,d7
		movea.l	d0,a0
		lea	(Block_table).w,a1
		jsr	(Kos_Decomp).l
		move.l	(a2)+,d0
		andi.l	#$FFFFFF,d0
		cmp.l	d0,d7
		beq.s	loc_1A7C0
		movea.l	d0,a0
		jsr	(Kos_Decomp).l

loc_1A7C0:
		move.l	(a2)+,d0
		andi.l	#$FFFFFF,d0
		move.l	d0,d7
		movea.l	d0,a0
		lea	(RAM_start).l,a1
		jsr	(Kos_Decomp).l
		move.l	(a2)+,d0
		andi.l	#$FFFFFF,d0
		cmp.l	d0,d7
		beq.s	loc_1A7EC
		movea.l	d0,a0
		jsr	(Kos_Decomp).l

loc_1A7EC:
		bsr.w	Load_Level
		movea.l	(sp)+,a2
		move.b	(a2),d1
		addq.w	#4,a2
		moveq	#0,d0
		move.b	(a2),d0
		beq.s	loc_1A806
		cmp.b	d0,d1
		beq.s	loc_1A806
		jsr	(Load_PLC).l

loc_1A806:
		addq.w	#4,a2
		moveq	#0,d0
		move.b	(a2),d0
		jsr	(LoadPalette).l
		rts
; End of function LoadLevelLoadBlock2


; =============== S U B R O U T I N E =======================================


Load_Level:
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#5,d0
		andi.w	#$FC,d0
		lea	(LevelPtrs).l,a0
		movea.l	(a0,d0.w),a0
		lea	(Level_layout_header).w,a1
		move.w	#$7FF,d2

loc_1A834:
		move.w	(a0)+,(a1)+
		dbf	d2,loc_1A834
		rts
; End of function Load_Level


; =============== S U B R O U T I N E =======================================


Do_ResizeEvents:
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#6,d0
		; Bug: this clamps the array index too hard, causing Competition and bonus
		; stages to execute resize routines meant for the early game levels
		andi.w	#$3E,d0
		move.w	LevelResizeArray(pc,d0.w),d0
		jsr	LevelResizeArray(pc,d0.w)
		moveq	#2,d1
		move.w	(Camera_target_max_Y_pos).w,d0
		sub.w	(Camera_max_Y_pos).w,d0
		beq.s	locret_1A880
		bcc.s	loc_1A882
		neg.w	d1
		move.w	(Camera_Y_pos).w,d0
		cmp.w	(Camera_target_max_Y_pos).w,d0
		bls.s	loc_1A876
		move.w	d0,(Camera_max_Y_pos).w
		andi.w	#-2,(Camera_max_Y_pos).w

loc_1A876:
		add.w	d1,(Camera_max_Y_pos).w
		move.b	#1,(Camera_max_Y_pos_changing).w

locret_1A880:
		rts
; ---------------------------------------------------------------------------

loc_1A882:
		move.w	(Camera_Y_pos).w,d0
		addi.w	#8,d0
		cmp.w	(Camera_max_Y_pos).w,d0
		bcs.s	loc_1A89C
		btst	#1,(Player_1+status).w
		beq.s	loc_1A89C
		add.w	d1,d1
		add.w	d1,d1

loc_1A89C:
		add.w	d1,(Camera_max_Y_pos).w
		move.b	#1,(Camera_max_Y_pos_changing).w
		rts
; End of function Do_ResizeEvents

; ---------------------------------------------------------------------------
LevelResizeArray:dc.w AIZ1_Resize-LevelResizeArray
		dc.w AIZ2_Resize-LevelResizeArray
		dc.w HCZ1_Resize-LevelResizeArray
		dc.w HCZ2_Resize-LevelResizeArray
		dc.w MGZ_Resize-LevelResizeArray
		dc.w MGZ_Resize-LevelResizeArray
		dc.w No_Resize2-LevelResizeArray
		dc.w No_Resize2-LevelResizeArray
		dc.w No_Resize2-LevelResizeArray
		dc.w No_Resize2-LevelResizeArray
		dc.w ICZ1_Resize-LevelResizeArray
		dc.w ICZ2_Resize-LevelResizeArray
		dc.w No_Resize-LevelResizeArray
		dc.w LBZ2_Resize-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
		dc.w No_Resize3-LevelResizeArray
; ---------------------------------------------------------------------------

AIZ1_Resize:
		moveq	#0,d0
		move.b	(Dynamic_resize_routine).w,d0
		move.w	off_1A916(pc,d0.w),d0
		jmp	off_1A916(pc,d0.w)
; ---------------------------------------------------------------------------
off_1A916:	dc.w loc_1A920-off_1A916
		dc.w loc_1A96C-off_1A916
		dc.w loc_1A9EC-off_1A916
		dc.w loc_1AA40-off_1A916
		dc.w loc_1AA7C-off_1A916
; ---------------------------------------------------------------------------

loc_1A920:
		move.b	#1,(AIZ1_palette_cycle_flag).w
		cmpi.w	#$1000,(Camera_X_pos).w
		bcs.s	locret_1A96A
		move.b	#0,(AIZ1_palette_cycle_flag).w
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		cmpi.w	#$1308,(Camera_X_pos).w
		bcs.s	locret_1A96A
		tst.b	(Last_star_post_hit).w
		bne.s	loc_1A958
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_1A958
		moveq	#$B,d0
		jsr	(Load_PLC).l

loc_1A958:
		moveq	#$2A,d0
		jsr	(LoadPalette_Immediate).l
		move.w	#2,(Tails_CPU_routine).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1A96A:
		rts
; ---------------------------------------------------------------------------

loc_1A96C:
		move.w	#$1308,(Camera_min_X_pos).w
		cmpi.w	#$1400,(Camera_X_pos).w
		bcs.s	locret_1A9EA
		tst.b	(Last_star_post_hit).w
		bne.s	loc_1A9BE
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_1A9BE
		lea	(AIZ1_16x16_MainLevel_Kos).l,a1
		lea	(Block_table+$268).w,a2
		jsr	(Queue_Kos).l
		lea	(AIZ1_8x8_MainLevel_KosM).l,a1
		move.w	#$17C0,d2
		jsr	(Queue_Kos_Module).l
		st	(Events_fg_5).w
		move.w	#$500,(Anim_Counters).w
		move.w	#$500,(Anim_Counters+2).w
		move.w	#$500,(Anim_Counters+4).w

loc_1A9BE:
		move.b	#1,(Last_star_post_hit).w
		move.w	#$13A0,(Saved_X_pos).w
		move.w	#$41A,(Saved_Y_pos).w
		jsr	(Save_Level_Data).l
		move.l	#0,(Saved_timer).w
		moveq	#8,d0
		jsr	(Load_PLC).l
		addq.b	#2,(Dynamic_resize_routine).w

locret_1A9EA:
		rts
; ---------------------------------------------------------------------------

loc_1A9EC:
		lea	(word_1AA84).l,a1
		bsr.w	Resize_MaxYFromX
		move.w	#0,(Camera_min_Y_pos).w
		move.w	#$20E,(Normal_palette_line_3+$1E).w
		cmpi.w	#$2B00,(Camera_X_pos).w
		bcs.s	loc_1AA10
		move.w	#4,(Normal_palette_line_3+$1E).w

loc_1AA10:
		cmpi.w	#$2C00,(Camera_X_pos).w
		bcs.s	loc_1AA1E
		move.w	#$2E0,(Camera_min_Y_pos).w

loc_1AA1E:
		cmpi.w	#$2D80,(Camera_X_pos).w
		bcs.s	locret_1AA3E
		move.w	#$C02,(Normal_palette_line_3+$1E).w
		move.w	#$2D80,(Camera_min_X_pos).w
		moveq	#$5A,d0
		jsr	(Load_PLC).l
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AA3E:
		rts
; ---------------------------------------------------------------------------

loc_1AA40:
		lea	(word_1AA84).l,a1
		bsr.w	Resize_MaxYFromX
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		cmpi.w	#$2E00,(Camera_X_pos).w
		bcs.s	locret_1AA7A
		tst.b	(Kos_modules_left).w
		bne.s	locret_1AA7A
		lea	(AIZ1_8x8_Flames_KosM).l,a1
		move.w	#$A000,d2
		jsr	(Queue_Kos_Module).l
		moveq	#$C,d0
		jsr	(Load_PLC).l
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AA7A:
		rts
; ---------------------------------------------------------------------------

loc_1AA7C:
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		rts
; ---------------------------------------------------------------------------
word_1AA84:	dc.w  $8390, $1650
		dc.w  $83B0, $1B00
		dc.w  $8430, $2000
		dc.w  $84C0, $2B00
		dc.w  $83B0, $2D80
		dc.w  $82E0, $FFFF
; ---------------------------------------------------------------------------

AIZ2_Resize:
		moveq	#0,d0
		move.b	(Dynamic_resize_routine).w,d0
		move.w	off_1AAAA(pc,d0.w),d0
		jmp	off_1AAAA(pc,d0.w)
; ---------------------------------------------------------------------------
off_1AAAA:	dc.w AIZ2_Resize1-off_1AAAA
		dc.w AIZ2_Resize2-off_1AAAA
		dc.w AIZ2_Resize3-off_1AAAA
		dc.w AIZ2_Resize4-off_1AAAA
		dc.w AIZ2_Resize5-off_1AAAA
		dc.w AIZ2_Resize6-off_1AAAA
		dc.w AIZ2_Resize7-off_1AAAA
		dc.w AIZ2_Resize8-off_1AAAA
		dc.w AIZ2_SonicResizeEnd-off_1AAAA
; ---------------------------------------------------------------------------

AIZ2_Resize1:
		cmpi.w	#$380,(Camera_X_pos).w
		bcs.s	locret_1AAF2
		move.w	#$4F0,d0
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		addq.b	#2,(Dynamic_resize_routine).w
		cmpi.w	#1,(Apparent_zone_and_act).w
		bne.s	locret_1AAF2
		move.w	#$590,d0
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		move.w	#$F50,(Camera_min_X_pos).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AAF2:
		rts
; ---------------------------------------------------------------------------

AIZ2_Resize2:
		cmpi.w	#$300,(Camera_Y_pos).w
		bcc.s	loc_1AB48
		move.w	#$590,d0
		cmpi.w	#$ED0,(Camera_X_pos).w
		bcs.s	loc_1AB0C
		move.w	#$2B8,d0

loc_1AB0C:
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		cmpi.w	#$F50,(Camera_X_pos).w
		bcs.s	locret_1AB46
		move.w	#$F50,(Camera_min_X_pos).w
		tst.w	(Debug_placement_mode).w
		bne.s	loc_1AB42
		jsr	(Create_New_Sprite).l
		bne.s	loc_1AB42
		move.l	#Obj_AIZ_Miniboss,(a1)
		move.w	#$11F0,$10(a1)
		move.w	#$289,$14(a1)

loc_1AB42:
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AB46:
		rts
; ---------------------------------------------------------------------------

loc_1AB48:
		move.w	#$590,d0
		cmpi.w	#$ED0,(Camera_X_pos).w
		bcs.s	loc_1AB58
		move.w	#$450,d0

loc_1AB58:
		cmpi.w	#$11A0,(Camera_X_pos).w
		bcs.s	loc_1AB70
		move.w	#$820,d0
		move.w	d0,(Camera_target_max_Y_pos).w
		move.w	#$F80,(Target_water_level).w
		rts
; ---------------------------------------------------------------------------

loc_1AB70:
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		rts
; ---------------------------------------------------------------------------

AIZ2_Resize3:
		cmpi.w	#$1500,(Camera_X_pos).w
		bcs.s	locret_1AB92
		move.w	#$630,(Camera_max_Y_pos).w
		move.w	#$630,(Camera_target_max_Y_pos).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AB92:
		rts
; ---------------------------------------------------------------------------

AIZ2_Resize4:
		cmpi.w	#$3C00,(Camera_X_pos).w
		bcs.s	locret_1ABE2
		tst.b	(Kos_modules_left).w
		bne.s	locret_1ABE2
		lea	(AIZ2_16x16_BomberShip_Kos).l,a1
		lea	(Block_table+$AB8).w,a2
		jsr	(Queue_Kos).l
		lea	(AIZ2_8x8_BomberShip_KosM).l,a1
		move.w	#$3F80,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_AIZ2Bombership2_8x8).l,a1
		move.w	#$A000,d2
		jsr	(Queue_Kos_Module).l
		moveq	#$30,d0
		jsr	(LoadPalette_Immediate).l
		st	(Events_fg_5).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1ABE2:
		rts
; ---------------------------------------------------------------------------

AIZ2_Resize5:
		cmpi.w	#$3F00,(Camera_X_pos).w
		bcs.s	locret_1ABFC
		move.w	#$15A,d0
		move.w	d0,(Camera_min_Y_pos).w
		move.w	d0,(Camera_target_min_Y_pos).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1ABFC:
		rts
; ---------------------------------------------------------------------------

AIZ2_Resize6:
		cmpi.w	#$4000,(Camera_X_pos).w
		bcs.s	locret_1AC16
		move.w	#$15A,d0
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AC16:
		rts
; ---------------------------------------------------------------------------

AIZ2_Resize7:
		cmpi.w	#$4160,(Camera_X_pos).w
		bcs.s	locret_1AC28
		st	(Events_fg_4).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AC28:
		rts
; ---------------------------------------------------------------------------

AIZ2_Resize8:
		cmpi.w	#$4780,(Camera_X_pos).w
		bcs.s	locret_1AC36
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AC36:
		rts
; ---------------------------------------------------------------------------

AIZ2_SonicResizeEnd:
		rts
; ---------------------------------------------------------------------------

HCZ1_Resize:
		moveq	#0,d0
		move.b	(Dynamic_resize_routine).w,d0
		move.w	off_1AC48(pc,d0.w),d0
		jmp	off_1AC48(pc,d0.w)
; ---------------------------------------------------------------------------
off_1AC48:	dc.w loc_1AC4E-off_1AC48
		dc.w loc_1AC74-off_1AC48
		dc.w locret_1ACB0-off_1AC48
; ---------------------------------------------------------------------------

loc_1AC4E:
		cmpi.w	#$360,(Camera_X_pos).w
		bcc.s	locret_1AC72
		cmpi.w	#$3E0,(Camera_Y_pos).w
		bcs.s	locret_1AC72
		lea	(Normal_palette_line_4+$10).w,a1
		move.w	#$B80,(a1)+
		move.w	#$240,(a1)+
		move.w	#$220,(a1)+
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AC72:
		rts
; ---------------------------------------------------------------------------

loc_1AC74:
		cmpi.w	#$360,(Camera_X_pos).w
		bcc.s	loc_1AC8A
		cmpi.w	#$3E0,(Camera_Y_pos).w
		bcc.s	locret_1ACAE
		subq.b	#2,(Dynamic_resize_routine).w
		bra.s	loc_1AC9E
; ---------------------------------------------------------------------------

loc_1AC8A:
		cmpi.w	#$500,(Camera_Y_pos).w
		bcs.s	locret_1ACAE
		cmpi.w	#$900,(Camera_X_pos).w
		bcs.s	locret_1ACAE
		addq.b	#2,(Dynamic_resize_routine).w

loc_1AC9E:
		lea	(Normal_palette_line_4+$10).w,a1
		move.w	#$CEE,(a1)+
		move.w	#$ACE,(a1)+
		move.w	#$8A,(a1)+

locret_1ACAE:
		rts
; ---------------------------------------------------------------------------

locret_1ACB0:
		rts
; ---------------------------------------------------------------------------

HCZ2_Resize:
		moveq	#0,d0
		move.b	(Dynamic_resize_routine).w,d0
		move.w	off_1ACC0(pc,d0.w),d0
		jmp	off_1ACC0(pc,d0.w)
; ---------------------------------------------------------------------------
off_1ACC0:	dc.w loc_1ACC4-off_1ACC0
		dc.w locret_1ACD6-off_1ACC0
; ---------------------------------------------------------------------------

loc_1ACC4:
		cmpi.w	#$C00,(Camera_X_pos).w
		bcs.s	locret_1ACD4
		st	(Events_fg_5).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1ACD4:
		rts
; ---------------------------------------------------------------------------

locret_1ACD6:
		rts
; ---------------------------------------------------------------------------

MGZ_Resize:
		moveq	#0,d0
		move.b	(Dynamic_resize_routine).w,d0
		move.w	off_1ACE6(pc,d0.w),d0
		jmp	off_1ACE6(pc,d0.w)
; ---------------------------------------------------------------------------
off_1ACE6:	dc.w loc_1ACEC-off_1ACE6
		dc.w loc_1AD2A-off_1ACE6
		dc.w locret_1AD84-off_1ACE6
; ---------------------------------------------------------------------------

loc_1ACEC:
		move.w	(Camera_Y_pos).w,d0
		cmpi.w	#$600,d0
		bcs.s	locret_1AD28
		cmpi.w	#$700,d0
		bcc.s	locret_1AD28
		cmpi.w	#$3A00,(Camera_X_pos).w
		bcs.s	locret_1AD28
		move.w	#$6A0,d0
		move.w	d0,(Camera_min_Y_pos).w
		move.w	d0,(Camera_target_min_Y_pos).w
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		move.w	#$3C80,d0
		move.w	d0,(Camera_max_X_pos).w
		move.w	d0,(Camera_target_max_X_pos).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1AD28:
		rts
; ---------------------------------------------------------------------------

loc_1AD2A:
		cmpi.w	#$3A00,(Camera_X_pos).w
		bcs.s	loc_1AD64
		move.w	#$3C80,d0
		cmp.w	(Camera_X_pos).w,d0
		bhi.s	locret_1AD82
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_target_min_X_pos).w
		jsr	(Create_New_Sprite).l
		bne.s	loc_1AD5E
		move.l	#Obj_A1_1_MGZ2_Boss,(a1)
		move.w	#$3D20,$10(a1)
		move.w	#$668,$14(a1)

loc_1AD5E:
		addq.b	#2,(Dynamic_resize_routine).w
		rts
; ---------------------------------------------------------------------------

loc_1AD64:
		move.l	#$1000,d0
		move.l	d0,(Camera_min_Y_pos).w
		move.l	d0,(Camera_target_min_Y_pos).w
		move.w	#$6000,d0
		move.w	d0,(Camera_max_X_pos).w
		move.w	d0,(Camera_target_max_X_pos).w
		subq.b	#2,(Dynamic_resize_routine).w

locret_1AD82:
		rts
; ---------------------------------------------------------------------------

locret_1AD84:
		rts
; ---------------------------------------------------------------------------

No_Resize2:
		rts
; ---------------------------------------------------------------------------

ICZ1_Resize:
		moveq	#0,d0
		move.b	(Dynamic_resize_routine).w,d0
		move.w	off_1AD96(pc,d0.w),d0
		jmp	off_1AD96(pc,d0.w)
; ---------------------------------------------------------------------------
off_1AD96:	dc.w loc_1AD9C-off_1AD96
		dc.w loc_1ADB6-off_1AD96
		dc.w locret_1ADC8-off_1AD96
; ---------------------------------------------------------------------------

loc_1AD9C:
		cmpi.w	#$3700,(Camera_X_pos).w
		bcs.s	locret_1ADB4
		cmpi.w	#$68C,(Camera_Y_pos).w
		bcs.s	locret_1ADB4
		st	(Events_fg_5).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1ADB4:
		rts
; ---------------------------------------------------------------------------

loc_1ADB6:
		cmpi.w	#$3940,(Camera_X_pos).w
		bcs.s	locret_1ADC6
		st	(Events_fg_5).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1ADC6:
		rts
; ---------------------------------------------------------------------------

locret_1ADC8:
		rts
; ---------------------------------------------------------------------------

ICZ2_Resize:
		moveq	#0,d0
		move.b	(Dynamic_resize_routine).w,d0
		move.w	off_1ADD8(pc,d0.w),d0
		jmp	off_1ADD8(pc,d0.w)
; ---------------------------------------------------------------------------
off_1ADD8:	dc.w loc_1ADDC-off_1ADD8
		dc.w locret_1ADF8-off_1ADD8
; ---------------------------------------------------------------------------

loc_1ADDC:
		cmpi.w	#$740,(Camera_X_pos).w
		bcs.s	locret_1ADF6
		cmpi.w	#$400,(Camera_Y_pos).w
		bcc.s	locret_1ADF6
		move.w	#$740,(Camera_min_X_pos).w
		addq.b	#2,(Dynamic_resize_routine).w

locret_1ADF6:
		rts
; ---------------------------------------------------------------------------

locret_1ADF8:
		rts
; ---------------------------------------------------------------------------

No_Resize:
		rts
; ---------------------------------------------------------------------------

LBZ2_Resize:
		moveq	#0,d0
		move.b	(Dynamic_resize_routine).w,d0
		move.w	off_1AE0A(pc,d0.w),d0
		jmp	off_1AE0A(pc,d0.w)
; ---------------------------------------------------------------------------
off_1AE0A:	dc.w loc_1AE0E-off_1AE0A
		dc.w locret_1AE66-off_1AE0A
; ---------------------------------------------------------------------------

loc_1AE0E:
		cmpi.w	#$3BC0,(Camera_X_pos).w
		bcs.s	locret_1AE64
		cmpi.w	#$500,(Camera_Y_pos).w
		bcs.s	locret_1AE64
		addq.b	#2,(Dynamic_resize_routine).w
		lea	(LBZ2_16x16_DeathEgg_Kos).l,a1
		lea	(Block_table).w,a2
		jsr	(Queue_Kos).l
		lea	(LBZ2_128x128_DeathEgg_Kos).l,a1
		lea	(RAM_start).l,a2
		jsr	(Queue_Kos).l
		lea	(LBZ2_8x8_DeathEgg_KosM).l,a1
		move.w	#0,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_LBZ2DeathEgg2_8x8).l,a1
		move.w	#$B400,d2
		jsr	(Queue_Kos_Module).l

locret_1AE64:
		rts
; ---------------------------------------------------------------------------

locret_1AE66:
		rts
; ---------------------------------------------------------------------------

No_Resize3:
		rts

; =============== S U B R O U T I N E =======================================


Resize_MaxYFromX:
		move.w	(Camera_X_pos).w,d0

loc_1AE6E:
		move.l	(a1)+,d1
		cmp.w	d1,d0
		bhi.s	loc_1AE6E
		swap	d1
		tst.w	d1
		bpl.s	loc_1AE82
		andi.w	#$7FFF,d1
		move.w	d1,(Camera_max_Y_pos).w

loc_1AE82:
		move.w	d1,(Camera_target_max_Y_pos).w
		rts
; End of function Resize_MaxYFromX


; =============== S U B R O U T I N E =======================================


nullsub_5:
		rts
; End of function nullsub_5


; =============== S U B R O U T I N E =======================================


Draw_LRZ_Special_Rock_Sprites:
		moveq	#0,d0
		move.b	(LRZ_rocks_routine).w,d0
		move.w	off_1AE98(pc,d0.w),d0
		jmp	off_1AE98(pc,d0.w)
; End of function Draw_LRZ_Special_Rock_Sprites

; ---------------------------------------------------------------------------
off_1AE98:	dc.w loc_1AE9C-off_1AE98
		dc.w loc_1AECC-off_1AE98
; ---------------------------------------------------------------------------

loc_1AE9C:
		addq.b	#2,(LRZ_rocks_routine).w
		move.w	(Camera_X_pos).w,d4
		subq.w	#8,d4
		bhi.s	loc_1AEAE
		moveq	#1,d4
		bra.s	loc_1AEAE
; ---------------------------------------------------------------------------

loc_1AEAC:
		addq.l	#6,a1

loc_1AEAE:
		cmp.w	2(a1),d4
		bhi.s	loc_1AEAC
		move.l	a1,(LRZ_rocks_addr_front).w
		addi.w	#$150,d4
		bra.s	loc_1AEC0
; ---------------------------------------------------------------------------

loc_1AEBE:
		addq.l	#6,a1

loc_1AEC0:
		cmp.w	2(a1),d4
		bhi.s	loc_1AEBE
		move.l	a1,(LRZ_rocks_addr_back).w
		rts
; ---------------------------------------------------------------------------

loc_1AECC:
		movea.l	(LRZ_rocks_addr_front).w,a1
		move.w	(Camera_X_pos).w,d4
		subq.w	#8,d4
		bhi.s	loc_1AEDE
		moveq	#1,d4
		bra.s	loc_1AEDE
; ---------------------------------------------------------------------------

loc_1AEDC:
		addq.l	#6,a1

loc_1AEDE:
		cmp.w	2(a1),d4
		bhi.s	loc_1AEDC
		bra.s	loc_1AEE8
; ---------------------------------------------------------------------------

loc_1AEE6:
		subq.l	#6,a1

loc_1AEE8:
		cmp.w	-4(a1),d4
		bls.s	loc_1AEE6
		move.l	a1,(LRZ_rocks_addr_front).w
		movea.l	(LRZ_rocks_addr_back).w,a2
		addi.w	#$150,d4
		bra.s	loc_1AEFE
; ---------------------------------------------------------------------------

loc_1AEFC:
		addq.l	#6,a2

loc_1AEFE:
		cmp.w	2(a2),d4
		bhi.s	loc_1AEFC
		bra.s	loc_1AF08
; ---------------------------------------------------------------------------

loc_1AF06:
		subq.l	#6,a2

loc_1AF08:
		cmp.w	-4(a2),d4
		bls.s	loc_1AF06
		move.l	a2,(LRZ_rocks_addr_back).w
		rts

; =============== S U B R O U T I N E =======================================


sub_1AF14:
		movea.l	(LRZ_rocks_addr_front).w,a0
		move.l	(LRZ_rocks_addr_back).w,d2
		sub.l	a0,d2
		beq.s	locret_1AF68
		lea	LRZ_Rock_SpriteData(pc),a1
		move.w	#$78,d3
		move.w	4(a3),d4
		move.w	#$F0,d5

loc_1AF30:
		move.w	4(a0),d1
		sub.w	d4,d1
		addq.w	#8,d1
		cmp.w	d5,d1
		bcc.s	loc_1AF62
		add.w	d3,d1
		move.w	2(a0),d0
		sub.w	(a3),d0
		addi.w	#$80,d0
		move.w	(a0),d6
		lsl.w	#3,d6
		lea	(a1,d6.w),a2
		add.w	(a2)+,d1
		move.w	d1,(a6)+
		move.w	(a2)+,d6
		move.b	d6,(a6)
		addq.w	#2,a6
		move.w	(a2)+,(a6)+
		add.w	(a2)+,d0
		move.w	d0,(a6)+
		subq.w	#1,d7

loc_1AF62:
		addq.l	#6,a0
		subq.w	#6,d2
		bne.s	loc_1AF30

locret_1AF68:
		rts
; End of function sub_1AF14

; ---------------------------------------------------------------------------
LRZ_Rock_SpriteData:
		dc.w  $FFF8,     5, $C400, $FFF8
		dc.w  $FFF8,     5, $CC00, $FFF8
		dc.w  $FFF8,     5, $C404, $FFF8
		dc.w  $FFF8,     5, $C408, $FFF8
		dc.w  $FFF8,     5, $CC08, $FFF8
		dc.w  $FFF8,     5, $CC04, $FFF8
		dc.w      0,     4, $C40C, $FFF8
		dc.w      0,     4, $C40E, $FFF8
		dc.w      0,     4, $CC0E, $FFF8
		dc.w      0,     4, $CC0C, $FFF8
		dc.w  $FFF8,     5, $E410, $FFF8
; ---------------------------------------------------------------------------

Obj_PathSwap:
		move.l	#Map_PathSwap,$C(a0)
		move.w	#make_art_tile(ArtTile_Ring,1,0),$A(a0)
		ori.b	#4,4(a0)
		move.b	#$40,7(a0)
		move.b	#$40,6(a0)
		move.w	#$280,8(a0)
		move.b	$2C(a0),d0
		btst	#2,d0
		beq.s	loc_1B050
		andi.w	#7,d0
		move.b	d0,$22(a0)
		andi.w	#3,d0
		add.w	d0,d0
		move.w	word_1B048(pc,d0.w),$32(a0)
		move.w	$14(a0),d1
		lea	(Player_1).w,a1
		cmp.w	$14(a1),d1
		bcc.s	loc_1B01A
		move.b	#1,$34(a0)

loc_1B01A:
		lea	(Player_2).w,a1
		cmp.w	$14(a1),d1
		bcc.s	loc_1B02A
		move.b	#1,$35(a0)

loc_1B02A:
		move.l	#loc_1B208,(a0)
		tst.w	(Competition_mode).w
		beq.w	loc_1B208
		move.l	#loc_1B232,(a0)
		move.w	#$63D2,$A(a0)
		bra.w	loc_1B232
; ---------------------------------------------------------------------------
word_1B048:	dc.w $20
		dc.w $40
		dc.w $80
		dc.w $100
; ---------------------------------------------------------------------------

loc_1B050:
		andi.w	#3,d0
		move.b	d0,$22(a0)
		add.w	d0,d0
		move.w	word_1B048(pc,d0.w),$32(a0)
		move.w	$10(a0),d1
		lea	(Player_1).w,a1
		cmp.w	$10(a1),d1
		bcc.s	loc_1B074
		move.b	#1,$34(a0)

loc_1B074:
		lea	(Player_2).w,a1
		cmp.w	$10(a1),d1
		bcc.s	loc_1B084
		move.b	#1,$35(a0)

loc_1B084:
		move.l	#loc_1B09E,(a0)
		tst.w	(Competition_mode).w
		beq.s	loc_1B09E
		move.l	#loc_1B0C8,(a0)
		move.w	#$63D2,$A(a0)
		bra.s	loc_1B0C8
; ---------------------------------------------------------------------------

loc_1B09E:
		tst.w	(Debug_placement_mode).w
		bne.w	loc_1B0BA
		move.w	$10(a0),d1
		lea	$34(a0),a2
		lea	(Player_1).w,a1
		bsr.s	sub_1B0F0
		lea	(Player_2).w,a1
		bsr.s	sub_1B0F0

loc_1B0BA:
		tst.w	(Debug_mode_flag).w
		beq.w	Delete_Sprite_If_Not_In_Range
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_1B0C8:
		move.w	$10(a0),d1
		lea	$34(a0),a2
		lea	(Player_1).w,a1
		bsr.s	sub_1B0F0
		lea	(Player_2).w,a1
		bsr.s	sub_1B0F0
		lea	(Breathing_bubbles).w,a1
		tst.w	(Debug_mode_flag).w
		beq.w	sub_1B0F0
		bsr.s	sub_1B0F0
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_1B0F0:
		tst.b	(a2)+
		bne.w	loc_1B182
		cmp.w	$10(a1),d1
		bhi.w	locret_1B206
		move.b	#1,-1(a2)
		move.w	$14(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		move.w	$14(a1),d4
		cmp.w	d2,d4
		blt.w	locret_1B206
		cmp.w	d3,d4
		bge.w	locret_1B206
		move.b	$2C(a0),d0
		bpl.s	loc_1B132
		btst	#1,$2A(a1)
		bne.w	locret_1B206

loc_1B132:
		move.w	$10(a1),d2
		sub.w	d1,d2
		bcc.s	loc_1B13C
		neg.w	d2

loc_1B13C:
		cmpi.w	#$40,d2
		bcc.w	locret_1B206
		btst	#0,4(a0)
		bne.s	loc_1B16A
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)
		btst	#3,d0
		beq.s	loc_1B16A
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_1B16A:
		andi.w	#$7FFF,$A(a1)
		btst	#5,d0
		beq.w	locret_1B206
		ori.w	#$8000,$A(a1)
		bra.w	locret_1B206
; ---------------------------------------------------------------------------

loc_1B182:
		cmp.w	$10(a1),d1
		bls.w	locret_1B206
		move.b	#0,-1(a2)
		move.w	$14(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		move.w	$14(a1),d4
		cmp.w	d2,d4
		blt.w	locret_1B206
		cmp.w	d3,d4
		bge.w	locret_1B206
		move.b	$2C(a0),d0
		bpl.s	loc_1B1BE
		btst	#1,$2A(a1)
		bne.w	locret_1B206

loc_1B1BE:
		move.w	$10(a1),d2
		sub.w	d1,d2
		bcc.s	loc_1B1C8
		neg.w	d2

loc_1B1C8:
		cmpi.w	#$40,d2
		bcc.s	locret_1B206
		btst	#0,4(a0)
		bne.s	loc_1B1F4
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)
		btst	#4,d0
		beq.s	loc_1B1F4
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_1B1F4:
		andi.w	#$7FFF,$A(a1)
		btst	#6,d0
		beq.s	locret_1B206
		ori.w	#$8000,$A(a1)

locret_1B206:
		rts
; End of function sub_1B0F0

; ---------------------------------------------------------------------------

loc_1B208:
		tst.w	(Debug_placement_mode).w
		bne.w	loc_1B224
		move.w	$14(a0),d1
		lea	$34(a0),a2
		lea	(Player_1).w,a1
		bsr.s	sub_1B25A
		lea	(Player_2).w,a1
		bsr.s	sub_1B25A

loc_1B224:
		tst.w	(Debug_mode_flag).w
		beq.w	Delete_Sprite_If_Not_In_Range
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_1B232:
		move.w	$14(a0),d1
		lea	$34(a0),a2
		lea	(Player_1).w,a1
		bsr.s	sub_1B25A
		lea	(Player_2).w,a1
		bsr.s	sub_1B25A
		lea	(Breathing_bubbles).w,a1
		tst.w	(Debug_mode_flag).w
		beq.w	sub_1B25A
		bsr.s	sub_1B25A
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_1B25A:
		tst.b	(a2)+
		bne.w	loc_1B2EC
		cmp.w	$14(a1),d1
		bhi.w	locret_1B370
		move.b	#1,-1(a2)
		move.w	$10(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		move.w	$10(a1),d4
		cmp.w	d2,d4
		blt.w	locret_1B370
		cmp.w	d3,d4
		bge.w	locret_1B370
		move.b	$2C(a0),d0
		bpl.s	loc_1B29C
		btst	#1,$2A(a1)
		bne.w	locret_1B370

loc_1B29C:
		move.w	$14(a1),d2
		sub.w	d1,d2
		bcc.s	loc_1B2A6
		neg.w	d2

loc_1B2A6:
		cmpi.w	#$40,d2
		bcc.w	locret_1B370
		btst	#0,4(a0)
		bne.s	loc_1B2D4
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)
		btst	#3,d0
		beq.s	loc_1B2D4
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_1B2D4:
		andi.w	#$7FFF,$A(a1)
		btst	#5,d0
		beq.w	locret_1B370
		ori.w	#$8000,$A(a1)
		bra.w	locret_1B370
; ---------------------------------------------------------------------------

loc_1B2EC:
		cmp.w	$14(a1),d1
		bls.w	locret_1B370
		move.b	#0,-1(a2)
		move.w	$10(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		move.w	$10(a1),d4
		cmp.w	d2,d4
		blt.w	locret_1B370
		cmp.w	d3,d4
		bge.w	locret_1B370
		move.b	$2C(a0),d0
		bpl.s	loc_1B328
		btst	#1,$2A(a1)
		bne.w	locret_1B370

loc_1B328:
		move.w	$14(a1),d2
		sub.w	d1,d2
		bcc.s	loc_1B332
		neg.w	d2

loc_1B332:
		cmpi.w	#$40,d2
		bcc.s	locret_1B370
		btst	#0,4(a0)
		bne.s	loc_1B35E
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)
		btst	#4,d0
		beq.s	loc_1B35E
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_1B35E:
		andi.w	#$7FFF,$A(a1)
		btst	#6,d0
		beq.s	locret_1B370
		ori.w	#$8000,$A(a1)

locret_1B370:
		rts
; End of function sub_1B25A

; ---------------------------------------------------------------------------
Map_PathSwap:	include "General/Sprites/Level Misc/Map - Path Swap.asm"
; ---------------------------------------------------------------------------

Obj_Monitor:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	Monitor_Index(pc,d0.w),d1
		jmp	Monitor_Index(pc,d1.w)
; ---------------------------------------------------------------------------
Monitor_Index:	dc.w Obj_MonitorInit-Monitor_Index
		dc.w Obj_MonitorMain-Monitor_Index
		dc.w Obj_MonitorBreak-Monitor_Index
		dc.w Obj_MonitorAnimate-Monitor_Index
		dc.w loc_1B504-Monitor_Index
; ---------------------------------------------------------------------------

Obj_MonitorInit:
		addq.b	#2,5(a0)
		move.b	#$F,$1E(a0)
		move.b	#$F,$1F(a0)
		move.l	#Map_Monitor,$C(a0)
		move.w	#ArtTile_Monitors,$A(a0)
		move.b	#4,4(a0)
		move.w	#$180,8(a0)
		move.b	#$E,7(a0)
		move.b	#$10,6(a0)
		move.w	$48(a0),d0
		beq.s	loc_1B488
		movea.w	d0,a2
		btst	#0,(a2)
		beq.s	loc_1B488
		move.b	#8,5(a0)
		move.b	#$B,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_1B488:
		move.b	#$46,$28(a0)
		move.b	$2C(a0),$20(a0)
		tst.w	(Competition_mode).w
		beq.s	Obj_MonitorMain
		move.b	#9,$20(a0)

Obj_MonitorMain:
		move.b	$3C(a0),d0
		beq.s	loc_1B4C8
		bsr.w	MoveSprite
		tst.w	$1A(a0)
		bmi.s	loc_1B4C8
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.w	loc_1B4C8
		add.w	d1,$14(a0)
		clr.w	$1A(a0)
		clr.b	$3C(a0)

loc_1B4C8:
		move.w	#$19,d1
		move.w	#$10,d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObject_Monitor_SonicKnux
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	SolidObject_Monitor_Tails
		jsr	(Add_SpriteToCollisionResponseList).l

Obj_MonitorAnimate:
		lea	(Ani_Monitor).l,a1
		bsr.w	Animate_Sprite

loc_1B504:
		bra.w	Sprite_OnScreen_Test

; =============== S U B R O U T I N E =======================================


SolidObject_Monitor_SonicKnux:
		btst	d6,$2A(a0)
		bne.s	Monitor_ChkOverEdge
		cmpi.b	#2,$20(a1)
		bne.w	SolidObject_cont
		rts
; End of function SolidObject_Monitor_SonicKnux


; =============== S U B R O U T I N E =======================================


SolidObject_Monitor_Tails:
		btst	d6,$2A(a0)
		bne.s	Monitor_ChkOverEdge
		tst.w	(Competition_mode).w
		beq.w	SolidObject_cont
		cmpi.b	#2,$20(a1)
		bne.w	SolidObject_cont
		rts
; ---------------------------------------------------------------------------

Monitor_ChkOverEdge:
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1B550
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1B550
		cmp.w	d2,d0
		bcs.s	Monitor_CharStandOn

loc_1B550:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

Monitor_CharStandOn:
		move.w	d4,d2
		bsr.w	MvSonicOnPtfm
		moveq	#0,d4
		rts
; End of function SolidObject_Monitor_Tails

; ---------------------------------------------------------------------------

Obj_MonitorBreak:
		move.b	$2A(a0),d0
		andi.b	#$78,d0
		beq.s	loc_1B59E
		move.b	d0,d1
		andi.b	#$28,d1
		beq.s	loc_1B58C
		andi.b	#$D7,(Player_1+status).w
		ori.b	#2,(Player_1+status).w

loc_1B58C:
		andi.b	#$50,d0
		beq.s	loc_1B59E
		andi.b	#$D7,(Player_2+status).w
		ori.b	#2,(Player_2+status).w

loc_1B59E:
		clr.b	$2A(a0)
		addq.b	#2,5(a0)
		move.b	#0,$28(a0)
		bsr.w	Create_New_Sprite
		bne.s	loc_1B5D0
		move.l	#Obj_MonitorContents,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	$20(a0),$20(a1)
		move.w	$42(a0),$42(a1)

loc_1B5D0:
		bsr.w	Create_New_Sprite
		bne.s	loc_1B5EC
		move.l	#Obj_Explosion,(a1)
		addq.b	#2,5(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)

loc_1B5EC:
		move.w	$48(a0),d0
		beq.s	loc_1B5F8
		movea.w	d0,a2
		bset	#0,(a2)

loc_1B5F8:
		move.b	#$A,$20(a0)
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

Obj_MonitorContents:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_1B610(pc,d0.w),d1
		jmp	off_1B610(pc,d1.w)
; ---------------------------------------------------------------------------
off_1B610:	dc.w loc_1B616-off_1B610
		dc.w loc_1B656-off_1B610
		dc.w loc_1B8E4-off_1B610
; ---------------------------------------------------------------------------

loc_1B616:
		addq.b	#2,5(a0)
		move.w	#make_art_tile(ArtTile_Monitors,0,1),$A(a0)
		move.b	#$24,4(a0)
		move.w	#$180,8(a0)
		move.b	#8,7(a0)
		move.w	#-$300,$1A(a0)
		moveq	#0,d0
		move.b	$20(a0),d0
		addq.b	#1,d0
		move.b	d0,$22(a0)
		movea.l	#Map_Monitor,a1
		add.b	d0,d0
		adda.w	(a1,d0.w),a1
		addq.w	#2,a1
		move.l	a1,$C(a0)

loc_1B656:
		bsr.s	sub_1B65C
		bra.w	Draw_Sprite

; =============== S U B R O U T I N E =======================================


sub_1B65C:
		tst.w	$1A(a0)
		bpl.w	loc_1B670
		bsr.w	MoveSprite2
		addi.w	#$18,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_1B670:
		addq.b	#2,5(a0)
		move.w	#$1D,$24(a0)
		movea.w	$42(a0),a1
		lea	(Monitors_broken).w,a2
		cmpa.w	#Player_1,a1
		beq.s	loc_1B68C
		lea	(Monitors_broken_P2).w,a2

loc_1B68C:
		moveq	#0,d0
		move.b	$20(a0),d0
		add.w	d0,d0
		move.w	off_1B69C(pc,d0.w),d0
		jmp	off_1B69C(pc,d0.w)
; End of function sub_1B65C

; ---------------------------------------------------------------------------
off_1B69C:	dc.w loc_1B6B0-off_1B69C
		dc.w Monitor_Give_1up-off_1B69C
		dc.w loc_1B6B0-off_1B69C
		dc.w Monitor_Give_Rings-off_1B69C
		dc.w Monitor_Give_Super_Sneakers-off_1B69C
		dc.w Monitor_Give_Fire_Shield-off_1B69C
		dc.w Monitor_Give_Lightning_Shield-off_1B69C
		dc.w Monitor_Give_Bubble_Shield-off_1B69C
		dc.w Monitor_Give_Invincibility-off_1B69C
		dc.w Monitor_Give_SuperSonic-off_1B69C
; ---------------------------------------------------------------------------

loc_1B6B0:
		addq.w	#1,(a2)
		bra.w	sub_228EC
; ---------------------------------------------------------------------------

Monitor_Give_1up:
		addq.w	#1,(Monitors_broken).w
		addq.b	#1,(Life_count).w
		addq.b	#1,(Update_HUD_life_count).w
		moveq	#signextendB(mus_ExtraLife),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

Monitor_Give_Rings:
		addq.w	#1,(a2)
		lea	(Ring_count).w,a2
		lea	(Update_HUD_ring_count).w,a3
		lea	(Extra_life_flags).w,a4
		lea	(Total_ring_count).w,a5
		addi.w	#$A,(a5)
		cmpi.w	#$3E7,(a5)
		bcs.s	loc_1B6EA
		move.w	#$3E7,(a5)

loc_1B6EA:
		addi.w	#$A,(a2)
		cmpi.w	#$3E7,(a2)
		bcs.s	loc_1B6F8
		move.w	#$3E7,(a2)

loc_1B6F8:
		ori.b	#1,(a3)
		cmpi.w	#$64,(a2)
		bcs.s	loc_1B714
		bset	#1,(a4)
		beq.s	loc_1B71C
		cmpi.w	#$C8,(a2)
		bcs.s	loc_1B714
		bset	#2,(a4)
		beq.s	loc_1B71C

loc_1B714:
		moveq	#signextendB(sfx_RingRight),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

loc_1B71C:
		cmpa.w	#Player_1,a1
		beq.w	Monitor_Give_1up
		bra.w	loc_1B6B0
; ---------------------------------------------------------------------------

Monitor_Give_Super_Sneakers:
		addq.w	#1,(a2)
		bset	#2,$2B(a1)
		move.b	#$96,$36(a1)
		cmpa.w	#Player_1,a1
		bne.s	loc_1B758
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_1B758
		move.w	#$C00,(Max_speed).w
		move.w	#$18,(Acceleration).w
		move.w	#$80,(Deceleration).w
		bra.s	loc_1B76A
; ---------------------------------------------------------------------------

loc_1B758:
		move.w	#$C00,(Max_speed_P2).w
		move.w	#$18,(Acceleration_P2).w
		move.w	#$80,(Deceleration_P2).w

loc_1B76A:
		moveq	#8,d0
		jmp	(Change_Music_Tempo).l
; ---------------------------------------------------------------------------

Monitor_Give_Fire_Shield:
		addq.w	#1,(a2)
		andi.b	#$8E,$2B(a1)
		bset	#0,$2B(a1)
		bset	#4,$2B(a1)
		moveq	#signextendB(sfx_FireShield),d0
		jsr	(Play_Sound).l
		tst.b	$43(a0)
		bne.s	loc_1B7A2
		move.l	#Obj_Fire_Shield,(Shield).w
		move.w	a1,(Shield+parent).w
		rts
; ---------------------------------------------------------------------------

loc_1B7A2:
		move.l	#Obj_Fire_Shield,(Shield_P2).w
		move.w	a1,(Shield_P2+parent).w
		rts
; ---------------------------------------------------------------------------

Monitor_Give_Lightning_Shield:
		addq.w	#1,(a2)
		andi.b	#$8E,$2B(a1)
		bset	#0,$2B(a1)
		bset	#5,$2B(a1)
		moveq	#signextendB(sfx_ElectricShield),d0
		jsr	(Play_Sound).l
		tst.b	$43(a0)
		bne.s	loc_1B7E0
		move.l	#Obj_Lightning_Shield,(Shield).w
		move.w	a1,(Shield+parent).w
		rts
; ---------------------------------------------------------------------------

loc_1B7E0:
		move.l	#Obj_Lightning_Shield,(Shield_P2).w
		move.w	a1,(Shield_P2+parent).w
		rts
; ---------------------------------------------------------------------------

Monitor_Give_Bubble_Shield:
		addq.w	#1,(a2)
		andi.b	#$8E,$2B(a1)
		bset	#0,$2B(a1)
		bset	#6,$2B(a1)
		moveq	#signextendB(sfx_BubbleShield),d0
		jsr	(Play_Sound).l
		tst.b	$43(a0)
		bne.s	loc_1B81E
		move.l	#Obj_Bubble_Shield,(Shield).w
		move.w	a1,(Shield+parent).w
		rts
; ---------------------------------------------------------------------------

loc_1B81E:
		move.l	#Obj_Bubble_Shield,(Shield_P2).w
		move.w	a1,(Shield_P2+parent).w
		rts
; ---------------------------------------------------------------------------

Monitor_Give_Invincibility:
		addq.w	#1,(a2)
		tst.b	(Super_Sonic_Knux_flag).w
		bne.s	locret_1B876
		bset	#1,$2B(a1)
		move.b	#$96,$35(a1)
		tst.b	(Boss_flag).w
		bne.s	loc_1B856
		cmpi.b	#$C,$2C(a1)
		bls.s	loc_1B856
		moveq	#signextendB(mus_Invincibility),d0
		jsr	(Play_Sound).l

loc_1B856:
		tst.b	$43(a0)
		bne.s	loc_1B86A
		move.l	#Obj_Invincibility,(Invincibility_stars).w
		move.w	a1,(Invincibility_stars+parent).w
		rts
; ---------------------------------------------------------------------------

loc_1B86A:
		move.l	#Obj_Invincibility,(Invincibility_stars_P2).w
		move.w	a1,(Invincibility_stars_P2+parent).w

locret_1B876:
		rts
; ---------------------------------------------------------------------------

Monitor_Give_SuperSonic:
		addq.w	#1,(a2)
		addi.w	#50,(Ring_count).w
		move.b	#1,(Super_palette_status).w
		move.b	#$F,(Palette_timer).w
		move.b	#1,(Super_Sonic_Knux_flag).w
		move.w	#60,(Super_frame_count).w
		move.l	#Map_SuperSonic,(Player_1+mappings).w
		move.b	#$81,(Player_1+object_control).w
		move.b	#$1F,(Player_1+anim).w
		move.l	#Obj_SuperSonic_Stars,(Super_stars).w
		move.w	#$A00,(Max_speed).w
		move.w	#$30,(Acceleration).w
		move.w	#$100,(Deceleration).w
		move.b	#0,(Player_1+invincibility_timer).w
		bset	#1,$2B(a1)
		moveq	#signextendB(sfx_SuperAlt),d0
		jsr	(Play_Sound_2).l
		moveq	#signextendB(mus_Invincibility),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------

loc_1B8E4:
		subq.w	#1,$24(a0)
		bmi.w	Delete_Current_Sprite
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------
Ani_Monitor:	include "General/Sprites/Monitors/Anim - Monitor.asm"
Map_Monitor:	include "General/Sprites/Monitors/Map - Monitor S3.asm"

; =============== S U B R O U T I N E =======================================


SolidObjectFull:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_1BA2A
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		tst.b	4(a1)
		bpl.w	locret_1BA6A
		addq.b	#1,d6
; End of function SolidObjectFull


; =============== S U B R O U T I N E =======================================


sub_1BA2A:
		btst	d6,$2A(a0)
		beq.w	loc_1BD3E
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1BA4E
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1BA4E
		cmp.w	d2,d0
		bcs.s	loc_1BA62

loc_1BA4E:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1BA62:
		move.w	d4,d2
		bsr.w	MvSonicOnPtfm
		moveq	#0,d4

locret_1BA6A:
		rts
; End of function sub_1BA2A


; =============== S U B R O U T I N E =======================================


SolidObjectFull2:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	SolidObjectFull2_1P
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		addq.b	#1,d6
; End of function SolidObjectFull2


; =============== S U B R O U T I N E =======================================


SolidObjectFull2_1P:
		btst	d6,$2A(a0)
		beq.w	SolidObject_cont
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1BAA6
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1BAA6
		cmp.w	d2,d0
		bcs.s	loc_1BABA

loc_1BAA6:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1BABA:
		move.w	d4,d2
		bsr.w	MvSonicOnPtfm
		moveq	#0,d4
		rts
; End of function SolidObjectFull2_1P


; =============== S U B R O U T I N E =======================================


sub_1BAC4:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_1BADA
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		addq.b	#1,d6
; End of function sub_1BAC4


; =============== S U B R O U T I N E =======================================


sub_1BADA:
		btst	d6,$2A(a0)
		beq.w	loc_1BC84
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1BAFE
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1BAFE
		cmp.w	d2,d0
		bcs.s	loc_1BB12

loc_1BAFE:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1BB12:
		move.w	d4,d2
		bsr.w	SolidObjSloped2
		move.w	d6,d4
		addi.b	#$11,d4
		bset	d4,d6
		moveq	#0,d4
		rts
; End of function sub_1BADA

; ---------------------------------------------------------------------------
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_1BB3A
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		addq.b	#1,d6

; =============== S U B R O U T I N E =======================================


sub_1BB3A:
		btst	d6,$2A(a0)
		beq.w	loc_1BCDE
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1BB5E
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1BB5E
		cmp.w	d2,d0
		bcs.s	loc_1BB72

loc_1BB5E:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1BB72:
		move.w	d4,d2
		bsr.w	SolidObjSloped4
		moveq	#0,d4
		rts
; End of function sub_1BB3A


; =============== S U B R O U T I N E =======================================


sub_1BB7C:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_1BB92
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		addq.b	#1,d6
; End of function sub_1BB7C


; =============== S U B R O U T I N E =======================================


sub_1BB92:
		btst	d6,$2A(a0)
		beq.w	loc_1BC84
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1BBB6
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1BBB6
		cmp.w	d2,d0
		bcs.s	loc_1BBC4

loc_1BBB6:
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1BBC4:
		move.w	d4,d2
		bsr.w	SolidObjSloped2
		move.w	d6,d4
		addi.b	#$11,d4
		bset	d4,d6
		moveq	#0,d4
		rts
; End of function sub_1BB92


; =============== S U B R O U T I N E =======================================


SolidObjectFull_Offset:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_1BBEC
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		addq.b	#1,d6
; End of function SolidObjectFull_Offset


; =============== S U B R O U T I N E =======================================


sub_1BBEC:
		btst	d6,$2A(a0)
		beq.w	loc_1BC42
		btst	#1,$2A(a1)
		bne.s	loc_1BC0E
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1BC0E
		add.w	d1,d1
		cmp.w	d1,d0
		bcs.s	loc_1BC22

loc_1BC0E:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1BC22:
		move.w	$14(a0),d0
		sub.w	d2,d0
		add.w	d3,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		sub.w	d1,d0
		move.w	d0,$14(a1)
		sub.w	$10(a0),d4
		sub.w	d4,$10(a1)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1BC42:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.w	loc_1BE2E
		move.w	d1,d4
		add.w	d4,d4
		cmp.w	d4,d0
		bhi.w	loc_1BE2E
		move.w	$14(a0),d5
		add.w	d3,d5
		move.b	$1E(a1),d3
		ext.w	d3
		add.w	d3,d2
		move.w	$14(a1),d3
		sub.w	d5,d3
		addq.w	#4,d3
		add.w	d2,d3
		bmi.w	loc_1BE2E
		move.w	d2,d4
		add.w	d4,d4
		cmp.w	d4,d3
		bcc.w	loc_1BE2E
		bra.w	loc_1BD8A
; ---------------------------------------------------------------------------

loc_1BC84:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.w	loc_1BE2E
		move.w	d1,d3
		add.w	d3,d3
		cmp.w	d3,d0
		bhi.w	loc_1BE2E
		move.w	d0,d5
		btst	#0,4(a0)
		beq.s	loc_1BCAA
		not.w	d5
		add.w	d3,d5

loc_1BCAA:
		lsr.w	#1,d5
		move.b	(a2,d5.w),d3
		sub.b	(a2),d3
		ext.w	d3
		move.w	$14(a0),d5
		sub.w	d3,d5
		move.b	$1E(a1),d3
		ext.w	d3
		add.w	d3,d2
		move.w	$14(a1),d3
		sub.w	d5,d3
		addq.w	#4,d3
		add.w	d2,d3
		bmi.w	loc_1BE2E
		move.w	d2,d4
		add.w	d4,d4
		cmp.w	d4,d3
		bcc.w	loc_1BE2E
		bra.w	loc_1BD8A
; ---------------------------------------------------------------------------

loc_1BCDE:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.w	loc_1BE2E
		move.w	d1,d3
		add.w	d3,d3
		cmp.w	d3,d0
		bhi.w	loc_1BE2E
		move.w	d0,d5
		btst	#0,4(a0)
		beq.s	loc_1BD04
		not.w	d5
		add.w	d3,d5

loc_1BD04:
		andi.w	#-2,d5
		move.b	(a2,d5.w),d3
		move.b	1(a2,d5.w),d2
		ext.w	d2
		ext.w	d3
		move.w	$14(a0),d5
		sub.w	d3,d5
		move.w	$14(a1),d3
		sub.w	d5,d3
		move.b	$1E(a1),d5
		ext.w	d5
		add.w	d5,d3
		addq.w	#4,d3
		bmi.w	loc_1BE2E
		add.w	d5,d2
		move.w	d2,d4
		add.w	d5,d4
		cmp.w	d4,d3
		bcc.w	loc_1BE2E
		bra.w	loc_1BD8A
; ---------------------------------------------------------------------------

loc_1BD3E:
		tst.b	4(a0)
		bpl.w	loc_1BE2E

SolidObject_cont:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.w	loc_1BE2E
		move.w	d1,d3
		add.w	d3,d3
		cmp.w	d3,d0
		bhi.w	loc_1BE2E
		move.b	$44(a1),d4
		ext.w	d4
		add.w	d2,d4
		move.b	$1E(a1),d3
		ext.w	d3
		add.w	d3,d2
		move.w	$14(a1),d3
		sub.w	$14(a0),d3
		addq.w	#4,d3
		add.w	d2,d3
		bmi.w	loc_1BE2E
		andi.w	#$FFF,d3
		add.w	d2,d4
		cmp.w	d4,d3
		bcc.w	loc_1BE2E

loc_1BD8A:
		tst.b	$2E(a1)
		bmi.w	loc_1BE2E
		cmpi.b	#6,5(a1)
		bcc.w	loc_1BE54
		tst.w	(Debug_placement_mode).w
		bne.w	loc_1BE54
		move.w	d0,d5
		cmp.w	d0,d1
		bcc.s	loc_1BDB2
		add.w	d1,d1
		sub.w	d1,d0
		move.w	d0,d5
		neg.w	d5

loc_1BDB2:
		move.w	d3,d1
		cmp.w	d3,d2
		bcc.s	loc_1BDC0
		subq.w	#4,d3
		sub.w	d4,d3
		move.w	d3,d1
		neg.w	d1

loc_1BDC0:
		cmp.w	d1,d5
		bhi.w	loc_1BE58

loc_1BDC6:
		cmpi.w	#4,d1
		bls.w	loc_1BE58
		tst.w	d0
		beq.s	loc_1BDFA
		bmi.s	loc_1BDDC
		tst.w	$18(a1)
		bmi.s	loc_1BDFA
		bra.s	loc_1BDE2
; ---------------------------------------------------------------------------

loc_1BDDC:
		tst.w	$18(a1)
		bpl.s	loc_1BDFA

loc_1BDE2:
		move.w	#0,$1C(a1)
		move.w	#0,$18(a1)
		tst.b	$37(a1)
		bpl.s	loc_1BDFA
		bset	#6,$37(a1)

loc_1BDFA:
		sub.w	d0,$10(a1)
		btst	#1,$2A(a1)
		bne.s	loc_1BE20
		move.l	d6,d4
		addq.b	#2,d4
		bset	d4,$2A(a0)
		bset	#5,$2A(a1)
		move.w	d6,d4
		addi.b	#$D,d4
		bset	d4,d6
		moveq	#1,d4
		rts
; ---------------------------------------------------------------------------

loc_1BE20:
		bsr.s	sub_1BE46
		move.w	d6,d4
		addi.b	#$D,d4
		bset	d4,d6
		moveq	#1,d4
		rts
; ---------------------------------------------------------------------------

loc_1BE2E:
		move.l	d6,d4
		addq.b	#2,d4
		btst	d4,$2A(a0)
		beq.s	loc_1BE54
		cmpi.b	#2,$20(a1)
		beq.s	sub_1BE46
		move.w	#1,$20(a1)
; End of function sub_1BBEC


; =============== S U B R O U T I N E =======================================


sub_1BE46:
		move.l	d6,d4
		addq.b	#2,d4
		bclr	d4,$2A(a0)
		bclr	#5,$2A(a1)

loc_1BE54:
		moveq	#0,d4
		rts
; End of function sub_1BE46

; ---------------------------------------------------------------------------

loc_1BE58:
		tst.w	d3
		bmi.s	loc_1BE64
		cmpi.w	#$10,d3
		bcs.s	loc_1BED0
		bra.s	loc_1BE2E
; ---------------------------------------------------------------------------

loc_1BE64:
		btst	#1,$2A(a1)
		bne.s	loc_1BE7A
		tst.w	$1A(a1)
		beq.s	loc_1BEA2
		bpl.s	loc_1BE8A
		tst.w	d3
		bpl.s	loc_1BE8A
		bra.s	loc_1BE80
; ---------------------------------------------------------------------------

loc_1BE7A:
		move.w	#0,$1C(a1)

loc_1BE80:
		sub.w	d3,$14(a1)
		move.w	#0,$1A(a1)

loc_1BE8A:
		tst.b	$37(a1)
		bpl.s	loc_1BE96
		bset	#5,$37(a1)

loc_1BE96:
		move.w	d6,d4
		addi.b	#$F,d4
		bset	d4,d6
		moveq	#-2,d4
		rts
; ---------------------------------------------------------------------------

loc_1BEA2:
		btst	#1,$2A(a1)
		bne.s	loc_1BE8A
		move.w	d0,d4
		bpl.s	loc_1BEB0
		neg.w	d4

loc_1BEB0:
		cmpi.w	#$10,d4
		bcs.w	loc_1BDC6
		move.l	a0,-(sp)
		movea.l	a1,a0
		jsr	(Kill_Character).l
		movea.l	(sp)+,a0
		move.w	d6,d4
		addi.b	#$F,d4
		bset	d4,d6
		moveq	#-2,d4
		rts
; ---------------------------------------------------------------------------

loc_1BED0:
		subq.w	#4,d3
		moveq	#0,d1
		move.b	7(a0),d1
		move.w	d1,d2
		add.w	d2,d2
		add.w	$10(a1),d1
		sub.w	$10(a0),d1
		bmi.s	loc_1BF08
		cmp.w	d2,d1
		bcc.s	loc_1BF08
		sub.w	d3,$14(a1)
		subq.w	#1,$14(a1)
		tst.w	$1A(a1)
		bmi.s	loc_1BF08
		bsr.w	RideObject_SetRide
		move.w	d6,d4
		addi.b	#$11,d4
		bset	d4,d6
		moveq	#-1,d4
		rts
; ---------------------------------------------------------------------------

loc_1BF08:
		moveq	#0,d4
		rts

; =============== S U B R O U T I N E =======================================


MvSonicOnPtfm:
		move.w	$14(a0),d0
		sub.w	d3,d0
		bra.s	loc_1BF1C
; ---------------------------------------------------------------------------
		move.w	$14(a0),d0
		subi.w	#9,d0

loc_1BF1C:
		tst.b	$2E(a1)
		bmi.s	locret_1BF44
		cmpi.b	#6,5(a1)
		bcc.s	locret_1BF44
		tst.w	(Debug_placement_mode).w
		bne.s	locret_1BF44
		moveq	#0,d1
		move.b	$1E(a1),d1
		sub.w	d1,d0
		move.w	d0,$14(a1)
		sub.w	$10(a0),d2
		sub.w	d2,$10(a1)

locret_1BF44:
		rts
; End of function MvSonicOnPtfm


; =============== S U B R O U T I N E =======================================


SolidObjSloped2:
		btst	#3,$2A(a1)
		beq.s	locret_1BF86
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		lsr.w	#1,d0
		btst	#0,4(a0)
		beq.s	loc_1BF66
		not.w	d0
		add.w	d1,d0

loc_1BF66:
		move.b	(a2,d0.w),d1
		ext.w	d1
		move.w	$14(a0),d0
		sub.w	d1,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		sub.w	d1,d0
		move.w	d0,$14(a1)
		sub.w	$10(a0),d2
		sub.w	d2,$10(a1)

locret_1BF86:
		rts
; End of function SolidObjSloped2


; =============== S U B R O U T I N E =======================================


SolidObjSloped4:
		btst	#3,$2A(a1)
		beq.s	locret_1BF86
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		btst	#0,4(a0)
		beq.s	loc_1BFA6
		not.w	d0
		add.w	d1,d0

loc_1BFA6:
		andi.w	#-2,d0
		bra.s	loc_1BF66
; End of function SolidObjSloped4


; =============== S U B R O U T I N E =======================================


SolidObjectTop:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_1BFC2
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		addq.b	#1,d6
; End of function SolidObjectTop


; =============== S U B R O U T I N E =======================================


sub_1BFC2:
		btst	d6,$2A(a0)
		beq.w	loc_1C0DC
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1BFE6
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1BFE6
		cmp.w	d2,d0
		bcs.s	loc_1BFFA

loc_1BFE6:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1BFFA:
		move.w	d4,d2
		bsr.w	MvSonicOnPtfm
		moveq	#0,d4
		rts
; End of function sub_1BFC2


; =============== S U B R O U T I N E =======================================


SolidObjectTopSloped2:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_1C01A
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		addq.b	#1,d6
; End of function SolidObjectTopSloped2


; =============== S U B R O U T I N E =======================================


sub_1C01A:
		btst	d6,$2A(a0)
		beq.w	SolidObjCheckSloped2
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1C03E
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1C03E
		cmp.w	d2,d0
		bcs.s	loc_1C052

loc_1C03E:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1C052:
		move.w	d4,d2
		bsr.w	SolidObjSloped2
		moveq	#0,d4
		rts
; End of function sub_1C01A


; =============== S U B R O U T I N E =======================================


SolidObjectTopSloped:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_1C072
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		addq.b	#1,d6
; End of function SolidObjectTopSloped


; =============== S U B R O U T I N E =======================================


sub_1C072:
		btst	d6,$2A(a0)
		bne.s	loc_1C084
		btst	#3,$2A(a1)
		bne.s	loc_1C0B0
		bra.w	loc_1C0DC
; ---------------------------------------------------------------------------

loc_1C084:
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1C0A0
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1C0A0
		cmp.w	d2,d0
		bcs.s	loc_1C0B4

loc_1C0A0:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)

loc_1C0B0:
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_1C0B4:
		move.w	d4,d2
		bsr.w	MvSonicOnPtfm
		moveq	#0,d4
		rts
; End of function sub_1C072


; =============== S U B R O U T I N E =======================================


sub_1C0BE:
		tst.w	$1A(a1)
		bmi.w	locret_1C17A
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.w	locret_1C17A
		cmp.w	d2,d0
		bcc.w	locret_1C17A
		bra.s	loc_1C0FA
; ---------------------------------------------------------------------------

loc_1C0DC:
		tst.w	$1A(a1)
		bmi.w	locret_1C17A
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.w	locret_1C17A
		add.w	d1,d1
		cmp.w	d1,d0
		bcc.w	locret_1C17A

loc_1C0FA:
		move.w	$14(a0),d0
		sub.w	d3,d0

loc_1C100:
		move.w	$14(a1),d2
		move.b	$1E(a1),d1
		ext.w	d1
		add.w	d2,d1
		addq.w	#4,d1
		sub.w	d1,d0
		bhi.w	locret_1C17A
		cmpi.w	#-$10,d0
		bcs.w	locret_1C17A
		tst.b	$2E(a1)
		bmi.w	locret_1C17A
		cmpi.b	#6,5(a1)
		bcc.w	locret_1C17A
		add.w	d0,d2
		addq.w	#3,d2
		move.w	d2,$14(a1)
; End of function sub_1C0BE


; =============== S U B R O U T I N E =======================================


RideObject_SetRide:
		btst	#3,$2A(a1)
		beq.s	loc_1C146
		movea.w	$42(a1),a3
		bclr	d6,$2A(a3)

loc_1C146:
		move.w	a0,$42(a1)
		move.b	#0,$26(a1)
		move.w	#0,$1A(a1)
		move.w	$18(a1),$1C(a1)
		bset	#3,$2A(a1)
		bset	d6,$2A(a0)
		bclr	#1,$2A(a1)
		beq.s	locret_1C17A
		move.l	a0,-(sp)
		movea.l	a1,a0
		jsr	(Player_TouchFloor).l
		movea.l	(sp)+,a0

locret_1C17A:
		rts
; End of function RideObject_SetRide

; ---------------------------------------------------------------------------

SolidObjCheckSloped2:
		tst.w	$1A(a1)
		bmi.w	locret_1C17A
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	locret_1C17A
		add.w	d1,d1
		cmp.w	d1,d0
		bcc.s	locret_1C17A
		btst	#0,4(a0)
		beq.s	loc_1C1A2
		not.w	d0
		add.w	d1,d0

loc_1C1A2:
		lsr.w	#1,d0
		move.b	(a2,d0.w),d3
		ext.w	d3
		move.w	$14(a0),d0
		sub.w	d3,d0
		bra.w	loc_1C100

; =============== S U B R O U T I N E =======================================


CheckPlayerReleaseFromObj:
		lea	(Player_1).w,a1
		btst	#3,$2A(a0)
		beq.s	loc_1C1E2
		jsr	(SonicOnObjHitFloor).l
		tst.w	d1
		beq.s	loc_1C1CC
		bpl.s	loc_1C1E2

loc_1C1CC:
		lea	(Player_1).w,a1
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	#3,$2A(a0)

loc_1C1E2:
		lea	(Player_2).w,a1
		btst	#4,$2A(a0)
		beq.s	loc_1C210
		jsr	(SonicOnObjHitFloor).l
		tst.w	d1
		beq.s	loc_1C1FA
		bpl.s	loc_1C210

loc_1C1FA:
		lea	(Player_2).w,a1
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a0)

loc_1C210:
		moveq	#0,d4
		rts
; End of function CheckPlayerReleaseFromObj

; ---------------------------------------------------------------------------

Obj_Explosion:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_1C222(pc,d0.w),d1
		jmp	off_1C222(pc,d1.w)
; ---------------------------------------------------------------------------
off_1C222:	dc.w loc_1C228-off_1C222
		dc.w loc_1C24C-off_1C222
		dc.w loc_1C2A0-off_1C222
; ---------------------------------------------------------------------------

loc_1C228:
		addq.b	#2,5(a0)
		jsr	(Create_New_Sprite).l
		bne.s	loc_1C24C
		move.l	#Obj_Animal,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	$3E(a0),$3E(a1)

loc_1C24C:
		addq.b	#2,5(a0)
		move.l	#Map_Explosion,$C(a0)
		move.w	$A(a0),d0
		andi.w	#$8000,d0
		ori.w	#$5A0,d0
		move.w	d0,$A(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#0,$28(a0)
		move.b	#$C,7(a0)
		move.b	#$C,6(a0)
		move.b	#3,$24(a0)
		move.b	#0,$22(a0)
		moveq	#signextendB(sfx_Break),d0
		jsr	(Play_Sound_2).l
		move.l	#loc_1C2A0,(a0)

loc_1C2A0:
		subq.b	#1,$24(a0)
		bpl.s	loc_1C2BA
		move.b	#7,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#5,$22(a0)
		beq.w	Delete_Current_Sprite

loc_1C2BA:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_FireShield_Dissipate:
		move.l	#Map_Explosion,$C(a0)
		move.w	#$5A0,$A(a0)
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$C,7(a0)
		move.b	#$C,6(a0)
		move.b	#3,$24(a0)
		move.b	#1,$22(a0)
		move.l	#loc_1C2F8,(a0)

loc_1C2F8:
		jsr	(MoveSprite2).l
		subq.b	#1,$24(a0)
		bpl.s	loc_1C318
		move.b	#3,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#5,$22(a0)
		beq.w	Delete_Current_Sprite

loc_1C318:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_1C31E:
		move.l	#Map_Explosion,$C(a0)
		move.w	#$85A0,$A(a0)
		move.b	#4,4(a0)
		move.w	#$100,8(a0)
		move.b	#$C,7(a0)
		move.b	#$C,6(a0)
		move.b	#0,$22(a0)
		move.l	#loc_1C350,(a0)

loc_1C350:
		subq.b	#1,$24(a0)
		bmi.s	loc_1C358
		rts
; ---------------------------------------------------------------------------

loc_1C358:
		move.b	#3,$24(a0)
		move.l	#loc_1C364,(a0)

loc_1C364:
		jsr	(MoveSprite2).l
		subq.b	#1,$24(a0)
		bpl.s	loc_1C384
		move.b	#7,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#5,$22(a0)
		beq.w	Delete_Current_Sprite

loc_1C384:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_Explosion:	include "General/Sprites/Enemy Misc/Map - Explosion S3.asm"
; ---------------------------------------------------------------------------

Obj_09_1:
		move.l	#Map_AIZ1Tree,$C(a0)
		move.w	#$180,8(a0)
		move.b	#8,7(a0)
		move.b	#4,4(a0)
		move.w	#$4001,$A(a0)
		move.l	#loc_1C3E2,(a0)

loc_1C3E2:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_AIZ1Tree:	include "Levels/AIZ/Misc Object Data/Map - Act 1 Tree.asm"
; ---------------------------------------------------------------------------

Obj_0A_1:
		move.l	#Map_AIZ1ZiplinePeg,$C(a0)
		move.w	#$380,8(a0)
		move.b	#$20,7(a0)
		move.b	#4,4(a0)
		move.w	#$4324,$A(a0)
		move.l	#loc_1C424,(a0)

loc_1C424:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_AIZ1ZiplinePeg:
		include "Levels/AIZ/Misc Object Data/Map - Act 1 Zipline Peg.asm"
; ---------------------------------------------------------------------------

Obj_26:
		move.l	#Map_PathSwap,$C(a0)
		move.w	#ArtTile_Ring,$A(a0)
		ori.b	#4,4(a0)
		move.b	#$80,7(a0)
		move.b	#$80,6(a0)
		move.w	#$280,8(a0)
		move.b	$2C(a0),d0
		btst	#2,d0
		beq.s	loc_1C4BA
		andi.w	#7,d0
		move.b	d0,$22(a0)
		andi.w	#3,d0
		add.w	d0,d0
		move.w	word_1C4B2(pc,d0.w),$32(a0)
		move.w	$14(a0),d1
		lea	(Player_1).w,a1
		cmp.w	$14(a1),d1
		bcc.s	loc_1C498
		move.b	#1,$34(a0)

loc_1C498:
		lea	(Player_2).w,a1
		cmp.w	$14(a1),d1
		bcc.s	loc_1C4A8
		move.b	#1,$35(a0)

loc_1C4A8:
		move.l	#loc_1C5FA,(a0)
		bra.w	loc_1C5FA
; ---------------------------------------------------------------------------
word_1C4B2:	dc.w $20
		dc.w $40
		dc.w $80
		dc.w $100
; ---------------------------------------------------------------------------

loc_1C4BA:
		andi.w	#3,d0
		move.b	d0,$22(a0)
		add.w	d0,d0
		move.w	word_1C4B2(pc,d0.w),$32(a0)
		move.w	$10(a0),d1
		lea	(Player_1).w,a1
		cmp.w	$10(a1),d1
		bcc.s	loc_1C4DE
		move.b	#1,$34(a0)

loc_1C4DE:
		lea	(Player_2).w,a1
		cmp.w	$10(a1),d1
		bcc.s	loc_1C4EE
		move.b	#1,$35(a0)

loc_1C4EE:
		move.l	#loc_1C4F4,(a0)

loc_1C4F4:
		tst.w	(Debug_placement_mode).w
		bne.w	loc_1C5BC
		move.w	$10(a0),d1
		lea	$34(a0),a2
		lea	(Player_1).w,a1
		bsr.s	sub_1C518
		lea	(Player_2).w,a1
		cmpi.w	#4,(Tails_CPU_routine).w
		beq.w	loc_1C5BC

; =============== S U B R O U T I N E =======================================


sub_1C518:
		tst.b	(a2)+
		bne.s	loc_1C56E
		cmp.w	$10(a1),d1
		bhi.w	loc_1C5BC
		move.b	#1,-1(a2)
		move.w	$14(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		move.w	$14(a1),d4
		cmp.w	d2,d4
		bcs.s	loc_1C5BC
		cmp.w	d3,d4
		bcc.s	loc_1C5BC
		btst	#0,4(a0)
		bne.s	loc_1C566
		move.w	#$580,$1C(a1)
		move.b	#1,$3D(a1)
		tst.b	$2C(a0)
		bpl.s	loc_1C564
		move.b	#$81,$3D(a1)

loc_1C564:
		bra.s	loc_1C5CA
; ---------------------------------------------------------------------------

loc_1C566:
		move.b	#0,$3D(a1)
		bra.s	loc_1C5BC
; ---------------------------------------------------------------------------

loc_1C56E:
		cmp.w	$10(a1),d1
		bls.s	loc_1C5BC
		move.b	#0,-1(a2)
		move.w	$14(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		move.w	$14(a1),d4
		cmp.w	d2,d4
		bcs.s	loc_1C5BC
		cmp.w	d3,d4
		bcc.s	loc_1C5BC
		btst	#0,4(a0)
		beq.s	loc_1C5B6
		move.w	#-$580,$1C(a1)
		move.b	#1,$3D(a1)
		tst.b	$2C(a0)
		bpl.s	loc_1C5B4
		move.b	#$81,$3D(a1)

loc_1C5B4:
		bra.s	loc_1C5CA
; ---------------------------------------------------------------------------

loc_1C5B6:
		move.b	#0,$3D(a1)

loc_1C5BC:
		tst.w	(Debug_mode_flag).w
		beq.w	Delete_Sprite_If_Not_In_Range
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_1C5CA:
		btst	#2,$2A(a1)
		beq.s	loc_1C5D4
		rts
; ---------------------------------------------------------------------------

loc_1C5D4:
		bset	#2,$2A(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		addq.w	#5,$14(a1)
		moveq	#signextendB(sfx_Roll),d0
		jsr	(Play_Sound_2).l
		rts
; End of function sub_1C518

; ---------------------------------------------------------------------------

loc_1C5FA:
		tst.w	(Debug_placement_mode).w
		bne.w	loc_1C6F2
		move.w	$14(a0),d1
		lea	$34(a0),a2
		lea	(Player_1).w,a1
		bsr.s	sub_1C61E
		lea	(Player_2).w,a1
		cmpi.w	#4,(Tails_CPU_routine).w
		beq.w	loc_1C6F2

; =============== S U B R O U T I N E =======================================


sub_1C61E:
		tst.b	(a2)+
		bne.s	loc_1C694
		cmp.w	$14(a1),d1
		bhi.w	loc_1C6F2
		move.b	#1,-1(a2)
		move.w	$10(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		move.w	$10(a1),d4
		cmp.w	d2,d4
		bcs.w	loc_1C6F2
		cmp.w	d3,d4
		bcc.w	loc_1C6F2
		btst	#0,4(a0)
		bne.s	loc_1C68C
		move.b	#1,$3D(a1)
		tst.b	$2C(a0)
		bpl.s	loc_1C668
		move.b	#$81,$3D(a1)

loc_1C668:
		btst	#6,$2C(a0)
		beq.s	loc_1C688
		bclr	#1,$2A(a1)
		move.b	#$40,$26(a1)
		move.w	$1A(a1),$1C(a1)
		move.w	#0,$18(a1)

loc_1C688:
		bra.w	loc_1C5CA
; ---------------------------------------------------------------------------

loc_1C68C:
		move.b	#0,$3D(a1)
		bra.s	loc_1C6F2
; ---------------------------------------------------------------------------

loc_1C694:
		cmp.w	$14(a1),d1
		bls.s	loc_1C6F2
		move.b	#0,-1(a2)
		move.w	$10(a0),d2
		move.w	d2,d3
		move.w	$32(a0),d4
		sub.w	d4,d2
		add.w	d4,d3
		move.w	$10(a1),d4
		cmp.w	d2,d4
		bcs.s	loc_1C6F2
		cmp.w	d3,d4
		bcc.s	loc_1C6F2
		btst	#0,4(a0)
		beq.s	loc_1C6EC
		move.b	#1,$3D(a1)
		tst.b	$2C(a0)
		bpl.s	loc_1C6D4
		move.b	#$81,$3D(a1)

loc_1C6D4:
		btst	#6,$2C(a0)
		beq.s	loc_1C6E8
		bclr	#1,$2A(a1)
		move.b	#$40,$26(a1)

loc_1C6E8:
		bra.w	loc_1C5CA
; ---------------------------------------------------------------------------

loc_1C6EC:
		move.b	#0,$3D(a1)

loc_1C6F2:
		tst.w	(Debug_mode_flag).w
		beq.w	Delete_Sprite_If_Not_In_Range
		jmp	(Sprite_OnScreen_Test).l
; End of function sub_1C61E

; ---------------------------------------------------------------------------
byte_1C700:	dc.b $96
		dc.b $94
		dc.b $95
		dc.b 0
; ---------------------------------------------------------------------------

Obj_27:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.b	byte_1C700(pc,d0.w),$28(a0)
		move.l	#Map_Obj27,$C(a0)
		tst.w	(Debug_placement_mode).w
		beq.s	loc_1C726
		move.l	#Map_Obj27_2,$C(a0)

loc_1C726:
		move.w	#make_art_tile(ArtTile_Ring,0,1),$A(a0)
		move.b	#$84,4(a0)
		move.b	#$80,7(a0)
		move.b	#$80,6(a0)
		move.w	#$200,8(a0)
		move.b	$2C(a0),$22(a0)
		move.l	#loc_1C750,(a0)

loc_1C750:
		tst.w	(Competition_mode).w
		bne.s	loc_1C76A
		move.w	$10(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_1C778

loc_1C76A:
		tst.w	(Debug_placement_mode).w
		beq.s	locret_1C776
		jsr	(Draw_Sprite).l

locret_1C776:
		rts
; ---------------------------------------------------------------------------

loc_1C778:
		move.w	$48(a0),d0
		beq.s	loc_1C784
		movea.w	d0,a2
		bclr	#7,(a2)

loc_1C784:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
Map_Obj27:	include "General/Sprites/Unused/Map - Obj27 Unused.asm"
Map_Obj27_2:	include "General/Sprites/Unused/Map - Obj27 Unused 2.asm"
; ---------------------------------------------------------------------------

Obj_28_Invisible_Barrier:
		move.l	#Map_InvisibleBlock,$C(a0)
		move.w	#make_art_tile(ArtTile_Ring,0,1),$A(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.w	#$F0,d0
		addi.w	#$10,d0
		lsr.w	#1,d0
		move.b	d0,7(a0)
		andi.w	#$F,d1
		addq.w	#1,d1
		lsl.w	#3,d1
		move.b	d1,6(a0)
		tst.w	(Competition_mode).w
		beq.s	loc_1C82E
		move.l	#loc_1C872,(a0)
		bra.s	loc_1C872
; ---------------------------------------------------------------------------

loc_1C82E:
		move.l	#loc_1C834,(a0)

loc_1C834:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull2
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_1C778
		tst.w	(Debug_placement_mode).w
		beq.s	locret_1C870
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_1C870:
		rts
; ---------------------------------------------------------------------------

loc_1C872:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bra.w	SolidObjectFull2
; ---------------------------------------------------------------------------
Map_InvisibleBlock:
		include "General/Sprites/Level Misc/Map - Invisible Block.asm"
byte_1C8E2:	dc.b $14
		dc.b $28
		dc.b $20
		dc.b 0
		dc.b $24
		dc.b $48
		dc.b $30
		dc.b 1
		dc.b $34
		dc.b $68
		dc.b $40
		dc.b 2
; ---------------------------------------------------------------------------

Obj_BreakableBar:
		move.l	#Map_BreakableBar,$C(a0)
		move.w	#$43CA,$A(a0)
		move.b	#4,4(a0)
		move.w	#$200,8(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,d1
		andi.b	#$F,d0
		mulu.w	#$3C,d0
		move.w	d0,$30(a0)
		andi.w	#$30,d1
		lsr.w	#2,d1
		lea	byte_1C8E2(pc,d1.w),a1
		tst.b	$2C(a0)
		bpl.s	loc_1C956
		moveq	#0,d0
		move.b	(a1)+,d0
		move.w	d0,$36(a0)
		move.b	(a1)+,d0
		move.w	d0,$38(a0)
		move.b	(a1)+,7(a0)
		move.b	#4,6(a0)
		move.b	(a1)+,d0
		addq.b	#4,d0
		move.b	d0,$22(a0)
		move.l	#loc_1CB2C,(a0)
		bra.w	loc_1CB2C
; ---------------------------------------------------------------------------

loc_1C956:
		moveq	#0,d0
		move.b	(a1)+,d0
		move.w	d0,$36(a0)
		move.b	(a1)+,d0
		move.w	d0,$38(a0)
		move.b	#4,7(a0)
		move.b	(a1)+,6(a0)
		move.b	(a1)+,$22(a0)
		move.l	#loc_1C978,(a0)

loc_1C978:
		lea	$32(a0),a2
		tst.w	$30(a0)
		beq.s	loc_1C98E
		tst.w	(a2)
		beq.s	loc_1C98E
		subq.w	#1,$30(a0)
		beq.w	loc_1CAB4

loc_1C98E:
		lea	(Player_1).w,a1
		move.w	(Ctrl_1).w,d1
		moveq	#0,d2
		bsr.s	sub_1C9B4
		addq.w	#1,a2
		lea	(Player_2).w,a1
		move.w	(Ctrl_2).w,d1
		moveq	#1,d2
		bsr.s	sub_1C9B4
		tst.b	$3A(a0)
		bne.w	loc_1CAB4
		bra.w	Sprite_OnScreen_Test

; =============== S U B R O U T I N E =======================================


sub_1C9B4:
		tst.b	(a2)
		beq.s	loc_1CA16
		move.w	$14(a0),d0
		sub.w	$36(a0),d0
		btst	#8,d1
		beq.s	loc_1C9D4
		subq.w	#1,$14(a1)
		cmp.w	$14(a1),d0
		bcs.s	loc_1C9D4
		move.w	d0,$14(a1)

loc_1C9D4:
		add.w	$38(a0),d0
		btst	#9,d1
		beq.s	loc_1C9EC
		addq.w	#1,$14(a1)
		cmp.w	$14(a1),d0
		bcc.s	loc_1C9EC
		move.w	d0,$14(a1)

loc_1C9EC:
		andi.w	#$70,d1
		beq.w	locret_1CAB2
		clr.b	(a2)
		move.b	#$3C,2(a2)
		bclr	d2,(_unkF7C7).w
		andi.b	#-2,$2E(a1)
		btst	#6,$2C(a0)
		bne.s	locret_1CA14
		move.b	#1,$3A(a0)

locret_1CA14:
		rts
; ---------------------------------------------------------------------------

loc_1CA16:
		tst.b	2(a2)
		beq.s	loc_1CA22
		subq.b	#1,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_1CA22:
		moveq	#0,d1
		move.b	6(a0),d1
		move.w	$14(a0),d0
		sub.w	d1,d0
		move.w	$14(a1),d2
		cmp.w	d0,d2
		bcs.s	locret_1CAB2
		add.w	d1,d0
		add.w	d1,d0
		cmp.w	d0,d2
		bcc.s	locret_1CAB2
		move.w	$10(a0),d0
		addi.w	#$14,d0
		cmp.w	$10(a1),d0
		bcc.s	locret_1CAB2
		addi.w	#$10,d0
		cmp.w	$10(a1),d0
		bcs.s	locret_1CAB2
		cmpi.b	#4,5(a1)
		bcc.s	locret_1CAB2
		tst.b	$2E(a1)
		bne.s	locret_1CAB2
		move.w	$14(a0),d0
		sub.w	$36(a0),d0
		cmp.w	$14(a1),d0
		bcs.s	loc_1CA76
		move.w	d0,$14(a1)

loc_1CA76:
		add.w	$38(a0),d0
		cmp.w	$14(a1),d0
		bcc.s	loc_1CA84
		move.w	d0,$14(a1)

loc_1CA84:
		clr.w	$18(a1)
		clr.w	$1A(a1)
		move.w	$10(a0),d0
		addi.w	#$14,d0
		move.w	d0,$10(a1)
		bclr	#0,$2A(a1)
		move.b	#$11,$20(a1)
		move.b	#1,$2E(a1)
		bset	d2,(_unkF7C7).w
		move.b	#1,(a2)

locret_1CAB2:
		rts
; End of function sub_1C9B4

; ---------------------------------------------------------------------------

loc_1CAB4:
		tst.b	$32(a0)
		beq.s	loc_1CAC0
		andi.b	#-2,(Player_1+object_control).w

loc_1CAC0:
		tst.b	$33(a0)
		beq.s	loc_1CACC
		andi.b	#-2,(Player_2+object_control).w

loc_1CACC:
		clr.b	(_unkF7C7).w
		clr.w	$32(a0)
		move.l	#loc_1CB06,(a0)
		move.b	#3,$22(a0)
		move.w	#$400,$18(a0)
		move.w	#0,$1A(a0)
		lea	(word_1CCD0).l,a4
		lea	(byte_1CCB8).l,a2
		moveq	#0,d1
		move.b	6(a0),d1
		lsr.w	#2,d1
		subq.w	#1,d1
		bsr.w	sub_1CD50

loc_1CB06:
		tst.b	$3F(a0)
		beq.s	loc_1CB12
		subq.b	#1,$3F(a0)
		bra.s	loc_1CB1E
; ---------------------------------------------------------------------------

loc_1CB12:
		jsr	(MoveSprite2).l
		addi.w	#8,$1A(a0)

loc_1CB1E:
		tst.b	4(a0)
		bpl.w	loc_1C778
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_1CB2C:
		lea	$32(a0),a2
		tst.w	$30(a0)
		beq.s	loc_1CB42
		tst.w	(a2)
		beq.s	loc_1CB42
		subq.w	#1,$30(a0)
		beq.w	loc_1CC62

loc_1CB42:
		lea	(Player_1).w,a1
		move.w	(Ctrl_1).w,d1
		moveq	#0,d2
		bsr.s	sub_1CB68
		addq.w	#1,a2
		lea	(Player_2).w,a1
		move.w	(Ctrl_2).w,d1
		moveq	#1,d2
		bsr.s	sub_1CB68
		tst.b	$3A(a0)
		bne.w	loc_1CC62
		bra.w	Sprite_OnScreen_Test

; =============== S U B R O U T I N E =======================================


sub_1CB68:
		tst.b	(a2)
		beq.s	loc_1CBCA
		move.w	$10(a0),d0
		sub.w	$36(a0),d0
		btst	#$A,d1
		beq.s	loc_1CB88
		subq.w	#1,$10(a1)
		cmp.w	$10(a1),d0
		bcs.s	loc_1CB88
		move.w	d0,$10(a1)

loc_1CB88:
		add.w	$38(a0),d0
		btst	#$B,d1
		beq.s	loc_1CBA0
		addq.w	#1,$10(a1)
		cmp.w	$10(a1),d0
		bcc.s	loc_1CBA0
		move.w	d0,$10(a1)

loc_1CBA0:
		andi.w	#$70,d1
		beq.w	locret_1CC60
		clr.b	(a2)
		move.b	#$3C,2(a2)
		bclr	d2,(_unkF7C7).w
		andi.b	#-2,$2E(a1)
		btst	#6,$2C(a0)
		bne.s	locret_1CBC8
		move.b	#1,$3A(a0)

locret_1CBC8:
		rts
; ---------------------------------------------------------------------------

loc_1CBCA:
		tst.b	2(a2)
		beq.s	loc_1CBD6
		subq.b	#1,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_1CBD6:
		moveq	#0,d1
		move.b	7(a0),d1
		move.w	$10(a0),d0
		sub.w	d1,d0
		move.w	$10(a1),d2
		cmp.w	d0,d2
		bcs.s	locret_1CC60
		add.w	d1,d0
		add.w	d1,d0
		cmp.w	d0,d2
		bcc.s	locret_1CC60
		move.w	$14(a0),d0
		subi.w	#$14,d0
		cmp.w	$14(a1),d0
		bcc.s	locret_1CC60
		addi.w	#$10,d0
		cmp.w	$14(a1),d0
		bcs.s	locret_1CC60
		cmpi.b	#4,5(a1)
		bcc.s	locret_1CC60
		tst.b	$2E(a1)
		bne.s	locret_1CC60
		move.w	$10(a0),d0
		sub.w	$36(a0),d0
		cmp.w	$10(a1),d0
		bcs.s	loc_1CC2A
		move.w	d0,$10(a1)

loc_1CC2A:
		add.w	$38(a0),d0
		cmp.w	$10(a1),d0
		bcc.s	loc_1CC38
		move.w	d0,$10(a1)

loc_1CC38:
		clr.w	$18(a1)
		clr.w	$1A(a1)
		move.w	$14(a0),d0
		subi.w	#$14,d0
		move.w	d0,$14(a1)
		move.b	#$14,$20(a1)
		move.b	#1,$2E(a1)
		bset	d2,(_unkF7C7).w
		move.b	#1,(a2)

locret_1CC60:
		rts
; End of function sub_1CB68

; ---------------------------------------------------------------------------

loc_1CC62:
		tst.b	$32(a0)
		beq.s	loc_1CC6E
		andi.b	#-2,(Player_1+object_control).w

loc_1CC6E:
		tst.b	$33(a0)
		beq.s	loc_1CC7A
		andi.b	#-2,(Player_2+object_control).w

loc_1CC7A:
		clr.b	(_unkF7C7).w
		clr.w	$32(a0)
		move.l	#loc_1CB06,(a0)
		move.b	#7,$22(a0)
		move.w	#0,$18(a0)
		move.w	#-$400,$1A(a0)
		lea	(word_1CD10).l,a4
		lea	(byte_1CCB8).l,a2
		moveq	#0,d1
		move.b	7(a0),d1
		lsr.w	#2,d1
		subq.w	#1,d1
		bsr.w	sub_1CD50
		bra.w	loc_1CB06
; ---------------------------------------------------------------------------
byte_1CCB8:	dc.b    7,   5,   2,   0,   1,   3,   4,   6,   7,   5,   2,   0,   1,   3,   4,   6,   8,   9,  $A,  $B
		dc.b   $C,  $D,  $E,  $F
word_1CCD0:	dc.w      0, $FFE4
		dc.w      0, $FFEC
		dc.w      0, $FFF4
		dc.w      0, $FFFC
		dc.w      0,     4
		dc.w      0,    $C
		dc.w      0,   $14
		dc.w      0,   $1C
		dc.w      0,   $24
		dc.w      0, $FFDC
		dc.w      0,   $2C
		dc.w      0, $FFD4
		dc.w      0,   $34
		dc.w      0, $FFCC
		dc.w      0,   $3C
		dc.w      0, $FFC4
word_1CD10:	dc.w  $FFE4,     0
		dc.w  $FFEC,     0
		dc.w  $FFF4,     0
		dc.w  $FFFC,     0
		dc.w      4,     0
		dc.w     $C,     0
		dc.w    $14,     0
		dc.w    $1C,     0
		dc.w    $24,     0
		dc.w  $FFDC,     0
		dc.w    $2C,     0
		dc.w  $FFD4,     0
		dc.w    $34,     0
		dc.w  $FFCC,     0
		dc.w    $3C,     0
		dc.w  $FFC4,     0

; =============== S U B R O U T I N E =======================================


sub_1CD50:
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		move.w	8(a0),d4
		movea.l	a0,a1
		bra.s	loc_1CD68
; ---------------------------------------------------------------------------

loc_1CD60:
		jsr	(Create_New_Sprite3).l
		bne.s	loc_1CDC2

loc_1CD68:
		move.l	(a0),(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		move.b	#-$7C,4(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	(a4)+,d0
		add.w	d2,d0
		move.w	d0,$10(a1)
		move.w	(a4)+,d0
		add.w	d3,d0
		move.w	d0,$14(a1)
		move.w	d4,8(a1)
		move.b	#4,7(a1)
		move.b	#4,6(a1)
		move.b	$22(a0),$22(a1)
		move.w	$18(a0),$18(a1)
		move.w	$1A(a0),$1A(a1)
		move.b	(a2)+,$3F(a1)
		dbf	d1,loc_1CD60

loc_1CDC2:
		moveq	#signextendB(sfx_Collapse),d0
		jmp	(Play_Sound_2).l
; End of function sub_1CD50

; ---------------------------------------------------------------------------
Map_BreakableBar:
		include "Levels/HCZ/Misc Object Data/Map - Breakable Bar.asm"
; ---------------------------------------------------------------------------

Obj_HCZWaveSplash:
		move.l	#Map_HCZWaveSplash,$C(a0)
		move.w	#$842E,$A(a0)
		move.b	#4,4(a0)
		move.b	#$80,7(a0)
		move.b	#8,6(a0)
		bset	#6,4(a0)
		move.w	#1,$16(a0)
		lea	$18(a0),a2
		move.w	$10(a0),(a2)
		addi.w	#$C0,(a2)+
		move.w	$14(a0),(a2)+
		move.l	#loc_1CEA4,(a0)

loc_1CEA4:
		move.w	(Camera_X_pos).w,d1
		andi.w	#$FFE0,d1
		addi.w	#$60,d1
		btst	#0,(Level_frame_counter+1).w
		beq.s	loc_1CEBC
		addi.w	#$20,d1

loc_1CEBC:
		move.w	d1,$10(a0)
		move.w	(Water_level).w,d1
		move.w	d1,$14(a0)
		lea	$18(a0),a2
		move.w	$10(a0),(a2)
		addi.w	#$C0,(a2)+
		move.w	$14(a0),(a2)+
		tst.b	$32(a0)
		bne.s	loc_1CEF6
		tst.b	(Ctrl_1_pressed_logical).w
		bmi.s	loc_1CEEA
		tst.b	(Ctrl_2_pressed_logical).w
		bpl.s	loc_1CF06

loc_1CEEA:
		addq.b	#3,$22(a0)
		move.b	#1,$32(a0)
		bra.s	loc_1CF24
; ---------------------------------------------------------------------------

loc_1CEF6:
		tst.w	(Game_paused).w
		bne.s	loc_1CF24
		move.b	#0,$32(a0)
		subq.b	#3,$22(a0)

loc_1CF06:
		subq.b	#1,$24(a0)
		bpl.s	loc_1CF24
		move.b	#9,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#4,$22(a0)
		bcs.s	loc_1CF24
		move.b	#1,$22(a0)

loc_1CF24:
		move.b	$22(a0),1(a2)
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------
Map_HCZWaveSplash:
		include "Levels/HCZ/Misc Object Data/Map - Wave Splash.asm"
byte_1CFEA:	dc.b $10
		dc.b $10
		dc.b $20
		dc.b $10
		dc.b $30
		dc.b $10
		dc.b $40
		dc.b $10
; ---------------------------------------------------------------------------

Obj_HCZBlock:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.b	d0,$22(a0)
		add.w	d0,d0
		lea	byte_1CFEA(pc,d0.w),a1
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.l	#Map_HCZBlock,$C(a0)
		move.w	#$43D4,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.l	#loc_1D02A,(a0)

loc_1D02A:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull2
		bra.w	Sprite_OnScreen_Test
; ---------------------------------------------------------------------------
Map_HCZBlock:	include "Levels/HCZ/Misc Object Data/Map - Block.asm"
; ---------------------------------------------------------------------------

Obj_InvisibleHurtBlockHorizontal:
		move.l	#Map_InvisibleBlock,$C(a0)
		move.w	#make_art_tile(ArtTile_Ring,0,1),$A(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.w	#$F0,d0
		addi.w	#$10,d0
		lsr.w	#1,d0
		move.b	d0,7(a0)
		andi.w	#$F,d1
		addq.w	#1,d1
		lsl.w	#3,d1
		move.b	d1,6(a0)
		btst	#0,$2A(a0)
		beq.s	loc_1D0E0
		move.l	#loc_1D15C,(a0)
		rts
; ---------------------------------------------------------------------------

loc_1D0E0:
		btst	#1,$2A(a0)
		beq.s	loc_1D0F0
		move.l	#loc_1D1C0,(a0)
		rts
; ---------------------------------------------------------------------------

loc_1D0F0:
		move.l	#loc_1D0F6,(a0)

loc_1D0F6:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull2
		move.b	$2A(a0),d6
		andi.b	#$18,d6
		beq.s	loc_1D13A
		move.b	d6,d0
		andi.b	#8,d0
		beq.s	loc_1D12C
		lea	(Player_1).w,a1
		bsr.w	sub_228EC

loc_1D12C:
		andi.b	#$10,d6
		beq.s	loc_1D13A
		lea	(Player_2).w,a1
		bsr.w	sub_228EC

loc_1D13A:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_1C778
		tst.w	(Debug_placement_mode).w
		beq.s	locret_1D15A
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_1D15A:
		rts
; ---------------------------------------------------------------------------

loc_1D15C:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull2
		swap	d6
		andi.w	#3,d6
		beq.s	loc_1D19E
		move.b	d6,d0
		andi.b	#1,d0
		beq.s	loc_1D190
		lea	(Player_1).w,a1
		bsr.w	sub_228EC

loc_1D190:
		andi.b	#2,d6
		beq.s	loc_1D19E
		lea	(Player_2).w,a1
		bsr.w	sub_228EC

loc_1D19E:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_1C778
		tst.w	(Debug_placement_mode).w
		beq.s	locret_1D1BE
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_1D1BE:
		rts
; ---------------------------------------------------------------------------

loc_1D1C0:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull2
		swap	d6
		andi.w	#$C,d6
		beq.s	loc_1D202
		move.b	d6,d0
		andi.b	#4,d0
		beq.s	loc_1D1F4
		lea	(Player_1).w,a1
		bsr.w	sub_228EC

loc_1D1F4:
		andi.b	#8,d6
		beq.s	loc_1D202
		lea	(Player_2).w,a1
		bsr.w	sub_228EC

loc_1D202:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_1C778
		tst.w	(Debug_placement_mode).w
		beq.s	locret_1D222
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_1D222:
		rts
; ---------------------------------------------------------------------------

Obj_InvisibleHurtBlockVertical:
		move.l	#Map_InvisibleBlock,$C(a0)
		move.w	#make_art_tile(ArtTile_Ring,0,1),$A(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.w	#$F0,d0
		addi.w	#$10,d0
		lsr.w	#1,d0
		move.b	d0,7(a0)
		andi.w	#$F,d1
		addq.w	#1,d1
		lsl.w	#3,d1
		move.b	d1,6(a0)
		btst	#0,$2A(a0)
		beq.s	loc_1D26E
		move.l	#loc_1D2EA,(a0)
		rts
; ---------------------------------------------------------------------------

loc_1D26E:
		btst	#1,$2A(a0)
		beq.s	loc_1D27E
		move.l	#loc_1D34E,(a0)
		rts
; ---------------------------------------------------------------------------

loc_1D27E:
		move.l	#loc_1D284,(a0)

loc_1D284:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull2
		move.b	$2A(a0),d6
		andi.b	#$18,d6
		beq.s	loc_1D2C8
		move.b	d6,d0
		andi.b	#8,d0
		beq.s	loc_1D2BA
		lea	(Player_1).w,a1
		bsr.w	sub_1D3B2

loc_1D2BA:
		andi.b	#$10,d6
		beq.s	loc_1D2C8
		lea	(Player_2).w,a1
		bsr.w	sub_1D3B2

loc_1D2C8:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_1C778
		tst.w	(Debug_placement_mode).w
		beq.s	locret_1D2E8
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_1D2E8:
		rts
; ---------------------------------------------------------------------------

loc_1D2EA:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull2
		swap	d6
		andi.w	#3,d6
		beq.s	loc_1D32C
		move.b	d6,d0
		andi.b	#1,d0
		beq.s	loc_1D31E
		lea	(Player_1).w,a1
		bsr.w	sub_1D3B2

loc_1D31E:
		andi.b	#2,d6
		beq.s	loc_1D32C
		lea	(Player_2).w,a1
		bsr.w	sub_1D3B2

loc_1D32C:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_1C778
		tst.w	(Debug_placement_mode).w
		beq.s	locret_1D34C
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_1D34C:
		rts
; ---------------------------------------------------------------------------

loc_1D34E:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull2
		swap	d6
		andi.w	#$C,d6
		beq.s	loc_1D390
		move.b	d6,d0
		andi.b	#4,d0
		beq.s	loc_1D382
		lea	(Player_1).w,a1
		bsr.w	sub_1D3B2

loc_1D382:
		andi.b	#8,d6
		beq.s	loc_1D390
		lea	(Player_2).w,a1
		bsr.w	sub_1D3B2

loc_1D390:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_1C778
		tst.w	(Debug_placement_mode).w
		beq.s	locret_1D3B0
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_1D3B0:
		rts

; =============== S U B R O U T I N E =======================================


sub_1D3B2:
		move.w	d6,-(sp)
		move.l	a0,-(sp)
		movea.l	a1,a0
		jsr	(Kill_Character).l
		movea.l	(sp)+,a0
		move.w	(sp)+,d6
		rts
; End of function sub_1D3B2

; ---------------------------------------------------------------------------

Obj_AIZHollowTree:
		move.b	#$D0,7(a0)
		move.l	#loc_1D3D0,(a0)

loc_1D3D0:
		bsr.w	sub_1D436
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_1D430
		tst.w	$38(a0)
		beq.s	loc_1D430
		subq.w	#1,$38(a0)
		bne.s	loc_1D3F8
		move.w	#$1300,(Camera_min_X_pos).w
		move.w	#$4000,(Camera_max_X_pos).w
		bra.s	loc_1D430
; ---------------------------------------------------------------------------

loc_1D3F8:
		cmpi.w	#$1300,(Camera_min_X_pos).w
		beq.s	loc_1D414
		cmpi.w	#$2D00,(Player_1+x_pos).w
		bcs.s	loc_1D410
		move.w	#$1300,(Camera_min_X_pos).w
		bra.s	loc_1D414
; ---------------------------------------------------------------------------

loc_1D410:
		subq.w	#4,(Camera_min_X_pos).w

loc_1D414:
		cmpi.w	#$4000,(Camera_max_X_pos).w
		beq.s	loc_1D430
		cmpi.w	#$2D00,(Player_1+x_pos).w
		bcc.s	loc_1D42C
		move.w	#$4000,(Camera_max_X_pos).w
		bra.s	loc_1D430
; ---------------------------------------------------------------------------

loc_1D42C:
		addq.w	#4,(Camera_max_X_pos).w

loc_1D430:
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_1D436:
		lea	(Player_1).w,a1
		lea	$30(a0),a2
		moveq	#3,d6
		bsr.s	sub_1D44C
		lea	(Player_2).w,a1
		lea	$34(a0),a2
		; Bug: if player 1 was riding the object, then d6 may have become dirty from
		; a call to Perform_Player_DPLC, causing player 2 to behave erratically
		addq.b	#1,d6
; End of function sub_1D436


; =============== S U B R O U T I N E =======================================


sub_1D44C:
		btst	d6,$2A(a0)
		bne.w	loc_1D4DA
		btst	#1,$2A(a1)
		bne.w	locret_1D4D8
		move.w	$10(a1),d0
		addi.w	#$10,d0
		sub.w	$10(a0),d0
		bcs.s	locret_1D4D8
		cmpi.w	#$40,d0
		bge.s	locret_1D4D8
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		cmpi.w	#-$5A,d0
		blt.s	locret_1D4D8
		cmpi.w	#$A0,d0
		bgt.s	locret_1D4D8
		cmpi.w	#$600,$18(a1)
		blt.s	locret_1D4D8
		tst.b	$2E(a1)
		bne.s	locret_1D4D8
		bsr.w	RideObject_SetRide
		move.l	#0,(a2)
		bset	#6,$2E(a1)
		bset	#1,$2E(a1)
		move.b	#0,$20(a1)
		cmpa.w	#Player_1,a1
		bne.s	locret_1D4D8
		jsr	(Create_New_Sprite3).l
		bne.w	loc_1D4C6
		move.l	#Obj_AIZ1TreeRevealControl,(a1)

loc_1D4C6:
		move.w	#$2C60,(Camera_min_X_pos).w
		move.w	#$2C60,(Camera_max_X_pos).w
		move.w	#$3C,$38(a0)

locret_1D4D8:
		rts
; ---------------------------------------------------------------------------

loc_1D4DA:
		move.w	$1C(a1),d0
		bpl.s	loc_1D4E2
		neg.w	d0

loc_1D4E2:
		cmpi.w	#$600,d0
		bcs.w	loc_1D57C
		btst	#1,$2A(a1)
		bne.s	loc_1D50A
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		addi.w	#$90,d0
		bmi.s	AIZTree_FallOff
		cmpi.w	#$130,d0
		bls.w	AIZTree_SetPlayerPos
		bra.s	AIZTree_FallOff
; ---------------------------------------------------------------------------

loc_1D50A:
		cmpi.w	#$2C99,$10(a1)
		bcc.s	loc_1D51E
		move.w	#$2C99,$10(a1)
		move.w	#$400,$18(a1)

loc_1D51E:
		cmpi.w	#$2D66,$10(a1)
		bcs.s	AIZTree_FallOff
		move.w	#$2D66,$10(a1)
		move.w	#-$400,$18(a1)

AIZTree_FallOff:
		bset	#1,$2A(a1)
		bclr	#2,$2A(a1)
		move.b	#$13,$1E(a1)
		move.b	#9,$1F(a1)
		move.w	#1,$20(a1)
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		move.b	#0,$30(a1)
		move.b	#4,$31(a1)
		bclr	#6,$2E(a1)
		bclr	#1,$2E(a1)
		asr	$18(a1)
		asr	$1A(a1)
		rts
; ---------------------------------------------------------------------------

loc_1D57C:
		cmpi.w	#$400,(a2)
		bcc.s	AIZTree_FallOff
		move.l	d6,-(sp)
		move.l	a1,-(sp)
		bsr.s	AIZTree_SetPlayerPos
		movea.l	(sp)+,a1
		move.l	(sp)+,d6
		bra.s	AIZTree_FallOff
; End of function sub_1D44C

; ---------------------------------------------------------------------------
		bra.w	loc_1D50A

; =============== S U B R O U T I N E =======================================


AIZTree_SetPlayerPos:
		btst	#3,$2A(a1)
		beq.w	locret_1D4D8
		move.w	$1C(a1),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,(a2)
		bmi.s	AIZTree_FallOff
		cmpi.w	#$400,(a2)
		bcs.s	loc_1D5BA
		move.w	#$1300,(Camera_min_X_pos).w
		move.w	#$4000,(Camera_max_X_pos).w

loc_1D5BA:
		move.w	$10(a1),d2
		move.w	(a2),d0
		lsr.w	#1,d0
		jsr	(GetSineCosine).l
		muls.w	#$7000,d0
		swap	d0
		add.w	$10(a0),d0
		move.w	d0,$10(a1)
		sub.w	d2,d0
		asl.w	#8,d0
		move.w	d0,$18(a1)
		move.w	$14(a1),d2
		move.w	(a2),d0
		lsr.w	#2,d0
		neg.w	d0
		addi.w	#$90,d0
		add.w	$14(a0),d0
		move.w	d0,$14(a1)
		sub.w	d2,d0
		asl.w	#8,d0
		move.w	d0,$1A(a1)
		moveq	#0,d0
		move.w	(a2),d0
		lsr.w	#1,d0
		divu.w	#$B,d0
		move.b	AIZTree_PlayerFrames(pc,d0.w),$22(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		jmp	(Perform_Player_DPLC).l
; End of function AIZTree_SetPlayerPos

; ---------------------------------------------------------------------------
AIZTree_PlayerFrames:
		dc.b  $69, $6A, $6B, $77, $6C, $6C, $6D, $6D, $6E, $6E, $6F, $6F, $70, $70, $71, $71, $72, $72, $73, $73
		dc.b  $74, $74, $75, $75, $76, $76, $77, $77, $6C, $6C, $6D, $6D, $6E, $6E, $6F, $6F, $70, $70, $71, $71
		dc.b  $72, $72, $73, $73, $74, $74, $75, $75, $6B, $6B, $6A, $6A, $69, $69
byte_1D64E:	dc.b  $18, $27, $18, $17, $18,  $F,  $E,  $F
; ---------------------------------------------------------------------------

Obj_AIZLRZEMZRock:
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#4,d0
		andi.b	#7,d0
		move.b	d0,$22(a0)
		add.w	d0,d0
		move.b	byte_1D64E(pc,d0.w),7(a0)
		move.b	byte_1D64E+1(pc,d0.w),d1
		move.b	d1,6(a0)
		move.b	d1,$1E(a0)
		move.l	#Map_AIZRock,$C(a0)
		move.w	#$2333,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.w	$10(a0),$2E(a0)
		move.w	#$40,$42(a0)
		cmpi.w	#1,(Current_zone_and_act).w
		bne.s	loc_1D6B6
		move.l	#Map_AIZRock2,$C(a0)
		move.w	#$42E9,$A(a0)

loc_1D6B6:
		cmpi.w	#$1200,(Current_zone_and_act).w
		bne.s	loc_1D6D2
		move.l	#Map_EMZRock,$C(a0)
		move.w	#$E300,$A(a0)
		move.b	#0,$22(a0)

loc_1D6D2:
		move.l	#loc_1D712,(a0)
		btst	#2,$2C(a0)
		beq.s	loc_1D6EA
		move.l	#loc_1D8E0,(a0)
		bra.w	loc_1D8E0
; ---------------------------------------------------------------------------

loc_1D6EA:
		move.w	$48(a0),d0
		beq.s	loc_1D712
		movea.w	d0,a2
		move.b	(a2),d0
		andi.w	#$7F,d0
		beq.s	loc_1D712
		sub.w	d0,$10(a0)
		neg.w	d0
		addi.w	#$40,d0
		move.w	d0,$42(a0)
		jsr	(ObjCheckFloorDist).l
		add.w	d1,$14(a0)

loc_1D712:
		move.w	(Chain_bonus_counter).w,$38(a0)
		move.b	(Player_1+anim).w,$32(a0)
		move.b	(Player_2+anim).w,$33(a0)
		move.b	(Player_1+status).w,$3A(a0)
		move.b	(Player_2+status).w,$3B(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		btst	#1,$2C(a0)
		beq.s	loc_1D75A
		bsr.w	sub_1DAD2

loc_1D75A:
		btst	#0,$2C(a0)
		beq.s	loc_1D76C
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_1D782

loc_1D76C:
		tst.w	(Competition_mode).w
		bne.s	loc_1D77C
		move.w	$2E(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_1D77C:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_1D782:
		cmpi.b	#$18,d0
		bne.s	loc_1D7B0
		cmpi.b	#2,$32(a0)
		beq.s	loc_1D798
		cmpi.b	#2,$33(a0)
		bne.s	loc_1D76C

loc_1D798:
		lea	(Player_1).w,a1
		move.b	$32(a0),d0
		bsr.s	sub_1D7C8
		lea	(Player_2).w,a1
		move.b	$33(a0),d0
		bsr.s	sub_1D7C8
		bra.w	loc_1D818
; ---------------------------------------------------------------------------

loc_1D7B0:
		move.b	d0,d1
		andi.b	#8,d1
		beq.s	loc_1D800
		cmpi.b	#2,$32(a0)
		bne.s	loc_1D76C
		lea	(Player_1).w,a1
		bsr.s	sub_1D7CE
		bra.s	loc_1D818

; =============== S U B R O U T I N E =======================================


sub_1D7C8:
		cmpi.b	#2,d0
		bne.s	loc_1D7EC
; End of function sub_1D7C8


; =============== S U B R O U T I N E =======================================


sub_1D7CE:
		bset	#2,$2A(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		move.w	#-$300,$1A(a1)

loc_1D7EC:
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		move.b	#2,5(a1)
		rts
; End of function sub_1D7CE

; ---------------------------------------------------------------------------

loc_1D800:
		andi.b	#$10,d0
		beq.w	loc_1D76C
		cmpi.b	#2,$33(a0)
		bne.w	loc_1D76C
		lea	(Player_2).w,a1
		bsr.s	sub_1D7CE

loc_1D818:
		move.w	$38(a0),(Chain_bonus_counter).w
		andi.b	#-$19,$2A(a0)
		tst.w	(Competition_mode).w
		bne.w	loc_1D874
		move.l	#loc_1D836,(a0)
		bsr.w	sub_1DB4E

loc_1D836:
		subq.b	#1,$24(a0)
		bpl.s	loc_1D854
		move.b	#2,$24(a0)
		move.b	$22(a0),d0
		addq.b	#1,d0
		cmpi.b	#7,d0
		bcs.s	loc_1D850
		moveq	#3,d0

loc_1D850:
		move.b	d0,$22(a0)

loc_1D854:
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		tst.b	4(a0)
		bpl.w	loc_1D86E
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_1D86E:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_1D874:
		bsr.s	sub_1D8A0
		move.b	#3,$22(a0)
		move.l	#loc_1D886,(a0)
		bsr.w	sub_1DB4E

loc_1D886:
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		tst.b	4(a0)
		bpl.w	loc_1D86E
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_1D8A0:
		jsr	(Create_New_Sprite3).l
		bne.w	locret_1D8C8
		moveq	#$48,d0

loc_1D8AC:
		move.w	(a0,d0.w),(a1,d0.w)
		subq.w	#2,d0
		bcc.s	loc_1D8AC
		move.l	(a0),$44(a1)
		move.l	#loc_1D8CA,(a1)
		move.b	#7,$22(a1)
		moveq	#0,d0

locret_1D8C8:
		rts
; End of function sub_1D8A0

; ---------------------------------------------------------------------------

loc_1D8CA:
		tst.b	4(a0)
		bmi.s	loc_1D8DA
		move.l	$44(a0),(a0)
		move.b	#0,$22(a0)

loc_1D8DA:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_1D8E0:
		move.w	(Player_1+x_vel).w,$30(a0)
		move.w	(Player_2+x_vel).w,$36(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull
		swap	d6
		andi.w	#3,d6
		bne.s	loc_1D926

loc_1D910:
		tst.w	(Competition_mode).w
		bne.s	loc_1D920
		move.w	$2E(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_1D920:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_1D926:
		lea	(Player_1).w,a1
		move.w	$30(a0),d1
		move.w	d6,d0
		andi.w	#1,d0
		beq.w	loc_1D9BE
		tst.b	$2C(a0)
		bpl.s	loc_1D948
		cmpi.b	#2,$38(a1)
		beq.s	loc_1D97A
		bra.s	loc_1D9BE
; ---------------------------------------------------------------------------

loc_1D948:
		tst.b	(Super_Sonic_Knux_flag).w
		bne.s	loc_1D97A
		btst	#4,$2B(a1)
		bne.s	loc_1D966
		cmpi.b	#2,$38(a1)
		beq.s	loc_1D97A
		btst	#5,$2A(a0)
		beq.s	loc_1D9BE

loc_1D966:
		cmpi.b	#2,$20(a1)
		bne.s	loc_1D9BE
		move.w	d1,d0
		bpl.s	loc_1D974
		neg.w	d0

loc_1D974:
		cmpi.w	#$480,d0
		bcs.s	loc_1D9BE

loc_1D97A:
		bclr	#5,$2A(a0)
		bsr.w	sub_1DA08
		btst	#6,$2A(a0)
		beq.s	loc_1D910
		lea	(Player_2).w,a1
		cmpi.b	#2,$38(a1)
		beq.s	loc_1D9A2
		cmpi.b	#2,$20(a1)
		bne.w	loc_1D910

loc_1D9A2:
		move.w	$36(a0),$18(a1)
		move.w	$18(a1),$1C(a1)
		bclr	#6,$2A(a0)
		bclr	#5,$2A(a1)
		bra.w	loc_1D910
; ---------------------------------------------------------------------------

loc_1D9BE:
		lea	(Player_2).w,a1
		move.w	$36(a0),d1
		btst	#6,$2A(a0)
		beq.w	loc_1D910
		tst.b	$2C(a0)
		bpl.s	loc_1D9E2
		cmpi.b	#2,$38(a1)
		beq.s	loc_1DA02
		bra.w	loc_1D910
; ---------------------------------------------------------------------------

loc_1D9E2:
		cmpi.b	#2,$38(a1)
		beq.s	loc_1DA02
		cmpi.b	#2,$20(a1)
		bne.w	loc_1D910
		move.w	d1,d0
		bpl.s	loc_1D9FA
		neg.w	d0

loc_1D9FA:
		cmpi.w	#$480,d0
		bcs.w	loc_1D910

loc_1DA02:
		bclr	#6,$2A(a0)

; =============== S U B R O U T I N E =======================================


sub_1DA08:
		bsr.w	sub_1DAA8
		tst.w	(Competition_mode).w
		bne.s	loc_1DA58
		move.w	d1,$18(a1)
		addq.w	#4,$10(a1)
		lea	(word_1DC30).l,a4
		move.w	$10(a0),d0
		cmp.w	$10(a1),d0
		bcs.s	loc_1DA36
		subi.w	#8,$10(a1)
		lea	(word_1DC50).l,a4

loc_1DA36:
		move.w	$18(a1),$1C(a1)
		bclr	#5,$2A(a1)
		move.l	#loc_1D836,(a0)
		moveq	#0,d0
		move.b	$22(a0),d0
		add.w	d0,d0
		bsr.w	sub_1DB60
		bra.w	loc_1D836
; ---------------------------------------------------------------------------

loc_1DA58:
		move.w	d1,$18(a1)
		addq.w	#4,$10(a1)
		lea	(word_1DCAC).l,a4
		move.w	$10(a0),d0
		cmp.w	$10(a1),d0
		bcs.s	loc_1DA7C
		subi.w	#8,$10(a1)
		lea	(word_1DCC4).l,a4

loc_1DA7C:
		move.w	$18(a1),$1C(a1)
		bclr	#5,$2A(a1)
		bsr.w	sub_1D8A0
		move.l	#loc_1D886,(a0)
		move.b	#3,$22(a0)
		moveq	#0,d0
		move.b	$22(a0),d0
		add.w	d0,d0
		bsr.w	sub_1DB60
		bra.w	loc_1D886
; End of function sub_1DA08


; =============== S U B R O U T I N E =======================================


sub_1DAA8:
		bclr	#3,$2A(a0)
		beq.s	loc_1DABC
		bset	#1,(Player_1+status).w
		bclr	#3,(Player_1+status).w

loc_1DABC:
		bclr	#4,$2A(a0)
		beq.s	locret_1DAD0
		bset	#1,(Player_2+status).w
		bclr	#3,(Player_2+status).w

locret_1DAD0:
		rts
; End of function sub_1DAA8


; =============== S U B R O U T I N E =======================================


sub_1DAD2:
		move.b	$2A(a0),d3
		andi.b	#$60,d3
		beq.w	locret_1DAFA
		move.w	$10(a0),d2
		lea	(Player_1).w,a1
		move.b	$3A(a0),d0
		moveq	#5,d6
		bsr.s	sub_1DAFC
		lea	(Player_2).w,a1
		move.b	$3B(a0),d0
		moveq	#6,d6
		bsr.s	sub_1DAFC

locret_1DAFA:
		rts
; End of function sub_1DAD2


; =============== S U B R O U T I N E =======================================


sub_1DAFC:
		btst	d6,d3
		beq.s	locret_1DB4C
		cmp.w	$10(a1),d2
		bcc.s	locret_1DB4C
		btst	#5,d0
		beq.s	locret_1DB4C
		subq.w	#1,$40(a0)
		bpl.s	locret_1DB4C
		move.w	#$10,$40(a0)
		tst.w	$42(a0)
		beq.s	locret_1DB4C
		subq.w	#1,$42(a0)
		subq.w	#1,$10(a0)
		subq.w	#1,$10(a1)
		jsr	(ObjCheckFloorDist).l
		add.w	d1,$14(a0)
		move.w	$48(a0),d0
		beq.s	locret_1DB4C
		movea.w	d0,a2
		move.b	$43(a0),d0
		subi.b	#$40,d0
		neg.b	d0
		move.b	d0,(a2)
		bset	#7,(a2)

locret_1DB4C:
		rts
; End of function sub_1DAFC


; =============== S U B R O U T I N E =======================================


sub_1DB4E:
		moveq	#0,d0
		move.b	$22(a0),d0
		add.w	d0,d0
		lea	(off_1DC28).l,a4
		adda.w	(a4,d0.w),a4
; End of function sub_1DB4E


; =============== S U B R O U T I N E =======================================


sub_1DB60:
		lea	(off_1DBEA).l,a3
		adda.w	(a3,d0.w),a3
		move.w	(a3)+,d1
		move.l	(a0),d4
		move.b	4(a0),d5
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		move.w	#3,d6
		movea.l	a0,a1
		bra.s	loc_1DB88
; ---------------------------------------------------------------------------

loc_1DB82:
		bsr.w	Create_New_Sprite3
		bne.s	loc_1DBE2

loc_1DB88:
		move.l	d4,(a1)
		move.l	$C(a0),$C(a1)
		move.b	d5,4(a1)
		move.b	(a3)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,$10(a1)
		move.b	(a3)+,d0
		ext.w	d0
		add.w	d3,d0
		move.w	d0,$14(a1)
		move.w	$A(a0),$A(a1)
		ori.w	#-$8000,$A(a1)
		move.w	#$80,8(a1)
		move.b	#$18,7(a1)
		move.b	#$18,7(a1)
		move.w	(a4)+,$18(a1)
		move.w	(a4)+,$1A(a1)
		move.b	d6,$22(a1)
		addq.b	#1,d6
		cmpi.b	#7,d6
		bcs.s	loc_1DBDE
		move.w	#3,d6

loc_1DBDE:
		dbf	d1,loc_1DB82

loc_1DBE2:
		moveq	#signextendB(sfx_Collapse),d0
		jmp	(Play_Sound_2).l
; End of function sub_1DB60

; ---------------------------------------------------------------------------
off_1DBEA:	dc.w word_1DBF2-off_1DBEA
		dc.w word_1DC04-off_1DBEA
		dc.w word_1DC10-off_1DBEA
		dc.w word_1DC1A-off_1DBEA
word_1DBF2:	dc.w 7
		dc.w $F8E8
		dc.w $BE4
		dc.w $FCF4
		dc.w $CFC
		dc.w $F404
		dc.w $40C
		dc.w $F41C
		dc.w $C1C
word_1DC04:	dc.w 4
		dc.w $FCF4
		dc.w $BF4
		dc.w $FCFC
		dc.w $F40C
		dc.w $C0C
word_1DC10:	dc.w 3
		dc.w $FCFC
		dc.w $CFC
		dc.w $F404
		dc.w $C04
word_1DC1A:	dc.w 5
		dc.w $F8F8
		dc.w $8F8
		dc.w $F800
		dc.w $800
		dc.w $F808
		dc.w $808
off_1DC28:	dc.w word_1DC30-off_1DC28
		dc.w word_1DC70-off_1DC28
		dc.w word_1DC84-off_1DC28
		dc.w word_1DC94-off_1DC28
word_1DC30:	dc.w $FD00
		dc.w $FD00
		dc.w $FD40
		dc.w $FD80
		dc.w $FD40
		dc.w $FD80
		dc.w $FD80
		dc.w $FE00
		dc.w $FD80
		dc.w $FE80
		dc.w $FDC0
		dc.w $FE80
		dc.w $FDC0
		dc.w $FF00
		dc.w $FE00
		dc.w $FF00
word_1DC50:	dc.w $300
		dc.w $FD00
		dc.w $2C0
		dc.w $FD80
		dc.w $2C0
		dc.w $FD80
		dc.w $280
		dc.w $FE00
		dc.w $280
		dc.w $FE80
		dc.w $240
		dc.w $FE80
		dc.w $240
		dc.w $FF00
		dc.w $200
		dc.w $FF00
word_1DC70:	dc.w $FE00
		dc.w $FE00
		dc.w $200
		dc.w $FE00
		dc.w $FF00
		dc.w $FE20
		dc.w $FE50
		dc.w $FE40
		dc.w $1C0
		dc.w $FE40
word_1DC84:	dc.w $FF00
		dc.w $FE00
		dc.w $100
		dc.w $FE20
		dc.w $FE50
		dc.w $FE40
		dc.w $1C0
		dc.w $FE40
word_1DC94:	dc.w $FF50
		dc.w $FE20
		dc.w $B0
		dc.w $FE30
		dc.w $FF80
		dc.w $FE00
		dc.w $80
		dc.w $FE20
		dc.w $FF28
		dc.w $FE40
		dc.w $E0
		dc.w $FE40
word_1DCAC:	dc.w $FD40
		dc.w $FD80
		dc.w $FD80
		dc.w $FE00
		dc.w $FD80
		dc.w $FE80
		dc.w $FDC0
		dc.w $FE80
		dc.w $FDC0
		dc.w $FF00
		dc.w $FE00
		dc.w $FF00
word_1DCC4:	dc.w $2C0
		dc.w $FD80
		dc.w $280
		dc.w $FE00
		dc.w $280
		dc.w $FE80
		dc.w $240
		dc.w $FE80
		dc.w $240
		dc.w $FF00
		dc.w $200
		dc.w $FF00
Map_AIZRock:	include "Levels/AIZ/Misc Object Data/Map - Rock.asm"
Map_AIZRock2:	include "Levels/AIZ/Misc Object Data/Map - Rock 2.asm"
Map_EMZRock:	include "Levels/EMZ/Misc Object Data/Map - Rock.asm"
; ---------------------------------------------------------------------------

Obj_CollapsingPlatform:
		move.l	#Map_AIZCollapsingPlatform,$C(a0)
		move.w	#$4001,$A(a0)
		cmpi.w	#1,(Current_zone_and_act).w
		bne.s	loc_1DE40
		move.l	#Map_AIZCollapsingPlatform2,$C(a0)
		move.w	#$4001,$A(a0)

loc_1DE40:
		move.l	#byte_1E49C,$30(a0)
		move.l	#byte_1E658,$3C(a0)
		move.b	#$3C,7(a0)
		move.b	#$20,6(a0)
		cmpi.b	#5,(Current_zone).w
		bne.s	loc_1DE8E
		move.l	#Map_ICZCollapsingBridge,$C(a0)
		move.w	#$4001,$A(a0)
		move.l	#byte_1E4BA,$30(a0)
		move.l	#byte_1E698,$3C(a0)
		move.b	#$30,7(a0)
		move.b	#$30,6(a0)

loc_1DE8E:
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#7,$38(a0)
		move.b	$2C(a0),$22(a0)
		ori.b	#$80,$2A(a0)
		move.l	#loc_1DEB2,(a0)

loc_1DEB2:
		tst.b	$3A(a0)
		beq.s	loc_1DEC4
		tst.b	$38(a0)
		beq.w	loc_1E40E
		subq.b	#1,$38(a0)

loc_1DEC4:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	sub_1DED4
		move.b	#1,$3A(a0)

; =============== S U B R O U T I N E =======================================


sub_1DED4:
		moveq	#0,d1
		move.b	7(a0),d1
		movea.l	$3C(a0),a2
		move.w	$10(a0),d4
		jsr	(SolidObjectTopSloped2).l
		bra.w	Sprite_OnScreen_Test
; End of function sub_1DED4

; ---------------------------------------------------------------------------

loc_1DEEC:
		tst.b	$38(a0)
		beq.s	loc_1DF3C
		tst.b	$3A(a0)
		bne.s	loc_1DF00
		subq.b	#1,$38(a0)
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

loc_1DF00:
		bsr.w	sub_1DED4
		subq.b	#1,$38(a0)
		bne.s	locret_1DF3A
		lea	(Player_1).w,a1
		moveq	#3,d6
		bsr.s	sub_1DF18
		lea	(Player_2).w,a1
		moveq	#4,d6

; =============== S U B R O U T I N E =======================================


sub_1DF18:
		btst	d6,$2A(a0)
		beq.s	locret_1DF3A
		bclr	d6,$2A(a0)
		bclr	#3,$2A(a1)
		bclr	#5,$2A(a1)
		bset	#1,$2A(a1)
		move.b	#1,$21(a1)

locret_1DF3A:
		rts
; End of function sub_1DF18

; ---------------------------------------------------------------------------

loc_1DF3C:
		bsr.w	MoveSprite
		tst.b	4(a0)
		bpl.w	Delete_Current_Sprite
		bra.w	Draw_Sprite
; ---------------------------------------------------------------------------

Obj_CollapsingBridge:
		move.l	#loc_1E150,(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		cmpi.b	#6,(Current_zone).w
		bne.s	loc_1DFD4
		move.b	$2C(a0),d0
		andi.w	#$3F,d0
		add.w	d0,d0
		add.w	d0,d0
		addq.w	#8,d0
		bcc.s	loc_1DF7A
		move.b	#-1,d0

loc_1DF7A:
		move.b	d0,$38(a0)
		btst	#6,$2C(a0)
		bne.s	loc_1DFB2
		move.l	#Map_LBZCollapsingBridge,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$40,7(a0)
		move.b	#$10,6(a0)
		move.l	#LBZBridgeCollapse_TimerArray,$30(a0)
		move.l	#LBZBridgeCollapse_TimerFlipArray,$34(a0)
		bra.s	loc_1DFD4
; ---------------------------------------------------------------------------

loc_1DFB2:
		move.l	#Map_LBZCollapsingLedge,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$20,7(a0)
		move.b	#$30,6(a0)
		move.l	#LBZLedgeCollapse_TimerArray,$30(a0)

loc_1DFD4:
		cmpi.b	#1,(Current_zone).w
		bne.w	loc_1E06E
		move.l	#Map_HCZCollapsingBridge,$C(a0)
		move.w	#$C001,$A(a0)
		move.b	$2C(a0),d0
		bpl.s	loc_1E006
		move.b	d0,d1
		andi.b	#$F,d1
		move.b	d1,$40(a0)
		move.l	#loc_1E2E8,(a0)
		andi.b	#$70,d0

loc_1E006:
		move.b	d0,d1
		andi.w	#$F,d0
		lsl.w	#4,d0
		addq.w	#8,d0
		move.b	d0,$38(a0)
		andi.w	#$F0,d1
		lsr.w	#2,d1
		lea	byte_1E03E(pc,d1.w),a1
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$2C(a0)
		add.w	d1,d1
		lea	off_1E04E(pc,d1.w),a1
		move.l	(a1)+,$30(a0)
		move.l	(a1)+,$34(a0)
		bra.s	loc_1E06E
; ---------------------------------------------------------------------------
byte_1E03E:	dc.b $40
		dc.b $10
		dc.b 0
		dc.b $80
		dc.b $50
		dc.b $10
		dc.b 3
		dc.b $80
		dc.b $40
		dc.b $10
		dc.b 6
		dc.b 0
		dc.b $50
		dc.b $20
		dc.b 9
		dc.b $80
off_1E04E:	dc.l byte_1E508
		dc.l byte_1E518
		dc.l byte_1E528
		dc.l byte_1E53C
		dc.l byte_1E550
		dc.l byte_1E550
		dc.l byte_1E55F
		dc.l byte_1E577
; ---------------------------------------------------------------------------

loc_1E06E:
		cmpi.b	#2,(Current_zone).w
		bne.s	loc_1E0F0
		move.l	#Map_MGZCollapsingBridge,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.w	#$F,d0
		lsl.w	#4,d0
		addq.w	#8,d0
		move.b	d0,$38(a0)
		andi.w	#$F0,d1
		lsr.w	#2,d1
		lea	byte_1E0CC(pc,d1.w),a1
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$2C(a0)
		add.w	d1,d1
		lea	off_1E0D8(pc,d1.w),a1
		move.l	(a1)+,$30(a0)
		move.l	(a1)+,$34(a0)
		cmpi.w	#$10,d1
		bne.s	loc_1E0F0
		move.l	#loc_1E1C2,(a0)
		rts
; ---------------------------------------------------------------------------
byte_1E0CC:	dc.b $40
		dc.b $20
		dc.b 0
		dc.b $80
		dc.b $30
		dc.b $20
		dc.b 3
		dc.b $80
		dc.b $40
		dc.b $20
		dc.b 6
		dc.b $80
off_1E0D8:	dc.l byte_1E58F
		dc.l byte_1E5AF
		dc.l byte_1E5CF
		dc.l byte_1E5E7
		dc.l byte_1E58F
		dc.l byte_1E5AF
; ---------------------------------------------------------------------------

loc_1E0F0:
		cmpi.b	#5,(Current_zone).w
		bne.s	loc_1E150
		move.b	$2C(a0),d0
		bpl.s	loc_1E112
		move.b	d0,d1
		andi.b	#$F,d1
		move.b	d1,$40(a0)
		move.l	#loc_1E2E8,(a0)
		andi.b	#$70,d0

loc_1E112:
		move.b	d0,d1
		andi.w	#$F,d0
		lsl.w	#4,d0
		addq.w	#8,d0
		move.b	d0,$38(a0)
		move.l	#Map_ICZCollapsingBridge,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$50,7(a0)
		move.b	#$38,6(a0)
		move.l	#byte_1E5FF,$30(a0)
		move.l	#byte_1E62B,$34(a0)
		move.b	#3,$22(a0)

loc_1E150:
		tst.b	$3A(a0)
		beq.s	loc_1E19A
		tst.b	$38(a0)
		bne.s	loc_1E196
		movea.l	$30(a0),a4
		tst.b	$2C(a0)
		bpl.s	loc_1E192
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_1E192
		move.w	(Player_1+x_pos).w,d1
		andi.b	#8,d0
		bne.s	loc_1E17E
		move.w	(Player_2+x_pos).w,d1

loc_1E17E:
		cmp.w	$10(a0),d1
		bcc.s	loc_1E192
		movea.l	$34(a0),a4
		bchg	#0,$2A(a0)
		addq.b	#1,$22(a0)

loc_1E192:
		bra.w	loc_1E402
; ---------------------------------------------------------------------------

loc_1E196:
		subq.b	#1,$38(a0)

loc_1E19A:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_1E1AA
		move.b	#1,$3A(a0)

loc_1E1AA:
		moveq	#0,d1
		move.b	7(a0),d1
		move.w	#$10,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		bra.w	Sprite_OnScreen_Test
; ---------------------------------------------------------------------------

loc_1E1C2:
		moveq	#0,d1
		move.b	7(a0),d1
		move.w	#$10,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_1E244
		move.b	(Player_1+status_tertiary).w,d1
		andi.b	#8,d0
		bne.s	loc_1E1EE
		move.b	(Player_2+status_tertiary).w,d1

loc_1E1EE:
		tst.b	d1
		bpl.s	loc_1E244
		bclr	#3,$2A(a0)
		beq.s	loc_1E204
		lea	(Player_1).w,a1
		bclr	#3,$2A(a1)

loc_1E204:
		bclr	#4,$2A(a0)
		beq.s	loc_1E216
		lea	(Player_2).w,a1
		bclr	#3,$2A(a1)

loc_1E216:
		lea	(word_1E268).l,a4
		addq.b	#1,$22(a0)
		move.w	#$80,8(a0)
		move.l	#loc_1E248,(a0)
		jsr	(sub_1F98C).l
		move.w	$48(a0),d0
		beq.s	loc_1E242
		movea.w	d0,a1
		bclr	#7,(a1)
		clr.w	$48(a0)

loc_1E242:
		bra.s	loc_1E248
; ---------------------------------------------------------------------------

loc_1E244:
		bra.w	Sprite_OnScreen_Test
; ---------------------------------------------------------------------------

loc_1E248:
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		tst.b	4(a0)
		bpl.w	loc_1E262
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_1E262:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
word_1E268:	dc.w $FC00
		dc.w $F600
		dc.w $FD00
		dc.w $F600
		dc.w $FE00
		dc.w $F600
		dc.w $FF00
		dc.w $F600
		dc.w $100
		dc.w $F600
		dc.w $200
		dc.w $F600
		dc.w $300
		dc.w $F600
		dc.w $400
		dc.w $F600
		dc.w $FC40
		dc.w $F700
		dc.w $FD40
		dc.w $F700
		dc.w $FE40
		dc.w $F700
		dc.w $FF40
		dc.w $F700
		dc.w $C0
		dc.w $F700
		dc.w $1C0
		dc.w $F700
		dc.w $2C0
		dc.w $F700
		dc.w $3C0
		dc.w $F700
		dc.w $FC80
		dc.w $F800
		dc.w $FD80
		dc.w $F800
		dc.w $FE80
		dc.w $F800
		dc.w $FF80
		dc.w $F800
		dc.w $80
		dc.w $F800
		dc.w $180
		dc.w $F800
		dc.w $280
		dc.w $F800
		dc.w $380
		dc.w $F800
		dc.w $FCC0
		dc.w $F900
		dc.w $FDC0
		dc.w $F900
		dc.w $FEC0
		dc.w $F900
		dc.w $FFC0
		dc.w $F900
		dc.w $40
		dc.w $F900
		dc.w $140
		dc.w $F900
		dc.w $240
		dc.w $F900
		dc.w $340
		dc.w $F900
; ---------------------------------------------------------------------------

loc_1E2E8:
		tst.b	$3A(a0)
		beq.s	loc_1E332
		tst.b	$38(a0)
		bne.s	loc_1E32E
		movea.l	$30(a0),a4
		tst.b	$2C(a0)
		bpl.s	loc_1E32A
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_1E32A
		move.w	(Player_1+x_pos).w,d1
		andi.b	#8,d0
		bne.s	loc_1E316
		move.w	(Player_2+x_pos).w,d1

loc_1E316:
		cmp.w	$10(a0),d1
		bcc.s	loc_1E32A
		movea.l	$34(a0),a4
		bchg	#0,$2A(a0)
		addq.b	#1,$22(a0)

loc_1E32A:
		bra.w	loc_1E402
; ---------------------------------------------------------------------------

loc_1E32E:
		subq.b	#1,$38(a0)

loc_1E332:
		move.b	$40(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		lea	(a3,d0.w),a3
		tst.b	(a3)
		beq.s	loc_1E350
		move.b	#1,$3A(a0)
		clr.w	$48(a0)

loc_1E350:
		bra.w	loc_1E1AA
; ---------------------------------------------------------------------------

Obj_PlatformCollapseWait:
		tst.b	$38(a0)
		beq.w	Obj_PlatformCollapseFall
		tst.b	$3A(a0)
		bne.s	Obj_PlatformCollapseWaitHandlePlayer
		subq.b	#1,$38(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_PlatformCollapseFall:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bpl.s	loc_1E37E
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_1E37E:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_PlatformCollapseWaitHandlePlayer:
		subq.b	#1,$38(a0)
		move.b	$38(a0),d3
		movea.l	$30(a0),a2
		moveq	#0,d1
		move.b	7(a0),d1
		lea	(Player_1).w,a1
		moveq	#3,d6
		bsr.s	Check_CollapsePlayerRelease
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.s	Check_CollapsePlayerRelease
		bra.w	Sprite_OnScreen_Test

; =============== S U B R O U T I N E =======================================


Check_CollapsePlayerRelease:
		btst	d6,$2A(a0)
		beq.s	locret_1E400
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_1E3E4
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_1E3E4
		cmp.w	d2,d0
		bcc.s	loc_1E3E4
		btst	#0,$2A(a0)
		beq.s	loc_1E3D8
		neg.w	d0
		add.w	d2,d0

loc_1E3D8:
		lsr.w	#4,d0
		move.b	(a2),d2
		sub.b	(a2,d0.w),d2
		cmp.b	d2,d3
		bhi.s	locret_1E400

loc_1E3E4:
		bclr	d6,$2A(a0)
		bclr	#3,$2A(a1)
		bclr	#5,$2A(a1)
		bset	#1,$2A(a1)
		move.b	#1,$21(a1)

locret_1E400:
		rts
; End of function Check_CollapsePlayerRelease

; ---------------------------------------------------------------------------

loc_1E402:
		move.l	#Obj_PlatformCollapseWait,(a0)
		addq.b	#1,$22(a0)
		bra.s	loc_1E41C
; ---------------------------------------------------------------------------

loc_1E40E:
		move.l	#loc_1DEEC,(a0)
		addq.b	#2,$22(a0)
		movea.l	$30(a0),a4

loc_1E41C:
		moveq	#0,d0
		move.b	$22(a0),d0
		add.w	d0,d0
		movea.l	$C(a0),a3
		adda.w	(a3,d0.w),a3
		move.w	(a3)+,d1
		subq.w	#1,d1
		bset	#5,4(a0)
		move.l	(a0),d4
		move.b	4(a0),d5
		movea.l	a0,a1
		bra.s	loc_1E448
; ---------------------------------------------------------------------------

loc_1E440:
		bsr.w	Create_New_Sprite3
		bne.s	loc_1E47E
		addq.w	#6,a3

loc_1E448:
		move.l	d4,(a1)
		move.l	a3,$C(a1)
		move.b	d5,4(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	$A(a0),$A(a1)
		move.w	8(a0),8(a1)
		move.b	7(a0),7(a1)
		move.b	6(a0),6(a1)
		move.b	(a4)+,$38(a1)
		dbf	d1,loc_1E440

loc_1E47E:
		jsr	(Draw_Sprite).l
		move.w	$48(a0),d0
		beq.s	loc_1E494
		movea.w	d0,a1
		bclr	#7,(a1)
		clr.w	$48(a0)

loc_1E494:
		moveq	#signextendB(sfx_Collapse),d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------
byte_1E49C:	dc.b  $30, $2C, $28, $24, $20, $1C, $2E, $2A, $26, $22, $1E, $1A, $2C, $28, $24, $20, $1C, $18, $2A, $26
		dc.b  $22, $1E, $1A, $16, $28, $24, $20, $1C, $18, $14
byte_1E4BA:	dc.b  $30, $2C, $28, $24, $20, $1C, $2E, $2A, $26, $22, $1E, $1A, $2C, $28, $24, $20, $1C, $18, $2A, $26
		dc.b  $22, $1E, $1A, $16, $28, $24, $20, $1C, $18, $14, $12, $10
LBZBridgeCollapse_TimerArray:
		dc.b  $20, $1C, $18, $14, $10,  $C,   8,   4, $1E, $1A, $16, $12,  $E,  $A,   6,   2
LBZBridgeCollapse_TimerFlipArray:
		dc.b  $20,   4,   8,  $C, $10, $14, $18, $1C,   2,   6,  $A,  $E, $12, $16, $1A, $1E
LBZLedgeCollapse_TimerArray:
		dc.b  $20, $18, $10,   8, $1E, $16,  $E,   6, $1C, $14,  $C,   4, $1A, $12
byte_1E508:	dc.b  $20, $1C, $18, $14, $10,  $C,   8,   4, $1E, $1A, $16, $12,  $E,  $A,   6,   2
byte_1E518:	dc.b  $20,   4,   8,  $C, $10, $14, $18, $1C,   2,   6,  $A,  $E, $12, $16, $1A, $1E
byte_1E528:	dc.b  $28, $24, $20, $1C, $18, $14, $10,  $C,   8,   4, $26, $22, $1E, $1A, $16, $12,  $E,  $A,   6,   2
byte_1E53C:	dc.b  $28,   4,   8,  $C, $10, $14, $18, $1C, $20, $24,   2,   6,  $A,  $E, $12, $16, $1A, $1E, $22, $26
byte_1E550:	dc.b  $1C,   4,   8,  $C, $10, $14, $18,   2,   6,  $A,  $E, $12, $16, $1A, $1E
byte_1E55F:	dc.b  $30, $2A, $24, $1E, $18, $12,  $C,   6, $2E, $28, $22, $1C, $16, $10,  $A,   4, $2C, $26, $20, $1A
		dc.b  $14,  $E,   8,   2
byte_1E577:	dc.b  $30,   6,  $C, $12, $18, $1E, $24, $2A,   4,  $A, $10, $16, $1C, $22, $28, $2E,   2,   8,  $E, $14
		dc.b  $1A, $20, $26, $2C
byte_1E58F:	dc.b  $40, $38, $30, $28, $20, $18, $10,   8, $3E, $36, $2E, $26, $1E, $16,  $E,   6, $3C, $34, $2C, $24
		dc.b  $1C, $14,  $C,   4, $3A, $32, $2A, $22, $1A, $12,  $A,   2
byte_1E5AF:	dc.b  $40,   8, $10, $18, $20, $28, $30, $38,   6,  $E, $16, $1E, $26, $2E, $36, $3E,   4,  $C, $14, $1C
		dc.b  $24, $2C, $34, $3C,   2,  $A, $12, $1A, $22, $2A, $32, $3A
byte_1E5CF:	dc.b  $30, $28, $20, $18, $10,   8, $2E, $26, $1E, $16,  $E,   6, $2C, $24, $1C, $14,  $C,   4, $2A, $22
		dc.b  $1A, $12,  $A,   2
byte_1E5E7:	dc.b  $30,   8, $10, $18, $20, $28,   6,  $E, $16, $1E, $26, $2E,   4,  $C, $14, $1C, $24, $2C,   2,  $A
		dc.b  $12, $1A, $22, $2A
byte_1E5FF:	dc.b  $28, $24, $20, $1C, $18, $14, $10,  $C,   8,   4, $27, $23, $1F, $1B, $17, $13,  $F,  $B,   7,   3
		dc.b  $26, $22, $1E, $1A, $16, $12,  $E,  $A,   6,   2, $25, $21, $1D, $19, $15, $11,  $D,   9,   5,   1
		dc.b    4,   3,   2,   1
byte_1E62B:	dc.b  $28,   4,   8,  $C, $10, $14, $18, $1C, $20, $24,   3,   7,  $B,  $F, $13, $17, $1B, $1F, $23, $27
		dc.b    2,   6,  $A,  $E, $12, $16, $1A, $1E, $22, $26,   1,   5,   9,  $D, $11, $15, $19, $1D, $21, $25
		dc.b    1,   2,   3,   4,   0
byte_1E658:	dc.b  $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F, $1F
		dc.b  $1F, $1F, $1E, $1E, $1D, $1D, $1C, $1C, $1B, $1B, $1A, $1A, $19, $19, $18, $18, $17, $17, $16, $16
		dc.b  $15, $15, $14, $14, $13, $13, $12, $12, $11, $11, $10, $10,  $F,  $F,  $E,  $E,  $E,  $E,  $E,  $E
		dc.b   $E,  $E,  $E,  $E
byte_1E698:	dc.b  $30, $30, $30, $30, $30, $30, $30, $30, $30, $30, $30, $30, $2F, $2F, $2F, $2F, $2F, $2F, $2F, $2F
		dc.b  $2F, $2F, $2F, $2F, $2E, $2E, $2E, $2E, $2E, $2E, $2E, $2E, $2D, $2D, $2D, $2D, $2D, $2D, $2D, $2D
		dc.b  $2D, $2D, $2D, $2D, $2D, $2C, $2B, $2A
Map_AIZCollapsingPlatform:
		include "Levels/AIZ/Misc Object Data/Map - Collapsing Platform.asm"
Map_AIZCollapsingPlatform2:
		include "Levels/AIZ/Misc Object Data/Map - Collapsing Platform 2.asm"
Map_LBZCollapsingBridge:
		include "Levels/LBZ/Misc Object Data/Map - Collapsing Bridge.asm"
Map_LBZCollapsingLedge:
		include "Levels/LBZ/Misc Object Data/Map - Collapsing Ledge.asm"
Map_HCZCollapsingBridge:
		include "Levels/HCZ/Misc Object Data/Map - Collapsing Bridge.asm"
Map_MGZCollapsingBridge:
		include "Levels/MGZ/Misc Object Data/Map - Collapsing Bridge.asm"
Map_ICZCollapsingBridge:
		include "Levels/ICZ/Misc Object Data/Map - Collapsing Bridge.asm"
; ---------------------------------------------------------------------------

Obj_BreakableWall:
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.l	#loc_1F844,(a0)
		move.b	$2C(a0),d0
		bpl.s	loc_1F6E0
		tst.b	(Level_trigger_array).w
		beq.s	loc_1F6E0
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_1F6E0:
		andi.b	#$F,d0
		move.b	d0,$22(a0)
		move.l	#Map_AIZBreakableWall,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$28,6(a0)
		move.l	#word_1FBE2,$34(a0)
		move.l	#word_1FC0A,$38(a0)
		cmpi.b	#1,(Current_zone).w
		bne.s	loc_1F776
		move.l	#Map_HCZBreakableWall,$C(a0)
		move.w	#$6001,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$20,6(a0)
		move.l	#word_1FC32,$34(a0)
		move.l	#word_1FC52,$38(a0)
		cmpi.b	#2,$22(a0)
		bne.s	loc_1F776
		move.w	#$4350,$A(a0)
		move.b	#$18,7(a0)
		move.b	#$20,6(a0)
		move.l	#word_1FC32,$34(a0)
		move.l	#word_1FC52,$38(a0)
		move.l	#loc_1FAEC,(a0)
		rts
; ---------------------------------------------------------------------------

loc_1F776:
		cmpi.b	#2,(Current_zone).w
		bne.s	loc_1F7C8
		move.l	#Map_MGZBreakableWall,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$20,7(a0)
		move.b	#$28,6(a0)
		move.l	#word_1FCC2,$34(a0)
		move.l	#word_1FC72,$38(a0)
		btst	#4,$2C(a0)
		beq.s	loc_1F7B8
		move.l	#loc_1FAEC,(a0)
		rts
; ---------------------------------------------------------------------------

loc_1F7B8:
		cmpi.b	#2,$22(a0)
		bne.s	loc_1F7C8
		move.l	#loc_1FA02,(a0)
		rts
; ---------------------------------------------------------------------------

loc_1F7C8:
		cmpi.b	#3,(Current_zone).w
		bne.s	loc_1F80A
		move.l	#Map_CNZBreakableWall,$C(a0)
		move.w	#$4420,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$20,6(a0)
		move.l	#word_1FD12,$34(a0)
		move.l	#word_1FD32,$38(a0)
		cmpi.b	#2,$22(a0)
		bne.s	loc_1F80A
		move.l	#loc_1FAEC,(a0)
		rts
; ---------------------------------------------------------------------------

loc_1F80A:
		cmpi.b	#6,(Current_zone).w
		bne.s	loc_1F844
		move.l	#Map_LBZBreakableWall,$C(a0)
		move.w	#$22EA,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$20,6(a0)
		move.l	#word_1FC32,$34(a0)
		move.l	#word_1FC52,$38(a0)
		move.l	#loc_1FAEC,(a0)
		rts
; ---------------------------------------------------------------------------

loc_1F844:
		move.w	(Player_1+x_vel).w,$30(a0)
		move.w	(Player_2+x_vel).w,$32(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		tst.b	$2C(a0)
		bpl.s	loc_1F880
		tst.b	(Level_trigger_array).w
		beq.s	loc_1F888
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_1F880:
		swap	d6
		andi.w	#3,d6
		bne.s	loc_1F88E

loc_1F888:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_1F88E:
		lea	(Player_1).w,a1
		move.w	$30(a0),d1
		move.w	d6,d0
		andi.w	#1,d0
		beq.s	loc_1F906
		tst.b	(Super_Sonic_Knux_flag).w
		bne.s	loc_1F8D0
		btst	#4,$2B(a1)
		bne.s	loc_1F8BC
		cmpi.b	#2,$38(a1)
		beq.s	loc_1F8D0
		btst	#5,$2A(a0)
		beq.s	loc_1F906

loc_1F8BC:
		cmpi.b	#2,$20(a1)
		bne.s	loc_1F906
		move.w	d1,d0
		bpl.s	loc_1F8CA
		neg.w	d0

loc_1F8CA:
		cmpi.w	#$480,d0
		bcs.s	loc_1F906

loc_1F8D0:
		bclr	#5,$2A(a0)
		bsr.s	sub_1F936
		btst	#6,$2A(a0)
		beq.s	loc_1F888
		lea	(Player_2).w,a1
		cmpi.b	#2,$20(a1)
		bne.s	loc_1F888
		move.w	$32(a0),$18(a1)
		move.w	$18(a1),$1C(a1)
		bclr	#6,$2A(a0)
		bclr	#5,$2A(a1)
		bra.s	loc_1F888
; ---------------------------------------------------------------------------

loc_1F906:
		lea	(Player_2).w,a1
		move.w	$32(a0),d1
		btst	#6,$2A(a0)
		beq.w	loc_1F888
		cmpi.b	#2,$20(a1)
		bne.w	loc_1F888
		move.w	d1,d0
		bpl.s	loc_1F928
		neg.w	d0

loc_1F928:
		cmpi.w	#$480,d0
		bcs.w	loc_1F888
		bclr	#6,$2A(a0)

; =============== S U B R O U T I N E =======================================


sub_1F936:
		move.w	d1,$18(a1)
		addq.w	#4,$10(a1)
		movea.l	$34(a0),a4
		move.w	$10(a0),d0
		cmp.w	$10(a1),d0
		bcs.s	loc_1F956
		subi.w	#8,$10(a1)
		movea.l	$38(a0),a4

loc_1F956:
		move.w	$18(a1),$1C(a1)
		bclr	#5,$2A(a1)
		move.l	#loc_1F96E,(a0)
		addq.b	#1,$22(a0)
		bsr.s	sub_1F98C

loc_1F96E:
		jsr	(MoveSprite2).l
		addi.w	#$70,$1A(a0)
		tst.b	4(a0)
		bpl.s	loc_1F986
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_1F986:
		jmp	(Delete_Current_Sprite).l
; End of function sub_1F936


; =============== S U B R O U T I N E =======================================


sub_1F98C:
		moveq	#0,d0
		move.b	$22(a0),d0
		add.w	d0,d0
		movea.l	$C(a0),a3
		adda.w	(a3,d0.w),a3
		move.w	(a3)+,d1
		subq.w	#1,d1
		bset	#5,4(a0)
		move.l	(a0),d4
		move.b	4(a0),d5
		movea.l	a0,a1
		bra.s	loc_1F9BA
; ---------------------------------------------------------------------------

loc_1F9B0:
		jsr	(Create_New_Sprite3).l
		bne.s	loc_1F9FA
		addq.w	#6,a3

loc_1F9BA:
		move.l	d4,(a1)
		move.l	a3,$C(a1)
		move.b	d5,4(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	$A(a0),$A(a1)
		ori.w	#-$8000,$A(a1)
		move.b	8(a0),8(a1)
		move.b	7(a0),7(a1)
		move.b	6(a0),6(a1)
		move.w	(a4)+,$18(a1)
		move.w	(a4)+,$1A(a1)
		dbf	d1,loc_1F9B0

loc_1F9FA:
		moveq	#signextendB(sfx_Collapse),d0
		jmp	(Play_Sound_2).l
; End of function sub_1F98C

; ---------------------------------------------------------------------------

loc_1FA02:
		move.w	(Player_1+x_vel).w,$30(a0)
		move.w	(Player_2+x_vel).w,$32(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		swap	d6
		andi.b	#3,d6
		beq.w	loc_1FABC
		move.b	d6,d0
		andi.b	#1,d0
		beq.s	loc_1FA90
		lea	(Player_1).w,a1
		bclr	#6,$37(a1)
		beq.s	loc_1FA90
		move.w	$30(a0),$18(a1)
		move.w	$18(a1),$1C(a1)
		bclr	#5,$2A(a1)
		bclr	#5,$2A(a0)
		bsr.s	sub_1FAC2
		andi.b	#2,d6
		beq.s	loc_1FABC
		lea	(Player_2).w,a1
		bclr	#6,$37(a1)
		beq.s	loc_1FABC
		move.w	$32(a0),$18(a1)
		move.w	$18(a1),$1C(a1)
		bclr	#5,$2A(a1)
		bclr	#6,$2A(a0)
		bra.s	loc_1FABC
; ---------------------------------------------------------------------------

loc_1FA90:
		andi.b	#2,d6
		beq.s	loc_1FABC
		lea	(Player_2).w,a1
		bclr	#6,$37(a1)
		beq.s	loc_1FABC
		move.w	$32(a0),$18(a1)
		move.w	$18(a1),$1C(a1)
		bclr	#5,$2A(a1)
		bclr	#6,$2A(a0)
		bsr.s	sub_1FAC2

loc_1FABC:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_1FAC2:
		movea.l	$34(a0),a4
		move.w	$10(a0),d0
		cmp.w	$10(a1),d0
		bcs.s	loc_1FADA
		subi.w	#8,$10(a1)
		movea.l	$38(a0),a4

loc_1FADA:
		move.l	#loc_1F96E,(a0)
		addq.b	#1,$22(a0)
		bsr.w	sub_1F98C
		bra.w	loc_1F96E
; End of function sub_1FAC2

; ---------------------------------------------------------------------------

loc_1FAEC:
		move.w	(Player_1+x_vel).w,$30(a0)
		move.w	(Player_2+x_vel).w,$32(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		tst.b	$2C(a0)
		bpl.s	loc_1FB28
		tst.b	(Level_trigger_array).w
		beq.s	loc_1FB32
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_1FB28:
		move.b	$2A(a0),d0
		andi.b	#$60,d0
		bne.s	loc_1FB38

loc_1FB32:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_1FB38:
		lea	(Player_1).w,a1
		move.w	$30(a0),d1
		btst	#5,$2A(a0)
		beq.s	loc_1FB86
		cmpi.b	#2,$38(a1)
		bne.s	loc_1FB86
		bclr	#5,$2A(a0)
		bsr.s	sub_1FBA4
		btst	#6,$2A(a0)
		beq.s	loc_1FB32
		lea	(Player_2).w,a1
		cmpi.b	#2,$38(a1)
		bne.s	loc_1FB32
		move.w	$32(a0),$18(a1)
		move.w	$18(a1),$1C(a1)
		bclr	#6,$2A(a0)
		bclr	#5,$2A(a1)
		bra.s	loc_1FB32
; ---------------------------------------------------------------------------

loc_1FB86:
		lea	(Player_2).w,a1
		move.w	$32(a0),d1
		btst	#6,$2A(a0)
		beq.s	loc_1FB32
		cmpi.b	#2,$38(a1)
		bne.s	loc_1FB32
		bclr	#6,$2A(a0)

; =============== S U B R O U T I N E =======================================


sub_1FBA4:
		move.w	d1,$18(a1)
		addq.w	#4,$10(a1)
		movea.l	$34(a0),a4
		move.w	$10(a0),d0
		cmp.w	$10(a1),d0
		bcs.s	loc_1FBC4
		subi.w	#8,$10(a1)
		movea.l	$38(a0),a4

loc_1FBC4:
		move.w	$18(a1),$1C(a1)
		bclr	#5,$2A(a1)
		move.l	#loc_1F96E,(a0)
		addq.b	#1,$22(a0)
		bsr.w	sub_1F98C
		bra.w	loc_1F96E
; End of function sub_1FBA4

; ---------------------------------------------------------------------------
word_1FBE2:	dc.w $400
		dc.w $FB00
		dc.w $600
		dc.w $FA00
		dc.w $600
		dc.w $FF00
		dc.w $800
		dc.w $FE00
		dc.w $680
		dc.w 0
		dc.w $880
		dc.w 0
		dc.w $600
		dc.w $100
		dc.w $800
		dc.w $200
		dc.w $400
		dc.w $500
		dc.w $600
		dc.w $600
word_1FC0A:	dc.w $FA00
		dc.w $FA00
		dc.w $FC00
		dc.w $FB00
		dc.w $F800
		dc.w $FE00
		dc.w $FA00
		dc.w $FF00
		dc.w $F780
		dc.w 0
		dc.w $F980
		dc.w 0
		dc.w $F800
		dc.w $200
		dc.w $FA00
		dc.w $100
		dc.w $FA00
		dc.w $600
		dc.w $FC00
		dc.w $500
word_1FC32:	dc.w $400
		dc.w $FB00
		dc.w $600
		dc.w $FA00
		dc.w $600
		dc.w $FF00
		dc.w $800
		dc.w $FE00
		dc.w $600
		dc.w $100
		dc.w $800
		dc.w $200
		dc.w $400
		dc.w $500
		dc.w $600
		dc.w $600
word_1FC52:	dc.w $FA00
		dc.w $FA00
		dc.w $FC00
		dc.w $FB00
		dc.w $F800
		dc.w $FE00
		dc.w $FA00
		dc.w $FF00
		dc.w $F800
		dc.w $200
		dc.w $FA00
		dc.w $100
		dc.w $FA00
		dc.w $600
		dc.w $FC00
		dc.w $500
word_1FC72:	dc.w $400
		dc.w $FB00
		dc.w $500
		dc.w $FA80
		dc.w $600
		dc.w $FA00
		dc.w $700
		dc.w $F980
		dc.w $600
		dc.w $FF00
		dc.w $700
		dc.w $FE80
		dc.w $800
		dc.w $FE00
		dc.w $900
		dc.w $FD80
		dc.w $680
		dc.w 0
		dc.w $780
		dc.w 0
		dc.w $880
		dc.w 0
		dc.w $980
		dc.w 0
		dc.w $600
		dc.w $100
		dc.w $700
		dc.w $180
		dc.w $800
		dc.w $200
		dc.w $900
		dc.w $280
		dc.w $400
		dc.w $500
		dc.w $500
		dc.w $580
		dc.w $600
		dc.w $600
		dc.w $700
		dc.w $680
word_1FCC2:	dc.w $F900
		dc.w $F980
		dc.w $FA00
		dc.w $FA00
		dc.w $FB00
		dc.w $FA80
		dc.w $FC00
		dc.w $FB00
		dc.w $F700
		dc.w $FD80
		dc.w $F800
		dc.w $FE00
		dc.w $F900
		dc.w $FE80
		dc.w $FA00
		dc.w $FF00
		dc.w $F680
		dc.w 0
		dc.w $F780
		dc.w 0
		dc.w $F880
		dc.w 0
		dc.w $F980
		dc.w 0
		dc.w $F700
		dc.w $280
		dc.w $F800
		dc.w $200
		dc.w $F900
		dc.w $180
		dc.w $FA00
		dc.w $100
		dc.w $F900
		dc.w $680
		dc.w $FA00
		dc.w $600
		dc.w $FB00
		dc.w $580
		dc.w $FC00
		dc.w $500
word_1FD12:	dc.w $400
		dc.w $FB00
		dc.w $600
		dc.w $FA00
		dc.w $600
		dc.w $FF00
		dc.w $800
		dc.w $FE00
		dc.w $600
		dc.w $100
		dc.w $800
		dc.w $200
		dc.w $400
		dc.w $500
		dc.w $600
		dc.w $600
word_1FD32:	dc.w $FA00
		dc.w $FA00
		dc.w $FC00
		dc.w $FB00
		dc.w $F800
		dc.w $FE00
		dc.w $FA00
		dc.w $FF00
		dc.w $F800
		dc.w $200
		dc.w $FA00
		dc.w $100
		dc.w $FA00
		dc.w $600
		dc.w $FC00
		dc.w $500
Map_AIZBreakableWall:
		include "Levels/AIZ/Misc Object Data/Map - Breakable Wall.asm"
Map_CNZBreakableWall:
		include "Levels/CNZ/Misc Object Data/Map - Breakable Wall S3.asm"
Map_MGZBreakableWall:
		include "Levels/MGZ/Misc Object Data/Map - Breakable Wall.asm"
Map_HCZBreakableWall:
		include "Levels/HCZ/Misc Object Data/Map - Breakable Wall.asm"
Map_LBZBreakableWall:
		include "Levels/LBZ/Misc Object Data/Map - Breakable Wall.asm"
; ---------------------------------------------------------------------------

Obj_AIZRideVine:
		movea.l	a0,a1
		move.l	#loc_20168,(a1)
		bsr.w	sub_20140
		move.b	#$21,$22(a1)
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		moveq	#0,d1
		move.b	$2C(a0),d1
		andi.w	#$7F,d1
		lsl.w	#4,d1
		add.w	d2,d1
		move.w	d1,$46(a0)
		moveq	#3,d1
		addq.w	#1,d1
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2013E
		move.w	a1,$3E(a0)
		move.l	#loc_203C0,(a1)
		move.w	a0,$3C(a1)
		bra.s	loc_20110
; ---------------------------------------------------------------------------

loc_200F8:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2013E
		move.l	#loc_20454,(a1)
		move.w	a2,$3C(a1)
		move.w	a1,$3E(a2)

loc_20110:
		movea.l	a1,a2
		bsr.s	sub_20140
		move.w	d2,$10(a1)
		move.w	d3,$14(a1)
		addi.w	#$10,d3
		addq.w	#1,$36(a0)
		move.w	$36(a0),$36(a1)
		dbf	d1,loc_200F8
		move.l	#Obj_AIZRideVineHandle,(a1)
		move.b	#$20,$22(a1)
		move.w	a1,$40(a0)

loc_2013E:
		bra.s	loc_20168

; =============== S U B R O U T I N E =======================================


sub_20140:
		move.b	#4,4(a1)
		move.b	#8,7(a1)
		move.b	#8,6(a1)
		move.w	#$200,8(a1)
		move.l	#Map_AIZRideVine,$C(a1)
		move.w	#$41B,$A(a1)
		rts
; End of function sub_20140

; ---------------------------------------------------------------------------

loc_20168:
		movea.w	$40(a0),a1
		tst.w	$32(a1)
		beq.s	loc_20188
		move.l	#loc_2018C,(a0)
		movea.w	$3E(a0),a1
		move.w	#1,$2E(a1)
		move.w	#0,$38(a1)

loc_20188:
		bra.w	loc_20378
; ---------------------------------------------------------------------------

loc_2018C:
		addi.l	#$80000,$10(a0)
		addi.l	#$20000,$14(a0)
		move.w	$10(a0),d0
		cmp.w	$46(a0),d0
		bcs.w	loc_2022E
		tst.b	$2C(a0)
		bpl.s	loc_20202
		move.l	#loc_20232,(a0)
		move.w	#$800,$18(a0)
		move.w	#$200,$1A(a0)
		move.l	#Map_AnimatedStillSprites,$C(a0)
		move.w	#$62E9,$A(a0)
		move.b	#8,7(a0)
		move.b	#$C,6(a0)
		move.b	#0,$22(a0)
		move.w	#1,$20(a0)
		movea.w	$40(a0),a1
		lea	$32(a1),a2
		tst.b	(a2)
		beq.s	loc_201F6
		move.b	#-$7F,(a2)

loc_201F6:
		addq.w	#1,a2
		tst.b	(a2)
		beq.s	loc_20200
		move.b	#-$7F,(a2)

loc_20200:
		bra.s	loc_2022E
; ---------------------------------------------------------------------------

loc_20202:
		move.l	#loc_20254,(a0)
		movea.w	$3E(a0),a1
		move.l	#loc_20428,(a1)
		move.w	#0,$3A(a1)
		movea.w	$40(a0),a1
		move.w	#1,$30(a1)
		move.w	#0,$26(a0)
		move.w	#$400,$3A(a0)

loc_2022E:
		bra.w	loc_20378
; ---------------------------------------------------------------------------

loc_20232:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bmi.s	loc_20244
		move.w	#$7FF0,$10(a0)

loc_20244:
		lea	(Ani_AnimatedStillSprites).l,a1
		jsr	(Animate_Sprite).l
		bra.w	loc_20378
; ---------------------------------------------------------------------------

loc_20254:
		movea.w	$40(a0),a1
		move.w	$3A(a0),d0
		move.b	$26(a0),d1
		ext.w	d1
		bpl.s	loc_20266
		neg.w	d1

loc_20266:
		add.w	d1,d1
		sub.w	d1,d0
		sub.w	d0,$26(a0)
		tst.w	$32(a1)
		bne.s	loc_202A8
		move.b	$26(a0),d0
		addq.b	#8,d0
		cmpi.b	#$10,d0
		bcc.s	loc_202A8
		move.l	#loc_202AC,(a0)
		move.w	#0,$42(a0)
		move.w	#-$300,$44(a0)
		move.w	#$1000,$38(a0)
		move.w	#0,$2E(a0)
		movea.w	$40(a0),a1
		move.w	#2,$30(a1)

loc_202A8:
		bra.w	loc_20378
; ---------------------------------------------------------------------------

loc_202AC:
		moveq	#0,d2
		move.b	$38(a0),d2
		move.w	$44(a0),d0
		move.w	#0,d1
		tst.w	$2E(a0)
		bne.s	loc_20304
		add.w	d2,d0
		move.w	d0,$44(a0)
		add.w	d0,$42(a0)
		cmp.b	$42(a0),d1
		bgt.s	loc_2032E
		asr.w	#4,d0
		sub.w	d0,$44(a0)
		move.w	#1,$2E(a0)
		cmpi.w	#$C00,$38(a0)
		beq.s	loc_202EC
		subi.w	#$40,$38(a0)
		bra.s	loc_2032E
; ---------------------------------------------------------------------------

loc_202EC:
		move.l	#loc_2034A,(a0)
		move.w	#0,$38(a0)
		movea.w	$40(a0),a1
		move.w	#0,$30(a1)
		bra.s	loc_2032E
; ---------------------------------------------------------------------------

loc_20304:
		sub.w	d2,d0
		move.w	d0,$44(a0)
		add.w	d0,$42(a0)
		cmp.b	$42(a0),d1
		ble.s	loc_2032E
		asr.w	#4,d0
		sub.w	d0,$44(a0)
		move.w	#0,$2E(a0)
		cmpi.w	#$C00,$38(a0)
		beq.s	loc_202EC
		subi.w	#$40,$38(a0)

loc_2032E:
		move.w	$42(a0),d0
		move.w	d0,$26(a0)
		asr.w	#3,d0
		move.w	d0,$3A(a0)
		movea.w	$3E(a0),a1
		move.w	$3A(a0),$3A(a1)
		bra.w	loc_20378
; ---------------------------------------------------------------------------

loc_2034A:
		move.b	$38(a0),d0
		addi.w	#$200,$38(a0)
		jsr	(GetSineCosine).l
		asl.w	#2,d0
		cmpi.w	#$400,d0
		bne.s	loc_20366
		move.w	#$3FF,d0

loc_20366:
		move.w	d0,$26(a0)
		move.w	d0,$3A(a0)
		movea.w	$3E(a0),a1
		move.w	$3A(a0),$3A(a1)

loc_20378:
		move.w	$10(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_20392
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_20392:
		move.w	$36(a0),d2
		subq.w	#1,d2
		bcs.s	loc_203AE
		movea.w	$3E(a0),a2

loc_2039E:
		movea.l	a2,a1
		movea.w	$3E(a1),a2
		jsr	(Delete_Referenced_Sprite).l
		dbf	d2,loc_2039E

loc_203AE:
		move.w	$48(a0),d0
		beq.s	loc_203BA
		movea.w	d0,a2
		bclr	#7,(a2)

loc_203BA:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_203C0:
		tst.w	$2E(a0)
		bne.s	loc_203E8
		move.b	$38(a0),d0
		addi.w	#$200,$38(a0)
		jsr	(GetSineCosine).l
		asl.w	#2,d0
		cmpi.w	#$400,d0
		bne.s	loc_203E2
		move.w	#$3FF,d0

loc_203E2:
		move.w	d0,$3A(a0)
		bra.s	loc_203FE
; ---------------------------------------------------------------------------

loc_203E8:
		move.b	$38(a0),d0
		addi.w	#$100,$38(a0)
		jsr	(GetSineCosine).l
		asl.w	#3,d0
		move.w	d0,$3A(a0)

loc_203FE:
		move.w	$3A(a0),d0
		move.w	d0,$26(a0)
		move.b	$26(a0),d0
		addq.b	#4,d0
		lsr.b	#3,d0
		move.b	d0,$22(a0)
		movea.w	$3C(a0),a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_20428:
		movea.w	$3C(a0),a1
		move.w	$26(a1),$26(a0)
		move.b	$26(a0),d0
		addq.b	#4,d0
		lsr.b	#3,d0
		move.b	d0,$22(a0)
		movea.w	$3C(a0),a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_20454:
		movea.w	$3C(a0),a1
		move.w	$3A(a1),$3A(a0)
		move.w	$26(a1),d0
		add.w	$3A(a0),d0
		move.w	d0,$26(a0)
		move.b	$26(a0),d0
		addq.b	#4,d0
		lsr.b	#3,d0
		move.b	d0,$22(a0)
		bsr.w	sub_20480
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_20480:
		movea.w	$3C(a0),a1
		move.b	$26(a1),d0
		addq.b	#4,d0
		andi.b	#-8,d0
		jsr	(GetSineCosine).l
		neg.w	d0
		addi.w	#8,d0
		addi.w	#8,d1
		asr.w	#4,d0
		asr.w	#4,d1
		add.w	$10(a1),d0
		move.w	d0,$10(a0)
		add.w	$14(a1),d1
		move.w	d1,$14(a0)
		rts
; End of function sub_20480

; ---------------------------------------------------------------------------

Obj_AIZRideVineHandle:
		move.w	$10(a0),d4
		move.w	$14(a0),d5
		bsr.w	sub_20480
		cmp.w	$10(a0),d4
		beq.s	loc_204CA
		move.w	d4,$42(a0)

loc_204CA:
		cmp.w	$14(a0),d5
		beq.s	loc_204D4
		move.w	d5,$44(a0)

loc_204D4:
		lea	$32(a0),a2
		lea	(Player_1).w,a1
		move.w	(Ctrl_1_logical).w,d0
		bsr.s	sub_20502
		lea	(Player_2).w,a1
		addq.w	#1,a2
		move.w	(Ctrl_2_logical).w,d0
		bsr.s	sub_20502
		tst.w	$32(a0)
		beq.s	loc_204FA
		tst.w	$30(a0)
		bne.s	locret_20500

loc_204FA:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_20500:
		rts

; =============== S U B R O U T I N E =======================================


sub_20502:
		tst.b	(a2)
		beq.w	loc_206DE
		bmi.w	loc_205BC
		tst.b	4(a1)
		bpl.w	loc_205CE
		cmpi.b	#4,5(a1)
		bcc.w	loc_205CE
		andi.b	#$70,d0
		beq.w	loc_205DC
		clr.b	$2E(a1)
		clr.b	(a2)
		cmpi.w	#1,$30(a0)
		beq.s	loc_2059A
		move.w	$10(a0),d1
		sub.w	$42(a0),d1
		asl.w	#7,d1
		move.w	d1,$18(a1)
		move.w	$14(a0),d1
		sub.w	$44(a0),d1
		asl.w	#7,d1
		move.w	d1,$1A(a1)
		move.b	#$3C,2(a2)
		btst	#$A,d0
		beq.s	loc_20562
		move.w	#-$200,$18(a1)

loc_20562:
		btst	#$B,d0
		beq.s	loc_2056E
		move.w	#$200,$18(a1)

loc_2056E:
		addi.w	#-$380,$1A(a1)

loc_20574:
		bset	#1,$2A(a1)
		move.b	#1,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		rts
; ---------------------------------------------------------------------------

loc_2059A:
		move.b	#$3C,2(a2)
		movea.w	$3C(a0),a3
		move.b	$26(a3),d0
		jsr	(GetSineCosine).l
		asl.w	#3,d1
		move.w	d1,$18(a1)
		asl.w	#3,d0
		move.w	d0,$1A(a1)
		bra.s	loc_20574
; ---------------------------------------------------------------------------

loc_205BC:
		move.w	#$300,$18(a1)
		move.w	#$200,$1A(a1)
		bset	#1,$2A(a1)

loc_205CE:
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$3C,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_205DC:
		tst.w	$30(a0)
		bne.s	loc_20634
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$14,$14(a1)
		movea.w	$3C(a0),a3
		moveq	#0,d0
		move.b	$26(a3),d0
		btst	#0,$2A(a1)
		beq.s	loc_20608
		neg.b	d0

loc_20608:
		addq.b	#8,d0
		lsr.w	#4,d0
		move.b	byte_20624(pc,d0.w),$22(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		move.l	a2,-(sp)
		jsr	(Perform_Player_DPLC).l
		movea.l	(sp)+,a2
		rts
; ---------------------------------------------------------------------------
byte_20624:	dc.b $91
		dc.b $91
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $91
		dc.b $91
; ---------------------------------------------------------------------------

loc_20634:
		movea.w	$3C(a0),a3
		moveq	#0,d0
		move.b	$26(a3),d0
		btst	#0,$2A(a1)
		beq.s	loc_20648
		neg.b	d0

loc_20648:
		addi.b	#$10,d0
		lsr.w	#5,d0
		add.w	d0,d0
		move.b	byte_206BE(pc,d0.w),$22(a1)
		move.b	#0,$20(a1)
		andi.w	#-2,d0
		move.b	byte_206CE(pc,d0.w),d2
		move.b	byte_206CF(pc,d0.w),d3
		ext.w	d2
		ext.w	d3
		btst	#0,$2A(a1)
		beq.s	loc_20676
		neg.w	d2

loc_20676:
		movea.w	$3C(a0),a3
		move.b	$26(a3),d0
		addq.b	#4,d0
		andi.b	#-8,d0
		jsr	(GetSineCosine).l
		neg.w	d0
		addi.w	#8,d0
		addi.w	#8,d1
		asr.w	#4,d0
		asr.w	#4,d1
		add.w	$10(a3),d0
		add.w	d2,d0
		move.w	d0,$10(a1)
		add.w	$14(a3),d1
		add.w	d3,d1
		move.w	d1,$14(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		move.l	a2,-(sp)
		jsr	(Perform_Player_DPLC).l
		movea.l	(sp)+,a2
		rts
; ---------------------------------------------------------------------------
byte_206BE:	dc.b $78
		dc.b $78
		dc.b $7F
		dc.b $7F
		dc.b $7E
		dc.b $7E
		dc.b $7D
		dc.b $7D
		dc.b $7C
		dc.b $7C
		dc.b $7B
		dc.b $7B
		dc.b $7A
		dc.b $7A
		dc.b $79
		dc.b $79
byte_206CE:	dc.b 0
byte_206CF:	dc.b $18
		dc.b $EE
		dc.b $13
		dc.b $E8
		dc.b 0
		dc.b $EE
		dc.b $ED
		dc.b 0
		dc.b $E8
		dc.b $12
		dc.b $ED
		dc.b $18
		dc.b 0
		dc.b $12
		dc.b $13
; ---------------------------------------------------------------------------

loc_206DE:
		tst.b	2(a2)
		beq.s	loc_206EC
		subq.b	#1,2(a2)
		bne.w	locret_20766

loc_206EC:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$10,d0
		cmpi.w	#$20,d0
		bcc.w	locret_20766
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		cmpi.w	#$18,d1
		bcc.w	locret_20766
		tst.b	$2E(a1)
		bne.s	locret_20766
		cmpi.b	#4,5(a1)
		bcc.s	locret_20766
		tst.w	(Debug_placement_mode).w
		bne.s	locret_20766
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$14,$14(a1)
		move.b	#$14,$20(a1)
		move.b	#0,$3D(a1)
		move.b	#3,$2E(a1)
		andi.b	#-3,4(a1)
		move.b	#1,(a2)
		moveq	#signextendB(sfx_Grab),d0
		jsr	(Play_Sound_2).l

locret_20766:
		rts
; End of function sub_20502

; ---------------------------------------------------------------------------

Obj_AIZGiantRideVine:
		movea.l	a0,a1
		move.l	#loc_2082C,(a1)
		bsr.w	sub_20804
		move.b	#$21,$22(a1)
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		move.b	$2C(a0),d1
		andi.w	#$F,d1
		jsr	(Create_New_Sprite3).l
		bne.w	loc_20802
		move.w	#-$1B0,$44(a1)
		move.w	#$800,$38(a1)
		move.w	a1,$3E(a0)
		move.l	#loc_20874,(a1)
		move.w	a0,$3C(a1)
		move.b	$2C(a0),d0
		andi.b	#-$10,d0
		move.b	d0,$42(a1)
		bra.s	loc_207D4
; ---------------------------------------------------------------------------

loc_207BC:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_20802
		move.l	#loc_20908,(a1)
		move.w	a2,$3C(a1)
		move.w	a1,$3E(a2)

loc_207D4:
		movea.l	a1,a2
		bsr.s	sub_20804
		move.w	d2,$10(a1)
		move.w	d3,$14(a1)
		addi.w	#$10,d3
		addq.w	#1,$36(a0)
		move.w	$36(a0),$36(a1)
		dbf	d1,loc_207BC
		move.l	#loc_20968,(a1)
		move.b	#$20,$22(a1)
		move.w	a1,$40(a0)

loc_20802:
		bra.s	loc_2082C

; =============== S U B R O U T I N E =======================================


sub_20804:
		move.b	#4,4(a1)
		move.b	#8,7(a1)
		move.b	#8,6(a1)
		move.w	#$200,8(a1)
		move.l	#Map_AIZRideVine,$C(a1)
		move.w	#$41B,$A(a1)
		rts
; End of function sub_20804

; ---------------------------------------------------------------------------

loc_2082C:
		move.w	$10(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_20846
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_20846:
		move.w	$36(a0),d2
		subq.w	#1,d2
		bcs.s	loc_20862
		movea.w	$3E(a0),a2

loc_20852:
		movea.l	a2,a1
		movea.w	$3E(a1),a2
		jsr	(Delete_Referenced_Sprite).l
		dbf	d2,loc_20852

loc_20862:
		move.w	$48(a0),d0
		beq.s	loc_2086E
		movea.w	d0,a2
		bclr	#7,(a2)

loc_2086E:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_20874:
		tst.b	(a0)
		bne.s	loc_208A6
		move.b	(AIZ_vine_angle).w,d0
		add.b	$42(a0),d0
		jsr	(GetSineCosine).l
		muls.w	#$2C,d0
		move.w	d0,$26(a0)
		asr.w	#3,d0
		move.w	d0,$3A(a0)
		move.b	$26(a0),d0
		addq.b	#4,d0
		lsr.b	#3,d0
		move.b	d0,$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_208A6:
		moveq	#0,d2
		move.b	$38(a0),d2
		move.w	$44(a0),d0
		move.w	#0,d1
		tst.w	$2E(a0)
		bne.s	loc_208D2
		add.w	d2,d0
		move.w	d0,$44(a0)
		add.w	d0,$42(a0)
		cmp.b	$42(a0),d1
		bgt.s	loc_208E8
		move.w	#1,$2E(a0)
		bra.s	loc_208E8
; ---------------------------------------------------------------------------

loc_208D2:
		sub.w	d2,d0
		move.w	d0,$44(a0)
		add.w	d0,$42(a0)
		cmp.b	$42(a0),d1
		ble.s	loc_208E8
		move.w	#0,$2E(a0)

loc_208E8:
		move.w	$42(a0),d0
		move.w	d0,$26(a0)
		asr.w	#3,d0
		move.w	d0,$3A(a0)
		move.b	$26(a0),d0
		addq.b	#4,d0
		lsr.b	#3,d0
		move.b	d0,$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_20908:
		movea.w	$3C(a0),a1
		move.w	$3A(a1),$3A(a0)
		move.w	$26(a1),d0
		add.w	$3A(a0),d0
		move.w	d0,$26(a0)
		move.b	$26(a0),d0
		addq.b	#4,d0
		lsr.b	#3,d0
		move.b	d0,$22(a0)
		bsr.w	sub_20934
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_20934:
		movea.w	$3C(a0),a1
		move.b	$26(a1),d0
		addq.b	#4,d0
		andi.b	#-8,d0
		jsr	(GetSineCosine).l
		neg.w	d0
		addi.w	#8,d0
		addi.w	#8,d1
		asr.w	#4,d0
		asr.w	#4,d1
		add.w	$10(a1),d0
		move.w	d0,$10(a0)
		add.w	$14(a1),d1
		move.w	d1,$14(a0)
		rts
; End of function sub_20934

; ---------------------------------------------------------------------------

loc_20968:
		move.w	$10(a0),d4
		move.w	$14(a0),d5
		bsr.w	sub_20934
		cmp.w	$10(a0),d4
		beq.s	loc_2097E
		move.w	d4,$42(a0)

loc_2097E:
		cmp.w	$14(a0),d5
		beq.s	loc_20988
		move.w	d5,$44(a0)

loc_20988:
		lea	$32(a0),a2
		lea	(Player_1).w,a1
		move.w	(Ctrl_1_logical).w,d0
		bsr.w	sub_20502
		lea	(Player_2).w,a1
		addq.w	#1,a2
		move.w	(Ctrl_2_logical).w,d0
		bsr.w	sub_20502
		tst.w	$32(a0)
		beq.s	loc_209B2
		tst.w	$30(a0)
		bne.s	locret_209B8

loc_209B2:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_209B8:
		rts
; ---------------------------------------------------------------------------
Map_AIZRideVine:include "Levels/AIZ/Misc Object Data/Map - Ride Vine S3.asm"
; ---------------------------------------------------------------------------

Obj_AIZSurfboardIntro:
		move.l	#Map_SurfboardIntro,$C(a0)
		move.w	#$100,8(a0)
		move.b	#$20,7(a0)
		move.b	#4,4(a0)
		move.w	#$680,$A(a0)
		move.b	#-1,(Player_prev_frame).w
		move.l	#Obj_AIZSurfboardIntro_Main,(a0)
		move.w	(Player_1+x_pos).w,$10(a0)
		move.w	(Player_1+y_pos).w,$14(a0)
		subi.w	#$20,$10(a0)
		subi.w	#$10,$14(a0)
		move.w	#0,$18(a0)
		move.w	#0,$1A(a0)
		clr.w	(Events_fg_1).w
		tst.b	$2C(a0)
		bne.s	loc_20B78
		lea	(Player_1).w,a1
		move.b	#0,$22(a1)
		move.b	#3,$2E(a1)

loc_20B78:
		jsr	(Create_New_Sprite3).l
		bne.w	Obj_AIZSurfboardIntro_Main
		move.l	#Obj_SurfboardSplash,(a1)
		move.w	a0,$30(a1)

Obj_AIZSurfboardIntro_Main:
		tst.b	$2C(a0)
		bne.s	loc_20BFC
		lea	(Player_1).w,a1
		addi.w	#8,$10(a1)
		addi.w	#8,$10(a0)
		cmpi.w	#$900,$10(a1)
		bcs.s	loc_20BFC
		jsr	(Create_New_Sprite3).l
		bne.w	loc_20BD0
		move.l	#Obj_Surfboard,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$C,$14(a1)
		move.w	a0,$30(a1)

loc_20BD0:
		move.w	#$800,$18(a0)
		move.w	#-$400,$1A(a0)
		move.l	#Obj_AIZSurfboardIntro_Jump,(a0)
		move.w	#1,$20(a0)
		subi.w	#5,$10(a0)
		move.b	#7,$22(a0)
		jsr	(SurfboardIntro_LoadPLC).l
		bra.s	loc_20C00
; ---------------------------------------------------------------------------

loc_20BFC:
		bsr.w	SurfboardIntro_Move

loc_20C00:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_AIZSurfboardIntro_Jump:
		lea	(Player_1).w,a1
		addi.w	#8,$10(a1)
		jsr	(MoveSprite2).l
		addi.w	#$20,$1A(a0)
		moveq	#1,d2
		move.w	$10(a0),d0
		cmp.w	$10(a1),d0
		beq.s	loc_20C30
		blt.s	loc_20C2C
		neg.w	d2

loc_20C2C:
		add.w	d2,$10(a0)

loc_20C30:
		tst.w	$1A(a0)
		bmi.s	loc_20C74
		cmpi.w	#$440,$14(a0)
		bcs.s	loc_20C74
		move.w	#$440,$14(a0)
		move.w	#0,$1A(a0)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	#1,$20(a1)
		move.w	#$800,$1C(a1)
		move.w	#$800,$18(a1)
		move.w	#0,$1A(a1)
		move.l	#Obj_AIZSurfboardIntro_Run,(a0)

loc_20C74:
		lea	(Ani_SurfboardIntro).l,a1
		jsr	(Animate_Sprite).l
		jsr	(SurfboardIntro_LoadPLC).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Ani_SurfboardIntro:
		include "General/Sprites/Sonic/Anim - Sonic Surfboard.asm"
; ---------------------------------------------------------------------------

Obj_AIZSurfboardIntro_Run:
		movea.l	a0,a3
		lea	(Player_1).w,a0
		move.w	#0,$1A(a0)
		cmpi.w	#$1170,$10(a0)
		bcs.s	loc_20CB6
		cmpi.w	#$1270,$10(a0)
		bcc.s	loc_20CB6
		move.w	#-$138,$1A(a0)

loc_20CB6:
		jsr	(MoveSprite2).l
		cmpi.w	#$13C0,$10(a0)
		bcs.s	loc_20CE2
		move.b	#0,$2E(a0)
		move.l	#Obj_AIZSurfboardIntro_Stop,(a3)
		move.b	#1,(Ctrl_1_locked).w
		move.w	#$400,(Ctrl_1_logical).w
		move.w	#$E,$2E(a3)

loc_20CE2:
		jsr	(Animate_Sonic).l
		move.l	a3,-(sp)
		jsr	(Sonic_Load_PLC).l
		movea.l	(sp)+,a0
		addi.w	#8,$10(a0)
		move.b	#0,$22(a0)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_AIZSurfboardIntro_Stop:
		subq.w	#1,$2E(a0)
		bpl.s	loc_20D32
		lea	(Player_1).w,a1
		move.w	#0,$1C(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.b	#0,(Ctrl_1_locked).w
		move.w	#0,(Ctrl_1_logical).w
		move.l	#Obj_AIZSurfboardIntro_CheckDelete,(a0)

loc_20D32:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_AIZSurfboardIntro_CheckDelete:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


SurfboardIntro_Move:
		move.w	#2,d1
		move.w	(Player_1+x_pos).w,d0
		cmp.w	$10(a0),d0
		bcc.s	loc_20D4E
		neg.w	d1

loc_20D4E:
		add.w	d1,$18(a0)
		moveq	#0,d2
		lea	(SurfboardIntro_DownFrames).l,a1
		move.w	#3,d1
		move.w	(Player_1+y_pos).w,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_20D76
		moveq	#1,d2
		lea	(SurfboardIntro_UpFrames).l,a1
		move.w	#4,d1
		neg.w	d1

loc_20D76:
		add.w	d1,$1A(a0)
		jsr	(MoveSprite2).l
		move.w	$1A(a0),d0
		tst.w	d2
		bne.s	loc_20D8A
		neg.w	d0

loc_20D8A:
		addi.w	#$80,d0
		cmpi.w	#$100,d0
		bcs.s	loc_20D98
		move.w	#$100,d0

loc_20D98:
		lsr.w	#5,d0
		move.b	(a1,d0.w),d0
		addq.b	#1,d0
		move.b	d0,$22(a0)
		jsr	(SurfboardIntro_LoadPLC).l
		subq.w	#1,$2E(a0)
		bpl.s	locret_20DCA
		move.w	#5,$2E(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	locret_20DCA
		move.l	#Obj_SurfboardWaves,(a1)
		move.w	a0,$30(a1)

locret_20DCA:
		rts
; ---------------------------------------------------------------------------
SurfboardIntro_DownFrames:
		dc.b    2,   1,   1,   0,   0,   0,   0,   1,   2,   2
SurfboardIntro_UpFrames:
		dc.b    3,   4,   4,   4,   5,   5,   5,   4,   3,   3
; End of function SurfboardIntro_Move


; =============== S U B R O U T I N E =======================================


SurfboardIntro_LoadPLC:
		moveq	#0,d0
		move.b	$22(a0),d0
		cmp.b	(Player_prev_frame).w,d0
		beq.s	locret_20E32
		move.b	d0,(Player_prev_frame).w
		lea	(DPLC_SurfboardIntro).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_20E32
		move.w	#-$3000,d4

loc_20E06:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		addi.l	#ArtUnc_SurfboardIntro,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_20E06

locret_20E32:
		rts
; End of function SurfboardIntro_LoadPLC

; ---------------------------------------------------------------------------
Map_SurfboardIntro:
		include "General/Sprites/Sonic/Map - Sonic Surfboarding.asm"
DPLC_SurfboardIntro:
		include "General/Sprites/Sonic/DPLC - Sonic Surfboarding.asm"
; ---------------------------------------------------------------------------

Obj_SurfboardWaves:
		move.l	#Map_AIZIntroWaves,$C(a0)
		move.w	#$100,8(a0)
		move.b	#0,7(a0)
		move.b	#4,4(a0)
		move.w	#$3D1,$A(a0)
		move.l	#Obj_SurfboardWaves_Main,(a0)
		move.w	#1,$20(a0)
		move.b	#0,$22(a0)
		move.b	#0,$23(a0)
		bset	#0,$2A(a0)
		movea.w	$30(a0),a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		addi.w	#-$28,$10(a0)
		addi.w	#$18,$14(a0)

Obj_SurfboardWaves_Main:
		lea	(Ani_SurfboardWaves).l,a1
		jsr	(Animate_SpriteIrregularDelay).l
		tst.b	5(a0)
		beq.s	loc_20FE6
		move.w	#$7FFF,$10(a0)

loc_20FE6:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Ani_SurfboardWaves:
		include "General/Sprites/Surfboard/Anim - Surfboard Waves.asm"
; ---------------------------------------------------------------------------

Obj_SurfboardSplash:
		movea.l	a0,a1
		bsr.s	SurfboardSplash_Init
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2102A
		bsr.s	SurfboardSplash2_Init
		move.l	#Obj_SurfboardSplash2_Main,(a1)
		move.w	#$80,8(a1)
		move.w	#-$14,$32(a1)
		move.w	#$10,$34(a1)
		move.w	$30(a0),$30(a1)

loc_2102A:
		bra.s	Obj_SurfboardSplash_Main

; =============== S U B R O U T I N E =======================================


SurfboardSplash_Init:
		move.l	#Obj_SurfboardSplash_Main,(a1)
		move.w	#$180,8(a1)
		move.w	#8,$32(a1)
		move.w	#$18,$34(a1)

SurfboardSplash2_Init:
		move.l	#Map_SurfboardSplash,$C(a1)
		move.b	#$1C,7(a1)
		move.b	#4,4(a1)
		move.w	#$529,$A(a1)
		move.w	#1,$20(a1)
		bset	#0,$2A(a1)
		rts
; End of function SurfboardSplash_Init

; ---------------------------------------------------------------------------

Obj_SurfboardSplash_Main:
		movea.w	%110000(a0),a1
		lea	(SurfboardSplash_Offsets).l,a2
		bsr.w	SurfboardSplash_SetOffsets
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		move.w	$32(a0),d0
		add.w	d0,$10(a0)
		move.w	$34(a0),d0
		add.w	d0,$14(a0)
		cmpi.b	#7,$22(a1)
		bcs.s	loc_210A4
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_210A4:
		cmpi.b	#5,$22(a1)
		bcs.s	loc_210BA
		tst.w	$36(a0)
		beq.s	locret_210B8
		subq.w	#1,$36(a0)
		bra.s	loc_210C0
; ---------------------------------------------------------------------------

locret_210B8:
		rts
; ---------------------------------------------------------------------------

loc_210BA:
		move.w	#3,$36(a0)

loc_210C0:
		lea	(Ani_SurfboardSplash).l,a1
		jsr	(Animate_SpriteIrregularDelay).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
SurfboardSplash_Offsets:
		dc.b    0, $18,   0, $11,   0, $15, $F8, $15, $F8, $13, $F8, $13, $F8, $13
; ---------------------------------------------------------------------------

Obj_SurfboardSplash2_Main:
		movea.w	$30(a0),a1
		lea	(SurfboardSplash2_Offsets).l,a2
		bsr.s	SurfboardSplash_SetOffsets
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		move.w	$32(a0),d0
		add.w	d0,$10(a0)
		move.w	$34(a0),d0
		add.w	d0,$14(a0)
		cmpi.b	#7,$22(a1)
		bcs.s	loc_21116
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_21116:
		cmpi.b	#5,$22(a1)
		bcc.s	loc_2112C
		tst.w	$36(a0)
		beq.s	locret_2112A
		subq.w	#1,$36(a0)
		bra.s	loc_21132
; ---------------------------------------------------------------------------

locret_2112A:
		rts
; ---------------------------------------------------------------------------

loc_2112C:
		move.w	#3,$36(a0)

loc_21132:
		lea	(Ani_SurfboardSplash).l,a1
		jsr	(Animate_SpriteIrregularDelay).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
SurfboardSplash2_Offsets:
		dc.b  $F8, $12, $F8, $12, $F8, $12, $F8, $12, $F8, $12, $F1, $12, $ED, $17

; =============== S U B R O U T I N E =======================================


SurfboardSplash_SetOffsets:
		moveq	#0,d0
		move.b	$22(a1),d0
		add.w	d0,d0
		move.b	(a2,d0.w),d1
		ext.w	d1
		moveq	#1,d2
		cmp.w	$32(a0),d1
		beq.s	loc_21170
		bgt.s	loc_2116C
		neg.w	d2

loc_2116C:
		add.w	d2,$32(a0)

loc_21170:
		move.b	1(a2,d0.w),d1
		ext.w	d1
		moveq	#1,d2
		cmp.w	$34(a0),d1
		beq.s	locret_21186
		bgt.s	loc_21182
		neg.w	d2

loc_21182:
		add.w	d2,$34(a0)

locret_21186:
		rts
; End of function SurfboardSplash_SetOffsets

; ---------------------------------------------------------------------------
Ani_SurfboardSplash:
		include "General/Sprites/Surfboard/Anim - Surfboard Splash.asm"
Map_AIZIntroWaves:
		include "Levels/AIZ/Misc Object Data/Map - Intro Waves.asm"
Map_SurfboardSplash:
		include "General/Sprites/Surfboard/Map - Surfboard Splash.asm"
; ---------------------------------------------------------------------------

Obj_Surfboard:
		move.l	#Map_Surfboard,$C(a0)
		move.w	#$80,8(a0)
		move.b	#$20,7(a0)
		move.b	#4,4(a0)
		move.w	#$585,$A(a0)
		move.l	#Obj_Surfboard_Main,(a0)
		move.w	#1,$20(a0)
		move.w	#$800,$18(a0)
		move.w	#-$300,$1A(a0)

Obj_Surfboard_Main:
		cmpi.b	#3,$23(a0)
		bcs.s	loc_212FE
		tst.w	$18(a0)
		beq.s	loc_212FE
		subi.w	#$10,$18(a0)

loc_212FE:
		jsr	(MoveSprite2).l
		addi.w	#$20,$1A(a0)
		lea	(Ani_Surfboard).l,a1
		jsr	(Animate_SpriteIrregularDelay).l
		move.b	#0,$2A(a0)
		move.b	$23(a0),d0
		andi.b	#7,d0
		cmpi.b	#4,d0
		bcs.s	loc_21330
		move.b	#3,$2A(a0)

loc_21330:
		tst.b	5(a0)
		beq.s	loc_2133C
		move.w	#$7FFF,$10(a0)

loc_2133C:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Ani_Surfboard:	include "General/Sprites/Surfboard/Anim - Surfboard.asm"
Map_Surfboard:	include "General/Sprites/Surfboard/Map - Surfboard.asm"

; =============== S U B R O U T I N E =======================================


Obj_Spring:
		move.l	#Map_Spring,$C(a0)
		move.w	#$4A4,$A(a0)
		ori.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$200,8(a0)
		move.w	$10(a0),$32(a0)
		move.w	$14(a0),$34(a0)
		move.b	$2C(a0),d0
		lsr.w	#3,d0
		andi.w	#$E,d0
		move.w	off_2141C(pc,d0.w),d0
		jmp	off_2141C(pc,d0.w)
; End of function Obj_Spring

; ---------------------------------------------------------------------------
off_2141C:	dc.w Spring_Up-off_2141C
		dc.w Spring_Horizontal-off_2141C
		dc.w Spring_Down-off_2141C
		dc.w Spring_UpDiag-off_2141C
		dc.w Spring_DownDiag-off_2141C

; =============== S U B R O U T I N E =======================================


sub_21426:
		move.l	#Map_Spring,$C(a0)
		move.w	#$4A4,$A(a0)
		ori.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$200,8(a0)
		move.w	$10(a0),$32(a0)
		move.w	$14(a0),$34(a0)
		move.b	$2C(a0),d0
		lsr.w	#3,d0
		andi.w	#$E,d0
		move.w	off_21472(pc,d0.w),d0
		jsr	off_21472(pc,d0.w)
		move.w	#-$800,$30(a0)
		rts
; End of function sub_21426

; ---------------------------------------------------------------------------
off_21472:	dc.w Spring_Up-off_21472
		dc.w Spring_Horizontal-off_21472
		dc.w Spring_Down-off_21472
		dc.w Spring_Horizontal-off_21472
		dc.w Spring_Up-off_21472
		dc.w Spring_Down-off_21472
		dc.w Spring_Up-off_21472
		dc.w Spring_Down-off_21472
; ---------------------------------------------------------------------------

Spring_Horizontal:
		move.b	#2,$20(a0)
		move.b	#3,$22(a0)
		move.w	#$4B4,$A(a0)
		move.b	#8,7(a0)
		move.l	#Obj_Spring_Horizontal,(a0)
		tst.w	(Competition_mode).w
		beq.w	Spring_Common
		move.l	#Map_2PSpring,$C(a0)
		move.w	#$3AD,$A(a0)
		move.l	#Obj_2PSpring_Horizontal,(a0)
		bra.w	Spring_Common
; ---------------------------------------------------------------------------

Spring_Down:
		move.b	#6,$22(a0)
		bset	#1,$2A(a0)
		move.l	#Obj_Spring_Down,(a0)
		tst.w	(Competition_mode).w
		beq.w	Spring_Common
		move.l	#Obj_2PSpring_Down,(a0)
		move.l	#Map_2PSpring,$C(a0)
		move.w	#$391,$A(a0)
		bra.w	Spring_Common
; ---------------------------------------------------------------------------

Spring_UpDiag:
		move.b	#4,$20(a0)
		move.b	#7,$22(a0)
		move.w	#$43A,$A(a0)
		cmpi.b	#2,(Current_zone).w
		bne.s	loc_21512
		move.w	#$478,$A(a0)

loc_21512:
		move.l	#Obj_Spring_UpDiag,(a0)
		bra.s	Spring_Common
; ---------------------------------------------------------------------------

Spring_DownDiag:
		move.b	#4,$20(a0)
		move.b	#$A,$22(a0)
		move.w	#$43A,$A(a0)
		cmpi.b	#2,(Current_zone).w
		bne.s	loc_2153A
		move.w	#$478,$A(a0)

loc_2153A:
		bset	#1,$2A(a0)
		move.l	#Obj_Spring_DownDiag,(a0)
		bra.s	Spring_Common
; ---------------------------------------------------------------------------

Spring_Up:
		move.l	#Obj_Spring_Up,(a0)
		tst.w	(Competition_mode).w
		beq.s	Spring_Common
		move.l	#Obj_2PSpring_Up,(a0)
		move.l	#Map_2PSpring,$C(a0)
		move.w	#$391,$A(a0)
		cmpi.b	#$12,(Current_zone).w
		bne.s	Spring_Common
		ori.w	#-$8000,$A(a0)

Spring_Common:
		move.b	$2C(a0),d0
		andi.w	#2,d0
		move.w	word_215A2(pc,d0.w),$30(a0)
		btst	#1,d0
		beq.s	locret_215A0
		move.l	#Map_Spring2,$C(a0)
		tst.w	(Competition_mode).w
		beq.s	locret_215A0
		move.l	#Map_Spring3,$C(a0)

locret_215A0:
		rts
; ---------------------------------------------------------------------------
word_215A2:	dc.w $F000
		dc.w $F600
; ---------------------------------------------------------------------------

Obj_Spring_Up:
		move.w	#$1B,d1
		move.w	#8,d2
		move.w	#$10,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObjectFull2_1P
		btst	#3,$2A(a0)
		beq.s	loc_215CE
		bsr.s	sub_2164A

loc_215CE:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	SolidObjectFull2_1P
		btst	#4,$2A(a0)
		beq.s	loc_215E6
		bsr.s	sub_2164A

loc_215E6:
		lea	(Ani_Spring).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_2PSpring_Up:
		move.w	#$13,d1
		move.w	#8,d2
		move.w	#$10,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObjectFull2_1P
		btst	#3,$2A(a0)
		beq.s	loc_21620
		bsr.s	sub_2164A

loc_21620:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	SolidObjectFull2_1P
		btst	#4,$2A(a0)
		beq.s	loc_21638
		bsr.s	sub_2164A

loc_21638:
		lea	(Ani_Spring).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_2164A:
		move.w	#$100,$20(a0)
		addq.w	#8,$14(a1)
		move.w	$30(a0),$1A(a1)
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		clr.b	$40(a1)
		clr.b	$3D(a1)
		move.b	#$10,$20(a1)
		move.b	#2,5(a1)
		move.b	$2C(a0),d0
		bpl.s	loc_21686
		move.w	#0,$18(a1)

loc_21686:
		btst	#0,d0
		beq.s	loc_216C6
		move.w	#1,$1C(a1)
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#0,$30(a1)
		move.b	#4,$31(a1)
		btst	#1,d0
		bne.s	loc_216B6
		move.b	#1,$30(a1)

loc_216B6:
		btst	#0,$2A(a1)
		beq.s	loc_216C6
		neg.b	$27(a1)
		neg.w	$1C(a1)

loc_216C6:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_216DC
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)

loc_216DC:
		cmpi.b	#8,d0
		bne.s	loc_216EE
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_216EE:
		moveq	#signextendB(sfx_Spring),d0
		jmp	(Play_Sound_2).l
; End of function sub_2164A

; ---------------------------------------------------------------------------

Obj_Spring_Horizontal:
		move.w	#$13,d1
		move.w	#$E,d2
		move.w	#$F,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObjectFull2_1P
		swap	d6
		andi.w	#1,d6
		beq.s	loc_21738
		move.b	$2A(a0),d1
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		bcs.s	loc_2172E
		eori.b	#1,d1

loc_2172E:
		andi.b	#1,d1
		bne.s	loc_21738
		bsr.w	sub_21836

loc_21738:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	SolidObjectFull2_1P
		swap	d6
		andi.w	#2,d6
		beq.s	loc_2176A
		move.b	$2A(a0),d1
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		bcs.s	loc_21760
		eori.b	#1,d1

loc_21760:
		andi.b	#1,d1
		bne.s	loc_2176A
		bsr.w	sub_21836

loc_2176A:
		bsr.w	sub_2190C
		lea	(Ani_Spring).l,a1
		jsr	(Animate_Sprite).l
		move.w	$32(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

Obj_2PSpring_Horizontal:
		move.w	#$F,d1
		move.w	#$C,d2
		move.w	#$D,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObjectFull2_1P
		swap	d6
		andi.w	#1,d6
		beq.s	loc_217C4
		move.b	$2A(a0),d1
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		bcs.s	loc_217BC
		eori.b	#1,d1

loc_217BC:
		andi.b	#1,d1
		bne.s	loc_217C4
		bsr.s	sub_21806

loc_217C4:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	SolidObjectFull2_1P
		swap	d6
		andi.w	#2,d6
		beq.s	loc_217F4
		move.b	$2A(a0),d1
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		bcs.s	loc_217EC
		eori.b	#1,d1

loc_217EC:
		andi.b	#1,d1
		bne.s	loc_217F4
		bsr.s	sub_21806

loc_217F4:
		lea	(Ani_Spring).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_21806:
		move.w	#$300,$20(a0)
		move.w	$30(a0),$18(a1)
		addq.w	#4,$10(a1)
		bset	#0,$2A(a1)
		btst	#0,$2A(a0)
		bne.s	loc_21834
		bclr	#0,$2A(a1)
		subi.w	#8,$10(a1)
		neg.w	$18(a1)

loc_21834:
		bra.s	loc_21864
; End of function sub_21806


; =============== S U B R O U T I N E =======================================


sub_21836:
		move.w	#$300,$20(a0)
		move.w	$30(a0),$18(a1)
		addq.w	#8,$10(a1)
		bset	#0,$2A(a1)
		btst	#0,$2A(a0)
		bne.s	loc_21864
		bclr	#0,$2A(a1)
		subi.w	#$10,$10(a1)
		neg.w	$18(a1)

loc_21864:
		move.w	#$F,$32(a1)
		move.w	$18(a1),$1C(a1)
		btst	#2,$2A(a1)
		bne.s	loc_2187E
		move.b	#0,$20(a1)

loc_2187E:
		move.b	$2C(a0),d0
		bpl.s	loc_2188A
		move.w	#0,$1A(a1)

loc_2188A:
		btst	#0,d0
		beq.s	loc_218CA
		move.w	#1,$1C(a1)
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#1,$30(a1)
		move.b	#8,$31(a1)
		btst	#1,d0
		bne.s	loc_218BA
		move.b	#3,$30(a1)

loc_218BA:
		btst	#0,$2A(a1)
		beq.s	loc_218CA
		neg.b	$27(a1)
		neg.w	$1C(a1)

loc_218CA:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_218E0
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)

loc_218E0:
		cmpi.b	#8,d0
		bne.s	loc_218F2
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_218F2:
		bclr	#5,$2A(a0)
		bclr	#6,$2A(a0)
		bclr	#5,$2A(a1)
		moveq	#signextendB(sfx_Spring),d0
		jmp	(Play_Sound_2).l
; End of function sub_21836


; =============== S U B R O U T I N E =======================================


sub_2190C:
		cmpi.b	#3,$20(a0)
		beq.w	locret_219C4
		move.w	$10(a0),d0
		move.w	d0,d1
		addi.w	#$28,d1
		btst	#0,$2A(a0)
		beq.s	loc_2192E
		move.w	d0,d1
		subi.w	#$28,d0

loc_2192E:
		move.w	$14(a0),d2
		move.w	d2,d3
		subi.w	#$18,d2
		addi.w	#$18,d3
		lea	(Player_1).w,a1
		btst	#1,$2A(a1)
		bne.s	loc_21982
		move.w	$1C(a1),d4
		btst	#0,$2A(a0)
		beq.s	loc_21956
		neg.w	d4

loc_21956:
		tst.w	d4
		bmi.s	loc_21982
		move.w	$10(a1),d4
		cmp.w	d0,d4
		bcs.w	loc_21982
		cmp.w	d1,d4
		bcc.w	loc_21982
		move.w	$14(a1),d4
		cmp.w	d2,d4
		bcs.w	loc_21982
		cmp.w	d3,d4
		bcc.w	loc_21982
		move.w	d0,-(sp)
		bsr.w	sub_21836
		move.w	(sp)+,d0

loc_21982:
		lea	(Player_2).w,a1
		btst	#1,$2A(a1)
		bne.s	locret_219C4
		move.w	$1C(a1),d4
		btst	#0,$2A(a0)
		beq.s	loc_2199C
		neg.w	d4

loc_2199C:
		tst.w	d4
		bmi.s	locret_219C4
		move.w	$10(a1),d4
		cmp.w	d0,d4
		bcs.w	locret_219C4
		cmp.w	d1,d4
		bcc.w	locret_219C4
		move.w	$14(a1),d4
		cmp.w	d2,d4
		bcs.w	locret_219C4
		cmp.w	d3,d4
		bcc.w	locret_219C4
		bsr.w	sub_21836

locret_219C4:
		rts
; End of function sub_2190C

; ---------------------------------------------------------------------------

Obj_Spring_Down:
		move.w	#$1B,d1
		move.w	#8,d2
		move.w	#9,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObjectFull2_1P
		cmpi.w	#-2,d4
		bne.s	loc_219EC
		bsr.s	sub_21A6A

loc_219EC:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	SolidObjectFull2_1P
		cmpi.w	#-2,d4
		bne.s	loc_21A02
		bsr.s	sub_21A6A

loc_21A02:
		lea	(Ani_Spring).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_2PSpring_Down:
		move.w	#$13,d1
		move.w	#8,d2
		move.w	#9,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	SolidObjectFull2_1P
		cmpi.w	#-2,d4
		bne.s	loc_21A3E
		subq.w	#4,$14(a1)
		bsr.s	loc_21A6E

loc_21A3E:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	SolidObjectFull2_1P
		cmpi.w	#-2,d4
		bne.s	loc_21A58
		subq.w	#4,$14(a1)
		bsr.s	loc_21A6E

loc_21A58:
		lea	(Ani_Spring).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_21A6A:
		subq.w	#8,$14(a1)

loc_21A6E:
		move.w	#$100,$20(a0)
		move.w	$30(a0),$1A(a1)
		neg.w	$1A(a1)
		cmpi.w	#$1000,$1A(a1)
		bne.s	loc_21A8C
		move.w	#$D00,$1A(a1)

loc_21A8C:
		move.b	$2C(a0),d0
		bpl.s	loc_21A98
		move.w	#0,$18(a1)

loc_21A98:
		btst	#0,d0
		beq.s	loc_21AD8
		move.w	#1,$1C(a1)
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#0,$30(a1)
		move.b	#4,$31(a1)
		btst	#1,d0
		bne.s	loc_21AC8
		move.b	#1,$30(a1)

loc_21AC8:
		btst	#0,$2A(a1)
		beq.s	loc_21AD8
		neg.b	$27(a1)
		neg.w	$1C(a1)

loc_21AD8:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_21AEE
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)

loc_21AEE:
		cmpi.b	#8,d0
		bne.s	loc_21B00
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_21B00:
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		clr.b	$40(a1)
		move.b	#2,5(a1)
		moveq	#signextendB(sfx_Spring),d0
		jmp	(Play_Sound_2).l
; End of function sub_21A6A

; ---------------------------------------------------------------------------

Obj_Spring_UpDiag:
		move.w	#$1B,d1
		move.w	#$10,d2
		move.w	$10(a0),d4
		lea	byte_21D78(pc),a2
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	sub_1BADA
		btst	#3,$2A(a0)
		beq.s	loc_21B46
		bsr.s	sub_21B74

loc_21B46:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	sub_1BADA
		btst	#4,$2A(a0)
		beq.s	loc_21B5E
		bsr.s	sub_21B74

loc_21B5E:
		lea	(Ani_Spring).l,a1
		jsr	(Animate_Sprite).l
		move.w	$32(a0),d0
		jmp	(Sprite_OnScreen_Test2).l

; =============== S U B R O U T I N E =======================================


sub_21B74:
		btst	#0,$2A(a0)
		bne.s	loc_21B8A
		move.w	$10(a0),d0
		subq.w	#4,d0
		cmp.w	$10(a1),d0
		bcs.s	loc_21B98
		rts
; ---------------------------------------------------------------------------

loc_21B8A:
		move.w	$10(a0),d0
		addq.w	#4,d0
		cmp.w	$10(a1),d0
		bcc.s	loc_21B98
		rts
; ---------------------------------------------------------------------------

loc_21B98:
		move.w	#$500,$20(a0)
		move.w	$30(a0),$1A(a1)
		move.w	$30(a0),$18(a1)
		addq.w	#6,$14(a1)
		addq.w	#6,$10(a1)
		bset	#0,$2A(a1)
		btst	#0,$2A(a0)
		bne.s	loc_21BD0
		bclr	#0,$2A(a1)
		subi.w	#$C,$10(a1)
		neg.w	$18(a1)

loc_21BD0:
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		clr.b	$40(a1)
		move.b	#$10,$20(a1)
		move.b	#2,5(a1)
		move.b	$2C(a0),d0
		btst	#0,d0
		beq.s	loc_21C30
		move.w	#1,$1C(a1)
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#1,$30(a1)
		move.b	#8,$31(a1)
		btst	#1,d0
		bne.s	loc_21C20
		move.b	#3,$30(a1)

loc_21C20:
		btst	#0,$2A(a1)
		beq.s	loc_21C30
		neg.b	$27(a1)
		neg.w	$1C(a1)

loc_21C30:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_21C46
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)

loc_21C46:
		cmpi.b	#8,d0
		bne.s	loc_21C58
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_21C58:
		moveq	#signextendB(sfx_Spring),d0
		jmp	(Play_Sound_2).l
; End of function sub_21B74

; ---------------------------------------------------------------------------

Obj_Spring_DownDiag:
		move.w	#$1B,d1
		move.w	#$10,d2
		move.w	$10(a0),d4
		lea	byte_21D94(pc),a2
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.w	sub_1BADA
		cmpi.w	#-2,d4
		bne.s	loc_21C86
		bsr.s	sub_21CB2

loc_21C86:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	sub_1BADA
		cmpi.w	#-2,d4
		bne.s	loc_21C9C
		bsr.s	sub_21CB2

loc_21C9C:
		lea	(Ani_Spring).l,a1
		jsr	(Animate_Sprite).l
		move.w	$32(a0),d0
		jmp	(Sprite_OnScreen_Test2).l

; =============== S U B R O U T I N E =======================================


sub_21CB2:
		move.w	#$500,$20(a0)
		move.w	$30(a0),$1A(a1)
		neg.w	$1A(a1)
		move.w	$30(a0),$18(a1)
		subq.w	#6,$14(a1)
		addq.w	#6,$10(a1)
		bset	#0,$2A(a1)
		btst	#0,$2A(a0)
		bne.s	loc_21CEE
		bclr	#0,$2A(a1)
		subi.w	#$C,$10(a1)
		neg.w	$18(a1)

loc_21CEE:
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		clr.b	$40(a1)
		move.b	#2,5(a1)
		move.b	$2C(a0),d0
		btst	#0,d0
		beq.s	loc_21D48
		move.w	#1,$1C(a1)
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#1,$30(a1)
		move.b	#8,$31(a1)
		btst	#1,d0
		bne.s	loc_21D38
		move.b	#3,$30(a1)

loc_21D38:
		btst	#0,$2A(a1)
		beq.s	loc_21D48
		neg.b	$27(a1)
		neg.w	$1C(a1)

loc_21D48:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_21D5E
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)

loc_21D5E:
		cmpi.b	#8,d0
		bne.s	loc_21D70
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_21D70:
		moveq	#signextendB(sfx_Spring),d0
		jmp	(Play_Sound_2).l
; End of function sub_21CB2

; ---------------------------------------------------------------------------
byte_21D78:	dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $E
		dc.b $C
		dc.b $A
		dc.b 8
		dc.b 6
		dc.b 4
		dc.b 2
		dc.b 0
		dc.b $FE
		dc.b $FC
		dc.b $FC
		dc.b $FC
		dc.b $FC
		dc.b $FC
		dc.b $FC
		dc.b $FC
byte_21D94:	dc.b $F4
		dc.b $F0
		dc.b $F0
		dc.b $F0
		dc.b $F0
		dc.b $F0
		dc.b $F0
		dc.b $F0
		dc.b $F0
		dc.b $F0
		dc.b $F0
		dc.b $F0
		dc.b $F2
		dc.b $F4
		dc.b $F6
		dc.b $F8
		dc.b $FA
		dc.b $FC
		dc.b $FE
		dc.b 0
		dc.b 2
		dc.b 4
		dc.b 4
		dc.b 4
		dc.b 4
		dc.b 4
		dc.b 4
		dc.b 4
Ani_Spring:	include "General/Sprites/Level Misc/Anim - Spring.asm"
Map_Spring:	include "General/Sprites/Level Misc/Map - Spring.asm"
Map_2PSpring:	include "General/Sprites/Level Misc/Map - 2P Spring.asm"
; ---------------------------------------------------------------------------

Obj_RetractingSpring:
		bsr.w	Obj_Spring
		move.b	$2C(a0),d0
		lsr.w	#3,d0
		andi.w	#$E,d0
		move.w	off_22088(pc,d0.w),d1
		jmp	off_22088(pc,d1.w)
; ---------------------------------------------------------------------------
off_22088:	dc.w loc_22092-off_22088
		dc.w loc_220AE-off_22088
		dc.w loc_220CA-off_22088
		dc.w loc_220E6-off_22088
		dc.w loc_22116-off_22088
; ---------------------------------------------------------------------------

loc_22092:
		move.l	#loc_22098,(a0)

loc_22098:
		bsr.w	sub_22146
		moveq	#0,d0
		move.b	$36(a0),d0
		add.w	$34(a0),d0
		move.w	d0,$14(a0)
		bra.w	Obj_Spring_Up
; ---------------------------------------------------------------------------

loc_220AE:
		move.l	#loc_220B4,(a0)

loc_220B4:
		bsr.w	sub_22146
		moveq	#0,d0
		move.b	$36(a0),d0
		add.w	$32(a0),d0
		move.w	d0,$10(a0)
		bra.w	Obj_Spring_Horizontal
; ---------------------------------------------------------------------------

loc_220CA:
		move.l	#loc_220D0,(a0)

loc_220D0:
		bsr.w	sub_22146
		moveq	#0,d0
		move.b	$36(a0),d0
		add.w	$34(a0),d0
		move.w	d0,$14(a0)
		bra.w	Obj_Spring_Down
; ---------------------------------------------------------------------------

loc_220E6:
		move.l	#loc_220EC,(a0)

loc_220EC:
		bsr.w	sub_22146
		moveq	#0,d0
		move.b	$36(a0),d0
		move.w	d0,d1
		btst	#0,$2A(a0)
		bne.s	loc_22102
		neg.w	d0

loc_22102:
		add.w	$32(a0),d0
		move.w	d0,$10(a0)
		add.w	$34(a0),d1
		move.w	d1,$14(a0)
		bra.w	Obj_Spring_UpDiag
; ---------------------------------------------------------------------------

loc_22116:
		move.l	#loc_2211C,(a0)

loc_2211C:
		bsr.w	sub_22146
		moveq	#0,d0
		move.b	$36(a0),d0
		move.w	d0,d1
		btst	#0,$2A(a0)
		beq.s	loc_22132
		neg.w	d0

loc_22132:
		add.w	$32(a0),d0
		move.w	d0,$10(a0)
		add.w	$34(a0),d1
		move.w	d1,$14(a0)
		bra.w	Obj_Spring_DownDiag

; =============== S U B R O U T I N E =======================================


sub_22146:
		tst.w	$3A(a0)
		beq.s	loc_22162
		subq.w	#1,$3A(a0)
		bne.s	locret_221A4
		tst.b	4(a0)
		bpl.s	locret_221A4
		moveq	#signextendB(sfx_SpikeMove),d0
		jsr	(Play_Sound_2).l
		bra.s	locret_221A4
; ---------------------------------------------------------------------------

loc_22162:
		tst.w	$38(a0)
		beq.s	loc_22184
		subi.w	#$800,$36(a0)
		bcc.s	locret_221A4
		move.w	#0,$36(a0)
		move.w	#0,$38(a0)
		move.w	#$3C,$3A(a0)
		bra.s	locret_221A4
; ---------------------------------------------------------------------------

loc_22184:
		addi.w	#$800,$36(a0)
		cmpi.w	#$2000,$36(a0)
		bcs.s	locret_221A4
		move.w	#$2000,$36(a0)
		move.w	#1,$38(a0)
		move.w	#$3C,$3A(a0)

locret_221A4:
		rts
; End of function sub_22146

; ---------------------------------------------------------------------------
byte_221A6:	dc.b   $C,   8,   0,   1
		dc.b   $C,   8,   0,   0
		dc.b   $C,   8,   0,   1
		dc.b    8,  $C,   1,   0
		dc.b   $C,   8,   2,   1
		dc.b   $C,   8,   3,   1
		dc.b   $C,   8,   2,   1
		dc.b   $C,   8,   3,   1
; ---------------------------------------------------------------------------

Obj_2PRetractingSpring:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2229C
		move.l	#loc_2255E,(a1)
		move.l	#Map_2PRetractingSpring,$C(a1)
		move.w	#$391,$A(a1)
		cmpi.b	#$12,(Current_zone).w
		bne.s	loc_221F4
		move.l	#Map_2PRetractingSpring_2,$C(a1)

loc_221F4:
		move.b	$2C(a0),d0
		move.b	d0,$2C(a1)
		lsr.b	#2,d0
		andi.w	#$1C,d0
		lea	byte_221A6(pc,d0.w),a2
		move.b	(a2)+,7(a1)
		move.b	(a2)+,6(a1)
		move.b	(a2)+,d0
		move.b	d0,$22(a1)
		bne.s	loc_2221C
		move.l	#loc_225B8,(a1)

loc_2221C:
		andi.b	#-$10,$2C(a0)
		move.b	(a2)+,d1
		or.b	d1,$2C(a0)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		moveq	#0,d2
		moveq	#0,d3
		cmpi.b	#1,d0
		bne.s	loc_2224E
		moveq	#$C,d2
		btst	#0,$2A(a0)
		bne.s	loc_2224A
		neg.w	d2

loc_2224A:
		add.w	d2,$10(a1)

loc_2224E:
		cmpi.b	#2,d0
		bne.s	loc_2225A
		moveq	#$B,d3
		add.w	d3,$14(a1)

loc_2225A:
		cmpi.b	#3,d0
		bne.s	loc_22266
		moveq	#-$B,d3
		add.w	d3,$14(a1)

loc_22266:
		move.w	d2,$30(a1)
		move.w	d3,$32(a1)
		bclr	#1,$2A(a0)
		beq.s	loc_2227C
		move.b	#1,$3C(a0)

loc_2227C:
		move.b	$2A(a0),$2A(a1)
		move.b	4(a0),4(a1)
		ori.b	#4,4(a1)
		move.w	#$200,8(a1)
		move.w	a0,$3E(a1)
		move.w	a1,$3E(a0)

loc_2229C:
		bsr.w	sub_21426

loc_222A0:
		move.b	$2C(a0),d0
		lsr.w	#3,d0
		andi.w	#$E,d0
		move.w	off_222B2(pc,d0.w),d1
		jmp	off_222B2(pc,d1.w)
; ---------------------------------------------------------------------------
off_222B2:	dc.w loc_222C2-off_222B2
		dc.w loc_222DE-off_222B2
		dc.w loc_222FA-off_222B2
		dc.w loc_22316-off_222B2
		dc.w loc_22332-off_222B2
		dc.w loc_2234E-off_222B2
		dc.w loc_22332-off_222B2
		dc.w loc_2234E-off_222B2
; ---------------------------------------------------------------------------

loc_222C2:
		move.l	#loc_222C8,(a0)

loc_222C8:
		bsr.w	sub_2236A
		moveq	#0,d0
		move.b	$36(a0),d0
		add.w	$34(a0),d0
		move.w	d0,$14(a0)
		bra.w	Obj_2PSpring_Up
; ---------------------------------------------------------------------------

loc_222DE:
		move.l	#loc_222E4,(a0)

loc_222E4:
		bsr.w	sub_2236A
		moveq	#0,d0
		move.b	$36(a0),d0
		add.w	$32(a0),d0
		move.w	d0,$10(a0)
		bra.w	Obj_2PSpring_Horizontal
; ---------------------------------------------------------------------------

loc_222FA:
		move.l	#loc_22300,(a0)

loc_22300:
		bsr.w	sub_2236A
		moveq	#0,d0
		move.b	$36(a0),d0
		add.w	$34(a0),d0
		move.w	d0,$14(a0)
		bra.w	Obj_2PSpring_Down
; ---------------------------------------------------------------------------

loc_22316:
		move.l	#loc_2231C,(a0)

loc_2231C:
		bsr.w	sub_2236A
		moveq	#0,d0
		move.b	$36(a0),d0
		add.w	$34(a0),d0
		move.w	d0,$14(a0)
		bra.w	Obj_2PSpring_Horizontal
; ---------------------------------------------------------------------------

loc_22332:
		move.l	#loc_22338,(a0)

loc_22338:
		bsr.w	sub_2236A
		moveq	#0,d0
		move.b	$36(a0),d0
		add.w	$32(a0),d0
		move.w	d0,$10(a0)
		bra.w	Obj_2PSpring_Up
; ---------------------------------------------------------------------------

loc_2234E:
		move.l	#loc_22354,(a0)

loc_22354:
		bsr.w	sub_2236A
		moveq	#0,d0
		move.b	$36(a0),d0
		add.w	$32(a0),d0
		move.w	d0,$10(a0)
		bra.w	Obj_2PSpring_Down

; =============== S U B R O U T I N E =======================================


sub_2236A:
		tst.b	$2C(a0)
		bmi.s	loc_223D0
		tst.w	$3A(a0)
		beq.s	loc_2238C
		subq.w	#1,$3A(a0)
		bne.s	locret_223CE
		tst.b	4(a0)
		bpl.s	locret_223CE
		moveq	#signextendB(sfx_SpikeMove),d0
		jsr	(Play_Sound_2).l
		bra.s	locret_223CE
; ---------------------------------------------------------------------------

loc_2238C:
		tst.w	$38(a0)
		beq.s	loc_223AE
		subi.w	#$800,$36(a0)
		bcc.s	locret_223CE
		move.w	#0,$36(a0)
		move.w	#0,$38(a0)
		move.w	#$3C,$3A(a0)
		bra.s	locret_223CE
; ---------------------------------------------------------------------------

loc_223AE:
		addi.w	#$800,$36(a0)
		cmpi.w	#$1800,$36(a0)
		bcs.s	locret_223CE
		move.w	#$1800,$36(a0)
		move.w	#1,$38(a0)
		move.w	#$3C,$3A(a0)

locret_223CE:
		rts
; ---------------------------------------------------------------------------

loc_223D0:
		tst.b	$3C(a0)
		beq.w	loc_2249A
		tst.w	$3A(a0)
		beq.s	loc_223F0
		subq.w	#1,$3A(a0)
		bne.w	locret_22498
		move.w	#0,$38(a0)
		bra.w	locret_22498
; ---------------------------------------------------------------------------

loc_223F0:
		tst.w	$38(a0)
		bne.w	loc_2247E
		tst.w	$36(a0)
		beq.w	locret_22498
		subi.w	#$800,$36(a0)
		bhi.w	locret_22498
		move.w	#0,$36(a0)
		move.b	$2C(a0),d0
		andi.b	#-$10,d0
		cmpi.b	#-$20,d0
		bne.s	loc_2244A
		addi.w	#$16,$14(a0)
		bchg	#1,$2A(a0)
		bchg	#1,4(a0)
		andi.b	#$F,$2C(a0)
		ori.b	#-$10,$2C(a0)
		move.l	#loc_222A0,(a0)
		movea.w	$3E(a0),a1
		neg.w	$32(a1)

loc_2244A:
		cmpi.b	#-$10,d0
		bne.s	loc_2247C
		subi.w	#$16,$14(a0)
		bchg	#1,$2A(a0)
		bchg	#1,4(a0)
		andi.b	#$F,$2C(a0)
		ori.b	#-$20,$2C(a0)
		move.l	#loc_222A0,(a0)
		movea.w	$3E(a0),a1
		neg.w	$32(a1)

loc_2247C:
		bra.s	locret_22498
; ---------------------------------------------------------------------------

loc_2247E:
		addi.w	#$800,$36(a0)
		cmpi.w	#$1800,$36(a0)
		bcs.s	locret_22498
		move.w	#$1800,$36(a0)
		move.w	#$B4,$3A(a0)

locret_22498:
		rts
; ---------------------------------------------------------------------------

loc_2249A:
		tst.w	$3A(a0)
		beq.s	loc_224B2
		subq.w	#1,$3A(a0)
		bne.w	locret_2255C
		move.w	#0,$38(a0)
		bra.w	locret_2255C
; ---------------------------------------------------------------------------

loc_224B2:
		tst.w	$38(a0)
		beq.s	loc_224D2
		subi.w	#$800,$36(a0)
		bcc.w	locret_2255C
		move.w	#0,$36(a0)
		move.w	#$B4,$3A(a0)
		bra.w	locret_2255C
; ---------------------------------------------------------------------------

loc_224D2:
		cmpi.w	#$1800,$36(a0)
		beq.w	locret_2255C
		addi.w	#$800,$36(a0)
		cmpi.w	#$1800,$36(a0)
		bcs.s	locret_2255C
		move.w	#$1800,$36(a0)
		move.b	$2C(a0),d0
		andi.b	#-$10,d0
		cmpi.b	#-$20,d0
		bne.s	loc_2252A
		addi.w	#$16,$14(a0)
		bchg	#1,$2A(a0)
		bchg	#1,4(a0)
		andi.b	#$F,$2C(a0)
		ori.b	#-$10,$2C(a0)
		move.l	#loc_222A0,(a0)
		movea.w	$3E(a0),a1
		neg.w	$32(a1)

loc_2252A:
		cmpi.b	#-$10,d0
		bne.s	locret_2255C
		subi.w	#$16,$14(a0)
		bchg	#1,$2A(a0)
		bchg	#1,4(a0)
		andi.b	#$F,$2C(a0)
		ori.b	#-$20,$2C(a0)
		move.l	#loc_222A0,(a0)
		movea.w	$3E(a0),a1
		neg.w	$32(a1)

locret_2255C:
		rts
; End of function sub_2236A

; ---------------------------------------------------------------------------

loc_2255E:
		movea.w	$3E(a0),a1
		move.w	$10(a1),d2
		move.w	$14(a1),d3
		add.w	$30(a0),d2
		add.w	$32(a0),d3
		move.w	d2,$10(a0)
		move.w	d3,$14(a0)
		move.b	$2C(a0),d1
		bpl.s	loc_22594
		andi.w	#$F,d1
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d1.w)
		beq.s	loc_22594
		move.w	#1,$38(a1)

loc_22594:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#7,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_225B8:
		move.b	$2C(a0),d1
		bpl.s	locret_225D6
		andi.w	#$F,d1
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d1.w)
		beq.s	locret_225D6
		movea.w	$3E(a0),a1
		move.w	#1,$38(a1)

locret_225D6:
		rts
; ---------------------------------------------------------------------------
Map_2PRetractingSpring:
		include "General/Sprites/Level Misc/Map - 2P Retracting Spring.asm"
byte_22602:	dc.b $10
		dc.b $10
		dc.b $20
		dc.b $10
		dc.b $30
		dc.b $10
		dc.b $40
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $20
		dc.b $10
		dc.b $30
		dc.b $10
		dc.b $40
; ---------------------------------------------------------------------------

Obj_Spikes:
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	$2C(a0),d0
		andi.w	#$F0,d0
		lsr.w	#3,d0
		tst.w	(Competition_mode).w
		bne.s	loc_226A0
		lea	byte_22602(pc,d0.w),a1
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.l	#loc_226FC,(a0)
		move.l	#Map_Spikes,$C(a0)
		move.w	#$49C,$A(a0)
		lsr.w	#1,d0
		move.b	d0,$22(a0)
		cmpi.b	#4,d0
		bcs.s	loc_22666
		move.l	#loc_2274E,(a0)
		move.w	#$494,$A(a0)

loc_22666:
		btst	#1,$2A(a0)
		beq.s	loc_22674
		move.l	#loc_227AA,(a0)

loc_22674:
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		move.b	$2C(a0),d0
		andi.b	#$F,d0
		add.b	d0,d0
		move.b	d0,$2C(a0)
		rts
; ---------------------------------------------------------------------------
byte_22690:	dc.b   $C,  $C, $18,  $C, $24,  $C, $30,  $C,  $C,  $C,  $C, $18,  $C, $24,  $C, $30
; ---------------------------------------------------------------------------

loc_226A0:
		lea	byte_22690(pc,d0.w),a1
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.l	#loc_227FA,(a0)
		move.l	#Map_2PSpikes,$C(a0)
		move.w	#$391,$A(a0)
		lsr.w	#1,d0
		move.b	d0,$22(a0)
		cmpi.b	#4,d0
		bcs.s	loc_226D2
		move.l	#loc_22848,(a0)

loc_226D2:
		btst	#1,$2A(a0)
		beq.s	loc_226E0
		move.l	#loc_228A0,(a0)

loc_226E0:
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		move.b	$2C(a0),d0
		andi.b	#$F,d0
		add.b	d0,d0
		move.b	d0,$2C(a0)
		rts
; ---------------------------------------------------------------------------

loc_226FC:
		bsr.w	sub_22922
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull
		move.b	$2A(a0),d6
		andi.b	#$18,d6
		beq.s	loc_22744
		move.b	d6,d0
		andi.b	#8,d0
		beq.s	loc_22736
		lea	(Player_1).w,a1
		bsr.w	sub_228EC

loc_22736:
		andi.b	#$10,d6
		beq.s	loc_22744
		lea	(Player_2).w,a1
		bsr.w	sub_228EC

loc_22744:
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_2274E:
		bsr.w	sub_22922
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull
		swap	d6
		andi.w	#3,d6
		beq.s	loc_227A0
		move.b	d6,d0
		andi.b	#1,d0
		beq.s	loc_2278C
		lea	(Player_1).w,a1
		bsr.w	sub_228EC
		bclr	#5,$2A(a0)

loc_2278C:
		andi.b	#2,d6
		beq.s	loc_227A0
		lea	(Player_2).w,a1
		bsr.w	sub_228EC
		bclr	#6,$2A(a0)

loc_227A0:
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_227AA:
		bsr.w	sub_22922
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull
		swap	d6
		andi.w	#$C,d6
		beq.s	loc_227F0
		move.b	d6,d0
		andi.b	#4,d0
		beq.s	loc_227E2
		lea	(Player_1).w,a1
		bsr.w	sub_228EC

loc_227E2:
		andi.b	#8,d6
		beq.s	loc_227F0
		lea	(Player_2).w,a1
		bsr.w	sub_228EC

loc_227F0:
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_227FA:
		bsr.w	sub_229C0
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#7,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull
		move.b	$2A(a0),d6
		andi.b	#$18,d6
		beq.s	loc_22842
		move.b	d6,d0
		andi.b	#8,d0
		beq.s	loc_22834
		lea	(Player_1).w,a1
		bsr.w	sub_228EC

loc_22834:
		andi.b	#$10,d6
		beq.s	loc_22842
		lea	(Player_2).w,a1
		bsr.w	sub_228EC

loc_22842:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_22848:
		bsr.w	sub_229C0
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#7,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull
		swap	d6
		andi.w	#3,d6
		beq.s	loc_2289A
		move.b	d6,d0
		andi.b	#1,d0
		beq.s	loc_22886
		lea	(Player_1).w,a1
		bsr.w	sub_228EC
		bclr	#5,$2A(a0)

loc_22886:
		andi.b	#2,d6
		beq.s	loc_2289A
		lea	(Player_2).w,a1
		bsr.w	sub_228EC
		bclr	#6,$2A(a0)

loc_2289A:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_228A0:
		bsr.w	sub_229C0
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#7,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	SolidObjectFull
		swap	d6
		andi.w	#$C,d6
		beq.s	loc_228E6
		move.b	d6,d0
		andi.b	#4,d0
		beq.s	loc_228D8
		lea	(Player_1).w,a1
		bsr.w	sub_228EC

loc_228D8:
		andi.b	#8,d6
		beq.s	loc_228E6
		lea	(Player_2).w,a1
		bsr.w	sub_228EC

loc_228E6:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_228EC:
		btst	#1,$2B(a1)
		bne.s	locret_22920
		tst.b	$34(a1)
		bne.s	locret_22920
		cmpi.b	#4,5(a1)
		bcc.s	locret_22920
		move.l	$14(a1),d3
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		sub.l	d0,d3
		move.l	d3,$14(a1)
		movea.l	a0,a2
		movea.l	a1,a0
		jsr	(HurtCharacter).l
		movea.l	a2,a0

locret_22920:
		rts
; End of function sub_228EC


; =============== S U B R O U T I N E =======================================


sub_22922:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	off_22930(pc,d0.w),d1
		jmp	off_22930(pc,d1.w)
; End of function sub_22922

; ---------------------------------------------------------------------------
off_22930:	dc.w locret_22936-off_22930
		dc.w loc_22938-off_22930
		dc.w loc_2294C-off_22930
; ---------------------------------------------------------------------------

locret_22936:
		rts
; ---------------------------------------------------------------------------

loc_22938:
		bsr.w	sub_22960
		moveq	#0,d0
		move.b	$34(a0),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_2294C:
		bsr.w	sub_22960
		moveq	#0,d0
		move.b	$34(a0),d0
		add.w	$30(a0),d0
		move.w	d0,$10(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_22960:
		tst.w	$38(a0)
		beq.s	loc_2297C
		subq.w	#1,$38(a0)
		bne.s	locret_229BE
		tst.b	4(a0)
		bpl.s	locret_229BE
		moveq	#signextendB(sfx_SpikeMove),d0
		jsr	(Play_Sound_2).l
		bra.s	locret_229BE
; ---------------------------------------------------------------------------

loc_2297C:
		tst.w	$36(a0)
		beq.s	loc_2299E
		subi.w	#$800,$34(a0)
		bcc.s	locret_229BE
		move.w	#0,$34(a0)
		move.w	#0,$36(a0)
		move.w	#$3C,$38(a0)
		bra.s	locret_229BE
; ---------------------------------------------------------------------------

loc_2299E:
		addi.w	#$800,$34(a0)
		cmpi.w	#$2000,$34(a0)
		bcs.s	locret_229BE
		move.w	#$2000,$34(a0)
		move.w	#1,$36(a0)
		move.w	#$3C,$38(a0)

locret_229BE:
		rts
; End of function sub_22960


; =============== S U B R O U T I N E =======================================


sub_229C0:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	off_229CE(pc,d0.w),d1
		jmp	off_229CE(pc,d1.w)
; End of function sub_229C0

; ---------------------------------------------------------------------------
off_229CE:	dc.w locret_22936-off_229CE
		dc.w loc_229D4-off_229CE
		dc.w loc_229E8-off_229CE
; ---------------------------------------------------------------------------

loc_229D4:
		bsr.w	sub_229FC
		moveq	#0,d0
		move.b	$34(a0),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_229E8:
		bsr.w	sub_229FC
		moveq	#0,d0
		move.b	$34(a0),d0
		add.w	$30(a0),d0
		move.w	d0,$10(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_229FC:
		tst.w	$38(a0)
		beq.s	loc_22A18
		subq.w	#1,$38(a0)
		bne.s	locret_22A5A
		tst.b	4(a0)
		bpl.s	locret_22A5A
		moveq	#signextendB(sfx_SpikeMove),d0
		jsr	(Play_Sound_2).l
		bra.s	locret_22A5A
; ---------------------------------------------------------------------------

loc_22A18:
		tst.w	$36(a0)
		beq.s	loc_22A3A
		subi.w	#$800,$34(a0)
		bcc.s	locret_22A5A
		move.w	#0,$34(a0)
		move.w	#0,$36(a0)
		move.w	#$3C,$38(a0)
		bra.s	locret_22A5A
; ---------------------------------------------------------------------------

loc_22A3A:
		addi.w	#$800,$34(a0)
		cmpi.w	#$1800,$34(a0)
		bcs.s	locret_22A5A
		move.w	#$1800,$34(a0)
		move.w	#1,$36(a0)
		move.w	#$3C,$38(a0)

locret_22A5A:
		rts
; End of function sub_229FC

; ---------------------------------------------------------------------------
Map_Spikes:	include "General/Sprites/Level Misc/Map - Spikes.asm"
Map_2PSpikes:	include "General/2P Zone/Map - Spikes.asm"

; =============== S U B R O U T I N E =======================================


Init_ArtScaling:
		moveq	#0,d1
		move.w	d1,(_unkF740).w
		movea.w	d1,a0
		movea.w	d1,a1
		movea.w	d1,a2
		movea.w	d1,a3
		movea.w	d1,a4
		movea.w	d1,a5
		lea	(H_scroll_buffer).w,a6
		move.w	#$F,d1

loc_22C1E:
		movem.l	a0-a5,-(a6)
		movem.l	a0-a5,-(a6)
		movem.l	a0-a5,-(a6)
		movem.l	a0-a5,-(a6)
		movem.l	a0-a5,-(a6)
		movem.l	a0-a5,-(a6)
		movem.l	a0-a5,-(a6)
		movem.l	a0-a5,-(a6)
		movem.l	a0-a5,-(a6)
		movem.l	a0-a5,-(a6)
		movem.l	a0-a3,-(a6)
		dbf	d1,loc_22C1E
		rts
; End of function Init_ArtScaling

; ---------------------------------------------------------------------------
word_22C50:	dc.w $100
		dc.w $FC
		dc.w $90
		dc.w $90
		dc.w $40
		dc.w $40
		dc.w $40
		dc.w $3C
		dc.w $3C
		dc.w $3C
		dc.w $3C
		dc.w $3C
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $C
		dc.w $C
		dc.w $C
		dc.w $C

; =============== S U B R O U T I N E =======================================


sub_22C90:
		moveq	#0,d1
		move.b	$40(a0),d1
		cmpi.b	#$1C,d1
		bcs.s	loc_22CA0
		move.b	#$1C,d1

loc_22CA0:
		move.b	d1,$22(a0)
		add.w	d1,d1
		move.w	word_22C50(pc,d1.w),d1
		move.w	(_unkF740).w,d2
		add.w	d1,d2
		cmpi.w	#$80,d2
		bhi.s	loc_22CD8
		sub.w	d1,d2
		movem.l	d1/d5-a0/a2/a4,-(sp)
		lea	(Kos_decomp_buffer).w,a2
		add.w	d2,d0
		move.w	d0,$A(a0)
		lsl.w	#5,d2
		adda.w	d2,a2
		bsr.s	sub_22CE0
		movem.l	(sp)+,d1/d5-a0/a2/a4
		add.w	d1,(_unkF740).w
		rts
; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------

loc_22CD8:
		bclr	#7,4(a0)
		rts
; End of function sub_22C90


; =============== S U B R O U T I N E =======================================


sub_22CE0:
		moveq	#0,d0
		move.b	$40(a0),d0
		moveq	#0,d1
		move.b	$20(a0),d1
		movea.l	$42(a0),a1
		ror.w	#4,d1
		adda.l	d1,a1
		movea.l	a1,a0
		adda.w	#$1000,a0
		addi.w	#4,d0
		move.w	d0,d4
		lsr.w	#3,d4
		move.w	d0,d5
		ror.w	#3,d5
		andi.w	#-$2000,d5
		move.w	#$F0,d6
		swap	d6
		move.w	#$F,d7
		swap	d7
		tst.w	d4
		beq.w	loc_22FC0
		cmpi.w	#1,d4
		bne.s	loc_22D30
		tst.w	d5
		beq.w	loc_22F44
		cmpi.w	#$2000,d5
		beq.w	loc_22EBE

loc_22D30:
		move.w	d4,d2
		swap	d2
		move.w	d5,d2
		lsr.l	#8,d2
		move.l	#$400000,d0
		divu.w	d2,d0
		lsr.w	#8,d0
		lsr.w	#3,d0
		subq.w	#1,d0
		movea.w	d0,a5
		moveq	#0,d2
		moveq	#0,d3
		lea	loc_22DA2(pc),a6

loc_22D50:
		move.w	#$1F,d7

loc_22D54:
		swap	d7
		swap	d3
		move.w	#0,d2
		move.w	#0,d3
		movea.l	a2,a4
		move.w	a5,d6
		bmi.s	loc_22D76

loc_22D66:
		swap	d6
		jsr	(a6)
		swap	d6
		dbf	d6,loc_22D66
		cmpi.w	#$40,d2
		bcc.s	loc_22D7E

loc_22D76:
		swap	d6
		jsr	sub_22E08(pc)
		swap	d6

loc_22D7E:
		swap	d3
		add.w	d5,d3
		bcc.s	loc_22D88
		adda.w	#$40,a1

loc_22D88:
		move.w	d4,d0
		lsl.w	#6,d0
		adda.w	d0,a1
		cmpa.l	a0,a1
		bcc.s	locret_22DA0
		addq.w	#4,a2
		swap	d7
		dbf	d7,loc_22D54
		lea	$380(a2),a2
		bra.s	loc_22D50
; ---------------------------------------------------------------------------

locret_22DA0:
		rts
; End of function sub_22CE0

; ---------------------------------------------------------------------------

loc_22DA2:
		move.b	(a1,d2.w),d0
		add.w	d5,d3
		addx.w	d4,d2
		move.b	(a1,d2.w),d1
		add.w	d5,d3
		addx.w	d4,d2
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a1,d2.w),d0
		add.w	d5,d3
		addx.w	d4,d2
		move.b	(a1,d2.w),d1
		add.w	d5,d3
		addx.w	d4,d2
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a1,d2.w),d0
		add.w	d5,d3
		addx.w	d4,d2
		move.b	(a1,d2.w),d1
		add.w	d5,d3
		addx.w	d4,d2
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a1,d2.w),d0
		add.w	d5,d3
		addx.w	d4,d2
		move.b	(a1,d2.w),d1
		add.w	d5,d3
		addx.w	d4,d2
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		lea	$7C(a4),a4
		rts

; =============== S U B R O U T I N E =======================================


sub_22E08:
		move.b	(a1,d2.w),d0
		add.w	d5,d3
		addx.w	d4,d2
		cmpi.w	#$40,d2
		bcs.s	loc_22E1A
		move.b	#0,d0

loc_22E1A:
		move.b	(a1,d2.w),d1
		add.w	d5,d3
		addx.w	d4,d2
		cmpi.w	#$40,d2
		bcs.s	loc_22E2C
		move.b	#0,d1

loc_22E2C:
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a1,d2.w),d0
		add.w	d5,d3
		addx.w	d4,d2
		cmpi.w	#$40,d2
		bcs.s	loc_22E46
		move.b	#0,d0

loc_22E46:
		move.b	(a1,d2.w),d1
		add.w	d5,d3
		addx.w	d4,d2
		cmpi.w	#$40,d2
		bcs.s	loc_22E58
		move.b	#0,d1

loc_22E58:
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a1,d2.w),d0
		add.w	d5,d3
		addx.w	d4,d2
		cmpi.w	#$40,d2
		bcs.s	loc_22E72
		move.b	#0,d0

loc_22E72:
		move.b	(a1,d2.w),d1
		add.w	d5,d3
		addx.w	d4,d2
		cmpi.w	#$40,d2
		bcs.s	loc_22E84
		move.b	#0,d1

loc_22E84:
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a1,d2.w),d0
		add.w	d5,d3
		addx.w	d4,d2
		cmpi.w	#$40,d2
		bcs.s	loc_22E9E
		move.b	#0,d0

loc_22E9E:
		move.b	(a1,d2.w),d1
		add.w	d5,d3
		addx.w	d4,d2
		cmpi.w	#$40,d2
		bcs.s	loc_22EB0
		move.b	#0,d1

loc_22EB0:
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		lea	$7C(a4),a4
		rts
; End of function sub_22E08

; ---------------------------------------------------------------------------

loc_22EBE:
		moveq	#0,d3
		lsl.w	#6,d4
		lea	loc_22F0C(pc),a6
		move.w	#1,d7

loc_22ECA:
		swap	d7
		move.w	#$1F,d6

loc_22ED0:
		swap	d6
		movea.l	a1,a3
		movea.l	a2,a4
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		move.b	(a3)+,d0
		and.b	d6,d0
		move.b	d0,(a4)+
		add.w	d5,d3
		bcc.s	loc_22EF2
		lea	$40(a1),a1

loc_22EF2:
		adda.w	d4,a1
		cmpa.l	a0,a1
		bcc.s	locret_22F0A
		addq.w	#4,a2
		swap	d6
		dbf	d6,loc_22ED0
		lea	$380(a2),a2
		swap	d7
		dbf	d7,loc_22ECA

locret_22F0A:
		rts
; ---------------------------------------------------------------------------

loc_22F0C:
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		addq.w	#1,a3
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		lea	$7C(a4),a4
		rts
; ---------------------------------------------------------------------------

loc_22F44:
		moveq	#0,d3
		lsl.w	#6,d4
		lea	loc_22F8A(pc),a6
		move.w	#1,d7

loc_22F50:
		swap	d7
		move.w	#$1F,d6

loc_22F56:
		swap	d6
		movea.l	a1,a3
		movea.l	a2,a4
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		add.w	d5,d3
		bcc.s	loc_22F74
		lea	$40(a1),a1

loc_22F74:
		adda.w	d4,a1
		addq.w	#4,a2
		swap	d6
		dbf	d6,loc_22F56
		lea	$380(a2),a2
		swap	d7
		dbf	d7,loc_22F50
		rts
; ---------------------------------------------------------------------------

loc_22F8A:
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		lea	$7C(a4),a4
		rts
; ---------------------------------------------------------------------------

loc_22FC0:
		cmpi.w	#$E000,d5
		bne.w	loc_23042
		lea	loc_23016(pc),a6
		moveq	#0,d3
		lsl.w	#6,d4
		move.w	#2,d7

loc_22FD4:
		swap	d7
		move.w	#$1F,d6

loc_22FDA:
		swap	d6
		movea.l	a1,a3
		movea.l	a2,a4
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		move.b	(a3),(a4)
		add.w	d5,d3
		bcc.s	loc_22FFC
		lea	$40(a1),a1

loc_22FFC:
		adda.w	d4,a1
		cmpa.l	a0,a1
		bcc.s	locret_23014
		addq.w	#4,a2
		swap	d6
		dbf	d6,loc_22FDA
		lea	$580(a2),a2
		swap	d7
		dbf	d7,loc_22FD4

locret_23014:
		rts
; ---------------------------------------------------------------------------

loc_23016:
		move.b	(a3)+,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		lea	$7C(a4),a4
		rts
; ---------------------------------------------------------------------------

loc_23042:
		cmpi.w	#$C000,d5
		bne.w	loc_230CC
		moveq	#0,d3
		lsl.w	#6,d4
		lea	loc_230AA(pc),a6
		move.w	#3,d7

loc_23056:
		swap	d7
		move.w	#$1F,d6

loc_2305C:
		swap	d6
		movea.l	a1,a3
		movea.l	a2,a4
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		jsr	(a6)
		move.b	(a3)+,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3),d0
		move.b	d0,(a4)
		add.w	d5,d3
		bcc.s	loc_23090
		lea	$40(a1),a1

loc_23090:
		adda.w	d4,a1
		cmpa.l	a0,a1
		bcc.s	locret_230A8
		addq.w	#4,a2
		swap	d6
		dbf	d6,loc_2305C
		lea	$580(a2),a2
		swap	d7
		dbf	d7,loc_23056

locret_230A8:
		rts
; ---------------------------------------------------------------------------

loc_230AA:
		move.b	(a3)+,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		lea	$7C(a4),a4
		rts
; ---------------------------------------------------------------------------

loc_230CC:
		cmpi.w	#$A000,d5
		bne.w	loc_23166
		moveq	#0,d3
		lsl.w	#6,d4
		lea	loc_23150(pc),a5
		lea	loc_23138(pc),a6
		move.w	#3,d7

loc_230E4:
		swap	d7
		move.w	#$1F,d6

loc_230EA:
		swap	d6
		movea.l	a1,a3
		movea.l	a2,a4
		jsr	(a5)
		jsr	(a6)
		jsr	(a5)
		jsr	(a6)
		jsr	(a5)
		jsr	(a6)
		jsr	(a5)
		jsr	(a6)
		jsr	(a5)
		jsr	(a6)
		jsr	(a5)
		jsr	(a6)
		move.w	(a3)+,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		add.w	d5,d3
		bcc.s	loc_2311E
		lea	$40(a1),a1

loc_2311E:
		adda.w	d4,a1
		cmpa.l	a0,a1
		bcc.s	locret_23136
		addq.w	#4,a2
		swap	d6
		dbf	d6,loc_230EA
		lea	$780(a2),a2
		swap	d7
		dbf	d7,loc_230E4

locret_23136:
		rts
; ---------------------------------------------------------------------------

loc_23138:
		move.b	(a3)+,(a4)+
		move.b	(a3)+,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,(a4)+
		lea	$7C(a4),a4
		rts
; ---------------------------------------------------------------------------

loc_23150:
		move.w	(a3)+,(a4)+
		move.b	(a3)+,d0
		move.b	(a3)+,d1
		and.b	d6,d0
		and.b	d7,d1
		or.b	d1,d0
		move.b	d0,(a4)+
		move.b	(a3)+,(a4)+
		lea	$7C(a4),a4
		rts
; ---------------------------------------------------------------------------

loc_23166:
		moveq	#0,d3
		lsl.w	#6,d4
		moveq	#3,d7

loc_2316C:
		move.w	#$1F,d6

loc_23170:
		movea.l	a1,a3
		movea.l	a2,a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		move.l	(a3)+,(a4)
		lea	$80(a4),a4
		add.w	d5,d3
		bcc.s	loc_231DC
		lea	$40(a1),a1

loc_231DC:
		adda.w	d4,a1
		addq.w	#4,a2
		dbf	d6,loc_23170
		lea	$780(a2),a2
		dbf	d7,loc_2316C
		rts
; ---------------------------------------------------------------------------
Map_ScaledArt:	include "General/Sprites/Level Misc/Map - Scaled Art.asm"
; ---------------------------------------------------------------------------

Obj_SphereTest:
		lea	(word_2382C).l,a6
		movea.l	a0,a1
		move.l	#Obj_SphereTest_Main,(a1)
		cmpi.b	#1,$2C(a0)
		beq.w	loc_23398
		cmpi.b	#2,$2C(a0)
		beq.w	loc_23556
		tst.b	(Ctrl_2).w
		bne.w	loc_23556

loc_23398:
		moveq	#0,d2
		moveq	#$D,d3
		tst.w	(Sphere_test_address).w
		bne.s	loc_233D6
		move.w	a0,(Sphere_test_address).w
		move.w	#0,(_unkE412).w
		move.w	#0,(_unkE414).w
		move.w	#$200,(_unkE416).w
		move.w	#0,(SStage_scalar_index_0).w
		move.w	#0,(SStage_scalar_index_1).w
		move.w	#0,(SStage_scalar_index_2).w
		bra.s	loc_233DC
; ---------------------------------------------------------------------------

loc_233CC:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_234E0

loc_233D6:
		move.l	#Obj_EosianSphere,(a1)

loc_233DC:
		bsr.w	sub_23500
		bsr.w	sub_23540
		move.w	d2,d0
		addi.w	#$10,d2
		jsr	(GetSineCosine).l
		asr.w	#1,d0
		asr.w	#1,d1
		move.w	d1,$34(a1)
		move.w	d0,$36(a1)
		move.w	#-$20,$38(a1)
		move.l	a6,$3A(a1)
		adda.w	#$10,a6
		dbf	d3,loc_233CC
		moveq	#0,d2
		moveq	#$D,d3

loc_23412:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_234E0
		move.l	#Obj_EosianSphere,(a1)
		bsr.w	sub_23500
		bsr.w	sub_23540
		move.w	d2,d0
		addi.w	#$10,d2
		jsr	(GetSineCosine).l
		asr.w	#1,d0
		asr.w	#1,d1
		move.w	d1,$34(a1)
		move.w	d0,$36(a1)
		move.w	#$20,$38(a1)
		move.l	a6,$3A(a1)
		adda.w	#$10,a6
		dbf	d3,loc_23412
		moveq	#0,d2
		moveq	#$D,d3

loc_23458:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_234E0
		move.l	#Obj_EosianSphere,(a1)
		bsr.w	sub_23500
		bsr.w	sub_23540
		move.w	d2,d0
		addi.w	#$10,d2
		jsr	(GetSineCosine).l
		asr.w	#1,d0
		asr.w	#1,d1
		move.w	#$20,$34(a1)
		move.w	d0,$36(a1)
		move.w	d1,$38(a1)
		move.l	a6,$3A(a1)
		adda.w	#$10,a6
		dbf	d3,loc_23458
		moveq	#0,d2
		moveq	#$D,d3

loc_2349E:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_234E0
		move.l	#Obj_EosianSphere,(a1)
		bsr.w	sub_23500
		bsr.w	sub_23540
		move.w	d2,d0
		addi.w	#$10,d2
		jsr	(GetSineCosine).l
		asr.w	#1,d0
		asr.w	#1,d1
		move.w	#-$20,$34(a1)
		move.w	d0,$36(a1)
		move.w	d1,$38(a1)
		move.l	a6,$3A(a1)
		adda.w	#$10,a6
		dbf	d3,loc_2349E

loc_234E0:
		lea	(Pal_SphereTest).l,a1
		lea	(Normal_palette_line_2).w,a2
		move.w	#$F,d0

loc_234EE:
		move.w	(a1)+,(a2)+
		dbf	d0,loc_234EE
		moveq	#9,d0
		jsr	(Load_PLC).l
		bra.w	Obj_SphereTest_Main

; =============== S U B R O U T I N E =======================================


sub_23500:
		move.b	#4,4(a1)
		move.b	#$10,7(a1)
		move.b	#$10,6(a1)
		move.w	#$200,8(a1)
		move.l	#Map_SphereTest,$C(a1)
		move.w	#$24E0,$A(a1)
		move.w	$10(a0),$10(a1)
		move.w	$10(a0),$30(a1)
		move.w	$14(a0),$14(a1)
		move.w	$14(a0),$32(a1)
		rts
; End of function sub_23500


; =============== S U B R O U T I N E =======================================


sub_23540:
		cmpi.w	#$40,d2
		bne.s	loc_2354A
		addi.w	#$10,d2

loc_2354A:
		cmpi.w	#$C0,d2
		bne.s	locret_23554
		addi.w	#$10,d2

locret_23554:
		rts
; End of function sub_23540

; ---------------------------------------------------------------------------

loc_23556:
		moveq	#0,d2
		moveq	#$F,d3
		tst.w	(Sphere_test_address).w
		bne.s	loc_23594
		move.w	a0,(Sphere_test_address).w
		move.w	#0,(_unkE412).w
		move.w	#0,(_unkE414).w
		move.w	#$200,(_unkE416).w
		move.w	#0,(SStage_scalar_index_0).w
		move.w	#0,(SStage_scalar_index_1).w
		move.w	#0,(SStage_scalar_index_2).w
		bra.s	loc_2359A
; ---------------------------------------------------------------------------

loc_2358A:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2364C

loc_23594:
		move.l	#Obj_EosianSphere,(a1)

loc_2359A:
		bsr.w	sub_2366C
		move.w	d2,d0
		addi.w	#$10,d2
		jsr	(GetSineCosine).l
		asr.w	#1,d0
		asr.w	#1,d1
		move.w	d1,$34(a1)
		move.w	d0,$36(a1)
		move.w	#0,$38(a1)
		move.l	a6,$3A(a1)
		adda.w	#$10,a6
		dbf	d3,loc_2358A
		moveq	#0,d2
		moveq	#$F,d3

loc_235CC:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2364C
		move.l	#Obj_EosianSphere,(a1)
		bsr.w	sub_2366C
		move.w	d2,d0
		addi.w	#$10,d2
		jsr	(GetSineCosine).l
		asr.w	#1,d0
		asr.w	#1,d1
		move.w	#0,$34(a1)
		move.w	d0,$36(a1)
		move.w	d1,$38(a1)
		move.l	a6,$3A(a1)
		adda.w	#$10,a6
		dbf	d3,loc_235CC
		moveq	#0,d2
		moveq	#$F,d3

loc_2360E:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2364C
		move.l	#Obj_EosianSphere,(a1)
		bsr.w	sub_2366C
		move.w	d2,d0
		addi.w	#$10,d2
		jsr	(GetSineCosine).l
		asr.w	#1,d0
		asr.w	#1,d1
		move.w	d0,$34(a1)
		move.w	#0,$36(a1)
		move.w	d1,$38(a1)
		move.l	a6,$3A(a1)
		adda.w	#$10,a6
		dbf	d3,loc_2360E

loc_2364C:
		lea	(Pal_SphereTest).l,a1
		lea	(Normal_palette_line_2).w,a2
		move.w	#$F,d0

loc_2365A:
		move.w	(a1)+,(a2)+
		dbf	d0,loc_2365A
		moveq	#9,d0
		jsr	(Load_PLC).l
		bra.w	Obj_SphereTest_Main

; =============== S U B R O U T I N E =======================================


sub_2366C:
		move.b	#4,4(a1)
		move.b	#$10,7(a1)
		move.b	#$10,6(a1)
		move.w	#$200,8(a1)
		move.l	#Map_SphereTest,$C(a1)
		move.w	#$24E0,$A(a1)
		move.w	$10(a0),$10(a1)
		move.w	$10(a0),$30(a1)
		move.w	$14(a0),$14(a1)
		move.w	$14(a0),$32(a1)
		rts
; End of function sub_2366C

; ---------------------------------------------------------------------------
Pal_SphereTest:	binclude "General/Special Stage/Palettes/Eosian Spheres.bin"
		even
; ---------------------------------------------------------------------------

Obj_SphereTest_Main:
		move.b	(Ctrl_2).w,d1
		btst	#6,d1
		beq.s	loc_236E2
		cmpi.w	#$800,(_unkE416).w
		bcc.s	loc_236E2
		addq.w	#8,(_unkE416).w

loc_236E2:
		btst	#5,d1
		beq.s	loc_236F4
		cmpi.w	#$81,(_unkE416).w
		bcs.s	loc_236F4
		subq.w	#8,(_unkE416).w

loc_236F4:
		tst.w	$3E(a0)
		bne.s	loc_2371A
		btst	#0,d1
		bne.s	loc_23704
		addq.w	#3,(SStage_scalar_index_0).w

loc_23704:
		btst	#3,d1
		bne.s	loc_2370E
		addq.w	#2,(SStage_scalar_index_1).w

loc_2370E:
		btst	#4,d1
		bne.s	loc_23718
		addq.w	#1,(SStage_scalar_index_2).w

loc_23718:
		bra.s	loc_23738
; ---------------------------------------------------------------------------

loc_2371A:
		btst	#0,d1
		beq.s	loc_23724
		subq.w	#1,(SStage_scalar_index_0).w

loc_23724:
		btst	#3,d1
		beq.s	loc_2372E
		addq.w	#1,(SStage_scalar_index_1).w

loc_2372E:
		btst	#4,d1
		beq.s	loc_23738
		addq.w	#1,(SStage_scalar_index_2).w

loc_23738:
		btst	#7,(Ctrl_2_pressed).w
		beq.s	loc_23758
		eori.w	#-1,$3E(a0)
		move.w	#0,(SStage_scalar_index_0).w
		move.w	#0,(SStage_scalar_index_1).w
		move.w	#0,(SStage_scalar_index_2).w

loc_23758:
		btst	#1,d1
		bne.s	loc_23762
		addq.w	#8,(_unkE414).w

loc_23762:
		btst	#2,d1
		bne.s	loc_2376C
		subq.w	#8,(_unkE414).w

loc_2376C:
		move.w	(SStage_scalar_index_2).w,d0
		lea	(SStage_scalar_result_2).w,a1
		bsr.w	GetScalars
		move.w	(SStage_scalar_index_1).w,d0
		lea	(SStage_scalar_result_1).w,a1
		bsr.w	GetScalars
		move.w	(SStage_scalar_index_0).w,d0
		lea	(SStage_scalar_result_0).w,a1
		bsr.w	GetScalars

Obj_EosianSphere:
		move.w	$10(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_237A6
		bra.s	loc_237C4
; ---------------------------------------------------------------------------

loc_237A6:
		move.w	$48(a0),d0
		beq.s	loc_237B2
		movea.w	d0,a2
		bclr	#7,(a2)

loc_237B2:
		cmpa.w	(Sphere_test_address).w,a0
		bne.s	loc_237BE
		move.w	#0,(Sphere_test_address).w

loc_237BE:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_237C4:
		movea.l	$3A(a0),a6
		move.w	$34(a0),d1
		move.w	$36(a0),d2
		move.w	$38(a0),d0
		bsr.w	sub_2398E
		bsr.w	sub_23964
		add.w	(_unkE416).w,d0
		cmpi.w	#$80,d0
		blt.s	locret_2382A
		bsr.w	sub_2393A
		add.w	(_unkE414).w,d2
		bsr.w	sub_2392C
		add.w	$30(a0),d1
		move.w	d1,$10(a0)
		add.w	$32(a0),d2
		move.w	d2,$14(a0)
		subi.w	#$80,d0
		lsr.w	#5,d0
		addi.w	#0,d0
		cmpi.w	#$10,d0
		bcs.s	loc_23816
		move.w	#$F,d0

loc_23816:
		move.b	d0,$22(a0)
		lsl.w	#6,d0
		andi.w	#$380,d0
		move.w	d0,8(a0)
		jsr	(Draw_Sprite).l

locret_2382A:
		rts
; ---------------------------------------------------------------------------
word_2382C:	dc.w   -$70,-$8000,  -$70,-$8000,     0,-$8000,     0,  $234
		dc.w   -$50,-$8000,  -$70,-$8000,     0,-$8000,     0,  $234
		dc.w   -$30,-$8000,  -$70,-$8000,     0,-$8000,     0,  $234
		dc.w   -$10,-$8000,  -$70,-$8000,     0,-$8000,     0,  $234
		dc.w    $10,-$8000,  -$70,-$8000,     0,-$8000,     0,  $234
		dc.w    $30,-$8000,  -$70,-$8000,     0,-$8000,     0,  $234
		dc.w    $50,-$8000,  -$70,-$8000,     0,-$8000,     0,  $234
		dc.w    $70,-$8000,  -$70,-$8000,     0,-$8000,     0,  $234
		dc.w   -$70,-$8000,   $70,-$8000,     0,-$8000,     0,  $234
		dc.w   -$50,-$8000,   $70,-$8000,     0,-$8000,     0,  $234
		dc.w   -$30,-$8000,   $70,-$8000,     0,-$8000,     0,  $234
		dc.w   -$10,-$8000,   $70,-$8000,     0,-$8000,     0,  $234
		dc.w    $10,-$8000,   $70,-$8000,     0,-$8000,     0,  $234
		dc.w    $30,-$8000,   $70,-$8000,     0,-$8000,     0,  $234
		dc.w    $50,-$8000,   $70,-$8000,     0,-$8000,     0,  $234
		dc.w    $70,-$8000,   $70,-$8000,     0,-$8000,     0,  $234

; =============== S U B R O U T I N E =======================================


sub_2392C:
		ext.l	d1
		lsl.l	#8,d1
		divs.w	d0,d1
		ext.l	d2
		lsl.l	#8,d2
		divs.w	d0,d2
		rts
; End of function sub_2392C


; =============== S U B R O U T I N E =======================================


sub_2393A:
		swap	d0
		move.w	d1,d3
		move.w	d2,d4
		move.w	(SStage_scalar_result_2).w,d0
		muls.w	d0,d3
		muls.w	d0,d4
		move.w	(SStage_scalar_result_2+2).w,d0
		muls.w	d0,d1
		muls.w	d0,d2
		sub.l	d4,d1
		add.l	d1,d1
		add.l	d1,d1
		swap	d1
		add.l	d3,d2
		add.l	d2,d2
		add.l	d2,d2
		swap	d2
		swap	d0
		rts
; End of function sub_2393A


; =============== S U B R O U T I N E =======================================


sub_23964:
		swap	d2
		move.w	d0,d3
		move.w	d1,d4
		move.w	(SStage_scalar_result_1).w,d2
		muls.w	d2,d3
		muls.w	d2,d4
		move.w	(SStage_scalar_result_1+2).w,d2
		muls.w	d2,d0
		muls.w	d2,d1
		sub.l	d4,d0
		add.l	d0,d0
		add.l	d0,d0
		swap	d0
		add.l	d3,d1
		add.l	d1,d1
		add.l	d1,d1
		swap	d1
		swap	d2
		rts
; End of function sub_23964


; =============== S U B R O U T I N E =======================================


sub_2398E:
		swap	d1
		move.w	d0,d3
		move.w	d2,d4
		move.w	(SStage_scalar_result_0).w,d1
		muls.w	d1,d3
		muls.w	d1,d4
		move.w	(SStage_scalar_result_0+2).w,d1
		muls.w	d1,d0
		muls.w	d1,d2
		sub.l	d4,d0
		add.l	d0,d0
		add.l	d0,d0
		swap	d0
		add.l	d3,d2
		add.l	d2,d2
		add.l	d2,d2
		swap	d2
		swap	d1
		rts
; End of function sub_2398E


; =============== S U B R O U T I N E =======================================


GetScalars:
		add.w	d0,d0
		andi.w	#$1FE,d0
		move.w	ScalarTable(pc,d0.w),(a1)+
		addi.w	#$80,d0
		andi.w	#$1FE,d0
		move.w	ScalarTable(pc,d0.w),(a1)+
		rts
; End of function GetScalars

; ---------------------------------------------------------------------------
ScalarTable:	dc.w      0,  $192,  $324,  $4B5,  $646,  $7D6,  $964,  $AF1,  $C7C,  $E06,  $F8D, $1112, $1294, $1413, $1590, $1709
		dc.w  $187E, $19EF, $1B5D, $1CC6, $1E2B, $1F8C, $20E7, $223D, $238E, $24DA, $2620, $2760, $289A, $29CE, $2AFB, $2C21
		dc.w  $2D41, $2E5A, $2F6C, $3076, $3179, $3274, $3368, $3453, $3537, $3612, $36E5, $37B0, $3871, $392B, $39DB, $3A82
		dc.w  $3B21, $3BB6, $3C42, $3CC5, $3D3F, $3DAF, $3E15, $3E72, $3EC5, $3F0F, $3F4F, $3F85, $3FB1, $3FD4, $3FEC, $3FFB
		dc.w  $4000, $3FFB, $3FEC, $3FD4, $3FB1, $3F85, $3F4F, $3F0F, $3EC5, $3E72, $3E15, $3DAF, $3D3F, $3CC5, $3C42, $3BB6
		dc.w  $3B21, $3A82, $39DB, $392B, $3871, $37B0, $36E5, $3612, $3537, $3453, $3368, $3274, $3179, $3076, $2F6C, $2E5A
		dc.w  $2D41, $2C21, $2AFB, $29CE, $289A, $2760, $2620, $24DA, $238E, $223D, $20E7, $1F8C, $1E2B, $1CC6, $1B5D, $19EF
		dc.w  $187E, $1709, $1590, $1413, $1294, $1112,  $F8D,  $E06,  $C7C,  $AF1,  $964,  $7D6,  $646,  $4B5,  $324,  $192
		dc.w      0, $FE6E, $FCDC, $FB4B, $F9BA, $F82A, $F69C, $F50F, $F384, $F1FA, $F073, $EEEE, $ED6C, $EBED, $EA70, $E8F7
		dc.w  $E782, $E611, $E4A3, $E33A, $E1D5, $E074, $DF19, $DDC3, $DC72, $DB26, $D9E0, $D8A0, $D766, $D632, $D505, $D3DF
		dc.w  $D2BF, $D1A6, $D094, $CF8A, $CE87, $CD8C, $CC98, $CBAD, $CAC9, $C9EE, $C91B, $C850, $C78F, $C6D5, $C625, $C57E
		dc.w  $C4DF, $C44A, $C3BE, $C33B, $C2C1, $C251, $C1EB, $C18E, $C13B, $C0F1, $C0B1, $C07B, $C04F, $C02C, $C014, $C005
		dc.w  $C000, $C005, $C014, $C02C, $C04F, $C07B, $C0B1, $C0F1, $C13B, $C18E, $C1EB, $C251, $C2C1, $C33B, $C3BE, $C44A
		dc.w  $C4DF, $C57E, $C625, $C6D5, $C78F, $C850, $C91B, $C9EE, $CAC9, $CBAD, $CC98, $CD8C, $CE87, $CF8A, $D094, $D1A6
		dc.w  $D2BF, $D3DF, $D505, $D632, $D766, $D8A0, $D9E0, $DB26, $DC72, $DDC3, $DF19, $E074, $E1D5, $E33A, $E4A3, $E611
		dc.w  $E782, $E8F7, $EA70, $EBED, $ED6C, $EEEE, $F073, $F1FA, $F384, $F50F, $F69C, $F82A, $F9BA, $FB4B, $FCDC, $FE6E
Map_SphereTest:
		include "General/Special Stage/Map - Eosian Spheres.asm"
; ---------------------------------------------------------------------------

Obj_0E:
		lea	(Player_1).w,a1
		bsr.s	sub_23CA2
		lea	(Player_2).w,a1
		bsr.s	sub_23CA2
		move.w	$10(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_23C90
		rts
; ---------------------------------------------------------------------------

loc_23C90:
		move.w	$48(a0),d0
		beq.s	loc_23C9C
		movea.w	d0,a2
		bclr	#7,(a2)

loc_23C9C:
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_23CA2:
		btst	#1,$2A(a1)
		bne.w	locret_23D28
		move.w	$10(a1),d0
		addi.w	#$10,d0
		sub.w	$10(a0),d0
		bcs.s	locret_23D28
		cmpi.w	#$20,d0
		bge.s	locret_23D28
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		cmpi.w	#-$14,d0
		blt.s	locret_23D28
		cmpi.w	#$20,d0
		bgt.s	locret_23D28
		cmpi.w	#$400,$18(a1)
		blt.s	locret_23D28
		tst.b	$2E(a1)
		bne.s	locret_23D28
		move.w	#-$700,$1A(a1)
		addi.w	#$400,$18(a1)
		bset	#1,$2A(a1)
		move.b	#2,5(a1)
		move.w	#1,$1C(a1)
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#0,$30(a1)
		move.b	#4,$31(a1)
		btst	#0,$2A(a1)
		beq.s	locret_23D28
		neg.b	$27(a1)
		neg.w	$1C(a1)

locret_23D28:
		rts
; End of function sub_23CA2

; ---------------------------------------------------------------------------
byte_23D2A:	dc.b $20
		dc.b 8
		dc.b 0
		dc.b 0
		dc.b $20
		dc.b 8
		dc.b 1
		dc.b 0
; ---------------------------------------------------------------------------

Obj_LBZMovingPlatform:
		move.l	#Map_LBZMovingPlatform,$C(a0)
		move.w	#$43C3,$A(a0)
		move.b	#4,4(a0)
		move.w	#$180,8(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		bpl.s	loc_23D64
		andi.w	#$7F,d0
		lsl.w	#4,d0
		move.w	d0,$38(a0)
		moveq	#$17,d0
		move.b	d0,$2C(a0)

loc_23D64:
		lsr.w	#2,d0
		andi.w	#$1C,d0
		lea	byte_23D2A(pc,d0.w),a2
		move.b	(a2)+,7(a0)
		move.b	(a2)+,6(a0)
		move.b	(a2)+,$22(a0)
		move.w	$10(a0),$30(a0)
		move.w	$10(a0),$32(a0)
		move.w	$14(a0),$34(a0)
		move.b	$2A(a0),$2E(a0)
		move.w	#$280,$42(a0)
		move.w	$10(a0),$44(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		subq.w	#8,d0
		bcs.s	loc_23DD4
		cmpi.w	#4,d0
		bcc.s	loc_23DC8
		lsl.w	#2,d0
		lea	(Oscillating_table+$2C).w,a2
		lea	(a2,d0.w),a2
		tst.w	(a2)
		bpl.s	loc_23DD4
		bchg	#0,$2E(a0)
		bra.s	loc_23DD4
; ---------------------------------------------------------------------------

loc_23DC8:
		move.w	#$380,$42(a0)
		addi.w	#$100,$44(a0)

loc_23DD4:
		move.b	$2C(a0),d0
		andi.b	#$F,d0
		add.b	d0,d0
		move.b	d0,$2C(a0)
		move.l	#loc_23DE8,(a0)

loc_23DE8:
		move.w	$10(a0),-(sp)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	LBZMovingPlatformIndex(pc,d0.w),d1
		jsr	LBZMovingPlatformIndex(pc,d1.w)
		move.w	(sp)+,d4
		tst.b	4(a0)
		bpl.s	loc_23E12
		moveq	#0,d1
		move.b	7(a0),d1
		move.w	#9,d3
		jsr	(SolidObjectTop).l

loc_23E12:
		move.w	$44(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmp.w	$42(a0),d0
		bhi.w	loc_23E2C
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_23E2C:
		tst.b	$3D(a0)
		beq.s	loc_23E3C
		movea.w	$3E(a0),a1
		jsr	(Delete_Referenced_Sprite).l

loc_23E3C:
		move.w	$48(a0),d0
		beq.s	loc_23E48
		movea.w	d0,a2
		bclr	#7,(a2)

loc_23E48:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
LBZMovingPlatformIndex:dc.w Platform_Stationary-LBZMovingPlatformIndex
		dc.w Platform_Horizontal64-LBZMovingPlatformIndex
		dc.w Platform_Horizontal128-LBZMovingPlatformIndex
		dc.w Platform_Vertical64-LBZMovingPlatformIndex
		dc.w Platform_Vertical128-LBZMovingPlatformIndex
		dc.w Platform_DiagonalUp-LBZMovingPlatformIndex
		dc.w Platform_DiagonalDown-LBZMovingPlatformIndex
		dc.w Platform_DiagonalLift-LBZMovingPlatformIndex
		dc.w Platform_Square32-LBZMovingPlatformIndex
		dc.w Platform_Square96-LBZMovingPlatformIndex
		dc.w Platform_Square160-LBZMovingPlatformIndex
		dc.w Platform_Square224-LBZMovingPlatformIndex
		dc.w Platform_Horizontal256-LBZMovingPlatformIndex
		dc.w Platform_FallingDelayed-LBZMovingPlatformIndex
		dc.w Platform_Falling-LBZMovingPlatformIndex
FloatingPlatformIndex:dc.w Platform_Stationary-FloatingPlatformIndex
		dc.w Platform_Horizontal64-FloatingPlatformIndex
		dc.w Platform_Horizontal128-FloatingPlatformIndex
		dc.w Platform_Vertical64-FloatingPlatformIndex
		dc.w Platform_Vertical128-FloatingPlatformIndex
		dc.w Platform_DiagonalUp-FloatingPlatformIndex
		dc.w Platform_DiagonalDown-FloatingPlatformIndex
		dc.w Platform_Rising-FloatingPlatformIndex
		dc.w Platform_Square32-FloatingPlatformIndex
		dc.w Platform_Square96-FloatingPlatformIndex
		dc.w Platform_Square160-FloatingPlatformIndex
		dc.w Platform_Square224-FloatingPlatformIndex
		dc.w Platform_Horizontal256-FloatingPlatformIndex
; ---------------------------------------------------------------------------

Platform_Stationary:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_23E9C
		tst.b	$3A(a0)
		beq.s	loc_23EA8
		subq.b	#4,$3A(a0)
		bra.s	loc_23EA8
; ---------------------------------------------------------------------------

loc_23E9C:
		cmpi.b	#$40,$3A(a0)
		beq.s	loc_23EA8
		addq.b	#4,$3A(a0)

loc_23EA8:
		move.b	$3A(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#6,d0
		add.w	$34(a0),d0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

Platform_Horizontal64:
		move.w	#$40,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$0A).w,d0
		bra.s	sub_23ED4
; ---------------------------------------------------------------------------

Platform_Horizontal128:
		move.w	#$80,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$1E).w,d0

; =============== S U B R O U T I N E =======================================


sub_23ED4:
		btst	#0,$2A(a0)
		beq.s	loc_23EE0
		neg.w	d0
		add.w	d1,d0

loc_23EE0:
		move.w	$30(a0),d1
		add.w	d0,d1
		move.w	d1,$10(a0)
		rts
; End of function sub_23ED4

; ---------------------------------------------------------------------------

Platform_Vertical64:
		move.w	#$40,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$0A).w,d0
		bra.s	loc_23F02
; ---------------------------------------------------------------------------

Platform_Vertical128:
		move.w	#$80,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$1E).w,d0

loc_23F02:
		btst	#0,$2A(a0)
		beq.s	loc_23F0E
		neg.w	d0
		add.w	d1,d0

loc_23F0E:
		move.w	$34(a0),d1
		sub.w	d0,d1
		move.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

Platform_DiagonalUp:
		move.w	#$80,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$1E).w,d0
		bsr.s	sub_23ED4
		move.w	#$40,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$1E).w,d0
		lsr.b	#1,d0
		bra.s	loc_23F02
; ---------------------------------------------------------------------------

Platform_DiagonalDown:
		move.w	#$80,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$1E).w,d0
		neg.w	d0
		add.w	d1,d0
		bsr.s	sub_23ED4
		move.w	#$40,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$1E).w,d0
		lsr.b	#1,d0
		bra.s	loc_23F02
; ---------------------------------------------------------------------------

Platform_DiagonalLift:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_23F72
		move.w	$38(a0),d2
		move.w	$36(a0),d1
		beq.s	locret_23FA0
		subq.w	#4,d1
		bcc.s	loc_23F6C
		moveq	#0,d1

loc_23F6C:
		move.w	d1,$36(a0)
		bra.s	loc_23F86
; ---------------------------------------------------------------------------

loc_23F72:
		move.w	$38(a0),d2
		move.w	$36(a0),d1
		addq.w	#2,d1
		cmp.w	d2,d1
		bcs.s	loc_23F82
		move.w	d2,d1

loc_23F82:
		move.w	d1,$36(a0)

loc_23F86:
		move.w	$32(a0),d0
		sub.w	d1,d0
		move.w	d0,$10(a0)
		move.w	d0,$30(a0)
		lsr.w	#1,d1
		move.w	$34(a0),d0
		sub.w	d1,d0
		move.w	d0,$14(a0)

locret_23FA0:
		rts
; ---------------------------------------------------------------------------

Platform_Horizontal256:
		move.w	#$7F,d2
		tst.b	$3C(a0)
		bne.s	loc_23FC8
		move.w	$40(a0),d1
		addq.w	#4,d1
		move.w	d1,$40(a0)
		add.w	d1,$36(a0)
		cmp.b	$36(a0),d2
		bhi.s	loc_23FE2
		move.b	#1,$3C(a0)
		bra.s	loc_23FE2
; ---------------------------------------------------------------------------

loc_23FC8:
		move.w	$40(a0),d1
		subq.w	#4,d1
		move.w	d1,$40(a0)
		add.w	d1,$36(a0)
		cmp.b	$36(a0),d2
		bls.s	loc_23FE2
		move.b	#0,$3C(a0)

loc_23FE2:
		moveq	#0,d0
		move.b	$36(a0),d0
		btst	#0,$2A(a0)
		beq.s	loc_23FF4
		neg.w	d0
		add.w	d2,d0

loc_23FF4:
		add.w	$30(a0),d0
		move.w	d0,$10(a0)
		rts
; ---------------------------------------------------------------------------

Platform_FallingDelayed:
		tst.w	$3A(a0)
		bne.s	loc_24016
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	locret_24014
		move.w	#$1E,$3A(a0)

locret_24014:
		rts
; ---------------------------------------------------------------------------

loc_24016:
		subq.w	#1,$3A(a0)
		bne.s	locret_24014
		move.w	#$20,$3A(a0)
		addq.b	#2,$2C(a0)
		rts
; ---------------------------------------------------------------------------

Platform_Falling:
		tst.w	$3A(a0)
		beq.s	loc_24056
		subq.w	#1,$3A(a0)
		bne.s	loc_24056
		bclr	#3,$2A(a0)
		beq.s	loc_24042
		lea	(Player_1).w,a1
		bsr.s	sub_2408A

loc_24042:
		bclr	#4,$2A(a0)
		beq.s	loc_24050
		lea	(Player_2).w,a1
		bsr.s	sub_2408A

loc_24050:
		move.l	#Obj_FallingPlatformIntangible,(a0)

loc_24056:
		move.l	$14(a0),d3
		move.w	$1A(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d3,$14(a0)
		addi.w	#$38,$1A(a0)
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$120,d0
		cmp.w	$14(a0),d0
		bcc.s	locret_24088
		move.w	#$7F00,$10(a0)
		move.w	#$7F00,$44(a0)

locret_24088:
		rts

; =============== S U B R O U T I N E =======================================


sub_2408A:
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		move.b	#2,5(a1)
		move.w	$1A(a0),$1A(a1)
		rts
; End of function sub_2408A

; ---------------------------------------------------------------------------

Obj_FallingPlatformIntangible:
		move.l	$14(a0),d3
		move.w	$1A(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d3,$14(a0)
		addi.w	#$38,$1A(a0)
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$120,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_240D6
		move.w	#$7F00,$10(a0)
		move.w	#$7F00,$44(a0)

loc_240D6:
		bra.w	loc_23E12
; ---------------------------------------------------------------------------

Platform_Rising:
		tst.b	$3C(a0)
		bne.s	loc_240F8
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	locret_240F6
		move.b	#1,$3C(a0)
		move.b	#$C,$1E(a0)

locret_240F6:
		rts
; ---------------------------------------------------------------------------

loc_240F8:
		jsr	(MoveSprite2).l
		moveq	#8,d1
		move.w	$34(a0),d0
		subi.w	#$80,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_24114
		neg.w	d1
		add.w	d1,$1A(a0)

loc_24114:
		jsr	(ObjCheckCeilingDist).l
		tst.w	d1
		bpl.s	loc_2412C
		sub.w	d1,$14(a0)
		clr.b	$3C(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_2412C:
		btst	#3,$2A(a0)
		beq.s	loc_2414C
		move.l	a0,-(sp)
		lea	(Player_1).w,a0
		jsr	(sub_10BA2).l
		tst.w	d1
		bpl.s	loc_2414A
		jsr	(Kill_Character).l

loc_2414A:
		movea.l	(sp)+,a0

loc_2414C:
		btst	#4,$2A(a0)
		beq.s	locret_2416C
		move.l	a0,-(sp)
		lea	(Player_2).w,a0
		jsr	(sub_10BA2).l
		tst.w	d1
		bpl.s	loc_2416A
		jsr	(Kill_Character).l

loc_2416A:
		movea.l	(sp)+,a0

locret_2416C:
		rts
; ---------------------------------------------------------------------------

Platform_Square32:
		move.w	#$10,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$2A).w,d0
		lsr.w	#1,d0
		move.w	(Oscillating_table+$2C).w,d3
		bra.s	loc_241AE
; ---------------------------------------------------------------------------

Platform_Square96:
		move.w	#$30,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$2E).w,d0
		move.w	(Oscillating_table+$30).w,d3
		bra.s	loc_241AE
; ---------------------------------------------------------------------------

Platform_Square160:
		move.w	#$50,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$32).w,d0
		move.w	(Oscillating_table+$34).w,d3
		bra.s	loc_241AE
; ---------------------------------------------------------------------------

Platform_Square224:
		move.w	#$70,d1
		moveq	#0,d0
		move.b	(Oscillating_table+$36).w,d0
		move.w	(Oscillating_table+$38).w,d3

loc_241AE:
		tst.w	d3
		bne.s	loc_241BC
		addq.b	#1,$2E(a0)
		andi.b	#3,$2E(a0)

loc_241BC:
		move.b	$2E(a0),d2
		andi.b	#3,d2
		bne.s	loc_241DC
		sub.w	d1,d0
		add.w	$30(a0),d0
		move.w	d0,$10(a0)
		neg.w	d1
		add.w	$34(a0),d1
		move.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_241DC:
		subq.b	#1,d2
		bne.s	loc_241FA
		subq.w	#1,d1
		sub.w	d1,d0
		neg.w	d0
		add.w	$34(a0),d0
		move.w	d0,$14(a0)
		addq.w	#1,d1
		add.w	$30(a0),d1
		move.w	d1,$10(a0)
		rts
; ---------------------------------------------------------------------------

loc_241FA:
		subq.b	#1,d2
		bne.s	loc_24218
		subq.w	#1,d1
		sub.w	d1,d0
		neg.w	d0
		add.w	$30(a0),d0
		move.w	d0,$10(a0)
		addq.w	#1,d1
		add.w	$34(a0),d1
		move.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_24218:
		sub.w	d1,d0
		add.w	$34(a0),d0
		move.w	d0,$14(a0)
		neg.w	d1
		add.w	$30(a0),d1
		move.w	d1,$10(a0)
		rts
; ---------------------------------------------------------------------------
Map_LBZMovingPlatform:
		include "Levels/LBZ/Misc Object Data/Map - Moving Platform.asm"
; ---------------------------------------------------------------------------

Obj_1D_1:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_242B4
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	$2A(a0),$2A(a1)
		move.l	#Map_LBZPlatformUndersideUnused,$C(a1)
		move.w	#$42EA,$A(a1)
		move.b	#4,4(a1)
		move.w	#$180,8(a1)
		move.b	#$20,7(a1)
		move.b	#$10,6(a1)
		move.w	a0,$3E(a1)
		move.l	#loc_242B8,(a1)
		move.w	a1,$3E(a0)
		move.b	#1,$3D(a0)

loc_242B4:
		bra.w	Obj_LBZMovingPlatform
; ---------------------------------------------------------------------------

loc_242B8:
		move.w	$10(a0),d4
		movea.w	$3E(a0),a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		sub.w	$10(a1),d4
		bsr.s	sub_242D8
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_242D8:
		lea	$33(a0),a2
		lea	(Player_2).w,a1
		move.w	(Ctrl_2).w,d0
		bsr.s	i
		lea	(Player_1).w,a1
		subq.w	#1,a2
		move.w	(Ctrl_1).w,d0
; End of function sub_242D8


; =============== S U B R O U T I N E =======================================


i:
		tst.b	(a2)
		beq.w	loc_2436C
		tst.b	4(a1)
		bpl.s	loc_2434C
		cmpi.b	#4,5(a1)
		bcc.s	loc_2434C
		andi.b	#$70,d0
		beq.w	loc_2435A
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$12,2(a2)
		andi.w	#$F00,d0
		beq.w	loc_24326
		move.b	#$3C,2(a2)

loc_24326:
		btst	#$A,d0
		beq.s	loc_24332
		move.w	#-$200,$18(a1)

loc_24332:
		btst	#$B,d0
		beq.s	loc_2433E
		move.w	#$200,$18(a1)

loc_2433E:
		move.w	#-$380,$1A(a1)
		bset	#1,$2A(a1)
		rts
; ---------------------------------------------------------------------------

loc_2434C:
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$3C,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_2435A:
		sub.w	d4,$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$24,$14(a1)
		rts
; ---------------------------------------------------------------------------

loc_2436C:
		tst.b	2(a2)
		beq.s	loc_2437A
		subq.b	#1,2(a2)
		bne.w	locret_243DE

loc_2437A:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$1C,d0
		cmpi.w	#$38,d0
		bcc.w	locret_243DE
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		subi.w	#$18,d1
		cmpi.w	#$18,d1
		bcc.w	locret_243DE
		tst.b	$2E(a1)
		bne.s	locret_243DE
		cmpi.b	#4,5(a1)
		bcc.s	locret_243DE
		tst.w	(Debug_placement_mode).w
		bne.s	locret_243DE
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$24,$14(a1)
		move.b	#$14,$20(a1)
		move.b	#1,$2E(a1)
		move.b	#1,(a2)

locret_243DE:
		rts
; End of function i

; ---------------------------------------------------------------------------
Map_LBZPlatformUndersideUnused:
		include "Levels/LBZ/Misc Object Data/Map - Floating Platform Underside (Unused).asm"
byte_243F0:	dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
		dc.b $18
		dc.b $C
		dc.b 0
		dc.b 0
		dc.b $20
		dc.b $14
		dc.b 0
		dc.b 0
; ---------------------------------------------------------------------------

Obj_FloatingPlatform:
		cmpi.w	#0,(Current_zone_and_act).w
		bne.s	loc_24412
		move.l	#Map_AIZFloatingPlatform,$C(a0)
		move.w	#$43F7,$A(a0)

loc_24412:
		cmpi.w	#1,(Current_zone_and_act).w
		bne.s	loc_24428
		move.l	#Map_AIZFloatingPlatform,$C(a0)
		move.w	#$4440,$A(a0)

loc_24428:
		cmpi.b	#1,(Current_zone).w
		bne.s	loc_2443E
		move.l	#Map_HCZFloatingPlatform,$C(a0)
		move.w	#$441D,$A(a0)

loc_2443E:
		cmpi.b	#2,(Current_zone).w
		bne.s	loc_24454
		move.l	#Map_MGZFloatingPlatform,$C(a0)
		move.w	#$4001,$A(a0)

loc_24454:
		move.b	#4,4(a0)
		move.w	#$180,8(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#2,d0
		andi.w	#$1C,d0
		lea	byte_243F0(pc,d0.w),a2
		move.b	(a2)+,7(a0)
		move.b	(a2)+,6(a0)
		move.b	(a2)+,$22(a0)
		move.w	$10(a0),$30(a0)
		move.w	$10(a0),$32(a0)
		move.w	$14(a0),$34(a0)
		move.b	$2A(a0),$2E(a0)
		move.w	#$280,$42(a0)
		move.w	$10(a0),$44(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		subq.w	#8,d0
		bcs.s	loc_244D6
		cmpi.w	#4,d0
		bcc.s	loc_244CA
		lsl.w	#2,d0
		lea	(Oscillating_table+$2C).w,a2
		lea	(a2,d0.w),a2
		tst.w	(a2)
		bpl.s	loc_244D6
		bchg	#0,$2E(a0)
		bra.s	loc_244D6
; ---------------------------------------------------------------------------

loc_244CA:
		move.w	#$380,$42(a0)
		addi.w	#$100,$44(a0)

loc_244D6:
		move.b	$2C(a0),d0
		andi.b	#$F,d0
		add.b	d0,d0
		move.b	d0,$2C(a0)
		move.l	#loc_244EA,(a0)

loc_244EA:
		move.w	$10(a0),-(sp)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lea	(FloatingPlatformIndex).l,a1
		move.w	(a1,d0.w),d1
		jsr	(a1,d1.w)
		move.w	(sp)+,d4
		tst.b	4(a0)
		bpl.s	loc_2451E
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#0,d3
		move.b	6(a0),d3
		addq.w	#1,d3
		jsr	(SolidObjectTop).l

loc_2451E:
		move.w	$44(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmp.w	$42(a0),d0
		bhi.w	loc_24538
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_24538:
		move.w	$48(a0),d0
		beq.s	loc_24544
		movea.w	d0,a2
		bclr	#7,(a2)

loc_24544:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
Map_MGZFloatingPlatform:
		include "Levels/MGZ/Misc Object Data/Map - Floating Platform.asm"
Map_HCZFloatingPlatform:
		include "Levels/HCZ/Misc Object Data/Map - Floating Platform.asm"
Map_AIZFloatingPlatform:
		include "Levels/AIZ/Misc Object Data/Map - Floating Platform.asm"
; ---------------------------------------------------------------------------

Obj_HCZSnakeBlocks:
		move.l	#Map_HCZFloatingPlatform,$C(a0)
		move.w	#$28,$A(a0)
		move.b	#4,4(a0)
		move.w	#$180,8(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.b	#1,$22(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$34(a0)
		move.b	$2A(a0),$2E(a0)
		moveq	#1,d0
		move.b	$2C(a0),d1
		bpl.s	loc_245FC
		neg.w	d0

loc_245FC:
		move.b	d0,$40(a0)
		andi.b	#$7F,d1
		move.b	d1,$26(a0)
		move.w	#$280,$42(a0)
		move.w	$10(a0),$44(a0)
		move.l	#loc_2461A,(a0)

loc_2461A:
		bsr.s	sub_24666
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		move.w	$44(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmp.w	$42(a0),d0
		bhi.w	loc_24654
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_24654:
		move.w	$48(a0),d0
		beq.s	loc_24660
		movea.w	d0,a2
		bclr	#7,(a2)

loc_24660:
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_24666:
		move.b	$40(a0),d0
		bpl.s	loc_24690
		add.b	d0,$26(a0)
		bcs.s	loc_2467C
		subq.b	#1,$2E(a0)
		andi.b	#3,$2E(a0)

loc_2467C:
		move.w	#$40,d2
		move.b	$26(a0),d0
		cmpi.b	#$80,d0
		bcc.s	loc_246B2
		move.b	#$80,d0
		bra.s	loc_246B2
; ---------------------------------------------------------------------------

loc_24690:
		add.b	d0,$26(a0)
		bne.s	loc_246A0
		addq.b	#1,$2E(a0)
		andi.b	#3,$2E(a0)

loc_246A0:
		move.w	#$40,d2
		move.b	$26(a0),d0
		cmpi.b	#$80,d0
		bcc.s	loc_246B2
		move.b	#$80,d0

loc_246B2:
		jsr	(GetSineCosine).l
		asr.w	#2,d1
		move.b	$2E(a0),d3
		andi.b	#3,d3
		bne.s	loc_246D8
		add.w	$30(a0),d1
		move.w	d1,$10(a0)
		neg.w	d2
		add.w	$34(a0),d2
		move.w	d2,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_246D8:
		subq.b	#1,d3
		bne.s	loc_246EE
		add.w	$34(a0),d1
		move.w	d1,$14(a0)
		add.w	$30(a0),d2
		move.w	d2,$10(a0)
		rts
; ---------------------------------------------------------------------------

loc_246EE:
		subq.b	#1,d3
		bne.s	loc_24706
		neg.w	d1
		add.w	$30(a0),d1
		move.w	d1,$10(a0)
		add.w	$34(a0),d2
		move.w	d2,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_24706:
		neg.w	d1
		add.w	$34(a0),d1
		move.w	d1,$14(a0)
		neg.w	d2
		add.w	$30(a0),d2
		move.w	d2,$10(a0)
		rts
; End of function sub_24666

; ---------------------------------------------------------------------------
byte_2471C:	dc.b $10
		dc.b $18
		dc.b $20
		dc.b $38
		dc.b $40
		dc.b $68
; ---------------------------------------------------------------------------

Obj_12_1:
		move.l	#Map_LBZUnusedElevator,$C(a0)
		move.w	#$43C3,$A(a0)
		move.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	#$30,7(a0)
		move.b	#8,6(a0)
		move.w	$14(a0),$32(a0)
		move.w	#$8000,$16(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#4,d0
		andi.w	#$F,d0
		move.b	byte_2471C(pc,d0.w),d0
		lsl.w	#3,d0
		move.w	d0,$38(a0)
		sub.w	d0,$14(a0)
		btst	#0,$2A(a0)
		beq.s	loc_24782
		add.w	d0,d0
		add.w	d0,$14(a0)
		move.b	#1,$34(a0)

loc_24782:
		move.l	#loc_24788,(a0)

loc_24788:
		move.w	$36(a0),d0
		move.w	off_247BE(pc,d0.w),d1
		jsr	off_247BE(pc,d1.w)
		tst.b	4(a0)
		bpl.s	loc_247B8
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l

loc_247B8:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
off_247BE:	dc.w loc_247C6-off_247BE
		dc.w loc_247E4-off_247BE
		dc.w loc_24810-off_247BE
		dc.w loc_2482E-off_247BE
; ---------------------------------------------------------------------------

loc_247C6:
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d0.w)
		beq.s	locret_247E2
		move.w	#$8000,$16(a0)
		addq.w	#2,$36(a0)

locret_247E2:
		rts
; ---------------------------------------------------------------------------

loc_247E4:
		bsr.w	sub_2485A
		tst.w	$1A(a0)
		bne.s	locret_2480E
		addq.w	#2,$36(a0)
		move.w	d0,$14(a0)
		move.w	$38(a0),d0
		sub.w	d0,$14(a0)
		btst	#0,$2A(a0)
		bne.s	locret_2480E
		add.w	d0,d0
		add.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

locret_2480E:
		rts
; ---------------------------------------------------------------------------

loc_24810:
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d0.w)
		bne.s	locret_2482C
		move.w	#$8000,$16(a0)
		addq.w	#2,$36(a0)

locret_2482C:
		rts
; ---------------------------------------------------------------------------

loc_2482E:
		bsr.w	sub_2485A
		tst.w	$1A(a0)
		bne.s	locret_24858
		clr.w	$36(a0)
		move.w	d0,$14(a0)
		move.w	$38(a0),d0
		sub.w	d0,$14(a0)
		btst	#0,$2A(a0)
		beq.s	locret_24858
		add.w	d0,d0
		add.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

locret_24858:
		rts

; =============== S U B R O U T I N E =======================================


sub_2485A:
		move.w	$14(a0),d2
		moveq	#8,d1
		tst.b	$34(a0)
		bne.s	loc_248A8
		add.w	d1,$1A(a0)
		move.w	$1A(a0),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$14(a0)
		move.w	$32(a0),d0
		cmp.w	$14(a0),d0
		bhi.s	locret_248E8
		beq.s	loc_24898
		sub.w	d0,d2
		neg.w	d2
		add.w	d0,d2
		move.w	d2,$14(a0)
		neg.w	$16(a0)
		move.b	#1,$34(a0)
		bra.s	locret_248E8
; ---------------------------------------------------------------------------

loc_24898:
		neg.w	$16(a0)
		add.w	d1,$1A(a0)
		move.b	#1,$34(a0)
		bra.s	locret_248E8
; ---------------------------------------------------------------------------

loc_248A8:
		sub.w	d1,$1A(a0)
		move.w	$1A(a0),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$14(a0)
		move.w	$32(a0),d0
		cmp.w	$14(a0),d0
		bcs.s	locret_248E8
		beq.s	loc_248DA
		sub.w	d0,d2
		neg.w	d2
		add.w	d0,d2
		move.w	d2,$14(a0)
		neg.w	$16(a0)
		move.b	#0,$34(a0)
		bra.s	locret_248E8
; ---------------------------------------------------------------------------

loc_248DA:
		neg.w	$16(a0)
		sub.w	d1,$1A(a0)
		move.b	#0,$34(a0)

locret_248E8:
		rts
; End of function sub_2485A

; ---------------------------------------------------------------------------
Map_LBZUnusedElevator:
		include "Levels/LBZ/Misc Object Data/Map - Unused Elevator.asm"
; ---------------------------------------------------------------------------

Obj_LBZExplodingTrigger:
		move.l	#Map_LBZExplodingTrigger,$C(a0)
		move.w	#$4433,$A(a0)
		ori.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$280,8(a0)
		move.b	#-$3A,$28(a0)
		move.l	#loc_24944,(a0)

loc_24944:
		move.b	$29(a0),d0
		beq.w	loc_2497A
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		lea	(a3,d0.w),a3
		moveq	#0,d3
		lea	(Player_1).w,a1
		bclr	#0,$29(a0)
		beq.s	loc_2496C
		bsr.s	sub_24980

loc_2496C:
		lea	(Player_2).w,a1
		bclr	#1,$29(a0)
		beq.s	loc_2497A
		bsr.s	sub_24980

loc_2497A:
		jmp	(loc_19CC4).l

; =============== S U B R O U T I N E =======================================


sub_24980:
		cmpi.b	#2,$20(a1)
		bne.s	locret_249A6
		neg.w	$18(a1)
		neg.w	$1A(a1)
		bchg	d3,(a3)
		move.l	#Obj_Explosion,(a0)
		move.b	#2,5(a0)
		clr.b	$28(a0)
		clr.b	$29(a0)

locret_249A6:
		rts
; End of function sub_24980

; ---------------------------------------------------------------------------
Map_LBZExplodingTrigger:
		include "Levels/LBZ/Misc Object Data/Map - Exploding Trigger.asm"
; ---------------------------------------------------------------------------

Obj_MGZDashTrigger:
		move.l	#Map_MGZDashTrigger,$C(a0)
		move.w	#$235F,$A(a0)
		ori.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$280,8(a0)
		bset	#6,4(a0)
		move.w	#1,$16(a0)
		lea	$18(a0),a2
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		move.w	#0,(a2)+
		move.l	#loc_249FA,(a0)

loc_249FA:
		move.w	#$1B,d1
		move.w	#$10,d2
		move.w	$10(a0),d4
		lea	(byte_24B6C).l,a2
		jsr	(sub_1BAC4).l
		swap	d6
		andi.w	#$33,d6
		beq.s	loc_24A80
		move.b	d6,d0
		andi.b	#$11,d0
		beq.s	loc_24A4E
		lea	(Player_1).w,a1
		cmpi.b	#9,$20(a1)
		bne.s	loc_24A4E
		move.w	#$3C,$30(a0)
		move.b	#1,$32(a0)
		move.b	$2A(a1),d0
		add.b	$2A(a0),d0
		andi.b	#1,d0
		bne.s	loc_24A4E
		move.b	#-1,$32(a0)

loc_24A4E:
		andi.b	#$22,d6
		beq.s	loc_24A80
		lea	(Player_2).w,a1
		cmpi.b	#9,$20(a1)
		bne.s	loc_24A80
		move.w	#$3C,$30(a0)
		move.b	#1,$32(a0)
		move.b	$2A(a1),d0
		add.b	$2A(a0),d0
		andi.b	#1,d0
		bne.s	loc_24A80
		move.b	#-1,$32(a0)

loc_24A80:
		tst.w	$30(a0)
		beq.s	loc_24AFE
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		lea	(a3,d0.w),a3
		subq.w	#1,$30(a0)
		bne.s	loc_24AA8
		move.b	#0,(a3)
		move.b	#0,$22(a0)
		bra.s	loc_24AFE
; ---------------------------------------------------------------------------

loc_24AA8:
		move.b	#1,(a3)
		move.b	$2A(a0),d6
		andi.w	#$18,d6
		beq.s	loc_24AD0
		move.w	d6,d0
		andi.w	#8,d0
		beq.s	loc_24AC4
		lea	(Player_1).w,a1
		bsr.s	sub_24B04

loc_24AC4:
		andi.w	#$10,d6
		beq.s	loc_24AD0
		lea	(Player_2).w,a1
		bsr.s	sub_24B04

loc_24AD0:
		subq.b	#1,$24(a0)
		bpl.s	loc_24AEA
		move.b	#1,$24(a0)
		move.b	$32(a0),d0
		add.b	d0,$1D(a0)
		andi.b	#3,$1D(a0)

loc_24AEA:
		tst.b	$22(a0)
		beq.s	loc_24AF8
		move.b	#0,$22(a0)
		bra.s	loc_24AFE
; ---------------------------------------------------------------------------

loc_24AF8:
		move.b	#4,$22(a0)

loc_24AFE:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_24B04:
		move.w	$10(a0),d1
		subi.w	#$10,d1
		btst	#0,$2A(a0)
		beq.s	loc_24B18
		addi.w	#$20,d1

loc_24B18:
		move.w	$14(a0),d2
		addi.w	#$10,d2
		sub.w	$10(a1),d1
		sub.w	$14(a1),d2
		jsr	(GetArcTan).l
		jsr	(GetSineCosine).l
		muls.w	#-$700,d1
		asr.l	#8,d1
		move.w	d1,$18(a1)
		muls.w	#-$700,d0
		asr.l	#8,d0
		move.w	d0,$1A(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		bclr	#5,$2A(a1)
		clr.b	$40(a1)
		clr.b	$3D(a1)
		moveq	#signextendB(sfx_SmallBumpers),d0
		jsr	(Play_Sound_2).l
		rts
; End of function sub_24B04

; ---------------------------------------------------------------------------
byte_24B6C:	dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $10
		dc.b $F
		dc.b $F
		dc.b $E
		dc.b $E
		dc.b $D
		dc.b $C
		dc.b $A
		dc.b 8
		dc.b 6
		dc.b 4
		dc.b 0
		dc.b $FC
		dc.b $F8
		dc.b $F6
		dc.b $F6
		dc.b $F6
		dc.b $F6
		dc.b $F6
		dc.b $F6
Map_MGZDashTrigger:
		include "Levels/MGZ/Misc Object Data/Map - Dash Trigger.asm"
byte_24BE4:	dc.b  $48,   0,   8, $40,   0,   0,  $A,   8
		dc.b    0, $48, $40,   8,   0,   8,  $A, $10
		dc.b  $B8,   0,   8, $40,   0,   0,  $A,   8
		dc.b    0, $48, $40,   8,   0, $10,  $A, $18
		dc.b    0, $48, $40,   8,   6,   8,   4, $10
		dc.b  $48,   0,   8, $40,   6,   0,   4,   8
		dc.b    0, $48, $40,   8,   6, $10,   4, $18
		dc.b  $B8,   0,   8, $40,   6,   0,   4,   8
; ---------------------------------------------------------------------------

Obj_LBZTriggerBridge:
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.w	#$F,d1
		tst.b	$34(a0)
		bne.s	loc_24C40
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d0.w)
		beq.s	loc_24C40
		addq.w	#4,d0

loc_24C40:
		lsr.b	#1,d0
		andi.w	#$38,d0
		lea	byte_24BE4(pc,d0.w),a1
		move.l	#Map_LBZTriggerBridge,$C(a0)
		move.w	#$43C3,$A(a0)
		move.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		move.b	(a1)+,d0
		ext.w	d0
		add.w	$30(a0),d0
		move.w	d0,$10(a0)
		move.b	(a1)+,d0
		ext.w	d0
		add.w	$32(a0),d0
		move.w	d0,$14(a0)
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		moveq	#0,d0
		move.b	(a1)+,d0
		move.w	d0,$36(a0)
		move.b	(a1)+,$22(a0)
		tst.b	$34(a0)
		beq.s	loc_24CB2
		move.b	(a1)+,d0
		move.w	d0,$36(a0)
		move.b	(a1)+,$22(a0)
		move.b	#0,$34(a0)

loc_24CB2:
		move.l	#loc_24CB8,(a0)

loc_24CB8:
		move.w	$36(a0),d0
		move.w	off_24CF2(pc,d0.w),d1
		jsr	off_24CF2(pc,d1.w)
		tst.b	4(a0)
		bpl.s	loc_24CE8
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull2).l

loc_24CE8:
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------
off_24CF2:	dc.w loc_24CFE-off_24CF2
		dc.w loc_24D58-off_24CF2
		dc.w loc_24D6A-off_24CF2
		dc.w loc_24D8C-off_24CF2
		dc.w loc_24D58-off_24CF2
		dc.w loc_24D7A-off_24CF2
; ---------------------------------------------------------------------------

loc_24CFE:
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d0.w)
		beq.s	locret_24D56
		addq.b	#1,$22(a0)
		move.w	#7,$38(a0)
		addq.w	#2,$36(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	locret_24D56
		move.l	#Obj_LBZTriggerBridge,(a1)
		move.w	$30(a0),$10(a1)
		move.w	$32(a0),$14(a1)
		move.b	$2C(a0),d0
		addi.b	#$40,d0
		andi.b	#$7F,d0
		move.b	d0,$2C(a1)
		move.w	#8,$38(a1)
		move.b	#1,$34(a1)

locret_24D56:
		rts
; ---------------------------------------------------------------------------

loc_24D58:
		addq.b	#1,$22(a0)
		subq.w	#1,$38(a0)
		bne.s	locret_24D68
		move.w	#$7FFF,$10(a0)

locret_24D68:
		rts
; ---------------------------------------------------------------------------

loc_24D6A:
		subq.b	#1,$22(a0)
		subq.w	#1,$38(a0)
		bne.s	locret_24D78
		addq.w	#2,$36(a0)

locret_24D78:
		rts
; ---------------------------------------------------------------------------

loc_24D7A:
		subq.b	#1,$22(a0)
		subq.w	#1,$38(a0)
		bne.s	locret_24D8A
		move.w	#0,$36(a0)

locret_24D8A:
		rts
; ---------------------------------------------------------------------------

loc_24D8C:
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d0.w)
		bne.s	locret_24DE4
		addq.b	#1,$22(a0)
		move.w	#7,$38(a0)
		addq.w	#2,$36(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	locret_24DE4
		move.l	#Obj_LBZTriggerBridge,(a1)
		move.w	$30(a0),$10(a1)
		move.w	$32(a0),$14(a1)
		move.b	$2C(a0),d0
		addi.b	#$40,d0
		andi.b	#$7F,d0
		move.b	d0,$2C(a1)
		move.w	#8,$38(a1)
		move.b	#1,$34(a1)

locret_24DE4:
		rts
; ---------------------------------------------------------------------------
Map_LBZTriggerBridge:
		include "Levels/LBZ/Misc Object Data/Map - Trigger Bridge.asm"
byte_250CE:	dc.b $10
		dc.b 0
		dc.b $A
		dc.b 0
; ---------------------------------------------------------------------------

Obj_LBZPlayerLauncher:
		move.l	#Map_LBZPlayerLauncher,$C(a0)
		move.w	#$43C3,$A(a0)
		ori.b	#4,4(a0)
		move.b	#$20,7(a0)
		move.w	#$80,8(a0)
		move.b	$2C(a0),d0
		andi.w	#2,d0
		move.w	byte_250CE(pc,d0.w),$34(a0)
		move.l	#loc_25106,(a0)

loc_25106:
		move.w	$10(a0),d0
		move.w	d0,d1
		subi.w	#$10,d0
		addi.w	#$10,d1
		move.w	$14(a0),d2
		move.w	d2,d3
		subi.w	#$10,d2
		addi.w	#$10,d3
		lea	(Player_1).w,a1
		btst	#1,$2A(a1)
		bne.s	loc_2515A
		move.w	$10(a1),d4
		cmp.w	d0,d4
		bcs.w	loc_2515A
		cmp.w	d1,d4
		bcc.w	loc_2515A
		move.w	$14(a1),d4
		cmp.w	d2,d4
		bcs.w	loc_2515A
		cmp.w	d3,d4
		bcc.w	loc_2515A
		move.w	d0,-(sp)
		lea	$38(a0),a2
		bsr.w	sub_25194
		move.w	(sp)+,d0

loc_2515A:
		lea	(Player_2).w,a1
		btst	#1,$2A(a1)
		bne.s	loc_2518E
		move.w	$10(a1),d4
		cmp.w	d0,d4
		bcs.w	loc_2518E
		cmp.w	d1,d4
		bcc.w	loc_2518E
		move.w	$14(a1),d4
		cmp.w	d2,d4
		bcs.w	loc_2518E
		cmp.w	d3,d4
		bcc.w	loc_2518E
		lea	$3A(a0),a2
		bsr.w	sub_25194

loc_2518E:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_25194:
		tst.w	(a2)
		bne.s	loc_251C2
		move.l	a1,-(sp)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_251C0
		move.l	#Obj_2523E,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	4(a0),4(a1)
		move.w	a2,$3C(a1)

loc_251C0:
		movea.l	(sp)+,a1

loc_251C2:
		addq.w	#1,(a2)
		cmpi.w	#4,(a2)
		beq.s	loc_251E6
		move.w	$18(a1),d0
		btst	#0,4(a0)
		beq.s	loc_251D8
		neg.w	d0

loc_251D8:
		tst.w	d0
		bpl.s	locret_251E4
		asr	$1C(a1)
		asr	$18(a1)

locret_251E4:
		rts
; ---------------------------------------------------------------------------

loc_251E6:
		move.w	$18(a1),d0
		btst	#0,$2A(a0)
		beq.s	loc_251F4
		neg.w	d0

loc_251F4:
		cmpi.w	#$1000,d0
		bge.s	loc_25236
		move.w	$34(a0),$18(a1)
		bclr	#0,$2A(a1)
		btst	#0,$2A(a0)
		beq.s	loc_25218
		bset	#0,$2A(a1)
		neg.w	$18(a1)

loc_25218:
		move.w	#$F,$32(a1)
		move.w	$18(a1),$1C(a1)
		bclr	#5,$2A(a0)
		bclr	#6,$2A(a0)
		bclr	#5,$2A(a1)

loc_25236:
		moveq	#signextendB(sfx_Spring),d0
		jmp	(Play_Sound_2).l
; End of function sub_25194

; ---------------------------------------------------------------------------

Obj_2523E:
		move.l	#Map_LBZPlayerLauncher,$C(a0)
		move.w	#$43C3,$A(a0)
		ori.b	#4,4(a0)
		move.b	#8,7(a0)
		move.w	#$80,8(a0)
		move.w	$10(a0),$30(a0)
		addi.w	#$10,$14(a0)
		move.w	$14(a0),$32(a0)
		move.b	#1,$22(a0)
		move.b	#-$80,$40(a0)
		bset	#6,4(a0)
		move.w	#4,$16(a0)
		move.l	#loc_2528E,(a0)

loc_2528E:
		move.w	$36(a0),d0
		move.w	off_252A4(pc,d0.w),d1
		jsr	off_252A4(pc,d1.w)
		bsr.w	sub_252DA
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
off_252A4:	dc.w loc_252A8-off_252A4
		dc.w loc_252C4-off_252A4
; ---------------------------------------------------------------------------

loc_252A8:
		addi.b	#$10,$40(a0)
		cmpi.b	#-$30,$40(a0)
		bne.s	locret_252C2
		movea.w	$3C(a0),a2
		move.w	#0,(a2)
		addq.w	#2,$36(a0)

locret_252C2:
		rts
; ---------------------------------------------------------------------------

loc_252C4:
		subi.b	#4,$40(a0)
		cmpi.b	#-$80,$40(a0)
		bne.s	locret_252D8
		move.w	#$7F00,$30(a0)

locret_252D8:
		rts

; =============== S U B R O U T I N E =======================================


sub_252DA:
		move.b	$40(a0),d0
		btst	#0,4(a0)
		beq.s	loc_252EC
		neg.b	d0
		addi.b	#-$80,d0

loc_252EC:
		jsr	(GetSineCosine).l
		move.w	$32(a0),d2
		move.w	$30(a0),d3
		moveq	#0,d6
		move.w	$16(a0),d6
		subq.w	#1,d6
		bcs.s	locret_2534A
		swap	d0
		swap	d1
		asr.l	#4,d0
		asr.l	#4,d1
		moveq	#0,d4
		moveq	#0,d5
		add.l	d0,d4
		add.l	d1,d5
		lea	$18(a0),a2

loc_25318:
		movem.l	d4-d5,-(sp)
		swap	d4
		swap	d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d5,(a2)+
		move.w	d4,(a2)+
		movem.l	(sp)+,d4-d5
		add.l	d0,d4
		add.l	d1,d5
		addq.w	#1,a2
		move.b	#1,(a2)+
		dbf	d6,loc_25318
		swap	d4
		swap	d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d5,$10(a0)
		move.w	d4,$14(a0)

locret_2534A:
		rts
; End of function sub_252DA

; ---------------------------------------------------------------------------
Map_LBZPlayerLauncher:
		include "Levels/LBZ/Misc Object Data/Map - Player Launcher.asm"

; =============== S U B R O U T I N E =======================================


sub_2536C:
		move.l	#Map_LBZFlameThrower,$C(a1)
		move.w	#$43AC,$A(a1)
		move.b	#$10,7(a1)
		move.b	#$10,6(a1)
		ori.b	#4,4(a1)
		move.w	#$200,8(a1)
		rts
; End of function sub_2536C

; ---------------------------------------------------------------------------

Obj_LBZFlameThrower:
		movea.l	a0,a1
		bsr.s	sub_2536C
		move.l	#loc_2539E,(a0)

loc_2539E:
		move.b	(V_int_run_count+3).w,d0
		add.b	$2C(a0),d0
		andi.b	#$7F,d0
		bne.s	loc_253FE
		jsr	(Create_New_Sprite3).l
		bne.w	loc_253FE
		move.l	#loc_25422,(a1)
		bsr.s	sub_2536C
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	$2A(a0),$2A(a1)
		move.b	#-$63,$28(a1)
		bset	#4,$2B(a1)
		addi.w	#$40,$10(a1)
		btst	#0,$2A(a0)
		beq.s	loc_253F0
		subi.w	#$80,$10(a1)

loc_253F0:
		tst.b	4(a0)
		bpl.s	loc_253FE
		moveq	#signextendB(sfx_FireAttack),d0
		jsr	(Play_Sound_2).l

loc_253FE:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_25422:
		lea	(Ani_LBZFlameThrower).l,a1
		jsr	(Animate_Sprite).l
		tst.b	5(a0)
		beq.s	loc_2543A
		move.w	#$7FFF,$10(a0)

loc_2543A:
		jmp	(loc_19CC4).l
; ---------------------------------------------------------------------------
Ani_LBZFlameThrower:
		include "Levels/LBZ/Misc Object Data/Anim - Flame Thrower.asm"
Map_LBZFlameThrower:
		include "Levels/LBZ/Misc Object Data/Map - Flame Thrower.asm"
LBZRideGrapple_Range:
		dc.w   $A08,  $C78
		dc.w  $1208, $14F8
		dc.w  $1A08, $1BB8
		dc.w  $1C48, $2078
		dc.w  $2688, $2878
		dc.w  $2988, $2DF8
		dc.w  $2F88, $3178
		dc.w   $E68, $1098
		dc.w   $CE8, $1498
		dc.w   $E68, $1398
		dc.w  $20E8, $2418
		dc.w  $2B08, $2E98
		dc.w  $39E8, $3C98
; ---------------------------------------------------------------------------

Obj_LBZRideGrapple:
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.w	#$80,8(a0)
		move.b	#$20,6(a0)
		move.w	$10(a0),$38(a0)
		move.b	$2C(a0),d0
		andi.w	#$7F,d0
		lsl.w	#2,d0
		move.l	LBZRideGrapple_Range(pc,d0.w),$34(a0)
		move.l	#Map_LBZRideGrapple,$C(a0)
		move.w	#$2433,$A(a0)
		jsr	(Create_New_Sprite3).l
		bne.s	loc_2562A
		move.l	#loc_25752,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		move.b	4(a0),4(a1)
		move.w	8(a0),8(a1)
		bset	#6,4(a1)
		move.b	#$10,7(a1)
		move.b	#$20,6(a1)
		moveq	#6,d1
		move.w	d1,$16(a1)
		subq.b	#1,d1
		lea	$18(a1),a2

loc_25610:
		move.w	$10(a1),(a2)+
		move.w	$14(a1),(a2)+
		move.w	#1,(a2)+
		dbf	d1,loc_25610
		move.b	#2,$22(a1)
		move.w	a1,$3C(a0)

loc_2562A:
		move.l	#loc_25630,(a0)

loc_25630:
		bsr.w	sub_258F2
		bsr.w	sub_25758
		tst.w	$30(a0)
		beq.s	loc_2564C
		cmpi.w	#$28,$3A(a0)
		bne.s	loc_2564C
		move.l	#loc_256A0,(a0)

loc_2564C:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_25666
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_25666:
		move.w	$38(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_25680
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_25680:
		move.w	$48(a0),d0
		beq.s	loc_2568C
		movea.w	d0,a2
		bclr	#7,(a2)

loc_2568C:
		move.w	$3C(a0),d0
		beq.s	loc_2569A
		movea.w	d0,a1
		jsr	(Delete_Referenced_Sprite).l

loc_2569A:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_256A0:
		jsr	(MoveSprite2).l
		btst	#0,$2A(a0)
		beq.s	loc_256C2
		subi.w	#$20,$18(a0)
		tst.w	$18(a0)
		bmi.s	loc_256D4
		subi.w	#$60,$18(a0)
		bra.s	loc_256D4
; ---------------------------------------------------------------------------

loc_256C2:
		addi.w	#$20,$18(a0)
		tst.w	$18(a0)
		bpl.s	loc_256D4
		addi.w	#$60,$18(a0)

loc_256D4:
		move.w	$10(a0),d0
		move.w	$34(a0),d1
		cmp.w	d1,d0
		bhi.s	loc_256F2
		move.w	d1,$10(a0)
		bsr.s	sub_25718
		tst.w	$18(a0)
		bpl.s	loc_256F2
		move.w	#0,$18(a0)

loc_256F2:
		move.w	$36(a0),d1
		cmp.w	d1,d0
		bcs.s	loc_2570C
		move.w	d1,$10(a0)
		bsr.s	sub_25718
		tst.w	$18(a0)
		bmi.s	loc_2570C
		move.w	#0,$18(a0)

loc_2570C:
		bsr.w	sub_258F2
		bsr.w	sub_25758
		bra.w	loc_2564C

; =============== S U B R O U T I N E =======================================


sub_25718:
		tst.b	$2C(a0)
		bmi.s	locret_25750
		lea	$30(a0),a2
		lea	(Player_1).w,a1
		bsr.s	sub_2572E
		lea	(Player_2).w,a1
		addq.w	#1,a2
; End of function sub_25718


; =============== S U B R O U T I N E =======================================


sub_2572E:
		tst.b	(a2)
		beq.s	locret_25750
		move.w	$18(a0),$18(a1)
		move.w	#0,$1A(a1)
		bset	#1,$2A(a1)
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$3C,2(a2)

locret_25750:
		rts
; End of function sub_2572E

; ---------------------------------------------------------------------------

loc_25752:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_25758:
		movea.w	$3C(a0),a3
		lea	$31(a0),a2
		lea	(Player_2).w,a1
		move.w	(Ctrl_2).w,d0
		bsr.s	sub_25774
		lea	(Player_1).w,a1
		subq.w	#1,a2
		move.w	(Ctrl_1).w,d0
; End of function sub_25758


; =============== S U B R O U T I N E =======================================


sub_25774:
		tst.b	(a2)
		beq.w	loc_25868
		tst.b	4(a1)
		bpl.s	loc_257DC
		cmpi.b	#4,5(a1)
		bcc.s	loc_257DC
		andi.b	#$70,d0
		beq.w	loc_257EA
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$12,2(a2)
		andi.w	#$F00,d0
		beq.w	loc_257AA
		move.b	#$3C,2(a2)

loc_257AA:
		move.w	$18(a0),$18(a1)
		move.w	#-$380,$1A(a1)
		bset	#1,$2A(a1)
		move.b	#1,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		rts
; ---------------------------------------------------------------------------

loc_257DC:
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$3C,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_257EA:
		btst	#$A,d0
		beq.s	loc_257F6
		bset	#0,$2A(a1)

loc_257F6:
		btst	#$B,d0
		beq.s	loc_25802
		bclr	#0,$2A(a1)

loc_25802:
		move.b	$2A(a1),$2A(a0)
		move.b	$2A(a1),d0
		andi.b	#1,d0
		andi.b	#-2,4(a1)
		or.b	d0,4(a1)
		move.w	$10(a3),$10(a1)
		move.w	$14(a3),$14(a1)
		addi.w	#$24,$14(a1)

loc_2582C:
		moveq	#0,d0
		move.b	$26(a0),d0
		btst	#0,$2A(a1)
		beq.s	loc_2583C
		neg.b	d0

loc_2583C:
		addq.b	#8,d0
		lsr.w	#4,d0
		move.b	byte_25858(pc,d0.w),$22(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		move.l	a2,-(sp)
		jsr	(Perform_Player_DPLC).l
		movea.l	(sp)+,a2
		rts
; ---------------------------------------------------------------------------
byte_25858:	dc.b $91
		dc.b $91
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $90
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $92
		dc.b $91
		dc.b $91
; ---------------------------------------------------------------------------

loc_25868:
		tst.b	2(a2)
		beq.s	loc_25876
		subq.b	#1,2(a2)
		bne.w	locret_258F0

loc_25876:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$10,d0
		cmpi.w	#$20,d0
		bcc.w	locret_258F0
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		subi.w	#$18,d1
		cmpi.w	#$18,d1
		bcc.w	locret_258F0
		tst.b	$2E(a1)
		bne.s	locret_258F0
		cmpi.b	#4,5(a1)
		bcc.s	locret_258F0
		tst.w	(Debug_placement_mode).w
		bne.s	locret_258F0
		move.b	$2A(a1),$2A(a0)
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$24,$14(a1)
		move.b	#$14,$20(a1)
		move.b	#0,$3D(a1)
		move.b	#3,$2E(a1)
		move.b	#1,(a2)
		bra.w	loc_2582C
; ---------------------------------------------------------------------------

locret_258F0:
		rts
; End of function sub_25774


; =============== S U B R O U T I N E =======================================


sub_258F2:
		tst.w	$30(a0)
		beq.s	loc_25906
		move.w	$3A(a0),d2
		cmpi.w	#$28,d2
		beq.s	loc_2592C
		addq.w	#1,d2
		bra.s	loc_25928
; ---------------------------------------------------------------------------

loc_25906:
		move.w	$3A(a0),d2
		beq.s	loc_25910
		subq.w	#1,d2
		bne.s	loc_25928

loc_25910:
		clr.w	$26(a0)
		clr.b	$40(a0)
		clr.w	$3E(a0)
		move.w	#0,$18(a0)
		move.l	#loc_25630,(a0)

loc_25928:
		move.w	d2,$3A(a0)

loc_2592C:
		mulu.w	#$33,d2
		move.w	$18(a0),d0
		bne.s	loc_25970
		tst.b	$40(a0)
		bne.s	loc_25956
		move.w	$3E(a0),d1
		addi.w	#$40,d1
		move.w	d1,$3E(a0)
		add.w	d1,$26(a0)
		bmi.s	loc_2596E
		move.b	#1,$40(a0)
		bra.s	loc_2596E
; ---------------------------------------------------------------------------

loc_25956:
		move.w	$3E(a0),d1
		subi.w	#$40,d1
		move.w	d1,$3E(a0)
		add.w	d1,$26(a0)
		bpl.s	loc_2596E
		move.b	#0,$40(a0)

loc_2596E:
		bra.s	loc_259B0
; ---------------------------------------------------------------------------

loc_25970:
		neg.w	d0
		asl.w	#2,d0
		sub.w	$26(a0),d0
		bge.s	loc_2598A
		cmpi.w	#-$3000,$26(a0)
		ble.s	loc_2598A
		subi.w	#$180,$26(a0)
		bra.s	loc_25998
; ---------------------------------------------------------------------------

loc_2598A:
		cmpi.w	#$3000,$26(a0)
		bge.s	loc_25998
		addi.w	#$180,$26(a0)

loc_25998:
		move.b	#0,$40(a0)
		tst.w	$18(a0)
		bpl.s	loc_259AA
		move.b	#1,$40(a0)

loc_259AA:
		move.w	#0,$3E(a0)

loc_259B0:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	d2,d0
		muls.w	d2,d1
		move.l	$10(a0),d2
		move.l	$14(a0),d3
		movea.w	$3C(a0),a1
		moveq	#5,d4
		lea	$18(a1),a2

loc_259D0:
		swap	d2
		swap	d3
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		addq.w	#2,a2
		swap	d2
		swap	d3
		add.l	d0,d2
		add.l	d1,d3
		dbf	d4,loc_259D0
		move.w	$36(a1),$10(a1)
		move.w	$38(a1),$14(a1)
		rts
; End of function sub_258F2

; ---------------------------------------------------------------------------
Map_LBZRideGrapple:
		include "Levels/LBZ/Misc Object Data/Map - Ride Grapple.asm"
; ---------------------------------------------------------------------------

Obj_LBZCupElevator:
		move.l	#Map_LBZCupElevator,$C(a0)
		move.w	#$440D,$A(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$20,7(a0)
		move.b	#$10,6(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_25AFE
		move.l	#Obj_LBZCupElevatorAttach,(a1)
		move.l	#Map_LBZCupElevator,$C(a1)
		move.w	#$440D,$A(a1)
		move.b	#4,4(a1)
		move.w	#$80,8(a1)
		move.b	#$20,7(a1)
		move.b	#$10,6(a1)
		move.w	$10(a0),$10(a1)
		move.w	$10(a0),$30(a1)
		move.w	$14(a0),$14(a1)
		move.b	#1,$22(a1)
		addi.w	#$18,$10(a1)
		btst	#0,$2A(a0)
		bne.s	loc_25AA6
		subi.w	#$30,$10(a1)

loc_25AA6:
		move.w	a0,$40(a1)
		move.w	a1,$42(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_25AFE
		move.l	#Obj_LBZCupElevatorBase,(a1)
		move.l	#Map_LBZCupElevator,$C(a1)
		move.w	#$440D,$A(a1)
		move.b	#4,4(a1)
		move.w	#$100,8(a1)
		move.b	#$20,7(a1)
		move.b	#$10,6(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	#2,$22(a1)
		move.w	a0,$40(a1)
		move.w	a1,$40(a0)

loc_25AFE:
		moveq	#0,d0
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lsl.w	#5,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		move.w	d0,$38(a0)
		move.w	#0,$26(a0)
		addi.w	#$40,$10(a0)
		btst	#0,$2A(a0)
		bne.s	loc_25B34
		subi.w	#$80,$10(a0)
		move.w	#$8080,$26(a0)

loc_25B34:
		move.b	$2C(a0),d1
		andi.w	#$70,d1
		beq.s	loc_25B5A
		move.w	d0,$3A(a0)
		add.w	d0,$32(a0)
		move.w	#6,$36(a0)
		btst	#0,$2C(a0)
		beq.s	loc_25B5A
		addi.b	#-$80,$27(a0)

loc_25B5A:
		move.l	#Obj_LBZCupElevatorMain,(a0)

Obj_LBZCupElevatorMain:
		bsr.w	LBZCupElevator_Action
		move.w	$10(a0),d4
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#2,d1
		add.w	$30(a0),d1
		move.w	d1,$10(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		lea	$3C(a0),a2
		lea	(Player_1).w,a1
		moveq	#3,d6
		move.w	(Ctrl_1_logical).w,d0
		movem.l	d1-d4,-(sp)
		bsr.w	LBZCupElevator_PlayerControl
		movem.l	(sp)+,d1-d4
		lea	$3D(a0),a2
		lea	(Player_2).w,a1
		moveq	#4,d6
		move.w	(Ctrl_2_logical).w,d0
		bsr.w	LBZCupElevator_PlayerControl
		bra.w	loc_25F26

; =============== S U B R O U T I N E =======================================


LBZCupElevator_Action:
		move.w	$36(a0),d0
		move.w	off_25BCC(pc,d0.w),d1
		jmp	off_25BCC(pc,d1.w)
; End of function LBZCupElevator_Action

; ---------------------------------------------------------------------------
off_25BCC:	dc.w LBZCupElev_WaitEnter-off_25BCC
		dc.w LBZCupElev_MoveUp-off_25BCC
		dc.w LBZCupElev_WaitExit1-off_25BCC
		dc.w LBZCupElev_WaitEnter-off_25BCC
		dc.w LBZCupElev_MoveDown-off_25BCC
		dc.w LBZCupElev_WaitExit2-off_25BCC
		dc.w LBZCupElev_Spin1-off_25BCC
		dc.w LBZCupElev_Fling1-off_25BCC
		dc.w LBZCupElev_Fling2-off_25BCC
		dc.w LBZCupElev_Spin2-off_25BCC
		dc.w LBZCupElev_Fling3-off_25BCC
; ---------------------------------------------------------------------------

LBZCupElev_WaitEnter:
		tst.w	$3C(a0)
		beq.s	locret_25BF2
		move.w	#1,$34(a0)
		addq.w	#2,$36(a0)

locret_25BF2:
		rts
; ---------------------------------------------------------------------------

LBZCupElev_MoveUp:
		move.w	$3A(a0),d0
		cmp.w	$38(a0),d0
		bne.s	loc_25C26
		tst.b	$2C(a0)
		bpl.s	loc_25C14
		move.w	#$C,$36(a0)
		move.w	#$600,$2E(a0)
		bra.w	LBZCupElev_Spin1
; ---------------------------------------------------------------------------

loc_25C14:
		move.w	#$80,8(a0)
		move.w	#0,$34(a0)
		addq.w	#2,$36(a0)
		rts
; ---------------------------------------------------------------------------

loc_25C26:
		addq.w	#4,$3A(a0)
		move.w	$3A(a0),d0
		move.w	d0,d1
		mulu.w	#$155,d0
		lsr.w	#8,d0
		add.b	$27(a0),d0
		move.b	d0,$26(a0)
		move.w	$32(a0),d0
		sub.w	d1,d0
		move.w	d0,$14(a0)
		cmpi.w	#$200,8(a0)
		bne.s	loc_25C66
		tst.b	$26(a0)
		bpl.s	locret_25C64
		move.w	#$80,8(a0)
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

locret_25C64:
		rts
; ---------------------------------------------------------------------------

loc_25C66:
		tst.b	$26(a0)
		bmi.s	locret_25C7A
		move.w	#$200,8(a0)
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

locret_25C7A:
		rts
; ---------------------------------------------------------------------------

LBZCupElev_WaitExit1:
		tst.w	$3C(a0)
		bne.s	locret_25C86
		addq.w	#2,$36(a0)

locret_25C86:
		rts
; ---------------------------------------------------------------------------

LBZCupElev_MoveDown:
		tst.w	$3A(a0)
		bne.s	loc_25CB6
		tst.b	$2C(a0)
		bpl.s	loc_25CA4
		move.w	#$12,$36(a0)
		move.w	#$600,$2E(a0)
		bra.w	LBZCupElev_Spin1
; ---------------------------------------------------------------------------

loc_25CA4:
		move.w	#$80,8(a0)
		move.w	#0,$34(a0)
		addq.w	#2,$36(a0)
		rts
; ---------------------------------------------------------------------------

loc_25CB6:
		subq.w	#4,$3A(a0)
		move.w	$3A(a0),d0
		move.w	d0,d1
		mulu.w	#$155,d0
		lsr.w	#8,d0
		add.b	$27(a0),d0
		move.b	d0,$26(a0)
		move.w	$32(a0),d0
		sub.w	d1,d0
		move.w	d0,$14(a0)
		cmpi.w	#$200,8(a0)
		bne.s	loc_25CF6
		tst.b	$26(a0)
		bpl.s	locret_25CF4
		move.w	#$80,8(a0)
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

locret_25CF4:
		rts
; ---------------------------------------------------------------------------

loc_25CF6:
		tst.b	$26(a0)
		bmi.s	locret_25D0A
		move.w	#$200,8(a0)
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

locret_25D0A:
		rts
; ---------------------------------------------------------------------------

LBZCupElev_WaitExit2:
		tst.w	$3C(a0)
		bne.s	locret_25D18
		move.w	#0,$36(a0)

locret_25D18:
		rts
; ---------------------------------------------------------------------------

LBZCupElev_Spin1:
		cmpi.w	#$1000,$2E(a0)
		bne.s	loc_25D72
		btst	#0,$2A(a0)
		bne.s	loc_25D4E
		move.b	$26(a0),d0
		addi.b	#$40,d0
		cmpi.b	#$F0,d0
		bcs.s	loc_25D78
		move.b	#$C0,$26(a0)
		movea.w	$42(a0),a1
		move.w	#$7FFF,$30(a1)
		addq.w	#2,$36(a0)
		rts
; ---------------------------------------------------------------------------

loc_25D4E:
		move.b	$26(a0),d0
		addi.b	#$C0,d0
		cmpi.b	#$F0,d0
		bcs.s	loc_25D78
		move.b	#$40,$26(a0)
		movea.w	$42(a0),a1
		move.w	#$7FFF,$30(a1)
		addq.w	#4,$36(a0)
		rts
; ---------------------------------------------------------------------------

loc_25D72:
		addi.w	#$10,$2E(a0)

loc_25D78:
		move.b	$2E(a0),d0
		add.b	d0,$26(a0)
		cmpi.w	#$200,8(a0)
		bne.s	loc_25D9E
		tst.b	$26(a0)
		bpl.s	locret_25D9C
		move.w	#$80,8(a0)
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

locret_25D9C:
		rts
; ---------------------------------------------------------------------------

loc_25D9E:
		tst.b	$26(a0)
		bmi.s	locret_25DB2
		move.w	#$200,8(a0)
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

locret_25DB2:
		rts
; ---------------------------------------------------------------------------

LBZCupElev_Spin2:
		cmpi.w	#$1000,$2E(a0)
		bne.s	loc_25DE0
		move.b	$26(a0),d0
		addi.b	#$B0,d0
		cmpi.b	#$F0,d0
		bcs.s	loc_25DE6
		move.b	#$40,$26(a0)
		movea.w	$42(a0),a1
		move.w	#$7FFF,$30(a1)
		addq.w	#2,$36(a0)
		rts
; ---------------------------------------------------------------------------

loc_25DE0:
		addi.w	#$10,$2E(a0)

loc_25DE6:
		move.b	$2E(a0),d0
		sub.b	d0,$26(a0)
		cmpi.w	#$200,8(a0)
		bne.s	loc_25E0C
		tst.b	$26(a0)
		bpl.s	locret_25E0A
		move.w	#$80,8(a0)
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

locret_25E0A:
		rts
; ---------------------------------------------------------------------------

loc_25E0C:
		tst.b	$26(a0)
		bmi.s	locret_25E20
		move.w	#$200,8(a0)
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

locret_25E20:
		rts
; ---------------------------------------------------------------------------

LBZCupElev_Fling1:
		cmpi.w	#$16C0,$30(a0)
		bcs.s	loc_25E3E
		move.w	#$16C0,$30(a0)
		move.w	#-$200,$18(a0)
		move.w	#0,$1A(a0)
		bra.s	loc_25E8E
; ---------------------------------------------------------------------------

loc_25E3E:
		addi.w	#$10,$30(a0)
		rts
; ---------------------------------------------------------------------------

LBZCupElev_Fling2:
		cmpi.w	#$2AE0,$30(a0)
		bhi.s	loc_25E62
		move.w	#$2AE0,$30(a0)
		move.w	#$200,$18(a0)
		move.w	#0,$1A(a0)
		bra.s	loc_25E8E
; ---------------------------------------------------------------------------

loc_25E62:
		subi.w	#$10,$30(a0)
		rts
; ---------------------------------------------------------------------------

LBZCupElev_Fling3:
		cmpi.w	#$2B20,$30(a0)
		bcs.s	loc_25E86
		move.w	#$2B20,$30(a0)
		move.w	#-$200,$18(a0)
		move.w	#0,$1A(a0)
		bra.s	loc_25E8E
; ---------------------------------------------------------------------------

loc_25E86:
		addi.w	#$10,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_25E8E:
		move.l	#Obj_LBZElevatorCupFlicker,(a0)
		moveq	#signextendB(sfx_Death),d0
		jsr	(Play_Sound_2).l
		lea	$3C(a0),a2
		lea	(Player_1).w,a1
		move.w	#-$300,d0
		bsr.s	sub_25EB6
		lea	$3D(a0),a2
		lea	(Player_2).w,a1
		move.w	#-$400,d0

; =============== S U B R O U T I N E =======================================


sub_25EB6:
		move.b	#$12,2(a2)
		tst.b	(a2)
		beq.s	locret_25F00
		move.b	#4,5(a1)
		bclr	#3,$2A(a1)
		bclr	#5,$2A(a1)
		bset	#1,$2A(a1)
		move.w	d0,$1A(a1)
		move.w	#-$200,$18(a1)
		btst	#0,$2A(a0)
		beq.s	loc_25EF4
		neg.w	$18(a1)
		bset	#0,$2A(a1)

loc_25EF4:
		move.w	#0,$1C(a1)
		move.b	#$1A,$20(a1)

locret_25F00:
		rts
; End of function sub_25EB6

; ---------------------------------------------------------------------------

Obj_LBZElevatorCupFlicker:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bmi.s	loc_25F14
		move.w	#$7FFF,$10(a0)

loc_25F14:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#1,d0
		beq.s	locret_25F24
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

locret_25F24:
		rts
; ---------------------------------------------------------------------------

loc_25F26:
		move.w	$30(a0),d0
		andi.w	#$FF80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_25F40
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_25F40:
		move.w	$48(a0),d0
		beq.s	loc_25F4C
		movea.w	d0,a2
		bclr	#7,(a2)

loc_25F4C:
		lea	(Player_1).w,a1
		moveq	#3,d6
		bsr.s	LBZCupElevator_ReleasePlayer
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.s	LBZCupElevator_ReleasePlayer
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


LBZCupElevator_ReleasePlayer:
		bclr	d6,$2A(a0)
		beq.w	locret_25F86
		move.w	#$100,8(a1)
		clr.b	$2E(a1)
		bclr	#3,$2A(a1)
		bclr	#5,$2A(a1)
		bset	#1,$2A(a1)

locret_25F86:
		rts
; End of function LBZCupElevator_ReleasePlayer


; =============== S U B R O U T I N E =======================================


LBZCupElevator_PlayerControl:
		tst.b	(a2)
		bne.s	loc_25FF4
		tst.b	2(a2)
		beq.s	loc_25F98
		subq.b	#1,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_25F98:
		move.b	$26(a0),d0
		subi.b	#$20,d0
		cmpi.b	#$40,d0
		bcs.w	locret_260DA
		jsr	(SolidObjectFull2_1P).l
		btst	d6,$2A(a0)
		beq.w	locret_260DA
		tst.w	$34(a0)
		bne.s	loc_25FD4
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#8,d0
		bmi.w	locret_260DA
		cmpi.w	#$10,d0
		bcc.w	locret_260DA

loc_25FD4:
		move.b	#1,(a2)
		move.b	#3,$2E(a1)
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		move.b	#0,$20(a1)
		bra.w	loc_260A2
; ---------------------------------------------------------------------------

loc_25FF4:
		tst.b	4(a1)
		bpl.w	loc_26082
		cmpi.b	#4,5(a1)
		bcc.s	loc_26082
		andi.b	#$70,d0
		beq.w	loc_260A2
		tst.b	(_unkFAA9).w
		bne.w	loc_260A2
		move.w	#$100,8(a1)
		clr.b	$2E(a1)
		bclr	d6,$2A(a0)
		bclr	#3,$2A(a1)
		bclr	#5,$2A(a1)
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		bclr	#4,$2A(a1)
		move.b	#0,(a2)
		move.b	#$12,2(a2)
		btst	#$A,d0
		beq.s	loc_2606E
		move.w	#-$200,$18(a1)

loc_2606E:
		btst	#$B,d0
		beq.s	loc_2607A
		move.w	#$200,$18(a1)

loc_2607A:
		move.w	#-$480,$1A(a1)
		rts
; ---------------------------------------------------------------------------

loc_26082:
		bclr	d6,$2A(a0)
		bclr	#3,$2A(a1)
		move.w	#$100,8(a1)
		clr.b	$2E(a1)
		move.b	#0,(a2)
		move.b	#$3C,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_260A2:
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),d0
		subi.w	#$10,d0
		move.w	d0,$14(a1)
		move.w	#$280,8(a1)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		cmpi.b	#$C0,d0
		bcs.s	loc_260CE
		move.w	#$100,8(a1)

loc_260CE:
		moveq	#0,d0
		move.b	$26(a0),d0
		jmp	(loc_3176A).l
; ---------------------------------------------------------------------------

locret_260DA:
		rts
; End of function LBZCupElevator_PlayerControl

; ---------------------------------------------------------------------------

Obj_LBZCupElevatorBase:
		movea.w	$40(a0),a1
		move.w	$14(a1),$14(a0)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_LBZCupElevatorAttach:
		movea.w	$40(a0),a1
		move.w	$14(a1),$14(a0)
		move.b	$26(a1),$26(a0)
		move.w	#$180,8(a0)
		move.b	$26(a0),d0
		bpl.s	loc_2610E
		move.w	#$100,8(a0)

loc_2610E:
		andi.b	#-2,4(a0)
		subi.b	#$40,d0
		bpl.s	loc_26120
		ori.b	#1,4(a0)

loc_26120:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		move.w	d1,d2
		add.w	d1,d1
		add.w	d2,d1
		asr.w	#5,d1
		add.w	$30(a0),d1
		move.w	d1,$10(a0)
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

Obj_LBZCupElevatorPole:
		move.l	#Map_LBZCupElevator,$C(a0)
		move.w	#$440D,$A(a0)
		move.b	#4,4(a0)
		move.w	#$180,8(a0)
		move.b	#8,7(a0)
		move.b	#$30,6(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		move.b	#3,$22(a0)
		tst.b	$2C(a0)
		beq.s	loc_2618E
		move.b	#$60,6(a0)
		move.b	#4,$22(a0)

loc_2618E:
		move.l	#loc_26194,(a0)

loc_26194:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_LBZCupElevator:
		include "Levels/LBZ/Misc Object Data/Map - Cup Elevator.asm"
; ---------------------------------------------------------------------------

Obj_1A_1:
		move.l	#Map_LBZUnusedUnknown,$C(a0)
		move.w	#$43C3,$A(a0)
		ori.b	#4,4(a0)
		move.b	#$40,7(a0)
		move.b	#$40,6(a0)
		move.w	#$200,8(a0)
		move.b	#$80,$42(a0)
		move.b	#1,$22(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2628C
		move.l	#loc_262DC,(a1)
		move.l	#Map_LBZUnusedUnknown,$C(a1)
		move.w	#$43C3,$A(a1)
		ori.b	#4,4(a1)
		move.b	#$40,7(a1)
		move.b	#$40,6(a1)
		move.w	#$200,8(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	#$80,$42(a1)
		bset	#6,4(a1)
		move.w	#6,$16(a1)
		move.w	a0,$3C(a1)

loc_2628C:
		move.b	#$10,$42(a0)
		move.l	#loc_26298,(a0)

loc_26298:
		btst	#4,(Ctrl_2).w
		beq.s	loc_262A6
		move.b	#0,$42(a0)

loc_262A6:
		btst	#5,(Ctrl_2).w
		beq.s	loc_262B4
		addi.b	#1,$42(a0)

loc_262B4:
		btst	#6,(Ctrl_2).w
		beq.s	loc_262C2
		subi.b	#1,$42(a0)

loc_262C2:
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#8,d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		bsr.w	sub_2636C
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_262DC:
		movea.w	$3C(a0),a1
		move.b	$42(a1),$42(a0)
		bsr.w	sub_262F0
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_262F0:
		move.b	$42(a0),d0
		jsr	(GetSineCosine).l
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		swap	d0
		swap	d1
		asr.l	#5,d0
		asr.l	#5,d1
		move.l	d0,d4
		move.l	d1,d5
		add.l	d0,d0
		add.l	d1,d1
		movem.l	d0-d5,-(sp)
		add.l	d0,d4
		add.l	d1,d5
		lea	$18(a0),a2
		moveq	#2,d6

loc_26320:
		movem.l	d4-d5,-(sp)
		swap	d4
		swap	d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d5,(a2)+
		move.w	d4,(a2)+
		movem.l	(sp)+,d4-d5
		add.l	d0,d4
		add.l	d1,d5
		addq.w	#2,a2
		dbf	d6,loc_26320
		movem.l	(sp)+,d0-d5
		neg.l	d4
		neg.l	d5
		sub.l	d0,d4
		sub.l	d1,d5
		moveq	#2,d6

loc_2634C:
		movem.l	d4-d5,-(sp)
		swap	d4
		swap	d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d5,(a2)+
		move.w	d4,(a2)+
		movem.l	(sp)+,d4-d5
		sub.l	d0,d4
		sub.l	d1,d5
		addq.w	#2,a2
		dbf	d6,loc_2634C
		rts
; End of function sub_262F0


; =============== S U B R O U T I N E =======================================


sub_2636C:
		; Bug: probably meant to be $30(a0)
		lea	$30,a2
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d3,-(sp)
		bsr.s	sub_2638A
		movem.l	(sp)+,d1-d3
		; Bug: probably meant to be $34(a0)
		lea	$34,a2
		lea	(Player_2).w,a1
		addq.b	#1,d6
; End of function sub_2636C


; =============== S U B R O U T I N E =======================================


sub_2638A:
		btst	d6,$2A(a0)
		beq.w	loc_26448
		move.w	$1C(a1),d0
		move.b	$42(a0),d4
		addi.b	#$40,d4
		bpl.s	loc_263A2
		neg.w	d0

loc_263A2:
		add.w	d0,(a2)
		btst	#1,$2A(a1)
		bne.s	loc_263D0
		move.b	$42(a0),d0
		jsr	(GetSineCosine).l
		tst.w	d1
		bmi.s	loc_263BC
		neg.w	d1

loc_263BC:
		asr.w	#2,d1
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		cmp.w	d1,d0
		blt.s	loc_263D0
		neg.w	d1
		cmp.w	d1,d0
		blt.s	loc_263E4

loc_263D0:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_263E4:
		bsr.w	sub_263EC
		moveq	#0,d4
		rts
; End of function sub_2638A


; =============== S U B R O U T I N E =======================================


sub_263EC:
		move.w	d3,d5
		move.b	$42(a0),d0
		jsr	(GetSineCosine).l
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		move.w	(a2),d4
		muls.w	d4,d0
		muls.w	d4,d1
		swap	d0
		swap	d1
		add.w	d0,d2
		add.w	d1,d3
		move.b	$42(a0),d0
		move.b	d0,d1
		addi.b	#$40,d1
		bpl.s	loc_2641E
		addi.b	#$80,d0

loc_2641E:
		move.b	d0,$26(a1)
		moveq	#0,d1
		move.b	$1E(a1),d1
		add.w	d1,d5
		lsl.w	#8,d5
		jsr	(GetSineCosine).l
		muls.w	d5,d0
		muls.w	d5,d1
		swap	d0
		swap	d1
		add.w	d0,d3
		sub.w	d1,d2
		move.w	d2,$14(a1)
		move.w	d3,$10(a1)
		rts
; End of function sub_263EC

; ---------------------------------------------------------------------------

loc_26448:
		tst.w	$1A(a1)
		bmi.w	locret_264DE
		move.b	$42(a0),d0
		jsr	(GetSineCosine).l
		move.w	d0,d4
		move.w	d1,d2
		tst.w	d1
		bmi.s	loc_26464
		neg.w	d1

loc_26464:
		asr.w	#2,d1
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		cmp.w	d1,d0
		blt.s	locret_264DE
		neg.w	d1
		cmp.w	d1,d0
		bge.s	locret_264DE
		swap	d0
		divs.w	d2,d0
		move.w	d0,(a2)
		neg.w	d4
		muls.w	d4,d0
		swap	d0
		move.w	d3,d5
		add.w	d0,d3
		move.w	$14(a0),d0
		sub.w	d3,d0
		move.w	$14(a1),d2
		move.b	$1E(a1),d1
		ext.w	d1
		add.w	d2,d1
		addq.w	#4,d1
		sub.w	d1,d0
		bhi.s	locret_264DE
		cmpi.w	#-$10,d0
		bcs.s	locret_264DE
		tst.b	$2E(a1)
		bmi.s	locret_264DE
		cmpi.b	#6,5(a1)
		bcc.s	locret_264DE
		move.b	$42(a0),d0
		move.b	d0,d1
		addi.b	#$40,d1
		bpl.s	loc_264C4
		addi.b	#$80,d0

loc_264C4:
		jsr	(GetSineCosine).l
		muls.w	#$1B00,d0
		swap	d0
		sub.w	d0,(a2)
		move.w	d5,d3
		bsr.w	sub_263EC
		jmp	(RideObject_SetRide).l
; ---------------------------------------------------------------------------

locret_264DE:
		rts
; ---------------------------------------------------------------------------
Map_LBZUnusedUnknown:
		include "Levels/LBZ/Misc Object Data/Map - Unused Unknown.asm"
; ---------------------------------------------------------------------------

Obj_LBZPipePlug:
		move.b	#$10,$1E(a0)
		move.l	#Map_LBZPipePlug,$C(a0)
		move.w	#$42E6,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$20,6(a0)
		move.l	#word_267D4,$3C(a0)
		move.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	#7,$22(a0)
		move.l	#loc_2653A,(a0)

loc_2653A:
		move.w	(Player_1+x_vel).w,$30(a0)
		move.w	(Player_2+x_vel).w,$32(a0)
		move.w	#$1B,d1
		move.w	#$20,d2
		move.w	#$21,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		move.b	$2A(a0),d0
		andi.b	#$60,d0
		bne.s	loc_2656C

loc_26566:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2656C:
		lea	(Player_1).w,a1
		move.w	$30(a0),d1
		btst	#5,$2A(a0)
		beq.s	loc_265B8
		cmpi.b	#2,$20(a1)
		bne.s	loc_265B8
		move.w	d1,d0
		bpl.s	loc_2658A
		neg.w	d0

loc_2658A:
		cmpi.w	#$480,d0
		bcs.s	loc_265B8
		bclr	#6,$2A(a0)
		beq.s	loc_265EC
		lea	(Player_2).w,a2
		bclr	#5,$2A(a2)
		cmpi.b	#2,$20(a2)
		bne.s	loc_265EC
		move.w	$32(a0),$18(a2)
		move.w	$18(a2),$1C(a2)
		bra.s	loc_265EC
; ---------------------------------------------------------------------------

loc_265B8:
		lea	(Player_2).w,a1
		move.w	$32(a0),d1
		btst	#6,$2A(a0)
		beq.s	loc_26566
		cmpi.b	#2,$20(a1)
		bne.s	loc_26566
		move.w	d1,d0
		bpl.s	loc_265D6
		neg.w	d0

loc_265D6:
		cmpi.w	#$480,d0
		bcs.w	loc_26566
		bclr	#6,$2A(a0)
		beq.s	loc_265EC
		bclr	#5,(Player_2+status).w

loc_265EC:
		bclr	#5,$2A(a0)
		beq.s	loc_265FA
		bclr	#5,(Player_1+status).w

loc_265FA:
		move.w	d1,$18(a1)
		addq.w	#4,$10(a1)
		lea	(word_267D4).l,a4
		move.w	$10(a0),d0
		cmp.w	$10(a1),d0
		bcs.s	loc_2661E
		subi.w	#8,$10(a1)
		lea	(word_26814).l,a4

loc_2661E:
		move.w	$18(a1),$1C(a1)
		move.b	$2C(a0),d1
		beq.s	loc_26686
		cmpi.b	#$1F,d1
		beq.s	loc_2665A
		jsr	(Create_New_Sprite3).l
		bne.w	loc_26686
		move.l	#Obj_AutomaticTunnelDelayed,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addq.w	#2,$14(a1)
		move.b	#7,$24(a1)
		move.b	d1,$2C(a1)

loc_2665A:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_26686
		move.l	#Obj_TunnelExhaustControl,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		subi.w	#$20,$14(a1)
		move.w	#1,$1A(a1)
		move.b	d1,$2C(a1)

loc_26686:
		move.l	#loc_2668E,(a0)
		bsr.s	sub_266EE

loc_2668E:
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		tst.b	4(a0)
		bpl.w	loc_266A8
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_266A8:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_266AE:
		moveq	#0,d0
		move.b	$23(a0),$22(a0)
		addq.b	#1,$23(a0)
		cmpi.b	#6,$23(a0)
		bcs.s	loc_266C8
		move.b	#0,$23(a0)

loc_266C8:
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		tst.b	4(a0)
		bpl.w	loc_266A8
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
byte_266E2:	dc.b 0
		dc.b 1
		dc.b 2
		dc.b 3
		dc.b 5
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b 3
		dc.b 5
		dc.b 0

; =============== S U B R O U T I N E =======================================


sub_266EE:
		lea	(byte_266E2).l,a5
		moveq	#0,d0
		move.b	$22(a0),d0
		add.w	d0,d0
		movea.l	$C(a0),a3
		lea	$1A(a3),a2
		adda.w	(a3,d0.w),a2
		move.l	#loc_266AE,d4
		move.b	4(a0),d5
		moveq	#$B,d1

loc_26714:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_267CC
		move.l	d4,(a1)
		move.l	a3,$C(a1)
		move.b	d5,4(a1)
		move.w	$A(a0),$A(a1)
		move.b	8(a0),8(a1)
		move.b	7(a0),7(a1)
		move.w	(a4)+,$18(a1)
		move.w	(a4)+,$1A(a1)
		move.b	(a5)+,$22(a1)
		move.b	$22(a1),$23(a1)
		move.b	(a2),d0
		addq.w	#4,a2
		ext.w	d0
		add.w	$14(a0),d0
		move.w	d0,$14(a1)
		move.w	(a2)+,d0
		add.w	$10(a0),d0
		move.w	d0,$10(a1)
		dbf	d1,loc_26714
		moveq	#0,d0
		move.b	$22(a0),d0
		add.w	d0,d0
		movea.l	$C(a0),a3
		adda.w	(a3,d0.w),a3
		move.w	(a3)+,d1
		subq.w	#1,d1
		moveq	#3,d1
		bset	#5,4(a0)
		move.l	(a0),d4
		move.b	4(a0),d5
		movea.l	a0,a1
		bra.s	loc_26798
; ---------------------------------------------------------------------------

loc_2678E:
		jsr	(Create_New_Sprite3).l
		bne.s	loc_267CC
		addq.w	#6,a3

loc_26798:
		move.l	d4,(a1)
		move.l	a3,$C(a1)
		move.b	d5,4(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	$A(a0),$A(a1)
		move.b	8(a0),8(a1)
		move.b	7(a0),7(a1)
		move.w	(a4)+,$18(a1)
		move.w	(a4)+,$1A(a1)
		dbf	d1,loc_2678E

loc_267CC:
		moveq	#signextendB(sfx_Collapse),d0
		jmp	(Play_Sound_2).l
; End of function sub_266EE

; ---------------------------------------------------------------------------
word_267D4:	dc.w  $FC80, $FDC0
		dc.w  $FD00, $FDB0
		dc.w  $FD80, $FDA0
		dc.w  $FE00, $FDA0
		dc.w  $FE80, $FDB0
		dc.w  $FF00, $FDC0
		dc.w  $FC80, $FF40
		dc.w  $FD00, $FF30
		dc.w  $FD80, $FF20
		dc.w  $FE00, $FF20
		dc.w  $FE80, $FF30
		dc.w  $FF00, $FF40
		dc.w  $FC00, $FD40
		dc.w  $FF00, $FD40
		dc.w  $FC00, $FF80
		dc.w  $FF00, $FF80
word_26814:	dc.w   $100, $FDC0
		dc.w   $180, $FDB0
		dc.w   $200, $FDA0
		dc.w   $280, $FDA0
		dc.w   $300, $FDB0
		dc.w   $380, $FDC0
		dc.w   $100, $FF40
		dc.w   $180, $FF30
		dc.w   $200, $FF20
		dc.w   $280, $FF20
		dc.w   $300, $FF30
		dc.w   $380, $FF40
		dc.w   $100, $FD40
		dc.w   $400, $FD40
		dc.w   $100, $FF80
		dc.w   $400, $FF80
Map_LBZPipePlug:include "Levels/LBZ/Misc Object Data/Map - PipePlug.asm"
; ---------------------------------------------------------------------------

Obj_1C_1:
		move.l	#Map_LBZUnusedUnknown_2,$C(a0)
		move.w	#$42EA,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.w	$14(a0),$30(a0)
		move.l	#loc_26930,(a0)

loc_26930:
		tst.b	$2E(a0)
		beq.s	loc_26966
		move.w	$1A(a0),d0
		addi.w	#8,$1A(a0)
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$14(a0)
		move.w	$30(a0),d0
		addq.w	#2,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_26966
		move.w	$30(a0),$14(a0)
		clr.w	$16(a0)
		clr.w	$1A(a0)
		clr.b	$2E(a0)

loc_26966:
		move.w	#$1B,d1
		move.w	#$10,d2
		move.w	#$11,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		jsr	(SolidObjectFull2_1P).l
		cmpi.w	#-2,d4
		bne.s	loc_2698E
		bsr.s	sub_269E0

loc_2698E:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		jsr	(SolidObjectFull2_1P).l
		cmpi.w	#-2,d4
		bne.s	loc_269A6
		bsr.s	sub_269E0

loc_269A6:
		move.b	$2A(a0),d6
		andi.b	#$18,d6
		beq.s	loc_269CE
		move.b	d6,d0
		andi.b	#8,d0
		beq.s	loc_269C0
		lea	(Player_1).w,a1
		bsr.w	sub_228EC

loc_269C0:
		andi.b	#$10,d6
		beq.s	loc_269CE
		lea	(Player_2).w,a1
		bsr.w	sub_228EC

loc_269CE:
		lea	(Ani_LBZUnusedUnknown_2).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_269E0:
		move.w	#-$40,$1A(a0)
		move.b	#1,$2E(a0)
		rts
; End of function sub_269E0

; ---------------------------------------------------------------------------
Ani_LBZUnusedUnknown_2:
		include "Levels/LBZ/Misc Object Data/Anim - Unused Unknown 2.asm"
Map_LBZUnusedUnknown_2:
		include "Levels/LBZ/Misc Object Data/Map - Unused Unknown 2.asm"

; =============== S U B R O U T I N E =======================================


Animate_Tiles:
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#5,d0
		andi.w	#$FC,d0
		move.w	Offs_AniPLC(pc,d0.w),d1
		lea	Offs_AniFunc(pc,d1.w),a2
		move.w	Offs_AniFunc(pc,d0.w),d0
		jmp	Offs_AniFunc(pc,d0.w)
; End of function Animate_Tiles

; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------
Offs_AniFunc:	dc.w AnimateTiles_AIZ1-Offs_AniFunc
Offs_AniPLC:	dc.w AniPLC_AIZ1-Offs_AniFunc
		dc.w AnimateTiles_AIZ2-Offs_AniFunc
		dc.w AniPLC_AIZ2-Offs_AniFunc
		dc.w AnimateTiles_HCZ1-Offs_AniFunc
		dc.w AniPLC_HCZ1-Offs_AniFunc
		dc.w AnimateTiles_HCZ2-Offs_AniFunc
		dc.w AniPLC_HCZ2-Offs_AniFunc
		dc.w AnimateTiles_MGZ-Offs_AniFunc
		dc.w AniPLC_MGZ-Offs_AniFunc
		dc.w AnimateTiles_MGZ-Offs_AniFunc
		dc.w AniPLC_MGZ-Offs_AniFunc
		dc.w AnimateTiles_CNZ-Offs_AniFunc
		dc.w AniPLC_CNZ-Offs_AniFunc
		dc.w AnimateTiles_CNZ-Offs_AniFunc
		dc.w AniPLC_CNZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ICZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ICZ-Offs_AniFunc
		dc.w AnimateTiles_ICZ-Offs_AniFunc
		dc.w AniPLC_ICZ-Offs_AniFunc
		dc.w AnimateTiles_ICZ-Offs_AniFunc
		dc.w AniPLC_ICZ-Offs_AniFunc
		dc.w AnimateTiles_LBZ1-Offs_AniFunc
		dc.w AniPLC_LBZ1-Offs_AniFunc
		dc.w AnimateTiles_LBZ2-Offs_AniFunc
		dc.w AniPLC_LBZ2-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_LRZ1-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_LRZ1-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_LRZ1-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_LRZ1-Offs_AniFunc
		dc.w AnimateTiles_LRZ1-Offs_AniFunc
		dc.w AniPLC_LRZ1-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_DoAniPLC-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_DoAniPLC-Offs_AniFunc
		dc.w AniPLC_ALZ-Offs_AniFunc
		dc.w AnimateTiles_DoAniPLC-Offs_AniFunc
		dc.w AniPLC_BPZ-Offs_AniFunc
		dc.w AnimateTiles_DoAniPLC-Offs_AniFunc
		dc.w AniPLC_BPZ-Offs_AniFunc
		dc.w AnimateTiles_DPZ-Offs_AniFunc
		dc.w AniPLC_DPZ-Offs_AniFunc
		dc.w AnimateTiles_DPZ-Offs_AniFunc
		dc.w AniPLC_DPZ-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_Gumball-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_Gumball-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
		dc.w AnimateTiles_NULL-Offs_AniFunc
		dc.w AnimateTiles_NULL3-Offs_AniFunc
; ---------------------------------------------------------------------------

AnimateTiles_NULL:
		rts
; ---------------------------------------------------------------------------

AnimateTiles_AIZ1:
		tst.b	(Boss_flag).w
		bne.s	locret_26B82
		tst.b	(Dynamic_resize_routine).w
		bne.w	AnimateTiles_DoAniPLC

locret_26B82:
		rts
; ---------------------------------------------------------------------------

AnimateTiles_AIZ2:
		tst.b	(Boss_flag).w
		bne.s	locret_26BB8
		cmpi.w	#$1C0,(Camera_X_pos).w
		bcc.w	AnimateTiles_DoAniPLC
		lea	(Anim_Counters).w,a3
		addq.w	#2,a2
		moveq	#0,d6
		bsr.w	AnimateTiles_DoAniPLC_Part2
		clr.l	(a3)
		clr.l	(a3)
		move.l	#ArtUnc_AniAIZ2_FirstTree,d1
		move.w	#$1940,d2
		move.w	#$230,d3
		jmp	(Add_To_DMA_Queue).l
; ---------------------------------------------------------------------------

locret_26BB8:
		rts
; ---------------------------------------------------------------------------

AnimateTiles_HCZ1:
		tst.b	(Events_bg+$16).w
		beq.s	loc_26BC2
		rts
; ---------------------------------------------------------------------------

loc_26BC2:
		lea	(Anim_Counters+4).w,a3

loc_26BC6:
		moveq	#0,d1
		move.w	(Events_bg+$10).w,d1
		cmp.w	(a3),d1
		beq.w	loc_26CB4
		move.w	d1,(a3)
		tst.w	d1
		beq.w	loc_26CB8
		bpl.w	loc_26C4C
		addi.w	#$60,d1
		bcc.w	loc_26CB4
		move.w	d1,d0
		add.w	d1,d1
		add.w	d0,d1
		lsl.w	#5,d1
		lea	(Chunk_table+$7C00).l,a4
		lea	(HCZ_WaterlineScroll_Data).l,a5
		adda.w	d1,a5
		move.w	#$5F,d1

loc_26C00:
		moveq	#0,d0
		move.b	(a5)+,d0
		add.w	d0,d0
		add.w	d0,d0
		lea	(ArtUnc_AniHCZ1_WaterlineBelow).l,a0
		adda.w	d0,a0
		move.l	(a0),(a4)
		lea	$600(a0),a0
		lea	$180(a4),a4
		move.l	(a0),(a4)
		lea	-$17C(a4),a4
		dbf	d1,loc_26C00
		move.l	#Chunk_table+$7C00,d1
		move.w	#$5B80,d2
		move.w	#$180,d3
		jsr	(Add_To_DMA_Queue).l
		tst.w	2(a3)
		bmi.s	loc_26C48
		move.w	#-1,2(a3)
		bsr.w	AniHCZ_FixLowerBG

loc_26C48:
		bra.w	loc_26CB4
; ---------------------------------------------------------------------------

loc_26C4C:
		neg.w	d1
		addi.w	#$60,d1
		bcc.s	loc_26CB4
		move.w	d1,d0
		add.w	d1,d1
		add.w	d0,d1
		lsl.w	#5,d1
		lea	(Chunk_table+$7C00).l,a4
		lea	(HCZ_WaterlineScroll_Data).l,a5
		adda.w	d1,a5
		move.w	#$5F,d1

loc_26C6E:
		moveq	#0,d0
		move.b	(a5)+,d0
		add.w	d0,d0
		add.w	d0,d0
		lea	(ArtUnc_AniHCZ1_WaterlineAbove).l,a0
		adda.w	d0,a0
		move.l	(a0),(a4)
		lea	$600(a0),a0
		lea	$180(a4),a4
		move.l	(a0),(a4)
		lea	-$17C(a4),a4
		dbf	d1,loc_26C6E
		move.l	#Chunk_table+$7C00,d1
		move.w	#$5E80,d2
		move.w	#$180,d3
		jsr	(Add_To_DMA_Queue).l
		tst.w	2(a3)
		beq.s	loc_26CB4
		move.w	#0,2(a3)
		bsr.s	AniHCZ_FixUpperBG

loc_26CB4:
		bra.w	AnimateTiles_DoAniPLC
; ---------------------------------------------------------------------------

loc_26CB8:
		move.w	#1,(a3)
		bsr.s	AniHCZ_FixLowerBG

; =============== S U B R O U T I N E =======================================


AniHCZ_FixUpperBG:
		move.l	#ArtUnc_FixHCZ1_UpperBG1,d1
		move.w	#$5B80,d2
		move.w	#$C0,d3
		jsr	(Add_To_DMA_Queue).l
		move.l	#ArtUnc_FixHCZ1_UpperBG2,d1
		move.w	#$5D00,d2
		move.w	#$C0,d3
		jmp	(Add_To_DMA_Queue).l
; End of function AniHCZ_FixUpperBG


; =============== S U B R O U T I N E =======================================


AniHCZ_FixLowerBG:
		move.l	#ArtUnc_FixHCZ1_LowerBG1,d1
		move.w	#$5E80,d2
		move.w	#$C0,d3
		jsr	(Add_To_DMA_Queue).l
		move.l	#ArtUnc_FixHCZ1_LowerBG2,d1
		move.w	#$6000,d2
		move.w	#$C0,d3
		jmp	(Add_To_DMA_Queue).l
; End of function AniHCZ_FixLowerBG


; =============== S U B R O U T I N E =======================================


sub_26D0E:
		lea	(AniPLC_HCZ1).l,a2
		lea	(Anim_Counters+4).w,a3
		move.w	(Events_bg+$10).w,d1
		beq.s	loc_26CB8
		bpl.s	loc_26D56
		addi.w	#$60,d1
		bcc.s	loc_26D2C
		bsr.s	AniHCZ_FixLowerBG
		bra.w	loc_26BC6
; ---------------------------------------------------------------------------

loc_26D2C:
		bsr.s	AniHCZ_FixLowerBG
		move.l	#ArtUnc_AniHCZ1_WaterlineBelow,d1
		move.w	#$5B80,d2
		move.w	#$C0,d3
		jsr	(Add_To_DMA_Queue).l
		move.l	#ArtUnc_AniHCZ1_WaterlineBelow2,d1
		move.w	#$5D00,d2
		move.w	#$C0,d3
		jmp	(Add_To_DMA_Queue).l
; ---------------------------------------------------------------------------

loc_26D56:
		neg.w	d1
		addi.w	#$60,d1
		bcc.s	loc_26D66
		bsr.w	AniHCZ_FixUpperBG
		bra.w	loc_26BC6
; ---------------------------------------------------------------------------

loc_26D66:
		bsr.w	AniHCZ_FixUpperBG
		move.l	#ArtUnc_AniHCZ1_WaterlineAbove,d1
		move.w	#$5E80,d2
		move.w	#$C0,d3
		jsr	(Add_To_DMA_Queue).l
		move.l	#ArtUnc_AniHCZ1_WaterlineAbove2,d1
		move.w	#$6000,d2
		move.w	#$C0,d3
		jmp	(Add_To_DMA_Queue).l
; End of function sub_26D0E

; ---------------------------------------------------------------------------

AnimateTiles_HCZ2:
		lea	(Anim_Counters).w,a3
		moveq	#0,d1
		move.w	(Events_bg+$12).w,d1
		andi.w	#$1F,d1
		cmp.b	1(a3),d1
		beq.s	loc_26DEE
		move.b	d1,1(a3)
		move.w	d1,d2
		andi.w	#7,d1
		lsl.w	#7,d1
		move.l	d1,d5
		andi.w	#$18,d2
		move.w	d2,d0
		lsl.w	#2,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_26DF2(pc,d0.w),a4
		lea	(ArtUnc_AniHCZ2_SmallBGLine).l,a0
		move.w	#$5A40,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_26DEE
		jsr	(Add_To_DMA_Queue).l

loc_26DEE:
		addq.w	#2,a3
		bra.s	loc_26E02
; ---------------------------------------------------------------------------
word_26DF2:	dc.w $40
		dc.w 0
		dc.w $30
		dc.w $10
		dc.w $20
		dc.w $20
		dc.w $10
		dc.w $30
; ---------------------------------------------------------------------------

loc_26E02:
		moveq	#0,d1
		move.w	(Events_bg+$12).w,d1
		andi.w	#$1F,d1
		cmp.b	1(a3),d1
		beq.s	loc_26E5A
		move.b	d1,1(a3)
		move.w	d1,d2
		andi.w	#7,d1
		lsl.w	#8,d1
		move.l	d1,d5
		andi.w	#$18,d2
		move.w	d2,d0
		lsl.w	#3,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_26E5E(pc,d0.w),a4
		lea	(ArtUnc_AniHCZ2_2).l,a0
		move.w	#$5AC0,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_26E5A
		jsr	(Add_To_DMA_Queue).l

loc_26E5A:
		addq.w	#2,a3
		bra.s	loc_26E6E
; ---------------------------------------------------------------------------
word_26E5E:	dc.w $80
		dc.w 0
		dc.w $60
		dc.w $20
		dc.w $40
		dc.w $40
		dc.w $20
		dc.w $60
; ---------------------------------------------------------------------------

loc_26E6E:
		moveq	#0,d1
		move.w	(Events_bg+$14).w,d1
		andi.w	#$1F,d1
		cmp.b	1(a3),d1
		beq.s	loc_26EC6
		move.b	d1,1(a3)
		move.w	d1,d2
		andi.w	#7,d1
		ror.w	#7,d1
		move.l	d1,d5
		andi.w	#$18,d2
		move.w	d2,d0
		lsl.w	#4,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_26ECA(pc,d0.w),a4
		lea	(ArtUnc_AniHCZ2_3).l,a0
		move.w	#$5BC0,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_26EC6
		jsr	(Add_To_DMA_Queue).l

loc_26EC6:
		addq.w	#2,a3
		bra.s	loc_26EDA
; ---------------------------------------------------------------------------
word_26ECA:	dc.w $100
		dc.w 0
		dc.w $C0
		dc.w $40
		dc.w $80
		dc.w $80
		dc.w $40
		dc.w $C0
; ---------------------------------------------------------------------------

loc_26EDA:
		moveq	#0,d1
		move.w	(Events_bg+$14).w,d1
		andi.w	#$3F,d1
		cmp.b	1(a3),d1
		beq.s	loc_26F40
		move.b	d1,1(a3)
		neg.w	d1
		move.w	d1,d2
		andi.w	#7,d1
		ror.w	#7,d1
		move.w	d1,d0
		add.w	d0,d0
		add.w	d0,d1
		move.l	d1,d5
		not.w	d2
		andi.w	#$38,d2
		move.w	d2,d0
		lsl.w	#3,d2
		add.w	d2,d1
		add.w	d2,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_26F46(pc,d0.w),a4
		lea	(ArtUnc_AniHCZ2_4).l,a0
		move.w	#$5DC0,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_26F40
		jsr	(Add_To_DMA_Queue).l

loc_26F40:
		addq.w	#2,a3
		bra.w	loc_275F0
; ---------------------------------------------------------------------------
word_26F46:	dc.w $300
		dc.w 0
		dc.w $2A0
		dc.w $60
		dc.w $240
		dc.w $C0
		dc.w $1E0
		dc.w $120
		dc.w $180
		dc.w $180
		dc.w $120
		dc.w $1E0
		dc.w $C0
		dc.w $240
		dc.w $60
		dc.w $2A0
; ---------------------------------------------------------------------------

AnimateTiles_MGZ:
		tst.b	(Boss_flag).w
		beq.w	AnimateTiles_DoAniPLC
		rts
; ---------------------------------------------------------------------------

AnimateTiles_CNZ:
		lea	(Anim_Counters).w,a3
		moveq	#0,d1
		move.w	(Events_bg+$10).w,d1
		sub.w	(Camera_X_pos_BG_copy).w,d1
		andi.w	#$3F,d1
		cmp.b	1(a3),d1
		beq.s	loc_26FD0
		move.b	d1,1(a3)
		move.w	d1,d2
		andi.w	#7,d1
		ror.w	#6,d1
		move.l	d1,d5
		andi.w	#$38,d2
		move.w	d2,d0
		lsl.w	#4,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_26FD6(pc,d0.w),a4
		lea	(ArtUnc_AniCNZ__6).l,a0
		move.w	#$6100,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_26FD0
		jsr	(Add_To_DMA_Queue).l

loc_26FD0:
		addq.w	#2,a3
		bra.w	loc_275F0
; ---------------------------------------------------------------------------
word_26FD6:	dc.w $200
		dc.w 0
		dc.w $1C0
		dc.w $40
		dc.w $180
		dc.w $80
		dc.w $140
		dc.w $C0
		dc.w $100
		dc.w $100
		dc.w $C0
		dc.w $140
		dc.w $80
		dc.w $180
		dc.w $40
		dc.w $1C0
word_26FF6:	dc.w $100
		dc.w 0
		dc.w $C0
		dc.w $40
		dc.w $80
		dc.w $80
		dc.w $40
		dc.w $C0
; ---------------------------------------------------------------------------

AnimateTiles_ICZ:
		lea	(Anim_Counters).w,a3
		moveq	#0,d0
		move.w	(Events_bg+$10).w,d0
		sub.w	(Camera_X_pos_BG_copy).w,d0
		andi.w	#$1F,d0
		cmp.b	1(a3),d0
		beq.s	loc_2706C
		move.b	d0,1(a3)
		move.l	d0,d1
		move.w	d0,d2
		andi.w	#7,d1
		ror.w	#7,d1
		move.l	d1,d5
		andi.w	#$18,d2
		move.w	d2,d0
		lsl.w	#4,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_26FF6(pc,d0.w),a4
		lea	(ArtUnc_AniICZ__1).l,a0
		move.w	#$21C0,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_2706C
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l

loc_2706C:
		addq.w	#2,a3
		tst.b	(Current_act).w
		bne.w	loc_27132
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d1
		sub.w	(Events_bg+$12).w,d1
		neg.w	d1
		andi.w	#$3F,d1
		cmp.b	1(a3),d1
		beq.w	loc_27132
		move.b	d1,1(a3)
		add.w	d1,d1
		add.w	d1,d1
		addi.l	#ArtUnc_AniICZ__2,d1
		move.w	#$2440,d2
		move.w	#$80,d3
		jsr	(Add_To_DMA_Queue).l
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d1
		move.w	(Events_bg+$12).w,d0
		asr.w	#1,d0
		sub.w	d0,d1
		asr.w	#1,d0
		sub.w	d0,d1
		neg.w	d1
		andi.w	#$1F,d1
		add.w	d1,d1
		add.w	d1,d1
		addi.l	#ArtUnc_AniICZ__3,d1
		move.w	#$2540,d2
		move.w	#$40,d3
		jsr	(Add_To_DMA_Queue).l
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d1
		move.w	(Events_bg+$12).w,d0
		asr.w	#1,d0
		sub.w	d0,d1
		neg.w	d1
		andi.w	#$F,d1
		add.w	d1,d1
		add.w	d1,d1
		addi.l	#ArtUnc_AniICZ__4,d1
		move.w	#$25C0,d2
		move.w	#$20,d3
		jsr	(Add_To_DMA_Queue).l
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d1
		move.w	(Events_bg+$12).w,d0
		asr.w	#2,d0
		sub.w	d0,d1
		neg.w	d1
		andi.w	#7,d1
		add.w	d1,d1
		add.w	d1,d1
		addi.l	#ArtUnc_AniICZ__5,d1
		move.w	#$2600,d2
		move.w	#$10,d3
		jsr	(Add_To_DMA_Queue).l

loc_27132:
		addq.w	#2,a3
		bra.w	loc_275F0
; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------

AnimateTiles_LBZ1:
		lea	(Anim_Counters).w,a3
		subq.b	#1,(a3)
		bcc.s	loc_2716E
		move.b	#3,(a3)
		moveq	#0,d0
		move.b	1(a3),d0
		addq.b	#1,1(a3)
		andi.b	#$F,1(a3)
		ror.w	#7,d0
		move.l	#ArtUnc_AniLBZ__0,d1
		add.l	d0,d1
		move.w	#$2C00,d2
		move.w	#$100,d3
		jsr	(Add_To_DMA_Queue).l

loc_2716E:
		addq.w	#2,a3
		moveq	#0,d0
		move.w	(Events_bg+$10).w,d0
		sub.w	(Camera_X_pos_BG_copy).w,d0
		andi.w	#$1F,d0
		cmp.b	1(a3),d0
		beq.s	loc_271F6
		move.b	d0,1(a3)
		moveq	#0,d1
		move.w	d0,d2
		andi.w	#7,d0
		move.l	d0,d6
		lsl.w	#7,d0
		move.w	d0,d1
		lsl.w	#2,d0
		add.w	d0,d1
		move.l	d1,d5
		andi.w	#$18,d2
		move.w	d2,d0
		lsl.w	#2,d2
		add.w	d2,d1
		lsl.w	#2,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_2721A(pc,d0.w),a4
		lea	(ArtUnc_AniLBZ1_1).l,a0
		move.w	#$6A00,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_271DE
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l

loc_271DE:
		move.l	d6,d1
		lsl.w	#5,d1
		lea	(ArtUnc_AniLBZ1_2).l,a0
		add.l	a0,d1
		move.w	d4,d2
		move.w	#$10,d3
		jsr	(Add_To_DMA_Queue).l

loc_271F6:
		addq.w	#2,a3
		tst.w	(a3)+
		bne.s	loc_27208
		cmpi.b	#1,1(a3)
		beq.s	loc_2720C
		move.w	#0,(a3)

loc_27208:
		bsr.w	loc_275F0

loc_2720C:
		lea	(Anim_Counters+$C).w,a3
		lea	(AniPLC_LBZSpec).l,a2
		bra.w	loc_275F0
; ---------------------------------------------------------------------------
word_2721A:	dc.w $140
		dc.w 0
		dc.w $F0
		dc.w $50
		dc.w $A0
		dc.w $A0
		dc.w $50
		dc.w $F0
; ---------------------------------------------------------------------------

AnimateTiles_LBZ2:
		lea	(Anim_Counters).w,a3
		tst.b	$F(a3)
		bne.s	loc_2729E
		subq.b	#1,(a3)
		bcc.s	loc_27264
		move.b	#3,(a3)
		moveq	#0,d0
		move.b	1(a3),d0
		addq.b	#1,1(a3)
		andi.b	#$F,1(a3)
		ror.w	#7,d0
		move.l	#ArtUnc_AniLBZ__0,d1
		add.l	d0,d1
		move.w	#$2C00,d2
		move.w	#$100,d3
		jsr	(Add_To_DMA_Queue).l

loc_27264:
		addq.w	#2,a3
		moveq	#0,d1
		move.w	(Events_bg+$12).w,d1
		sub.w	(Camera_X_pos_BG_copy).w,d1
		andi.w	#$F,d1
		cmp.b	1(a3),d1
		beq.s	loc_27294
		move.b	d1,1(a3)
		lsl.w	#6,d1
		addi.l	#ArtUnc_AniLBZ2_2,d1
		move.w	#$5C60,d2
		move.w	#$20,d3
		jsr	(Add_To_DMA_Queue).l

loc_27294:
		addq.w	#2,a3
		bsr.s	sub_272A0
		addq.w	#4,a3
		bra.w	loc_275F0
; ---------------------------------------------------------------------------

loc_2729E:
		addq.w	#4,a3

; =============== S U B R O U T I N E =======================================


sub_272A0:
		moveq	#0,d1
		move.w	(Events_bg+$10).w,d1
		cmp.w	(a3),d1
		beq.w	locret_27382
		move.w	d1,(a3)
		tst.w	d1
		beq.w	loc_27384
		bpl.w	loc_2731E
		addi.w	#$40,d1
		bcc.w	locret_27382
		lsl.w	#6,d1
		lea	(Chunk_table+$7E00).l,a4
		lea	(LBZ_WaterlineScroll_Data).l,a5
		adda.w	d1,a5
		move.w	#$3F,d1

loc_272D4:
		moveq	#0,d0
		move.b	(a5)+,d0
		add.w	d0,d0
		add.w	d0,d0
		lea	(ArtUnc_AniLBZ2_WaterlineBelow).l,a0
		adda.w	d0,a0
		move.l	(a0),(a4)
		lea	$100(a0),a0
		lea	$100(a4),a4
		move.l	(a0),(a4)
		lea	-$FC(a4),a4
		dbf	d1,loc_272D4
		move.l	#Chunk_table+$7E00,d1
		move.w	#$5860,d2
		move.w	#$100,d3
		jsr	(Add_To_DMA_Queue).l
		tst.w	2(a3)
		beq.s	locret_2731C
		move.w	#0,2(a3)
		bsr.w	sub_273A0

locret_2731C:
		rts
; ---------------------------------------------------------------------------

loc_2731E:
		neg.w	d1
		addi.w	#$40,d1
		bcc.s	locret_27382
		lsl.w	#6,d1
		lea	(Chunk_table+$7E00).l,a4
		lea	(LBZ_WaterlineScroll_Data).l,a5
		adda.w	d1,a5
		move.w	#$3F,d1

loc_2733A:
		moveq	#0,d0
		move.b	(a5)+,d0
		add.w	d0,d0
		add.w	d0,d0
		lea	(ArtUnc_AniLBZ2_WaterlineAbove).l,a0
		adda.w	d0,a0
		move.l	(a0),(a4)
		lea	$100(a0),a0
		lea	$100(a4),a4
		move.l	(a0),(a4)
		lea	-$FC(a4),a4
		dbf	d1,loc_2733A
		move.l	#Chunk_table+$7E00,d1
		move.w	#$5A60,d2
		move.w	#$100,d3
		jsr	(Add_To_DMA_Queue).l
		tst.w	2(a3)
		bmi.s	locret_27380
		move.w	#-1,2(a3)
		bsr.s	sub_2738C

locret_27380:
		rts
; ---------------------------------------------------------------------------

locret_27382:
		rts
; ---------------------------------------------------------------------------

loc_27384:
		move.w	#1,2(a3)
		bsr.s	sub_273A0
; End of function sub_272A0


; =============== S U B R O U T I N E =======================================


sub_2738C:
		move.l	#ArtUnc_AniLBZ2_LowerBG,d1
		move.w	#$5860,d2
		move.w	#$100,d3
		jmp	(Add_To_DMA_Queue).l
; End of function sub_2738C


; =============== S U B R O U T I N E =======================================


sub_273A0:
		move.l	#ArtUnc_AniLBZ2_UpperBG,d1
		move.w	#$5A60,d2
		move.w	#$100,d3
		jmp	(Add_To_DMA_Queue).l
; End of function sub_273A0


; =============== S U B R O U T I N E =======================================


sub_273B4:
		lea	(Anim_Counters+4).w,a3
		move.w	#1,2(a3)
		move.w	(Events_bg+$10).w,d1
		beq.s	loc_27384
		bpl.s	loc_273CC
		bsr.s	sub_273A0
		bra.w	sub_272A0
; ---------------------------------------------------------------------------

loc_273CC:
		bsr.s	sub_2738C
		bra.w	sub_272A0
; End of function sub_273B4

; ---------------------------------------------------------------------------

AnimateTiles_LRZ1:
		lea	(Anim_Counters).w,a3
		moveq	#0,d0
		move.w	(Events_bg+$12).w,d0
		sub.w	(Camera_X_pos_BG_copy).w,d0
		divu.w	#$30,d0
		swap	d0
		cmp.b	1(a3),d0
		beq.s	loc_27440
		move.b	d0,1(a3)
		moveq	#0,d1
		move.w	d0,d2
		andi.w	#7,d0
		lsl.w	#7,d0
		move.w	d0,d1
		lsl.w	#3,d0
		add.w	d0,d1
		move.l	d1,d5
		andi.w	#$38,d2
		move.w	d2,d0
		lsl.w	#3,d2
		add.w	d2,d1
		add.w	d2,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_27446(pc,d0.w),a4
		lea	(ArtUnc_AniLRZ__BG).l,a0
		move.w	#$6020,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_27440
		jsr	(Add_To_DMA_Queue).l

loc_27440:
		addq.w	#2,a3
		bra.w	loc_2745E
; ---------------------------------------------------------------------------
word_27446:	dc.w $240
		dc.w 0
		dc.w $1E0
		dc.w $60
		dc.w $180
		dc.w $C0
		dc.w $120
		dc.w $120
		dc.w $C0
		dc.w $180
		dc.w $60
		dc.w $1E0
; ---------------------------------------------------------------------------

loc_2745E:
		moveq	#0,d0
		move.w	(Events_bg+$10).w,d0
		sub.w	(Camera_X_pos_BG_copy).w,d0
		andi.w	#$1F,d0
		cmp.b	1(a3),d0
		beq.s	locret_274BE
		move.b	d0,1(a3)
		moveq	#0,d1
		move.w	d0,d2
		andi.w	#7,d0
		lsl.w	#8,d0
		move.w	d0,d1
		move.l	d1,d5
		andi.w	#$18,d2
		move.w	d2,d0
		lsl.w	#3,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_274C0(pc,d0.w),a4
		lea	(ArtUnc_AniLRZ__BG2).l,a0
		move.w	#$64A0,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	locret_274BE
		jsr	(Add_To_DMA_Queue).l

locret_274BE:
		rts
; ---------------------------------------------------------------------------
word_274C0:	dc.w $80
		dc.w 0
		dc.w $60
		dc.w $20
		dc.w $40
		dc.w $40
		dc.w $20
		dc.w $60
; ---------------------------------------------------------------------------

AnimateTiles_DPZ:
		lea	(Anim_Counters).w,a3
		moveq	#0,d1
		move.w	(Events_bg+$10).w,d1
		sub.w	(Camera_X_pos_BG_copy).w,d1
		andi.w	#$3F,d1
		cmp.b	1(a3),d1
		beq.s	loc_27530
		move.b	d1,1(a3)
		move.w	d1,d2
		andi.w	#7,d1
		ror.w	#6,d1
		move.l	d1,d5
		andi.w	#$38,d2
		move.w	d2,d0
		lsl.w	#4,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_27534(pc,d0.w),a4
		lea	(ArtUnc_AniDPZ__BG).l,a0
		move.w	#$2A60,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_27530
		jsr	(Add_To_DMA_Queue).l

loc_27530:
		addq.w	#2,a3
		bra.s	loc_27554
; ---------------------------------------------------------------------------
word_27534:	dc.w $200
		dc.w 0
		dc.w $1C0
		dc.w $40
		dc.w $180
		dc.w $80
		dc.w $140
		dc.w $C0
		dc.w $100
		dc.w $100
		dc.w $C0
		dc.w $140
		dc.w $80
		dc.w $180
		dc.w $40
		dc.w $1C0
; ---------------------------------------------------------------------------

loc_27554:
		moveq	#0,d1
		move.w	(Events_bg+$12).w,d1
		sub.w	(_unkEE70).w,d1
		andi.w	#$3F,d1
		cmp.b	1(a3),d1
		beq.s	loc_275B0
		move.b	d1,1(a3)
		move.w	d1,d2
		andi.w	#7,d1
		ror.w	#6,d1
		move.l	d1,d5
		andi.w	#$38,d2
		move.w	d2,d0
		lsl.w	#4,d2
		add.w	d2,d1
		lsr.w	#1,d0
		lea	word_27534(pc,d0.w),a4
		lea	(ArtUnc_AniDPZ__BG).l,a0
		move.w	#$2E60,d4
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		move.l	d5,d1
		add.l	a0,d1
		move.w	d4,d2
		move.w	(a4)+,d3
		beq.s	loc_275B0
		jsr	(Add_To_DMA_Queue).l

loc_275B0:
		addq.w	#2,a3
		bra.w	loc_275F0
; ---------------------------------------------------------------------------

AnimateTiles_Gumball:
		lea	(Anim_Counters).w,a3
		moveq	#0,d1
		move.w	(Events_bg+$10).w,d1
		sub.w	(Camera_Y_pos_BG_copy).w,d1
		andi.w	#$1F,d1
		cmp.b	1(a3),d1
		beq.s	locret_275EA
		move.b	d1,1(a3)
		add.w	d1,d1
		add.w	d1,d1
		addi.l	#ArtUnc_AniGumball,d1
		move.w	#$A80,d2
		move.w	#$40,d3
		jsr	(Add_To_DMA_Queue).l

locret_275EA:
		rts

; =============== S U B R O U T I N E =======================================


AnimateTiles_DoAniPLC:
		lea	(Anim_Counters).w,a3

loc_275F0:
		move.w	(a2)+,d6

AnimateTiles_DoAniPLC_Part2:
		subq.b	#1,(a3)
		bcc.s	loc_27638
		moveq	#0,d0
		move.b	1(a3),d0
		cmp.b	6(a2),d0
		bcs.s	loc_27608
		moveq	#0,d0
		move.b	d0,1(a3)

loc_27608:
		addq.b	#1,1(a3)
		move.b	(a2),(a3)
		bpl.s	loc_27616
		add.w	d0,d0
		move.b	9(a2,d0.w),(a3)

loc_27616:
		move.b	8(a2,d0.w),d0
		lsl.w	#5,d0
		move.w	4(a2),d2
		move.l	(a2),d1
		andi.l	#$FFFFFF,d1
		add.l	d0,d1
		moveq	#0,d3
		move.b	7(a2),d3
		lsl.w	#4,d3
		jsr	(Add_To_DMA_Queue).l

loc_27638:
		move.b	6(a2),d0
		tst.b	(a2)
		bpl.s	loc_27642
		add.b	d0,d0

loc_27642:
		addq.b	#1,d0
		andi.w	#$FE,d0
		lea	8(a2,d0.w),a2
		addq.w	#2,a3
		dbf	d6,AnimateTiles_DoAniPLC_Part2
		rts
; End of function AnimateTiles_DoAniPLC

; ---------------------------------------------------------------------------
AniPLC_AIZ1:	dc.w 2
		dc.l ArtUnc_AniAIZ1_0-$1000000
		dc.w $5CC0
		dc.b 9
		dc.b $C
		dc.b $3C,$4F
		dc.b $30,  5
		dc.b $18,  5
		dc.b  $C,  5
		dc.b   0,$4F
		dc.b  $C,  3
		dc.b $18,  3
		dc.b $24,  1
		dc.b $30,  1
		dc.l ArtUnc_AniAIZ1_0-$1000000
		dc.w $5E40
		dc.b 8
		dc.b $C
		dc.b $18,  5
		dc.b $24,  5
		dc.b $30,  5
		dc.b $3C,$27
		dc.b   0,  5
		dc.b  $C,  5
		dc.b $18,  5
		dc.b $24,  5
		dc.l ArtUnc_AniAIZ1_1-$1000000
		dc.w $5FC0
		dc.b 8
		dc.b 6
		dc.b   0,  7
		dc.b   6,  3
		dc.b  $C,  3
		dc.b $12,  3
		dc.b $18,  7
		dc.b $12,  3
		dc.b  $C,  3
		dc.b   6,  3
AniPLC_AIZ2:	dc.w 4
		dc.l ArtUnc_AniAIZ2_0+$3000000
		dc.w $1660
		dc.b 4
		dc.b $17
		dc.b   0
		dc.b $17
		dc.b $2E
		dc.b $45
		dc.l ArtUnc_AniAIZ2_1-$1000000
		dc.w $1940
		dc.b 9
		dc.b $C
		dc.b $3C,$4F
		dc.b $30,  5
		dc.b $18,  5
		dc.b  $C,  5
		dc.b   0,$4F
		dc.b  $C,  3
		dc.b $18,  3
		dc.b $24,  1
		dc.b $30,  1
		dc.l ArtUnc_AniAIZ2_1-$1000000
		dc.w $1AC0
		dc.b 8
		dc.b $C
		dc.b $18,  5
		dc.b $24,  5
		dc.b $30,  5
		dc.b $3C,$27
		dc.b   0,  5
		dc.b  $C,  5
		dc.b $18,  5
		dc.b $24,  5
		dc.l ArtUnc_AniAIZ2_2+$3000000
		dc.w $1C40
		dc.b 4
		dc.b 4
		dc.b   0
		dc.b   4
		dc.b   8
		dc.b  $C
		dc.l ArtUnc_AniAIZ2_3+$3000000
		dc.w $1CC0
		dc.b 4
		dc.b $18
		dc.b   0
		dc.b $18
		dc.b $30
		dc.b $48
AniPLC_HCZ1:	dc.w 1
		dc.l ArtUnc_AniHCZ1_0-$1000000
		dc.w $6180
		dc.b 3
		dc.b $24
		dc.b   0,  2
		dc.b $24,  1
		dc.b $48,  2
		dc.l ArtUnc_AniHCZ__1-$1000000
		dc.w $22A0
		dc.b $10
		dc.b 6
		dc.b   0,  4
		dc.b   6,  3
		dc.b  $C,  2
		dc.b $12,  1
		dc.b $18,  0
		dc.b $1E,  1
		dc.b $24,  2
		dc.b $2A,  3
		dc.b $30,  4
		dc.b $2A,  3
		dc.b $24,  2
		dc.b $1E,  1
		dc.b $18,  0
		dc.b $12,  1
		dc.b  $C,  2
		dc.b   6,  3
AniPLC_HCZ2:	dc.w 1
		dc.l ArtUnc_AniHCZ2_0+$3000000
		dc.w $4BC0
		dc.b 4
		dc.b $15
		dc.b   0
		dc.b $15
		dc.b $2A
		dc.b $3F
		dc.l ArtUnc_AniHCZ__1-$1000000
		dc.w $22A0
		dc.b $10
		dc.b 6
		dc.b   0,  4
		dc.b   6,  3
		dc.b  $C,  2
		dc.b $12,  1
		dc.b $18,  0
		dc.b $1E,  1
		dc.b $24,  2
		dc.b $2A,  3
		dc.b $30,  4
		dc.b $2A,  3
		dc.b $24,  2
		dc.b $1E,  1
		dc.b $18,  0
		dc.b $12,  1
		dc.b  $C,  2
		dc.b   6,  3
AniPLC_MGZ:	dc.w 1
		dc.l ArtUnc_AniMGZ__0+$9000000
		dc.w $4440
		dc.b 6
		dc.b $30
		dc.b   0
		dc.b $30
		dc.b $60
		dc.b $90
		dc.b $C0
		dc.b $F0
		dc.l ArtUnc_AniMGZ__1-$1000000
		dc.w $4A40
		dc.b 4
		dc.b 1
		dc.b   0,  7
		dc.b   1, $E
		dc.b   2,  7
		dc.b   1, $E
AniPLC_CNZ:	dc.w 6
		dc.l ArtUnc_AniCNZ__0+$3000000
		dc.w $5640
		dc.b $10
		dc.b 9
		dc.b   0
		dc.b $12
		dc.b $24
		dc.b $36
		dc.b $48
		dc.b $5A
		dc.b $6C
		dc.b $7E
		dc.b   9
		dc.b $1B
		dc.b $2D
		dc.b $3F
		dc.b $51
		dc.b $63
		dc.b $75
		dc.b $87
		dc.l ArtUnc_AniCNZ__0+$3000000
		dc.w $5760
		dc.b $10
		dc.b 9
		dc.b   9
		dc.b $1B
		dc.b $2D
		dc.b $3F
		dc.b $51
		dc.b $63
		dc.b $75
		dc.b $87
		dc.b   0
		dc.b $12
		dc.b $24
		dc.b $36
		dc.b $48
		dc.b $5A
		dc.b $6C
		dc.b $7E
		dc.l ArtUnc_AniCNZ__1+$3000000
		dc.w $5880
		dc.b $10
		dc.b $10
		dc.b   0
		dc.b $10
		dc.b $20
		dc.b $30
		dc.b $40
		dc.b $50
		dc.b $60
		dc.b $70
		dc.b $80
		dc.b $90
		dc.b $A0
		dc.b $B0
		dc.b $C0
		dc.b $D0
		dc.b $E0
		dc.b $F0
		dc.l ArtUnc_AniCNZ__2+$3000000
		dc.w $5A80
		dc.b 8
		dc.b $20
		dc.b   0
		dc.b $20
		dc.b $40
		dc.b $60
		dc.b $80
		dc.b $A0
		dc.b $C0
		dc.b $E0
		dc.l ArtUnc_AniCNZ__3+$3000000
		dc.w $5E80
		dc.b 8
		dc.b $10
		dc.b   0
		dc.b $10
		dc.b $20
		dc.b $30
		dc.b $40
		dc.b $50
		dc.b $60
		dc.b $70
		dc.l ArtUnc_AniCNZ__4+$3000000
		dc.w $6080
		dc.b 6
		dc.b 4
		dc.b   0
		dc.b   4
		dc.b   8
		dc.b   0
		dc.b   4
		dc.b   8
		dc.l ArtUnc_AniCNZ__5+$1000000
		dc.w $6500
		dc.b 4
		dc.b $14
		dc.b   0
		dc.b $14
		dc.b $28
		dc.b $3C
AniPLC_ICZ:	dc.w 0
		dc.l ArtUnc_AniICZ__0+$3000000
		dc.w $23C0
		dc.b 8
		dc.b 4
		dc.b   0
		dc.b   4
		dc.b   8
		dc.b  $C
		dc.b $10
		dc.b $14
		dc.b $18
		dc.b $1C
AniPLC_LBZ1:	dc.w 0
		dc.l ArtUnc_AniLBZ1_0+$2000000
		dc.w $6CA0
		dc.b 4
		dc.b 8
		dc.b   0
		dc.b   8
		dc.b $10
		dc.b $18
AniPLC_LBZSpec:	dc.w 1
		dc.l ArtUnc_AniLBZ2_0+$7000000
		dc.w $2E00
		dc.b 4
		dc.b 5
		dc.b   0
		dc.b   5
		dc.b  $A
		dc.b  $F
		dc.l ArtUnc_AniLBZ2_1+$7000000
		dc.w $2EA0
		dc.b 6
		dc.b 4
		dc.b   0
		dc.b   4
		dc.b   8
		dc.b  $C
		dc.b $10
		dc.b $14
AniPLC_LBZ2:	dc.w 1
		dc.l ArtUnc_AniLBZ2_0+$7000000
		dc.w $2E00
		dc.b 4
		dc.b 5
		dc.b   0
		dc.b   5
		dc.b  $A
		dc.b  $F
		dc.l ArtUnc_AniLBZ2_1+$7000000
		dc.w $2EA0
		dc.b 6
		dc.b 4
		dc.b   0
		dc.b   4
		dc.b   8
		dc.b  $C
		dc.b $10
		dc.b $14
AniPLC_LRZ1:
AniPLC_ALZ:	dc.w 0
		dc.l ArtUnc_AniALZ+$9000000
		dc.w $4700
		dc.b 3
		dc.b $10
		dc.b   0
		dc.b $10
		dc.b $20
		dc.b   0
AniPLC_BPZ:	dc.w 3
		dc.l ArtUnc_AniBPZ__0+$7000000
		dc.w $2300
		dc.b 6
		dc.b 7
		dc.b   0
		dc.b   7
		dc.b  $E
		dc.b $15
		dc.b $1C
		dc.b $23
		dc.l ArtUnc_AniBPZ__1+$5000000
		dc.w $23E0
		dc.b $A
		dc.b 8
		dc.b   0
		dc.b   8
		dc.b $10
		dc.b $18
		dc.b $20
		dc.b   0
		dc.b   8
		dc.b $10
		dc.b $18
		dc.b $20
		dc.l ArtUnc_AniBPZ__2+$2000000
		dc.w $24E0
		dc.b 2
		dc.b 3
		dc.b   0
		dc.b   3
		dc.l ArtUnc_AniBPZ__3+$4000000
		dc.w $2540
		dc.b 2
		dc.b 1
		dc.b   0
		dc.b   1
AniPLC_DPZ:	dc.w 0
		dc.l ArtUnc_AniDPZ+$B000000
		dc.w $28E0
		dc.b 5
		dc.b $C
		dc.b   0
		dc.b  $C
		dc.b $18
		dc.b $24
		dc.b $30
		dc.b   0
; ---------------------------------------------------------------------------

AnimateTiles_NULL3:
		rts

; =============== S U B R O U T I N E =======================================


Animate_Init:
		cmpi.w	#$100,(Current_zone_and_act).w
		bne.s	loc_278C4
		bsr.w	sub_26D0E

loc_278C4:
		cmpi.w	#$101,(Current_zone_and_act).w
		bne.s	loc_278D8
		move.b	#$20,(Anim_Counters+1).w
		move.b	#$40,(Anim_Counters+3).w

loc_278D8:
		cmpi.b	#3,(Current_zone).w
		bne.s	loc_27910
		move.b	#$40,(Anim_Counters+1).w
		move.b	#0,(Anim_Counters+2).w
		move.b	#0,(Anim_Counters+4).w
		move.b	#0,(Anim_Counters+6).w
		move.b	#2,(Anim_Counters+8).w
		move.b	#2,(Anim_Counters+$A).w
		move.b	#2,(Anim_Counters+$C).w
		move.b	#1,(Anim_Counters+$E).w

loc_27910:
		cmpi.w	#$600,(Current_zone_and_act).w
		bne.s	loc_2791E
		move.b	#$20,(Anim_Counters+3).w

loc_2791E:
		cmpi.w	#$601,(Current_zone_and_act).w
		bne.s	loc_27930
		bsr.w	sub_273B4
		move.b	#$10,(Anim_Counters+1).w

loc_27930:
		cmpi.w	#$900,(Current_zone_and_act).w
		bne.s	loc_27944
		move.b	#-1,(Anim_Counters+1).w
		move.b	#-1,(Anim_Counters+3).w

loc_27944:
		cmpi.w	#$1000,(Current_zone_and_act).w
		bne.s	locret_27958
		move.b	#$40,(Anim_Counters+1).w
		move.b	#$40,(Anim_Counters+3).w

locret_27958:
		rts
; End of function Animate_Init

; ---------------------------------------------------------------------------

Obj_LBZSpinLauncher:
		move.l	#Map_LBZSpinLauncher,$C(a0)
		move.w	#$42EA,$A(a0)
		move.b	#$20,7(a0)
		move.b	#$20,6(a0)
		ori.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.l	#loc_27986,(a0)

loc_27986:
		move.w	#$2B,d1
		move.w	#$10,d2
		move.w	$10(a0),d4
		lea	(byte_27B96).l,a2
		lea	$2E(a0),a4
		tst.b	(a4)
		beq.s	loc_279A4
		subq.b	#1,(a4)
		bra.s	loc_279C0
; ---------------------------------------------------------------------------

loc_279A4:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		jsr	(sub_1BADA).l
		cmpi.w	#-2,d4
		bne.s	loc_279BC
		bsr.s	sub_27A18

loc_279BC:
		movem.l	(sp)+,d1-d4

loc_279C0:
		addq.w	#1,a4
		tst.b	(a4)
		beq.s	loc_279CA
		subq.b	#1,(a4)
		bra.s	loc_279DE
; ---------------------------------------------------------------------------

loc_279CA:
		lea	(Player_2).w,a1
		moveq	#4,d6
		jsr	(sub_1BADA).l
		cmpi.w	#-2,d4
		bne.s	loc_279DE
		bsr.s	sub_27A18

loc_279DE:
		move.b	$2A(a0),d6
		andi.b	#$18,d6
		beq.s	loc_27A12
		move.b	d6,d0
		andi.b	#8,d0
		beq.s	loc_279FE
		lea	$2E(a0),a4
		lea	(Player_1).w,a1
		moveq	#3,d6
		bsr.w	sub_27AE2

loc_279FE:
		andi.b	#$10,d6
		beq.s	loc_27A12
		lea	$2F(a0),a4
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.w	sub_27AE2

loc_27A12:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_27A18:
		btst	#0,$2A(a0)
		bne.s	loc_27A80
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$18,d0
		cmpi.w	#$30,d0
		bcc.s	locret_27A7E
		move.w	$10(a0),d0
		addi.w	#$10,d0
		move.w	d0,$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	#0,$18(a1)
		move.w	#-$A00,$1A(a1)
		move.w	#$800,$1C(a1)
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		bset	#2,$2A(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		move.b	#$10,(a4)

locret_27A7E:
		rts
; ---------------------------------------------------------------------------

loc_27A80:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		neg.w	d0
		addi.w	#$18,d0
		cmpi.w	#$30,d0
		bcc.s	locret_27A7E
		move.w	$10(a0),d0
		subi.w	#$10,d0
		move.w	d0,$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	#0,$18(a1)
		move.w	#-$A00,$1A(a1)
		move.w	#$800,$1C(a1)
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		bset	#2,$2A(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		move.b	#$10,(a4)
		rts
; End of function sub_27A18


; =============== S U B R O U T I N E =======================================


sub_27AE2:
		btst	#0,$2A(a0)
		bne.s	loc_27B3E
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		cmpi.w	#$20,d0
		bcc.s	locret_27A7E
		move.w	$10(a0),d0
		addi.w	#$10,d0
		move.w	d0,$10(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.w	#0,$1C(a1)
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		bclr	#3,$2A(a1)
		bclr	#2,$2A(a1)
		move.b	#0,$20(a1)
		bclr	d6,$2A(a0)
		move.b	#$20,(a4)
		rts
; ---------------------------------------------------------------------------

loc_27B3E:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		neg.w	d0
		cmpi.w	#$20,d0
		bcc.w	locret_27A7E
		move.w	$10(a0),d0
		subi.w	#$10,d0
		move.w	d0,$10(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.w	#0,$1C(a1)
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		bclr	#3,$2A(a1)
		bclr	#2,$2A(a1)
		move.b	#0,$20(a1)
		bclr	d6,$2A(a0)
		move.b	#$20,(a4)
		rts
; End of function sub_27AE2

; ---------------------------------------------------------------------------
byte_27B96:	dc.b $11
		dc.b $11
		dc.b $11
		dc.b $11
		dc.b $11
		dc.b $11
		dc.b $11
		dc.b $12
		dc.b $13
		dc.b $14
		dc.b $15
		dc.b $16
		dc.b $17
		dc.b $18
		dc.b $19
		dc.b $1A
		dc.b $1B
		dc.b $1C
		dc.b $1D
		dc.b $1E
		dc.b $1F
		dc.b $20
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
		dc.b $21
Map_LBZSpinLauncher:
		include "Levels/LBZ/Misc Object Data/Map - Spin Launcher.asm"
; ---------------------------------------------------------------------------

Obj_LBZLoweringGrapple:
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.w	#$80,8(a0)
		move.b	#-$80,6(a0)
		move.w	$14(a0),$3C(a0)
		move.l	#Map_LBZLoweringGrapple,$C(a0)
		move.w	#$42EA,$A(a0)
		move.b	$2C(a0),d0
		andi.w	#$7F,d0
		lsl.w	#3,d0
		move.w	d0,$2E(a0)
		move.w	#2,$3A(a0)
		move.b	$2C(a0),d0
		bpl.s	loc_27C50
		move.w	$2E(a0),d0
		move.w	d0,$38(a0)
		move.b	#1,$36(a0)
		add.w	d0,$14(a0)
		lsr.w	#4,d0
		addq.w	#1,d0
		move.b	d0,$22(a0)

loc_27C50:
		move.l	#loc_27C56,(a0)

loc_27C56:
		tst.b	$36(a0)
		beq.s	loc_27C64
		tst.w	$30(a0)
		bne.s	loc_27C7A
		bra.s	loc_27C6A
; ---------------------------------------------------------------------------

loc_27C64:
		tst.w	$30(a0)
		beq.s	loc_27C7A

loc_27C6A:
		move.w	$38(a0),d2
		cmp.w	$2E(a0),d2
		beq.s	loc_27C9E
		add.w	$3A(a0),d2
		bra.s	loc_27C84
; ---------------------------------------------------------------------------

loc_27C7A:
		move.w	$38(a0),d2
		beq.s	loc_27C9E
		sub.w	$3A(a0),d2

loc_27C84:
		move.w	d2,$38(a0)
		move.w	$3C(a0),d0
		add.w	d2,d0
		move.w	d0,$14(a0)
		move.w	d2,d0
		beq.s	loc_27C9A
		lsr.w	#4,d0
		addq.w	#1,d0

loc_27C9A:
		move.b	d0,$22(a0)

loc_27C9E:
		lea	$30(a0),a2
		lea	(Player_1).w,a1
		move.w	(Ctrl_1).w,d0
		bsr.w	sub_27CC2
		lea	(Player_2).w,a1
		addq.w	#1,a2
		move.w	(Ctrl_2).w,d0
		bsr.w	sub_27CC2
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_27CC2:
		tst.b	(a2)
		beq.w	loc_27D3A
		tst.b	4(a1)
		bpl.s	loc_27D1E
		cmpi.b	#4,5(a1)
		bcc.s	loc_27D1E
		andi.b	#$70,d0
		beq.w	loc_27D2C
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$12,2(a2)
		andi.w	#$F00,d0
		beq.w	loc_27CF8
		move.b	#$3C,2(a2)

loc_27CF8:
		btst	#$A,d0
		beq.s	loc_27D04
		move.w	#-$200,$18(a1)

loc_27D04:
		btst	#$B,d0
		beq.s	loc_27D10
		move.w	#$200,$18(a1)

loc_27D10:
		move.w	#-$380,$1A(a1)
		bset	#1,$2A(a1)
		rts
; ---------------------------------------------------------------------------

loc_27D1E:
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$3C,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_27D2C:
		move.w	$14(a0),$14(a1)
		addi.w	#$94,$14(a1)
		rts
; ---------------------------------------------------------------------------

loc_27D3A:
		tst.b	2(a2)
		beq.s	loc_27D48
		subq.b	#1,2(a2)
		bne.w	locret_27DBA

loc_27D48:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$10,d0
		cmpi.w	#$20,d0
		bcc.w	locret_27DBA
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		subi.w	#$88,d1
		cmpi.w	#$18,d1
		bcc.w	locret_27DBA
		tst.b	$2E(a1)
		bmi.s	locret_27DBA
		cmpi.b	#4,5(a1)
		bcc.s	locret_27DBA
		tst.w	(Debug_placement_mode).w
		bne.s	locret_27DBA
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$94,$14(a1)
		move.b	#$14,$20(a1)
		move.b	#1,$2E(a1)
		move.b	#1,(a2)
		moveq	#signextendB(sfx_Switch),d0
		jsr	(Play_Sound_2).l

locret_27DBA:
		rts
; End of function sub_27CC2

; ---------------------------------------------------------------------------
Map_LBZLoweringGrapple:
		include "Levels/LBZ/Misc Object Data/Map - Lowering Grapple.asm"
; ---------------------------------------------------------------------------

Obj_MGZLBZSmashingPillar:
		move.l	#Map_LBZSmashingSpikes,$C(a0)
		move.w	#$4455,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$80,8(a0)
		cmpi.b	#2,(Current_zone).w
		bne.s	loc_2815C
		move.l	#Map_MGZSmashingPillar,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$20,7(a0)
		move.b	#$28,6(a0)
		move.w	#$280,8(a0)

loc_2815C:
		move.b	#4,4(a0)
		move.w	$14(a0),$30(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#3,d0
		move.w	d0,$38(a0)
		move.l	#loc_2817A,(a0)

loc_2817A:
		tst.b	$32(a0)
		bne.s	loc_281C6
		move.w	$1A(a0),d0
		addi.w	#$80,$1A(a0)
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$34(a0)
		move.w	$34(a0),d2
		cmp.w	$38(a0),d2
		bcs.s	loc_281DA
		clr.w	$1A(a0)
		move.w	$38(a0),$34(a0)
		move.b	#1,$32(a0)
		tst.b	4(a0)
		bpl.s	loc_281DA
		moveq	#signextendB(sfx_Crash),d0
		cmpi.b	#2,(Current_zone).w
		beq.s	loc_281BE
		moveq	#signextendB(sfx_MetalLand),d0

loc_281BE:
		jsr	(Play_Sound_2).l
		bra.s	loc_281DA
; ---------------------------------------------------------------------------

loc_281C6:
		move.w	$34(a0),d2
		beq.s	loc_281D4
		subq.w	#1,d2
		move.w	d2,$34(a0)
		bra.s	loc_281DA
; ---------------------------------------------------------------------------

loc_281D4:
		move.b	#0,$32(a0)

loc_281DA:
		move.w	$30(a0),d0
		add.w	$34(a0),d0
		move.w	d0,$14(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		swap	d6
		andi.w	#$C,d6
		bne.s	loc_28212
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_28212:
		move.b	d6,d0
		andi.b	#4,d0
		beq.s	loc_28222
		lea	(Player_1).w,a1
		bsr.w	sub_228EC

loc_28222:
		andi.b	#8,d6
		beq.s	loc_28230
		lea	(Player_2).w,a1
		bsr.w	sub_228EC

loc_28230:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_LBZSmashingSpikes:
		include "Levels/LBZ/Misc Object Data/Map - Smashing Spikes.asm"
Map_MGZSmashingPillar:
		include "Levels/MGZ/Misc Object Data/Map - Smashing Pillar.asm"
; ---------------------------------------------------------------------------

Obj_LBZGateLaser:
		move.l	#Map_LBZGateLaser,$C(a0)
		move.w	#$42EA,$A(a0)
		move.b	#$1C,7(a0)
		move.b	#4,6(a0)
		ori.b	#4,4(a0)
		move.w	#$180,8(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,d1
		andi.w	#$F,d0
		lsl.w	#3,d0
		add.w	$14(a0),d0
		move.w	d0,$2E(a0)
		lsr.b	#1,d1
		andi.w	#$78,d1
		addq.w	#8,d1
		move.w	d1,$32(a0)
		move.l	#loc_282D4,(a0)

loc_282D4:
		subq.w	#1,$30(a0)
		bpl.s	loc_28318
		move.w	$32(a0),$30(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_28318
		bsr.s	sub_2831E
		jsr	(Create_New_Sprite3).l
		bne.w	loc_28318
		bsr.s	sub_2831E
		move.w	#$80,8(a1)
		move.b	#2,$22(a1)
		move.b	#-$68,$28(a1)
		move.l	#loc_28364,(a1)
		moveq	#signextendB(sfx_EnergyZap),d0
		jsr	(Play_Sound_2).l

loc_28318:
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_2831E:
		move.l	#loc_2836A,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	$2E(a0),$2E(a1)
		move.l	#Map_LBZGateLaser,$C(a1)
		move.w	#$42EA,$A(a1)
		move.b	#$1C,7(a1)
		move.b	#4,6(a1)
		move.b	4(a0),4(a1)
		move.b	#1,$22(a1)
		move.w	#$180,8(a1)
		rts
; End of function sub_2831E

; ---------------------------------------------------------------------------

loc_28364:
		jsr	(Add_SpriteToCollisionResponseList).l

loc_2836A:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#1,d0
		bne.s	loc_2837A
		bchg	#1,4(a0)

loc_2837A:
		move.w	$14(a0),d0
		addq.w	#4,$14(a0)
		cmp.w	$2E(a0),d0
		bcs.s	loc_2838E
		move.w	#$7FF0,$10(a0)

loc_2838E:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_LBZGateLaser:
		include "Levels/LBZ/Misc Object Data/Map - Gate Laser.asm"
; ---------------------------------------------------------------------------

Obj_22_1:
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$280,8(a0)
		move.b	#-$29,$28(a0)
		move.l	#loc_283DC,(a0)

loc_283DC:
		tst.w	$30(a0)
		beq.s	loc_283F0
		subq.w	#1,$30(a0)
		bne.s	loc_28448
		move.w	#0,(Anim_Counters+4).w
		bra.s	loc_2846E
; ---------------------------------------------------------------------------

loc_283F0:
		tst.b	$29(a0)
		beq.s	loc_2846E
		clr.b	$29(a0)
		move.w	#$81,$30(a0)
		move.w	#1,(Anim_Counters+4).w
		btst	#0,$2C(a0)
		bne.s	locret_28446

; =============== S U B R O U T I N E =======================================


sub_2840E:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_28446
		move.l	#Obj_Flybot767,(a1)
		lea	(Player_1).w,a2
		move.w	$10(a2),$10(a1)
		move.w	$14(a2),$14(a1)
		move.b	$2C(a0),d0
		add.w	d0,d0
		add.w	d0,d0
		andi.w	#$C,d0
		move.l	word_2847A(pc,d0.w),d0
		add.w	d0,$14(a1)
		swap	d0
		add.w	d0,$10(a1)

locret_28446:
		rts
; End of function sub_2840E

; ---------------------------------------------------------------------------

loc_28448:
		btst	#0,$2C(a0)
		beq.s	loc_2845A
		cmpi.w	#$41,$30(a0)
		bne.s	loc_2845A
		bsr.s	sub_2840E

loc_2845A:
		move.w	$30(a0),d0
		andi.b	#$1F,d0
		bne.s	locret_2846C
		moveq	#signextendB(sfx_Alarm),d0
		jsr	(Play_Sound_2).l

locret_2846C:
		rts
; ---------------------------------------------------------------------------

loc_2846E:
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------
word_2847A:	dc.w $C0, $FFA0
		dc.w $C0, $FFA0
		dc.w $FF40, $FFA0
		dc.w $FF40, $FFA0
; ---------------------------------------------------------------------------

Obj_23_1:
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#-$80,6(a0)
		move.b	#0,8(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#3,d0
		move.w	d0,$2E(a0)
		move.l	#loc_284B4,(a0)

loc_284B4:
		move.w	$10(a0),d1
		move.w	d1,d2
		subi.w	#$10,d1
		addi.w	#$10,d2
		move.w	$14(a0),d3
		move.w	d3,d4
		sub.w	$2E(a0),d3
		add.w	$2E(a0),d4
		lea	(Player_1).w,a1
		bsr.s	sub_284E2
		lea	(Player_2).w,a1
		bsr.s	sub_284E2
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_284E2:
		move.w	$10(a1),d0
		cmp.w	d1,d0
		bcs.s	locret_28532
		cmp.w	d2,d0
		bcc.s	locret_28532
		move.w	$14(a1),d0
		cmp.w	d3,d0
		bcs.s	locret_28532
		cmp.w	d4,d0
		bcc.s	locret_28532
		cmpi.b	#$1A,$20(a1)
		beq.s	locret_28532
		move.w	#0,$18(a1)
		move.w	#$400,$1A(a1)
		move.w	#0,$1C(a1)
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		bclr	#3,$2A(a1)
		bclr	#2,$2A(a1)
		move.b	#$1A,$20(a1)

locret_28532:
		rts
; End of function sub_284E2

; ---------------------------------------------------------------------------

Obj_AutomaticTunnelDelayed:
		subq.b	#1,$24(a0)
		bmi.s	loc_2853C
		rts
; ---------------------------------------------------------------------------

loc_2853C:
		move.b	#0,$24(a0)

Obj_AutomaticTunnel:
		ori.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.w	#$280,8(a0)
		move.l	#loc_2855A,(a0)

loc_2855A:
		lea	(Player_1).w,a1
		lea	$30(a0),a4
		bsr.s	sub_28580
		lea	(Player_2).w,a1
		lea	$3A(a0),a4
		bsr.s	sub_28580
		move.b	$30(a0),d0
		add.b	$3A(a0),d0
		beq.s	loc_2857A
		rts
; ---------------------------------------------------------------------------

loc_2857A:
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_28580:
		moveq	#0,d0
		move.b	(a4),d0
		move.w	AutoTunnel_Index(pc,d0.w),d0
		jmp	AutoTunnel_Index(pc,d0.w)
; End of function sub_28580

; ---------------------------------------------------------------------------
AutoTunnel_Index:dc.w Obj_AutoTunnelInit-AutoTunnel_Index
		dc.w Obj_AutoTunnelRun-AutoTunnel_Index
		dc.w Obj_AutoTunnelLastMove-AutoTunnel_Index
; ---------------------------------------------------------------------------

Obj_AutoTunnelInit:
		tst.w	(Debug_placement_mode).w
		bne.w	locret_28644
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$10,d0
		cmpi.w	#$20,d0
		bcc.w	locret_28644
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		addi.w	#$18,d1
		cmpi.w	#$28,d1
		bcc.w	locret_28644
		tst.b	$2E(a1)
		bne.s	locret_28644
		addq.b	#2,(a4)
		move.b	#-$7F,$2E(a1)
		move.b	#2,$20(a1)
		clr.b	$40(a1)
		move.w	#$800,$1C(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		bclr	#5,$2A(a0)
		bclr	#5,$2A(a1)
		bset	#1,$2A(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		clr.b	1(a4)
		bsr.w	AutoTunnel_GetPath
		moveq	#signextendB(sfx_Roll),d0
		jsr	(Play_Sound_2).l
		btst	#5,$2C(a0)
		beq.s	locret_28644
		tst.b	(Current_act).w
		beq.s	locret_28644
		bclr	#4,$2B(a1)
		beq.s	loc_28636
		bclr	#0,$2B(a1)

loc_28636:
		bclr	#5,$2B(a1)
		beq.s	locret_28644
		bclr	#0,$2B(a1)

locret_28644:
		rts
; ---------------------------------------------------------------------------

Obj_AutoTunnelRun:
		subq.b	#1,2(a4)
		bhi.w	loc_286DA
		movea.l	6(a4),a2
		move.w	(a2)+,d4
		move.w	d4,$10(a1)
		move.w	(a2)+,d5
		move.w	d5,$14(a1)
		tst.b	$2C(a0)
		bpl.s	loc_28666
		subq.w	#8,a2

loc_28666:
		move.l	a2,6(a4)
		subq.w	#4,4(a4)
		beq.s	loc_2867C
		move.w	(a2)+,d4
		move.w	(a2)+,d5
		move.w	#$1000,d2
		bra.w	AutoTunnel_CalcSpeed
; ---------------------------------------------------------------------------

loc_2867C:
		addq.b	#2,(a4)
		move.b	#2,2(a4)
		andi.w	#$FFF,$14(a1)
		btst	#6,$2C(a0)
		bne.s	loc_2869E
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)

loc_2869E:
		moveq	#signextendB(sfx_TubeLauncher),d0
		jsr	(Play_Sound_2).l
		btst	#5,$2C(a0)
		beq.s	loc_286DA
		movea.l	a1,a2
		jsr	(Create_New_Sprite3).l
		bne.w	loc_286D8
		move.l	#Obj_TunnelExhaustControl,(a1)
		move.w	$10(a2),$10(a1)
		move.w	$14(a2),$14(a1)
		move.w	$18(a2),$18(a1)
		move.w	$1A(a2),$1A(a1)

loc_286D8:
		movea.l	a2,a1

loc_286DA:
		move.l	$10(a1),d2
		move.l	$14(a1),d3
		move.w	$18(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d2
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d2,$10(a1)
		move.l	d3,$14(a1)
		rts
; ---------------------------------------------------------------------------

Obj_AutoTunnelLastMove:
		subq.b	#1,2(a4)
		bne.s	loc_2870C
		clr.b	$2E(a1)
		clr.b	(a4)

loc_2870C:
		addi.w	#$38,$1A(a1)
		bra.s	loc_286DA

; =============== S U B R O U T I N E =======================================


AutoTunnel_GetPath:
		move.b	$2C(a0),d0
		bpl.s	loc_28748
		andi.w	#$1F,d0
		add.w	d0,d0
		add.w	d0,d0
		lea	(AutoTunnel_Data).l,a2
		movea.l	(a2,d0.w),a2
		move.w	(a2)+,d0
		subq.w	#4,d0
		move.w	d0,4(a4)
		lea	(a2,d0.w),a2
		move.w	(a2)+,d4
		move.w	d4,$10(a1)
		move.w	(a2)+,d5
		move.w	d5,$14(a1)
		subq.w	#8,a2
		bra.s	loc_2877E
; ---------------------------------------------------------------------------

loc_28748:
		cmpi.b	#$10,d0
		bne.s	loc_28758
		cmpi.w	#2,(Player_mode).w
		bne.s	loc_28758
		moveq	#0,d0

loc_28758:
		andi.w	#$1F,d0
		add.w	d0,d0
		add.w	d0,d0
		lea	(AutoTunnel_Data).l,a2
		movea.l	(a2,d0.w),a2
		move.w	(a2)+,4(a4)
		subq.w	#4,4(a4)
		move.w	(a2)+,d4
		move.w	d4,$10(a1)
		move.w	(a2)+,d5
		move.w	d5,$14(a1)

loc_2877E:
		move.l	a2,6(a4)
		move.w	(a2)+,d4
		move.w	(a2)+,d5
		move.w	#$1000,d2

AutoTunnel_CalcSpeed:
		moveq	#0,d0
		move.w	d2,d3
		move.w	d4,d0
		sub.w	$10(a1),d0
		bge.s	loc_2879A
		neg.w	d0
		neg.w	d2

loc_2879A:
		moveq	#0,d1
		move.w	d5,d1
		sub.w	$14(a1),d1
		bge.s	loc_287A8
		neg.w	d1
		neg.w	d3

loc_287A8:
		cmp.w	d0,d1
		bcs.s	loc_287DA
		moveq	#0,d1
		move.w	d5,d1
		sub.w	$14(a1),d1
		swap	d1
		divs.w	d3,d1
		moveq	#0,d0
		move.w	d4,d0
		sub.w	$10(a1),d0
		beq.s	loc_287C6
		swap	d0
		divs.w	d1,d0

loc_287C6:
		move.w	d0,$18(a1)
		move.w	d3,$1A(a1)
		tst.w	d1
		bpl.s	loc_287D4
		neg.w	d1

loc_287D4:
		move.w	d1,2(a4)
		rts
; ---------------------------------------------------------------------------

loc_287DA:
		moveq	#0,d0
		move.w	d4,d0
		sub.w	$10(a1),d0
		swap	d0
		divs.w	d2,d0
		moveq	#0,d1
		move.w	d5,d1
		sub.w	$14(a1),d1
		beq.s	loc_287F4
		swap	d1
		divs.w	d0,d1

loc_287F4:
		move.w	d1,$1A(a1)
		move.w	d2,$18(a1)
		tst.w	d0
		bpl.s	loc_28802
		neg.w	d0

loc_28802:
		move.w	d0,2(a4)
		rts
; End of function AutoTunnel_GetPath

; ---------------------------------------------------------------------------

Obj_TunnelExhaustControl:
		move.l	#Map_TunnelExhaust,$C(a0)
		move.w	#$42EA,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		ori.b	#4,4(a0)
		move.w	#$180,8(a0)
		tst.b	$2C(a0)
		beq.s	loc_2883E
		move.l	#Obj_TunnelExContinuous,(a0)
		bra.w	Obj_TunnelExContinuous
; ---------------------------------------------------------------------------

loc_2883E:
		move.w	#$3C,$30(a0)
		tst.w	$1A(a0)
		beq.s	loc_28854
		bmi.s	loc_28866
		move.w	#6,$26(a0)
		bra.s	loc_28866
; ---------------------------------------------------------------------------

loc_28854:
		move.w	#$C,$26(a0)
		tst.w	$18(a0)
		bmi.s	loc_28866
		move.w	#$12,$26(a0)

loc_28866:
		tst.b	(Current_act).w
		bne.s	loc_28876
		move.l	#Obj_TunnelExSmoke,(a0)
		bra.w	Obj_TunnelExSmoke
; ---------------------------------------------------------------------------

loc_28876:
		move.l	#Obj_TunnelExhaustControlMain,(a0)

Obj_TunnelExhaustControlMain:
		subq.w	#1,$2E(a0)
		bpl.s	loc_288F2
		move.w	#3,$2E(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_288F2
		move.l	#Obj_TunnelExhaustUp,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	#Map_TunnelExhaust,$C(a1)
		move.w	#$42EA,$A(a1)
		move.b	#$10,7(a1)
		move.b	#$10,6(a1)
		move.w	#$380,8(a1)
		move.w	$26(a0),d0
		cmpi.w	#6,d0
		bne.s	loc_288D4
		move.l	#Obj_TunnelExhaustDown,(a1)

loc_288D4:
		lea	word_28904(pc,d0.w),a2
		move.w	(a2)+,$18(a1)
		move.w	(a2)+,$1A(a1)
		move.b	(a2)+,4(a1)
		move.b	(a2)+,$22(a1)
		bne.s	loc_288F2
		move.l	#Obj_TunnelExhaustHorz,(a1)
		bsr.s	sub_2891C

loc_288F2:
		subq.w	#1,$30(a0)
		bpl.s	loc_288FE
		move.w	#$7FF0,$10(a0)

loc_288FE:
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------
word_28904:	dc.w 0
		dc.w $FA00
		dc.b $86
		dc.b 1
		dc.w 0
		dc.w $400
		dc.b $84
		dc.b 1
		dc.w $FA00
		dc.w 0
		dc.b $85
		dc.b 0
		dc.w $600
		dc.w 0
		dc.b $84
		dc.b 0

; =============== S U B R O U T I N E =======================================


sub_2891C:
		moveq	#0,d0
		move.w	$30(a0),d0
		subi.w	#$3C,d0
		neg.w	d0
		lsl.w	#4,d0
		tst.w	$18(a1)
		bmi.s	loc_28932
		neg.w	d0

loc_28932:
		add.w	d0,$18(a1)
		rts
; End of function sub_2891C

; ---------------------------------------------------------------------------

Obj_TunnelExhaustUp:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#1,d0
		bne.s	loc_28948
		bchg	#0,4(a0)

loc_28948:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bmi.s	loc_28960
		tst.w	$1A(a0)
		bmi.s	loc_28960
		move.w	#$7FF0,$10(a0)

loc_28960:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_TunnelExhaustDown:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#1,d0
		bne.s	loc_28976
		bchg	#0,4(a0)

loc_28976:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bmi.s	loc_28990
		cmpi.w	#$C00,$1A(a0)
		blt.s	loc_28990
		move.w	#$7FF0,$10(a0)

loc_28990:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_TunnelExhaustHorz:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#1,d0
		bne.s	loc_289A6
		bchg	#1,4(a0)

loc_289A6:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bmi.s	loc_289C0
		cmpi.w	#$600,$1A(a0)
		blt.s	loc_289C0
		move.w	#$7FF0,$10(a0)

loc_289C0:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_TunnelExContinuous:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#3,d0
		bne.s	loc_28A2A
		jsr	(Create_New_Sprite3).l
		bne.w	loc_28A2A
		move.l	#Obj_TunnelExhaustTimed,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	#Map_TunnelExhaust,$C(a1)
		move.w	#$42EA,$A(a1)
		move.b	#$10,7(a1)
		move.b	#$10,6(a1)
		move.w	#$380,8(a1)
		move.w	#0,$18(a1)
		move.w	#$400,$1A(a1)
		move.b	#-$7C,4(a1)
		move.b	#1,$22(a1)
		move.w	#$B,$2E(a1)

loc_28A2A:
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

Obj_TunnelExhaustTimed:
		subq.w	#1,$2E(a0)
		bpl.s	loc_28A42
		move.w	#$B,$2E(a0)
		move.w	#$7FF0,$10(a0)

loc_28A42:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#1,d0
		bne.s	loc_28A52
		bchg	#0,4(a0)

loc_28A52:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bmi.s	loc_28A64
		move.w	#$7FF0,$10(a0)

loc_28A64:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_TunnelExSmoke:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#3,d0
		bne.s	loc_28A9C
		jsr	(Create_New_Sprite3).l
		bne.w	loc_28A9C
		move.l	#Obj_FireShield_Dissipate,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	$18(a0),$18(a1)
		move.w	$1A(a0),$1A(a1)

loc_28A9C:
		subq.w	#1,$30(a0)
		bpl.s	loc_28AA8
		move.w	#$7FF0,$10(a0)

loc_28AA8:
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------
		move.l	#Map_TunnelExhaust,$C(a0)
		move.w	#$42EA,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		ori.b	#4,4(a0)
		move.w	#$180,8(a0)
		move.w	#$78,$30(a0)
		move.l	#loc_28AE0,(a0)

loc_28AE0:
		tst.b	$32(a0)
		bne.s	loc_28B5A
		subq.w	#1,$2E(a0)
		bpl.s	loc_28B5A
		move.w	#3,$2E(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_28B5A
		move.l	#loc_28B72,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	#Map_TunnelExhaust,$C(a1)
		move.w	#$42EA,$A(a1)
		move.b	#$10,7(a1)
		move.b	#$10,6(a1)
		move.w	#$380,8(a1)
		ori.b	#4,4(a1)
		bset	#0,4(a1)
		move.w	#-$800,$18(a1)
		moveq	#0,d0
		move.b	$2C(a0),d0
		addq.w	#1,d0
		add.w	d0,d0
		move.w	d0,$2E(a1)
		addi.w	#$10,$10(a1)
		move.b	#-$3A,$28(a1)

loc_28B5A:
		subq.w	#1,$30(a0)
		bpl.s	loc_28B6C
		move.w	#$78,$30(a0)
		eori.b	#-1,$32(a0)

loc_28B6C:
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

loc_28B72:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#1,d0
		bne.s	loc_28B82
		bchg	#1,4(a0)

loc_28B82:
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bpl.s	loc_28B94
		move.w	#$7FF0,$10(a0)

loc_28B94:
		move.b	$29(a0),d0
		beq.w	loc_28BB8
		lea	(Player_1).w,a1
		bclr	#0,$29(a0)
		beq.s	loc_28BAA
		bsr.s	sub_28BBE

loc_28BAA:
		lea	(Player_2).w,a1
		bclr	#1,$29(a0)
		beq.s	loc_28BB8
		bsr.s	sub_28BBE

loc_28BB8:
		jmp	(loc_19CC4).l

; =============== S U B R O U T I N E =======================================


sub_28BBE:
		tst.b	$2E(a1)
		bne.s	locret_28BFA
		move.w	$14(a0),$14(a1)
		cmpi.w	#-$1000,$18(a1)
		beq.s	locret_28BFA
		move.b	#$1A,$20(a1)
		clr.b	$40(a1)
		move.w	#0,$1C(a1)
		move.w	#-$1000,$18(a1)
		move.w	#0,$1A(a1)
		bclr	#5,$2A(a1)
		bset	#1,$2A(a1)

locret_28BFA:
		rts
; End of function sub_28BBE

; ---------------------------------------------------------------------------
Map_TunnelExhaust:
		include "Levels/LBZ/Misc Object Data/Map - (&LRZ) Tunnel Exhaust.asm"
; ---------------------------------------------------------------------------

Obj_LBZTubeElevator:
		move.l	#Map_LBZTubeElevator,$C(a0)
		move.w	#$2455,$A(a0)
		move.b	#$18,7(a0)
		move.b	#$30,6(a0)
		ori.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.w	$10(a0),$44(a0)
		move.w	$14(a0),$46(a0)
		btst	#6,$2C(a0)
		beq.s	loc_28C5E
		move.b	#0,$22(a0)
		move.b	#0,$26(a0)
		move.l	#Obj_LBZTubeElevatorClosed,(a0)
		bra.s	Obj_LBZTubeElevatorClosed
; ---------------------------------------------------------------------------

loc_28C5E:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_28CAA
		move.l	#loc_28D5E,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	#Map_LBZTubeElevator,$C(a1)
		move.w	#$2455,$A(a1)
		move.b	#$18,7(a1)
		move.b	#$18,6(a1)
		ori.b	#4,4(a1)
		move.w	#$280,8(a1)
		move.b	#6,$22(a1)
		move.w	a0,$42(a1)

loc_28CAA:
		move.b	#2,$22(a0)
		move.b	#2,$26(a0)
		move.l	#Obj_LBZTubeElevatorActive,(a0)

Obj_LBZTubeElevatorActive:
		bsr.w	LBZTubeElevator_Action
		lea	(Player_1).w,a1
		lea	$38(a0),a2
		bsr.w	LBZTubeElevator_CheckPlayer
		lea	(Player_2).w,a1
		addq.w	#1,a2
		bsr.w	LBZTubeElevator_CheckPlayer
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_LBZTubeElevatorClosed:
		lea	(Player_1).w,a1
		btst	#3,$2A(a1)
		beq.s	loc_28D00
		tst.b	$2E(a1)
		beq.s	loc_28D00
		movea.w	$42(a1),a2
		cmpi.l	#Obj_LBZTubeElevatorActive,(a2)
		bne.s	loc_28D00
		move.w	#$7FF0,$10(a0)

loc_28D00:
		lea	$2E(a0),a4
		addq.b	#2,1(a4)
		move.b	1(a4),d0
		cmpi.b	#-$50,d0
		bcs.s	loc_28D1C
		cmpi.b	#-$30,d0
		bcc.s	loc_28D1C
		addi.b	#$20,d0

loc_28D1C:
		move.b	d0,1(a4)
		jsr	(GetSineCosine).l
		cmpi.w	#$100,d0
		bne.s	loc_28D2E
		subq.w	#1,d0

loc_28D2E:
		asr.w	#6,d0
		move.w	$46(a0),d2
		sub.w	d0,d2
		move.w	d2,$14(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_28D5E:
		movea.w	$42(a0),a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		tst.b	4(a1)
		bpl.s	loc_28D88
		moveq	#0,d0
		move.b	$22(a1),d0
		move.b	byte_28D8E(pc,d0.w),d0
		ext.w	d0
		add.w	$10(a1),d0
		move.w	d0,$10(a0)

loc_28D88:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
byte_28D8E:	dc.b 0
		dc.b $F8
		dc.b $F8
		dc.b 0
		dc.b 8
		dc.b 8

; =============== S U B R O U T I N E =======================================


LBZTubeElevator_Action:
		lea	$2E(a0),a4
		movea.l	a0,a1
		moveq	#0,d0
		move.b	(a4),d0
		move.w	LBZTubeElevator_Index(pc,d0.w),d0
		jmp	LBZTubeElevator_Index(pc,d0.w)
; End of function LBZTubeElevator_Action

; ---------------------------------------------------------------------------
LBZTubeElevator_Index:dc.w LBZTubeElevator_WaitPlayer-LBZTubeElevator_Index
		dc.w LBZTubeElevator_StartSpin-LBZTubeElevator_Index
		dc.w LBZTubeElevator_MovePath-LBZTubeElevator_Index
		dc.w LBZTubeElevator_SlowSpin-LBZTubeElevator_Index
		dc.w LBZTubeElevator_WaitExit-LBZTubeElevator_Index
		dc.w LBZTubeElevator_EndSpin-LBZTubeElevator_Index
		dc.w LBZTubeElevator_Closed-LBZTubeElevator_Index
; ---------------------------------------------------------------------------

LBZTubeElevator_WaitPlayer:
		cmpi.w	#$200,$38(a0)
		beq.s	loc_28DC4
		cmpi.w	#$202,$38(a0)
		bne.s	loc_28DD0

loc_28DC4:
		addq.b	#2,(a4)
		moveq	#signextendB(sfx_Roll),d0
		jsr	(Play_Sound_2).l
		bra.s	LBZTubeElevator_StartSpin
; ---------------------------------------------------------------------------

loc_28DD0:
		addq.b	#2,1(a4)
		move.b	1(a4),d0
		cmpi.b	#-$50,d0
		bcs.s	loc_28DE8
		cmpi.b	#-$30,d0
		bcc.s	loc_28DE8
		addi.b	#$20,d0

loc_28DE8:
		move.b	d0,1(a4)
		jsr	(GetSineCosine).l
		cmpi.w	#$100,d0
		bne.s	loc_28DFA
		subq.w	#1,d0

loc_28DFA:
		asr.w	#6,d0
		move.w	$46(a0),d2
		sub.w	d0,d2
		move.w	d2,$14(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		move.w	#8,d2
		move.w	#$20,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull_Offset).l
		rts
; ---------------------------------------------------------------------------

LBZTubeElevator_StartSpin:
		move.w	$22(a0),d0
		sub.w	$3C(a0),d0
		bcc.s	loc_28E32
		addi.w	#$600,d0

loc_28E32:
		move.w	d0,$22(a0)
		move.w	$26(a0),d0
		sub.w	$3C(a0),d0
		bcc.s	loc_28E44
		addi.w	#$C00,d0

loc_28E44:
		move.w	d0,$26(a0)
		cmpi.w	#$180,$3C(a0)
		bcc.s	loc_28E8E
		addq.w	#2,$3C(a0)

loc_28E54:
		move.b	1(a4),d0
		addq.b	#2,1(a4)
		jsr	(GetSineCosine).l
		asr.w	#6,d0
		move.w	$46(a0),d2
		sub.w	d0,d2
		move.w	d2,$14(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		rts
; ---------------------------------------------------------------------------

loc_28E8E:
		addq.b	#2,(a4)
		move.w	#$180,$3C(a0)
		clr.b	1(a4)
		bsr.w	AutoTunnel_GetPath
		move.b	#1,(Fast_V_scroll_flag).w
		bra.s	loc_28E54
; ---------------------------------------------------------------------------

LBZTubeElevator_MovePath:
		move.w	$22(a0),d0
		sub.w	$3C(a0),d0
		bcc.s	loc_28EB4
		addi.w	#$600,d0

loc_28EB4:
		move.w	d0,$22(a0)
		move.w	$26(a0),d0
		sub.w	$3C(a0),d0
		bcc.s	loc_28EC6
		addi.w	#$C00,d0

loc_28EC6:
		move.w	d0,$26(a0)
		subq.b	#1,2(a4)
		bhi.w	loc_28F18
		movea.l	6(a4),a2
		move.w	(a2)+,d4
		move.w	d4,$10(a1)
		move.w	(a2)+,d5
		move.w	d5,$14(a1)
		move.l	a2,6(a4)
		subq.w	#4,4(a4)
		beq.s	loc_28EF8
		move.w	(a2)+,d4
		move.w	(a2)+,d5
		move.w	#$1000,d2
		bra.w	AutoTunnel_CalcSpeed
; ---------------------------------------------------------------------------

loc_28EF8:
		addq.b	#2,(a4)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.w	$14(a0),$46(a0)
		clr.b	1(a4)
		move.b	#0,(Fast_V_scroll_flag).w
		rts
; ---------------------------------------------------------------------------

loc_28F18:
		move.l	$10(a1),d2
		move.l	$14(a1),d3
		move.w	$18(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d2
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d2,$10(a1)
		move.l	d3,$14(a1)
		rts
; ---------------------------------------------------------------------------

LBZTubeElevator_SlowSpin:
		move.w	$22(a0),d0
		sub.w	$3C(a0),d0
		bcc.s	loc_28F4C
		addi.w	#$600,d0

loc_28F4C:
		move.w	d0,$22(a0)
		move.w	$26(a0),d0
		sub.w	$3C(a0),d0
		bcc.s	loc_28F5E
		addi.w	#$C00,d0

loc_28F5E:
		move.w	d0,$26(a0)
		cmpi.w	#8,$3C(a0)
		bne.s	loc_28F86
		cmpi.b	#2,$22(a0)
		bne.s	LBZTubeElevator_WaitExit
		addq.b	#2,(a4)
		move.w	$48(a0),d0
		beq.s	loc_28F84
		movea.w	d0,a2
		bclr	#7,(a2)
		clr.w	$48(a0)

loc_28F84:
		bra.s	LBZTubeElevator_WaitExit
; ---------------------------------------------------------------------------

loc_28F86:
		subq.w	#4,$3C(a0)

LBZTubeElevator_WaitExit:
		addq.b	#2,1(a4)
		move.b	1(a4),d0
		cmpi.b	#-$50,d0
		bcs.s	loc_28FA2
		cmpi.b	#-$30,d0
		bcc.s	loc_28FA2
		addi.b	#$20,d0

loc_28FA2:
		move.b	d0,1(a4)
		jsr	(GetSineCosine).l
		cmpi.w	#$100,d0
		bne.s	loc_28FB4
		subq.w	#1,d0

loc_28FB4:
		asr.w	#6,d0
		move.w	$46(a0),d2
		sub.w	d0,d2
		move.w	d2,$14(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		move.w	#8,d2
		move.w	#$20,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull_Offset).l
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	locret_28FEE
		addq.b	#2,(a4)
		move.b	#0,$24(a0)

locret_28FEE:
		rts
; ---------------------------------------------------------------------------

LBZTubeElevator_EndSpin:
		subq.b	#1,$24(a0)
		bpl.s	LBZTubeElevator_Closed
		move.b	#$F,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#6,$22(a0)
		bcs.s	loc_29010
		move.b	#0,$22(a0)
		addq.b	#2,(a4)

loc_29010:
		addq.b	#1,$26(a0)
		cmpi.b	#6,$26(a0)
		bcs.s	LBZTubeElevator_Closed
		move.b	#0,$26(a0)

LBZTubeElevator_Closed:
		addq.b	#2,1(a4)
		move.b	1(a4),d0
		cmpi.b	#-$50,d0
		bcs.s	loc_2903A
		cmpi.b	#-$30,d0
		bcc.s	loc_2903A
		addi.b	#$20,d0

loc_2903A:
		move.b	d0,1(a4)
		jsr	(GetSineCosine).l
		cmpi.w	#$100,d0
		bne.s	loc_2904C
		subq.w	#1,d0

loc_2904C:
		asr.w	#6,d0
		move.w	$46(a0),d2
		sub.w	d0,d2
		move.w	d2,$14(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		rts

; =============== S U B R O U T I N E =======================================


LBZTubeElevator_CheckPlayer:
		move.b	(a2),d0
		bne.w	loc_29128
		tst.w	(Debug_placement_mode).w
		bne.w	locret_29126
		cmpa.w	#-$4FB6,a1
		bne.s	loc_2909A
		btst	#4,$2A(a0)
		beq.s	loc_2909A
		tst.b	-1(a2)
		bne.s	loc_290D6

loc_2909A:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addq.w	#3,d0
		btst	#0,$2A(a0)
		beq.s	loc_290B0
		addi.w	#$A,d0

loc_290B0:
		cmpi.w	#$10,d0
		bcc.s	locret_29126
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		addi.w	#$20,d1
		cmpi.w	#$40,d1
		bcc.s	locret_29126
		tst.b	$2E(a1)
		bne.s	locret_29126
		btst	#1,$2A(a1)
		bne.s	locret_29126

loc_290D6:
		addq.b	#2,(a2)
		move.b	#-$7D,$2E(a1)
		move.b	#0,$20(a1)
		clr.b	$40(a1)
		move.w	#0,$1C(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		bclr	#5,$2A(a0)
		bclr	#5,$2A(a1)
		bclr	#1,$2A(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),d0
		addi.w	#$18,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		sub.w	d1,d0
		move.w	d0,$14(a1)

locret_29126:
		rts
; ---------------------------------------------------------------------------

loc_29128:
		subq.b	#2,d0
		bne.w	locret_291A2
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),d0
		addi.w	#$18,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		sub.w	d1,d0
		move.w	d0,$14(a1)
		cmpi.b	#8,$2E(a0)
		bne.s	loc_2915E
		bset	#0,$2A(a1)
		move.b	#0,$2E(a1)
		addq.b	#2,(a2)

loc_2915E:
		moveq	#0,d0
		move.b	$26(a0),d0
		move.b	LBZTubeElevator_PlayerFrame(pc,d0.w),$22(a1)
		andi.b	#-4,4(a1)
		move.b	LBZTubeElevator_PlayerFlip(pc,d0.w),d0
		or.b	d0,4(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		move.l	a2,-(sp)
		jsr	(Perform_Player_DPLC).l
		movea.l	(sp)+,a2
		rts
; ---------------------------------------------------------------------------
LBZTubeElevator_PlayerFrame:dc.b $55
		dc.b $59
		dc.b $5A
		dc.b $5B
		dc.b $5A
		dc.b $59
		dc.b $55
		dc.b $56
		dc.b $57
		dc.b $58
		dc.b $57
		dc.b $56
LBZTubeElevator_PlayerFlip:dc.b	0
		dc.b 1
		dc.b 1
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 1
		dc.b 1
		dc.b 0
		dc.b 0
		dc.b 0
; ---------------------------------------------------------------------------

locret_291A2:
		rts
; End of function LBZTubeElevator_CheckPlayer

; ---------------------------------------------------------------------------
Map_LBZTubeElevator:
		include "Levels/LBZ/Misc Object Data/Map - Tube Elevator.asm"
word_29316:	dc.w 1
		dc.w 3
		dc.w 7
		dc.w $F
		dc.w $1F
		dc.w $3F
		dc.w $7F
		dc.w $FF
		dc.w $1FF
		dc.w $3FF
		dc.w $7FF
		dc.w $FFF
		dc.w $1FFF
		dc.w $3FFF
		dc.w $7FFF
		dc.w $FFFF
; ---------------------------------------------------------------------------

Obj_AIZDisappearingFloor:
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.w	#$F,d0
		move.w	d0,d2
		add.w	d0,d0
		move.w	word_29316(pc,d0.w),$32(a0)
		subq.w	#3,d2
		bcc.s	loc_29350
		moveq	#0,d2

loc_29350:
		lsr.w	#4,d1
		andi.w	#$F,d1
		lsl.w	d2,d1
		move.w	d1,$34(a0)
		move.l	#Map_AIZDisappearingFloor,$C(a0)
		move.w	#$42E9,$A(a0)
		move.w	#$4001,$A(a0)
		move.b	#$20,7(a0)
		move.b	#$18,6(a0)
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.w	(Level_frame_counter).w,d0
		add.w	$34(a0),d0
		and.w	$32(a0),d0
		beq.s	loc_293B4
		subi.w	#$C8,d0
		bcc.s	loc_293B4
		neg.w	d0
		move.b	d0,$24(a0)
		move.b	#0,$23(a0)
		move.w	#$202,$20(a0)
		move.b	#5,$22(a0)

loc_293B4:
		move.l	#loc_293BA,(a0)

loc_293BA:
		move.w	(Level_frame_counter).w,d0
		add.w	$34(a0),d0
		and.w	$32(a0),d0
		bne.w	loc_293E4
		move.w	#$100,$20(a0)
		move.b	#0,$36(a0)
		tst.b	4(a0)
		bpl.s	loc_293E4
		moveq	#signextendB(sfx_WaterfallSplash),d0
		jsr	(Play_Sound_2).l

loc_293E4:
		lea	(Ani_AIZDisappearingFloor).l,a1
		jsr	(Animate_SpriteIrregularDelay).l
		cmpi.b	#5,$22(a0)
		bne.s	loc_2944A
		tst.b	$36(a0)
		bne.s	loc_2944A
		move.b	#1,$36(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2944A
		move.l	#loc_29450,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	#Map_AIZDisappearingFloor2,$C(a1)
		move.w	#$62E9,$A(a1)
		move.b	#$28,7(a1)
		move.b	#$20,6(a1)
		move.b	#4,4(a1)
		move.w	#$200,8(a1)
		move.w	a0,$3C(a1)

loc_2944A:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_29450:
		movea.w	$3C(a0),a1
		cmpi.b	#3,$22(a1)
		bne.s	loc_29462
		move.w	#$7FF0,$10(a0)

loc_29462:
		subq.b	#1,$24(a0)
		bpl.s	loc_29478
		move.b	#3,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#3,$22(a0)

loc_29478:
		move.w	#$2B,d1
		move.w	#$18,d2
		move.w	#$19,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Ani_AIZDisappearingFloor:
		include "Levels/AIZ/Misc Object Data/Anim - Disappearing Floor.asm"
Map_AIZDisappearingFloor:
		include "Levels/AIZ/Misc Object Data/Map - Disappearing Floor.asm"
; ---------------------------------------------------------------------------

Obj_CorkFloor:
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.l	#Map_AIZCorkFloor,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$28,6(a0)
		move.l	#word_29AF0,$3C(a0)
		cmpi.w	#1,(Current_zone_and_act).w
		bne.s	loc_29684
		move.l	#Map_AIZCorkFloor2,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$2C,6(a0)

loc_29684:
		cmpi.b	#3,(Current_zone).w
		bne.s	loc_296AE
		move.l	#Map_CNZCorkFloor,$C(a0)
		move.w	#$4430,$A(a0)
		move.b	#$20,7(a0)
		move.b	#$20,6(a0)
		move.l	#word_29B20,$3C(a0)

loc_296AE:
		cmpi.b	#5,(Current_zone).w
		bne.s	loc_29702
		move.l	#Map_ICZCorkFloor,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$24,6(a0)
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.b	#$F,d0
		move.b	d0,$22(a0)
		andi.b	#$10,d1
		bne.s	loc_296EE
		move.l	#loc_29914,(a0)
		bra.w	loc_29914
; ---------------------------------------------------------------------------

loc_296EE:
		move.l	#word_29AC4,$3C(a0)
		move.w	#$43B6,$A(a0)
		move.b	#$10,6(a0)

loc_29702:
		cmpi.b	#6,(Current_zone).w
		bne.s	loc_2972C
		move.l	#Map_LBZCorkFloor,$C(a0)
		move.w	#$4001,$A(a0)
		move.b	#$20,7(a0)
		move.b	#$20,6(a0)
		move.l	#word_29B20,$3C(a0)

loc_2972C:
		tst.b	$2C(a0)
		bne.s	loc_2973C
		move.l	#loc_29858,(a0)
		bra.w	loc_29858
; ---------------------------------------------------------------------------

loc_2973C:
		move.l	#loc_29742,(a0)

loc_29742:
		move.w	(Chain_bonus_counter).w,$38(a0)
		move.b	(Player_1+anim).w,$34(a0)
		move.b	(Player_2+anim).w,$36(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		move.b	$2A(a0),d0
		andi.w	#$18,d0
		bne.s	loc_29782

loc_2977C:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_29782:
		cmpi.b	#$18,d0
		bne.s	loc_297B0
		cmpi.b	#2,$34(a0)
		beq.s	loc_29798
		cmpi.b	#2,$36(a0)
		bne.s	loc_2977C

loc_29798:
		lea	(Player_1).w,a1
		move.b	$34(a0),d0
		bsr.s	sub_297C8
		lea	(Player_2).w,a1
		move.b	$36(a0),d0
		bsr.s	sub_297C8
		bra.w	loc_29818
; ---------------------------------------------------------------------------

loc_297B0:
		move.b	d0,d1
		andi.b	#8,d1
		beq.s	loc_29800
		cmpi.b	#2,$34(a0)
		bne.s	loc_2977C
		lea	(Player_1).w,a1
		bsr.s	sub_297CE
		bra.s	loc_29818

; =============== S U B R O U T I N E =======================================


sub_297C8:
		cmpi.b	#2,d0
		bne.s	loc_297EC
; End of function sub_297C8


; =============== S U B R O U T I N E =======================================


sub_297CE:
		bset	#2,$2A(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		move.w	#-$300,$1A(a1)

loc_297EC:
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		move.b	#2,5(a1)
		rts
; End of function sub_297CE

; ---------------------------------------------------------------------------

loc_29800:
		andi.b	#$10,d0
		beq.w	loc_2977C
		cmpi.b	#2,$36(a0)
		bne.w	loc_2977C
		lea	(Player_2).w,a1
		bsr.s	sub_297CE

loc_29818:
		move.w	$38(a0),(Chain_bonus_counter).w
		andi.b	#-$19,$2A(a0)
		movea.l	$3C(a0),a4
		addq.b	#1,$22(a0)
		move.l	#loc_29838,(a0)
		jsr	(sub_1F98C).l

loc_29838:
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		tst.b	4(a0)
		bpl.w	loc_29852
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_29852:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_29858:
		move.w	(Player_1+y_vel).w,$30(a0)
		move.w	(Player_2+y_vel).w,$32(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		swap	d6
		andi.w	#$C,d6
		bne.s	loc_29890
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_29890:
		move.b	d6,d0
		andi.b	#4,d0
		beq.s	loc_298B4
		lea	(Player_1).w,a1
		move.w	$30(a0),$1A(a1)
		andi.b	#8,d6
		beq.s	loc_298CC
		lea	(Player_2).w,a1
		move.w	$32(a0),$1A(a1)
		bra.s	loc_298CC
; ---------------------------------------------------------------------------

loc_298B4:
		andi.b	#8,d6
		beq.s	loc_298C6
		lea	(Player_2).w,a1
		move.w	$32(a0),$1A(a1)
		bra.s	loc_298CC
; ---------------------------------------------------------------------------

loc_298C6:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_298CC:
		btst	#3,$2A(a0)
		beq.s	loc_298E4
		lea	(Player_1).w,a1
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)

loc_298E4:
		btst	#4,$2A(a0)
		beq.s	loc_298FC
		lea	(Player_2).w,a1
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)

loc_298FC:
		movea.l	$3C(a0),a4
		addq.b	#1,$22(a0)
		move.l	#loc_29838,(a0)
		jsr	(sub_1F98C).l
		bra.w	loc_29838
; ---------------------------------------------------------------------------

loc_29914:
		move.w	(Chain_bonus_counter).w,$38(a0)
		move.b	(Player_1+anim).w,$34(a0)
		move.b	(Player_2+anim).w,$36(a0)
		lea	(byte_29AD4).l,a2
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	$10(a0),d4
		jsr	(sub_1BB7C).l
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_29956

loc_29950:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_29956:
		cmpi.b	#$18,d0
		bne.s	loc_299BA
		cmpi.b	#2,$34(a0)
		bne.s	loc_29972
		tst.b	$2C(a0)
		bmi.s	loc_299A2
		cmpi.b	#$E,(Player_1+top_solid_bit).w
		beq.s	loc_299A2

loc_29972:
		move.b	#$C,(Player_1+top_solid_bit).w
		move.b	#$D,(Player_1+lrb_solid_bit).w
		cmpi.b	#2,$36(a0)
		bne.s	loc_29994
		tst.b	$2C(a0)
		bmi.s	loc_299A2
		cmpi.b	#$E,(Player_2+top_solid_bit).w
		beq.s	loc_299A2

loc_29994:
		move.b	#$C,(Player_2+top_solid_bit).w
		move.b	#$D,(Player_2+lrb_solid_bit).w
		bra.s	loc_29950
; ---------------------------------------------------------------------------

loc_299A2:
		lea	(Player_1).w,a1
		move.b	$34(a0),d0
		bsr.s	sub_299F0
		lea	(Player_2).w,a1
		move.b	$36(a0),d0
		bsr.s	sub_299F0
		bra.w	loc_29A56
; ---------------------------------------------------------------------------

loc_299BA:
		move.b	d0,d1
		andi.b	#8,d1
		beq.s	loc_29A22
		cmpi.b	#2,$34(a0)
		bne.s	loc_299D8
		tst.b	$2C(a0)
		bmi.s	loc_299E8
		cmpi.b	#$E,(Player_1+top_solid_bit).w
		beq.s	loc_299E8

loc_299D8:
		move.b	#$C,(Player_1+top_solid_bit).w
		move.b	#$D,(Player_1+lrb_solid_bit).w
		bra.w	loc_29950
; ---------------------------------------------------------------------------

loc_299E8:
		lea	(Player_1).w,a1
		bsr.s	sub_299F6
		bra.s	loc_29A56

; =============== S U B R O U T I N E =======================================


sub_299F0:
		cmpi.b	#2,d0
		bne.s	loc_29A0E
; End of function sub_299F0


; =============== S U B R O U T I N E =======================================


sub_299F6:
		bset	#2,$2A(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)

loc_29A0E:
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		move.b	#2,5(a1)
		rts
; End of function sub_299F6

; ---------------------------------------------------------------------------

loc_29A22:
		andi.b	#$10,d0
		beq.w	loc_29950
		cmpi.b	#2,$36(a0)
		bne.s	loc_29A40
		tst.b	$2C(a0)
		bmi.s	loc_29A50
		cmpi.b	#$E,(Player_2+top_solid_bit).w
		beq.s	loc_29A50

loc_29A40:
		move.b	#$C,(Player_2+top_solid_bit).w
		move.b	#$D,(Player_2+lrb_solid_bit).w
		bra.w	loc_29950
; ---------------------------------------------------------------------------

loc_29A50:
		lea	(Player_2).w,a1
		bsr.s	sub_299F6

loc_29A56:
		move.w	$38(a0),(Chain_bonus_counter).w
		andi.b	#-$19,$2A(a0)
		lea	(word_29A8C).l,a4
		moveq	#0,d0
		move.b	$22(a0),d0
		addq.b	#1,$22(a0)
		move.l	d0,d1
		add.w	d0,d0
		add.w	d0,d0
		lea	(a4,d0.w),a4
		move.l	#loc_29838,(a0)
		jsr	(sub_1F98C).l
		bra.w	loc_29838
; ---------------------------------------------------------------------------
word_29A8C:	dc.w $FEC0,$F600
		dc.w  $140,$F600
		dc.w $FEE0,$F700
		dc.w  $120,$F700
		dc.w $FF00,$F800
		dc.w  $100,$F800
		dc.w $FF20,$F900
		dc.w   $E0,$F900
		dc.w $FF40,$FA00
		dc.w   $C0,$FA00
		dc.w $FF60,$FA80
		dc.w   $A0,$FA80
		dc.w $FF80,$FB00
		dc.w   $80,$FB00
word_29AC4:	dc.w $FE00,$FE00
		dc.w  $200,$FE00
		dc.w $FF00,$FF00
		dc.w  $100,$FF00
byte_29AD4:	dc.b $23, $23
		dc.b $22, $22
		dc.b $21, $21
		dc.b $20, $1F
		dc.b $1F, $1E
		dc.b $1E, $1D
		dc.b $1D, $1C
		dc.b $1B, $1B
		dc.b $1A, $1A
		dc.b $19, $19
		dc.b $17, $16
		dc.b $15, $15
		dc.b $14, $14
		dc.b $13, $13
word_29AF0:	dc.w $FF00,$FE00
		dc.w  $100,$FE00
		dc.w $FF20,$FE40
		dc.w   $E0,$FE40
		dc.w $FF40,$FE80
		dc.w   $C0,$FE80
		dc.w $FF60,$FEC0
		dc.w   $A0,$FEC0
		dc.w $FF80,$FF00
		dc.w   $80,$FF00
		dc.w $FFA0,$FF40
		dc.w   $60,$FF40
word_29B20:	dc.w $FC00,$FC00
		dc.w $FE00,$FC00
		dc.w  $200,$FC00
		dc.w  $400,$FC00
		dc.w $FC40,$FC40
		dc.w $FE40,$FC40
		dc.w  $1C0,$FC40
		dc.w  $3C0,$FC40
		dc.w $FC80,$FC80
		dc.w $FE80,$FC80
		dc.w  $180,$FC80
		dc.w  $380,$FC80
		dc.w $FCC0,$FCC0
		dc.w $FEC0,$FCC0
		dc.w  $140,$FCC0
		dc.w  $340,$FCC0
Map_AIZCorkFloor:
		include "Levels/AIZ/Misc Object Data/Map - Cork Floor.asm"
Map_AIZCorkFloor2:
		include "Levels/AIZ/Misc Object Data/Map - Cork Floor 2.asm"
Map_CNZCorkFloor:
		include "Levels/CNZ/Misc Object Data/Map - Cork Floor.asm"
Map_ICZCorkFloor:
		include "Levels/ICZ/Misc Object Data/Map - Cork Floor.asm"
Map_LBZCorkFloor:
		include "Levels/LBZ/Misc Object Data/Map - Cork Floor.asm"
; ---------------------------------------------------------------------------

Obj_AIZFlippingBridge:
		move.l	#Map_AIZFlippingBridge,$C(a0)
		move.w	#$42E9,$A(a0)
		move.b	#-$80,7(a0)
		move.b	#4,6(a0)
		move.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.w	$14(a0),$30(a0)
		move.l	#word_2A126,$32(a0)
		move.b	$2C(a0),d0
		bpl.s	loc_29FC2
		move.l	#word_2A1A6,$32(a0)

loc_29FC2:
		move.b	d0,d1
		andi.w	#$F,d0
		addi.w	#$10,d0
		move.b	d0,$37(a0)
		lsr.b	#4,d1
		andi.w	#7,d1
		move.b	d1,$25(a0)
		moveq	#1,d1
		btst	#0,$2A(a0)
		beq.s	loc_29FEA
		moveq	#-1,d1
		subq.b	#1,$37(a0)

loc_29FEA:
		move.b	d1,$36(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2A084
		move.l	#loc_2A0AC,(a1)
		move.l	#Map_AIZFlippingBridge,$C(a1)
		move.w	#$42E9,$A(a1)
		move.b	#4,4(a1)
		move.b	#-$80,7(a1)
		move.b	#$40,6(a1)
		move.w	#$200,8(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		bset	#6,4(a1)
		move.w	#8,$16(a1)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		subi.w	#$70,d3
		addi.w	#$20,d2
		move.w	#8,d4
		tst.b	$2C(a0)
		bpl.s	loc_2A05E
		subi.w	#$10,d2
		move.w	#4,d4

loc_2A05E:
		moveq	#0,d1
		lea	$18(a1),a2
		move.w	$16(a1),d6
		subq.w	#1,d6

loc_2A06A:
		move.w	d3,(a2)+
		move.w	d2,(a2)+
		move.w	d1,(a2)+
		addq.w	#2,d1
		andi.w	#$F,d1
		addi.w	#$20,d3
		sub.w	d4,d2
		dbf	d6,loc_2A06A
		move.w	a1,$3C(a0)

loc_2A084:
		move.l	#loc_2A08A,(a0)

loc_2A08A:
		movea.w	$3C(a0),a3
		bsr.w	sub_2A0B2
		moveq	#0,d1
		move.b	7(a0),d1
		movea.l	$32(a0),a2
		move.w	$10(a0),d4
		jsr	(sub_2A226).l
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

loc_2A0AC:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_2A0B2:
		subq.b	#1,$24(a0)
		bpl.s	locret_2A0FC
		move.b	$25(a0),$24(a0)
		lea	$1D(a3),a2
		move.w	$16(a3),d6
		subq.w	#1,d6
		move.b	$37(a0),d2
		move.b	$36(a0),d1
		bmi.s	loc_2A0FE

loc_2A0D2:
		add.b	d1,(a2)
		cmp.b	(a2),d2
		bhi.s	loc_2A0DC
		move.b	#0,(a2)

loc_2A0DC:
		addq.w	#6,a2
		dbf	d6,loc_2A0D2
		tst.b	4(a3)
		bpl.s	locret_2A0FC
		move.b	(Level_frame_counter+1).w,d0
		addq.b	#3,d0
		andi.b	#7,d0
		bne.s	locret_2A0FC
		moveq	#signextendB(sfx_GlideLand),d0
		jsr	(Play_Sound_2).l

locret_2A0FC:
		rts
; ---------------------------------------------------------------------------

loc_2A0FE:
		add.b	d1,(a2)
		bcs.s	loc_2A104
		move.b	d2,(a2)

loc_2A104:
		addq.w	#6,a2
		dbf	d6,loc_2A0FE
		tst.b	4(a3)
		bpl.s	locret_2A124
		move.b	(Level_frame_counter+1).w,d0
		addq.b	#3,d0
		andi.b	#7,d0
		bne.s	locret_2A124
		moveq	#signextendB(sfx_GlideLand),d0
		jsr	(Play_Sound_2).l

locret_2A124:
		rts
; End of function sub_2A0B2

; ---------------------------------------------------------------------------
word_2A126:	dc.w  $E4E4, $E4E4
		dc.w  $E4E4, $E4E4
		dc.w  $E4E4, $E4E4
		dc.w  $E4E4, $E4E4
		dc.w  $ECEC, $ECEC
		dc.w  $ECEC, $ECEC
		dc.w  $ECEC, $ECEC
		dc.w  $ECEC, $ECEC
		dc.w  $F4F4, $F4F4
		dc.w  $F4F4, $F4F4
		dc.w  $F4F4, $F4F4
		dc.w  $F4F4, $F4F4
		dc.w  $FCFC, $FCFC
		dc.w  $FCFC, $FCFC
		dc.w  $FCFC, $FCFC
		dc.w  $FCFC, $FCFC
		dc.w   $404,  $404
		dc.w   $404,  $404
		dc.w   $404,  $404
		dc.w   $404,  $404
		dc.w   $C0C,  $C0C
		dc.w   $C0C,  $C0C
		dc.w   $C0C,  $C0C
		dc.w   $C0C,  $C0C
		dc.w  $1414, $1414
		dc.w  $1414, $1414
		dc.w  $1414, $1414
		dc.w  $1414, $1414
		dc.w  $1C1C, $1C1C
		dc.w  $1C1C, $1C1C
		dc.w  $1C1C, $1C1C
		dc.w  $1C1C, $1C1C
word_2A1A6:	dc.w  $F4F4, $F4F4
		dc.w  $F4F4, $F4F4
		dc.w  $F4F4, $F4F4
		dc.w  $F4F4, $F4F4
		dc.w  $F8F8, $F8F8
		dc.w  $F8F8, $F8F8
		dc.w  $F8F8, $F8F8
		dc.w  $F8F8, $F8F8
		dc.w  $FCFC, $FCFC
		dc.w  $FCFC, $FCFC
		dc.w  $FCFC, $FCFC
		dc.w  $FCFC, $FCFC
		dc.w      0,     0
		dc.w      0,     0
		dc.w      0,     0
		dc.w      0,     0
		dc.w   $404,  $404
		dc.w   $404,  $404
		dc.w   $404,  $404
		dc.w   $404,  $404
		dc.w   $808,  $808
		dc.w   $808,  $808
		dc.w   $808,  $808
		dc.w   $808,  $808
		dc.w   $C0C,  $C0C
		dc.w   $C0C,  $C0C
		dc.w   $C0C,  $C0C
		dc.w   $C0C,  $C0C
		dc.w  $1010, $1010
		dc.w  $1010, $1010
		dc.w  $1010, $1010
		dc.w  $1010, $1010

; =============== S U B R O U T I N E =======================================


sub_2A226:
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		bsr.s	sub_2A23C
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		addq.b	#1,d6
; End of function sub_2A226


; =============== S U B R O U T I N E =======================================


sub_2A23C:
		btst	d6,$2A(a0)
		beq.s	loc_2A292
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_2A25E
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_2A25E
		cmp.w	d2,d0
		bcs.s	loc_2A272

loc_2A25E:
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_2A272:
		lsr.w	#5,d0
		add.w	d0,d0
		move.w	d0,d3
		add.w	d0,d0
		add.w	d3,d0
		move.b	$1D(a3,d0.w),d0
		cmpi.b	#5,d0
		bcs.s	loc_2A25E
		move.w	d4,d2
		jsr	(SolidObjSloped2).l
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_2A292:
		tst.w	$1A(a1)
		bmi.s	locret_2A30E
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	locret_2A30E
		add.w	d1,d1
		cmp.w	d1,d0
		bcc.s	locret_2A30E
		btst	#0,4(a0)
		beq.s	loc_2A2B6
		not.w	d0
		add.w	d1,d0

loc_2A2B6:
		move.w	d0,d4
		lsr.w	#1,d0
		move.b	(a2,d0.w),d3
		ext.w	d3
		move.w	$14(a0),d0
		sub.w	d3,d0
		move.w	$14(a1),d2
		move.b	$1E(a1),d1
		ext.w	d1
		add.w	d2,d1
		addq.w	#4,d1
		sub.w	d1,d0
		bhi.s	locret_2A30E
		cmpi.w	#-$10,d0
		bcs.s	locret_2A30E
		tst.b	$2E(a1)
		bne.s	locret_2A30E
		cmpi.b	#6,5(a1)
		bcc.s	locret_2A30E
		lsr.w	#5,d4
		add.w	d4,d4
		move.w	d4,d1
		add.w	d4,d4
		add.w	d1,d4
		move.b	$1D(a3,d4.w),d4
		cmpi.b	#5,d4
		bcs.s	locret_2A30E
		add.w	d0,d2
		addq.w	#3,d2
		move.w	d2,$14(a1)
		jmp	(RideObject_SetRide).l
; ---------------------------------------------------------------------------

locret_2A30E:
		rts
; End of function sub_2A23C

; ---------------------------------------------------------------------------
Map_AIZFlippingBridge:
		include "Levels/AIZ/Misc Object Data/Map - Flipping Bridge.asm"
; ---------------------------------------------------------------------------

Obj_AIZCollapsingLogBridge:
		move.b	$2C(a0),d0
		bmi.w	loc_2A470
		move.b	d0,$36(a0)
		addi.b	#$30,d0
		move.b	d0,$35(a0)
		move.b	#8,$37(a0)
		move.l	#Map_AIZCollapsingLogBridge,$C(a0)
		move.w	#$42E9,$A(a0)
		move.b	#$5A,7(a0)
		move.b	#8,6(a0)
		move.b	#4,4(a0)
		move.w	#$200,8(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2A466
		move.l	#loc_2A57C,(a1)
		move.l	#Map_AIZCollapsingLogBridge,$C(a1)
		move.w	#$42E9,$A(a1)
		ori.b	#4,4(a1)
		move.b	#$5A,7(a1)
		move.b	#8,6(a1)
		move.w	#$200,8(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		bset	#6,4(a1)
		move.w	#6,$16(a1)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		subi.w	#$4B,d3
		lea	$18(a1),a2
		move.w	$16(a1),d6
		subq.w	#1,d6
		move.w	#1,4(a2)

loc_2A44E:
		move.w	d3,(a2)+
		move.w	d2,(a2)+
		addq.w	#2,a2
		addi.w	#$1E,d3
		dbf	d6,loc_2A44E
		move.w	#2,-2(a2)
		move.w	a1,$3C(a0)

loc_2A466:
		move.l	#loc_2A538,(a0)
		bra.w	loc_2A538
; ---------------------------------------------------------------------------

loc_2A470:
		andi.b	#$7F,d0
		move.b	d0,$36(a0)
		addi.b	#$30,d0
		move.b	d0,$35(a0)
		move.b	#8,$37(a0)
		move.l	#Map_AIZDrawBridgeFire,$C(a0)
		move.w	#-$3D17,$A(a0)
		move.b	#$60,7(a0)
		move.b	#8,6(a0)
		move.b	#4,4(a0)
		move.w	#$200,8(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2A52E
		move.l	#loc_2A57C,(a1)
		move.l	#Map_AIZDrawBridgeFire,$C(a1)
		move.w	#-$3D17,$A(a1)
		ori.b	#4,4(a1)
		move.b	#$60,7(a1)
		move.b	#8,6(a1)
		move.w	#$200,8(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		bset	#6,4(a1)
		move.w	#6,$16(a1)
		move.w	$14(a0),d2
		move.w	$10(a0),d3
		subi.w	#$50,d3
		lea	$18(a1),a2
		move.w	$16(a1),d6
		subq.w	#1,d6
		move.w	#1,4(a2)

loc_2A516:
		move.w	d3,(a2)+
		move.w	d2,(a2)+
		addq.w	#2,a2
		addi.w	#$20,d3
		dbf	d6,loc_2A516
		move.w	#2,-2(a2)
		move.w	a1,$3C(a0)

loc_2A52E:
		move.l	#loc_2A5AA,(a0)
		bra.w	loc_2A5AA
; ---------------------------------------------------------------------------

loc_2A538:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_2A560
		move.b	$35(a0),$34(a0)
		move.b	$36(a0),d2
		move.b	$37(a0),d3
		move.l	#loc_2A638,(a0)
		move.l	#loc_2A582,d4
		bsr.w	sub_2A6C6

loc_2A560:
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#0,d3
		move.b	6(a0),d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

loc_2A57C:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2A582:
		tst.b	$34(a0)
		beq.s	loc_2A592
		subq.b	#1,$34(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2A592:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bpl.s	loc_2A5A4
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2A5A4:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2A5AA:
		tst.b	(_unkFAA2).w
		beq.s	loc_2A5CE
		move.b	$35(a0),$34(a0)
		move.b	$36(a0),d2
		move.b	$37(a0),d3
		move.l	#loc_2A638,(a0)
		move.l	#loc_2A5EA,d4
		bsr.w	sub_2A6C6

loc_2A5CE:
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#0,d3
		move.b	6(a0),d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

loc_2A5EA:
		tst.b	$34(a0)
		beq.s	loc_2A602
		subq.b	#1,$34(a0)
		bne.s	loc_2A5FC
		move.b	#3,$22(a0)

loc_2A5FC:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2A602:
		subq.b	#1,$24(a0)
		bpl.s	loc_2A620
		move.b	#3,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#8,$22(a0)
		bcs.s	loc_2A620
		move.b	#3,$22(a0)

loc_2A620:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bpl.s	loc_2A632
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2A632:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2A638:
		subq.b	#1,$34(a0)
		bne.s	loc_2A644
		move.l	#loc_2AB1A,(a0)

loc_2A644:
		move.b	$34(a0),d3
		moveq	#0,d1
		move.b	7(a0),d1
		lea	(Player_1).w,a1
		moveq	#3,d6
		bsr.s	sub_2A664
		lea	(Player_2).w,a1
		moveq	#4,d6
		bsr.s	sub_2A664
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_2A664:
		btst	d6,$2A(a0)
		beq.s	locret_2A6C4
		move.w	d1,d2
		add.w	d2,d2
		btst	#1,$2A(a1)
		bne.s	loc_2A6A8
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_2A6A8
		cmp.w	d2,d0
		bcc.s	loc_2A6A8
		btst	#0,$2A(a0)
		beq.s	loc_2A692
		neg.w	d0
		add.w	d2,d0

loc_2A692:
		lsr.w	#5,d0
		add.w	d0,d0
		add.w	d0,d0
		add.w	d0,d0
		add.b	$36(a0),d0
		move.b	$35(a0),d2
		sub.b	d0,d2
		cmp.b	d2,d3
		bhi.s	locret_2A6C4

loc_2A6A8:
		bclr	d6,$2A(a0)
		bclr	#3,$2A(a1)
		bclr	#5,$2A(a1)
		bset	#1,$2A(a1)
		move.b	#1,$21(a1)

locret_2A6C4:
		rts
; End of function sub_2A664


; =============== S U B R O U T I N E =======================================


sub_2A6C6:
		movea.w	$3C(a0),a3
		lea	$18(a3),a2
		move.w	$16(a3),d6
		subq.w	#1,d6
		bclr	#6,4(a3)
		movea.l	a3,a1
		bra.s	loc_2A6E6
; ---------------------------------------------------------------------------

loc_2A6DE:
		jsr	(Create_New_Sprite3).l
		bne.s	loc_2A724

loc_2A6E6:
		move.l	d4,(a1)
		move.l	$C(a3),$C(a1)
		move.b	4(a3),4(a1)
		move.w	$A(a3),$A(a1)
		move.w	8(a3),8(a1)
		move.b	7(a3),7(a1)
		move.b	6(a3),6(a1)
		move.w	(a2)+,$10(a1)
		move.w	(a2)+,$14(a1)
		move.w	(a2)+,d0
		move.b	d0,$22(a1)
		move.b	d2,$34(a1)
		add.b	d3,d2
		dbf	d6,loc_2A6DE

loc_2A724:
		move.w	#0,$18(a3)
		move.w	#0,$1A(a3)
		moveq	#signextendB(sfx_Collapse),d0
		jmp	(Play_Sound_2).l
; End of function sub_2A6C6

; ---------------------------------------------------------------------------
Map_AIZCollapsingLogBridge:
		include "Levels/AIZ/Misc Object Data/Map - Collapsing Log Bridge.asm"
Map_AIZDrawBridgeFire:
		include "Levels/AIZ/Misc Object Data/Map - Draw Bridge Fire.asm"
; ---------------------------------------------------------------------------

Obj_AIZDrawBridge:
		move.l	#Map_AIZDrawBridge,$C(a0)
		move.w	#-$3D17,$A(a0)
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#8,7(a0)
		move.b	#$60,6(a0)
		ori.b	#-$80,$2A(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		subi.w	#$68,$14(a0)
		move.b	#-$40,$38(a0)
		moveq	#-$10,d4
		btst	#1,$2A(a0)
		beq.s	loc_2A84E
		addi.w	#$D0,$14(a0)
		move.b	#$40,$38(a0)
		neg.w	d4

loc_2A84E:
		move.w	#$200,d1
		btst	#0,$2A(a0)
		beq.s	loc_2A85C
		neg.w	d1

loc_2A85C:
		move.w	d1,$34(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2A92E
		move.l	#loc_2AA48,(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		move.w	8(a0),8(a1)
		move.b	#4,4(a1)
		bset	#6,4(a1)
		move.b	#$40,7(a1)
		move.b	#$40,6(a1)
		move.w	$30(a0),d2
		move.w	$32(a0),d3
		moveq	#8,d1
		move.w	d1,$16(a1)
		subq.w	#1,d1
		lea	$18(a1),a2

loc_2A8AE:
		add.w	d4,d3
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		move.w	#1,(a2)+
		dbf	d1,loc_2A8AE
		move.w	$30(a1),$10(a1)
		move.w	$32(a1),$14(a1)
		move.w	a1,$3C(a0)
		jsr	(Create_New_Sprite3).l
		bne.s	loc_2A92E
		move.l	#loc_2AA48,(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		move.w	8(a0),8(a1)
		move.b	#4,4(a1)
		bset	#6,4(a1)
		move.b	#$40,7(a1)
		move.b	#$40,6(a1)
		moveq	#4,d1
		move.w	d1,$16(a1)
		subq.w	#1,d1
		lea	$18(a1),a2

loc_2A910:
		add.w	d4,d3
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		move.w	#1,(a2)+
		dbf	d1,loc_2A910
		move.w	$18(a1),$10(a1)
		move.w	$1A(a1),$14(a1)
		move.w	a1,$3E(a0)

loc_2A92E:
		move.l	#loc_2A934,(a0)

loc_2A934:
		tst.b	(_unkFAA3).w
		beq.s	loc_2A978
		tst.b	$36(a0)
		bne.s	loc_2A978
		move.b	#1,$36(a0)
		moveq	#signextendB(sfx_FlipBridge),d0
		jsr	(Play_Sound_2).l
		move.w	#$68,d1
		btst	#0,$2A(a0)
		beq.s	loc_2A95C
		neg.w	d1

loc_2A95C:
		move.w	$30(a0),$10(a0)
		move.w	$32(a0),$14(a0)
		add.w	d1,$10(a0)
		move.b	#$60,7(a0)
		move.b	#8,6(a0)

loc_2A978:
		tst.b	$36(a0)
		beq.s	loc_2A9AA
		tst.b	$38(a0)
		beq.s	loc_2A98C
		cmpi.b	#-$80,$38(a0)
		bne.s	loc_2A9A2

loc_2A98C:
		move.b	#0,$36(a0)
		moveq	#signextendB(sfx_FlipBridge),d0
		jsr	(Play_Sound_2).l
		move.l	#loc_2A9B0,(a0)
		bra.s	loc_2A9AA
; ---------------------------------------------------------------------------

loc_2A9A2:
		move.w	$34(a0),d0
		add.w	d0,$38(a0)

loc_2A9AA:
		bsr.w	sub_2AA4E
		bra.s	loc_2A9CC
; ---------------------------------------------------------------------------

loc_2A9B0:
		tst.b	(_unkFAA9).w
		beq.s	loc_2A9CC
		move.l	#loc_2AB1A,(a0)
		move.b	#$E,$34(a0)
		move.l	#loc_2AAF2,d4
		bra.w	loc_2AB60
; ---------------------------------------------------------------------------

loc_2A9CC:
		move.w	#$13,d1
		move.w	#$60,d2
		move.w	#$61,d3
		move.b	$38(a0),d0
		beq.s	loc_2A9EA
		cmpi.b	#$40,d0
		beq.s	loc_2A9F6
		cmpi.b	#-$40,d0
		beq.s	loc_2A9F6

loc_2A9EA:
		move.w	#$6B,d1
		move.w	#8,d2
		move.w	#8,d3

loc_2A9F6:
		move.w	$10(a0),d4
		jsr	(SolidObjectFull2).l
		move.w	$30(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_2AA1A
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2AA1A:
		move.w	$3C(a0),d0
		beq.s	loc_2AA28
		movea.w	d0,a1
		jsr	(Delete_Referenced_Sprite).l

loc_2AA28:
		move.w	$3E(a0),d0
		beq.s	loc_2AA36
		movea.w	d0,a1
		jsr	(Delete_Referenced_Sprite).l

loc_2AA36:
		move.w	$48(a0),d0
		beq.s	loc_2AA42
		movea.w	d0,a2
		bclr	#7,(a2)

loc_2AA42:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2AA48:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_2AA4E:
		tst.b	$36(a0)
		beq.w	locret_2AAF0
		moveq	#0,d0
		moveq	#0,d1
		move.b	$38(a0),d0
		jsr	(GetSineCosine).l
		move.w	$32(a0),d2
		move.w	$30(a0),d3
		moveq	#0,d6
		movea.w	$3C(a0),a1
		move.w	$16(a1),d6
		subq.w	#1,d6
		bcs.s	locret_2AAF0
		swap	d0
		swap	d1
		asr.l	#4,d0
		asr.l	#4,d1
		move.l	d0,d4
		move.l	d1,d5
		lea	$18(a1),a2

loc_2AA8A:
		movem.l	d4-d5,-(sp)
		swap	d4
		swap	d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d5,(a2)+
		move.w	d4,(a2)+
		movem.l	(sp)+,d4-d5
		add.l	d0,d4
		add.l	d1,d5
		addq.w	#2,a2
		dbf	d6,loc_2AA8A
		move.w	$30(a1),$10(a1)
		move.w	$32(a1),$14(a1)
		moveq	#0,d6
		movea.w	$3E(a0),a1
		move.w	$16(a1),d6
		subq.w	#1,d6
		bcs.s	locret_2AAF0
		lea	$18(a1),a2

loc_2AAC6:
		movem.l	d4-d5,-(sp)
		swap	d4
		swap	d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d5,(a2)+
		move.w	d4,(a2)+
		movem.l	(sp)+,d4-d5
		add.l	d0,d4
		add.l	d1,d5
		addq.w	#2,a2
		dbf	d6,loc_2AAC6
		move.w	$18(a1),$10(a1)
		move.w	$1A(a1),$14(a1)

locret_2AAF0:
		rts
; End of function sub_2AA4E

; ---------------------------------------------------------------------------

loc_2AAF2:
		tst.b	$34(a0)
		beq.s	loc_2AB02
		subq.b	#1,$34(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2AB02:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bpl.s	loc_2AB14
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2AB14:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2AB1A:
		tst.b	$34(a0)
		beq.s	loc_2AB26
		subq.b	#1,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_2AB26:
		bclr	#3,$2A(a0)
		beq.s	loc_2AB40
		bclr	#3,(Player_1+status).w
		bset	#1,(Player_1+status).w
		move.b	#$1B,(Player_1+anim).w

loc_2AB40:
		bclr	#4,$2A(a0)
		beq.s	loc_2AB5A
		bclr	#3,(Player_2+status).w
		bset	#1,(Player_2+status).w
		move.b	#$1B,(Player_2+anim).w

loc_2AB5A:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2AB60:
		move.w	$3C(a0),d0
		beq.s	loc_2AB6A
		movea.w	d0,a3
		bsr.s	sub_2AB76

loc_2AB6A:
		move.w	$3E(a0),d0
		beq.s	locret_2AB74
		movea.w	d0,a3
		bsr.s	sub_2AB76

locret_2AB74:
		rts

; =============== S U B R O U T I N E =======================================


sub_2AB76:
		lea	(byte_2AC10).l,a4
		lea	$18(a3),a2
		move.w	$16(a3),d6
		subq.w	#1,d6
		bclr	#6,4(a3)
		movea.l	a3,a1
		bra.s	loc_2AB98
; ---------------------------------------------------------------------------

loc_2AB90:
		jsr	(Create_New_Sprite3).l
		bne.s	loc_2ABFC

loc_2AB98:
		move.l	d4,(a1)
		move.l	$C(a3),$C(a1)
		move.b	4(a3),4(a1)
		move.w	$A(a3),$A(a1)
		move.w	8(a3),8(a1)
		move.b	7(a3),7(a1)
		move.b	6(a3),6(a1)
		move.w	8(a3),8(a1)
		move.w	(a2)+,$10(a1)
		move.w	(a2)+,$14(a1)
		move.w	(a2)+,d0
		move.b	d0,$22(a1)
		move.b	(a4)+,$34(a1)
		movea.l	a1,a5
		jsr	(Create_New_Sprite3).l
		bne.s	loc_2ABFC
		move.l	#loc_1C31E,(a1)
		move.w	$10(a5),$10(a1)
		move.w	$14(a5),$14(a1)
		move.b	-1(a4),$24(a1)
		dbf	d6,loc_2AB90

loc_2ABFC:
		move.w	#0,$18(a3)
		move.w	#0,$1A(a3)
		moveq	#signextendB(sfx_BridgeCollapse),d0
		jmp	(Play_Sound_2).l
; End of function sub_2AB76

; ---------------------------------------------------------------------------
byte_2AC10:	dc.b 8
		dc.b $10
		dc.b $C
		dc.b $E
		dc.b 6
		dc.b $A
		dc.b 4
		dc.b 2
		dc.b 8
		dc.b $10
		dc.b $C
		dc.b $E
		dc.b 6
		dc.b $A
		dc.b 4
		dc.b 2
Map_AIZDrawBridge:
		include "Levels/AIZ/Misc Object Data/Map - Drawbridge.asm"
word_2AC2E:	dc.w 1
		dc.w 3
		dc.w 7
		dc.w $F
		dc.w $1F
		dc.w $3F
		dc.w $7F
		dc.w $FF
		dc.w $1FF
		dc.w $3FF
		dc.w $7FF
		dc.w $FFF
		dc.w $1FFF
		dc.w $3FFF
		dc.w $7FFF
		dc.w $FFFF
; ---------------------------------------------------------------------------

Obj_AIZFallingLog:
		cmpi.w	#$26B0,$10(a0)
		beq.s	loc_2AC5E
		cmpi.w	#$2700,$10(a0)
		bne.s	loc_2AC6A

loc_2AC5E:
		tst.b	(Level_trigger_array).w
		beq.s	loc_2AC6A
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2AC6A:
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.w	#$F,d0
		move.w	d0,d2
		add.w	d0,d0
		move.w	word_2AC2E(pc,d0.w),$32(a0)
		subq.w	#3,d2
		bcc.s	loc_2AC84
		moveq	#0,d2

loc_2AC84:
		lsr.w	#4,d1
		andi.w	#$F,d1
		lsl.w	d2,d1
		move.w	d1,$34(a0)
		move.b	#4,4(a0)
		move.l	#loc_2AC9C,(a0)

loc_2AC9C:
		move.w	(Level_frame_counter).w,d0
		add.w	$34(a0),d0
		and.w	$32(a0),d0
		bne.w	loc_2AD62
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2AD62
		move.l	#loc_2AD68,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	#Map_AIZFallingLog2,$C(a1)
		move.w	#$42E9,$A(a1)
		tst.b	(Current_act).w
		bne.s	loc_2ACEA
		move.l	#Map_AIZFallingLog,$C(a1)
		move.w	#$43CF,$A(a1)

loc_2ACEA:
		move.b	#$18,7(a1)
		move.b	#8,6(a1)
		move.b	#4,4(a1)
		move.w	#$280,8(a1)
		movea.l	a1,a2
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2AD62
		move.l	#loc_2ADF4,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	#Map_AIZFallingLogSplash2,$C(a1)
		move.w	#$62E9,$A(a1)
		tst.b	(Current_act).w
		bne.s	loc_2AD42
		move.l	#Map_AIZFallingLogSplash,$C(a1)
		move.w	#$43CF,$A(a1)

loc_2AD42:
		move.b	#$20,7(a1)
		move.b	#$10,6(a1)
		move.b	#4,4(a1)
		move.w	#$200,8(a1)
		move.w	a2,$3C(a1)
		move.w	a1,$3C(a2)

loc_2AD62:
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

loc_2AD68:
		addq.w	#1,$14(a0)
		move.w	$14(a0),d0
		cmp.w	(Water_level).w,d0
		bcs.s	loc_2AD82
		move.l	#loc_2AD84,(a0)
		move.b	#$3B,$24(a0)

loc_2AD82:
		bra.s	loc_2ADA0
; ---------------------------------------------------------------------------

loc_2AD84:
		subq.b	#1,$24(a0)
		bpl.s	loc_2AD90
		move.w	#$7FF0,$10(a0)

loc_2AD90:
		move.b	$24(a0),d0
		andi.b	#3,d0
		bne.s	loc_2ADA0
		bchg	#0,$36(a0)

loc_2ADA0:
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#8,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_2ADD4
		tst.b	$36(a0)
		bne.s	locret_2ADD2
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_2ADD2:
		rts
; ---------------------------------------------------------------------------

loc_2ADD4:
		move.w	$3C(a0),d0
		beq.s	loc_2ADE2
		movea.w	d0,a1
		jsr	(Delete_Referenced_Sprite).l

loc_2ADE2:
		move.w	$48(a0),d0
		beq.s	loc_2ADEE
		movea.w	d0,a2
		bclr	#7,(a2)

loc_2ADEE:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2ADF4:
		movea.w	$3C(a0),a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		subq.b	#1,$24(a0)
		bpl.s	loc_2AE1A
		move.b	#3,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#3,$22(a0)

loc_2AE1A:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_AIZFallingLog2:
		include "Levels/AIZ/Misc Object Data/Map - Falling Log 2.asm"
Map_AIZFallingLog:
		include "Levels/AIZ/Misc Object Data/Map - Falling Log.asm"
Map_AIZFallingLogSplash2:
		include "Levels/AIZ/Misc Object Data/Map - Falling Log Splash 2.asm"
Map_AIZFallingLogSplash:
		include "Levels/AIZ/Misc Object Data/Map - Falling Log Splash.asm"
; ---------------------------------------------------------------------------

Obj_AIZSpikedLog:
		move.l	#Map_AIZSpikedLog,$C(a0)
		move.w	#$42E9,$A(a0)
		move.b	#$18,7(a0)
		move.b	#8,6(a0)
		move.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.w	$14(a0),$30(a0)
		move.b	(Water_entered_counter).w,$36(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2AF76
		move.l	#loc_2B0B6,(a1)
		move.b	#4,4(a1)
		move.b	#-$64,$28(a1)
		move.w	a0,$3C(a1)
		move.w	a1,$3C(a0)

loc_2AF76:
		move.l	#loc_2AF7C,(a0)

loc_2AF7C:
		tst.b	$34(a0)
		bmi.s	loc_2AFB0
		move.b	$36(a0),d0
		cmp.b	(Water_entered_counter).w,d0
		beq.s	loc_2AF9A
		move.b	(Water_entered_counter).w,$36(a0)
		move.b	#-$7F,$34(a0)
		bra.s	loc_2AFB0
; ---------------------------------------------------------------------------

loc_2AF9A:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_2AFB0
		tst.b	$32(a0)
		beq.s	loc_2AFE2
		subq.b	#4,$32(a0)
		bra.s	loc_2AFE2
; ---------------------------------------------------------------------------

loc_2AFB0:
		tst.b	$34(a0)
		bne.s	loc_2AFCE
		move.b	$23(a0),$35(a0)
		move.b	#0,$23(a0)
		move.b	#0,$24(a0)
		move.b	#1,$34(a0)

loc_2AFCE:
		cmpi.b	#$40,$32(a0)
		beq.s	loc_2AFDC
		addq.b	#4,$32(a0)
		bra.s	loc_2AFE2
; ---------------------------------------------------------------------------

loc_2AFDC:
		andi.b	#$7F,$34(a0)

loc_2AFE2:
		move.b	$32(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#5,d0
		add.w	$30(a0),d0
		move.w	d0,$14(a0)
		tst.b	$34(a0)
		beq.s	loc_2B02C
		subq.b	#1,$24(a0)
		bpl.s	loc_2B05E
		move.b	#3,$24(a0)
		subq.b	#1,$22(a0)
		andi.b	#$F,$22(a0)
		addq.b	#1,$23(a0)
		cmpi.b	#$10,$23(a0)
		bcs.s	loc_2B05E
		move.b	$35(a0),$23(a0)
		move.b	#0,$34(a0)
		bra.s	loc_2B05E
; ---------------------------------------------------------------------------

loc_2B02C:
		subq.b	#1,$24(a0)
		bpl.s	loc_2B05E
		move.b	#$17,$24(a0)
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.b	#1,$23(a0)
		move.b	byte_2B056(pc,d0.w),$22(a0)
		move.b	byte_2B057(pc,d0.w),d0
		bpl.s	loc_2B054
		move.b	#0,$23(a0)

loc_2B054:
		bra.s	loc_2B05E
; ---------------------------------------------------------------------------
byte_2B056:	dc.b 7
byte_2B057:	dc.b 8
		dc.b 9
		dc.b $A
		dc.b 9
		dc.b 8
		dc.b $FF
		dc.b 0
; ---------------------------------------------------------------------------

loc_2B05E:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_2B096
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2B096:
		move.w	$3C(a0),d0
		beq.s	loc_2B0A4
		movea.w	d0,a1
		jsr	(Delete_Referenced_Sprite).l

loc_2B0A4:
		move.w	$48(a0),d0
		beq.s	loc_2B0B0
		movea.w	d0,a2
		bclr	#7,(a2)

loc_2B0B0:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2B0B6:
		movea.w	$3C(a0),a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		moveq	#0,d0
		move.b	$22(a1),d0
		move.b	byte_2B0E0(pc,d0.w),d0
		beq.s	locret_2B0DE
		ext.w	d0
		add.w	d0,$14(a0)
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------

locret_2B0DE:
		rts
; ---------------------------------------------------------------------------
byte_2B0E0:	dc.b $F4
		dc.b $F4
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b $C
		dc.b $C
		dc.b $C
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b $F4
Map_AIZSpikedLog:
		include "Levels/AIZ/Misc Object Data/Map - Spiked Log.asm"
; ---------------------------------------------------------------------------

Obj_StillSprite:
		move.l	#Map_StillSprites,$C(a0)
		ori.b	#4,4(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.b	d0,$22(a0)
		add.w	d0,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		lea	word_2B31A(pc,d0.w),a1
		move.w	(a1)+,$A(a0)
		move.w	(a1)+,8(a0)
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.l	#loc_2B314,(a0)

loc_2B314:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
word_2B31A:	dc.w $42E9
		dc.w $300
		dc.b $C
		dc.b $C
		dc.w $42E9
		dc.w $300
		dc.b $10
		dc.b 8
		dc.w $42E9
		dc.w $300
		dc.b 8
		dc.b 4
		dc.w $4001
		dc.w $300
		dc.b 8
		dc.b 8
		dc.w $6001
		dc.w $300
		dc.b 8
		dc.b $20
		dc.w $C2E9
		dc.w $300
		dc.b $C
		dc.b $C
		dc.w $C001
		dc.w 0
		dc.b $40
		dc.b $40
		dc.w $C001
		dc.w 0
		dc.b $40
		dc.b $20
		dc.w $4001
		dc.w $300
		dc.b $40
		dc.b $10
		dc.w $C001
		dc.w 0
		dc.b $40
		dc.b $40
		dc.w $C001
		dc.w 0
		dc.b $40
		dc.b $60
		dc.w $4451
		dc.w $300
		dc.b $10
		dc.b $18
		dc.w $4451
		dc.w $300
		dc.b $10
		dc.b $18
		dc.w $4451
		dc.w $300
		dc.b $10
		dc.b $18
		dc.w $4451
		dc.w $300
		dc.b $10
		dc.b $18
		dc.w $C368
		dc.w 0
		dc.b 8
		dc.b $30
		dc.w $C379
		dc.w 0
		dc.b $30
		dc.b $18
		dc.w $C399
		dc.w 0
		dc.b $C
		dc.b $10
		dc.w $C3A4
		dc.w 0
		dc.b $20
		dc.b $34
		dc.w $4038
		dc.w $300
		dc.b 4
		dc.b $10
		dc.w $440D
		dc.w $300
		dc.b 8
		dc.b 8
		dc.w $2433
		dc.w $300
		dc.b $10
		dc.b $40
		dc.w $2433
		dc.w $300
		dc.b $10
		dc.b $80
		dc.w $2433
		dc.w $80
		dc.b $10
		dc.b $40
Map_StillSprites:
		include "Levels/Misc/Map - Still Sprites S3.asm"
; ---------------------------------------------------------------------------

Obj_AnimatedStillSprite:
		move.l	#Map_AnimatedStillSprites,$C(a0)
		ori.b	#4,4(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.b	d0,$20(a0)
		add.w	d0,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		lea	word_2B6B6(pc,d0.w),a1
		move.w	(a1)+,$A(a0)
		move.w	(a1)+,8(a0)
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.l	#loc_2B6A4,(a0)

loc_2B6A4:
		lea	(Ani_AnimatedStillSprites).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
word_2B6B6:	dc.w $62E9
		dc.w $300
		dc.b 8
		dc.b $C
		dc.w $62E9
		dc.w $300
		dc.b 8
		dc.b $C
Ani_AnimatedStillSprites:
		include "Levels/Misc/Anim - Animated Still Sprites S3.asm"
Map_AnimatedStillSprites:
		include "Levels/Misc/Map - Animated Still Sprites S3.asm"
; ---------------------------------------------------------------------------

Obj_AIZForegroundPlant:
		move.l	#Map_AIZForegroundPlant,$C(a0)
		ori.b	#4,4(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		move.b	d0,$22(a0)
		add.w	d0,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		lea	word_2B780(pc,d0.w),a1
		move.w	(a1)+,$A(a0)
		move.w	(a1)+,8(a0)
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.b	$2C(a0),d0
		lsr.w	#2,d0
		andi.w	#$3C,d0
		move.l	off_2B78C(pc,d0.w),(a0)
		rts
; ---------------------------------------------------------------------------
word_2B780:	dc.w $C333
		dc.w 0
		dc.b $20
		dc.b $30
		dc.w $C333
		dc.w 0
		dc.b $20
		dc.b $3C
off_2B78C:	dc.l loc_2B7A8
		dc.l loc_2B7AE
		dc.l loc_2B7E4
		dc.l loc_2B81A
		dc.l loc_2B850
		dc.l loc_2B886
		dc.l loc_2B8B8
; ---------------------------------------------------------------------------

loc_2B7A8:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2B7AE:
		move.w	$30(a0),d1
		move.w	d1,d2
		subi.w	#$A0,d1
		sub.w	(Camera_X_pos).w,d1
		asr.w	#4,d1
		add.w	d2,d1
		move.w	d1,$10(a0)
		move.w	$32(a0),d1
		move.w	d1,d2
		subi.w	#$70,d1
		sub.w	(Camera_Y_pos).w,d1
		asr.w	#4,d1
		add.w	d2,d1
		move.w	d1,$14(a0)
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_2B7E4:
		move.w	$30(a0),d1
		move.w	d1,d2
		subi.w	#$A0,d1
		sub.w	(Camera_X_pos).w,d1
		asr.w	#3,d1
		add.w	d2,d1
		move.w	d1,$10(a0)
		move.w	$32(a0),d1
		move.w	d1,d2
		subi.w	#$70,d1
		sub.w	(Camera_Y_pos).w,d1
		asr.w	#3,d1
		add.w	d2,d1
		move.w	d1,$14(a0)
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_2B81A:
		move.w	$30(a0),d1
		move.w	d1,d2
		subi.w	#$A0,d1
		sub.w	(Camera_X_pos).w,d1
		asr.w	#2,d1
		add.w	d2,d1
		move.w	d1,$10(a0)
		move.w	$32(a0),d1
		move.w	d1,d2
		subi.w	#$70,d1
		sub.w	(Camera_Y_pos).w,d1
		asr.w	#2,d1
		add.w	d2,d1
		move.w	d1,$14(a0)
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_2B850:
		move.w	$30(a0),d1
		move.w	d1,d2
		subi.w	#$A0,d1
		sub.w	(Camera_X_pos).w,d1
		asr.w	#1,d1
		add.w	d2,d1
		move.w	d1,$10(a0)
		move.w	$32(a0),d1
		move.w	d1,d2
		subi.w	#$70,d1
		sub.w	(Camera_Y_pos).w,d1
		asr.w	#1,d1
		add.w	d2,d1
		move.w	d1,$14(a0)
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_2B886:
		move.w	$30(a0),d1
		move.w	d1,d2
		subi.w	#$A0,d1
		sub.w	(Camera_X_pos).w,d1
		add.w	d2,d1
		move.w	d1,$10(a0)
		move.w	$32(a0),d1
		move.w	d1,d2
		subi.w	#$70,d1
		sub.w	(Camera_Y_pos).w,d1
		add.w	d2,d1
		move.w	d1,$14(a0)
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_2B8B8:
		move.w	$30(a0),d1
		move.w	d1,d2
		subi.w	#$A0,d1
		sub.w	(Camera_X_pos).w,d1
		add.w	d1,d1
		add.w	d2,d1
		move.w	d1,$10(a0)
		move.w	$32(a0),d1
		move.w	d1,d2
		subi.w	#$70,d1
		sub.w	(Camera_Y_pos).w,d1
		add.w	d2,d1
		move.w	d1,$14(a0)
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------
Map_AIZForegroundPlant:
		include "Levels/AIZ/Misc Object Data/Map - Foreground Plant.asm"
; ---------------------------------------------------------------------------

Obj_AIZ2FGTree:
		move.l	#Map_AIZ2FGTree,$C(a0)
		ori.b	#4,4(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.b	d0,$22(a0)
		add.w	d0,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		lea	word_2B994(pc,d0.w),a1
		move.w	(a1)+,$A(a0)
		move.w	(a1)+,8(a0)
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.l	#loc_2B98E,(a0)

loc_2B98E:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
word_2B994:	dc.w $4438
		dc.w $300
		dc.b 8
		dc.b $40
Map_AIZ2FGTree:	include "Levels/AIZ/Misc Object Data/Map - Act 2 Foreground Tree.asm"
; ---------------------------------------------------------------------------

Obj_31_1:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,$32(a0)
		neg.w	d0
		move.w	d0,$30(a0)
		move.b	#-$80,7(a0)
		move.l	#loc_2B9D2,(a0)

loc_2B9D2:
		lea	(Player_1).w,a1
		lea	(_unkF7B0+2).w,a2
		moveq	#3,d6
		bsr.s	sub_2B9F0
		lea	(Player_2).w,a1
		lea	(_unkF7B0+3).w,a2
		addq.b	#1,d6
		bsr.s	sub_2B9F0
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_2B9F0:
		btst	d6,$2A(a0)
		bne.w	loc_2BA76
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		cmp.w	$30(a0),d0
		blt.s	locret_2BA74
		cmp.w	$32(a0),d0
		bge.s	locret_2BA74
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		addi.w	#$53,d0
		cmpi.w	#$A6,d0
		bcc.s	locret_2BA74
		cmpi.w	#$53,d0
		bcc.s	loc_2BA2C
		tst.w	$1A(a1)
		bmi.s	locret_2BA74
		bra.s	loc_2BA34
; ---------------------------------------------------------------------------

loc_2BA2C:
		cmpi.w	#$38,$1A(a1)
		bgt.s	locret_2BA74

loc_2BA34:
		cmpi.b	#6,5(a1)
		bcc.s	locret_2BA74
		tst.w	(Debug_placement_mode).w
		bne.s	locret_2BA74
		cmpi.w	#8,d0
		bcc.s	loc_2BA4C
		move.b	#-$7F,(a2)

loc_2BA4C:
		cmpi.w	#$9E,d0
		bcs.s	loc_2BA56
		move.b	#1,(a2)

loc_2BA56:
		jsr	(RideObject_SetRide).l
		move.b	#-$80,$2D(a1)
		move.w	#1,$20(a1)
		tst.w	$1C(a1)
		bne.s	locret_2BA74
		move.w	#1,$1C(a1)

locret_2BA74:
		rts
; ---------------------------------------------------------------------------

loc_2BA76:
		btst	#1,$2A(a1)
		bne.s	loc_2BAB0
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		cmp.w	$30(a0),d0
		blt.s	loc_2BA92
		cmp.w	$32(a0),d0
		blt.s	loc_2BAC2

loc_2BA92:
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		move.b	#0,$30(a1)
		move.b	#4,$31(a1)
		bset	#1,$2A(a1)
		rts
; ---------------------------------------------------------------------------

loc_2BAB0:
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		bmi.s	loc_2BA92
		move.w	#$400,$1A(a1)
		bra.s	loc_2BA92
; ---------------------------------------------------------------------------

loc_2BAC2:
		btst	#3,$2A(a1)
		beq.s	locret_2BA74
		move.b	(a2),d0
		jsr	(GetSineCosine).l
		moveq	#0,d2
		move.b	$1E(a1),d2
		lsl.w	#8,d2
		addi.w	#$4000,d2
		muls.w	d2,d1
		swap	d1
		add.w	$14(a0),d1
		move.w	d1,$14(a1)
		move.b	(a2),d0
		addi.b	#-$80,d0
		move.b	d0,$27(a1)
		addq.b	#2,(a2)
		move.b	#-$80,$2D(a1)
		tst.w	$1C(a1)
		bne.s	loc_2BB0E
		move.w	#1,$1C(a1)
		move.b	#-$7F,$2D(a1)

loc_2BB0E:
		bset	#7,$A(a1)
		tst.b	d0
		bpl.s	locret_2BB1E
		bclr	#7,$A(a1)

locret_2BB1E:
		rts
; End of function sub_2B9F0

; ---------------------------------------------------------------------------

Obj_Button:
		tst.w	(Competition_mode).w
		bne.w	loc_2BC68
		move.l	#Map_Button,$C(a0)
		move.w	#$456,$A(a0)
		cmpi.b	#1,(Current_zone).w
		bne.s	loc_2BB4C
		move.l	#Map_Button2,$C(a0)
		move.w	#$2426,$A(a0)

loc_2BB4C:
		cmpi.b	#3,(Current_zone).w
		bne.s	loc_2BB62
		move.l	#Map_CNZButton,$C(a0)
		move.w	#$441A,$A(a0)

loc_2BB62:
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.w	#$200,8(a0)
		addq.w	#4,$14(a0)
		btst	#5,$2C(a0)
		beq.s	loc_2BB8A
		move.l	#loc_2BBFE,(a0)
		bra.w	loc_2BBFE
; ---------------------------------------------------------------------------

loc_2BB8A:
		move.l	#loc_2BB90,(a0)

loc_2BB90:
		tst.b	4(a0)
		bpl.s	loc_2BBF8
		move.w	#$1B,d1
		move.w	#4,d2
		move.w	#5,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		move.b	#0,$22(a0)
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		lea	(a3,d0.w),a3
		moveq	#0,d3
		btst	#6,$2C(a0)
		beq.s	loc_2BBCE
		moveq	#7,d3

loc_2BBCE:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_2BBE4
		btst	#4,$2C(a0)
		bne.s	loc_2BBF8
		bclr	d3,(a3)
		bra.s	loc_2BBF8
; ---------------------------------------------------------------------------

loc_2BBE4:
		tst.b	(a3)
		bne.s	loc_2BBF0
		moveq	#signextendB(sfx_Switch),d0
		jsr	(Play_Sound_2).l

loc_2BBF0:
		bset	d3,(a3)
		move.b	#1,$22(a0)

loc_2BBF8:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2BBFE:
		tst.b	4(a0)
		bpl.s	loc_2BC62
		move.w	#$10,d1
		move.w	#6,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		move.b	#0,$22(a0)
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		lea	(a3,d0.w),a3
		moveq	#0,d3
		btst	#6,$2C(a0)
		beq.s	loc_2BC38
		moveq	#7,d3

loc_2BC38:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_2BC4E
		btst	#4,$2C(a0)
		bne.s	loc_2BC62
		bclr	d3,(a3)
		bra.s	loc_2BC62
; ---------------------------------------------------------------------------

loc_2BC4E:
		tst.b	(a3)
		bne.s	loc_2BC5A
		moveq	#signextendB(sfx_Switch),d0
		jsr	(Play_Sound_2).l

loc_2BC5A:
		bset	d3,(a3)
		move.b	#1,$22(a0)

loc_2BC62:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2BC68:
		move.l	#Map_2PButton,$C(a0)
		move.w	#$3AD,$A(a0)
		move.b	#4,4(a0)
		move.b	#$C,7(a0)
		move.w	#$200,8(a0)
		addq.w	#4,$14(a0)
		move.l	#loc_2BC92,(a0)

loc_2BC92:
		move.w	#$13,d1
		move.w	#4,d2
		move.w	#5,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		move.b	#0,$22(a0)
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		lea	(a3,d0.w),a3
		moveq	#0,d3
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_2BCD6
		btst	#4,$2C(a0)
		bne.s	loc_2BCEA
		bclr	d3,(a3)
		bra.s	loc_2BCEA
; ---------------------------------------------------------------------------

loc_2BCD6:
		tst.b	(a3)
		bne.s	loc_2BCE2
		moveq	#signextendB(sfx_Switch),d0
		jsr	(Play_Sound_2).l

loc_2BCE2:
		bset	d3,(a3)
		move.b	#1,$22(a0)

loc_2BCEA:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_Button:	include "General/Sprites/Buttons/Map - Button.asm"
Map_Button2:	include "General/Sprites/Buttons/Map - Button 2.asm"
Map_CNZButton:	include "Levels/CNZ/Misc Object Data/Map - Button.asm"
Map_2PButton:	include "General/2P Zone/Map - 2P Button.asm"
; ---------------------------------------------------------------------------

Obj_Animal:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_2BDA6(pc,d0.w),d1
		jmp	off_2BDA6(pc,d1.w)
; ---------------------------------------------------------------------------
off_2BDA6:	dc.w loc_2BEC2-off_2BDA6
		dc.w loc_2BFEA-off_2BDA6
		dc.w loc_2C046-off_2BDA6
		dc.w loc_2C086-off_2BDA6
		dc.w loc_2C046-off_2BDA6
		dc.w loc_2C046-off_2BDA6
		dc.w loc_2C046-off_2BDA6
		dc.w loc_2C086-off_2BDA6
		dc.w loc_2C046-off_2BDA6
		dc.w loc_2C086-off_2BDA6
		dc.w loc_2C046-off_2BDA6
		dc.w loc_2C046-off_2BDA6
		dc.w loc_2C046-off_2BDA6
		dc.w loc_2C046-off_2BDA6
		dc.w loc_2C10C-off_2BDA6
		dc.w loc_2C12E-off_2BDA6
		dc.w loc_2C12E-off_2BDA6
		dc.w loc_2C14E-off_2BDA6
		dc.w loc_2C18A-off_2BDA6
		dc.w loc_2C1E6-off_2BDA6
		dc.w loc_2C206-off_2BDA6
		dc.w loc_2C1E6-off_2BDA6
		dc.w loc_2C206-off_2BDA6
		dc.w loc_2C1E6-off_2BDA6
		dc.w loc_2C246-off_2BDA6
		dc.w loc_2C1A6-off_2BDA6
byte_2BDDA:	dc.b 5, 1
		dc.b 0, 3
		dc.b 5, 1
		dc.b 0, 5
		dc.b 6, 5
		dc.b 2, 3
		dc.b 6, 1
		dc.b 6, 5
		dc.b 6, 5
		dc.b 6, 5
		dc.b 6, 5
		dc.b 6, 5
		dc.b 6, 5
word_2BDF4:	dc.w $FE00
		dc.w $FC00
		dc.l Map_Animals5
		dc.w $FE00
		dc.w $FD00
		dc.l Map_Animals1
		dc.w $FE80
		dc.w $FD00
		dc.l Map_Animals5
		dc.w $FEC0
		dc.w $FE80
		dc.l Map_Animals4
		dc.w $FE40
		dc.w $FD00
		dc.l Map_Animals3
		dc.w $FD00
		dc.w $FC00
		dc.l Map_Animals1
		dc.w $FD80
		dc.w $FC80
		dc.l Map_Animals2
		dc.w $FD80
		dc.w $FD00
		dc.l Map_Animals1
		dc.w $FE00
		dc.w $FC80
		dc.l Map_Animals2
		dc.w $FD40
		dc.w $FD00
		dc.l Map_Animals2
		dc.w $FEC0
		dc.w $FE00
		dc.l Map_Animals2
		dc.w $FE00
		dc.w $FD00
		dc.l Map_Animals2
word_2BE54:	dc.w $FBC0, $FC00
		dc.w $FBC0, $FC00
		dc.w $FBC0, $FC00
		dc.w $FD00, $FC00
		dc.w $FD00, $FC00
		dc.w $FE80, $FD00
		dc.w $FE80, $FD00
		dc.w $FEC0, $FE80
		dc.w $FE40, $FD00
		dc.w $FE00, $FD00
		dc.w $FD80, $FC80
off_2BE80:	dc.l Map_Animals1
		dc.l Map_Animals1
		dc.l Map_Animals1
		dc.l Map_Animals5
		dc.l Map_Animals5
		dc.l Map_Animals5
		dc.l Map_Animals5
		dc.l Map_Animals4
		dc.l Map_Animals3
		dc.l Map_Animals1
		dc.l Map_Animals2
word_2BEAC:	dc.w $5A5
		dc.w $5A5
		dc.w $5A5
		dc.w $553
		dc.w $553
		dc.w $573
		dc.w $573
		dc.w $585
		dc.w $593
		dc.w $565
		dc.w $5B3
; ---------------------------------------------------------------------------

loc_2BEC2:
		tst.b	$2C(a0)
		beq.w	loc_2BF2E
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		move.b	d0,5(a0)
		subi.w	#$14,d0
		move.w	word_2BEAC(pc,d0.w),$A(a0)
		add.w	d0,d0
		move.l	off_2BE80(pc,d0.w),$C(a0)
		lea	word_2BE54(pc),a1
		move.w	(a1,d0.w),$32(a0)
		move.w	(a1,d0.w),$18(a0)
		move.w	2(a1,d0.w),$34(a0)
		move.w	2(a1,d0.w),$1A(a0)
		move.b	#$C,$1E(a0)
		move.b	#4,4(a0)
		bset	#0,4(a0)
		move.w	#$300,8(a0)
		move.b	#8,7(a0)
		move.b	#7,$24(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2BF2E:
		addq.b	#2,5(a0)
		jsr	(Random_Number).l
		move.w	#$580,$A(a0)
		andi.w	#1,d0
		beq.s	loc_2BF4A
		move.w	#$592,$A(a0)

loc_2BF4A:
		moveq	#0,d1
		move.b	(Current_zone).w,d1
		add.w	d1,d1
		add.w	d0,d1
		lea	byte_2BDDA(pc),a1
		move.b	(a1,d1.w),d0
		move.b	d0,$30(a0)
		lsl.w	#3,d0
		lea	word_2BDF4(pc),a1
		adda.w	d0,a1
		move.w	(a1)+,$32(a0)
		move.w	(a1)+,$34(a0)
		move.l	(a1)+,$C(a0)
		move.b	#$C,$1E(a0)
		move.b	#4,4(a0)
		bset	#0,4(a0)
		move.w	#$300,8(a0)
		move.b	#8,7(a0)
		move.b	#7,$24(a0)
		move.b	#2,$22(a0)
		move.w	#-$400,$1A(a0)
		tst.b	$38(a0)
		bne.s	loc_2BFD4
		jsr	(Create_New_Sprite).l
		bne.s	loc_2BFCE
		move.l	#Obj_EnemyScore,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	$3E(a0),d0
		lsr.w	#1,d0
		move.b	d0,$22(a1)

loc_2BFCE:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2BFD4:
		move.b	#$1C,5(a0)
		clr.w	$18(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2BFE4:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2BFEA:
		tst.b	4(a0)
		bpl.s	loc_2BFE4
		jsr	(MoveSprite).l
		tst.w	$1A(a0)
		bmi.s	loc_2C040
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_2C040
		add.w	d1,$14(a0)
		move.w	$32(a0),$18(a0)
		move.w	$34(a0),$1A(a0)
		move.b	#1,$22(a0)
		move.b	$30(a0),d0
		add.b	d0,d0
		addq.b	#4,d0
		move.b	d0,5(a0)
		tst.b	$38(a0)
		beq.s	loc_2C040
		btst	#4,(V_int_run_count+3).w
		beq.s	loc_2C040
		neg.w	$18(a0)
		bchg	#0,4(a0)

loc_2C040:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2C046:
		jsr	(MoveSprite).l
		move.b	#1,$22(a0)
		tst.w	$1A(a0)
		bmi.s	loc_2C072
		move.b	#0,$22(a0)
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_2C072
		add.w	d1,$14(a0)
		move.w	$34(a0),$1A(a0)

loc_2C072:
		tst.b	$2C(a0)
		bne.s	loc_2C0EE
		tst.b	4(a0)
		bpl.w	loc_2BFE4
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2C086:
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		tst.w	$1A(a0)
		bmi.s	loc_2C0C4
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_2C0C4
		add.w	d1,$14(a0)
		move.w	$34(a0),$1A(a0)
		tst.b	$2C(a0)
		beq.s	loc_2C0C4
		cmpi.b	#$A,$2C(a0)
		beq.s	loc_2C0C4
		neg.w	$18(a0)
		bchg	#0,4(a0)

loc_2C0C4:
		subq.b	#1,$24(a0)
		bpl.s	loc_2C0DA
		move.b	#1,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#1,$22(a0)

loc_2C0DA:
		tst.b	$2C(a0)
		bne.s	loc_2C0EE
		tst.b	4(a0)
		bpl.w	loc_2BFE4
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2C0EE:
		move.w	$10(a0),d0
		sub.w	(Player_1+x_pos).w,d0
		bcs.s	loc_2C106
		subi.w	#$180,d0
		bpl.s	loc_2C106
		tst.b	4(a0)
		bpl.w	loc_2BFE4

loc_2C106:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2C10C:
		tst.b	4(a0)
		bpl.w	loc_2BFE4
		subq.w	#1,$36(a0)
		bne.w	loc_2C128
		move.b	#2,5(a0)
		move.w	#$80,8(a0)

loc_2C128:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2C12E:
		bsr.w	sub_2C2DC
		bcc.s	loc_2C14A
		move.w	$32(a0),$18(a0)
		move.w	$34(a0),$1A(a0)
		move.b	#$E,5(a0)
		bra.w	loc_2C086
; ---------------------------------------------------------------------------

loc_2C14A:
		bra.w	loc_2C0EE
; ---------------------------------------------------------------------------

loc_2C14E:
		bsr.w	sub_2C2DC
		bpl.s	loc_2C186
		clr.w	$18(a0)
		clr.w	$32(a0)
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		bsr.w	sub_2C29C
		bsr.w	sub_2C2C4
		subq.b	#1,$24(a0)
		bpl.s	loc_2C186
		move.b	#1,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#1,$22(a0)

loc_2C186:
		bra.w	loc_2C0EE
; ---------------------------------------------------------------------------

loc_2C18A:
		bsr.w	sub_2C2DC
		bpl.s	loc_2C1E2
		move.w	$32(a0),$18(a0)
		move.w	$34(a0),$1A(a0)
		move.b	#4,5(a0)
		bra.w	loc_2C046
; ---------------------------------------------------------------------------

loc_2C1A6:
		jsr	(MoveSprite).l
		move.b	#1,$22(a0)
		tst.w	$1A(a0)
		bmi.s	loc_2C1E2
		move.b	#0,$22(a0)
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_2C1E2
		not.b	$2D(a0)
		bne.s	loc_2C1D8
		neg.w	$18(a0)
		bchg	#0,4(a0)

loc_2C1D8:
		add.w	d1,$14(a0)
		move.w	$34(a0),$1A(a0)

loc_2C1E2:
		bra.w	loc_2C0EE
; ---------------------------------------------------------------------------

loc_2C1E6:
		bsr.w	sub_2C2DC
		bpl.s	loc_2C202
		clr.w	$18(a0)
		clr.w	$32(a0)
		jsr	(MoveSprite).l
		bsr.w	sub_2C29C
		bsr.w	sub_2C2C4

loc_2C202:
		bra.w	loc_2C0EE
; ---------------------------------------------------------------------------

loc_2C206:
		bsr.w	sub_2C2DC
		bpl.s	loc_2C242
		jsr	(MoveSprite).l
		move.b	#1,$22(a0)
		tst.w	$1A(a0)
		bmi.s	loc_2C242
		move.b	#0,$22(a0)
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_2C242
		neg.w	$18(a0)
		bchg	#0,4(a0)
		add.w	d1,$14(a0)
		move.w	$34(a0),$1A(a0)

loc_2C242:
		bra.w	loc_2C0EE
; ---------------------------------------------------------------------------

loc_2C246:
		bsr.w	sub_2C2DC
		bpl.s	loc_2C298
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		tst.w	$1A(a0)
		bmi.s	loc_2C282
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_2C282
		not.b	$2D(a0)
		bne.s	loc_2C278
		neg.w	$18(a0)
		bchg	#0,4(a0)

loc_2C278:
		add.w	d1,$14(a0)
		move.w	$34(a0),$1A(a0)

loc_2C282:
		subq.b	#1,$24(a0)
		bpl.s	loc_2C298
		move.b	#1,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#1,$22(a0)

loc_2C298:
		bra.w	loc_2C0EE

; =============== S U B R O U T I N E =======================================


sub_2C29C:
		move.b	#1,$22(a0)
		tst.w	$1A(a0)
		bmi.s	locret_2C2C2
		move.b	#0,$22(a0)
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	locret_2C2C2
		add.w	d1,$14(a0)
		move.w	$34(a0),$1A(a0)

locret_2C2C2:
		rts
; End of function sub_2C29C


; =============== S U B R O U T I N E =======================================


sub_2C2C4:
		bset	#0,4(a0)
		move.w	$10(a0),d0
		sub.w	(Player_1+x_pos).w,d0
		bcc.s	locret_2C2DA
		bclr	#0,4(a0)

locret_2C2DA:
		rts
; End of function sub_2C2C4


; =============== S U B R O U T I N E =======================================


sub_2C2DC:
		move.w	(Player_1+x_pos).w,d0
		sub.w	$10(a0),d0
		subi.w	#$B8,d0
		rts
; End of function sub_2C2DC

; ---------------------------------------------------------------------------

Obj_EnemyScore:
		move.l	#Map_EnemyScore,$C(a0)
		move.w	#-$7A1C,$A(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#8,7(a0)
		move.w	#-$300,$1A(a0)
		move.l	#loc_2C316,(a0)

loc_2C316:
		tst.w	$1A(a0)
		bpl.w	loc_2BFE4
		jsr	(MoveSprite2).l
		addi.w	#$18,$1A(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_Animals1:	include "General/Sprites/Animals/Map - Animals 1.asm"
Map_Animals2:	include "General/Sprites/Animals/Map - Animals 2.asm"
Map_Animals3:	include "General/Sprites/Animals/Map - Animals 3.asm"
Map_Animals4:	include "General/Sprites/Animals/Map - Animals 4.asm"
Map_Animals5:	include "General/Sprites/Animals/Map - Animals 5.asm"
Map_EnemyScore:	include "General/Sprites/Enemy Misc/Map - Enemy Points.asm"
; ---------------------------------------------------------------------------

Obj_StarPost:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_2C42C(pc,d0.w),d1
		jmp	off_2C42C(pc,d1.w)
; ---------------------------------------------------------------------------
off_2C42C:	dc.w loc_2C436-off_2C42C
		dc.w loc_2C488-off_2C42C
		dc.w loc_2C56E-off_2C42C
		dc.w loc_2C580-off_2C42C
		dc.w loc_2C8AE-off_2C42C
; ---------------------------------------------------------------------------

loc_2C436:
		addq.b	#2,5(a0)
		move.l	#Map_StarPost,$C(a0)
		move.w	#$5EC,$A(a0)
		move.b	#4,4(a0)
		move.b	#8,7(a0)
		move.b	#$28,6(a0)
		move.w	#$280,8(a0)
		movea.w	$48(a0),a2
		btst	#0,(a2)
		bne.s	loc_2C47E
		move.b	(Last_star_post_hit).w,d1
		andi.b	#$7F,d1
		move.b	$2C(a0),d2
		andi.b	#$7F,d2
		cmp.b	d2,d1
		bcs.s	loc_2C488

loc_2C47E:
		bset	#0,(a2)
		move.b	#2,$20(a0)

loc_2C488:
		tst.w	(Debug_placement_mode).w
		bne.w	loc_2C56E
		lea	(Player_1).w,a3
		move.b	(Last_star_post_hit).w,d1
		bsr.s	sub_2C49E
		bra.w	loc_2C56E

; =============== S U B R O U T I N E =======================================


sub_2C49E:
		andi.b	#$7F,d1
		move.b	$2C(a0),d2
		andi.b	#$7F,d2
		cmp.b	d2,d1
		bcc.w	loc_2C560
		move.w	$10(a3),d0
		sub.w	$10(a0),d0
		addi.w	#8,d0
		cmpi.w	#$10,d0
		bcc.w	locret_2C55E
		move.w	$14(a3),d0
		sub.w	$14(a0),d0
		addi.w	#$40,d0
		cmpi.w	#$68,d0
		bcc.w	locret_2C55E
		moveq	#signextendB(sfx_Starpost),d0
		jsr	(Play_Sound_2).l
		jsr	(Create_New_Sprite).l
		bne.s	loc_2C546
		move.l	#Obj_StarPost,(a1)
		move.b	#6,5(a1)
		move.w	$10(a0),$30(a1)
		move.w	$14(a0),$32(a1)
		subi.w	#$14,$32(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		move.b	#4,4(a1)
		move.b	#8,7(a1)
		move.b	#8,6(a1)
		move.w	#$200,8(a1)
		move.b	#2,$22(a1)
		move.w	#$20,$36(a1)
		move.w	a0,$3E(a1)
		cmpi.w	#$32,(Ring_count).w
		bcs.s	loc_2C546
		bsr.w	sub_2C83E

loc_2C546:
		move.b	#1,$20(a0)
		bsr.w	sub_2C5DA
		move.b	#4,5(a0)
		movea.w	$48(a0),a2
		bset	#0,(a2)

locret_2C55E:
		rts
; ---------------------------------------------------------------------------

loc_2C560:
		tst.b	$20(a0)
		bne.s	locret_2C56C
		move.b	#2,$20(a0)

locret_2C56C:
		rts
; End of function sub_2C49E

; ---------------------------------------------------------------------------

loc_2C56E:
		lea	(Ani_Starpost).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2C580:
		subq.w	#1,$36(a0)
		bpl.s	loc_2C5A4
		movea.w	$3E(a0),a1
		cmpi.l	#Obj_StarPost,(a1)
		bne.s	loc_2C59E
		move.b	#2,$20(a1)
		move.b	#0,$22(a1)

loc_2C59E:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2C5A4:
		move.b	$26(a0),d0
		subi.b	#$10,$26(a0)
		subi.b	#$40,d0
		jsr	(GetSineCosine).l
		muls.w	#$C00,d1
		swap	d1
		add.w	$30(a0),d1
		move.w	d1,$10(a0)
		muls.w	#$C00,d0
		swap	d0
		add.w	$32(a0),d0
		move.w	d0,$14(a0)
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_2C5DA:
		move.b	$2C(a0),(Last_star_post_hit).w
		move.w	$10(a0),(Saved_X_pos).w
		move.w	$14(a0),(Saved_Y_pos).w
; End of function sub_2C5DA


; =============== S U B R O U T I N E =======================================


Save_Level_Data:
		move.b	(Last_star_post_hit).w,(Saved_last_star_post_hit).w
		move.w	(Current_zone_and_act).w,(Saved_zone_and_act).w
		move.w	(Apparent_zone_and_act).w,(Saved_apparent_zone_and_act).w
		move.w	(Player_1+art_tile).w,(Saved_art_tile).w
		move.w	(Player_1+top_solid_bit).w,(Saved_solid_bits).w
		move.w	(Ring_count).w,(Saved_ring_count).w
		move.b	(Extra_life_flags).w,(Saved_extra_life_flags).w
		move.l	(Timer).w,(Saved_timer).w
		move.b	(Dynamic_resize_routine).w,(Saved_dynamic_resize_routine).w
		move.w	(Camera_max_Y_pos).w,(Saved_camera_max_Y_pos).w
		move.w	(Camera_X_pos).w,(Saved_camera_X_pos).w
		move.w	(Camera_Y_pos).w,(Saved_camera_Y_pos).w
		move.w	(Mean_water_level).w,(Saved_mean_water_level).w
		move.b	(Water_full_screen_flag).w,(Saved_water_full_screen_flag).w
		rts
; End of function Save_Level_Data


; =============== S U B R O U T I N E =======================================


Save_Level_Data2:
		move.b	(Last_star_post_hit).w,(Saved2_last_star_post_hit).w
		move.w	(Current_zone_and_act).w,(Saved2_zone_and_act).w
		move.w	(Apparent_zone_and_act).w,(Saved2_apparent_zone_and_act).w
		move.w	$10(a0),(Saved2_X_pos).w
		move.w	$14(a0),(Saved2_Y_pos).w
		move.w	(Player_1+art_tile).w,(Saved2_art_tile).w
		move.w	(Player_1+top_solid_bit).w,(Saved2_solid_bits).w
		move.w	(Ring_count).w,(Saved2_ring_count).w
		move.b	(Extra_life_flags).w,(Saved2_extra_life_flags).w
		move.l	(Timer).w,(Saved2_timer).w
		move.b	(Dynamic_resize_routine).w,(Saved2_dynamic_resize_routine).w
		move.w	(Camera_max_Y_pos).w,(Saved2_camera_max_Y_pos).w
		move.w	(Camera_X_pos).w,(Saved2_camera_X_pos).w
		move.w	(Camera_Y_pos).w,(Saved2_camera_Y_pos).w
		move.w	(Mean_water_level).w,(Saved2_mean_water_level).w
		move.b	(Water_full_screen_flag).w,(Saved2_water_full_screen_flag).w
		move.b	(Player_1+status_secondary).w,(Saved2_status_secondary).w
		rts
; End of function Save_Level_Data2


; =============== S U B R O U T I N E =======================================


Load_Starpost_Settings:
		tst.b	(Special_bonus_entry_flag).w
		bne.w	loc_2C738
		move.b	(Saved_last_star_post_hit).w,(Last_star_post_hit).w
		move.w	(Saved_zone_and_act).w,(Current_zone_and_act).w
		move.w	(Saved_apparent_zone_and_act).w,(Apparent_zone_and_act).w
		move.w	(Saved_X_pos).w,(Player_1+x_pos).w
		move.w	(Saved_Y_pos).w,(Player_1+y_pos).w
		move.w	(Saved_ring_count).w,(Ring_count).w
		move.b	(Saved_extra_life_flags).w,(Extra_life_flags).w
		tst.b	(Respawn_table_keep).w
		bne.s	loc_2C6EA
		clr.w	(Ring_count).w
		clr.b	(Extra_life_flags).w

loc_2C6EA:
		move.l	(Saved_timer).w,(Timer).w
		move.b	#59,(Timer_frame).w
		subq.b	#1,(Timer_second).w
		move.w	(Saved_art_tile).w,(Player_1+art_tile).w
		move.w	(Saved_solid_bits).w,(Player_1+top_solid_bit).w
		move.b	(Saved_dynamic_resize_routine).w,(Dynamic_resize_routine).w
		move.w	(Saved_camera_max_Y_pos).w,(Camera_max_Y_pos).w
		move.w	(Saved_camera_max_Y_pos).w,(Camera_target_max_Y_pos).w
		move.w	(Saved_camera_X_pos).w,(Camera_X_pos).w
		move.w	(Saved_camera_Y_pos).w,(Camera_Y_pos).w
		tst.b	(Water_flag).w
		beq.s	locret_2C736
		move.w	(Saved_mean_water_level).w,(Mean_water_level).w
		move.b	(Saved_water_full_screen_flag).w,(Water_full_screen_flag).w

locret_2C736:
		rts
; ---------------------------------------------------------------------------

loc_2C738:
		clr.b	(Special_bonus_entry_flag).w
		move.w	(Saved2_zone_and_act).w,(Current_zone_and_act).w
		move.w	(Saved2_apparent_zone_and_act).w,(Apparent_zone_and_act).w
		move.w	(Saved2_X_pos).w,(Player_1+x_pos).w
		move.w	(Saved2_Y_pos).w,(Player_1+y_pos).w
		move.w	(Saved2_ring_count).w,(Ring_count).w
		move.b	(Saved2_extra_life_flags).w,(Extra_life_flags).w
		move.l	(Saved2_timer).w,(Timer).w
		move.b	#59,(Timer_frame).w
		subq.b	#1,(Timer_second).w
		move.w	(Saved2_art_tile).w,(Player_1+art_tile).w
		move.w	(Saved2_solid_bits).w,(Player_1+top_solid_bit).w
		move.b	(Saved2_dynamic_resize_routine).w,(Dynamic_resize_routine).w
		move.w	(Saved2_camera_max_Y_pos).w,(Camera_max_Y_pos).w
		move.w	(Saved2_camera_max_Y_pos).w,(Camera_target_max_Y_pos).w
		move.w	(Saved2_camera_X_pos).w,(Camera_X_pos).w
		move.w	(Saved2_camera_Y_pos).w,(Camera_Y_pos).w
		tst.b	(Water_flag).w
		beq.s	locret_2C7AC
		move.w	(Saved2_mean_water_level).w,(Mean_water_level).w
		move.b	(Saved2_water_full_screen_flag).w,(Water_full_screen_flag).w

locret_2C7AC:
		rts
; End of function Load_Starpost_Settings

; ---------------------------------------------------------------------------
Ani_Starpost:	include "General/Sprites/Starpost/Anim - Starpost.asm"
Map_StarPost:	include "General/Sprites/Starpost/Map - Starpost.asm"
Map_StarpostStars:
		include "General/Sprites/Starpost/Map - Starpost Stars.asm"

; =============== S U B R O U T I N E =======================================


sub_2C83E:
		moveq	#3,d1
		moveq	#0,d2

loc_2C842:
		jsr	(Create_New_Sprite).l
		bne.s	locret_2C8AC
		move.l	(a0),(a1)
		move.l	#Map_StarpostStars,$C(a1)
		move.w	#$5EC,$A(a1)
		move.b	#4,4(a1)
		move.b	#8,5(a1)
		move.w	$10(a0),d0
		move.w	d0,$10(a1)
		move.w	d0,$30(a1)
		move.w	$14(a0),d0
		subi.w	#$30,d0
		move.w	d0,$14(a1)
		move.w	d0,$32(a1)
		move.w	8(a0),8(a1)
		move.b	#8,7(a1)
		move.b	#1,$22(a1)
		move.w	#-$400,$18(a1)
		move.w	#0,$1A(a1)
		move.w	d2,$34(a1)
		addi.w	#$40,d2
		dbf	d1,loc_2C842

locret_2C8AC:
		rts
; End of function sub_2C83E

; ---------------------------------------------------------------------------

loc_2C8AE:
		move.b	$29(a0),d0
		beq.w	loc_2C8F0
		andi.b	#1,d0
		beq.s	loc_2C8EC
		move.b	#2,(Special_bonus_entry_flag).w
		move.w	#$1300,(Current_zone_and_act).w
		move.w	#$1300,(Apparent_zone_and_act).w
		move.b	#0,(Last_star_post_hit).w
		move.b	#1,(Restart_level_flag).w
		move.b	(Player_1+status_secondary).w,(Saved2_status_secondary).w
		move.b	#1,(Respawn_table_keep).w
		jsr	(Clear_SpriteRingMem).l

loc_2C8EC:
		clr.b	$29(a0)

loc_2C8F0:
		addi.w	#$A,$34(a0)
		move.w	$34(a0),d0
		andi.w	#$FF,d0
		jsr	(GetSineCosine).l
		asr.w	#5,d0
		asr.w	#3,d1
		move.w	d1,d3
		move.w	$34(a0),d2
		andi.w	#$3E0,d2
		lsr.w	#5,d2
		moveq	#2,d5
		moveq	#0,d4
		cmpi.w	#$10,d2
		ble.s	loc_2C920
		neg.w	d1

loc_2C920:
		andi.w	#$F,d2
		cmpi.w	#8,d2
		ble.s	loc_2C930
		neg.w	d2
		andi.w	#7,d2

loc_2C930:
		lsr.w	#1,d2
		beq.s	loc_2C936
		add.w	d1,d4

loc_2C936:
		asl.w	#1,d1
		dbf	d5,loc_2C930
		asr.w	#4,d4
		add.w	d4,d0
		addq.w	#1,$36(a0)
		move.w	$36(a0),d1
		cmpi.w	#$80,d1
		beq.s	loc_2C95A
		bgt.s	loc_2C960

loc_2C950:
		muls.w	d1,d0
		muls.w	d1,d3
		asr.w	#7,d0
		asr.w	#7,d3
		bra.s	loc_2C972
; ---------------------------------------------------------------------------

loc_2C95A:
		move.b	#-$28,$28(a0)

loc_2C960:
		cmpi.w	#$180,d1
		ble.s	loc_2C972
		neg.w	d1
		addi.w	#$200,d1
		bmi.w	loc_2C9A6
		bra.s	loc_2C950
; ---------------------------------------------------------------------------

loc_2C972:
		move.w	$30(a0),d2
		add.w	d3,d2
		move.w	d2,$10(a0)
		move.w	$32(a0),d2
		add.w	d0,d2
		move.w	d2,$14(a0)
		addq.b	#1,$23(a0)
		move.b	$23(a0),d0
		andi.w	#6,d0
		lsr.w	#1,d0
		cmpi.b	#3,d0
		bne.s	loc_2C99C
		moveq	#1,d0

loc_2C99C:
		move.b	d0,$22(a0)
		jmp	(loc_19CC4).l
; ---------------------------------------------------------------------------

loc_2C9A6:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2C9AC:
		tst.l	(Nem_decomp_queue).w
		beq.s	loc_2C9B4
		rts
; ---------------------------------------------------------------------------

loc_2C9B4:
		move.w	#$50,$10(a0)
		btst	#0,$22(a0)
		beq.s	loc_2C9C8
		move.w	#$1F0,$10(a0)

loc_2C9C8:
		move.w	#$F0,$14(a0)
		move.l	#Map_GameOver,$C(a0)
		move.w	#make_art_tile(ArtTile_Shield,0,1),$A(a0)
		move.w	#0,8(a0)
		move.l	#loc_2C9E8,(a0)

loc_2C9E8:
		moveq	#$10,d1
		cmpi.w	#$120,$10(a0)
		beq.s	loc_2CA00
		bcs.s	loc_2C9F6
		neg.w	d1

loc_2C9F6:
		add.w	d1,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2CA00:
		move.w	#$1E0,$24(a0)
		move.l	#loc_2CA0E,(a0)
		rts
; ---------------------------------------------------------------------------

loc_2CA0E:
		move.w	#0,(Collision_response_list).w
		btst	#0,$22(a0)
		bne.w	loc_2CA60
		move.b	(Ctrl_1_pressed).w,d0
		or.b	(Ctrl_2_pressed).w,d0
		andi.b	#-$10,d0
		bne.s	loc_2CA3C
		tst.w	$24(a0)
		beq.s	loc_2CA3C
		subq.w	#1,$24(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2CA3C:
		tst.b	(Time_over_flag).w
		bne.s	loc_2CA56
		move.b	#$14,(Game_mode).w
		tst.b	(Continue_count).w
		bne.s	loc_2CA60
		move.b	#0,(Game_mode).w
		bra.s	loc_2CA60
; ---------------------------------------------------------------------------

loc_2CA56:
		clr.l	(Saved_timer).w
		move.w	#1,(Restart_level_flag).w

loc_2CA60:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_TitleCard:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	TitleCard_Index(pc,d0.w),d1
		jmp	TitleCard_Index(pc,d1.w)
; ---------------------------------------------------------------------------
TitleCard_Index:dc.w Obj_TitleCardInit-TitleCard_Index
		dc.w Obj_TitleCardCreate-TitleCard_Index
		dc.w Obj_TitleCardWait-TitleCard_Index
		dc.w Obj_TitleCardWait2-TitleCard_Index
; ---------------------------------------------------------------------------

Obj_TitleCardInit:
		cmpi.b	#$E,(Current_zone).w
		bcs.s	loc_2CA96
		cmpi.b	#$12,(Current_zone).w
		bhi.s	loc_2CA96
		st	$44(a0)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2CA96:
		lea	(ArtKosM_TitleCardRedAct).l,a1
		move.w	#$A000,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_TitleCardNum1).l,a1
		tst.b	(Apparent_act).w
		beq.s	loc_2CAB8
		lea	(ArtKosM_TitleCardNum2).l,a1

loc_2CAB8:
		move.w	#$A7A0,d2
		jsr	(Queue_Kos_Module).l
		lea	TitleCard_LevelGfx(pc),a1
		moveq	#0,d0
		move.b	(Apparent_zone).w,d0
		lsl.w	#2,d0
		movea.l	(a1,d0.w),a1
		move.w	#$A9A0,d2
		jsr	(Queue_Kos_Module).l
		move.w	#$5A,$2E(a0)
		clr.w	$32(a0)
		st	$48(a0)
		addq.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

Obj_TitleCardCreate:
		tst.b	(Kos_modules_left).w
		bne.w	locret_2CB76
		jsr	(Create_New_Sprite3).l
		bne.s	locret_2CB76
		lea	ObjArray_TtlCardBonus(pc),a2
		moveq	#1,d1
		cmpi.b	#$13,(Current_zone).w
		bcc.s	loc_2CB20
		lea	ObjArray_TtlCard(pc),a2
		moveq	#3,d1
		tst.b	$44(a0)
		beq.s	loc_2CB20
		lea	ObjArray_TtlCard2(pc),a2
		moveq	#0,d1

loc_2CB20:
		addq.w	#1,$30(a0)
		move.l	(a2)+,(a1)
		move.w	(a2)+,$46(a1)
		move.w	(a2)+,$10(a1)
		move.w	(a2)+,$14(a1)
		move.b	(a2)+,$22(a1)
		move.b	(a2)+,7(a1)
		move.w	(a2)+,d2
		move.b	d2,$28(a1)
		move.b	#$40,4(a1)
		move.l	#Map_TitleCard,$C(a1)
		move.w	a0,$48(a1)
		jsr	(CreateNewSprite4).l
		dbne	d1,loc_2CB20
		tst.b	$3E(a0)
		beq.s	loc_2CB72
		cmpi.b	#6,(Apparent_zone).w
		bne.s	loc_2CB72
		moveq	#$25,d0
		jsr	(Load_PLC).l

loc_2CB72:
		addq.b	#2,5(a0)

locret_2CB76:
		rts
; ---------------------------------------------------------------------------

Obj_TitleCardWait:
		tst.w	$34(a0)
		beq.s	loc_2CB84
		clr.w	$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_2CB84:
		tst.w	$3E(a0)
		beq.s	loc_2CBC0
		clr.l	(Timer).w
		clr.w	(Ring_count).w
		clr.w	(Total_ring_count).w
		clr.b	(Extra_life_flags).w
		clr.l	(Timer_P2).w
		clr.w	(Ring_count_P2).w
		clr.w	(Total_ring_count_P2).w
		st	(Update_HUD_timer).w
		st	(Update_HUD_ring_count).w
		move.b	#$1E,(Player_1+air_left).w
		move.b	#$1E,(Player_2+air_left).w
		jsr	(Obj_PlayLevelMusic).l

loc_2CBC0:
		clr.w	$48(a0)
		addq.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

Obj_TitleCardWait2:
		tst.w	$2E(a0)
		beq.s	loc_2CBD6
		subq.w	#1,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_2CBD6:
		tst.w	$30(a0)
		beq.s	loc_2CBE2
		addq.w	#1,$32(a0)
		rts
; ---------------------------------------------------------------------------

loc_2CBE2:
		tst.b	$44(a0)
		bne.s	loc_2CC12
		cmpi.b	#$13,(Current_zone).w
		bcc.s	loc_2CC12
		tst.w	$3E(a0)
		beq.s	loc_2CBFC
		st	(End_of_level_flag).w
		bra.s	loc_2CC08
; ---------------------------------------------------------------------------

loc_2CBFC:
		lea	(PLC_SpikesSprings).l,a1
		jsr	(Load_PLC_Raw).l

loc_2CC08:
		jsr	LoadEnemyArt(pc)
		jsr	(PLCLoad_AnimalsAndExplosion).l

loc_2CC12:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_TitleCardRedBanner:
		movea.w	$48(a0),a1
		move.w	$32(a1),d0
		beq.s	loc_2CC40
		tst.b	4(a0)
		bmi.s	loc_2CC32
		subq.w	#1,$30(a1)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2CC32:
		cmp.b	$28(a0),d0
		bcs.s	loc_2CC56
		subi.w	#$20,$14(a0)
		bra.s	loc_2CC56
; ---------------------------------------------------------------------------

loc_2CC40:
		move.w	$14(a0),d0
		cmp.w	$46(a0),d0
		beq.s	loc_2CC56
		addi.w	#$10,d0
		move.w	d0,$14(a0)
		st	$34(a1)

loc_2CC56:
		move.b	#$70,6(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_TitleCardName:
		move.b	(Apparent_zone).w,d0
		add.b	d0,$22(a0)
		move.l	#Obj_TitleCardElement,(a0)

Obj_TitleCardElement:
		movea.w	$48(a0),a1
		move.w	$32(a1),d0
		beq.s	loc_2CC98
		tst.b	4(a0)
		bmi.s	loc_2CC8A
		subq.w	#1,$30(a1)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2CC8A:
		cmp.b	$28(a0),d0
		bcs.s	loc_2CCAE
		addi.w	#$20,$10(a0)
		bra.s	loc_2CCAE
; ---------------------------------------------------------------------------

loc_2CC98:
		move.w	$10(a0),d0
		cmp.w	$46(a0),d0
		beq.s	loc_2CCAE
		subi.w	#$10,d0
		move.w	d0,$10(a0)
		st	$34(a1)

loc_2CCAE:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_TitleCardAct:
		move.l	#Obj_TitleCardElement,(a0)
		move.b	(Apparent_zone).w,d0
		cmpi.b	#$A,d0
		beq.s	loc_2CCCA
		cmpi.b	#$C,d0
		bne.s	Obj_TitleCardElement

loc_2CCCA:
		movea.w	$48(a0),a1
		subq.w	#1,$30(a1)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_TitleCardElement2:
		clr.b	4(a0)
		movea.w	$48(a0),a1
		move.w	$32(a1),d0
		beq.s	loc_2CD06
		cmpi.w	#$20C,$10(a0)
		bcs.s	loc_2CCF8
		subq.w	#1,$30(a1)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2CCF8:
		cmp.b	$28(a0),d0
		bcs.s	loc_2CD1C
		addi.w	#$20,$10(a0)
		bra.s	loc_2CD1C
; ---------------------------------------------------------------------------

loc_2CD06:
		move.w	$10(a0),d0
		cmp.w	$46(a0),d0
		beq.s	loc_2CD1C
		subi.w	#$10,d0
		move.w	d0,$10(a0)
		st	$34(a1)

loc_2CD1C:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
TitleCard_LevelGfx:dc.l	ArtKosM_AIZTitleCard
		dc.l ArtKosM_HCZTitleCard
		dc.l ArtKosM_MGZTitleCard
		dc.l ArtKosM_CNZTitleCard
		dc.l ArtKosM_FBZTitleCard
		dc.l ArtKosM_ICZTitleCard
		dc.l ArtKosM_LBZTitleCard
		dc.l ArtKosM_AIZTitleCard
		dc.l ArtKosM_AIZTitleCard
		dc.l ArtKosM_AIZTitleCard
		dc.l ArtKosM_AIZTitleCard
		dc.l ArtKosM_AIZTitleCard
		dc.l ArtKosM_AIZTitleCard
		dc.l ArtKosM_AIZTitleCard
		dc.l ArtKosM_ALZTitleCard
		dc.l ArtKosM_BPZTitleCard
		dc.l ArtKosM_CGZTitleCard
		dc.l ArtKosM_DPZTitleCard
		dc.l ArtKosM_EMZTitleCard
		dc.l ArtKosM_BonusTitleCard
		dc.l ArtKosM_BonusTitleCard
		dc.l ArtKosM_BonusTitleCard
ObjArray_TtlCard:dc.l Obj_TitleCardName
		dc.w $120
		dc.w $260
		dc.w $E0
		dc.b 4
		dc.b $80
		dc.w 3
		dc.l Obj_TitleCardElement
		dc.w $17C
		dc.w $2FC
		dc.w $100
		dc.b 3
		dc.b $24
		dc.w 5
		dc.l Obj_TitleCardAct
		dc.w $184
		dc.w $344
		dc.w $120
		dc.b 2
		dc.b $1C
		dc.w 7
		dc.l Obj_TitleCardRedBanner
		dc.w $C0
		dc.w $E0
		dc.w $10
		dc.b 1
		dc.b 0
		dc.w 1
ObjArray_TtlCard2:dc.l Obj_TitleCardElement2
		dc.w $15C
		dc.w $21C
		dc.w $BC
		dc.b $12
		dc.b $80
		dc.w 1
ObjArray_TtlCardBonus:dc.l Obj_TitleCardElement
		dc.w $C8
		dc.w $188
		dc.w $E8
		dc.b $13
		dc.b $80
		dc.w 1
		dc.l Obj_TitleCardElement
		dc.w $128
		dc.w $1E8
		dc.w $E8
		dc.b $14
		dc.b $80
		dc.w 1
; ---------------------------------------------------------------------------

Obj_LevelResults:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	LevelResults_Index(pc,d0.w),d1
		jmp	LevelResults_Index(pc,d1.w)
; ---------------------------------------------------------------------------
LevelResults_Index:dc.w	Obj_LevelResultsInit-LevelResults_Index
		dc.w Obj_LevelResultsCreate-LevelResults_Index
		dc.w Obj_LevelResultsWait-LevelResults_Index
		dc.w Obj_LevelResultsWait2-LevelResults_Index
; ---------------------------------------------------------------------------

Obj_LevelResultsInit:
		lea	(ArtKosM_ResultsGeneral).l,a1
		move.w	#-$5C00,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_TitleCardNum1).l,a1
		tst.b	(Apparent_act).w
		beq.s	loc_2CE14
		lea	(ArtKosM_TitleCardNum2).l,a1

loc_2CE14:
		move.w	#-$5200,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_ResultsSONIC).l,a1
		cmpi.w	#1,(Player_mode).w
		bls.s	loc_2CE4C
		lea	(ArtKosM_ResultsKNUCKLES).l,a1
		cmpi.w	#3,(Player_mode).w
		beq.s	loc_2CE4C
		lea	(ArtKosM_ResultsMILES).l,a1
		tst.b	(Graphics_flags).w
		bpl.s	loc_2CE4C
		lea	(ArtKosM_ResultsTAILS).l,a1

loc_2CE4C:
		move.w	#-$5000,d2
		tst.b	(Apparent_act).w
		beq.s	loc_2CE5A
		move.w	#-$4C00,d2

loc_2CE5A:
		jsr	(Queue_Kos_Module).l
		moveq	#0,d0
		move.b	(Timer_minute).w,d0
		mulu.w	#60,d0
		moveq	#0,d1
		move.b	(Timer_second).w,d1
		add.w	d1,d0
		cmpi.w	#$257,d0
		bne.s	loc_2CE80
		move.w	#10000,(Time_bonus_countdown).w
		bra.s	loc_2CE98
; ---------------------------------------------------------------------------

loc_2CE80:
		divu.w	#$1E,d0
		moveq	#7,d1
		cmp.w	d1,d0
		bcs.s	loc_2CE8C
		move.w	d1,d0

loc_2CE8C:
		add.w	d0,d0
		lea	TimeBonus(pc),a1
		move.w	(a1,d0.w),(Time_bonus_countdown).w

loc_2CE98:
		move.w	(Ring_count).w,d0
		mulu.w	#$A,d0
		move.w	d0,(Ring_bonus_countdown).w
		clr.w	(Total_bonus_countup).w
		move.w	#360,$2E(a0)
		move.w	#$C,$30(a0)
		addq.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

Obj_LevelResultsCreate:
		tst.b	(Kos_modules_left).w
		bne.s	locret_2CF24
		jsr	(Create_New_Sprite3).l
		bne.s	locret_2CF24
		lea	ObjArray_LevResults(pc),a2
		moveq	#$B,d1

loc_2CECE:
		move.l	(a2)+,(a1)
		move.w	(a2)+,$46(a1)
		move.w	(a2)+,$10(a1)
		spl	5(a1)
		move.w	(a2)+,$14(a1)
		move.b	(a2)+,$22(a1)
		move.b	(a2)+,7(a1)
		move.w	(a2)+,d2
		move.b	d2,$28(a1)
		move.b	#$40,4(a1)
		move.l	#Map_Results,$C(a1)
		move.w	a0,$48(a1)
		jsr	(CreateNewSprite4).l
		dbne	d1,loc_2CECE
		addq.b	#2,5(a0)
		tst.b	(Apparent_act).w
		bne.s	locret_2CF24
		move.b	(Apparent_zone).w,d0
		beq.s	locret_2CF24
		cmpi.b	#5,d0
		beq.s	locret_2CF24
		st	(Events_fg_5).w

locret_2CF24:
		rts
; ---------------------------------------------------------------------------

Obj_LevelResultsWait:
		tst.w	$2E(a0)
		beq.s	loc_2CF4C
		subq.w	#1,$2E(a0)
		cmpi.w	#$121,$2E(a0)
		bne.s	locret_2CF8E
		move.b	#$1E,(Player_1+air_left).w
		move.b	#$1E,(Player_2+air_left).w
		moveq	#signextendB(mus_GotThroughAct),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

loc_2CF4C:
		moveq	#0,d0
		tst.w	(Time_bonus_countdown).w
		beq.s	loc_2CF5E
		addi.w	#$A,d0
		subi.w	#$A,(Time_bonus_countdown).w

loc_2CF5E:
		tst.w	(Ring_bonus_countdown).w
		beq.s	loc_2CF6E
		addi.w	#$A,d0
		subi.w	#$A,(Ring_bonus_countdown).w

loc_2CF6E:
		add.w	d0,(Total_bonus_countup).w
		tst.w	d0
		beq.s	loc_2CF90
		jsr	(HUD_AddToScore).l
		move.w	(Level_frame_counter).w,d0
		andi.w	#3,d0
		bne.s	locret_2CF8E
		moveq	#signextendB(sfx_Switch),d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

locret_2CF8E:
		rts
; ---------------------------------------------------------------------------

loc_2CF90:
		moveq	#signextendB(sfx_Register),d0
		jsr	(Play_Sound_2).l
		jsr	(SaveGame).l
		move.w	#$5A,$2E(a0)
		addq.b	#2,5(a0)

Obj_LevelResultsWait2:
		tst.w	$2E(a0)
		beq.s	loc_2CFB4
		subq.w	#1,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_2CFB4:
		tst.w	$30(a0)
		beq.s	loc_2CFC0
		addq.w	#1,$32(a0)
		rts
; ---------------------------------------------------------------------------

loc_2CFC0:
		tst.b	(Apparent_act).w
		beq.s	loc_2CFD4
		clr.b	(_unkFAA8).w
		st	(End_of_level_flag).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2CFD4:
		move.b	#1,(Apparent_act).w
		clr.b	(Last_star_post_hit).w
		clr.b	(Special_bonus_entry_flag).w
		clr.b	(_unkFAA8).w
		move.l	#Obj_TitleCard,(a0)
		clr.b	5(a0)
		st	$3E(a0)
		rts
; ---------------------------------------------------------------------------

Obj_LevResultsCharName:
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_2D01A
		cmpi.w	#3,(Player_mode).w
		bne.s	loc_2D036
		addq.b	#3,$22(a0)
		moveq	#$30,d0
		sub.w	d0,$10(a0)
		sub.w	d0,$46(a0)
		add.b	d0,7(a0)
		bra.s	loc_2D036
; ---------------------------------------------------------------------------

loc_2D01A:
		addq.b	#1,$22(a0)
		tst.b	(Graphics_flags).w
		bpl.s	loc_2D036
		addq.b	#1,$22(a0)
		moveq	#8,d0
		add.w	d0,$10(a0)
		add.w	d0,$46(a0)
		sub.b	d0,7(a0)

loc_2D036:
		moveq	#0,d0
		tst.b	(Apparent_act).w
		beq.s	loc_2D042
		move.w	#$20,d0

loc_2D042:
		move.w	d0,$A(a0)
		move.l	#Obj_LevResultsGeneral,(a0)

Obj_LevResultsGeneral:
		jsr	LevelResults_MoveElement(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_LevelResultsTimeBonus:
		jsr	LevelResults_MoveElement(pc)
		move.w	(Time_bonus_countdown).w,d0
		bra.s	loc_2D072
; ---------------------------------------------------------------------------

Obj_LevelResultsRingBonus:
		jsr	LevelResults_MoveElement(pc)
		move.w	(Ring_bonus_countdown).w,d0
		bra.s	loc_2D072
; ---------------------------------------------------------------------------

Obj_LevelResultsTotal:
		jsr	LevelResults_MoveElement(pc)
		move.w	(Total_bonus_countup).w,d0

loc_2D072:
		bsr.s	LevResults_DisplayScore
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


LevResults_DisplayScore:
		move.w	#7,$16(a0)
		jsr	LevResults_GetDecimalScore(pc)
		rol.l	#4,d1
		lea	$18(a0),a1
		move.w	$10(a0),d2
		subi.w	#$38,d2
		move.w	$14(a0),d3
		moveq	#0,d4
		moveq	#6,d5

loc_2D09A:
		move.w	d2,(a1)+
		move.w	d3,(a1)+
		addq.w	#1,a1
		rol.l	#4,d1
		move.w	d1,d0
		andi.w	#$F,d0
		beq.s	loc_2D0AC
		moveq	#1,d4

loc_2D0AC:
		add.w	d4,d0
		move.b	d0,(a1)+
		addq.w	#8,d2
		dbf	d5,loc_2D09A
		rts
; End of function LevResults_DisplayScore


; =============== S U B R O U T I N E =======================================


LevelResults_MoveElement:
		movea.w	$48(a0),a1
		move.w	$32(a1),d0
		beq.s	loc_2D0EC
		tst.b	4(a0)
		bmi.s	loc_2D0D4
		subq.w	#1,$30(a1)
		addq.w	#4,sp
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2D0D4:
		cmp.b	$28(a0),d0
		bcs.s	locret_2D102
		move.w	#-$20,d0
		tst.b	5(a0)
		beq.s	loc_2D0E6
		neg.w	d0

loc_2D0E6:
		add.w	$10(a0),d0
		bra.s	loc_2D0FE
; ---------------------------------------------------------------------------

loc_2D0EC:
		moveq	#$10,d1
		move.w	$10(a0),d0
		cmp.w	$46(a0),d0
		beq.s	loc_2D0FE
		blt.s	loc_2D0FC
		neg.w	d1

loc_2D0FC:
		add.w	d1,d0

loc_2D0FE:
		move.w	d0,$10(a0)

locret_2D102:
		rts
; End of function LevelResults_MoveElement


; =============== S U B R O U T I N E =======================================


LevResults_GetDecimalScore:
		clr.l	(_unkEF40_1).w
		lea	TimeBonus(pc),a1
		moveq	#$F,d2

loc_2D10E:
		ror.w	#1,d0
		bcs.s	loc_2D116
		subq.w	#3,a1
		bra.s	loc_2D124
; ---------------------------------------------------------------------------

loc_2D116:
		lea	(_unkEF44_2).w,a2
		addi.w	#0,d0
		abcd	-(a1),-(a2)
		abcd	-(a1),-(a2)
		abcd	-(a1),-(a2)

loc_2D124:
		dbf	d2,loc_2D10E
		move.l	(_unkEF40_1).w,d1
		rts
; End of function LevResults_GetDecimalScore

; ---------------------------------------------------------------------------
		dc.b 3, $27, $68
		dc.b 1, $63, $84
		dc.b 0, $81, $92
		dc.b 0, $40, $96
		dc.b 0, $20, $48
		dc.b 0, $10, $24
		dc.b 0, 5, $12
		dc.b 0, 2, $56
		dc.b 0, 1, $28
		dc.b 0, 0, $64
		dc.b 0, 0, $32
		dc.b 0, 0, $16
		dc.b 0, 0, 8
		dc.b 0, 0, 4
		dc.b 0, 0, 2
		dc.b 0, 0, 1
TimeBonus:	dc.w  $1388, $1388,  $3E8,  $1F4,  $190,  $12C,   $64,    $A
ObjArray_LevResults:dc.l Obj_LevResultsCharName
		dc.w $E0
		dc.w $FDE0
		dc.w $B8
		dc.b $13
		dc.b $48
		dc.w 1
		dc.l Obj_LevResultsGeneral
		dc.w $130
		dc.w $FE30
		dc.w $B8
		dc.b $11
		dc.b $30
		dc.w 1
		dc.l Obj_LevResultsGeneral
		dc.w $E8
		dc.w $468
		dc.w $CC
		dc.b $10
		dc.b $70
		dc.w 3
		dc.l Obj_LevResultsGeneral
		dc.w $160
		dc.w $4E0
		dc.w $BC
		dc.b $F
		dc.b $38
		dc.w 3
		dc.l Obj_LevResultsGeneral
		dc.w $C0
		dc.w $4C0
		dc.w $F0
		dc.b $E
		dc.b $20
		dc.w 5
		dc.l Obj_LevResultsGeneral
		dc.w $E8
		dc.w $4E8
		dc.w $F0
		dc.b $C
		dc.b $30
		dc.w 5
		dc.l Obj_LevelResultsTimeBonus
		dc.w $178
		dc.w $578
		dc.w $F0
		dc.b 1
		dc.b $40
		dc.w 5
		dc.l Obj_LevResultsGeneral
		dc.w $C0
		dc.w $500
		dc.w $100
		dc.b $D
		dc.b $20
		dc.w 7
		dc.l Obj_LevResultsGeneral
		dc.w $E8
		dc.w $528
		dc.w $100
		dc.b $C
		dc.b $30
		dc.w 7
		dc.l Obj_LevelResultsRingBonus
		dc.w $178
		dc.w $5B8
		dc.w $100
		dc.b 1
		dc.b $40
		dc.w 7
		dc.l Obj_LevResultsGeneral
		dc.w $D4
		dc.w $554
		dc.w $11C
		dc.b $B
		dc.b $30
		dc.w 9
		dc.l Obj_LevelResultsTotal
		dc.w $178
		dc.w $5F8
		dc.w $11C
		dc.b 1
		dc.b $40
		dc.w 9
; ---------------------------------------------------------------------------

locret_2D216:
		rts
; ---------------------------------------------------------------------------

SpecialStage_Results:
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#-$41,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Clear_DisplayData).l
		lea	(VDP_control_port).l,a6
		move.w	#-$7FFC,(a6)
		move.w	#-$7DD0,(a6)
		move.w	#-$7BF9,(a6)
		move.w	#-$7500,(a6)
		move.w	#-$737F,(a6)
		move.w	#-$6FEF,(a6)
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_2D260:
		move.l	d0,(a1)+
		dbf	d1,loc_2D260
		lea	(Object_RAM).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Object_RAM)/4-1,d1

loc_2D270:
		move.l	d0,(a1)+
		dbf	d1,loc_2D270
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		jsr	(SaveGame_SpecialStage).l
		clr.w	(Competition_mode).w
		clr.w	(Plane_buffer).w
		clr.w	(Special_V_int_routine).w
		clr.b	(Update_HUD_timer).w
		moveq	#0,d0
		jsr	(Load_PLC_2).l
		lea	(ArtKosM_ResultsGeneral).l,a1
		move.w	#-$5C00,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_ResultsSONIC).l,a1
		cmpi.w	#1,(Player_mode).w
		bls.s	loc_2D2DE
		lea	(ArtKosM_ResultsKNUCKLES).l,a1
		cmpi.w	#3,(Player_mode).w
		beq.s	loc_2D2DE
		lea	(ArtKosM_ResultsMILES).l,a1
		tst.b	(Graphics_flags).w
		bpl.s	loc_2D2DE
		lea	(ArtKosM_ResultsTAILS).l,a1

loc_2D2DE:
		move.w	#-$5000,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_SSResults).l,a1
		move.w	#$20,d2
		jsr	(Queue_Kos_Module).l
		move.l	#locret_2D216,(_unkEF44_1).w

loc_2D300:
		move.b	#$1E,(V_int_routine).w
		jsr	(Process_Kos_Queue).l
		jsr	(Wait_VSync).l
		jsr	(Process_Nem_Queue_Init).l
		jsr	(Process_Kos_Module_Queue).l
		tst.b	(Kos_modules_left).w
		bne.s	loc_2D300
		tst.l	(Nem_decomp_queue).w
		bne.s	loc_2D300
		jsr	(HUD_DrawInitial).l
		move.b	#1,(Update_HUD_score).w
		lea	Pal_Results(pc),a0
		lea	(Normal_palette).w,a1
		moveq	#$1F,d0

loc_2D340:
		move.l	(a0)+,(a1)+
		dbf	d0,loc_2D340
		cmpi.w	#3,(Player_mode).w
		bne.s	loc_2D35C
		move.l	#$84E040C,(Normal_palette+4).w
		move.w	#$206,(Normal_palette+8).w

loc_2D35C:
		jsr	(Init_SpriteTable).l
		move.l	#loc_2D41E,(Dynamic_object_RAM+object_size).w
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l

loc_2D378:
		move.b	#8,(V_int_routine).w
		jsr	(Wait_VSync).l
		addq.w	#1,(Level_frame_counter).w
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		cmpi.b	#$48,(Game_mode).w
		beq.s	loc_2D378
		rts
; ---------------------------------------------------------------------------
Pal_Results:	binclude "General/Special Stage/Palettes/Results S3.bin"
		even
; ---------------------------------------------------------------------------

loc_2D41E:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_2D42C(pc,d0.w),d1
		jmp	off_2D42C(pc,d1.w)
; ---------------------------------------------------------------------------
off_2D42C:	dc.w loc_2D438-off_2D42C
		dc.w loc_2D49A-off_2D42C
		dc.w loc_2D506-off_2D42C
		dc.w loc_2D53A-off_2D42C
		dc.w loc_2D590-off_2D42C
		dc.w loc_2D5DC-off_2D42C
; ---------------------------------------------------------------------------

loc_2D438:
		lea	$4A(a0),a1
		lea	ObjDat2_2D5F0(pc),a2
		moveq	#$12,d1

loc_2D442:
		move.l	(a2)+,(a1)
		move.w	(a2)+,$46(a1)
		move.w	(a2)+,$10(a1)
		move.w	(a2)+,$14(a1)
		move.b	(a2)+,$22(a1)
		move.b	(a2)+,7(a1)
		move.b	#$40,4(a1)
		move.l	#Map_Results,$C(a1)
		move.w	a0,$48(a1)
		lea	$4A(a1),a1
		dbf	d1,loc_2D442
		move.w	(Special_stage_ring_count).w,d0
		mulu.w	#$A,d0
		move.w	d0,(Ring_bonus_countdown).w
		clr.w	(Time_bonus_countdown).w
		tst.w	(Special_stage_rings_left).w
		bne.s	loc_2D48E
		move.w	#$1388,(Time_bonus_countdown).w

loc_2D48E:
		move.w	#$168,$2E(a0)
		addq.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_2D49A:
		tst.w	$2E(a0)
		beq.s	loc_2D4B4
		subq.w	#1,$2E(a0)
		cmpi.w	#$121,$2E(a0)
		bne.s	locret_2D4F2
		moveq	#signextendB(mus_GotThroughAct),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

loc_2D4B4:
		moveq	#0,d0
		tst.w	(Time_bonus_countdown).w
		beq.s	loc_2D4C6
		addi.w	#$A,d0
		subi.w	#$A,(Time_bonus_countdown).w

loc_2D4C6:
		tst.w	(Ring_bonus_countdown).w
		beq.s	loc_2D4D6
		addi.w	#$A,d0
		subi.w	#$A,(Ring_bonus_countdown).w

loc_2D4D6:
		tst.w	d0
		beq.s	loc_2D4F4
		jsr	(HUD_AddToScore).l
		move.w	(Level_frame_counter).w,d0
		andi.w	#3,d0
		bne.s	locret_2D4F2
		moveq	#signextendB(sfx_Switch),d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

locret_2D4F2:
		rts
; ---------------------------------------------------------------------------

loc_2D4F4:
		moveq	#signextendB(sfx_Register),d0
		jsr	(Play_Sound_2).l
		move.w	#$78,$2E(a0)
		addq.b	#2,5(a0)

loc_2D506:
		tst.w	$2E(a0)
		beq.s	loc_2D512
		subq.w	#1,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_2D512:
		cmpi.w	#50,(Special_stage_ring_count).w
		bcs.s	loc_2D536
		jsr	(Create_New_Sprite3).l
		bne.s	loc_2D536
		move.l	#loc_2D83C,(a1)
		move.w	#$10E,$2E(a0)
		moveq	#signextendB(sfx_Continue),d0
		jsr	(Play_Sound_2).l

loc_2D536:
		addq.b	#2,5(a0)

loc_2D53A:
		tst.w	$2E(a0)
		beq.s	loc_2D546
		subq.w	#1,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_2D546:
		cmpi.w	#1,(Player_mode).w
		bhi.s	loc_2D588
		tst.w	(Special_stage_spheres_left).w
		bne.s	loc_2D588
		cmpi.b	#7,(Emerald_count+1).w
		bcs.s	loc_2D588
		lea	(Dynamic_object_RAM+(object_size*16)).w,a1
		moveq	#4,d0

loc_2D562:
		move.l	#loc_2D872,(a1)
		lea	$4A(a1),a1
		dbf	d0,loc_2D562
		move.w	#4,(Dynamic_object_RAM+(object_size*18)+objoff_2E).w
		move.w	#4,(Dynamic_object_RAM+(object_size*20)+objoff_2E).w
		move.w	#5,$30(a0)
		addq.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_2D588:
		move.b	#$C,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_2D590:
		tst.w	$30(a0)
		bne.s	locret_2D5DA
		lea	(Dynamic_object_RAM+(object_size*16)).w,a1
		lea	ObjDat2_2D6D4(pc),a2
		moveq	#4,d1

loc_2D5A0:
		move.l	(a2)+,(a1)
		move.w	(a2)+,$46(a1)
		move.w	(a2)+,$10(a1)
		move.w	(a2)+,$14(a1)
		move.b	(a2)+,$22(a1)
		move.b	(a2)+,7(a1)
		move.b	#$40,4(a1)
		move.l	#Map_Results,$C(a1)
		move.w	a0,$48(a1)
		lea	$4A(a1),a1
		dbf	d1,loc_2D5A0
		move.w	#$F0,$2E(a0)
		addq.b	#2,5(a0)

locret_2D5DA:
		rts
; ---------------------------------------------------------------------------

loc_2D5DC:
		tst.w	$2E(a0)
		beq.s	loc_2D5E8
		subq.w	#1,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_2D5E8:
		move.b	#$C,(Game_mode).w
		rts
; ---------------------------------------------------------------------------
ObjDat2_2D5F0:	dc.l loc_2D710
		dc.w $120
		dc.w $4E0
		dc.w $100
		dc.b $17
		dc.b $60
		dc.l loc_2D710
		dc.w $C0
		dc.w $4C0
		dc.w $118
		dc.b $18
		dc.b $58
		dc.l loc_2D71A
		dc.w $178
		dc.w $578
		dc.w $118
		dc.b 1
		dc.b $40
		dc.l loc_2D710
		dc.w $C0
		dc.w $500
		dc.w $128
		dc.b $19
		dc.b $40
		dc.l loc_2D724
		dc.w $178
		dc.w $5B8
		dc.w $128
		dc.b 1
		dc.b $40
		dc.l loc_2D736
		dc.w $C0
		dc.w $540
		dc.w $138
		dc.b $1A
		dc.b $48
		dc.l loc_2D74A
		dc.w $120
		dc.w $120
		dc.w $D0
		dc.b $1B
		dc.b 0
		dc.l loc_2D74A
		dc.w $110
		dc.w $110
		dc.w $E8
		dc.b $1C
		dc.b 1
		dc.l loc_2D74A
		dc.w $130
		dc.w $130
		dc.w $E8
		dc.b $1D
		dc.b 2
		dc.l loc_2D74A
		dc.w $100
		dc.w $100
		dc.w $D0
		dc.b $1E
		dc.b 3
		dc.l loc_2D74A
		dc.w $140
		dc.w $140
		dc.w $D0
		dc.b $1F
		dc.b 4
		dc.l loc_2D74A
		dc.w $F0
		dc.w $F0
		dc.w $E8
		dc.b $20
		dc.b 5
		dc.l loc_2D74A
		dc.w $150
		dc.w $150
		dc.w $E8
		dc.b $21
		dc.b 6
		dc.l loc_2D76C
		dc.w $120
		dc.w $460
		dc.w $A0
		dc.b $22
		dc.b $60
		dc.l loc_2D776
		dc.w $D4
		dc.w $394
		dc.w $98
		dc.b $13
		dc.b $48
		dc.l loc_2D7AC
		dc.w $124
		dc.w $3E4
		dc.w $98
		dc.b $23
		dc.b $48
		dc.l loc_2D7DE
		dc.w $120
		dc.w $460
		dc.w $B0
		dc.b $24
		dc.b $64
		dc.l loc_2D800
		dc.w $114
		dc.w $3D4
		dc.w $98
		dc.b $25
		dc.b $20
		dc.l loc_2D828
		dc.w $118
		dc.w $458
		dc.w $B0
		dc.b $26
		dc.b $10
ObjDat2_2D6D4:	dc.l loc_2D710
		dc.w $120
		dc.w $420
		dc.w $98
		dc.b $27
		dc.b $60
		dc.l loc_2D710
		dc.w $100
		dc.w $400
		dc.w $98
		dc.b $13
		dc.b $48
		dc.l loc_2D710
		dc.w $C0
		dc.w $440
		dc.w $B0
		dc.b $28
		dc.b $20
		dc.l loc_2D710
		dc.w $E8
		dc.w $468
		dc.w $B0
		dc.b $12
		dc.b $50
		dc.l loc_2D710
		dc.w $138
		dc.w $4B8
		dc.w $B0
		dc.b $13
		dc.b $48
; ---------------------------------------------------------------------------

loc_2D710:
		jsr	LevelResults_MoveElement(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2D71A:
		jsr	LevelResults_MoveElement(pc)
		move.w	(Ring_bonus_countdown).w,d0
		bra.s	loc_2D72C
; ---------------------------------------------------------------------------

loc_2D724:
		jsr	LevelResults_MoveElement(pc)
		move.w	(Time_bonus_countdown).w,d0

loc_2D72C:
		jsr	LevResults_DisplayScore(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2D736:
		cmpi.w	#50,(Special_stage_ring_count).w
		bcs.w	loc_2D89E
		jsr	LevelResults_MoveElement(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2D74A:
		lea	(Collected_emeralds_array).w,a1
		moveq	#0,d0
		move.b	7(a0),d0
		tst.b	(a1,d0.w)
		beq.w	loc_2D89E
		btst	#0,(Level_frame_counter+1).w
		beq.s	locret_2D76A
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_2D76A:
		rts
; ---------------------------------------------------------------------------

loc_2D76C:
		tst.w	(Special_stage_spheres_left).w
		beq.w	loc_2D89E
		bra.s	loc_2D710
; ---------------------------------------------------------------------------

loc_2D776:
		tst.w	(Special_stage_spheres_left).w
		bne.w	loc_2D89E
		jsr	sub_2D8A4(pc)
		add.w	d0,$10(a0)
		add.w	d0,$46(a0)
		add.b	d1,$22(a0)
		cmpi.b	#7,(Emerald_count+1).w
		bcs.s	loc_2D7A2
		subi.w	#$10,$10(a0)
		subi.w	#$10,$46(a0)

loc_2D7A2:
		lea	(loc_2D710).l,a1
		move.l	a1,(a0)
		jmp	(a1)
; ---------------------------------------------------------------------------

loc_2D7AC:
		tst.w	(Special_stage_spheres_left).w
		bne.w	loc_2D89E
		jsr	sub_2D8A4(pc)
		sub.w	d0,$10(a0)
		sub.w	d0,$46(a0)
		cmpi.b	#7,(Emerald_count+1).w
		bcs.s	loc_2D7D4
		subi.w	#$10,$10(a0)
		subi.w	#$10,$46(a0)

loc_2D7D4:
		lea	(loc_2D710).l,a1
		move.l	a1,(a0)
		jmp	(a1)
; ---------------------------------------------------------------------------

loc_2D7DE:
		tst.w	(Special_stage_spheres_left).w
		bne.w	loc_2D89E
		cmpi.b	#7,(Emerald_count+1).w
		bcs.s	loc_2D7F6
		subq.w	#8,$10(a0)
		subq.w	#8,$46(a0)

loc_2D7F6:
		lea	(loc_2D710).l,a1
		move.l	a1,(a0)
		jmp	(a1)
; ---------------------------------------------------------------------------

loc_2D800:
		tst.w	(Special_stage_spheres_left).w
		bne.w	loc_2D89E
		cmpi.b	#7,(Emerald_count+1).w
		bcs.w	loc_2D89E
		jsr	sub_2D8A4(pc)
		sub.w	d0,$10(a0)
		sub.w	d0,$46(a0)
		lea	(loc_2D710).l,a1
		move.l	a1,(a0)
		jmp	(a1)
; ---------------------------------------------------------------------------

loc_2D828:
		tst.w	(Special_stage_spheres_left).w
		bne.w	loc_2D89E
		cmpi.b	#7,(Emerald_count+1).w
		bcs.s	loc_2D89E
		bra.w	loc_2D710
; ---------------------------------------------------------------------------

loc_2D83C:
		move.l	#Map_Results,$C(a0)
		move.w	#$17C,$10(a0)
		move.w	#$14C,$14(a0)
		move.w	(Player_mode).w,d0
		subq.w	#1,d0
		bcc.s	loc_2D85A
		moveq	#0,d0

loc_2D85A:
		addi.w	#$29,d0
		move.b	d0,$22(a0)
		btst	#3,(Level_frame_counter+1).w
		beq.s	locret_2D870
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_2D870:
		rts
; ---------------------------------------------------------------------------

loc_2D872:
		tst.w	$2E(a0)
		beq.s	loc_2D87E
		subq.w	#1,$2E(a0)
		bra.s	loc_2D898
; ---------------------------------------------------------------------------

loc_2D87E:
		tst.b	4(a0)
		bmi.s	loc_2D892
		movea.w	$48(a0),a1
		subq.w	#1,$30(a1)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2D892:
		addi.w	#$20,$10(a0)

loc_2D898:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2D89E:
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_2D8A4:
		moveq	#0,d0
		moveq	#0,d1
		cmpi.w	#1,(Player_mode).w
		bls.s	locret_2D8CA
		moveq	#-$18,d0
		moveq	#3,d1
		cmpi.w	#3,(Player_mode).w
		beq.s	locret_2D8CA
		moveq	#0,d0
		moveq	#1,d1
		tst.b	(Graphics_flags).w
		bpl.s	locret_2D8CA
		moveq	#4,d0
		moveq	#2,d1

locret_2D8CA:
		rts
; End of function sub_2D8A4

; ---------------------------------------------------------------------------
Map_GameOver:	include "General/Sprites/Game Over/Map - Game Over.asm"
Map_TitleCard:	include "General/Sprites/Title Card/Map - Title Card S3.asm"
Map_Results:	include "General/Sprites/Results/Map - Results S3.asm"

; =============== S U B R O U T I N E =======================================


LoadEnemyArt:
		lea	off_2DF60(pc),a6
		move.w	(Apparent_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#6,d0
		adda.w	(a6,d0.w),a6
		move.w	(a6)+,d6
		bmi.s	locret_2DF5E

loc_2DF50:
		movea.l	(a6)+,a1
		move.w	(a6)+,d2
		jsr	(Queue_Kos_Module).l
		dbf	d6,loc_2DF50

locret_2DF5E:
		rts
; End of function LoadEnemyArt

; ---------------------------------------------------------------------------
off_2DF60:	dc.w PLCKosM_AIZ-off_2DF60
		dc.w PLCKosM_AIZ-off_2DF60
		dc.w PLCKosM_HCZ1-off_2DF60
		dc.w PLCKosM_HCZ2-off_2DF60
		dc.w PLCKosM_MGZ1-off_2DF60
		dc.w PLCKosM_MGZ2-off_2DF60
		dc.w PLCKosM_CNZ-off_2DF60
		dc.w PLCKosM_CNZ-off_2DF60
		dc.w PLCKosM_FBZ-off_2DF60
		dc.w PLCKosM_FBZ-off_2DF60
		dc.w PLCKosM_ICZ-off_2DF60
		dc.w PLCKosM_ICZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
		dc.w PLCKosM_LBZ-off_2DF60
PLCKosM_AIZ:	dc.w 2
		dc.l ArtKosM_AIZ_MonkeyDude
		dc.w $A900
		dc.l ArtKosM_AIZ_Tulipon
		dc.w $A540
		dc.l ArtKosM_AIZ_CaterkillerJr
		dc.w $ABE0
PLCKosM_HCZ1:	dc.w 3
		dc.l ArtKosM_Blastoid
		dc.w $A720
		dc.l ArtKosM_TurboSpiker
		dc.w $A000
		dc.l ArtKosM_MegaChopper
		dc.w $A9A0
		dc.l ArtKosM_Pointdexter
		dc.w $AB20
PLCKosM_HCZ2:	dc.w 3
		dc.l ArtKosM_Jawz
		dc.w $A720
		dc.l ArtKosM_TurboSpiker
		dc.w $A000
		dc.l ArtKosM_MegaChopper
		dc.w $A9A0
		dc.l ArtKosM_Pointdexter
		dc.w $AB20
PLCKosM_MGZ1:	dc.w 2
		dc.l ArtKosM_Spiker
		dc.w $A600
		dc.l ArtKosM_MGZMiniboss
		dc.w $A9E0
		dc.l ArtKosM_MGZEndBossDebris
		dc.w $AE00
PLCKosM_MGZ2:	dc.w 1
		dc.l ArtKosM_Spiker
		dc.w $A600
		dc.l ArtKosM_Mantis
		dc.w $A9E0
PLCKosM_CNZ:	dc.w 3
		dc.l ArtKosM_Sparkle
		dc.w $A480
		dc.l ArtKosM_Batbot
		dc.w $AA40
		dc.l ArtKosM_ClamerShot
		dc.w $AE00
		dc.l ArtKosM_CNZBalloon
		dc.w $AE80
PLCKosM_FBZ:	dc.w 1
		dc.l ArtKosM_Blaster
		dc.w $A000
		dc.l ArtKosM_Technosqueek
		dc.w $A500
PLCKosM_ICZ:	dc.w 1
		dc.l ArtKosM_ICZSnowdust
		dc.w $AB00
		dc.l ArtKosM_StarPointer
		dc.w $A900
PLCKosM_LBZ:	dc.w 3
		dc.l ArtKosM_SnailBlaster
		dc.w $A480
		dc.l ArtKosM_Orbinaut
		dc.w $ADC0
		dc.l ArtKosM_Ribot
		dc.w $A8E0
		dc.l ArtKosM_Corkey
		dc.w $AB00
; ---------------------------------------------------------------------------

Obj_Bubbler:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_2E05C(pc,d0.w),d1
		jmp	off_2E05C(pc,d1.w)
; ---------------------------------------------------------------------------
off_2E05C:	dc.w loc_2E068-off_2E05C
		dc.w loc_2E0C6-off_2E05C
		dc.w loc_2E0E0-off_2E05C
		dc.w loc_2E142-off_2E05C
		dc.w loc_2E160-off_2E05C
		dc.w loc_2E166-off_2E05C
; ---------------------------------------------------------------------------

loc_2E068:
		addq.b	#2,5(a0)
		move.l	#Map_Bubbler,$C(a0)
		move.w	#$45C,$A(a0)
		move.b	#-$7C,4(a0)
		move.b	#$10,7(a0)
		move.w	#$80,8(a0)
		move.b	$2C(a0),d0
		bpl.s	loc_2E0AC
		addq.b	#8,5(a0)
		andi.w	#$7F,d0
		move.b	d0,$32(a0)
		move.b	d0,$33(a0)
		move.b	#8,$20(a0)
		bra.w	loc_2E166
; ---------------------------------------------------------------------------

loc_2E0AC:
		move.b	d0,$20(a0)
		move.w	$10(a0),$30(a0)
		move.w	#-$88,$1A(a0)
		jsr	(Random_Number).l
		move.b	d0,$26(a0)

loc_2E0C6:
		lea	(Ani_Bubbler).l,a1
		jsr	(Animate_Sprite).l
		cmpi.b	#6,$22(a0)
		bne.s	loc_2E0E0
		move.b	#1,$2E(a0)

loc_2E0E0:
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_2E0F8
		move.b	#6,5(a0)
		addq.b	#4,$20(a0)
		bra.w	loc_2E142
; ---------------------------------------------------------------------------

loc_2E0F8:
		move.b	$26(a0),d0
		addq.b	#1,$26(a0)
		andi.w	#$7F,d0
		lea	(AirCountdown_WobbleData).l,a1
		move.b	(a1,d0.w),d0
		ext.w	d0
		add.w	$30(a0),d0
		move.w	d0,$10(a0)
		tst.b	$2E(a0)
		beq.s	loc_2E12A
		bsr.w	sub_2E2BE
		cmpi.b	#6,5(a0)
		beq.s	loc_2E142

loc_2E12A:
		jsr	(MoveSprite2).l
		tst.b	4(a0)
		bpl.s	loc_2E13C
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2E13C:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2E142:
		lea	(Ani_Bubbler).l,a1
		jsr	(Animate_Sprite).l
		tst.b	4(a0)
		bpl.s	loc_2E15A
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2E15A:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2E160:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2E166:
		tst.w	$36(a0)
		bne.s	loc_2E1C8
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bcc.w	loc_2E272
		tst.b	4(a0)
		bpl.w	loc_2E272
		subq.w	#1,$38(a0)
		bpl.w	loc_2E266
		move.w	#1,$36(a0)

loc_2E18E:
		jsr	(Random_Number).l
		move.w	d0,d1
		andi.w	#7,d0
		cmpi.w	#6,d0
		bcc.s	loc_2E18E
		move.b	d0,$34(a0)
		andi.w	#$C,d1
		lea	(byte_2E2AC).l,a1
		adda.w	d1,a1
		move.l	a1,$3C(a0)
		subq.b	#1,$32(a0)
		bpl.s	loc_2E1C6
		move.b	$33(a0),$32(a0)
		bset	#7,$36(a0)

loc_2E1C6:
		bra.s	loc_2E1D0
; ---------------------------------------------------------------------------

loc_2E1C8:
		subq.w	#1,$38(a0)
		bpl.w	loc_2E266

loc_2E1D0:
		jsr	(Random_Number).l
		andi.w	#$1F,d0
		move.w	d0,$38(a0)
		jsr	(Create_New_Sprite).l
		bne.s	loc_2E24A
		move.l	(a0),(a1)
		move.w	$10(a0),$10(a1)
		jsr	(Random_Number).l
		andi.w	#$F,d0
		subq.w	#8,d0
		add.w	d0,$10(a1)
		move.w	$14(a0),$14(a1)
		moveq	#0,d0
		move.b	$34(a0),d0
		movea.l	$3C(a0),a2
		move.b	(a2,d0.w),$2C(a1)
		btst	#7,$36(a0)
		beq.s	loc_2E24A
		jsr	(Random_Number).l
		andi.w	#3,d0
		bne.s	loc_2E236
		bset	#6,$36(a0)
		bne.s	loc_2E24A
		move.b	#2,$2C(a1)

loc_2E236:
		tst.b	$34(a0)
		bne.s	loc_2E24A
		bset	#6,$36(a0)
		bne.s	loc_2E24A
		move.b	#2,$2C(a1)

loc_2E24A:
		subq.b	#1,$34(a0)
		bpl.s	loc_2E266
		jsr	(Random_Number).l
		andi.w	#$7F,d0
		addi.w	#$80,d0
		add.w	d0,$38(a0)
		clr.w	$36(a0)

loc_2E266:
		lea	(Ani_Bubbler).l,a1
		jsr	(Animate_Sprite).l

loc_2E272:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_2E294
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bcs.w	loc_2E2A6
		rts
; ---------------------------------------------------------------------------

loc_2E294:
		move.w	$48(a0),d0
		beq.s	loc_2E2A0
		movea.w	d0,a2
		bclr	#7,(a2)

loc_2E2A0:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2E2A6:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
byte_2E2AC:	dc.b 0
		dc.b 1
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 0
		dc.b 1
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 0

; =============== S U B R O U T I N E =======================================


sub_2E2BE:
		lea	(Player_1).w,a1
		bsr.s	sub_2E2C8
		lea	(Player_2).w,a1
; End of function sub_2E2BE


; =============== S U B R O U T I N E =======================================


sub_2E2C8:
		tst.b	$2E(a1)
		bmi.w	locret_2E392
		move.w	$10(a1),d0
		move.w	$10(a0),d1
		subi.w	#$10,d1
		cmp.w	d0,d1
		bcc.w	locret_2E392
		addi.w	#$20,d1
		cmp.w	d0,d1
		bcs.w	locret_2E392
		move.w	$14(a1),d0
		move.w	$14(a0),d1
		cmp.w	d0,d1
		bcc.w	locret_2E392
		addi.w	#$10,d1
		cmp.w	d0,d1
		bcs.w	locret_2E392
		btst	#6,$2B(a1)
		bne.w	locret_2E392
		jsr	(Player_ResetAirTimer).l
		moveq	#signextendB(sfx_Bubble),d0
		jsr	(Play_Sound_2).l
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		move.b	#$15,$20(a1)
		move.w	#$23,$32(a1)
		move.b	#0,$40(a1)
		bclr	#5,$2A(a1)
		bclr	#4,$2A(a1)
		btst	#2,$2A(a1)
		beq.w	loc_2E380
		cmpi.l	#Obj_Sonic,(a1)
		bne.s	loc_2E370
		bclr	#2,$2A(a1)
		move.b	#$13,$1E(a1)
		move.b	#9,$1F(a1)
		subq.w	#5,$14(a1)
		bra.s	loc_2E380
; ---------------------------------------------------------------------------

loc_2E370:
		move.b	#$F,$1E(a1)
		move.b	#9,$1F(a1)
		subq.w	#1,$14(a1)

loc_2E380:
		cmpi.b	#6,5(a0)
		beq.s	locret_2E392
		move.b	#6,5(a0)
		addq.b	#4,$20(a0)

locret_2E392:
		rts
; End of function sub_2E2C8

; ---------------------------------------------------------------------------
Ani_Bubbler:	include "General/Sprites/Bubbles/Anim - Bubbler.asm"
Map_Bubbler:	include "General/Sprites/Bubbles/Map - Bubbler.asm"
; ---------------------------------------------------------------------------

Obj_37_1:
		move.l	#Map_HCZWaterRush,$C(a0)
		ori.b	#4,4(a0)
		move.w	#$437A,$A(a0)
		move.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$40,7(a0)
		move.b	#$20,6(a0)
		move.b	#2,$22(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2E53E
		move.l	#loc_2E5C8,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		subi.w	#$30,$10(a1)
		move.l	#Map_HCZWaterRushBlock,$C(a1)
		move.w	#$43D4,$A(a1)
		move.b	#$10,7(a1)
		move.b	#$20,6(a1)
		move.b	#4,4(a1)
		move.w	#$280,8(a1)
		move.b	#1,$22(a1)
		move.w	a1,$3C(a0)

loc_2E53E:
		move.b	#3,(_unkF7C7).w
		move.l	#loc_2E54A,(a0)

loc_2E54A:
		tst.b	(Level_trigger_array).w
		beq.s	loc_2E56E
		move.b	#3,$22(a0)
		move.b	#1,$24(a0)
		move.l	#loc_2E574,(a0)
		move.b	#0,(_unkF7C7).w
		move.b	#1,(Palette_cycle_counters+$00).w

loc_2E56E:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2E574:
		subq.b	#1,$24(a0)
		bpl.s	loc_2E5B4
		move.b	#1,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#2,$22(a0)
		bne.s	loc_2E5AE
		addi.w	#$20,$10(a0)
		cmpi.w	#$580,$10(a0)
		bne.s	loc_2E5AE
		cmpi.w	#$5A0,$14(a0)
		bne.s	loc_2E5AE
		subi.w	#$20,$10(a0)
		subi.w	#$20,$14(a0)

loc_2E5AE:
		andi.b	#1,$22(a0)

loc_2E5B4:
		cmpi.w	#$980,$10(a0)
		bcs.s	loc_2E5C2
		move.w	#$7F00,$10(a0)

loc_2E5C2:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2E5C8:
		tst.b	(Level_trigger_array).w
		beq.s	loc_2E5E8
		move.l	#loc_2E5D4,(a0)

loc_2E5D4:
		subi.w	#$10,$14(a0)
		cmpi.w	#$560,$14(a0)
		bne.s	loc_2E5E8
		move.w	#$7F00,$10(a0)

loc_2E5E8:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_HCZWaterRush:
		include "Levels/HCZ/Misc Object Data/Map - Water Rush.asm"
Map_HCZWaterRushBlock:
		include "Levels/HCZ/Misc Object Data/Map - Water Rush Block.asm"
; ---------------------------------------------------------------------------

Obj_HCZWaterWall:
		tst.b	$2C(a0)
		beq.s	loc_2E794
		move.l	#loc_2EB24,(a0)
		rts
; ---------------------------------------------------------------------------

loc_2E794:
		move.w	(Player_1+y_pos).w,d0
		cmpi.w	#$500,d0
		bcc.s	loc_2E7A4
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2E7A4:
		lea	(ArtKosM_HCZGeyserHorz).l,a1
		move.w	#-$6000,d2
		jsr	(Queue_Kos_Module).l
		move.l	#loc_2E7BA,(a0)

loc_2E7BA:
		tst.b	(Kos_modules_left).w
		beq.s	loc_2E7C2
		rts
; ---------------------------------------------------------------------------

loc_2E7C2:
		ori.b	#4,4(a0)
		move.w	#$300,8(a0)
		move.l	#Map_HCZWaterWall,$C(a0)
		move.w	#$4500,$A(a0)
		move.b	#-$80,7(a0)
		move.b	#$20,6(a0)
		bset	#6,4(a0)
		move.w	#1,$16(a0)
		lea	$18(a0),a2
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		move.w	#$20,$30(a0)
		move.l	#loc_2E80C,(a0)

loc_2E80C:
		move.w	(Player_1+x_pos).w,d0
		subi.w	#$60,d0
		cmp.w	$10(a0),d0
		bcs.w	loc_2E896
		move.l	#loc_2E8CC,(a0)
		moveq	#signextendB(sfx_Geyser),d0
		jsr	(Play_Sound_2).l
		lea	(byte_2E89C).l,a3
		move.w	$10(a0),d2
		addi.w	#$60,d2
		move.w	$14(a0),d3
		moveq	#7,d1

loc_2E83E:
		jsr	(Create_New_Sprite3).l
		bne.s	loc_2E896
		move.l	#loc_2E9AA,(a1)
		move.l	#Map_HCZWaterWallDebris,$C(a1)
		move.w	#$4558,$A(a1)
		move.b	#-$7C,4(a1)
		move.b	(a3)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,$10(a1)
		move.b	(a3)+,d0
		ext.w	d0
		add.w	d3,d0
		move.w	d0,$14(a1)
		move.w	#$380,8(a1)
		move.b	#$18,7(a1)
		move.b	#$18,6(a1)
		move.w	(a3)+,$18(a1)
		move.w	(a3)+,$1A(a1)
		move.b	d1,$22(a1)
		dbf	d1,loc_2E83E

loc_2E896:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
byte_2E89C:	dc.b 0
		dc.b $E8
		dc.w $400
		dc.w $FF80
		dc.b 0
		dc.b $F8
		dc.w $600
		dc.w $FFC0
		dc.b 0
		dc.b 8
		dc.w $600
		dc.w $40
		dc.b 0
		dc.b $18
		dc.w $400
		dc.w $80
		dc.b 0
		dc.b $E8
		dc.w $300
		dc.w $FC80
		dc.b 0
		dc.b $F8
		dc.w $400
		dc.w $FCC0
		dc.b 0
		dc.b 8
		dc.w $300
		dc.w $100
		dc.b 0
		dc.b $18
		dc.w $500
		dc.w $FF00
; ---------------------------------------------------------------------------

loc_2E8CC:
		tst.w	$30(a0)
		beq.s	loc_2E8DA
		subq.w	#1,$30(a0)
		addq.w	#8,$10(a0)

loc_2E8DA:
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2E958
		move.l	#loc_2EA6E,(a1)
		move.l	$C(a0),$C(a1)
		move.b	#-$7C,4(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	(Level_frame_counter).w,d0
		jsr	(Random_Number).l
		move.w	d0,d1
		andi.w	#$F,d0
		lsl.w	#3,d0
		subi.w	#$50,d0
		add.w	d0,$10(a1)
		addi.w	#$18,$14(a1)
		move.w	#$4530,$A(a1)
		lsr.w	#4,d1
		andi.w	#3,d1
		bne.s	loc_2E936
		move.w	#$45C,$A(a1)

loc_2E936:
		move.b	d1,$20(a1)
		move.w	#$380,8(a1)
		move.b	#$18,7(a1)
		move.b	#$18,6(a1)
		move.w	#$400,$18(a1)
		move.w	#0,$1A(a1)

loc_2E958:
		lea	$18(a0),a2
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		tst.b	4(a0)
		bmi.s	loc_2E990
		clr.b	(Palette_cycle_counters+$00).w
		move.w	#$FF00|mus_MutePSG,d0
		jsr	(Play_Sound_2).l
		move.w	#$FF00|mus_StopSFX,d0
		jsr	(Play_Sound_2).l
		move.w	#$96,$30(a0)
		move.l	#loc_2E996,(a0)
		rts
; ---------------------------------------------------------------------------

loc_2E990:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2E996:
		subq.w	#1,$30(a0)
		bmi.s	loc_2E99E
		rts
; ---------------------------------------------------------------------------

loc_2E99E:
		jsr	(LoadEnemyArt).l
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2E9AA:
		subq.b	#1,$24(a0)
		bpl.s	loc_2E9C0
		move.b	#2,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#7,$22(a0)

loc_2E9C0:
		jsr	(MoveSprite2).l
		addi.w	#$38,$1A(a0)
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_2EA32
		move.w	#0,$1A(a0)
		asr	$18(a0)
		asr	$18(a0)
		move.l	#loc_2EA38,(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2EA32
		move.l	#loc_2EACE,(a1)
		move.l	#Map_HCZWaterWall,$C(a1)
		move.w	#$2530,$A(a1)
		move.b	#-$7C,4(a1)
		move.w	$10(a0),$10(a1)
		move.w	(Water_level).w,$14(a1)
		move.w	#$200,8(a1)
		move.b	#$18,7(a1)
		move.b	#$18,6(a1)
		move.b	#8,$20(a1)

loc_2EA32:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2EA38:
		subq.b	#1,$24(a0)
		bpl.s	loc_2EA4E
		move.b	#9,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#7,$22(a0)

loc_2EA4E:
		jsr	(MoveSprite2).l
		addi.w	#8,$1A(a0)
		tst.b	4(a0)
		bpl.w	loc_2EA68
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2EA68:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2EA6E:
		jsr	(MoveSprite2).l
		addi.w	#$28,$1A(a0)
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_2EA92
		move.w	d0,$14(a0)
		move.l	#loc_2EAAC,(a0)
		addq.b	#4,$20(a0)

loc_2EA92:
		tst.b	4(a0)
		bpl.w	loc_2EA68
		lea	(Ani_HCZWaterWall).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2EAAC:
		tst.b	4(a0)
		bpl.w	loc_2EA68
		lea	(Ani_HCZWaterWall).l,a1
		jsr	(Animate_Sprite).l
		tst.b	5(a0)
		bne.w	loc_2EA68
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2EACE:
		tst.b	4(a0)
		bpl.w	loc_2EA68
		lea	(Ani_HCZWaterWall).l,a1
		jsr	(Animate_SpriteIrregularDelay).l
		tst.b	5(a0)
		bne.w	loc_2EA68
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Ani_HCZWaterWall:
		include "Levels/HCZ/Misc Object Data/Anim - Water Wall.asm"
; ---------------------------------------------------------------------------

loc_2EB24:
		move.w	(Player_1+x_pos).w,d0
		addi.w	#$30,d0
		sub.w	$10(a0),d0
		cmpi.w	#$60,d0
		bcc.s	loc_2EB48
		move.w	(Player_1+y_pos).w,d0
		addi.w	#$40,d0
		sub.w	$14(a0),d0
		cmpi.w	#$10,d0
		bcs.s	loc_2EB4E

loc_2EB48:
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

loc_2EB4E:
		lea	(ArtKosM_HCZGeyserVert).l,a1
		move.w	#-$6000,d2
		jsr	(Queue_Kos_Module).l
		move.b	#1,$22(a0)
		move.b	#-$7F,(Player_1+object_control).w
		move.b	#-$7F,(Player_2+object_control).w
		move.l	#loc_2EB76,(a0)

loc_2EB76:
		tst.b	(Kos_modules_left).w
		beq.s	loc_2EB8A
		subi.w	#8,(Player_1+y_pos).w
		subi.w	#8,(Player_2+y_pos).w
		rts
; ---------------------------------------------------------------------------

loc_2EB8A:
		ori.b	#4,4(a0)
		move.w	#$300,8(a0)
		move.l	#Map_HCZWaterWall,$C(a0)
		move.w	#$4500,$A(a0)
		move.b	#$20,7(a0)
		move.b	#$60,6(a0)
		move.w	#$60,$30(a0)
		move.b	#$1C,(Player_1+anim).w
		move.b	#$1C,(Player_2+anim).w
		move.l	#loc_2EBC8,(a0)

loc_2EBC8:
		tst.w	$30(a0)
		beq.s	loc_2EBD6
		subq.w	#1,$30(a0)
		subq.w	#8,$14(a0)

loc_2EBD6:
		subi.w	#8,(Player_1+y_pos).w
		subi.w	#8,(Player_2+y_pos).w
		cmpi.w	#$28,$30(a0)
		bhi.w	locret_2EC78
		move.b	#$1A,(Player_1+anim).w
		move.b	#$1A,(Player_2+anim).w
		move.l	#loc_2ECAA,(a0)
		moveq	#signextendB(sfx_Geyser),d0
		jsr	(Play_Sound_2).l
		move.b	#1,(Palette_cycle_counters+$00).w
		lea	(byte_2EC7A).l,a3
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#$80,d3
		moveq	#7,d1

loc_2EC20:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_2EC78
		move.l	#loc_2E9AA,(a1)
		move.l	#Map_HCZWaterWallDebris,$C(a1)
		move.w	#$4558,$A(a1)
		move.b	#-$7C,4(a1)
		move.b	(a3)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,$10(a1)
		move.b	(a3)+,d0
		ext.w	d0
		add.w	d3,d0
		move.w	d0,$14(a1)
		move.w	#$280,8(a1)
		move.b	#$18,7(a1)
		move.b	#$18,6(a1)
		move.w	(a3)+,$18(a1)
		move.w	(a3)+,$1A(a1)
		move.b	d1,$22(a1)
		dbf	d1,loc_2EC20

locret_2EC78:
		rts
; ---------------------------------------------------------------------------
byte_2EC7A:	dc.b $E8
		dc.b 0
		dc.w $FE00
		dc.w $F500
		dc.b $F8
		dc.b 0
		dc.w $FF00
		dc.w $F400
		dc.b $E8
		dc.b 0
		dc.w $FC00
		dc.w $F800
		dc.b $F8
		dc.b 0
		dc.w $FD00
		dc.w $F600
		dc.b 8
		dc.b 0
		dc.w $300
		dc.w $F400
		dc.b $18
		dc.b 0
		dc.w $400
		dc.w $F500
		dc.b 8
		dc.b 0
		dc.w $100
		dc.w $F600
		dc.b $18
		dc.b 0
		dc.w $200
		dc.w $F800
; ---------------------------------------------------------------------------

loc_2ECAA:
		tst.w	$30(a0)
		beq.s	loc_2ED00
		move.w	#-$A00,$1A(a0)
		subq.w	#1,$30(a0)
		bne.s	loc_2ED00
		move.l	#loc_2EDBA,(a0)
		lea	(Player_1).w,a1
		move.b	#0,$2E(a1)
		move.w	#0,$18(a1)
		move.w	#-$C00,$1A(a1)
		move.b	#0,$40(a1)
		lea	(Player_2).w,a1
		move.b	#0,$2E(a1)
		move.w	#0,$18(a1)
		move.w	#-$C00,$1A(a1)
		move.b	#0,$40(a1)
		move.w	#-$800,$1A(a0)

loc_2ED00:
		subi.w	#$A,(Player_1+y_pos).w
		subi.w	#$A,(Player_2+y_pos).w
		jsr	(MoveSprite2).l
		addi.w	#$48,$1A(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2ED64
		jsr	(Random_Number).l
		move.w	d0,d1
		move.w	d0,d2
		bsr.s	sub_2ED6A
		addi.w	#$10,$10(a1)
		andi.w	#$F,d1
		lsl.w	#6,d1
		move.w	d1,$18(a1)
		move.w	#-$700,$1A(a1)
		move.w	d0,d2
		jsr	(Create_New_Sprite3).l
		bne.w	loc_2ED64
		bsr.s	sub_2ED6A
		subi.w	#$10,$10(a1)
		neg.w	d1
		move.w	d1,$18(a1)
		move.w	#-$700,$1A(a1)

loc_2ED64:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_2ED6A:
		move.l	#loc_2EA6E,(a1)
		move.l	$C(a0),$C(a1)
		move.b	#-$7C,4(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		subi.w	#$50,$14(a1)
		move.w	#$380,8(a1)
		move.b	#$18,7(a1)
		move.b	#$18,6(a1)
		move.w	#$4530,$A(a1)
		lsr.w	#4,d2
		andi.w	#3,d2
		bne.s	loc_2EDB4
		move.w	#$45C,$A(a1)

loc_2EDB4:
		move.b	d2,$20(a1)
		rts
; End of function sub_2ED6A

; ---------------------------------------------------------------------------

loc_2EDBA:
		tst.b	4(a0)
		bmi.s	loc_2EDFE
		move.w	#$FF00|mus_StopSFX,d0
		jsr	(Play_Sound_2).l
		move.w	#$FF00|mus_MutePSG,d0
		jsr	(Play_Sound_2).l
		move.w	#$FF00|mus_StopSFX,d0
		jsr	(Play_Sound_2).l
		move.b	#0,(Palette_cycle_counters+$00).w
		move.w	$48(a0),d0
		beq.s	loc_2EDF0
		movea.w	d0,a2
		bclr	#7,(a2)

loc_2EDF0:
		move.w	#$1E,$30(a0)
		move.l	#loc_2E996,(a0)
		rts
; ---------------------------------------------------------------------------

loc_2EDFE:
		jsr	(MoveSprite2).l
		addi.w	#$48,$1A(a0)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_HCZWaterWall:
		include "Levels/HCZ/Misc Object Data/Map - Waterfall.asm"
Map_HCZWaterWallDebris:
		include "Levels/HCZ/Misc Object Data/Map - Water Wall Debris.asm"
; ---------------------------------------------------------------------------

Obj_HCZCGZFan:
		tst.w	(Competition_mode).w
		bne.w	loc_2F51C
		movea.l	a0,a1
		tst.b	$2C(a0)
		bpl.s	loc_2EFE0
		jsr	(Create_New_Sprite3).l
		bne.w	locret_2F02A
		move.l	#loc_2F22E,(a0)
		move.w	$10(a0),$10(a1)
		move.w	$10(a0),$40(a0)
		move.w	$14(a0),$14(a1)
		addi.w	#$1C,$14(a0)
		move.l	#Map_HCZWaterRushBlock,$C(a0)
		move.w	#$43D4,$A(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.w	a1,$3C(a0)
		move.b	$2C(a0),d0
		andi.w	#$30,d0
		add.w	d0,d0
		move.w	d0,$3A(a0)
		move.b	$2C(a0),$2C(a1)
		bclr	#5,$2C(a1)
		bset	#4,$2C(a1)

loc_2EFE0:
		move.l	#Map_HCZFan,$C(a1)
		move.w	#$240B,$A(a1)
		ori.b	#4,4(a1)
		move.w	#$200,8(a1)
		move.b	#$10,7(a1)
		move.b	#$C,6(a1)
		move.w	$10(a1),$40(a1)
		move.b	$2C(a1),d0
		andi.w	#$F,d0
		addq.w	#8,d0
		lsl.w	#4,d0
		move.w	d0,$36(a1)
		addi.w	#$30,d0
		move.w	d0,$38(a1)
		move.l	#loc_2F02C,(a1)

locret_2F02A:
		rts
; ---------------------------------------------------------------------------

loc_2F02C:
		move.b	$2C(a0),d0
		btst	#5,d0
		beq.s	loc_2F04A
		tst.b	(Level_trigger_array).w
		beq.w	loc_2F152
		bclr	#5,$2C(a0)
		bset	#4,$2C(a0)

loc_2F04A:
		tst.b	$42(a0)
		bne.s	loc_2F080
		btst	#4,$2C(a0)
		bne.s	loc_2F0A0
		subq.w	#1,$30(a0)
		bpl.s	loc_2F078
		move.w	#0,$34(a0)
		move.w	#$78,$30(a0)
		bchg	#0,$32(a0)
		beq.s	loc_2F078
		move.w	#$B4,$30(a0)

loc_2F078:
		tst.b	$32(a0)
		beq.w	loc_2F0A0

loc_2F080:
		subq.b	#1,$24(a0)
		bpl.w	loc_2F152
		cmpi.w	#$400,$34(a0)
		bcc.w	loc_2F152
		addi.w	#$2A,$34(a0)
		move.b	$34(a0),$24(a0)
		bra.s	loc_2F0BE
; ---------------------------------------------------------------------------

loc_2F0A0:
		lea	(Player_1).w,a1
		bsr.w	sub_2F15C
		lea	(Player_2).w,a1
		bsr.w	sub_2F15C
		subq.b	#1,$24(a0)
		bpl.w	loc_2F0D0
		move.b	#0,$24(a0)

loc_2F0BE:
		addq.b	#1,$22(a0)
		cmpi.b	#5,$22(a0)
		bcs.s	loc_2F0D0
		move.b	#0,$22(a0)

loc_2F0D0:
		tst.b	4(a0)
		bpl.s	loc_2F0EA
		move.b	(Level_frame_counter+1).w,d0
		addq.b	#1,d0
		andi.b	#$F,d0
		bne.s	loc_2F0EA
		moveq	#signextendB(sfx_FanSmall),d0
		jsr	(Play_Sound_2).l

loc_2F0EA:
		btst	#6,$2C(a0)
		beq.s	loc_2F152
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#3,d0
		bne.s	loc_2F152
		jsr	(Create_New_Sprite).l
		bne.s	loc_2F152
		move.l	#loc_2F212,(a1)
		move.l	#Map_Bubbler,$C(a1)
		move.w	#$45C,$A(a1)
		move.b	#-$7C,4(a1)
		move.b	#4,7(a1)
		move.b	#4,7(a1)
		move.w	#$300,8(a1)
		move.w	$10(a0),$10(a1)
		jsr	(Random_Number).l
		andi.w	#$F,d0
		subq.w	#8,d0
		add.w	d0,$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	#-$800,$1A(a1)

loc_2F152:
		move.w	$40(a0),d0
		jmp	(Sprite_OnScreen_Test2).l

; =============== S U B R O U T I N E =======================================


sub_2F15C:
		cmpi.b	#4,5(a1)
		bcc.w	locret_2F1FA
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$18,d0
		cmpi.w	#$30,d0
		bcc.w	locret_2F1FA
		moveq	#0,d1
		move.b	(Oscillating_table+$16).w,d1
		add.w	$14(a1),d1
		add.w	$36(a0),d1
		sub.w	$14(a0),d1
		bcs.s	locret_2F1FA
		cmp.w	$38(a0),d1
		bcc.s	locret_2F1FA
		tst.b	$2E(a1)
		bne.s	loc_2F1FC
		sub.w	$36(a0),d1
		bcs.s	loc_2F1A4
		not.w	d1
		add.w	d1,d1

loc_2F1A4:
		add.w	$36(a0),d1
		neg.w	d1
		asr.w	#6,d1
		add.w	d1,$14(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		move.w	#0,$1A(a1)
		move.b	#0,$2F(a1)
		move.b	#0,$40(a1)
		btst	#6,$2C(a0)
		bne.s	loc_2F204
		move.w	#1,$1C(a1)
		tst.b	$27(a1)
		bne.s	locret_2F1FA
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#$7F,$30(a1)
		move.b	#8,$31(a1)

locret_2F1FA:
		rts
; ---------------------------------------------------------------------------

loc_2F1FC:
		move.w	#1,$1C(a1)
		rts
; ---------------------------------------------------------------------------

loc_2F204:
		move.w	#1,$1C(a1)
		move.b	#$F,$20(a1)
		rts
; End of function sub_2F15C

; ---------------------------------------------------------------------------

loc_2F212:
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_2F228
		jsr	(MoveSprite2).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_2F228:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2F22E:
		movea.w	$3C(a0),a1
		move.w	(Player_1+y_pos).w,d0
		sub.w	$14(a0),d0
		bcs.s	loc_2F26C
		cmpi.w	#$20,d0
		blt.s	loc_2F296
		tst.b	$42(a1)
		bne.s	loc_2F25C
		move.b	#1,$42(a1)
		move.w	#0,$34(a1)
		moveq	#signextendB(sfx_FanLatch),d0
		jsr	(Play_Sound_2).l

loc_2F25C:
		move.w	$3A(a0),d1
		cmp.w	$30(a0),d1
		beq.s	loc_2F296
		addq.w	#8,$30(a0)
		bra.s	loc_2F296
; ---------------------------------------------------------------------------

loc_2F26C:
		cmpi.w	#-$30,d0
		bge.s	loc_2F296
		tst.b	$42(a1)
		beq.s	loc_2F28C
		move.b	#0,$42(a1)
		move.b	#0,$24(a1)
		moveq	#signextendB(sfx_FanLatch),d0
		jsr	(Play_Sound_2).l

loc_2F28C:
		tst.w	$30(a0)
		beq.s	loc_2F296
		subq.w	#8,$30(a0)

loc_2F296:
		move.w	$30(a0),d0
		btst	#0,$2A(a0)
		beq.s	loc_2F2A4
		neg.w	d0

loc_2F2A4:
		add.w	$40(a0),d0
		move.w	d0,$10(a0)
		move.w	d0,$10(a1)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		move.w	$40(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

Obj_HCZLargeFan:
		move.w	(Player_1+x_pos).w,d0
		subi.w	#$20,d0
		cmp.w	$10(a0),d0
		bcs.s	loc_2F2F8
		move.w	(Player_1+y_pos).w,d0
		subi.w	#$20,d0
		sub.w	$14(a0),d0
		cmpi.w	#$40,d0
		bcs.s	loc_2F304

loc_2F2F8:
		move.b	#3,(_unkF7C7).w
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

loc_2F304:
		lea	(ArtKosM_HCZLargeFan).l,a1
		move.w	#-$6000,d2
		jsr	(Queue_Kos_Module).l
		move.l	#loc_2F31A,(a0)

loc_2F31A:
		tst.b	(Kos_modules_left).w
		beq.s	loc_2F322
		rts
; ---------------------------------------------------------------------------

loc_2F322:
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.l	#Map_HCZLargeFan,$C(a0)
		move.w	#$2500,$A(a0)
		move.b	#$18,7(a0)
		move.b	#$20,6(a0)
		move.w	#8,$30(a0)
		moveq	#signextendB(sfx_FanLatch),d0
		jsr	(Play_Sound_2).l
		move.l	#loc_2F35C,(a0)

loc_2F35C:
		tst.w	$30(a0)
		beq.s	loc_2F372
		addq.w	#8,$14(a0)
		subq.w	#1,$30(a0)
		bne.s	loc_2F372
		move.b	#0,(_unkF7C7).w

loc_2F372:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$F,d0
		bne.s	loc_2F384
		moveq	#signextendB(sfx_FanBig),d0
		jsr	(Play_Sound_2).l

loc_2F384:
		subq.b	#1,$24(a0)
		bpl.w	loc_2F3A4
		move.b	#0,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#5,$22(a0)
		bcs.s	loc_2F3A4
		move.b	#0,$22(a0)

loc_2F3A4:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_HCZFan:	include "Levels/HCZ/Misc Object Data/Map - Fan.asm"
Map_HCZLargeFan:include "Levels/HCZ/Misc Object Data/Map - Large Fan.asm"
; ---------------------------------------------------------------------------

loc_2F51C:
		move.l	#Map_CGZFan,$C(a0)
		move.w	#$6300,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	#$10,7(a0)
		move.b	#4,6(a0)
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		addq.w	#8,d0
		lsl.w	#4,d0
		move.w	d0,$36(a0)
		addi.w	#$30,d0
		move.w	d0,$38(a0)
		move.l	#loc_2F560,(a0)

loc_2F560:
		lea	(Player_1).w,a1
		bsr.w	sub_2F588
		lea	(Player_2).w,a1
		bsr.w	sub_2F588
		addq.b	#1,$22(a0)
		cmpi.b	#3,$22(a0)
		bcs.s	loc_2F582
		move.b	#0,$22(a0)

loc_2F582:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_2F588:
		cmpi.b	#4,5(a1)
		bcc.w	locret_2F61E
		tst.b	$2E(a1)
		bne.w	locret_2F61E
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$14,d0
		cmpi.w	#$28,d0
		bcc.s	locret_2F61E
		moveq	#0,d1
		move.b	(Oscillating_table+$16).w,d1
		add.w	$14(a1),d1
		add.w	$36(a0),d1
		sub.w	$14(a0),d1
		bcs.s	locret_2F61E
		cmp.w	$38(a0),d1
		bcc.s	locret_2F61E
		sub.w	$36(a0),d1
		bcs.s	loc_2F5D0
		not.w	d1
		add.w	d1,d1

loc_2F5D0:
		add.w	$36(a0),d1
		neg.w	d1
		asr.w	#6,d1
		add.w	d1,$14(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		move.w	#0,$1A(a1)
		move.b	#0,$2F(a1)
		move.b	#0,$40(a1)
		move.w	#1,$1C(a1)
		tst.b	$27(a1)
		bne.s	locret_2F61E
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#$7F,$30(a1)
		move.b	#8,$31(a1)

locret_2F61E:
		rts
; End of function sub_2F588

; ---------------------------------------------------------------------------
Map_CGZFan:	include "Levels/CGZ/Misc Object Data/Map - Fan.asm"
; ---------------------------------------------------------------------------

Obj_HCZHandLauncher:
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.l	#Map_HCZHandLauncher,$C(a0)
		move.w	#$23E4,$A(a0)
		move.b	#$20,7(a0)
		move.b	#$40,6(a0)
		move.w	$14(a0),$32(a0)
		move.b	#6,$22(a0)
		move.w	#$50,$30(a0)
		bset	#7,$2A(a0)
		jsr	(Create_New_Sprite3).l
		bne.s	loc_2F6D2
		move.l	#loc_2F96C,(a1)
		move.l	#Map_HCZHandLauncher,$C(a1)
		move.w	#$23E4,$A(a1)
		move.b	4(a0),4(a1)
		move.b	#$20,7(a1)
		move.b	#$30,7(a1)
		move.w	#$280,8(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	a0,$3C(a1)

loc_2F6D2:
		move.l	#loc_2F6D8,(a0)

loc_2F6D8:
		move.w	$10(a0),d1
		subi.w	#$20,d1
		move.w	(Player_1+x_pos).w,d0
		sub.w	d1,d0
		cmpi.w	#$40,d0
		bcs.s	loc_2F6F8
		move.w	(Player_2+x_pos).w,d0
		sub.w	d1,d0
		cmpi.w	#$40,d0
		bcc.s	loc_2F756

loc_2F6F8:
		tst.b	$34(a0)
		beq.s	loc_2F730
		move.b	#7,$22(a0)
		move.w	#$80,8(a0)
		tst.w	$36(a0)
		beq.s	loc_2F716
		subq.w	#1,$36(a0)
		bra.s	loc_2F750
; ---------------------------------------------------------------------------

loc_2F716:
		tst.w	$30(a0)
		beq.s	loc_2F722
		subq.w	#8,$30(a0)
		bra.s	loc_2F750
; ---------------------------------------------------------------------------

loc_2F722:
		move.l	#loc_2F786,(a0)
		move.w	#$3B,$36(a0)
		bra.s	loc_2F750
; ---------------------------------------------------------------------------

loc_2F730:
		move.w	#$13,$36(a0)
		move.b	#6,$22(a0)
		move.w	#$200,8(a0)
		cmpi.w	#$18,$30(a0)
		bls.s	loc_2F750
		subq.w	#8,$30(a0)
		bra.s	loc_2F762
; ---------------------------------------------------------------------------

loc_2F750:
		bsr.w	sub_2F860
		bra.s	loc_2F762
; ---------------------------------------------------------------------------

loc_2F756:
		cmpi.w	#$50,$30(a0)
		beq.s	loc_2F762
		addq.w	#8,$30(a0)

loc_2F762:
		move.w	$30(a0),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a0)
		move.w	#$20,d1
		move.w	#$11,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_2F786:
		tst.w	$36(a0)
		beq.s	loc_2F796
		subq.w	#1,$36(a0)
		bsr.w	sub_2F860
		bra.s	loc_2F7D0
; ---------------------------------------------------------------------------

loc_2F796:
		cmpi.w	#$50,$30(a0)
		bne.s	loc_2F7B4
		move.b	#0,$34(a0)
		move.l	#loc_2F6D8,(a0)
		moveq	#signextendB(sfx_Dash),d0
		jsr	(Play_Sound_2).l
		bra.s	loc_2F7D0
; ---------------------------------------------------------------------------

loc_2F7B4:
		cmpi.w	#$18,$30(a0)
		bne.s	loc_2F7CC
		bsr.w	sub_2F7FC
		move.b	#6,$22(a0)
		move.w	#$200,8(a0)

loc_2F7CC:
		addq.w	#8,$30(a0)

loc_2F7D0:
		move.w	$30(a0),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a0)
		cmpi.w	#$18,$30(a0)
		bhi.s	loc_2F7F6
		move.w	#$20,d1
		move.w	#$11,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l

loc_2F7F6:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_2F7FC:
		lea	(Player_1).w,a1
		moveq	#3,d6
		bsr.w	sub_2F80C
		lea	(Player_2).w,a1
		moveq	#4,d6
; End of function sub_2F7FC


; =============== S U B R O U T I N E =======================================


sub_2F80C:
		bclr	d6,$35(a0)
		beq.s	loc_2F84C
		move.w	#$1000,$1C(a1)
		move.w	#$1000,$18(a1)
		move.w	#0,$1A(a1)
		btst	#0,$2A(a0)
		beq.s	loc_2F834
		neg.w	$1C(a1)
		neg.w	$18(a1)

loc_2F834:
		move.b	#0,$20(a1)
		move.b	#0,$2E(a1)
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		rts
; ---------------------------------------------------------------------------

loc_2F84C:
		bclr	d6,$2A(a0)
		beq.s	locret_2F85E
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)

locret_2F85E:
		rts
; End of function sub_2F80C


; =============== S U B R O U T I N E =======================================


sub_2F860:
		lea	(Player_1).w,a1
		moveq	#3,d6
		move.b	(Ctrl_1_pressed_logical).w,d0
		bsr.w	sub_2F878
		lea	(Player_2).w,a1
		moveq	#4,d6
		move.b	(Ctrl_2_pressed_logical).w,d0
; End of function sub_2F860


; =============== S U B R O U T I N E =======================================


sub_2F878:
		btst	d6,$35(a0)
		beq.s	loc_2F8CE
		andi.b	#$70,d0
		beq.s	locret_2F8CC
		bclr	d6,$35(a0)
		bclr	d6,$2A(a0)
		move.w	#$800,$1C(a1)
		move.w	#$800,$18(a1)
		move.w	#-$400,$1A(a1)
		btst	#0,$2A(a0)
		beq.s	loc_2F8AE
		neg.w	$1C(a1)
		neg.w	$18(a1)

loc_2F8AE:
		move.b	#0,$2E(a1)
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		tst.b	$35(a0)
		bne.s	locret_2F8CC
		move.b	#0,$34(a0)

locret_2F8CC:
		rts
; ---------------------------------------------------------------------------

loc_2F8CE:
		btst	d6,$2A(a0)
		beq.w	locret_2F96A
		tst.b	$34(a0)
		bne.s	loc_2F8EE
		move.w	$10(a1),d0
		addi.w	#8,d0
		sub.w	$10(a0),d0
		cmpi.w	#$10,d0
		bcc.s	locret_2F96A

loc_2F8EE:
		tst.b	$2E(a1)
		bne.s	locret_2F96A
		tst.w	(Debug_placement_mode).w
		bne.s	locret_2F96A
		bset	d6,$35(a0)
		moveq	#signextendB(sfx_Roll),d0
		jsr	(Play_Sound_2).l
		move.b	#0,$20(a1)
		move.b	#$13,$1E(a1)
		move.b	#9,$1F(a1)
		bclr	#2,$2A(a1)
		cmpi.l	#Obj_Sonic,(a1)
		beq.s	loc_2F92C
		move.b	#$F,$1E(a1)

loc_2F92C:
		move.b	#1,$2E(a1)
		bclr	#5,$2A(a1)
		move.w	$10(a0),$10(a1)
		subq.w	#2,$10(a1)
		move.w	#$1000,$1C(a1)
		bclr	#0,$2A(a1)
		btst	#0,$2A(a0)
		beq.s	loc_2F964
		addq.w	#4,$10(a1)
		neg.w	$1C(a1)
		bset	#0,$2A(a1)

loc_2F964:
		move.b	#1,$34(a0)

locret_2F96A:
		rts
; End of function sub_2F878

; ---------------------------------------------------------------------------

loc_2F96C:
		movea.w	$3C(a0),a1
		move.w	$14(a1),$14(a0)
		cmpi.w	#$18,$30(a1)
		bls.s	loc_2F980
		rts
; ---------------------------------------------------------------------------

loc_2F980:
		addq.b	#1,$22(a0)
		cmpi.b	#6,$22(a0)
		bcs.s	loc_2F992
		move.b	#0,$22(a0)

loc_2F992:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_HCZHandLauncher:
		include "Levels/HCZ/Misc Object Data/Map - Hand Launcher.asm"
byte_2FAA8:	dc.b $10
		dc.b $20
		dc.w $43D4
		dc.b 8
		dc.b $20
		dc.w $4416
; ---------------------------------------------------------------------------

Obj_Door:
		moveq	#0,d0
		move.b	$2C(a0),d0
		bmi.w	loc_2FC2C
		move.b	d0,$22(a0)
		add.w	d0,d0
		add.w	d0,d0
		lea	byte_2FAA8(pc,d0.w),a1
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.w	(a1)+,$A(a0)
		move.l	#Map_HCZCNZDoor,$C(a0)
		ori.b	#4,4(a0)
		move.w	#$300,8(a0)
		move.w	$14(a0),$32(a0)
		move.w	$10(a0),d2
		move.w	d2,d3
		subi.w	#$200,d2
		addi.w	#$18,d3
		btst	#0,$2A(a0)
		beq.s	loc_2FB0A
		subi.w	#-$1E8,d2
		addi.w	#$1E8,d3

loc_2FB0A:
		move.w	d2,$34(a0)
		move.w	d3,$36(a0)
		move.l	#loc_2FB18,(a0)

loc_2FB18:
		btst	#0,$2A(a0)
		bne.s	loc_2FB34
		move.w	$34(a0),d2
		move.w	$10(a0),d3
		tst.b	$38(a0)
		beq.s	loc_2FB46
		move.w	$36(a0),d3
		bra.s	loc_2FB46
; ---------------------------------------------------------------------------

loc_2FB34:
		move.w	$10(a0),d2
		move.w	$36(a0),d3
		tst.b	$38(a0)
		beq.s	loc_2FB46
		move.w	$34(a0),d2

loc_2FB46:
		move.w	$32(a0),d4
		move.w	d4,d5
		subi.w	#$20,d4
		addi.w	#$20,d5
		move.b	#0,$38(a0)
		lea	(Player_1).w,a1
		bsr.s	sub_2FBCE
		lea	(Player_2).w,a1
		bsr.s	sub_2FBCE
		tst.b	$38(a0)
		beq.s	loc_2FB8A
		cmpi.w	#$40,$30(a0)
		beq.s	loc_2FBAA
		addq.w	#8,$30(a0)
		cmpi.w	#$40,$30(a0)
		bne.s	loc_2FB9E
		moveq	#signextendB(sfx_FanLatch),d0
		jsr	(Play_Sound_2).l
		bra.s	loc_2FB9E
; ---------------------------------------------------------------------------

loc_2FB8A:
		tst.w	$30(a0)
		beq.s	loc_2FBAA
		subq.w	#8,$30(a0)
		bne.s	loc_2FB9E
		moveq	#signextendB(sfx_FanLatch),d0
		jsr	(Play_Sound_2).l

loc_2FB9E:
		move.w	$32(a0),d0
		sub.w	$30(a0),d0
		move.w	d0,$14(a0)

loc_2FBAA:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_2FBCE:
		move.w	$10(a1),d0
		cmp.w	d2,d0
		blt.w	locret_2FBFA
		cmp.w	d3,d0
		bcc.w	locret_2FBFA
		move.w	$14(a1),d0
		cmp.w	d4,d0
		bcs.w	locret_2FBFA
		cmp.w	d5,d0
		bcc.w	locret_2FBFA
		tst.b	$2E(a1)
		bmi.s	locret_2FBFA
		move.b	#1,$38(a0)

locret_2FBFA:
		rts
; End of function sub_2FBCE

; ---------------------------------------------------------------------------
Map_HCZCNZDoor:	include "Levels/HCZ/Misc Object Data/Map - (&CNZ) Door S3.asm"
byte_2FC28:	dc.b $20
		dc.b 8
		dc.w $4416
; ---------------------------------------------------------------------------

loc_2FC2C:
		andi.w	#$7F,d0
		move.b	d0,$22(a0)
		add.w	d0,d0
		add.w	d0,d0
		lea	byte_2FC28(pc,d0.w),a1
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.w	(a1)+,$A(a0)
		move.l	#Map_CNZDoorHorizontal,$C(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.w	$10(a0),$32(a0)
		move.w	$14(a0),d2
		move.w	d2,d3
		subi.w	#$100,d2
		addi.w	#$18,d3
		btst	#1,$2A(a0)
		beq.s	loc_2FC80
		subi.w	#-$E8,d2
		addi.w	#$E8,d3

loc_2FC80:
		move.w	d2,$34(a0)
		move.w	d3,$36(a0)
		move.l	#loc_2FC8E,(a0)

loc_2FC8E:
		btst	#1,$2A(a0)
		bne.s	loc_2FCAA
		move.w	$34(a0),d2
		move.w	$14(a0),d3
		tst.b	$38(a0)
		beq.s	loc_2FCBC
		move.w	$36(a0),d3
		bra.s	loc_2FCBC
; ---------------------------------------------------------------------------

loc_2FCAA:
		move.w	$14(a0),d2
		move.w	$36(a0),d3
		tst.b	$38(a0)
		beq.s	loc_2FCBC
		move.w	$34(a0),d2

loc_2FCBC:
		move.w	$32(a0),d4
		move.w	d4,d5
		subi.w	#$20,d4
		addi.w	#$20,d5
		move.b	#0,$38(a0)
		lea	(Player_1).w,a1
		bsr.s	sub_2FD34
		lea	(Player_2).w,a1
		bsr.s	sub_2FD34
		tst.b	$38(a0)
		beq.s	loc_2FCF0
		cmpi.w	#$40,$30(a0)
		beq.s	loc_2FD10
		addq.w	#8,$30(a0)
		bra.s	loc_2FCFA
; ---------------------------------------------------------------------------

loc_2FCF0:
		tst.w	$30(a0)
		beq.s	loc_2FD10
		subq.w	#8,$30(a0)

loc_2FCFA:
		move.w	$30(a0),d0
		btst	#0,$2A(a0)
		beq.s	loc_2FD08
		neg.w	d0

loc_2FD08:
		add.w	$32(a0),d0
		move.w	d0,$10(a0)

loc_2FD10:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_2FD34:
		move.w	$14(a1),d0
		cmp.w	d2,d0
		blt.w	locret_2FD60
		cmp.w	d3,d0
		bcc.w	locret_2FD60
		move.w	$10(a1),d0
		cmp.w	d4,d0
		bcs.w	locret_2FD60
		cmp.w	d5,d0
		bcc.w	locret_2FD60
		tst.b	$2E(a1)
		bmi.s	locret_2FD60
		move.b	#1,$38(a0)

locret_2FD60:
		rts
; End of function sub_2FD34

; ---------------------------------------------------------------------------
Map_CNZDoorHorizontal:
		include "Levels/CNZ/Misc Object Data/Map - Door Horizontal.asm"
word_2FD7E:	dc.w   $B28,  $CD8
		dc.w   $BA8,  $CD8
		dc.w   $BA8,  $CD8
		dc.w   $EA8, $1058
		dc.w  $11A8, $12D8
		dc.w  $1928, $19D8
		dc.w  $21A8, $2358
		dc.w  $21A8, $2358
		dc.w  $22A8, $2458
		dc.w  $23A8, $2558
		dc.w  $2528, $26D8
		dc.w  $26A8, $27D8
		dc.w  $26A8, $2958
		dc.w  $2728, $28D8
		dc.w  $3328, $3458
		dc.w  $3328, $33D8
; ---------------------------------------------------------------------------

Obj_HCZConveyorBelt:
		lea	(Conveyor_belt_load_array).w,a1
		moveq	#0,d0
		move.b	$2C(a0),d0
		tst.b	(a1,d0.w)
		beq.s	loc_2FDE0
		move.w	$48(a0),d0
		beq.s	loc_2FDDA
		movea.w	d0,a2
		bclr	#7,(a2)

loc_2FDDA:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_2FDE0:
		move.b	#1,(a1,d0.w)
		andi.w	#$F,d0
		lsl.w	#2,d0
		lea	word_2FD7E(pc,d0.w),a1
		move.w	(a1)+,d0
		move.w	d0,$3C(a0)
		btst	#0,$2A(a0)
		bne.s	loc_2FE00
		subq.w	#8,d0

loc_2FE00:
		move.w	d0,$40(a0)
		move.w	(a1)+,d0
		move.w	d0,$3E(a0)
		btst	#0,$2A(a0)
		beq.s	loc_2FE14
		addq.w	#8,d0

loc_2FE14:
		move.w	d0,$42(a0)
		move.l	#loc_2FE1E,(a0)

loc_2FE1E:
		lea	$32(a0),a2
		lea	(Player_1).w,a1
		move.w	(Ctrl_1_logical).w,d1
		moveq	#0,d2
		bsr.s	sub_2FE80
		addq.w	#1,a2
		lea	(Player_2).w,a1
		move.w	(Ctrl_2_logical).w,d1
		moveq	#1,d2
		bsr.s	sub_2FE80
		move.w	(Camera_X_pos_coarse_back).w,d1
		move.w	$3C(a0),d0
		andi.w	#-$80,d0
		subi.w	#$280,d0
		cmp.w	d0,d1
		bcs.s	loc_2FE5E
		move.w	$3E(a0),d0
		andi.w	#-$80,d0
		cmp.w	d0,d1
		bhi.s	loc_2FE5E
		rts
; ---------------------------------------------------------------------------

loc_2FE5E:
		lea	(Conveyor_belt_load_array).w,a1
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.b	#0,(a1,d0.w)
		move.w	$48(a0),d0
		beq.s	loc_2FE7A
		movea.w	d0,a2
		bclr	#7,(a2)

loc_2FE7A:
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_2FE80:
		tst.b	(a2)
		beq.w	loc_2FF7C
		tst.w	(Debug_placement_mode).w
		bne.w	loc_2FF2E
		cmpi.b	#4,5(a1)
		bcc.w	loc_2FF2E
		btst	#$A,d1
		beq.s	loc_2FEBA
		subq.w	#1,$10(a1)
		subq.b	#1,6(a2)
		bpl.s	loc_2FEBA
		move.b	#7,6(a2)
		addi.b	#$10,8(a2)
		andi.b	#$10,8(a2)

loc_2FEBA:
		btst	#$B,d1
		beq.s	loc_2FEDC
		addq.w	#1,$10(a1)
		subq.b	#1,6(a2)
		bpl.s	loc_2FEDC
		move.b	#7,6(a2)
		addi.b	#$10,8(a2)
		andi.b	#$10,8(a2)

loc_2FEDC:
		andi.w	#$70,d1
		bne.w	loc_2FF1A
		moveq	#2,d0
		btst	#0,$2A(a0)
		beq.s	loc_2FEF0
		neg.w	d0

loc_2FEF0:
		add.w	d0,$10(a1)
		move.w	$10(a1),d0
		cmp.w	$40(a0),d0
		bcs.s	loc_2FF2E
		cmp.w	$42(a0),d0
		bcc.s	loc_2FF2E
		bsr.w	sub_300B4
		moveq	#0,d0
		move.b	$22(a1),d0
		move.l	a2,-(sp)
		jsr	(Perform_Player_DPLC).l
		movea.l	(sp)+,a2
		rts
; ---------------------------------------------------------------------------

loc_2FF1A:
		move.w	#-$500,$1A(a1)
		btst	#6,$2A(a1)
		beq.s	loc_2FF2E
		move.w	#-$200,$1A(a1)

loc_2FF2E:
		clr.b	(a2)
		move.b	#$3C,2(a2)
		btst	#6,$2A(a1)
		beq.s	loc_2FF44
		move.b	#$5A,2(a2)

loc_2FF44:
		andi.b	#-4,$2E(a1)
		bset	#1,$2A(a1)
		move.b	#1,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		bclr	#4,$2A(a1)
		move.b	#0,$27(a1)
		rts
; ---------------------------------------------------------------------------

loc_2FF7C:
		tst.b	2(a2)
		beq.s	loc_2FF88
		subq.b	#1,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_2FF88:
		move.w	$10(a1),d0
		cmp.w	$40(a0),d0
		bcs.w	locret_3002E
		cmp.w	$42(a0),d0
		bcc.w	locret_3002E
		cmpi.w	#1,$1C(a1)
		beq.w	loc_30030
		move.w	$14(a0),d0
		addi.w	#$14,d0
		cmp.w	$14(a1),d0
		bcc.s	locret_3002E
		addi.w	#$10,d0
		cmp.w	$14(a1),d0
		bcs.s	locret_3002E
		tst.w	(Debug_placement_mode).w
		bne.s	locret_3002E
		cmpi.b	#4,5(a1)
		bcc.s	locret_3002E
		tst.b	$2E(a1)
		bne.s	locret_3002E
		tst.w	$1A(a1)
		bmi.s	locret_3002E
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		andi.b	#-4,4(a1)
		move.w	$14(a0),d0
		addi.w	#$14,d0
		move.w	d0,$14(a1)
		move.b	#0,$20(a1)
		move.b	#3,$2E(a1)
		move.b	#$63,$22(a1)
		move.b	#0,4(a2)
		move.b	#0,6(a2)
		move.b	#0,8(a2)
		move.b	#1,(a2)
		moveq	#0,d0
		move.b	$22(a1),d0
		move.l	a2,-(sp)
		jsr	(Perform_Player_DPLC).l
		movea.l	(sp)+,a2

locret_3002E:
		rts
; ---------------------------------------------------------------------------

loc_30030:
		move.w	$14(a0),d0
		subi.w	#$14,d0
		cmp.w	$14(a1),d0
		bcc.s	locret_3002E
		addi.w	#$10,d0
		cmp.w	$14(a1),d0
		bcs.s	locret_3002E
		tst.w	(Debug_placement_mode).w
		bne.s	locret_3002E
		cmpi.b	#4,5(a1)
		bcc.s	locret_3002E
		tst.b	$2E(a1)
		bne.s	locret_3002E
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		andi.b	#-4,4(a1)
		move.w	$14(a0),d0
		subi.w	#$14,d0
		move.w	d0,$14(a1)
		move.b	#0,$20(a1)
		move.b	#3,$2E(a1)
		move.b	#$65,$22(a1)
		move.b	#-$80,4(a2)
		move.b	#0,6(a2)
		move.b	#0,8(a2)
		move.b	#1,(a2)
		moveq	#0,d0
		move.b	$22(a1),d0
		move.l	a2,-(sp)
		jsr	(Perform_Player_DPLC).l
		movea.l	(sp)+,a2
		rts
; End of function sub_2FE80


; =============== S U B R O U T I N E =======================================


sub_300B4:
		tst.w	$1C(a1)
		bne.s	loc_300DA
		move.b	4(a2),d0
		beq.s	loc_300D8
		bpl.s	loc_300CC
		addi.b	#6,d0
		bcc.s	loc_300CA
		moveq	#0,d0

loc_300CA:
		bra.s	loc_300D4
; ---------------------------------------------------------------------------

loc_300CC:
		subi.b	#6,d0
		bcc.s	loc_300D4
		moveq	#0,d0

loc_300D4:
		move.b	d0,4(a2)

loc_300D8:
		bra.s	loc_30104
; ---------------------------------------------------------------------------

loc_300DA:
		clr.w	$1C(a1)
		move.b	4(a2),d0
		subi.b	#-$80,d0
		beq.s	loc_30104
		bpl.s	loc_300F4
		addi.b	#6,d0
		bcc.s	loc_300F2
		moveq	#0,d0

loc_300F2:
		bra.s	loc_300FC
; ---------------------------------------------------------------------------

loc_300F4:
		subi.b	#6,d0
		bcc.s	loc_300FC
		moveq	#0,d0

loc_300FC:
		addi.b	#-$80,d0
		move.b	d0,4(a2)

loc_30104:
		moveq	#0,d0
		move.b	4(a2),d0
		lsr.b	#4,d0
		add.b	8(a2),d0
		move.b	byte_3012C(pc,d0.w),d1
		move.b	d1,$22(a1)
		andi.w	#$F,d0
		move.b	byte_3014C(pc,d0.w),d1
		ext.w	d1
		add.w	$14(a0),d1
		move.w	d1,$14(a1)
		rts
; End of function sub_300B4

; ---------------------------------------------------------------------------
byte_3012C:	dc.b  $94, $63, $64, $64, $65, $65, $65, $66, $66, $66, $66, $67, $67, $67, $68, $68, $95, $63, $64, $64
		dc.b  $65, $65, $65, $66, $66, $66, $66, $67, $67, $67, $68, $68
byte_3014C:	dc.b  $14, $14,  $B,  $B, $F1, $F1, $F1, $EC, $EC, $EC, $EC, $F4, $F4, $F4, $FE, $FE
; ---------------------------------------------------------------------------

Obj_HCZConveryorSpike:
		moveq	#0,d0
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lsl.w	#2,d0
		lea	word_2FD7E(pc),a1
		lea	(a1,d0.w),a1
		move.w	(a1)+,$3C(a0)
		move.w	(a1)+,$3E(a0)
		move.l	#Map_HCZConveyorSpike,$C(a0)
		move.w	#$243E,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$C,7(a0)
		move.b	#$C,6(a0)
		move.b	#-$75,$28(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		btst	#0,$2A(a0)
		beq.s	loc_301C8
		addi.w	#$18,$14(a0)
		move.l	#loc_3022C,(a0)
		bra.w	loc_3022C
; ---------------------------------------------------------------------------

loc_301C8:
		subi.w	#$18,$14(a0)
		move.w	#$40,$26(a0)
		move.l	#loc_301DA,(a0)

loc_301DA:
		addq.w	#2,$10(a0)
		move.w	$10(a0),d0
		cmp.w	$3E(a0),d0
		bne.s	loc_301F4
		move.l	#loc_301F8,(a0)
		move.w	$10(a0),$30(a0)

loc_301F4:
		bra.w	loc_30280
; ---------------------------------------------------------------------------

loc_301F8:
		subq.w	#2,$26(a0)
		andi.w	#$7E,$26(a0)
		move.w	$26(a0),d0
		bne.s	loc_3020E
		move.l	#loc_3022C,(a0)

loc_3020E:
		lea	word_302BE(pc),a1
		move.w	(a1,d0.w),d1
		move.w	$20(a1,d0.w),d2
		add.w	$30(a0),d1
		add.w	$32(a0),d2
		move.w	d1,$10(a0)
		move.w	d2,$14(a0)
		bra.s	loc_30280
; ---------------------------------------------------------------------------

loc_3022C:
		subq.w	#2,$10(a0)
		move.w	$10(a0),d0
		cmp.w	$3C(a0),d0
		bne.s	loc_30246
		move.l	#loc_30248,(a0)
		move.w	$10(a0),$30(a0)

loc_30246:
		bra.s	loc_30280
; ---------------------------------------------------------------------------

loc_30248:
		subq.w	#2,$26(a0)
		andi.w	#$7E,$26(a0)
		move.w	$26(a0),d0
		cmpi.w	#$40,$26(a0)
		bne.s	loc_30264
		move.l	#loc_301DA,(a0)

loc_30264:
		lea	word_302BE(pc),a1
		move.w	(a1,d0.w),d1
		move.w	$20(a1,d0.w),d2
		add.w	$30(a0),d1
		add.w	$32(a0),d2
		move.w	d1,$10(a0)
		move.w	d2,$14(a0)

loc_30280:
		move.w	(Camera_X_pos_coarse_back).w,d1
		move.w	$3C(a0),d0
		andi.w	#-$80,d0
		subi.w	#$280,d0
		cmp.w	d0,d1
		bcs.s	loc_302AC
		move.w	$3E(a0),d0
		andi.w	#-$80,d0
		cmp.w	d0,d1
		bhi.s	loc_302AC
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_302AC:
		move.w	$48(a0),d0
		beq.s	loc_302B8
		movea.w	d0,a2
		bclr	#7,(a2)

loc_302B8:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
word_302BE:	dc.w 0
		dc.w 2
		dc.w 4
		dc.w 6
		dc.w 9
		dc.w $B
		dc.w $D
		dc.w $F
		dc.w $10
		dc.w $12
		dc.w $13
		dc.w $15
		dc.w $16
		dc.w $16
		dc.w $17
		dc.w $17
		dc.w $18
		dc.w $17
		dc.w $17
		dc.w $16
		dc.w $16
		dc.w $15
		dc.w $13
		dc.w $12
		dc.w $10
		dc.w $F
		dc.w $D
		dc.w $B
		dc.w 9
		dc.w 6
		dc.w 4
		dc.w 2
		dc.w 0
		dc.w $FFFD
		dc.w $FFFB
		dc.w $FFF9
		dc.w $FFF6
		dc.w $FFF4
		dc.w $FFF2
		dc.w $FFF0
		dc.w $FFEF
		dc.w $FFED
		dc.w $FFEC
		dc.w $FFEA
		dc.w $FFE9
		dc.w $FFE9
		dc.w $FFE8
		dc.w $FFE8
		dc.w $FFE8
		dc.w $FFE8
		dc.w $FFE8
		dc.w $FFE9
		dc.w $FFE9
		dc.w $FFEA
		dc.w $FFEC
		dc.w $FFED
		dc.w $FFEF
		dc.w $FFF0
		dc.w $FFF2
		dc.w $FFF4
		dc.w $FFF6
		dc.w $FFF9
		dc.w $FFFB
		dc.w $FFFD
		dc.w 0
		dc.w 2
		dc.w 4
		dc.w 6
		dc.w 9
		dc.w $B
		dc.w $D
		dc.w $F
		dc.w $10
		dc.w $12
		dc.w $13
		dc.w $15
		dc.w $16
		dc.w $16
		dc.w $17
		dc.w $17
Map_HCZConveyorSpike:
		include "Levels/HCZ/Misc Object Data/Map - Conveyor Spike.asm"
; ---------------------------------------------------------------------------

Obj_CNZBalloon:
		move.l	#Map_CNZBalloon,$C(a0)
		move.w	#$351,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$10,7(a0)
		move.b	#$20,6(a0)
		move.b	#-$29,$28(a0)
		move.w	$14(a0),$32(a0)
		move.b	$2C(a0),d0
		add.b	d0,d0
		andi.b	#$E,d0
		move.b	d0,$20(a0)
		jsr	(Random_Number).l
		move.b	d0,$26(a0)
		move.l	#loc_303B8,(a0)

loc_303B8:
		tst.b	$29(a0)
		beq.s	loc_303DA
		lea	(Player_1).w,a1
		bclr	#0,$29(a0)
		beq.s	loc_303CC
		bsr.s	sub_30412

loc_303CC:
		lea	(Player_2).w,a1
		bclr	#1,$29(a0)
		beq.s	loc_303DA
		bsr.s	sub_30412

loc_303DA:
		lea	(Ani_CNZBalloon).l,a1
		jsr	(Animate_Sprite).l
		; Bug: probably meant to be 5(a0), and at some point the animation terminated
		; with code $FC (increment routine counter) rather than $FB (move offscreen)
		tst.b	5
		beq.s	loc_303F2
		move.w	#$7F00,$10(a0)

loc_303F2:
		moveq	#0,d0
		move.b	$26(a0),d0
		addq.b	#1,$26(a0)
		jsr	(GetSineCosine).l
		asr.w	#5,d0
		add.w	$32(a0),d0
		move.w	d0,$14(a0)
		jmp	(loc_19CC4).l

; =============== S U B R O U T I N E =======================================


sub_30412:
		move.w	#-$700,$1A(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		bclr	#5,$2A(a1)
		clr.b	$40(a1)
		move.b	#0,$2E(a1)
		bset	#0,$20(a0)
		tst.b	$2C(a0)
		bpl.s	loc_30466
		move.w	#-$380,$1A(a1)
		tst.b	$34(a0)
		bne.s	loc_30466
		lea	(word_304B8).l,a2
		bsr.s	sub_3047C
		bsr.s	sub_3047C
		bsr.s	sub_3047C
		bsr.s	sub_3047C
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)

loc_30466:
		tst.b	$34(a0)
		bne.s	locret_3047A
		moveq	#signextendB(sfx_Balloon),d0
		jsr	(Play_Sound_2).l
		move.b	#1,$34(a0)

locret_3047A:
		rts
; End of function sub_30412


; =============== S U B R O U T I N E =======================================


sub_3047C:
		jsr	(Create_New_Sprite).l
		bne.s	locret_304B6
		move.l	#Obj_Bubbler,(a1)
		move.w	$10(a0),$10(a1)
		jsr	(Random_Number).l
		move.w	d0,d1
		andi.w	#$F,d0
		subq.w	#8,d0
		add.w	d0,$10(a1)
		move.w	$14(a0),$14(a1)
		andi.w	#$F,d1
		subq.w	#8,d1
		add.w	d1,$14(a1)
		move.b	(a2)+,$2C(a1)

locret_304B6:
		rts
; End of function sub_3047C

; ---------------------------------------------------------------------------
word_304B8:	dc.w      0,  $103
Ani_CNZBalloon:	include "Levels/CNZ/Misc Object Data/Anim - Balloon.asm"
Map_CNZBalloon:	include "Levels/CNZ/Misc Object Data/Map - Balloon.asm"
; ---------------------------------------------------------------------------

Obj_CNZCannon:
		move.l	#Map_CNZCannon,$C(a0)
		move.w	#$4374,$A(a0)
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$30,7(a0)
		move.b	#$30,6(a0)
		move.b	#9,$22(a0)
		bset	#6,4(a0)
		move.w	#1,$16(a0)
		lea	$18(a0),a2
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		move.w	#4,(a2)
		move.l	#loc_307B2,(a0)

loc_307B2:
		bsr.s	sub_307EC
		lea	$30(a0),a2
		lea	(Player_1).w,a1
		moveq	#3,d6
		move.w	(Ctrl_1_logical).w,d1
		bsr.w	sub_308B4
		addq.w	#1,a2
		lea	(Player_2).w,a1
		moveq	#4,d6
		move.w	(Ctrl_2_logical).w,d1
		cmpi.w	#2,(Tails_CPU_routine).w
		bne.s	loc_307DE
		move.b	#0,(a2)

loc_307DE:
		bsr.w	sub_308B4
		bsr.w	sub_309D8
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_307EC:
		move.w	$34(a0),d0
		bne.s	loc_30804
		move.w	#$10,d1
		move.w	#$29,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectTop).l
; ---------------------------------------------------------------------------

loc_30804:
		subq.w	#1,d0
		bne.s	loc_30834
		move.b	$26(a0),d0
		addq.b	#2,$26(a0)
		jsr	(GetSineCosine).l
		addi.w	#$120,d0
		lsr.w	#6,d0
		move.b	d0,$1D(a0)
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$1F,d0
		bne.s	locret_30832
		moveq	#signextendB(sfx_CannonTurn),d0
		jsr	(Play_Sound_2).l

locret_30832:
		rts
; ---------------------------------------------------------------------------

loc_30834:
		subq.w	#1,d0
		bne.s	loc_3088E
		subq.w	#1,$36(a0)
		bpl.s	loc_30844
		move.w	#3,$34(a0)

loc_30844:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#3,d0
		bne.s	locret_3088C
		jsr	(Create_New_Sprite3).l
		bne.w	locret_3088C
		move.l	#Obj_FireShield_Dissipate,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		subi.w	#$18,$14(a1)
		move.b	$1D(a0),d0
		lsl.b	#4,d0
		addi.b	#-$80,d0
		jsr	(GetSineCosine).l
		asl.w	#3,d1
		asl.w	#3,d0
		move.w	d1,$18(a1)
		move.w	d0,$1A(a1)

locret_3088C:
		rts
; ---------------------------------------------------------------------------

loc_3088E:
		move.b	$26(a0),d0
		addq.b	#2,$26(a0)
		jsr	(GetSineCosine).l
		addi.w	#$120,d0
		lsr.w	#6,d0
		move.b	d0,$1D(a0)
		cmpi.b	#4,d0
		bne.s	locret_308B2
		move.w	#0,$34(a0)

locret_308B2:
		rts
; End of function sub_307EC


; =============== S U B R O U T I N E =======================================


sub_308B4:
		move.b	(a2),d0
		bne.s	loc_3090C
		bclr	d6,$2A(a0)
		beq.s	locret_3090A
		bclr	#3,$2A(a1)
		move.w	$10(a0),$10(a1)
		move.w	#$380,8(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.w	#0,$1C(a1)
		move.b	#-$7F,$2E(a1)
		bset	#2,$2A(a1)
		bset	#1,$2A(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		move.b	#1,(a2)

locret_3090A:
		rts
; ---------------------------------------------------------------------------

loc_3090C:
		subq.b	#1,d0
		bne.s	loc_3093C
		move.w	$1A(a1),d0
		addi.w	#$38,$1A(a1)
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$14(a1)
		move.w	$14(a0),d0
		cmp.w	$14(a1),d0
		bcc.s	locret_3093A
		move.w	d0,$14(a1)
		move.b	#$1C,$20(a1)
		move.b	#2,(a2)

locret_3093A:
		rts
; ---------------------------------------------------------------------------

loc_3093C:
		subq.b	#1,d0
		bne.w	loc_309C6
		cmpi.w	#2,$34(a0)
		beq.s	loc_30966
		cmpi.w	#$200,$30(a0)
		beq.s	loc_3095A
		cmpi.w	#$202,$30(a0)
		bne.s	loc_30960

loc_3095A:
		move.w	#1,$34(a0)

loc_30960:
		andi.w	#$70,d1
		beq.s	locret_309C4

loc_30966:
		move.b	$1D(a0),d0
		lsl.b	#4,d0
		addi.b	#-$80,d0
		jsr	(GetSineCosine).l
		asl.w	#4,d1
		asl.w	#4,d0
		move.w	d1,$18(a1)
		move.w	d0,$1A(a1)
		move.w	d1,$1C(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		subi.w	#$18,$14(a1)
		move.b	#0,$2E(a1)
		bset	#1,$2A(a1)
		clr.b	$40(a1)
		move.b	#2,$20(a1)
		move.w	#2,$34(a0)
		move.w	#$F,$36(a0)
		move.b	#3,(a2)
		move.b	#8,2(a2)

locret_309C4:
		rts
; ---------------------------------------------------------------------------

loc_309C6:
		subq.b	#1,2(a2)
		bne.s	locret_309D6
		move.w	#$100,8(a1)
		move.b	#0,(a2)

locret_309D6:
		rts
; End of function sub_308B4


; =============== S U B R O U T I N E =======================================


sub_309D8:
		tst.b	4(a0)
		bpl.s	locret_30A30
		moveq	#0,d0
		move.b	$1D(a0),d0
		cmp.b	$2E(a0),d0
		beq.s	locret_30A30
		move.b	d0,$2E(a0)
		lea	(DPLC_CNZCannon).l,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_30A30
		move.w	#-$7700,d4

loc_30A04:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		addi.l	#ArtUnc_CNZCannon,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_30A04

locret_30A30:
		rts
; End of function sub_309D8

; ---------------------------------------------------------------------------
Map_CNZCannon:	include "General/Sprites/CNZ Cannon/Map - CNZ Cannon.asm"
DPLC_CNZCannon:	include "General/Sprites/CNZ Cannon/DPLC - CNZ Cannon.asm"
; ---------------------------------------------------------------------------

Obj_CNZRisingPlatform:
		move.l	#Map_CNZRisingPlatform,$C(a0)
		move.w	#$43BE,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$30,7(a0)
		move.b	#$10,6(a0)
		move.b	#6,$1E(a0)
		move.l	#loc_30C0E,(a0)

loc_30C0E:
		bsr.s	sub_30C48

loc_30C10:
		move.w	#$30,d1
		move.w	#$11,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		lea	(Ani_CNZRisingPlatform).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Ani_CNZRisingPlatform:
		include "Levels/CNZ/Misc Object Data/Anim - Rising Platform.asm"

; =============== S U B R O U T I N E =======================================


sub_30C48:
		move.b	$30(a0),d0
		bne.s	loc_30C8A
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_30C64
		move.b	#1,$30(a0)
		move.w	#$100,$20(a0)

loc_30C64:
		tst.w	$1A(a0)
		beq.s	locret_30C88
		jsr	(MoveSprite2).l
		addi.w	#8,$1A(a0)
		tst.w	$1A(a0)
		bmi.s	locret_30C88
		move.w	#0,$1A(a0)
		move.w	#$200,$20(a0)

locret_30C88:
		rts
; ---------------------------------------------------------------------------

loc_30C8A:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_30CC4
		jsr	(MoveSprite2).l
		cmpi.w	#$200,$1A(a0)
		bge.s	loc_30CA8
		addi.w	#$18,$1A(a0)

loc_30CA8:
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	locret_30CC2
		add.w	d1,$14(a0)
		move.l	#loc_30C10,(a0)
		move.w	#$200,$20(a0)

locret_30CC2:
		rts
; ---------------------------------------------------------------------------

loc_30CC4:
		neg.w	$1A(a0)
		subi.w	#$80,$1A(a0)
		move.b	#0,$30(a0)
		moveq	#signextendB(sfx_BalloonPlatform),d0
		jmp	(Play_Sound_2).l
; End of function sub_30C48

; ---------------------------------------------------------------------------
Map_CNZRisingPlatform:
		include "Levels/CNZ/Misc Object Data/Map - Rising Platform.asm"
; ---------------------------------------------------------------------------

Obj_CNZTrapDoor:
		move.l	#Map_CNZTrapDoor,$C(a0)
		move.w	#$43F0,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$80,8(a0)
		move.b	#$20,7(a0)
		move.b	#8,6(a0)
		move.l	#loc_30D5C,(a0)

loc_30D5C:
		lea	(Player_1).w,a1
		bsr.s	sub_30D8C
		lea	(Player_2).w,a1
		bsr.s	sub_30D8C
		move.w	#$20,d1
		move.w	#9,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		lea	(Ani_CNZTrapDoor).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_30D8C:
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		addi.w	#$20,d0
		cmpi.w	#$40,d0
		bcc.s	locret_30DBE
		move.w	$14(a0),d0
		sub.w	$14(a1),d0
		addi.w	#$20,d0
		cmpi.w	#$20,d0
		bcc.s	locret_30DBE
		move.b	#1,$20(a0)
		moveq	#signextendB(sfx_TrapDoor),d0
		jsr	(Play_Sound_2).l

locret_30DBE:
		rts
; End of function sub_30D8C

; ---------------------------------------------------------------------------
Ani_CNZTrapDoor:include "Levels/CNZ/Misc Object Data/Anim - Trap Door.asm"
Map_CNZTrapDoor:include "Levels/CNZ/Misc Object Data/Map - Trap Door.asm"
; ---------------------------------------------------------------------------

Obj_CNZLightBulb:
		move.l	#Map_CNZLightBulb,$C(a0)
		move.w	#$4404,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		tst.b	(Water_flag).w
		bne.s	loc_30E30
		move.l	#loc_30E4C,(a0)
		bra.s	loc_30E4C
; ---------------------------------------------------------------------------

loc_30E30:
		move.l	#loc_30E36,(a0)

loc_30E36:
		move.w	(Water_level).w,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_30E4C
		move.b	#1,$22(a0)
		move.l	#loc_30E4C,(a0)

loc_30E4C:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_CNZLightBulb:
		include "Levels/CNZ/Misc Object Data/Map - Light Bulb.asm"
; ---------------------------------------------------------------------------

Obj_CNZHoverFan:
		move.l	#Map_CNZHoverFan,$C(a0)
		move.w	#$43E8,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	$10(a0),$30(a0)
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.w	#$F,d0
		addq.w	#4,d0
		lsl.w	#4,d0
		move.w	d0,$36(a0)
		addi.w	#$30,d0
		move.w	d0,$38(a0)
		andi.w	#$70,d1
		addi.w	#$18,d1
		move.w	d1,$32(a0)
		add.w	d1,d1
		move.w	d1,$34(a0)
		move.b	$2C(a0),d0
		bmi.s	loc_30EE6
		move.l	#loc_30F56,(a0)
		bra.w	loc_30F56
; ---------------------------------------------------------------------------

loc_30EE6:
		andi.w	#$70,d0
		move.w	d0,d1
		lsr.w	#4,d0
		move.b	d0,$22(a0)
		addi.b	#$10,d1
		move.b	d1,7(a0)
		btst	#0,$2A(a0)
		bne.s	loc_30F0C
		move.l	#loc_30F24,(a0)
		bra.w	loc_30F24
; ---------------------------------------------------------------------------

loc_30F0C:
		move.l	#loc_30F12,(a0)

loc_30F12:
		moveq	#0,d0
		move.b	(Oscillating_table+$0E).w,d0
		subi.w	#$30,d0
		add.w	$30(a0),d0
		move.w	d0,$10(a0)

loc_30F24:
		moveq	#0,d6
		lea	(Player_1).w,a1
		bsr.w	sub_30F84
		lea	(Player_2).w,a1
		bsr.w	sub_30F84
		tst.w	d6
		beq.s	loc_30F4C
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$1F,d0
		bne.s	loc_30F4C
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

loc_30F4C:
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_30F56:
		moveq	#0,d6
		lea	(Player_1).w,a1
		bsr.w	sub_30F84
		lea	(Player_2).w,a1
		bsr.w	sub_30F84
		tst.w	d6
		beq.s	loc_30F7E
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$1F,d0
		bne.s	loc_30F7E
		moveq	#signextendB(sfx_Hoverpad),d0
		jsr	(Play_Sound_2).l

loc_30F7E:
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_30F84:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	$32(a0),d0
		cmp.w	$34(a0),d0
		bcc.s	locret_3100E
		moveq	#0,d1
		move.b	(Oscillating_table+$16).w,d1
		add.w	$14(a1),d1
		add.w	$36(a0),d1
		sub.w	$14(a0),d1
		bcs.s	locret_3100E
		cmp.w	$38(a0),d1
		bcc.s	locret_3100E
		cmpi.b	#4,5(a1)
		bcc.w	locret_3100E
		tst.b	$2E(a1)
		bne.s	locret_3100E
		sub.w	$36(a0),d1
		bcs.s	loc_30FCA
		not.w	d1
		add.w	d1,d1

loc_30FCA:
		add.w	$36(a0),d1
		neg.w	d1
		asr.w	#4,d1
		add.w	d1,$14(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		move.w	#0,$1A(a1)
		moveq	#1,d6
		move.w	#1,$1C(a1)
		tst.b	$27(a1)
		bne.s	locret_3100E
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#$7F,$30(a1)
		move.b	#8,$31(a1)

locret_3100E:
		rts
; End of function sub_30F84

; ---------------------------------------------------------------------------
Map_CNZHoverFan:include "Levels/CNZ/Misc Object Data/Map - Hover Fan.asm"
; ---------------------------------------------------------------------------

Obj_48_1:
		move.b	$2C(a0),d0
		beq.s	loc_310B6
		add.b	d0,d0
		move.b	d0,$34(a0)
		move.l	#loc_31164,(a0)
		bra.w	loc_31164
; ---------------------------------------------------------------------------

loc_310B6:
		move.l	#loc_310BC,(a0)

loc_310BC:
		lea	(Player_1).w,a1
		bsr.w	sub_310D2
		lea	(Player_2).w,a1
		bsr.w	sub_310D2
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_310D2:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		btst	#0,$2A(a0)
		bne.s	loc_310E4
		neg.w	d0

loc_310E4:
		addi.w	#$50,d0
		cmpi.w	#$A0,d0
		bcc.s	locret_31162
		move.w	$14(a1),d1
		addi.w	#$20,d1
		sub.w	$14(a0),d1
		bcs.s	locret_31162
		cmpi.w	#$40,d1
		bcc.s	locret_31162
		cmpi.b	#4,5(a1)
		bcc.s	locret_31162
		tst.b	$2E(a1)
		bne.s	locret_31162
		subi.w	#$50,d0
		bcc.s	loc_31132
		not.w	d0
		move.w	#$1000,$1C(a1)
		btst	#0,$2A(a0)
		bne.s	loc_3112A
		neg.w	$1C(a1)

loc_3112A:
		move.w	$1C(a1),$18(a1)
		rts
; ---------------------------------------------------------------------------

loc_31132:
		add.w	d0,d0
		addi.w	#$60,d0
		btst	#0,$2A(a0)
		bne.s	loc_31142
		neg.w	d0

loc_31142:
		neg.b	d0
		asr.w	#4,d0
		add.w	d0,$10(a1)
		move.w	$36(a0),d0
		bne.s	loc_31158
		moveq	#signextendB(sfx_TunnelBooster),d0
		jsr	(Play_Sound_2).l

loc_31158:
		addq.w	#1,$36(a0)
		andi.w	#$1F,$36(a0)

locret_31162:
		rts
; End of function sub_310D2

; ---------------------------------------------------------------------------

loc_31164:
		lea	$30(a0),a2
		lea	(Player_1).w,a1
		bsr.w	sub_31180
		addq.w	#1,a2
		lea	(Player_2).w,a1
		bsr.w	sub_31180
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_31180:
		move.b	(a2),d0
		bne.w	loc_3120C
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$18,d0
		cmpi.w	#$30,d0
		bcc.s	locret_3120A
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		addi.w	#$30,d1
		cmpi.w	#$50,d1
		bcc.s	locret_3120A
		cmpi.b	#4,5(a1)
		bcc.s	locret_3120A
		tst.b	$2E(a1)
		bne.s	locret_3120A
		subi.w	#$50,d1
		neg.w	d1
		cmpi.w	#$40,d1
		bcs.s	loc_311DA
		move.b	#1,(a2)
		move.b	$34(a0),2(a2)
		move.w	d0,-(sp)
		moveq	#signextendB(sfx_Transporter),d0
		jsr	(Play_Sound_2).l
		move.w	(sp)+,d0

loc_311DA:
		asr.w	#2,d1
		cmpi.b	#1,$38(a1)
		beq.s	loc_311E6
		asr.w	#1,d1

loc_311E6:
		sub.w	d1,$14(a1)
		moveq	#1,d2
		cmpi.w	#$18,d0
		beq.s	loc_311FA
		bcs.s	loc_311F6
		neg.w	d2

loc_311F6:
		add.w	d2,$10(a1)

loc_311FA:
		bset	#1,$2A(a1)
		move.b	#$F,$20(a1)
		clr.b	$40(a1)

locret_3120A:
		rts
; ---------------------------------------------------------------------------

loc_3120C:
		subq.b	#1,d0
		bne.s	locret_31250
		subq.b	#1,2(a2)
		beq.s	loc_31244
		subi.w	#8,$14(a1)
		moveq	#1,d2
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		beq.s	loc_31230
		bcs.s	loc_3122C
		neg.w	d2

loc_3122C:
		add.w	d2,$10(a1)

loc_31230:
		move.w	#0,$18(a1)
		move.w	#0,$1C(a1)
		move.w	#0,$1A(a1)
		rts
; ---------------------------------------------------------------------------

loc_31244:
		move.w	#-$800,$1A(a1)
		move.b	#0,(a2)
		rts
; ---------------------------------------------------------------------------

locret_31250:
		rts
; End of function sub_31180

; ---------------------------------------------------------------------------
word_31252:	dc.w $4E0
		dc.w $6F0
		dc.w $870
		dc.w $9C0
		dc.w $AE0
		dc.w $C00
		dc.w $CF0
		dc.w $DE0
; ---------------------------------------------------------------------------

Obj_CNZCylinder:
		move.b	$2C(a0),d0
		move.b	d0,d1
		lsr.b	#3,d1
		andi.w	#$E,d1
		move.w	word_31252(pc,d1.w),d1
		move.w	d1,$3E(a0)
		add.w	d0,d0
		andi.w	#$1E,d0
		move.w	d0,$3A(a0)
		move.l	#Map_CNZCylinder,$C(a0)
		move.w	#$438E,$A(a0)
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$20,7(a0)
		move.b	#$20,6(a0)
		move.w	$10(a0),$2E(a0)
		move.w	$14(a0),$30(a0)
		move.b	$2C(a0),d0
		move.b	d0,d1
		andi.b	#$F,d0
		subi.b	#$A,d0
		andi.b	#3,d0
		move.b	d0,$44(a0)
		andi.w	#$F0,d1
		lsl.w	#2,d1
		btst	#0,$2A(a0)
		beq.s	loc_312D8
		neg.w	d1

loc_312D8:
		move.w	d1,$46(a0)
		move.l	#loc_312E2,(a0)

loc_312E2:
		bsr.s	sub_3133C
		lea	$32(a0),a2
		lea	(Player_1).w,a1
		moveq	#3,d6
		move.w	(Ctrl_1_logical).w,d5
		bsr.w	sub_3161A
		addq.w	#4,a2
		lea	(Player_2).w,a1
		moveq	#4,d6
		move.w	(Ctrl_2_logical).w,d5
		bsr.w	sub_3161A
		move.w	#$2B,d1
		move.w	#$20,d2
		move.w	#$21,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		subq.b	#1,$24(a0)
		bpl.s	loc_31332
		move.b	#1,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#3,$22(a0)

loc_31332:
		move.w	$2E(a0),d0
		jmp	(Sprite_OnScreen_Test2).l

; =============== S U B R O U T I N E =======================================


sub_3133C:
		move.w	$3A(a0),d0
		move.w	off_31348(pc,d0.w),d0
		jmp	off_31348(pc,d0.w)
; End of function sub_3133C

; ---------------------------------------------------------------------------
off_31348:	dc.w loc_31362-off_31348
		dc.w loc_3144A-off_31348
		dc.w loc_31468-off_31348
		dc.w loc_31486-off_31348
		dc.w loc_314AA-off_31348
		dc.w loc_314C8-off_31348
		dc.w loc_314E6-off_31348
		dc.w loc_31504-off_31348
		dc.w loc_31528-off_31348
		dc.w loc_31546-off_31348
		dc.w loc_31546-off_31348
		dc.w loc_31546-off_31348
		dc.w loc_31546-off_31348
; ---------------------------------------------------------------------------

loc_31362:
		move.w	$3C(a0),d1
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		cmp.w	d1,d0
		beq.s	loc_313AE
		move.w	d0,$3C(a0)
		sub.w	d1,d0
		bcs.s	loc_313AE
		move.w	$1A(a0),d0
		bpl.s	loc_31382
		neg.w	d0

loc_31382:
		cmpi.w	#$200,d0
		bcc.s	loc_313AE
		move.w	$14(a0),d0
		sub.w	$30(a0),d0
		addi.w	#$40,d0
		cmpi.w	#$80,d0
		bcc.s	loc_313AE
		addi.w	#$400,$1A(a0)
		move.w	$3E(a0),d0
		cmp.w	$1A(a0),d0
		bgt.s	loc_313AE
		move.w	d0,$1A(a0)

loc_313AE:
		jsr	(MoveSprite2).l
		moveq	#0,d5
		btst	#3,$2A(a0)
		beq.s	loc_313C2
		move.b	(Ctrl_1_held_logical).w,d5

loc_313C2:
		btst	#4,$2A(a0)
		beq.s	loc_313CE
		or.b	(Ctrl_2_held_logical).w,d5

loc_313CE:
		move.w	$14(a0),d0
		sub.w	$30(a0),d0
		beq.s	loc_31434
		bcc.s	loc_31406
		move.w	$3E(a0),d0
		cmp.w	$1A(a0),d0
		ble.s	locret_31448
		addi.w	#$20,$1A(a0)
		tst.w	$1A(a0)
		bmi.s	loc_313FE
		btst	#1,d5
		beq.s	loc_31404
		addi.w	#$20,$1A(a0)
		bra.s	loc_31404
; ---------------------------------------------------------------------------

loc_313FE:
		addi.w	#$10,$1A(a0)

loc_31404:
		bra.s	locret_31448
; ---------------------------------------------------------------------------

loc_31406:
		move.w	$3E(a0),d0
		neg.w	d0
		cmp.w	$1A(a0),d0
		bge.s	locret_31448
		subi.w	#$20,$1A(a0)
		tst.w	$1A(a0)
		bpl.s	loc_3142C
		btst	#0,d5
		beq.s	loc_31432
		subi.w	#$20,$1A(a0)
		bra.s	loc_31432
; ---------------------------------------------------------------------------

loc_3142C:
		subi.w	#$10,$1A(a0)

loc_31432:
		bra.s	locret_31448
; ---------------------------------------------------------------------------

loc_31434:
		move.w	$1A(a0),d0
		bpl.s	loc_3143C
		neg.w	d0

loc_3143C:
		cmpi.w	#$80,d0
		bcc.s	locret_31448
		move.w	#0,$1A(a0)

locret_31448:
		rts
; ---------------------------------------------------------------------------

loc_3144A:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#3,d0
		add.w	$2E(a0),d0
		move.w	d0,$10(a0)
		move.w	$46(a0),d0
		add.w	d0,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_31468:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#2,d0
		add.w	$2E(a0),d0
		move.w	d0,$10(a0)
		move.w	$46(a0),d0
		add.w	d0,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_31486:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#2,d0
		move.w	d0,d1
		asr.w	#1,d0
		add.w	d1,d0
		add.w	$2E(a0),d0
		move.w	d0,$10(a0)
		move.w	$46(a0),d0
		add.w	d0,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_314AA:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#1,d0
		add.w	$2E(a0),d0
		move.w	d0,$10(a0)
		move.w	$46(a0),d0
		add.w	d0,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_314C8:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#3,d0
		add.w	$30(a0),d0
		move.w	d0,$14(a0)
		move.w	$46(a0),d0
		add.w	d0,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_314E6:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#2,d0
		add.w	$30(a0),d0
		move.w	d0,$14(a0)
		move.w	$46(a0),d0
		add.w	d0,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_31504:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#2,d0
		move.w	d0,d1
		asr.w	#1,d0
		add.w	d1,d0
		add.w	$30(a0),d0
		move.w	d0,$14(a0)
		move.w	$46(a0),d0
		add.w	d0,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_31528:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#1,d0
		add.w	$30(a0),d0
		move.w	d0,$14(a0)
		move.w	$46(a0),d0
		add.w	d0,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_31546:
		move.w	$46(a0),d0
		bpl.s	loc_31588
		add.w	d0,$26(a0)
		move.b	$26(a0),d0
		cmpi.b	#-$80,d0
		bcc.s	loc_31570
		andi.b	#$7F,d0
		addi.b	#-$80,d0
		move.b	d0,$26(a0)
		subq.b	#1,$44(a0)
		andi.b	#3,$44(a0)

loc_31570:
		move.w	#$20,d2
		move.b	$26(a0),d0
		cmpi.b	#-$80,d0
		bcc.s	loc_315B0
		move.b	#-$80,d0
		move.b	d0,$26(a0)
		bra.s	loc_315B0
; ---------------------------------------------------------------------------

loc_31588:
		add.w	d0,$26(a0)
		move.b	$26(a0),d0
		cmpi.b	#-$80,d0
		bcc.s	loc_315AC
		andi.b	#$7F,d0
		addi.b	#-$80,d0
		move.b	d0,$26(a0)
		addq.b	#1,$44(a0)
		andi.b	#3,$44(a0)

loc_315AC:
		move.w	#$20,d2

loc_315B0:
		jsr	(GetSineCosine).l
		asr.w	#3,d1
		move.b	$44(a0),d3
		andi.b	#3,d3
		bne.s	loc_315D6
		add.w	$2E(a0),d1
		move.w	d1,$10(a0)
		neg.w	d2
		add.w	$30(a0),d2
		move.w	d2,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_315D6:
		subq.b	#1,d3
		bne.s	loc_315EC
		add.w	$30(a0),d1
		move.w	d1,$14(a0)
		add.w	$2E(a0),d2
		move.w	d2,$10(a0)
		rts
; ---------------------------------------------------------------------------

loc_315EC:
		subq.b	#1,d3
		bne.s	loc_31604
		neg.w	d1
		add.w	$2E(a0),d1
		move.w	d1,$10(a0)
		add.w	$30(a0),d2
		move.w	d2,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_31604:
		neg.w	d1
		add.w	$30(a0),d1
		move.w	d1,$14(a0)
		neg.w	d2
		add.w	$2E(a0),d2
		move.w	d2,$10(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_3161A:
		move.b	(a2),d0
		bne.s	loc_31692
		btst	d6,$2A(a0)
		beq.s	locret_31690
		move.b	#0,1(a2)
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		bpl.s	loc_3163C
		neg.w	d0
		move.b	#-$80,1(a2)

loc_3163C:
		move.b	d0,2(a2)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.w	#0,$1C(a1)
		move.b	#3,$2E(a1)
		move.b	$44(a1),$1E(a1)
		move.b	$45(a1),$1F(a1)
		bclr	#2,$2A(a1)
		bclr	#1,$2A(a1)
		bclr	#5,$2A(a1)
		bclr	#4,$2A(a1)
		move.b	#0,$40(a1)
		move.b	#0,$20(a1)
		move.b	#1,(a2)
		bra.w	loc_31764
; ---------------------------------------------------------------------------

locret_31690:
		rts
; ---------------------------------------------------------------------------

loc_31692:
		tst.b	4(a1)
		bpl.w	loc_3174C
		cmpi.b	#4,5(a1)
		bcc.w	loc_3174C
		btst	d6,$2A(a0)
		beq.w	loc_3175E
		moveq	#0,d0
		move.b	1(a2),d0
		jsr	(GetSineCosine).l
		addi.w	#$100,d0
		asr.w	#2,d0
		move.b	d0,3(a2)
		moveq	#0,d2
		move.w	2(a2),d2
		muls.w	d2,d1
		swap	d1
		add.w	$10(a0),d1
		move.w	d1,$10(a1)
		addq.b	#2,1(a2)
		move.w	#$100,8(a1)
		move.b	$35(a0),d0
		cmp.b	3(a2),d0
		bls.s	loc_316EE
		move.w	#$80,8(a1)

loc_316EE:
		move.w	#0,$1C(a1)
		move.w	$1A(a0),d0
		bpl.s	loc_316FC
		neg.w	d0

loc_316FC:
		btst	#1,$2A(a1)
		bne.s	loc_31710
		cmpi.w	#$480,d0
		bcs.s	loc_31710
		move.w	#$800,$1C(a1)

loc_31710:
		andi.b	#$70,d5
		beq.s	loc_31764
		move.b	#1,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		move.w	$1A(a0),$1A(a1)
		addi.w	#-$680,$1A(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1C(a1)

loc_3174C:
		bset	#1,$2A(a1)
		move.w	#$100,8(a1)
		move.b	#0,$2E(a1)

loc_3175E:
		move.b	#0,(a2)
		rts
; ---------------------------------------------------------------------------

loc_31764:
		moveq	#0,d0
		move.b	1(a2),d0

loc_3176A:
		addi.b	#$B,d0
		divu.w	#$16,d0
		move.b	PlayerTwistFrames(pc,d0.w),$22(a1)
		andi.b	#-4,4(a1)
		move.b	PlayerTwistFlip(pc,d0.w),d0
		or.b	d0,4(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		move.l	a2,-(sp)
		jsr	(Perform_Player_DPLC).l
		movea.l	(sp)+,a2
		rts
; End of function sub_3161A

; ---------------------------------------------------------------------------
PlayerTwistFrames:dc.b $55
		dc.b $59
		dc.b $5A
		dc.b $5B
		dc.b $5A
		dc.b $59
		dc.b $55
		dc.b $56
		dc.b $57
		dc.b $58
		dc.b $57
		dc.b $56
PlayerTwistFlip:dc.b 0
		dc.b 1
		dc.b 1
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 1
		dc.b 1
		dc.b 0
		dc.b 0
		dc.b 0
Map_CNZCylinder:include "Levels/CNZ/Misc Object Data/Map - Cylinder.asm"
; ---------------------------------------------------------------------------

Obj_HCZSpinningColumn:
		move.l	#Map_HCZSpinningColumn,$C(a0)
		move.w	#$4040,$A(a0)
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$10,7(a0)
		move.b	#$20,6(a0)
		move.w	$10(a0),$2E(a0)
		move.w	$14(a0),$30(a0)
		move.b	$2C(a0),d0
		move.w	d0,d1
		add.w	d0,d0
		andi.w	#6,d0
		move.w	d0,$3A(a0)
		andi.w	#$F0,d1
		move.w	d1,$40(a0)
		move.w	#1,$42(a0)
		cmpi.w	#$E0,d1
		bne.s	loc_318DA
		neg.w	$42(a0)

loc_318DA:
		move.l	#loc_318E0,(a0)

loc_318E0:
		bsr.s	sub_3193C
		lea	$32(a0),a2
		lea	(Player_1).w,a1
		moveq	#3,d6
		move.w	(Ctrl_1_logical).w,d5
		bsr.w	sub_319AE
		addq.w	#4,a2
		lea	(Player_2).w,a1
		moveq	#4,d6
		move.w	(Ctrl_2_logical).w,d5
		bsr.w	sub_319AE
		move.w	#$1B,d1
		move.w	#$20,d2
		move.w	#$21,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		subq.b	#1,$24(a0)
		bpl.s	loc_31932
		move.b	#7,$24(a0)
		subq.b	#1,$22(a0)
		bcc.s	loc_31932
		move.b	#2,$22(a0)

loc_31932:
		move.w	$2E(a0),d0
		jmp	(Sprite_OnScreen_Test2).l

; =============== S U B R O U T I N E =======================================


sub_3193C:
		move.w	$3A(a0),d0
		move.w	off_31948(pc,d0.w),d0
		jmp	off_31948(pc,d0.w)
; End of function sub_3193C

; ---------------------------------------------------------------------------
off_31948:	dc.w locret_3194E-off_31948
		dc.w loc_31950-off_31948
		dc.w loc_31990-off_31948
; ---------------------------------------------------------------------------

locret_3194E:
		rts
; ---------------------------------------------------------------------------

loc_31950:
		move.w	$42(a0),d1
		bmi.s	loc_31968
		move.w	$40(a0),d0
		add.w	d1,d0
		cmpi.w	#$E0,d0
		bne.s	loc_31966
		neg.w	$42(a0)

loc_31966:
		bra.s	loc_31974
; ---------------------------------------------------------------------------

loc_31968:
		move.w	$40(a0),d0
		add.w	d1,d0
		bne.s	loc_31974
		neg.w	$42(a0)

loc_31974:
		move.w	d0,$40(a0)
		subi.w	#$70,d0
		btst	#0,$2A(a0)
		beq.s	loc_31986
		neg.w	d0

loc_31986:
		add.w	$2E(a0),d0
		move.w	d0,$10(a0)
		rts
; ---------------------------------------------------------------------------

loc_31990:
		moveq	#0,d0
		move.b	(Oscillating_table+$1E).w,d0
		btst	#0,$2A(a0)
		beq.s	loc_319A4
		neg.w	d0
		addi.w	#$80,d0

loc_319A4:
		add.w	$30(a0),d0
		move.w	d0,$14(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_319AE:
		move.b	(a2),d0
		bne.s	loc_31A26
		btst	d6,$2A(a0)
		beq.s	locret_31A24
		move.b	#0,1(a2)
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		bpl.s	loc_319D0
		neg.w	d0
		move.b	#-$80,1(a2)

loc_319D0:
		move.b	d0,2(a2)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.w	#0,$1C(a1)
		move.b	#3,$2E(a1)
		move.b	$44(a1),$1E(a1)
		move.b	$45(a1),$1F(a1)
		bclr	#2,$2A(a1)
		bclr	#1,$2A(a1)
		bclr	#5,$2A(a1)
		bclr	#4,$2A(a1)
		move.b	#0,$40(a1)
		move.b	#0,$20(a1)
		move.b	#1,(a2)
		bra.w	loc_31764
; ---------------------------------------------------------------------------

locret_31A24:
		rts
; ---------------------------------------------------------------------------

loc_31A26:
		tst.b	4(a1)
		bpl.w	loc_31AD6
		cmpi.b	#4,5(a1)
		bcc.w	loc_31AD6
		btst	d6,$2A(a0)
		beq.w	loc_31AE8
		tst.b	2(a2)
		beq.s	loc_31A4A
		subq.b	#1,2(a2)

loc_31A4A:
		moveq	#0,d0
		move.b	1(a2),d0
		jsr	(GetSineCosine).l
		addi.w	#$100,d0
		asr.w	#2,d0
		move.b	d0,3(a2)
		moveq	#0,d2
		move.w	2(a2),d2
		muls.w	d2,d1
		swap	d1
		add.w	$10(a0),d1
		move.w	d1,$10(a1)
		addq.b	#2,1(a2)
		move.w	#0,$1C(a1)
		move.w	$1A(a0),d0
		bpl.s	loc_31A84
		neg.w	d0

loc_31A84:
		btst	#1,$2A(a1)
		bne.s	loc_31A98
		cmpi.w	#$480,d0
		bcs.s	loc_31A98
		move.w	#$800,$1C(a1)

loc_31A98:
		andi.b	#$70,d5
		beq.w	loc_31764
		move.b	#1,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		move.w	$1A(a0),$1A(a1)
		addi.w	#-$680,$1A(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1C(a1)

loc_31AD6:
		bset	#1,$2A(a1)
		move.w	#$100,8(a1)
		move.b	#0,$2E(a1)

loc_31AE8:
		move.b	#0,(a2)
		rts
; End of function sub_319AE

; ---------------------------------------------------------------------------
Map_HCZSpinningColumn:
		include "Levels/HCZ/Misc Object Data/Map - Spinning Column.asm"
; ---------------------------------------------------------------------------

Obj_49_1:
		move.b	#$60,$32(a0)
		move.l	#loc_31B60,(a0)

loc_31B60:
		lea	$36(a0),a2
		lea	(Player_1).w,a1
		bsr.s	sub_31B78
		addq.w	#1,a2
		lea	(Player_2).w,a1
		bsr.s	sub_31B78
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_31B78:
		moveq	#0,d2
		move.b	$32(a0),d2
		move.w	d2,d3
		add.w	d3,d3
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d2,d0
		cmp.w	d3,d0
		bcc.s	loc_31BAA
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		add.w	d2,d1
		cmp.w	d3,d1
		bcc.s	loc_31BAA
		btst	#1,$2A(a1)
		beq.s	loc_31BB6
		clr.b	(a2)
		rts
; ---------------------------------------------------------------------------

loc_31BAA:
		tst.b	(a2)
		beq.s	locret_31BB4
		clr.b	$3C(a1)
		clr.b	(a2)

locret_31BB4:
		rts
; ---------------------------------------------------------------------------

loc_31BB6:
		tst.b	(a2)
		bne.s	loc_31BDC
		move.b	#1,(a2)
		btst	#2,$2A(a1)
		bne.s	loc_31BCA
		clr.b	$20(a1)

loc_31BCA:
		bclr	#5,$2A(a1)
		move.b	#1,$21(a1)
		move.b	#1,$3C(a1)

loc_31BDC:
		move.w	$1C(a1),d0
		btst	#0,$2A(a0)
		beq.s	loc_31C04
		cmpi.w	#-$400,d0
		ble.s	loc_31BF6
		move.w	#-$400,$1C(a1)
		rts
; ---------------------------------------------------------------------------

loc_31BF6:
		cmpi.w	#-$F00,d0
		bge.s	locret_31C02
		move.w	#-$F00,$1C(a1)

locret_31C02:
		rts
; ---------------------------------------------------------------------------

loc_31C04:
		cmpi.w	#$400,d0
		bge.s	loc_31C12
		move.w	#$400,$1C(a1)
		rts
; ---------------------------------------------------------------------------

loc_31C12:
		cmpi.w	#$F00,d0
		ble.s	locret_31C1E
		move.w	#$F00,$1C(a1)

locret_31C1E:
		rts
; End of function sub_31B78

; ---------------------------------------------------------------------------

Obj_4B_1:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,$34(a0)
		add.w	d0,d0
		move.w	d0,$32(a0)
		move.l	#loc_31C36,(a0)

loc_31C36:
		lea	(Player_1).w,a1
		bsr.s	sub_31C48
		lea	(Player_2).w,a1
		bsr.s	sub_31C48
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_31C48:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	$34(a0),d0
		cmp.w	$32(a0),d0
		bcc.s	locret_31C74
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		addi.w	#$14,d1
		cmpi.w	#$28,d1
		bcc.s	locret_31C74
		cmpi.b	#4,5(a1)
		bcs.s	loc_31C76

locret_31C74:
		rts
; ---------------------------------------------------------------------------

loc_31C76:
		move.w	#-$800,$18(a1)
		move.w	#-$800,$1A(a1)
		bset	#0,$2A(a1)
		btst	#0,$2A(a0)
		bne.s	loc_31C9A
		bclr	#0,$2A(a1)
		neg.w	$18(a1)

loc_31C9A:
		btst	#1,$2A(a0)
		beq.s	loc_31CA6
		neg.w	$1A(a1)

loc_31CA6:
		move.w	#$F,$32(a1)
		move.w	$18(a1),$1C(a1)
		btst	#2,$2A(a1)
		bne.s	loc_31CC0
		move.b	#0,$20(a1)

loc_31CC0:
		tst.b	$27(a1)
		bne.s	loc_31CEA
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#3,$30(a1)
		move.b	#8,$31(a1)
		btst	#0,$2A(a1)
		beq.s	loc_31CEA
		neg.b	$27(a1)

loc_31CEA:
		clr.b	$40(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		bclr	#5,$2A(a1)
		moveq	#signextendB(sfx_SmallBumpers),d0
		jmp	(Play_Sound_2).l
; End of function sub_31C48

; ---------------------------------------------------------------------------

Obj_4F_1:
		move.b	$2C(a0),d0
		lsl.w	#3,d0
		move.b	d0,7(a0)
		move.w	$14(a0),$30(a0)
		move.b	#$30,$38(a0)
		move.b	#$30,$3A(a0)
		bset	#7,$2A(a0)
		move.l	#loc_31E1C,(a0)
		tst.w	(Competition_mode).w
		bne.w	loc_31E1C
		move.l	#loc_31D3E,(a0)

loc_31D3E:
		tst.w	(Debug_placement_mode).w
		bne.w	loc_31DF2
		lea	(Player_1).w,a1
		btst	#3,$2A(a0)
		bne.s	loc_31D7A
		cmpi.b	#$30,$38(a0)
		bcc.s	loc_31D5E
		addq.b	#2,$38(a0)

loc_31D5E:
		btst	#3,$2A(a1)
		beq.s	loc_31D84
		movea.w	$42(a1),a2
		cmpi.l	#loc_31D3E,(a2)
		bne.s	loc_31D84
		move.b	$38(a2),$38(a0)
		bra.s	loc_31D84
; ---------------------------------------------------------------------------

loc_31D7A:
		tst.b	$38(a0)
		beq.s	loc_31DF8
		subq.b	#1,$38(a0)

loc_31D84:
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#0,d3
		move.b	$38(a0),d3
		moveq	#3,d6
		move.w	$10(a0),d4
		jsr	(sub_1BFC2).l
		lea	(Player_2).w,a1
		btst	#4,$2A(a0)
		bne.s	loc_31DD0
		cmpi.b	#$30,$3A(a0)
		bcc.s	loc_31DB4
		addq.b	#2,$3A(a0)

loc_31DB4:
		btst	#3,$2A(a1)
		beq.s	loc_31DDA
		movea.w	$42(a1),a2
		cmpi.l	#loc_31D3E,(a2)
		bne.s	loc_31DDA
		move.b	$3A(a2),$3A(a0)
		bra.s	loc_31DDA
; ---------------------------------------------------------------------------

loc_31DD0:
		tst.b	$3A(a0)
		beq.s	loc_31E00
		subq.b	#1,$3A(a0)

loc_31DDA:
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#0,d3
		move.b	$3A(a0),d3
		moveq	#4,d6
		move.w	$10(a0),d4
		jsr	(sub_1BFC2).l

loc_31DF2:
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

loc_31DF8:
		move.b	#$30,$38(a0)
		bra.s	loc_31E06
; ---------------------------------------------------------------------------

loc_31E00:
		move.b	#$30,$3A(a0)

loc_31E06:
		not.b	d1
		and.b	d1,$2A(a0)
		move.l	a0,-(sp)
		movea.l	a0,a2
		movea.l	a1,a0
		jsr	(Kill_Character).l
		movea.l	(sp)+,a0
		rts
; ---------------------------------------------------------------------------

loc_31E1C:
		tst.w	(Debug_placement_mode).w
		bne.w	locret_31ED4
		lea	(Player_1).w,a1
		btst	#3,$2A(a0)
		bne.s	loc_31E58
		cmpi.b	#$30,$38(a0)
		bcc.s	loc_31E3C
		addq.b	#2,$38(a0)

loc_31E3C:
		btst	#3,$2A(a1)
		beq.s	loc_31E62
		movea.w	$42(a1),a2
		cmpi.l	#loc_31D3E,(a2)
		bne.s	loc_31E62
		move.b	$38(a2),$38(a0)
		bra.s	loc_31E62
; ---------------------------------------------------------------------------

loc_31E58:
		tst.b	$38(a0)
		beq.s	loc_31ED6
		subq.b	#1,$38(a0)

loc_31E62:
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#0,d3
		move.b	$38(a0),d3
		lsr.w	#1,d3
		moveq	#3,d6
		move.w	$10(a0),d4
		jsr	(sub_1BFC2).l
		lea	(Player_2).w,a1
		btst	#4,$2A(a0)
		bne.s	loc_31EB0
		cmpi.b	#$30,$3A(a0)
		bcc.s	loc_31E94
		addq.b	#2,$3A(a0)

loc_31E94:
		btst	#3,$2A(a1)
		beq.s	loc_31EBA
		movea.w	$42(a1),a2
		cmpi.l	#loc_31D3E,(a2)
		bne.s	loc_31EBA
		move.b	$3A(a2),$3A(a0)
		bra.s	loc_31EBA
; ---------------------------------------------------------------------------

loc_31EB0:
		tst.b	$3A(a0)
		beq.s	loc_31EDE
		subq.b	#1,$3A(a0)

loc_31EBA:
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#0,d3
		move.b	$3A(a0),d3
		lsr.w	#1,d3
		moveq	#4,d6
		move.w	$10(a0),d4
		jsr	(sub_1BFC2).l

locret_31ED4:
		rts
; ---------------------------------------------------------------------------

loc_31ED6:
		move.b	#$30,$38(a0)
		bra.s	loc_31EE4
; ---------------------------------------------------------------------------

loc_31EDE:
		move.b	#$30,$3A(a0)

loc_31EE4:
		not.b	d1
		and.b	d1,$2A(a0)
		move.l	a0,-(sp)
		movea.l	a0,a2
		movea.l	a1,a0
		jsr	(Kill_Character).l
		movea.l	(sp)+,a0
		rts
; ---------------------------------------------------------------------------

Obj_5D_1:
		move.b	#8,7(a0)
		move.b	#$40,6(a0)
		move.b	$2C(a0),d0
		lsr.b	#4,d0
		andi.b	#7,d0
		move.b	d0,$22(a0)
		beq.s	loc_31F1C
		move.b	#-$80,6(a0)

loc_31F1C:
		move.l	#loc_31F22,(a0)

loc_31F22:
		move.w	#$10,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		jsr	(SolidObjectFull2_1P).l
		cmpi.b	#1,d4
		bne.s	loc_31F6C
		btst	#1,$2A(a1)
		beq.s	loc_31F6C
		move.b	$2A(a0),d1
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		bcs.s	loc_31F64
		eori.b	#1,d1

loc_31F64:
		andi.b	#1,d1
		bne.s	loc_31F6C
		bsr.s	sub_31FA6

loc_31F6C:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		jsr	(SolidObjectFull2_1P).l
		cmpi.b	#1,d4
		bne.s	locret_31FA4
		btst	#1,$2A(a1)
		beq.s	locret_31FA4
		move.b	$2A(a0),d1
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		bcs.s	loc_31F9C
		eori.b	#1,d1

loc_31F9C:
		andi.b	#1,d1
		bne.s	locret_31FA4
		bsr.s	sub_31FA6

locret_31FA4:
		rts

; =============== S U B R O U T I N E =======================================


sub_31FA6:
		cmpi.b	#4,5(a1)
		bcs.s	loc_31FB0
		rts
; ---------------------------------------------------------------------------

loc_31FB0:
		move.w	#-$800,$18(a1)
		move.w	#$400,$1A(a1)
		bset	#0,$2A(a1)
		btst	#0,$2A(a0)
		bne.s	loc_31FD4
		bclr	#0,$2A(a1)
		neg.w	$18(a1)

loc_31FD4:
		move.w	#$F,$32(a1)
		move.w	$18(a1),$1C(a1)
		btst	#2,$2A(a1)
		bne.s	loc_31FEE
		move.b	#0,$20(a1)

loc_31FEE:
		move.b	$2C(a0),d0
		bpl.s	loc_31FFA
		move.w	#0,$1A(a1)

loc_31FFA:
		btst	#0,d0
		beq.s	loc_3203A
		move.w	#1,$1C(a1)
		move.b	#1,$27(a1)
		move.b	#0,$20(a1)
		move.b	#1,$30(a1)
		move.b	#8,$31(a1)
		btst	#1,d0
		bne.s	loc_3202A
		move.b	#3,$30(a1)

loc_3202A:
		btst	#0,$2A(a1)
		beq.s	loc_3203A
		neg.b	$27(a1)
		neg.w	$1C(a1)

loc_3203A:
		andi.b	#$C,d0
		cmpi.b	#4,d0
		bne.s	loc_32050
		move.b	#$C,$46(a1)
		move.b	#$D,$47(a1)

loc_32050:
		cmpi.b	#8,d0
		bne.s	loc_32062
		move.b	#$E,$46(a1)
		move.b	#$F,$47(a1)

loc_32062:
		bclr	#5,$2A(a0)
		bclr	#6,$2A(a0)
		bclr	#5,$2A(a1)
		bclr	#4,$2A(a1)
		moveq	#signextendB(sfx_SmallBumpers),d0
		jmp	(Play_Sound_2).l
; End of function sub_31FA6

; ---------------------------------------------------------------------------

Obj_Bumper:
		move.l	#Map_Bumper,$C(a0)
		move.w	#$4364,$A(a0)
		move.b	#4,4(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$80,8(a0)
		move.b	#-$29,$28(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		tst.w	(Competition_mode).w
		beq.s	loc_320D8
		move.l	#Map_2PBumper,$C(a0)
		move.w	#$2300,$A(a0)
		move.l	#loc_3221C,(a0)
		bra.w	loc_3221C
; ---------------------------------------------------------------------------

loc_320D8:
		move.l	#loc_3211A,(a0)
		move.b	$2C(a0),d0
		beq.s	loc_3211A
		move.b	d0,$26(a0)
		move.l	#loc_320EE,(a0)

loc_320EE:
		move.b	(Level_frame_counter+1).w,d0
		btst	#0,$2A(a0)
		beq.s	loc_320FC
		neg.b	d0

loc_320FC:
		add.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asr.w	#2,d1
		asr.w	#2,d0
		add.w	$30(a0),d1
		add.w	$32(a0),d0
		move.w	d1,$10(a0)
		move.w	d0,$14(a0)

loc_3211A:
		tst.b	$29(a0)
		beq.w	loc_321E0
		lea	(Player_1).w,a1
		bclr	#0,$29(a0)
		beq.s	loc_32130
		bsr.s	sub_32146

loc_32130:
		lea	(Player_2).w,a1
		bclr	#1,$29(a0)
		beq.s	loc_3213E
		bsr.s	sub_32146

loc_3213E:
		clr.b	$29(a0)
		bra.w	loc_321E0

; =============== S U B R O U T I N E =======================================


sub_32146:
		move.w	$10(a0),d1
		move.w	$14(a0),d2
		sub.w	$10(a1),d1
		sub.w	$14(a1),d2
		jsr	(GetArcTan).l
		move.b	(Level_frame_counter).w,d1
		andi.w	#3,d1
		add.w	d1,d0
		jsr	(GetSineCosine).l
		muls.w	#-$700,d1
		asr.l	#8,d1
		move.w	d1,$18(a1)
		muls.w	#-$700,d0
		asr.l	#8,d0
		move.w	d0,$1A(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		bclr	#5,$2A(a1)
		clr.b	$40(a1)
		move.b	#1,$20(a0)
		moveq	#signextendB(sfx_Bumper),d0
		jsr	(Play_Sound_2).l
		move.w	$48(a0),d0
		beq.s	loc_321B4
		movea.w	d0,a2
		cmpi.b	#-$76,(a2)
		bcc.s	locret_321DE
		addq.b	#1,(a2)

loc_321B4:
		moveq	#1,d0
		movea.w	a1,a3
		jsr	(HUD_AddToScore).l
		jsr	(Create_New_Sprite).l
		bne.s	locret_321DE
		move.l	#Obj_EnemyScore,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	#4,$22(a1)

locret_321DE:
		rts
; End of function sub_32146

; ---------------------------------------------------------------------------

loc_321E0:
		lea	(Ani_Bumper).l,a1
		jsr	(Animate_Sprite).l
		move.w	$30(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_3220A
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_3220A:
		move.w	$48(a0),d0
		beq.s	loc_32216
		movea.w	d0,a2
		bclr	#7,(a2)

loc_32216:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3221C:
		tst.b	$29(a0)
		beq.w	loc_322A8
		lea	(Player_1).w,a1
		bclr	#0,$29(a0)
		beq.s	loc_32232
		bsr.s	sub_32248

loc_32232:
		lea	(Player_2).w,a1
		bclr	#1,$29(a0)
		beq.s	loc_32240
		bsr.s	sub_32248

loc_32240:
		clr.b	$29(a0)
		bra.w	loc_322A8

; =============== S U B R O U T I N E =======================================


sub_32248:
		move.w	$10(a0),d1
		move.w	$14(a0),d2
		sub.w	$10(a1),d1
		sub.w	$14(a1),d2
		jsr	(GetArcTan).l
		move.b	(Level_frame_counter).w,d1
		andi.w	#3,d1
		add.w	d1,d0
		jsr	(GetSineCosine).l
		muls.w	#-$700,d1
		asr.l	#8,d1
		move.w	d1,$18(a1)
		muls.w	#-$700,d0
		asr.l	#8,d0
		move.w	d0,$1A(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		bclr	#5,$2A(a1)
		clr.b	$40(a1)
		move.b	#1,$20(a0)
		moveq	#signextendB(sfx_SmallBumpers),d0
		jsr	(Play_Sound_2).l
		rts
; End of function sub_32248

; ---------------------------------------------------------------------------

loc_322A8:
		lea	(Ani_Bumper).l,a1
		jsr	(Animate_Sprite).l
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Ani_Bumper:	include "General/Sprites/Level Misc/Anim - Bumper.asm"
Map_Bumper:	include "General/Sprites/Level Misc/Map - Bumper.asm"
Map_2PBumper:	include "General/2P Zone/Map - 2P Bumper.asm"
; ---------------------------------------------------------------------------

Obj_4C_1:
		lea	(Player_1).w,a1
		lea	$30(a0),a4
		bsr.s	sub_32328
		lea	(Player_2).w,a1
		lea	$3A(a0),a4
		bsr.s	sub_32328
		move.b	$30(a0),d0
		add.b	$3A(a0),d0
		beq.s	loc_32322
		rts
; ---------------------------------------------------------------------------

loc_32322:
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_32328:
		moveq	#0,d0
		move.b	(a4),d0
		move.w	off_32334(pc,d0.w),d0
		jmp	off_32334(pc,d0.w)
; End of function sub_32328

; ---------------------------------------------------------------------------
off_32334:	dc.w loc_3233C-off_32334
		dc.w loc_323C8-off_32334
		dc.w loc_32404-off_32334
		dc.w loc_32448-off_32334
; ---------------------------------------------------------------------------

loc_3233C:
		tst.w	(Debug_placement_mode).w
		bne.w	locret_323C6
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$40,d0
		cmpi.w	#$80,d0
		bcc.s	locret_323C6
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		addi.w	#$10,d1
		cmpi.w	#$20,d1
		bcc.s	locret_323C6
		tst.b	$2E(a1)
		bne.s	locret_323C6
		addq.b	#2,(a4)
		move.b	#-$7F,$2E(a1)
		move.b	#2,$20(a1)
		move.w	#$800,$1C(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		bclr	#5,$2A(a1)
		bset	#1,$2A(a1)
		clr.b	1(a4)
		moveq	#$30,d1
		cmpi.w	#$40,d0
		bcc.s	loc_323AE
		neg.w	d1
		move.b	#-$80,1(a4)

loc_323AE:
		add.w	$10(a0),d1
		move.w	d1,$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	#sfx_Roll,d0
		jsr	(Play_Sound_2).l

locret_323C6:
		rts
; ---------------------------------------------------------------------------

loc_323C8:
		move.b	1(a4),d0
		addq.b	#8,1(a4)
		jsr	(GetSineCosine).l
		asr.w	#3,d1
		move.w	d1,d0
		asr.w	#1,d1
		add.w	d1,d0
		add.w	$10(a0),d0
		move.w	d0,$10(a1)
		moveq	#0,d0
		btst	#0,(Ring_count+1).w
		beq.s	loc_323F4
		move.w	#$80,d0

loc_323F4:
		cmp.b	1(a4),d0
		bne.s	locret_32402
		addq.b	#2,(a4)
		move.w	#$C0,2(a4)

locret_32402:
		rts
; ---------------------------------------------------------------------------

loc_32404:
		move.b	1(a4),d0
		addi.b	#$C,1(a4)
		jsr	(GetSineCosine).l
		asr.w	#3,d1
		move.w	d1,d0
		asr.w	#1,d1
		add.w	d1,d0
		add.w	$10(a0),d0
		move.w	d0,$10(a1)
		addq.w	#2,$14(a1)
		subq.w	#1,2(a4)
		bne.s	locret_32446
		moveq	#0,d0
		move.w	$10(a0),d1
		sub.w	$10(a1),d1
		bcc.s	loc_3243C
		moveq	#1,d0

loc_3243C:
		add.b	$2C(a0),d0
		bsr.w	sub_324AC
		addq.b	#2,(a4)

locret_32446:
		rts
; ---------------------------------------------------------------------------

loc_32448:
		subq.b	#1,2(a4)
		bpl.s	loc_32474
		movea.l	6(a4),a2
		move.w	(a2)+,d4
		move.w	d4,$10(a1)
		move.w	(a2)+,d5
		move.w	d5,$14(a1)
		move.l	a2,6(a4)
		subq.w	#4,4(a4)
		beq.s	loc_3249A
		move.w	(a2)+,d4
		move.w	(a2)+,d5
		move.w	#$C00,d2
		bra.w	loc_324DC
; ---------------------------------------------------------------------------

loc_32474:
		move.l	$10(a1),d2
		move.l	$14(a1),d3
		move.w	$18(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d2
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d2,$10(a1)
		move.l	d3,$14(a1)
		rts
; ---------------------------------------------------------------------------

loc_3249A:
		andi.w	#$FFF,$14(a1)
		clr.b	(a4)
		clr.b	$2E(a1)
		clr.b	$40(a1)
		bra.s	loc_32474

; =============== S U B R O U T I N E =======================================


sub_324AC:
		andi.w	#$F,d0
		add.w	d0,d0
		lea	(off_3255A).l,a2
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,4(a4)
		subq.w	#4,4(a4)
		move.w	(a2)+,d4
		move.w	d4,$10(a1)
		move.w	(a2)+,d5
		move.w	d5,$14(a1)
		move.l	a2,6(a4)
		move.w	(a2)+,d4
		move.w	(a2)+,d5
		move.w	#$C00,d2

loc_324DC:
		moveq	#0,d0
		move.w	d2,d3
		move.w	d4,d0
		sub.w	$10(a1),d0
		bge.s	loc_324EC
		neg.w	d0
		neg.w	d2

loc_324EC:
		moveq	#0,d1
		move.w	d5,d1
		sub.w	$14(a1),d1
		bge.s	loc_324FA
		neg.w	d1
		neg.w	d3

loc_324FA:
		cmp.w	d0,d1
		bcs.s	loc_3252C
		moveq	#0,d1
		move.w	d5,d1
		sub.w	$14(a1),d1
		swap	d1
		divs.w	d3,d1
		moveq	#0,d0
		move.w	d4,d0
		sub.w	$10(a1),d0
		beq.s	loc_32518
		swap	d0
		divs.w	d1,d0

loc_32518:
		move.w	d0,$18(a1)
		move.w	d3,$1A(a1)
		tst.w	d1
		bpl.s	loc_32526
		neg.w	d1

loc_32526:
		move.w	d1,2(a4)
		rts
; ---------------------------------------------------------------------------

loc_3252C:
		moveq	#0,d0
		move.w	d4,d0
		sub.w	$10(a1),d0
		swap	d0
		divs.w	d2,d0
		moveq	#0,d1
		move.w	d5,d1
		sub.w	$14(a1),d1
		beq.s	loc_32546
		swap	d1
		divs.w	d0,d1

loc_32546:
		move.w	d1,$1A(a1)
		move.w	d2,$18(a1)
		tst.w	d0
		bpl.s	loc_32554
		neg.w	d0

loc_32554:
		move.w	d0,2(a4)
		rts
; End of function sub_324AC

; ---------------------------------------------------------------------------
off_3255A:	dc.w word_32562-off_3255A
		dc.w word_32570-off_3255A
		dc.w word_3257E-off_3255A
		dc.w word_3258C-off_3255A
word_32562:	dc.w $C
		dc.w $1390
		dc.w $2D0
		dc.w $1230
		dc.w $2D0
		dc.w $1230
		dc.w $300
word_32570:	dc.w $C
		dc.w $13F0
		dc.w $2D0
		dc.w $1560
		dc.w $2D0
		dc.w $1560
		dc.w $280
word_3257E:	dc.w $C
		dc.w $2090
		dc.w $650
		dc.w $2030
		dc.w $650
		dc.w $2030
		dc.w $680
word_3258C:	dc.w $C
		dc.w $20F0
		dc.w $650
		dc.w $21E0
		dc.w $650
		dc.w $21E0
		dc.w $600
; ---------------------------------------------------------------------------

Obj_CNZBarberPoleSprite:
		tst.b	$2C(a0)
		beq.s	loc_325AA
		move.l	#loc_327E2,(a0)
		bra.w	loc_327E2
; ---------------------------------------------------------------------------

loc_325AA:
		move.l	#loc_325B0,(a0)

loc_325B0:
		lea	$30(a0),a2
		lea	(Player_1).w,a1
		moveq	#3,d6
		bsr.s	sub_325CC
		addq.w	#6,a2
		lea	(Player_2).w,a1
		addq.b	#1,d6
		bsr.s	sub_325CC
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_325CC:
		btst	d6,$2A(a0)
		bne.w	loc_326F0
		btst	#3,$2A(a1)
		bne.w	loc_32664
		moveq	#0,d0
		move.b	$1F(a1),d0
		neg.w	d0
		add.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$40,d0
		cmpi.w	#$A0,d0
		bcc.s	locret_32662
		subi.w	#$61,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		add.w	$14(a1),d1
		sub.w	$14(a0),d1
		sub.w	d0,d1
		cmpi.w	#$10,d1
		bcc.s	locret_32662
		tst.b	$2E(a1)
		bne.s	locret_32662
		tst.w	(Debug_placement_mode).w
		bne.s	locret_32662
		btst	#1,$2A(a1)
		beq.s	loc_3262C
		tst.w	$1A(a1)
		bmi.s	locret_32662

loc_3262C:
		move.l	$10(a1),(a2)
		move.w	(a2),d0
		sub.w	$10(a0),d0
		addi.w	#$40,d0
		move.w	d0,(a2)
		move.w	#0,4(a2)
		subi.w	#$18,d0
		cmpi.w	#$70,d0
		bcc.s	loc_32652
		move.w	#1,4(a2)

loc_32652:
		bsr.w	sub_32A12
		move.b	#$20,$26(a1)
		move.b	#2,$2D(a1)

locret_32662:
		rts
; ---------------------------------------------------------------------------

loc_32664:
		moveq	#0,d0
		move.b	$1F(a1),d0
		neg.w	d0
		add.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$30,d0
		cmpi.w	#$80,d0
		bcc.s	locret_326EE
		subi.w	#$51,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		add.w	$14(a1),d1
		sub.w	$14(a0),d1
		sub.w	d0,d1
		cmpi.w	#$10,d1
		bcc.s	locret_326EE
		tst.b	$2E(a1)
		bne.s	locret_326EE
		btst	#1,$2A(a1)
		beq.s	loc_326AC
		tst.w	$1A(a1)
		bmi.s	locret_326EE

loc_326AC:
		movea.w	$42(a1),a3
		cmpi.l	#loc_325B0,(a3)
		bne.s	locret_326EE
		move.l	$10(a1),(a2)
		move.w	(a2),d0
		sub.w	$10(a0),d0
		addi.w	#$40,d0
		move.w	d0,(a2)
		move.w	#0,4(a2)
		subi.w	#$20,d0
		cmpi.w	#$60,d0
		bcc.s	loc_326DE
		move.w	#1,4(a2)

loc_326DE:
		bsr.w	sub_32A12
		move.b	#$20,$26(a1)
		move.b	#2,$2D(a1)

locret_326EE:
		rts
; ---------------------------------------------------------------------------

loc_326F0:
		tst.w	4(a2)
		bne.s	loc_3270C
		move.w	$1C(a1),d0
		bpl.s	loc_326FE
		neg.w	d0

loc_326FE:
		cmpi.w	#$118,d0
		bcc.s	loc_3270C
		bset	#1,$2A(a1)
		bra.s	loc_32734
; ---------------------------------------------------------------------------

loc_3270C:
		btst	#1,$2A(a1)
		bne.s	loc_32734
		move.w	$18(a1),d0
		ext.l	d0
		lsl.l	#6,d0
		move.l	d0,d1
		add.l	d0,d0
		add.l	d1,d0
		add.l	d0,(a2)
		moveq	#0,d0
		move.b	$1F(a1),d0
		neg.w	d0
		add.w	(a2),d0
		cmpi.w	#$A0,d0
		bcs.s	loc_32752

loc_32734:
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		move.b	#0,$30(a1)
		move.b	#4,$31(a1)
		andi.w	#$7FFF,$A(a1)
		rts
; ---------------------------------------------------------------------------

loc_32752:
		btst	#3,$2A(a1)
		beq.w	locret_327E0
		move.w	d0,d2
		subi.b	#$10,d0
		bcc.s	loc_3276C
		move.w	#0,4(a2)
		moveq	#0,d0

loc_3276C:
		cmpi.b	#-$80,d0
		bcs.s	loc_3277C
		move.w	#0,4(a2)
		move.w	#$80,d0

loc_3277C:
		andi.w	#$7FFF,$A(a1)
		cmpi.b	#$34,d0
		bcc.s	loc_3278E
		ori.w	#-$8000,$A(a1)

loc_3278E:
		tst.w	4(a2)
		beq.s	loc_32796
		moveq	#0,d0

loc_32796:
		add.w	d0,d0
		move.b	d0,$27(a1)
		jsr	(GetSineCosine).l
		move.w	d1,d4
		asr.w	#4,d1
		move.w	d1,d3
		add.w	d2,d1
		add.w	$10(a0),d1
		subi.w	#$50,d1
		moveq	#0,d0
		move.b	$1F(a1),d0
		muls.w	d4,d0
		asr.w	#8,d0
		add.w	d0,d1
		move.w	d1,$10(a1)
		move.w	d2,d0
		subi.w	#$51,d0
		move.w	$14(a0),d2
		sub.w	d3,d2
		add.w	d0,d2
		moveq	#0,d1
		move.b	$1E(a1),d1
		muls.w	d4,d1
		asr.w	#8,d1
		sub.w	d1,d2
		move.w	d2,$14(a1)

locret_327E0:
		rts
; End of function sub_325CC

; ---------------------------------------------------------------------------

loc_327E2:
		lea	$30(a0),a2
		lea	(Player_1).w,a1
		moveq	#3,d6
		bsr.s	sub_327FE
		addq.w	#6,a2
		lea	(Player_2).w,a1
		addq.b	#1,d6
		bsr.s	sub_327FE
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_327FE:
		btst	d6,$2A(a0)
		bne.w	loc_3291E
		btst	#3,$2A(a1)
		bne.w	loc_32894
		moveq	#0,d0
		move.b	$1F(a1),d0
		add.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$60,d0
		cmpi.w	#$A0,d0
		bcc.s	locret_32892
		subi.w	#$3E,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		add.w	$14(a1),d1
		sub.w	$14(a0),d1
		add.w	d0,d1
		cmpi.w	#$10,d1
		bcc.s	locret_32892
		tst.b	$2E(a1)
		bne.s	locret_32892
		tst.w	(Debug_placement_mode).w
		bne.s	locret_32892
		btst	#1,$2A(a1)
		beq.s	loc_3285C
		tst.w	$1A(a1)
		bmi.s	locret_32892

loc_3285C:
		move.l	$10(a1),(a2)
		move.w	(a2),d0
		sub.w	$10(a0),d0
		addi.w	#$60,d0
		move.w	d0,(a2)
		move.w	#0,4(a2)
		subi.w	#$18,d0
		cmpi.w	#$70,d0
		bcc.s	loc_32882
		move.w	#1,4(a2)

loc_32882:
		bsr.w	sub_32A12
		move.b	#-$20,$26(a1)
		move.b	#3,$2D(a1)

locret_32892:
		rts
; ---------------------------------------------------------------------------

loc_32894:
		moveq	#0,d0
		move.b	$1F(a1),d0
		add.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$50,d0
		cmpi.w	#$80,d0
		bcc.s	locret_3291C
		subi.w	#$2E,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		add.w	$14(a1),d1
		sub.w	$14(a0),d1
		add.w	d0,d1
		cmpi.w	#$10,d1
		bcc.s	locret_3291C
		tst.b	$2E(a1)
		bne.s	locret_3291C
		btst	#1,$2A(a1)
		beq.s	loc_328DA
		tst.w	$1A(a1)
		bmi.s	locret_3291C

loc_328DA:
		movea.w	$42(a1),a3
		cmpi.l	#loc_327E2,(a3)
		bne.s	locret_3291C
		move.l	$10(a1),(a2)
		move.w	(a2),d0
		sub.w	$10(a0),d0
		addi.w	#$60,d0
		move.w	d0,(a2)
		move.w	#0,4(a2)
		subi.w	#$20,d0
		cmpi.w	#$60,d0
		bcc.s	loc_3290C
		move.w	#1,4(a2)

loc_3290C:
		bsr.w	sub_32A12
		move.b	#-$20,$26(a1)
		move.b	#3,$2D(a1)

locret_3291C:
		rts
; ---------------------------------------------------------------------------

loc_3291E:
		tst.w	4(a2)
		bne.s	loc_3293A
		move.w	$1C(a1),d0
		bpl.s	loc_3292C
		neg.w	d0

loc_3292C:
		cmpi.w	#$118,d0
		bcc.s	loc_3293A
		bset	#1,$2A(a1)
		bra.s	loc_32960
; ---------------------------------------------------------------------------

loc_3293A:
		btst	#1,$2A(a1)
		bne.s	loc_32960
		move.w	$18(a1),d0
		ext.l	d0
		lsl.l	#6,d0
		move.l	d0,d1
		add.l	d0,d0
		add.l	d1,d0
		add.l	d0,(a2)
		moveq	#0,d0
		move.b	$1F(a1),d0
		add.w	(a2),d0
		cmpi.w	#$A0,d0
		bcs.s	loc_3297E

loc_32960:
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		move.b	#0,$30(a1)
		move.b	#4,$31(a1)
		andi.w	#$7FFF,$A(a1)
		rts
; ---------------------------------------------------------------------------

loc_3297E:
		btst	#3,$2A(a1)
		beq.w	locret_32A10
		move.w	d0,d2
		subi.b	#$10,d0
		bcc.s	loc_32998
		move.w	#0,4(a2)
		moveq	#0,d0

loc_32998:
		cmpi.b	#-$80,d0
		bcs.s	loc_329A8
		move.w	#0,4(a2)
		move.w	#$80,d0

loc_329A8:
		andi.w	#$7FFF,$A(a1)
		cmpi.b	#$4C,d0
		bcs.s	loc_329BA
		ori.w	#-$8000,$A(a1)

loc_329BA:
		tst.w	4(a2)
		beq.s	loc_329C2
		moveq	#0,d0

loc_329C2:
		neg.b	d0
		add.w	d0,d0
		move.b	d0,$27(a1)
		jsr	(GetSineCosine).l
		move.w	d1,d4
		asr.w	#4,d1
		move.w	d1,d3
		neg.w	d1
		add.w	d2,d1
		add.w	$10(a0),d1
		subi.w	#$50,d1
		moveq	#0,d0
		move.b	$1F(a1),d0
		muls.w	d4,d0
		asr.w	#8,d0
		sub.w	d0,d1
		move.w	d1,$10(a1)
		move.w	d2,d0
		subi.w	#$4E,d0
		move.w	$14(a0),d2
		sub.w	d3,d2
		sub.w	d0,d2
		moveq	#0,d1
		move.b	$1E(a1),d1
		muls.w	d4,d1
		asr.w	#8,d1
		sub.w	d1,d2
		move.w	d2,$14(a1)

locret_32A10:
		rts
; End of function sub_327FE


; =============== S U B R O U T I N E =======================================


sub_32A12:
		btst	#3,$2A(a1)
		beq.s	loc_32A22
		movea.w	$42(a1),a3
		bclr	d6,$2A(a3)

loc_32A22:
		move.w	a0,$42(a1)
		btst	#1,$2A(a1)
		beq.s	loc_32A5E
		move.w	#0,$1A(a1)
		move.w	$18(a1),$1C(a1)
		move.l	a0,-(sp)
		movea.l	a1,a0
		move.w	a0,d1
		subi.w	#-$5000,d1
		bne.s	loc_32A56
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_32A56
		jsr	(Player_TouchFloor).l
		bra.s	loc_32A5C
; ---------------------------------------------------------------------------

loc_32A56:
		jsr	(Tails_TouchFloor).l

loc_32A5C:
		movea.l	(sp)+,a0

loc_32A5E:
		bset	#3,$2A(a1)
		bclr	#1,$2A(a1)
		bset	d6,$2A(a0)
		rts
; End of function sub_32A12

; ---------------------------------------------------------------------------

Obj_4E_1:
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#3,d0
		move.w	d0,$38(a0)
		add.w	d0,d0
		move.w	d0,$3A(a0)
		moveq	#1,d1
		btst	#0,$2A(a0)
		bne.s	loc_32A8E
		neg.w	d1

loc_32A8E:
		move.w	d1,$1A(a0)
		move.l	#loc_32A98,(a0)

loc_32A98:
		lea	(Player_1).w,a1
		lea	$30(a0),a2
		moveq	#3,d6
		move.w	(Ctrl_1_logical).w,d5
		bsr.s	sub_32AFE
		lea	(Player_2).w,a1
		lea	$34(a0),a2
		; Bug: if player 1 was riding the object, then d6 may have become dirty from
		; a call to Perform_Player_DPLC, causing player 2 to behave erratically
		addq.b	#1,d6
		move.w	(Ctrl_2_logical).w,d5
		bsr.s	sub_32AFE
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$3F,d0
		bne.s	loc_32AF8
		move.w	$10(a0),d0
		sub.w	(Camera_X_pos).w,d0
		addi.w	#$40,d0
		cmpi.w	#$1C0,d0
		bcc.s	loc_32AF8
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		add.w	$38(a0),d0
		addi.w	#$40,d0
		move.w	$3A(a0),d1
		addi.w	#$80,d1
		cmp.w	d1,d0
		bcc.s	loc_32AF8
		moveq	#signextendB(sfx_WaveHover),d0
		jsr	(Play_Sound_2).l

loc_32AF8:
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_32AFE:
		btst	d6,$2A(a0)
		bne.w	loc_32BDA
		tst.b	1(a2)
		beq.s	loc_32B12
		subq.b	#1,1(a2)
		rts
; ---------------------------------------------------------------------------

loc_32B12:
		moveq	#0,d1
		move.b	$1E(a1),d1
		addi.w	#$44,d1
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		add.w	d1,d1
		cmp.w	d1,d0
		bcc.w	locret_32BD8
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		add.w	$38(a0),d0
		cmp.w	$3A(a0),d0
		bcc.w	locret_32BD8
		tst.b	$2E(a1)
		bne.w	locret_32BD8
		tst.w	(Debug_placement_mode).w
		bne.w	locret_32BD8
		subi.w	#$10,d0
		bcc.s	loc_32B5C
		sub.w	d0,$14(a1)

loc_32B5C:
		btst	#1,$2A(a1)
		beq.w	loc_32B92
		tst.b	$26(a1)
		beq.s	loc_32B86
		bclr	#1,$2A(a1)
		move.w	$1C(a1),d0
		bpl.s	loc_32B7A
		neg.w	d0

loc_32B7A:
		cmpi.w	#$400,d0
		bcc.s	loc_32B92
		bset	#1,$2A(a1)

loc_32B86:
		move.b	#1,1(a2)
		bset	#0,$2E(a1)

loc_32B92:
		bsr.w	sub_32E68
		move.b	#-$80,(a2)
		move.b	#-$40,$26(a1)
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		bcs.s	loc_32BB4
		move.b	#$40,$26(a1)
		move.b	#0,(a2)

loc_32BB4:
		bclr	#0,$2A(a1)
		bclr	#0,4(a1)
		bclr	#1,4(a1)
		bset	#6,$2E(a1)
		bset	#1,$2E(a1)
		move.b	#0,$20(a1)

locret_32BD8:
		rts
; ---------------------------------------------------------------------------

loc_32BDA:
		tst.b	1(a2)
		bne.w	loc_32D18
		tst.w	(Debug_placement_mode).w
		bne.s	loc_32C48
		move.w	$1C(a1),d0
		bpl.s	loc_32BF0
		neg.w	d0

loc_32BF0:
		cmpi.w	#$300,d0
		bcc.s	loc_32C06
		move.b	#1,1(a2)
		bset	#0,$2E(a1)
		bra.w	loc_32D18
; ---------------------------------------------------------------------------

loc_32C06:
		btst	#1,$2A(a1)
		beq.s	loc_32C36
		move.w	#-$800,$18(a1)
		move.w	#-$200,$1A(a1)
		bset	#0,$2A(a1)
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		bcs.s	loc_32C48
		neg.w	$18(a1)
		bclr	#0,$2A(a1)
		bra.s	loc_32C48
; ---------------------------------------------------------------------------

loc_32C36:
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		add.w	$38(a0),d0
		cmp.w	$3A(a0),d0
		bcs.s	loc_32C8A

loc_32C48:
		move.b	#0,$26(a1)
		bclr	#2,$2A(a1)
		move.b	#$13,$1E(a1)
		move.b	#9,$1F(a1)
		move.w	#1,$20(a1)
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		bclr	#6,$2E(a1)
		bclr	#1,$2E(a1)
		andi.w	#$7FFF,$A(a1)
		move.b	#$10,1(a2)
		rts
; ---------------------------------------------------------------------------

loc_32C8A:
		move.w	$1A(a0),d1
		bpl.s	loc_32C96
		cmpi.w	#$10,d0
		bls.s	loc_32C9A

loc_32C96:
		add.w	d1,$14(a1)

loc_32C9A:
		subi.w	#$10,d0
		bcc.s	loc_32CA4
		sub.w	d0,$14(a1)

loc_32CA4:
		moveq	#0,d0
		move.b	(a2),d0
		addq.b	#4,(a2)
		jsr	(GetSineCosine).l
		move.w	d1,d3
		asr.w	#2,d1
		add.w	$10(a0),d1
		moveq	#0,d0
		move.b	$1E(a1),d0
		muls.w	d3,d0
		asr.w	#8,d0
		add.w	d0,d1
		move.w	d1,$10(a1)
		moveq	#0,d0
		move.b	(a2),d0
		andi.w	#$7FFF,$A(a1)
		cmpi.b	#-$80,d0
		bcs.s	loc_32CDE
		ori.w	#-$8000,$A(a1)

loc_32CDE:
		addi.b	#$40,d0
		neg.b	d0
		andi.w	#$FF,d0
		divu.w	#$B,d0
		move.b	RawAni_32D00(pc,d0.w),$22(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		jmp	(Perform_Player_DPLC).l
; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------
RawAni_32D00:	dc.b  $76, $76, $77, $77, $6C, $6C, $6D, $6D, $6E, $6E, $6F, $6F, $70, $70, $71, $71, $72, $72, $73, $73
		dc.b  $74, $74, $75, $75
; ---------------------------------------------------------------------------

loc_32D18:
		tst.w	(Debug_placement_mode).w
		bne.s	loc_32D9C
		andi.w	#$70,d5
		beq.s	loc_32D58
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		move.w	#-$800,$18(a1)
		move.w	#-$200,$1A(a1)
		bset	#0,$2A(a1)
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		bcs.s	loc_32D9C
		neg.w	$18(a1)
		bclr	#0,$2A(a1)
		bra.s	loc_32D9C
; ---------------------------------------------------------------------------

loc_32D58:
		btst	#1,$2A(a1)
		bne.s	loc_32D9C
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		add.w	$38(a0),d0
		cmp.w	$3A(a0),d0
		bcs.s	loc_32DE4
		bne.s	loc_32D9C
		move.b	(a2),d0
		andi.b	#$7F,d0
		bne.s	loc_32DF4
		move.w	#-$100,$18(a1)
		move.w	#0,$1A(a1)
		tst.b	(a2)
		bmi.s	loc_32D90
		neg.w	$18(a1)

loc_32D90:
		move.w	$18(a1),$1C(a1)
		bset	#1,$2A(a1)

loc_32D9C:
		move.b	#0,$26(a1)
		bclr	#2,$2A(a1)
		move.b	#$13,$1E(a1)
		move.b	#9,$1F(a1)
		move.w	#1,$20(a1)
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		bclr	#6,$2E(a1)
		bclr	#1,$2E(a1)
		bclr	#0,$2E(a1)
		andi.w	#$7FFF,$A(a1)
		move.b	#$10,1(a2)
		rts
; ---------------------------------------------------------------------------

loc_32DE4:
		move.w	$1A(a0),d1
		bpl.s	loc_32DF0
		cmpi.w	#$10,d0
		bls.s	loc_32DF4

loc_32DF0:
		add.w	d1,$14(a1)

loc_32DF4:
		moveq	#0,d0
		move.b	(a2),d0
		addq.b	#4,(a2)
		jsr	(GetSineCosine).l
		move.w	d1,d3
		asr.w	#2,d1
		add.w	$10(a0),d1
		moveq	#0,d0
		move.b	$1E(a1),d0
		muls.w	d3,d0
		asr.w	#8,d0
		add.w	d0,d1
		move.w	d1,$10(a1)
		moveq	#0,d0
		move.b	(a2),d0
		andi.w	#$7FFF,$A(a1)
		cmpi.b	#-$80,d0
		bcs.s	loc_32E2E
		ori.w	#-$8000,$A(a1)

loc_32E2E:
		addi.b	#$40,d0
		neg.b	d0
		andi.w	#$FF,d0
		divu.w	#$B,d0
		move.b	RawAni_32E50(pc,d0.w),$22(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		jmp	(Perform_Player_DPLC).l
; End of function sub_32AFE

; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------
RawAni_32E50:	dc.b  $5E, $5E, $5E, $5F, $5F, $5F, $5F, $60, $60, $60, $60, $60, $61, $61, $61, $61, $5C, $5C, $5C, $5C
		dc.b  $5D, $5D, $5D, $5D

; =============== S U B R O U T I N E =======================================


sub_32E68:
		btst	#3,$2A(a1)
		beq.s	loc_32E78
		movea.w	$42(a1),a3
		bclr	d6,$2A(a3)

loc_32E78:
		move.w	a0,$42(a1)
		btst	#1,$2A(a1)
		beq.s	loc_32EAE
		move.w	#0,$18(a1)
		move.l	a0,-(sp)
		movea.l	a1,a0
		move.w	a0,d1
		subi.w	#-$5000,d1
		bne.s	loc_32EA6
		cmpi.w	#2,(Player_mode).w
		beq.s	loc_32EA6
		jsr	(Player_TouchFloor).l
		bra.s	loc_32EAC
; ---------------------------------------------------------------------------

loc_32EA6:
		jsr	(Tails_TouchFloor).l

loc_32EAC:
		movea.l	(sp)+,a0

loc_32EAE:
		bset	#3,$2A(a1)
		bclr	#1,$2A(a1)
		bset	d6,$2A(a0)
		rts
; End of function sub_32E68

; ---------------------------------------------------------------------------

Obj_50_1:
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#4,d0
		move.w	d0,$3A(a0)
		move.l	#loc_32ED2,(a0)

loc_32ED2:
		lea	(Player_1).w,a1
		lea	$30(a0),a2
		moveq	#3,d6
		move.w	(Ctrl_1_logical).w,d5
		bsr.s	sub_32EFE
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------
		lea	(Player_2).w,a1
		lea	$36(a0),a2
		addq.b	#1,d6
		move.w	(Ctrl_2_logical).w,d5
		bsr.s	sub_32EFE
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_32EFE:
		btst	d6,$2A(a0)
		bne.w	loc_32FD6
		tst.b	4(a2)
		beq.s	loc_32F38
		subq.b	#1,4(a2)
		bne.s	loc_32F18
		bclr	#0,$2E(a1)

loc_32F18:
		move.w	$18(a1),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$10(a1)
		move.w	$1A(a1),d0
		addi.w	#$38,$1A(a1)
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$14(a1)
		rts
; ---------------------------------------------------------------------------

loc_32F38:
		moveq	#0,d1
		move.b	$1E(a1),d1
		addi.w	#$24,d1
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		add.w	d1,d1
		cmp.w	d1,d0
		bcc.w	locret_32FD4
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		cmpi.w	#$20,d0
		bcc.s	locret_32FD4
		tst.b	$2E(a1)
		bne.s	locret_32FD4
		tst.w	(Debug_placement_mode).w
		bne.s	locret_32FD4
		btst	#1,$2A(a1)
		bne.s	locret_32FD4
		move.b	$26(a1),d0
		andi.b	#$7F,d0
		cmpi.w	#$40,d0
		bne.s	locret_32FD4
		move.l	$14(a1),(a2)
		move.w	(a2),d0
		sub.w	$14(a0),d0
		move.w	d0,(a2)
		bsr.w	sub_32E68
		move.b	#-$40,$26(a1)
		bclr	#0,4(a1)
		move.b	#-$80,5(a2)
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		bcs.s	loc_32FC2
		move.b	#$40,$26(a1)
		bset	#0,4(a1)
		move.b	#0,5(a2)

loc_32FC2:
		bset	#1,4(a1)
		bset	#6,$2E(a1)
		bset	#1,$2E(a1)

locret_32FD4:
		rts
; ---------------------------------------------------------------------------

loc_32FD6:
		tst.w	(Debug_placement_mode).w
		bne.w	loc_330C6
		andi.w	#$70,d5
		beq.s	loc_33028
		move.b	#8,4(a2)
		bset	#0,$2E(a1)
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		move.w	#-$800,$18(a1)
		move.w	#-$200,$1A(a1)
		bset	#0,$2A(a1)
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		bcs.w	loc_330C6
		neg.w	$18(a1)
		bclr	#0,$2A(a1)
		bra.w	loc_330C6
; ---------------------------------------------------------------------------

loc_33028:
		move.w	$1C(a1),d0
		bpl.s	loc_3303E
		neg.w	d0
		cmpi.w	#$400,d0
		bcc.s	loc_3304A
		move.w	#-$400,$1C(a1)
		bra.s	loc_3304A
; ---------------------------------------------------------------------------

loc_3303E:
		cmpi.w	#$400,d0
		bcc.s	loc_3304A
		move.w	#$400,$1C(a1)

loc_3304A:
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		cmp.w	$3A(a0),d0
		bcs.w	loc_3310A
		move.w	$1C(a1),d0
		bpl.s	loc_33076
		neg.w	d0
		cmpi.w	#$C00,d0
		bcs.s	loc_33088
		move.w	#-$C00,$1C(a1)
		move.w	#$C00,$1A(a1)
		bra.s	loc_33088
; ---------------------------------------------------------------------------

loc_33076:
		cmpi.w	#$C00,d0
		bcs.s	loc_33088
		move.w	#$C00,$1C(a1)
		move.w	#$C00,$1A(a1)

loc_33088:
		move.w	$1A(a1),d0
		ext.l	d0
		lsl.l	#6,d0
		move.l	d0,d1
		add.l	d0,d0
		add.l	d1,d0
		add.l	(a2),d0
		swap	d0
		moveq	#0,d2
		mulu.w	#$155,d0
		lsr.l	#8,d0
		move.w	d0,d2
		add.b	5(a2),d0
		jsr	(GetSineCosine).l
		move.w	d1,d3
		asr.w	#3,d1
		add.w	$10(a0),d1
		moveq	#0,d0
		move.b	$1E(a1),d0
		muls.w	d3,d0
		asr.w	#8,d0
		add.w	d0,d1
		move.w	d1,$10(a1)

loc_330C6:
		btst	#0,$2A(a0)
		beq.s	loc_330D4
		addi.b	#-$80,$26(a1)

loc_330D4:
		bclr	#2,$2A(a1)
		move.b	#$13,$1E(a1)
		move.b	#9,$1F(a1)
		move.w	#1,$20(a1)
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		bclr	#6,$2E(a1)
		bclr	#1,$2E(a1)
		andi.w	#$7FFF,$A(a1)
		rts
; ---------------------------------------------------------------------------

loc_3310A:
		move.w	$1C(a1),d0
		bpl.s	loc_33126
		neg.w	d0
		cmpi.w	#$C00,d0
		bcs.s	loc_33138
		move.w	#-$C00,$1C(a1)
		move.w	#$C00,$1A(a1)
		bra.s	loc_33138
; ---------------------------------------------------------------------------

loc_33126:
		cmpi.w	#$C00,d0
		bcs.s	loc_33138
		move.w	#$C00,$1C(a1)
		move.w	#$C00,$1A(a1)

loc_33138:
		move.w	$1A(a1),d0
		ext.l	d0
		lsl.l	#6,d0
		move.l	d0,d1
		add.l	d0,d0
		add.l	d1,d0
		add.l	d0,(a2)
		moveq	#0,d0
		moveq	#0,d2
		move.w	(a2),d0
		mulu.w	#$155,d0
		lsr.l	#8,d0
		move.w	d0,d2
		add.b	5(a2),d0
		jsr	(GetSineCosine).l
		move.w	d1,d3
		asr.w	#3,d1
		add.w	$10(a0),d1
		moveq	#0,d0
		move.b	$1E(a1),d0
		muls.w	d3,d0
		asr.w	#8,d0
		add.w	d0,d1
		move.w	d1,$10(a1)
		move.w	(a2),d0
		add.w	$14(a0),d0
		move.w	d0,$14(a1)
		moveq	#0,d0
		andi.w	#$7FFF,$A(a1)
		cmpi.b	#-$80,d2
		bcc.s	loc_33196
		ori.w	#-$8000,$A(a1)

loc_33196:
		subi.b	#$40,d2
		neg.b	d2
		andi.w	#$FF,d2
		divu.w	#$B,d2
		move.b	byte_331B8(pc,d2.w),$22(a1)
		moveq	#0,d0
		move.b	$22(a1),d0
		jmp	(Perform_Player_DPLC).l
; End of function sub_32EFE

; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------
byte_331B8:	dc.b  $76, $76, $77, $77, $6C, $6C, $6D, $6D, $6E, $6E, $6F, $6F, $70, $70, $71, $71, $72, $72, $73, $73
		dc.b  $74, $74, $75, $75
; ---------------------------------------------------------------------------

Obj_MGZSwingingPlatform:
		move.l	#Map_MGZSwingingPlatform,$C(a0)
		move.w	#$435F,$A(a0)
		move.b	#4,4(a0)
		move.b	#$18,7(a0)
		move.b	#$C,6(a0)
		move.w	#$200,8(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		move.b	#2,$22(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_33268
		move.l	#loc_332BA,(a1)
		move.l	#Map_MGZSwingingPlatform,$C(a1)
		move.w	#$435F,$A(a1)
		move.b	#4,4(a1)
		move.b	#$50,7(a1)
		move.b	#$50,6(a1)
		move.w	#$280,8(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		btst	#1,$2A(a0)
		bne.s	loc_33258
		move.b	#1,$22(a1)

loc_33258:
		bset	#6,4(a1)
		move.w	#4,$16(a1)
		move.w	a1,$3C(a0)

loc_33268:
		moveq	#1,d0
		btst	#0,$2A(a0)
		beq.s	loc_33274
		neg.w	d0

loc_33274:
		move.b	d0,$36(a0)
		move.b	$2C(a0),d0
		move.b	d0,$34(a0)
		move.l	#loc_33286,(a0)

loc_33286:
		move.w	$10(a0),-(sp)
		movea.w	$3C(a0),a1
		bsr.w	sub_332C0
		move.b	$36(a0),d0
		add.b	d0,$34(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		moveq	#0,d3
		move.b	6(a0),d3
		addq.w	#1,d3
		move.w	(sp)+,d4
		jsr	(SolidObjectTop).l
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_332BA:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_332C0:
		move.b	$34(a0),d0
		jsr	(GetSineCosine).l
		move.w	$32(a0),d2
		move.w	$30(a0),d3
		swap	d0
		swap	d1
		asr.l	#4,d0
		asr.l	#4,d1
		move.l	d0,d4
		move.l	d1,d5
		lea	$18(a1),a2
		move.w	$16(a1),d6
		subq.w	#1,d6

loc_332E8:
		movem.l	d4-d5,-(sp)
		swap	d4
		swap	d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d5,(a2)+
		move.w	d4,(a2)+
		movem.l	(sp)+,d4-d5
		add.l	d0,d4
		add.l	d1,d5
		addq.w	#2,a2
		dbf	d6,loc_332E8
		swap	d4
		swap	d5
		add.w	d2,d4
		add.w	d3,d5
		move.w	d5,$10(a0)
		move.w	d4,$14(a0)
		rts
; End of function sub_332C0

; ---------------------------------------------------------------------------
Map_MGZSwingingPlatform:
		include "Levels/MGZ/Misc Object Data/Map - Swinging Platform.asm"
; ---------------------------------------------------------------------------

Obj_MGZSwingingSpikeBall:
		move.l	#Map_MGZSwingingSpikeBall,$C(a0)
		move.w	#$235F,$A(a0)
		ori.b	#4,4(a0)
		move.b	#$20,7(a0)
		move.b	#$20,6(a0)
		move.w	#$200,8(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		move.b	#3,$22(a0)
		move.b	#-$71,$28(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_333F0
		move.l	#loc_334B4,(a1)
		move.l	#Map_MGZSwingingSpikeBall,$C(a1)
		move.w	#$235F,$A(a1)
		move.b	4(a0),4(a1)
		move.b	#$50,7(a1)
		move.b	#$50,6(a1)
		move.w	#$280,8(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		bset	#6,4(a1)
		move.w	#4,$16(a1)
		lea	$18(a1),a2
		move.w	$16(a1),d0

loc_333D0:
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		move.w	#0,(a2)+
		dbf	d0,loc_333D0
		move.w	#1,-2(a2)
		move.b	#1,$22(a1)
		move.w	a1,$3C(a0)

loc_333F0:
		move.b	$2C(a0),d0
		beq.s	loc_33416
		move.w	#2,-2(a2)
		move.b	#2,$22(a1)
		move.w	#-$8000,$34(a0)
		move.w	#$100,$36(a0)
		move.l	#loc_3346A,(a0)
		bra.s	loc_3346A
; ---------------------------------------------------------------------------

loc_33416:
		moveq	#2,d0
		btst	#1,$2A(a0)
		beq.s	loc_33422
		neg.w	d0

loc_33422:
		move.b	d0,$36(a0)
		move.l	#loc_3342C,(a0)

loc_3342C:
		movea.w	$3C(a0),a1
		bsr.w	sub_334BA
		move.b	$34(a0),d2
		move.b	$36(a0),d0
		add.b	d0,$34(a0)
		tst.b	4(a0)
		bpl.s	loc_33460
		move.b	$34(a0),d0
		eor.b	d0,d2
		andi.b	#$40,d2
		beq.s	loc_33460
		andi.b	#$40,d0
		beq.s	loc_33460
		moveq	#signextendB(sfx_SpikeBalls),d0
		jsr	(Play_Sound_2).l

loc_33460:
		move.w	$30(a0),d0
		jmp	(loc_19CC8).l
; ---------------------------------------------------------------------------

loc_3346A:
		movea.w	$3C(a0),a1
		bsr.w	sub_33516
		move.b	$34(a0),d2
		bpl.s	loc_33480
		addi.w	#$10,$36(a0)
		bra.s	loc_33486
; ---------------------------------------------------------------------------

loc_33480:
		subi.w	#$10,$36(a0)

loc_33486:
		move.w	$36(a0),d0
		add.w	d0,$34(a0)
		tst.b	4(a0)
		bpl.s	loc_334AE
		move.b	$34(a0),d0
		eor.b	d0,d2
		andi.b	#$40,d2
		beq.s	loc_334AE
		andi.b	#$40,d0
		beq.s	loc_334AE
		moveq	#signextendB(sfx_SpikeBalls),d0
		jsr	(Play_Sound_2).l

loc_334AE:
		jmp	(loc_19CC4).l
; ---------------------------------------------------------------------------

loc_334B4:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_334BA:
		move.w	#$200,8(a0)
		move.b	#0,$22(a1)
		move.w	#5,$16(a1)
		move.b	$34(a0),d0
		bpl.s	loc_334E4
		move.w	#$300,8(a0)
		move.b	#1,$22(a1)
		move.w	#4,$16(a1)

loc_334E4:
		jsr	(GetSineCosine).l
		move.w	$30(a0),d3
		swap	d1
		asr.l	#4,d1
		move.l	d1,d5
		lea	$18(a1),a2
		moveq	#3,d6

loc_334FA:
		move.l	d5,d4
		swap	d4
		add.w	d3,d4
		move.w	d4,(a2)+
		add.l	d1,d5
		addq.w	#4,a2
		dbf	d6,loc_334FA
		add.l	d1,d5
		swap	d5
		add.w	d3,d5
		move.w	d5,$10(a0)
		rts
; End of function sub_334BA


; =============== S U B R O U T I N E =======================================


sub_33516:
		move.w	#$200,8(a0)
		move.b	#0,$22(a1)
		move.w	#5,$16(a1)
		move.b	$34(a0),d0
		bpl.s	loc_33540
		move.w	#$300,8(a0)
		move.b	#2,$22(a1)
		move.w	#4,$16(a1)

loc_33540:
		jsr	(GetSineCosine).l
		move.w	$32(a0),d3
		swap	d1
		asr.l	#4,d1
		move.l	d1,d5
		lea	$1A(a1),a2
		moveq	#3,d6

loc_33556:
		move.l	d5,d4
		swap	d4
		add.w	d3,d4
		move.w	d4,(a2)+
		add.l	d1,d5
		addq.w	#4,a2
		dbf	d6,loc_33556
		add.l	d1,d5
		swap	d5
		add.w	d3,d5
		move.w	d5,$14(a0)
		rts
; End of function sub_33516

; ---------------------------------------------------------------------------
Map_MGZSwingingSpikeBall:
		include "Levels/MGZ/Misc Object Data/Map - Swinging Spike Ball.asm"
; ---------------------------------------------------------------------------

Obj_MGZHeadTrigger:
		move.l	#Map_MGZHeadTrigger,$C(a0)
		move.w	#-$5C01,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$10,7(a0)
		move.b	#$38,6(a0)
		move.b	#2,$22(a0)
		move.b	#$17,$28(a0)
		move.b	#3,$29(a0)
		bset	#6,4(a0)
		move.w	#1,$16(a0)
		lea	$18(a0),a2
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		move.w	#6,(a2)+
		btst	#0,$2A(a0)
		bne.s	loc_3360E
		move.w	#$C0,$30(a0)

loc_3360E:
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d0.w)
		beq.s	loc_33632
		move.b	#1,$34(a0)
		move.b	#0,$22(a0)
		move.b	#0,$28(a0)

loc_33632:
		move.l	#loc_33638,(a0)

loc_33638:
		tst.b	$34(a0)
		bne.w	loc_337BC
		move.w	(Player_1+x_pos).w,d0
		sub.w	$10(a0),d0
		add.w	$30(a0),d0
		cmpi.w	#$C0,d0
		bcc.s	loc_33670
		move.w	(Player_1+y_pos).w,d0
		sub.w	$14(a0),d0
		addi.w	#$80,d0
		cmpi.w	#$C0,d0
		bcc.s	loc_33670
		tst.b	$20(a0)
		bne.s	loc_33670
		move.w	#$100,$20(a0)

loc_33670:
		tst.b	$28(a0)
		bne.w	loc_33726
		tst.w	$32(a0)
		beq.s	loc_33690
		subq.w	#1,$32(a0)
		bne.w	loc_33726
		move.b	#$17,$28(a0)
		bra.w	loc_33726
; ---------------------------------------------------------------------------

loc_33690:
		move.w	#$3C,$32(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_3371E
		move.l	#loc_337E0,(a1)
		tst.b	$29(a0)
		bne.s	loc_336DC
		move.l	#Obj_Explosion,(a1)
		move.w	#-$8000,$A(a1)
		move.b	#2,5(a1)
		move.b	#1,$34(a0)
		move.b	#0,$22(a0)
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		move.b	#1,(a3,d0.w)

loc_336DC:
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	4(a0),4(a1)
		andi.b	#-$41,4(a1)
		move.b	$2A(a0),$2A(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		move.w	#$200,8(a1)
		move.b	#8,7(a1)
		move.b	#8,6(a1)
		move.b	#2,$20(a1)

loc_3371E:
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_33726:
		lea	(Ani_MGZHeadTrigger).l,a1
		jsr	(Animate_Sprite).l
		tst.b	5(a0)
		beq.w	loc_337BC
		clr.b	5(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_337BC
		move.l	#loc_337C2,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$10,$10(a1)
		addi.w	#$20,$14(a1)
		move.b	4(a0),4(a1)
		andi.b	#-$41,4(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		andi.w	#$7FFF,$A(a1)
		move.w	#$300,8(a1)
		move.b	#$10,7(a1)
		move.b	#4,6(a1)
		move.b	#-$65,$28(a1)
		move.w	#-$400,$18(a1)
		btst	#0,$2A(a0)
		beq.s	loc_337B4
		neg.w	$18(a1)
		subi.w	#$20,$10(a1)

loc_337B4:
		moveq	#signextendB(sfx_LevelProjectile),d0
		jsr	(Play_Sound_2).l

loc_337BC:
		jmp	(loc_19CC4).l
; ---------------------------------------------------------------------------

loc_337C2:
		tst.b	4(a0)
		bpl.s	loc_337DA
		jsr	(MoveSprite2).l
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_337DA:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_337E0:
		lea	(Ani_MGZHeadTrigger).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Ani_MGZHeadTrigger:
		include "Levels/MGZ/Misc Object Data/Anim - Head Trigger.asm"
Map_MGZHeadTrigger:
		include "Levels/MGZ/Misc Object Data/Map - Head Trigger.asm"
byte_33868:	dc.b  $40, $1E,   0, $40, $20, $40,   1, $40, $20, $40,   1, $40
; ---------------------------------------------------------------------------

Obj_MGZTriggerPlatform:
		move.b	$2C(a0),d1
		andi.w	#$F0,d1
		lsr.w	#2,d1
		lea	byte_33868(pc,d1.w),a1
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.b	(a1)+,$22(a0)
		moveq	#0,d0
		move.b	(a1)+,d0
		move.w	d0,$30(a0)
		lsr.w	#2,d1
		move.w	d1,$34(a0)
		move.l	#Map_MGZTriggerPlatform,$C(a0)
		move.w	#$4001,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.w	$10(a0),$36(a0)
		tst.w	d1
		beq.s	loc_338CA
		move.l	#loc_3393E,(a0)
		bra.w	loc_3393E
; ---------------------------------------------------------------------------

loc_338CA:
		move.l	#loc_338D0,(a0)

loc_338D0:
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d0.w)
		beq.s	loc_33916
		moveq	#2,d0
		btst	#0,$2A(a0)
		beq.s	loc_338EE
		neg.w	d0

loc_338EE:
		add.w	d0,$10(a0)
		move.w	#-1,(Screen_shake_flag).w
		subq.w	#1,$30(a0)
		bne.s	loc_33916
		move.w	#$7F00,$10(a0)
		move.w	#$7F00,$36(a0)
		move.w	#0,$48(a0)
		move.w	#0,(Screen_shake_flag).w

loc_33916:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		move.w	$36(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_3393E:
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		tst.b	(a3,d0.w)
		beq.s	loc_3395C
		tst.b	$32(a0)
		bmi.s	loc_3398E
		move.b	#1,$32(a0)

loc_3395C:
		tst.b	$32(a0)
		beq.s	loc_3398E
		bmi.s	loc_3398E
		move.w	$34(a0),d0
		btst	#0,$2A(a0)
		beq.s	loc_33972
		neg.w	d0

loc_33972:
		add.w	d0,$14(a0)
		move.w	#-1,(Screen_shake_flag).w
		subq.w	#1,$30(a0)
		bne.s	loc_3398E
		move.b	#-1,$32(a0)
		move.w	#0,(Screen_shake_flag).w

loc_3398E:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_MGZTriggerPlatform:
		include "Levels/MGZ/Misc Object Data/Map - Trigger Platform.asm"
; ---------------------------------------------------------------------------

Obj_MGZMovingSpikePlatform:
		move.l	#Map_MGZMovingSpikePlatform,$C(a0)
		move.w	#$4001,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	#$18,7(a0)
		move.b	#$30,6(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		btst	#0,$2A(a0)
		beq.s	loc_33ABA
		move.b	#1,$34(a0)

loc_33ABA:
		move.l	#loc_33AC0,(a0)

loc_33AC0:
		move.w	$10(a0),-(sp)
		tst.b	$34(a0)
		bne.s	loc_33AE4
		addq.w	#1,$10(a0)
		move.w	$30(a0),d0
		addi.w	#$50,d0
		cmp.w	$10(a0),d0
		bne.s	loc_33AFC
		move.b	#1,$34(a0)
		bra.s	loc_33AFC
; ---------------------------------------------------------------------------

loc_33AE4:
		subq.w	#1,$10(a0)
		move.w	$30(a0),d0
		subi.w	#$50,d0
		cmp.w	$10(a0),d0
		bne.s	loc_33AFC
		move.b	#0,$34(a0)

loc_33AFC:
		moveq	#0,d0
		move.b	(Oscillating_table+$12).w,d0
		add.w	$32(a0),d0
		move.w	d0,$14(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	(sp)+,d4
		jsr	(SolidObjectFull).l
		swap	d6
		andi.w	#3,d6
		beq.s	loc_33B78
		move.b	d6,d0
		andi.b	#1,d0
		beq.s	loc_33B54
		bclr	#5,$2A(a0)
		lea	(Player_1).w,a1
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		addi.w	#$28,d0
		bmi.s	loc_33B54
		jsr	(sub_228EC).l

loc_33B54:
		andi.b	#2,d6
		beq.s	loc_33B78
		bclr	#6,$2A(a0)
		lea	(Player_2).w,a1
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		addi.w	#$28,d0
		bmi.s	loc_33B78
		jsr	(sub_228EC).l

loc_33B78:
		subq.b	#1,$24(a0)
		bpl.s	loc_33B8E
		move.b	#7,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#3,$22(a0)

loc_33B8E:
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------
Map_MGZMovingSpikePlatform:
		include "Levels/MGZ/Misc Object Data/Map - Moving Spike Platform.asm"
; ---------------------------------------------------------------------------

Obj_MGZPulley:
		move.l	#Map_MGZPulley,$C(a0)
		move.w	#$235F,$A(a0)
		ori.b	#4,4(a0)
		move.b	#$20,7(a0)
		move.b	#$20,6(a0)
		move.w	#$280,8(a0)
		bset	#6,4(a0)
		move.w	#1,$16(a0)
		lea	$18(a0),a2
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		move.w	#0,(a2)+
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#3,d0
		move.w	d0,$40(a0)
		move.w	d0,$3C(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_33DC2
		move.l	#loc_340B6,(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		move.b	4(a0),4(a1)
		move.b	#$60,7(a1)
		move.b	#-$40,6(a1)
		move.w	#$300,8(a1)
		move.w	$10(a0),$12(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		subi.w	#$78,$10(a1)
		btst	#0,$2A(a0)
		beq.s	loc_33D74
		addi.w	#$F0,$10(a1)

loc_33D74:
		addi.w	#$D0,$14(a1)
		bset	#6,4(a1)
		move.w	#8,$16(a1)
		lea	$18(a1),a2
		moveq	#7,d0
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#$C,d2
		subi.w	#8,d3
		subi.w	#$18,d2
		addi.w	#$30,d3

loc_33DA4:
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		move.w	#5,(a2)+
		subi.w	#$18,d2
		addi.w	#$30,d3
		dbf	d0,loc_33DA4
		move.w	#6,-2(a2)
		move.w	a1,$3E(a0)

loc_33DC2:
		move.l	#loc_33DC8,(a0)

loc_33DC8:
		moveq	#0,d4
		tst.b	$38(a0)
		bne.s	loc_33DF0
		move.w	$3C(a0),d0
		cmp.w	$40(a0),d0
		beq.s	loc_33E56
		bcc.s	loc_33DE6
		addq.w	#2,$3C(a0)
		move.b	#-1,d4
		bra.s	loc_33E2E
; ---------------------------------------------------------------------------

loc_33DE6:
		move.b	#1,d4
		subq.w	#2,$3C(a0)
		bra.s	loc_33E2E
; ---------------------------------------------------------------------------

loc_33DF0:
		tst.w	$34(a0)
		bne.s	loc_33E0E
		tst.w	$3C(a0)
		beq.s	loc_33E56
		move.b	#1,d4
		subq.w	#4,$3C(a0)
		bcc.s	loc_33E2E
		move.w	#0,$3C(a0)
		bra.s	loc_33E2E
; ---------------------------------------------------------------------------

loc_33E0E:
		subq.w	#1,$34(a0)
		cmpi.w	#$C,$34(a0)
		bcs.s	loc_33E56
		move.w	$40(a0),d0
		addq.w	#8,d0
		cmp.w	$3C(a0),d0
		beq.s	loc_33E56
		addq.w	#2,$3C(a0)
		move.b	#-1,d4

loc_33E2E:
		subq.b	#1,$24(a0)
		bpl.s	loc_33E44
		move.b	#1,$24(a0)
		add.b	d4,$1D(a0)
		andi.b	#3,$1D(a0)

loc_33E44:
		tst.b	$22(a0)
		bne.s	loc_33E56
		tst.w	d4
		beq.s	loc_33E5C
		move.b	#4,$22(a0)
		bra.s	loc_33E5C
; ---------------------------------------------------------------------------

loc_33E56:
		move.b	#0,$22(a0)

loc_33E5C:
		bsr.w	sub_33FEA
		bsr.w	sub_33E6A
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_33E6A:
		lea	$38(a0),a2
		lea	(Player_1).w,a1
		move.w	(Ctrl_1).w,d0
		bsr.s	sub_33E82
		addq.w	#1,a2
		lea	(Player_2).w,a1
		move.w	(Ctrl_2).w,d0
; End of function sub_33E6A


; =============== S U B R O U T I N E =======================================


sub_33E82:
		tst.b	(a2)
		beq.w	loc_33F22
		tst.b	4(a1)
		bpl.s	loc_33EE2
		cmpi.b	#4,5(a1)
		bcc.s	loc_33EE2
		andi.b	#$70,d0
		beq.w	loc_33EF0
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$3C,2(a2)
		move.w	#-$400,$18(a1)
		btst	#0,$2A(a0)
		beq.s	loc_33EBC
		neg.w	$18(a1)

loc_33EBC:
		move.w	#-$600,$1A(a1)
		bset	#1,$2A(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		rts
; ---------------------------------------------------------------------------

loc_33EE2:
		clr.b	$2E(a1)
		clr.b	(a2)
		move.b	#$3C,2(a2)
		rts
; ---------------------------------------------------------------------------

loc_33EF0:
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#$26,d2
		addi.w	#$2E,d3
		move.w	$3C(a0),d0
		add.w	d0,d3
		lsr.w	#1,d0
		btst	#0,$2A(a0)
		beq.s	loc_33F16
		addi.w	#$4C,d2
		neg.w	d0

loc_33F16:
		sub.w	d0,d2
		move.w	d2,$10(a1)
		move.w	d3,$14(a1)
		rts
; ---------------------------------------------------------------------------

loc_33F22:
		tst.b	2(a2)
		beq.s	loc_33F30
		subq.b	#1,2(a2)
		bne.w	locret_33FE8

loc_33F30:
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#$26,d2
		addi.w	#$2E,d3
		move.w	$3C(a0),d0
		add.w	d0,d3
		lsr.w	#1,d0
		btst	#0,$2A(a0)
		beq.s	loc_33F56
		addi.w	#$4C,d2
		neg.w	d0

loc_33F56:
		sub.w	d0,d2
		move.w	$10(a1),d0
		sub.w	d2,d0
		addi.w	#$C,d0
		cmpi.w	#$18,d0
		bcc.w	locret_33FE8
		move.w	$14(a1),d1
		sub.w	d3,d1
		addi.w	#$C,d1
		cmpi.w	#$18,d1
		bcc.w	locret_33FE8
		tst.b	$2E(a1)
		bne.s	locret_33FE8
		cmpi.b	#4,5(a1)
		bcc.s	locret_33FE8
		tst.w	(Debug_placement_mode).w
		bne.s	locret_33FE8
		move.w	$18(a1),d0
		btst	#0,$2A(a0)
		beq.s	loc_33F9E
		neg.w	d0

loc_33F9E:
		tst.w	d0
		bpl.s	locret_33FE8
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		move.w	d2,$10(a1)
		move.w	d3,$14(a1)
		move.b	#$B,$20(a1)
		move.b	#1,$2E(a1)
		bclr	#0,$2A(a1)
		btst	#0,$2A(a0)
		beq.s	loc_33FD6
		bset	#0,$2A(a1)

loc_33FD6:
		move.w	#$10,$34(a0)
		move.b	#1,(a2)
		moveq	#signextendB(sfx_PulleyGrab),d0
		jsr	(Play_Sound_2).l

locret_33FE8:
		rts
; End of function sub_33E82


; =============== S U B R O U T I N E =======================================


sub_33FEA:
		btst	#0,$2A(a0)
		bne.s	loc_34054
		movea.w	$3E(a0),a1
		moveq	#0,d0
		move.w	$3C(a0),d0
		addi.w	#$18,d0
		divu.w	#$30,d0
		move.w	d0,$16(a1)
		move.w	d0,d1
		lea	$18(a1),a2
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#$C,d2
		subi.w	#8,d3
		swap	d0
		cmpi.w	#8,d1
		bne.s	loc_3402E
		move.w	#$30,d0
		moveq	#7,d1
		bra.s	loc_34032
; ---------------------------------------------------------------------------

loc_3402E:
		addq.w	#1,$16(a1)

loc_34032:
		add.w	d0,d3
		lsr.w	#1,d0
		sub.w	d0,d2

loc_34038:
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		move.w	#5,(a2)+
		subi.w	#$18,d2
		addi.w	#$30,d3
		dbf	d1,loc_34038
		move.w	#6,-2(a2)
		rts
; ---------------------------------------------------------------------------

loc_34054:
		movea.w	$3E(a0),a1
		moveq	#0,d0
		move.w	$3C(a0),d0
		addi.w	#$18,d0
		divu.w	#$30,d0
		move.w	d0,$16(a1)
		move.w	d0,d1
		lea	$18(a1),a2
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		addi.w	#$C,d2
		subi.w	#8,d3
		swap	d0
		cmpi.w	#8,d1
		bne.s	loc_34090
		move.w	#$30,d0
		moveq	#7,d1
		bra.s	loc_34094
; ---------------------------------------------------------------------------

loc_34090:
		addq.w	#1,$16(a1)

loc_34094:
		add.w	d0,d3
		lsr.w	#1,d0
		add.w	d0,d2

loc_3409A:
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		move.w	#5,(a2)+
		addi.w	#$18,d2
		addi.w	#$30,d3
		dbf	d1,loc_3409A
		move.w	#6,-2(a2)
		rts
; End of function sub_33FEA

; ---------------------------------------------------------------------------

loc_340B6:
		move.w	$12(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------
Map_MGZPulley:	include "Levels/MGZ/Misc Object Data/Map - Pulley.asm"
; ---------------------------------------------------------------------------

Obj_MGZTopPlatform:
		move.l	#Map_MGZTopPlatform,$C(a0)
		move.w	#$235F,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$18,7(a0)
		move.b	#$C,6(a0)
		move.b	#$1F,$1E(a0)
		move.b	#$18,$1F(a0)
		move.b	#$1F,$44(a0)
		move.b	#$18,$45(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		move.b	#$C,$46(a0)
		move.b	#$D,$47(a0)
		move.l	#loc_341EC,(a0)

loc_341EC:
		lea	(Player_1).w,a1
		lea	$40(a0),a4
		move.w	(Ctrl_1_logical).w,d5
		moveq	#3,d6
		bsr.w	sub_34484
		lea	(Player_2).w,a1
		lea	$42(a0),a4
		move.w	(Ctrl_2_logical).w,d5
		moveq	#4,d6
		bsr.w	sub_34484
		tst.b	$2C(a0)
		bne.w	loc_342FA
		btst	#1,$2A(a0)
		beq.w	loc_342A6
		cmpi.w	#$200,$1A(a0)
		bge.s	loc_34230
		addi.w	#8,$1A(a0)

loc_34230:
		jsr	(MoveSprite2).l
		subi.w	#$13,$14(a0)
		move.l	a1,-(sp)
		jsr	(sub_347FC).l
		movea.l	(sp)+,a1
		addi.w	#$13,$14(a0)
		tst.b	$2D(a0)
		beq.s	loc_34268
		move.w	#0,$1A(a0)
		move.w	#0,$18(a0)
		bclr	#1,$2A(a0)
		bra.w	loc_342FA
; ---------------------------------------------------------------------------

loc_34268:
		btst	#1,$2A(a0)
		bne.w	loc_342FA
		move.w	$18(a0),d0
		bpl.s	loc_3427A
		neg.w	d0

loc_3427A:
		cmpi.w	#$40,d0
		bcs.s	loc_342FA
		move.w	#$800,d1
		cmpi.w	#$100,d0
		bcs.s	loc_3428E
		move.w	#$C00,d1

loc_3428E:
		tst.w	$18(a0)
		bpl.s	loc_34296
		neg.w	d1

loc_34296:
		move.w	d1,$18(a0)
		move.w	d1,$1C(a0)
		move.b	#1,$34(a0)
		bra.s	loc_342FA
; ---------------------------------------------------------------------------

loc_342A6:
		tst.b	$35(a0)
		beq.s	loc_342B6
		bsr.w	sub_34DFA
		addq.w	#4,$24(a0)
		bra.s	loc_342FA
; ---------------------------------------------------------------------------

loc_342B6:
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	$1C(a0),d1
		asr.l	#8,d1
		move.w	d1,$18(a0)
		muls.w	$1C(a0),d0
		asr.l	#8,d0
		move.w	d0,$1A(a0)
		bsr.s	h
		jsr	(MoveSprite2).l
		tst.b	$2D(a0)
		bne.s	loc_342E6
		bsr.w	sub_34406

loc_342E6:
		addq.w	#4,$24(a0)
		tst.w	$1C(a0)
		bne.s	loc_342F6
		move.b	#0,$34(a0)

loc_342F6:
		bsr.w	sub_34BF8

loc_342FA:
		lea	(Player_1).w,a1
		lea	$40(a0),a4
		moveq	#3,d6
		bsr.w	sub_34794
		lea	(Player_2).w,a1
		lea	$42(a0),a4
		moveq	#4,d6
		bsr.w	sub_34794
		move.w	$24(a0),d0
		asr.w	#3,d0
		andi.w	#1,d0
		move.b	d0,$22(a0)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_3432A:
		jsr	(MoveSprite).l
		addq.w	#4,$24(a0)
		move.w	$24(a0),d0
		asr.w	#3,d0
		andi.w	#1,d0
		move.b	d0,$22(a0)
		tst.b	4(a0)
		bmi.s	loc_3434E
		move.w	#$7F00,$10(a0)

loc_3434E:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


h:
		move.b	#$40,d1
		tst.w	$1C(a0)
		beq.s	locret_343CE
		bmi.s	loc_34362
		neg.w	d1

loc_34362:
		move.b	$26(a0),d0
		add.b	d1,d0
		move.w	d0,-(sp)
		move.b	#$13,$1E(a0)
		move.b	#$18,$1F(a0)
		subi.w	#$C,$14(a0)
		jsr	(sub_10A10).l
		addi.w	#$C,$14(a0)
		move.w	(sp)+,d0
		tst.w	d1
		bpl.s	locret_343CE
		asl.w	#8,d1
		addi.b	#$20,d0
		andi.b	#-$40,d0
		beq.s	loc_34400
		cmpi.b	#$40,d0
		beq.s	loc_343D6
		cmpi.b	#-$80,d0
		beq.s	loc_343D0
		addi.b	#$30,d3
		cmpi.b	#$60,d3
		bcs.s	locret_343CE
		add.w	d1,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		btst	#0,$2A(a0)
		bne.s	locret_343CE
		bset	#5,$2A(a0)

locret_343CE:
		rts
; ---------------------------------------------------------------------------

loc_343D0:
		sub.w	d1,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_343D6:
		addi.b	#$30,d3
		cmpi.b	#$60,d3
		bcs.s	locret_343CE
		sub.w	d1,$18(a0)
		move.w	#0,$1A(a0)
		move.w	#0,$1C(a0)
		btst	#0,$2A(a0)
		beq.s	locret_343CE
		bset	#5,$2A(a0)
		rts
; ---------------------------------------------------------------------------

loc_34400:
		add.w	d1,$1A(a0)
		rts
; End of function h


; =============== S U B R O U T I N E =======================================


sub_34406:
		move.b	#$C,$1E(a0)
		move.b	#$A,$1F(a0)
		moveq	#3,d0
		move.b	d0,(Primary_Angle).w
		move.b	d0,(Secondary_Angle).w
		jsr	(Sonic_CheckFloor).l
		tst.b	d3
		bpl.s	loc_34432
		cmpi.b	#-$1E,d3
		bcc.s	loc_3443C
		move.b	#-$1E,d3
		bra.s	loc_3443C
; ---------------------------------------------------------------------------

loc_34432:
		cmpi.b	#$1E,d3
		bls.s	loc_3443C
		move.b	#$1E,d3

loc_3443C:
		move.b	d3,$26(a0)
		tst.w	d1
		beq.s	locret_34450
		bpl.s	loc_34452
		cmpi.w	#-$E,d1
		blt.s	locret_34450
		add.w	d1,$14(a0)

locret_34450:
		rts
; ---------------------------------------------------------------------------

loc_34452:
		move.b	$18(a0),d0
		bpl.s	loc_3445A
		neg.b	d0

loc_3445A:
		addq.b	#4,d0
		cmpi.b	#$E,d0
		bcs.s	loc_34466
		move.b	#$E,d0

loc_34466:
		cmp.b	d0,d1
		bgt.s	loc_34470
		add.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_34470:
		bset	#1,$2A(a0)
		bclr	#5,$2A(a0)
		move.b	#0,$34(a0)
		rts
; End of function sub_34406


; =============== S U B R O U T I N E =======================================


sub_34484:
		moveq	#0,d0
		move.b	(a4),d0
		move.w	off_34490(pc,d0.w),d0
		jmp	off_34490(pc,d0.w)
; End of function sub_34484

; ---------------------------------------------------------------------------
off_34490:	dc.w loc_3449C-off_34490
		dc.w loc_344E4-off_34490
		dc.w loc_34554-off_34490
		dc.w loc_34498-off_34490
; ---------------------------------------------------------------------------

loc_34498:
		clr.w	(a4)
		rts
; ---------------------------------------------------------------------------

loc_3449C:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(sub_1BA2A).l
		btst	d6,$2A(a0)
		bne.s	loc_344C2
		rts
; ---------------------------------------------------------------------------

loc_344C2:
		tst.b	$37(a1)
		bmi.s	locret_344E2
		addq.b	#2,(a4)
		move.b	#0,1(a4)
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		bcc.s	loc_344E0
		move.b	#1,1(a4)

loc_344E0:
		bra.s	loc_34502
; ---------------------------------------------------------------------------

locret_344E2:
		rts
; ---------------------------------------------------------------------------

loc_344E4:
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(sub_1BA2A).l

loc_34502:
		btst	d6,$2A(a0)
		bne.s	loc_3450A
		clr.b	(a4)

loc_3450A:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		tst.b	1(a4)
		beq.s	loc_3451C
		addi.w	#$F,d0

loc_3451C:
		cmpi.w	#$10,d0
		bcc.s	locret_34552
		move.w	$10(a0),$10(a1)
		move.b	$44(a1),d0
		addi.b	#$18,d0
		move.b	d0,$1E(a1)
		bset	#0,$2E(a1)
		move.b	#-$80,$37(a1)
		bclr	d6,$2A(a0)
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)
		addq.b	#2,(a4)

locret_34552:
		rts
; ---------------------------------------------------------------------------

loc_34554:
		cmpi.b	#4,5(a1)
		bcc.w	sub_3472C
		tst.w	(Debug_placement_mode).w
		bne.s	loc_3459C
		move.w	d5,d0
		andi.w	#$70,d0
		beq.w	loc_345BA
		move.w	#-$680,$1A(a1)
		move.b	#1,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		move.w	#sfx_Jump,d0
		jsr	(Play_Sound_2).l

loc_3459C:
		bclr	#0,$2E(a1)
		move.b	#0,$37(a1)
		bset	#1,$2A(a1)
		clr.b	(a4)
		cmpa.w	#Player_1,a1
		beq.w	sub_3472C

locret_345B8:
		rts
; ---------------------------------------------------------------------------

loc_345BA:
		move.w	d5,d0
		andi.w	#$C00,d0
		bne.s	loc_345DA
		tst.w	$18(a0)
		beq.s	loc_345DA
		bclr	#0,$2A(a1)
		tst.w	$18(a0)
		bpl.s	loc_345DA
		bset	#0,$2A(a1)

loc_345DA:
		move.b	$44(a1),d0
		addi.b	#$18,d0
		move.b	d0,$1E(a1)
		cmpa.w	#Player_2,a1
		bne.s	loc_345EE
		rts
; ---------------------------------------------------------------------------

loc_345EE:
		move.l	a0,-(sp)
		movea.l	a1,a0
		move.w	d5,d3
		cmpi.b	#$10,$20(a0)
		beq.s	loc_34602
		jsr	(sub_34A96).l

loc_34602:
		jsr	(Player_LevelBound).l
		jsr	(MoveSprite2).l
		movea.l	(sp)+,a0
		cmpi.b	#$10,$20(a1)
		bne.s	loc_34638
		move.w	$18(a1),$18(a0)
		move.w	$1A(a1),$1A(a0)
		addi.w	#$38,$1A(a1)
		bset	#1,$2A(a0)
		move.b	#0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_34638:
		bclr	#6,$37(a1)
		beq.s	loc_3464C
		move.w	#0,$1C(a0)
		move.w	#0,$18(a0)

loc_3464C:
		bclr	#5,$37(a1)
		beq.s	loc_3465A
		move.w	#0,$1A(a0)

loc_3465A:
		move.w	$18(a0),$18(a1)
		move.w	$1A(a0),$1A(a1)
		move.w	$46(a1),$46(a0)
		tst.b	$34(a0)
		bne.w	locret_345B8
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		beq.w	loc_34702
		bcc.w	loc_346C2
		cmpi.w	#-$200,$18(a0)
		ble.s	loc_3469C
		add.w	d0,$18(a0)
		add.w	d0,$18(a0)
		add.w	d0,$18(a0)
		add.w	d0,$18(a0)

loc_3469C:
		add.w	d0,$24(a0)
		move.w	$18(a0),d0
		bpl.s	loc_346BA
		asr.w	#4,d0
		subi.w	#8,$1A(a0)
		cmpi.w	#-$100,$1A(a0)
		ble.s	loc_346BA
		add.w	d0,$1A(a0)

loc_346BA:
		bset	#1,$2A(a0)
		rts
; ---------------------------------------------------------------------------

loc_346C2:
		cmpi.w	#$200,$18(a0)
		bge.s	loc_346DA
		add.w	d0,$18(a0)
		add.w	d0,$18(a0)
		add.w	d0,$18(a0)
		add.w	d0,$18(a0)

loc_346DA:
		add.w	d0,$24(a0)
		move.w	$18(a0),d0
		bmi.s	loc_346FA
		neg.w	d0
		asr.w	#4,d0
		subi.w	#8,$1A(a0)
		cmpi.w	#-$100,$1A(a0)
		ble.s	loc_346FA
		add.w	d0,$1A(a0)

loc_346FA:
		bset	#1,$2A(a0)
		rts
; ---------------------------------------------------------------------------

loc_34702:
		moveq	#1,d0
		tst.w	$18(a0)
		beq.s	loc_34712
		bmi.s	loc_3470E
		neg.w	d0

loc_3470E:
		add.w	d0,$18(a0)

loc_34712:
		add.w	d0,$24(a0)
		tst.w	$1A(a0)
		bpl.s	locret_34720
		clr.w	$1A(a0)

locret_34720:
		rts
; ---------------------------------------------------------------------------
		clr.w	$18(a0)
		clr.w	$1A(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_3472C:
		move.l	#loc_3432A,(a0)
		lea	(Player_1).w,a2
		cmpi.b	#4,$40(a0)
		bne.s	loc_34750
		bclr	#0,$2E(a2)
		move.b	#0,$37(a2)
		bset	#1,$2A(a2)

loc_34750:
		tst.b	$40(a0)
		beq.s	loc_3475C
		bclr	#3,$2A(a2)

loc_3475C:
		lea	(Player_2).w,a2
		cmpi.b	#4,$42(a0)
		bne.s	loc_3477A
		bclr	#0,$2E(a2)
		move.b	#0,$37(a2)
		bset	#1,$2A(a2)

loc_3477A:
		tst.b	$42(a0)
		beq.s	loc_34786
		bclr	#3,$2A(a2)

loc_34786:
		move.b	#6,$40(a0)
		move.b	#6,$42(a0)
		rts
; End of function sub_3472C


; =============== S U B R O U T I N E =======================================


sub_34794:
		btst	#3,$2A(a1)
		bne.s	loc_347C4
		cmpi.b	#4,(a4)
		bcs.s	locret_347C2
		move.w	$14(a0),d0
		subi.w	#$C,d0
		moveq	#0,d1
		move.b	$44(a1),d1
		sub.w	d1,d0
		move.w	d0,$14(a1)
		move.w	$10(a0),$10(a1)
		move.b	#0,$2D(a0)

locret_347C2:
		rts
; ---------------------------------------------------------------------------

loc_347C4:
		cmpi.b	#4,(a4)
		bcs.s	locret_347FA
		movea.w	$42(a1),a2
		cmpi.l	#loc_31D3E,(a2)
		bne.s	loc_347DA
		bsr.w	sub_3472C

loc_347DA:
		move.w	$10(a0),$10(a1)
		move.w	$14(a1),d0
		moveq	#0,d1
		move.b	$44(a1),d1
		add.w	d1,d0
		addi.w	#$D,d0
		move.w	d0,$14(a0)
		move.b	#1,$2D(a0)

locret_347FA:
		rts
; End of function sub_34794


; =============== S U B R O U T I N E =======================================


sub_347FC:
		move.l	(Primary_collision_addr).w,(Collision_addr).w
		cmpi.b	#$C,$46(a0)
		beq.s	loc_34810
		move.l	(Secondary_collision_addr).w,(Collision_addr).w

loc_34810:
		move.b	$47(a0),d5
		move.w	$18(a0),d1
		move.w	$1A(a0),d2
		jsr	(GetArcTan).l
		subi.b	#$20,d0
		andi.b	#-$40,d0
		cmpi.b	#$40,d0
		beq.w	loc_34900
		cmpi.b	#-$80,d0
		beq.w	loc_3498A
		cmpi.b	#-$40,d0
		beq.w	loc_34A0C
		move.b	#$C,$1E(a0)
		move.b	#$18,$1F(a0)
		jsr	(sub_1100E).l
		tst.w	d1
		bpl.s	loc_34862
		sub.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_34862:
		jsr	(sub_10D76).l
		tst.w	d1
		bpl.s	loc_34876
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_34876:
		move.b	#$1F,$1E(a0)
		move.b	#$A,$1F(a0)
		jsr	(Sonic_CheckFloor).l
		tst.w	d1
		bpl.s	locret_348FE
		move.b	$1A(a0),d2
		addq.b	#8,d2
		neg.b	d2
		cmp.b	d2,d1
		bge.s	loc_3489C
		cmp.b	d2,d0
		blt.s	locret_348FE

loc_3489C:
		add.w	d1,$14(a0)
		move.b	d3,$26(a0)
		bclr	#1,$2A(a0)
		move.b	#0,$2D(a0)
		move.b	d3,d0
		addi.b	#$20,d0
		andi.b	#$40,d0
		bne.s	loc_348DC
		move.b	d3,d0
		addi.b	#$10,d0
		andi.b	#$20,d0
		beq.s	loc_348CE
		asr	$1A(a0)
		bra.s	loc_348F0
; ---------------------------------------------------------------------------

loc_348CE:
		move.w	#0,$1A(a0)
		move.w	$18(a0),$1C(a0)
		rts
; ---------------------------------------------------------------------------

loc_348DC:
		move.w	#0,$18(a0)
		cmpi.w	#$FC0,$1A(a0)
		ble.s	loc_348F0
		move.w	#$FC0,$1A(a0)

loc_348F0:
		move.w	$1A(a0),$1C(a0)
		tst.b	d3
		bpl.s	locret_348FE
		neg.w	$1C(a0)

locret_348FE:
		rts
; ---------------------------------------------------------------------------

loc_34900:
		move.b	#$C,$1E(a0)
		move.b	#$18,$1F(a0)
		jsr	(sub_1100E).l
		tst.w	d1
		bpl.s	loc_34930
		sub.w	d1,$10(a0)
		addi.b	#$30,d3
		cmpi.b	#$60,d3
		bcs.s	loc_34930
		move.w	#0,$18(a0)
		move.w	$1A(a0),$1C(a0)

loc_34930:
		move.b	#$1F,$1E(a0)
		move.b	#$A,$1F(a0)
		jsr	(sub_10EB6).l
		tst.w	d1
		bpl.s	loc_34958
		sub.w	d1,$14(a0)
		tst.w	$1A(a0)
		bpl.s	locret_34956
		move.w	#0,$1A(a0)

locret_34956:
		rts
; ---------------------------------------------------------------------------

loc_34958:
		tst.w	$1A(a0)
		bmi.s	locret_34988
		jsr	(Sonic_CheckFloor).l
		tst.w	d1
		bpl.s	locret_34988
		add.w	d1,$14(a0)
		move.b	d3,$26(a0)
		bclr	#1,$2A(a0)
		move.b	#0,$2D(a0)
		move.w	#0,$1A(a0)
		move.w	$18(a0),$1C(a0)

locret_34988:
		rts
; ---------------------------------------------------------------------------

loc_3498A:
		move.b	#$C,$1E(a0)
		move.b	#$18,$1F(a0)
		jsr	(sub_1100E).l
		tst.w	d1
		bpl.s	loc_349AA
		sub.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_349AA:
		jsr	(sub_10D76).l
		tst.w	d1
		bpl.s	loc_349BE
		add.w	d1,$10(a0)
		move.w	#0,$18(a0)

loc_349BE:
		move.b	#$1F,$1E(a0)
		move.b	#$A,$1F(a0)
		jsr	(sub_10EB6).l
		tst.w	d1
		bpl.s	locret_34A0A
		sub.w	d1,$14(a0)
		move.b	d3,d0
		addi.b	#$20,d0
		andi.b	#$40,d0
		bne.s	loc_349EC
		move.w	#0,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_349EC:
		move.b	d3,$26(a0)
		bclr	#1,$2A(a0)
		move.b	#0,$2D(a0)
		move.w	$1A(a0),$1C(a0)
		tst.b	d3
		bpl.s	locret_34A0A
		neg.w	$1C(a0)

locret_34A0A:
		rts
; ---------------------------------------------------------------------------

loc_34A0C:
		move.b	#$C,$1E(a0)
		move.b	#$18,$1F(a0)
		jsr	(sub_10D76).l
		tst.w	d1
		bpl.s	loc_34A3C
		add.w	d1,$10(a0)
		addi.b	#$30,d3
		cmpi.b	#$60,d3
		bcs.s	loc_34A3C
		move.w	#0,$18(a0)
		move.w	$1A(a0),$1C(a0)

loc_34A3C:
		move.b	#$1F,$1E(a0)
		move.b	#$A,$1F(a0)
		jsr	(sub_10EB6).l
		tst.w	d1
		bpl.s	loc_34A64
		sub.w	d1,$14(a0)
		tst.w	$1A(a0)
		bpl.s	locret_34A62
		move.w	#0,$1A(a0)

locret_34A62:
		rts
; ---------------------------------------------------------------------------

loc_34A64:
		tst.w	$1A(a0)
		bmi.s	locret_34A94
		jsr	(Sonic_CheckFloor).l
		tst.w	d1
		bpl.s	locret_34A94
		add.w	d1,$14(a0)
		move.b	d3,$26(a0)
		bclr	#1,$2A(a0)
		move.b	#0,$2D(a0)
		move.w	#0,$1A(a0)
		move.w	$18(a0),$1C(a0)

locret_34A94:
		rts
; End of function sub_347FC


; =============== S U B R O U T I N E =======================================


sub_34A96:
		move.w	#$600,d6
		move.w	#$C,d5
		move.w	#$80,d4
		btst	#$A,d3
		beq.s	loc_34AAC
		bsr.w	sub_34AEE

loc_34AAC:
		btst	#$B,d3
		beq.s	loc_34AB6
		bsr.w	sub_34B76

loc_34AB6:
		move.w	d3,d0
		andi.w	#$C00,d0
		bne.s	loc_34AE0
		move.w	$1C(a0),d0
		beq.s	loc_34AE0
		bmi.s	loc_34AD4
		sub.w	d5,d0
		bcc.s	loc_34ACE
		move.w	#0,d0

loc_34ACE:
		move.w	d0,$1C(a0)
		bra.s	loc_34AE0
; ---------------------------------------------------------------------------

loc_34AD4:
		add.w	d5,d0
		bcc.s	loc_34ADC
		move.w	#0,d0

loc_34ADC:
		move.w	d0,$1C(a0)

loc_34AE0:
		move.w	$1C(a0),$18(a0)
		move.w	#0,$1A(a0)
		rts
; End of function sub_34A96


; =============== S U B R O U T I N E =======================================


sub_34AEE:
		move.w	$1C(a0),d0
		beq.s	loc_34AF6
		bpl.s	loc_34B28

loc_34AF6:
		bset	#0,$2A(a0)
		bne.s	loc_34B0A
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)

loc_34B0A:
		sub.w	d5,d0
		move.w	d6,d1
		neg.w	d1
		cmp.w	d1,d0
		bgt.s	loc_34B1C
		add.w	d5,d0
		cmp.w	d1,d0
		ble.s	loc_34B1C
		move.w	d1,d0

loc_34B1C:
		move.w	d0,$1C(a0)
		move.b	#0,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_34B28:
		sub.w	d4,d0
		bcc.s	loc_34B30
		move.w	#-$80,d0

loc_34B30:
		move.w	d0,$1C(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#-$40,d0
		bne.s	locret_34B74
		cmpi.w	#$400,d0
		blt.s	locret_34B74
		move.b	#$D,$20(a0)
		bclr	#0,$2A(a0)
		move.w	#sfx_Skid,d0
		jsr	(Play_Sound_2).l
		movea.l	a0,a2
		suba.w	#-$5000,a2
		adda.w	#-$33AC,a2
		move.b	#6,5(a2)
		move.b	#$15,$22(a2)

locret_34B74:
		rts
; End of function sub_34AEE


; =============== S U B R O U T I N E =======================================


sub_34B76:
		move.w	$1C(a0),d0
		bmi.s	loc_34BAA
		bclr	#0,$2A(a0)
		beq.s	loc_34B90
		bclr	#5,$2A(a0)
		move.b	#1,$21(a0)

loc_34B90:
		add.w	d5,d0
		cmp.w	d6,d0
		blt.s	loc_34B9E
		sub.w	d5,d0
		cmp.w	d6,d0
		bge.s	loc_34B9E
		move.w	d6,d0

loc_34B9E:
		move.w	d0,$1C(a0)
		move.b	#0,$20(a0)
		rts
; ---------------------------------------------------------------------------

loc_34BAA:
		add.w	d4,d0
		bcc.s	loc_34BB2
		move.w	#$80,d0

loc_34BB2:
		move.w	d0,$1C(a0)
		move.b	$26(a0),d0
		addi.b	#$20,d0
		andi.b	#-$40,d0
		bne.s	locret_34BF6
		cmpi.w	#-$400,d0
		bgt.s	locret_34BF6
		move.b	#$D,$20(a0)
		bset	#0,$2A(a0)
		move.w	#sfx_Skid,d0
		jsr	(Play_Sound_2).l
		movea.l	a0,a2
		suba.w	#-$5000,a2
		adda.w	#-$33AC,a2
		move.b	#6,5(a2)
		move.b	#$15,$22(a2)

locret_34BF6:
		rts
; End of function sub_34B76


; =============== S U B R O U T I N E =======================================


sub_34BF8:
		tst.w	(Debug_placement_mode).w
		bne.s	locret_34C5A
		tst.b	$34(a0)
		beq.s	locret_34C5A
		lea	(word_34D16).l,a1
		tst.b	(Current_act).w
		beq.s	loc_34C16
		lea	(word_34D88).l,a1

loc_34C16:
		move.w	(a1)+,d6
		move.w	$10(a0),d2
		move.w	$14(a0),d3

loc_34C20:
		move.w	(a1),d0
		sub.w	d2,d0
		addi.w	#$10,d0
		cmpi.w	#$20,d0
		bcc.s	loc_34C52
		move.w	2(a1),d1
		sub.w	d3,d1
		addi.w	#$10,d1
		cmpi.w	#$20,d1
		bcc.s	loc_34C52
		move.w	$1C(a0),d0
		move.b	4(a1),d2
		andi.b	#$7F,d2
		beq.s	loc_34C4E
		neg.w	d0

loc_34C4E:
		tst.w	d0
		bpl.s	loc_34C5C

loc_34C52:
		adda.w	#$10,a1
		dbf	d6,loc_34C20

locret_34C5A:
		rts
; ---------------------------------------------------------------------------

loc_34C5C:
		move.b	#1,$35(a0)
		move.w	4(a1),$3E(a0)
		addq.w	#6,a1
		move.w	(a1)+,d4
		move.w	d4,$30(a0)
		move.w	(a1)+,d5
		move.w	d5,d0
		move.b	$3F(a0),d1
		andi.b	#$7F,d1
		beq.s	loc_34C80
		sub.w	(a1),d0

loc_34C80:
		move.w	d0,$32(a0)
		move.l	a1,$36(a0)
		move.w	$1C(a0),d2
		bpl.s	loc_34C90
		neg.w	d2

loc_34C90:
		tst.w	d2
		bne.s	loc_34C98
		move.w	#$800,d2

loc_34C98:
		moveq	#0,d0
		move.w	d2,d3
		move.w	d4,d0
		sub.w	$10(a0),d0
		bge.s	loc_34CA8
		neg.w	d0
		neg.w	d2

loc_34CA8:
		moveq	#0,d1
		move.w	d5,d1
		sub.w	$14(a0),d1
		bge.s	loc_34CB6
		neg.w	d1
		neg.w	d3

loc_34CB6:
		cmp.w	d0,d1
		bcs.s	loc_34CE8
		moveq	#0,d1
		move.w	d5,d1
		sub.w	$14(a0),d1
		swap	d1
		divs.w	d3,d1
		moveq	#0,d0
		move.w	d4,d0
		sub.w	$10(a0),d0
		beq.s	loc_34CD4
		swap	d0
		divs.w	d1,d0

loc_34CD4:
		move.w	d0,$18(a0)
		move.w	d3,$1A(a0)
		tst.w	d1
		bpl.s	loc_34CE2
		neg.w	d1

loc_34CE2:
		move.w	d1,$3A(a0)
		rts
; ---------------------------------------------------------------------------

loc_34CE8:
		moveq	#0,d0
		move.w	d4,d0
		sub.w	$10(a0),d0
		swap	d0
		divs.w	d2,d0
		moveq	#0,d1
		move.w	d5,d1
		sub.w	$14(a0),d1
		beq.s	loc_34D02
		swap	d1
		divs.w	d0,d1

loc_34D02:
		move.w	d1,$1A(a0)
		move.w	d2,$18(a0)
		tst.w	d0
		bpl.s	loc_34D10
		neg.w	d0

loc_34D10:
		move.w	d0,$3A(a0)
		rts
; End of function sub_34BF8

; ---------------------------------------------------------------------------
word_34D16:	dc.w 6
		dc.w  $1BA0,   $C6,     0, $1C40
		dc.w    $E6,  $280, $1CE0,  $385
		dc.w  $1BA0,  $3C4, $8001, $1C40
		dc.w   $3A6,  $2C0, $1BA0,   $C6
		dc.w  $1CE0,  $385,  $101, $1C40
		dc.w   $366,  $280, $1BA0,   $C6
		dc.w  $2720,  $846,     0, $27C0
		dc.w   $866,  $200, $2860,  $A86
		dc.w  $2860,  $846,  $180, $27C0
		dc.w   $866,  $200, $2720,  $A86
		dc.w  $2720,  $A86,   $81, $27C0
		dc.w   $A66,  $200, $2860,  $846
		dc.w  $2860,  $A86,  $101, $27C0
		dc.w   $A66,  $200, $2720,  $846
word_34D88:	dc.w 6
		dc.w  $1760,  $546, $8180, $16C0
		dc.w   $566,  $140, $1760,  $6C5
		dc.w  $1760,  $6C5, $8181, $16C0
		dc.w   $6A6,  $140, $1760,  $546
		dc.w  $1620,  $6C4,   $81, $16C0
		dc.w   $6C6,  $180, $1760,  $546
		dc.w  $2AA0,  $444, $8000, $2B40
		dc.w   $466,  $2C0, $2AA0,  $744
		dc.w  $2BE0,  $446, $8180, $2B40
		dc.w   $466,  $2C0, $2BE0,  $746
		dc.w  $2AA0,  $744, $8001, $2B40
		dc.w   $726,  $2C0, $2AA0,  $444
		dc.w  $2BE0,  $746, $8181, $2B40
		dc.w   $726,  $2C0, $2BE0,  $446

; =============== S U B R O U T I N E =======================================


sub_34DFA:
		cmpi.b	#2,$35(a0)
		beq.s	loc_34E72
		subq.b	#1,$3A(a0)
		bpl.s	loc_34E3A
		cmpi.b	#3,$35(a0)
		beq.s	loc_34E60
		move.w	#0,$3C(a0)
		move.b	#2,$35(a0)
		movea.l	$36(a0),a1
		move.w	(a1)+,d0
		move.w	d0,$2E(a0)
		move.b	$3F(a0),d1
		andi.b	#$7F,d1
		beq.s	loc_34E34
		move.w	d0,$3C(a0)

loc_34E34:
		move.l	a1,$36(a0)
		bra.s	loc_34E72
; ---------------------------------------------------------------------------

loc_34E3A:
		move.l	$10(a0),d2
		move.l	$14(a0),d3
		move.w	$18(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d2
		move.w	$1A(a0),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,d3
		move.l	d2,$10(a0)
		move.l	d3,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_34E60:
		tst.b	$3E(a0)
		bpl.s	loc_34E6A
		neg.w	$1C(a0)

loc_34E6A:
		move.b	#0,$35(a0)
		rts
; ---------------------------------------------------------------------------

loc_34E72:
		move.w	$3C(a0),d0
		add.w	d0,d0
		tst.b	$3F(a0)
		bpl.s	loc_34E80
		neg.w	d0

loc_34E80:
		jsr	(GetSineCosine).l
		muls.w	#$5800,d0
		swap	d0
		add.w	$30(a0),d0
		move.w	d0,$10(a0)
		move.w	$32(a0),d0
		add.w	$3C(a0),d0
		move.w	d0,$14(a0)
		moveq	#2,d1
		move.w	$1C(a0),d0
		bpl.s	loc_34EAA
		neg.w	d0

loc_34EAA:
		cmpi.w	#$C00,d0
		bne.s	loc_34EB2
		moveq	#3,d1

loc_34EB2:
		move.b	$3F(a0),d0
		andi.b	#$7F,d0
		beq.s	loc_34EC4
		sub.w	d1,$3C(a0)
		bgt.s	locret_34EF4
		bra.s	loc_34ED2
; ---------------------------------------------------------------------------

loc_34EC4:
		add.w	d1,$3C(a0)
		move.w	$2E(a0),d0
		cmp.w	$3C(a0),d0
		bhi.s	locret_34EF4

loc_34ED2:
		move.b	#3,$35(a0)
		movea.l	$36(a0),a2
		move.w	(a2)+,d4
		move.w	(a2)+,d5
		move.w	$1C(a0),d2
		bpl.s	loc_34EE8
		neg.w	d2

loc_34EE8:
		tst.w	d2
		bne.s	loc_34EF0
		move.w	#$800,d2

loc_34EF0:
		bra.w	loc_34C98
; ---------------------------------------------------------------------------

locret_34EF4:
		rts
; End of function sub_34DFA

; ---------------------------------------------------------------------------
Map_MGZTopPlatform:
		include "Levels/MGZ/Misc Object Data/Map - Top Platform.asm"
; ---------------------------------------------------------------------------

Obj_MGZTopLauncher:
		move.l	#Map_MGZTopPlatform,$C(a0)
		move.w	#$43FF,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	#$C,7(a0)
		move.b	#8,6(a0)
		move.b	#2,$22(a0)
		move.w	#$10,$30(a0)
		move.w	#$C00,d0
		btst	#0,$2A(a0)
		beq.s	loc_34F60
		neg.w	d0

loc_34F60:
		move.w	d0,$18(a0)
		jsr	(Create_New_Sprite3).l
		bne.s	loc_34F7C
		move.l	#Obj_MGZTopPlatform,(a1)
		move.b	#1,$2C(a1)
		move.w	a1,$3E(a0)

loc_34F7C:
		move.l	#loc_34F82,(a0)

loc_34F82:
		movea.w	$3E(a0),a1
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addq.w	#4,$24(a1)
		cmpi.b	#4,$40(a1)
		beq.s	loc_34FA6
		cmpi.b	#4,$42(a1)
		bne.s	loc_34FAC

loc_34FA6:
		move.l	#loc_34FB2,(a0)

loc_34FAC:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_34FB2:
		movea.w	$3E(a0),a1
		addq.w	#1,$14(a0)
		subq.w	#1,$30(a0)
		bne.s	loc_34FCC
		move.l	#loc_35006,(a0)
		move.w	#$7F00,$10(a0)

loc_34FCC:
		cmpi.w	#4,$30(a0)
		beq.s	loc_34FE8
		bcs.s	loc_35006
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addq.w	#4,$24(a1)
		bra.s	loc_35006
; ---------------------------------------------------------------------------

loc_34FE8:
		move.w	$18(a0),d1
		move.w	d1,$18(a1)
		move.w	d1,$1C(a1)
		move.b	#1,$34(a1)
		bclr	#1,$2A(a1)
		move.b	#0,$2C(a1)

loc_35006:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_CGZBladePlatform:
		move.l	#Map_CGZBladePlatform,$C(a0)
		move.w	#$6300,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$20,7(a0)
		move.b	#8,6(a0)
		move.w	$14(a0),$32(a0)
		bset	#7,$2A(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_350A2
		move.l	#loc_35122,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		subi.w	#$10,$10(a1)
		addi.w	#$C,$14(a1)
		move.b	#-$5A,$28(a1)
		move.w	a0,$3E(a1)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_350A2
		move.l	#loc_35138,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addi.w	#$10,$10(a1)
		addi.w	#$14,$14(a1)
		move.b	#-$5A,$28(a1)
		move.w	a0,$3E(a1)

loc_350A2:
		move.l	#loc_350A8,(a0)

loc_350A8:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_350D4
		move.w	#$80,d1
		cmpi.b	#$18,d0
		bne.s	loc_350C0
		move.w	#$100,d1

loc_350C0:
		add.w	d1,$36(a0)
		cmpi.w	#-$8000,$36(a0)
		bcs.s	loc_350D2
		move.w	#-$8000,$36(a0)

loc_350D2:
		bra.s	loc_350E8
; ---------------------------------------------------------------------------

loc_350D4:
		tst.w	$36(a0)
		beq.s	loc_350E8
		subi.w	#$100,$36(a0)
		bcc.s	loc_350E8
		move.w	#0,$36(a0)

loc_350E8:
		move.w	$32(a0),d0
		add.b	$36(a0),d0
		move.w	d0,$14(a0)
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#7,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		addq.b	#1,$22(a0)
		andi.b	#3,$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_35122:
		movea.w	$3E(a0),a1
		move.w	$14(a1),$14(a0)
		addi.w	#8,$14(a0)
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------

loc_35138:
		movea.w	$3E(a0),a1
		move.w	$14(a1),$14(a0)
		addi.w	#$10,$14(a0)
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------
Map_CGZBladePlatform:
		include "Levels/CGZ/Misc Object Data/Map - Blade Platform.asm"
; ---------------------------------------------------------------------------

Obj_BPZElephantBlock:
		move.l	#Map_BPZElephantBlock,$C(a0)
		move.w	#$300,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$30,7(a0)
		move.b	#$10,6(a0)
		move.w	$10(a0),$30(a0)
		bset	#6,4(a0)
		move.w	#1,$16(a0)
		lea	$18(a0),a2
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		move.w	#0,(a2)+
		move.b	$2C(a0),d0
		lsl.w	#8,d0
		move.w	d0,$38(a0)
		bset	#7,$2A(a0)
		btst	#0,$2A(a0)
		beq.s	loc_351FE
		move.w	d0,$34(a0)
		move.b	#1,$3A(a0)
		move.l	#loc_3525C,(a0)
		bra.w	loc_3525C
; ---------------------------------------------------------------------------

loc_351FE:
		move.l	#loc_35204,(a0)

loc_35204:
		bsr.w	sub_352B4
		lea	$18(a0),a2
		move.w	$30(a0),d0
		move.b	$34(a0),d1
		ext.w	d1
		sub.w	d1,d0
		move.w	d0,(a2)
		move.w	$30(a0),d0
		asr.w	#1,d1
		sub.w	d1,d0
		move.w	d0,$10(a0)
		addq.w	#8,d1
		move.b	d1,7(a0)
		move.w	#0,4(a2)
		cmpi.w	#$20,d1
		bcs.s	loc_3523E
		move.w	#1,4(a2)

loc_3523E:
		addi.w	#7,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_3525C:
		bsr.w	sub_352B4
		lea	$18(a0),a2
		move.w	$30(a0),d0
		move.b	$34(a0),d1
		ext.w	d1
		add.w	d1,d0
		move.w	d0,(a2)
		move.w	$30(a0),d0
		asr.w	#1,d1
		add.w	d1,d0
		move.w	d0,$10(a0)
		addq.w	#8,d1
		move.b	d1,7(a0)
		move.w	#0,4(a2)
		cmpi.w	#$20,d1
		bcs.s	loc_35296
		move.w	#1,4(a2)

loc_35296:
		addi.w	#7,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_352B4:
		tst.b	$3A(a0)
		bne.s	loc_352D6
		move.w	$38(a0),d0
		addi.w	#$80,$34(a0)
		cmp.w	$34(a0),d0
		bhi.s	loc_352D4
		move.w	d0,$34(a0)
		move.b	#1,$3A(a0)

loc_352D4:
		bra.s	locret_352EA
; ---------------------------------------------------------------------------

loc_352D6:
		subi.w	#$80,$34(a0)
		bhi.s	locret_352EA
		move.w	#0,$34(a0)
		move.b	#0,$3A(a0)

locret_352EA:
		rts
; End of function sub_352B4

; ---------------------------------------------------------------------------
Map_BPZElephantBlock:
		include "Levels/BPZ/Misc Object Data/Map - Elephant Block.asm"
; ---------------------------------------------------------------------------

Obj_BPZBalloon:
		move.l	#Map_BPZBalloon,$C(a0)
		move.w	#$6300,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.b	#-$29,$28(a0)
		move.l	#loc_35344,(a0)

loc_35344:
		tst.b	$29(a0)
		beq.w	loc_353DE
		lea	(Player_1).w,a1
		bclr	#0,$29(a0)
		beq.s	loc_3535A
		bsr.s	sub_35370

loc_3535A:
		lea	(Player_2).w,a1
		bclr	#1,$29(a0)
		beq.s	loc_35368
		bsr.s	sub_35370

loc_35368:
		clr.b	$29(a0)
		bra.w	loc_353DE

; =============== S U B R O U T I N E =======================================


sub_35370:
		move.w	$10(a0),d1
		move.w	$14(a0),d2
		sub.w	$10(a1),d1
		sub.w	$14(a1),d2
		jsr	(GetArcTan).l
		move.b	d0,d1
		subi.b	#$20,d1
		cmpi.b	#$40,d1
		bcc.s	loc_353A0
		move.w	#-$900,$1A(a1)
		move.b	#1,$20(a0)
		bra.s	loc_353C0
; ---------------------------------------------------------------------------

loc_353A0:
		jsr	(GetSineCosine).l
		muls.w	#-$480,d1
		asr.l	#8,d1
		move.w	d1,$18(a1)
		muls.w	#-$480,d0
		asr.l	#8,d0
		move.w	d0,$1A(a1)
		move.b	#2,$20(a0)

loc_353C0:
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		bclr	#5,$2A(a1)
		clr.b	$40(a1)
		moveq	#signextendB(sfx_SmallBumpers),d0
		jmp	(Play_Sound_2).l
; End of function sub_35370

; ---------------------------------------------------------------------------

loc_353DE:
		lea	(Ani_BPZBalloon).l,a1
		jsr	(Animate_Sprite).l
		cmpi.b	#5,$22(a0)
		bcs.s	loc_35400
		cmpi.b	#7,$22(a0)
		bcc.s	loc_35400
		jsr	(Add_SpriteToCollisionResponseList).l

loc_35400:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Ani_BPZBalloon:	include "Levels/BPZ/Misc Object Data/Anim - Balloon.asm"
Map_BPZBalloon:	include "Levels/BPZ/Misc Object Data/Map - Balloon.asm"
; ---------------------------------------------------------------------------

Obj_DPZDisolvingSandBar:
		move.l	#Map_DPZDissolvingSandBar,$C(a0)
		move.w	#$4280,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$200,8(a0)
		move.b	#$20,7(a0)
		move.b	#$10,6(a0)
		tst.b	$2C(a0)
		beq.s	loc_3550C
		move.l	#Map_DPZDissolvingSandBar2,$C(a0)
		move.b	#$30,7(a0)
		move.b	#$F,$3D(a0)

loc_3550C:
		move.b	$3D(a0),$3C(a0)
		bset	#7,$2A(a0)
		move.l	#loc_3551E,(a0)

loc_3551E:
		tst.b	$20(a0)
		bne.s	loc_35558
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_35534
		move.b	#1,$3A(a0)

loc_35534:
		tst.b	$3A(a0)
		beq.s	loc_35558
		subq.b	#1,$3C(a0)
		bpl.s	loc_35558
		tst.b	$20(a0)
		bne.s	loc_35558
		move.b	$3D(a0),$3C(a0)
		move.b	#0,$3A(a0)
		move.b	#1,$20(a0)

loc_35558:
		lea	(Ani_DPZDissolvingSandBar).l,a1
		jsr	(Animate_Sprite).l
		moveq	#0,d0
		move.b	$22(a0),d0
		move.b	byte_355B8(pc,d0.w),d3
		bne.s	loc_355A2
		lea	(Player_1).w,a1
		bclr	#3,$2A(a0)
		beq.s	loc_35588
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)

loc_35588:
		lea	(Player_2).w,a1
		bclr	#4,$2A(a0)
		beq.s	loc_355A0
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)

loc_355A0:
		bra.s	loc_355B2
; ---------------------------------------------------------------------------

loc_355A2:
		moveq	#0,d1
		move.b	7(a0),d1
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l

loc_355B2:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
byte_355B8:	dc.b  $11, $11, $11, $11, $10,  $F,  $E,  $D,  $C,  $B,  $A,   9,   8,   7,   6,   5,   4,   3,   2,   1
		dc.b    0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
Ani_DPZDissolvingSandBar:
		include "Levels/DPZ/Misc Object Data/Anim - Dissolving Sand Bar.asm"
Map_DPZDissolvingSandBar:
		include "Levels/DPZ/Misc Object Data/Map - Dissolving Sand Bar.asm"
; ---------------------------------------------------------------------------

Obj_DPZButton:
		move.l	#Map_DPZButton,$C(a0)
		move.w	#$4280,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#$C,7(a0)
		move.b	#8,6(a0)
		move.l	#loc_35860,(a0)

loc_35860:
		move.w	#$C,d1
		move.w	#2,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		lea	(Normal_palette_line_3+$1C).w,a2
		move.b	#0,$22(a0)
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		lea	(a3,d0.w),a3
		moveq	#0,d3
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_358A2
		bclr	d3,(a3)
		move.l	#$2E000A,(a2)
		bra.s	loc_358DC
; ---------------------------------------------------------------------------

loc_358A2:
		tst.b	(a3)
		bne.s	loc_358B4
		moveq	#signextendB(sfx_Switch),d0
		jsr	(Play_Sound_2).l
		move.b	#0,$24(a0)

loc_358B4:
		bset	d3,(a3)
		move.b	#1,$22(a0)
		subq.b	#1,$24(a0)
		bpl.s	loc_358DC
		move.b	#3,$24(a0)
		move.w	(a2),d0
		move.l	#$2E000A,(a2)
		cmpi.w	#$2E,d0
		bne.s	loc_358DC
		move.l	#$C2E0A0E,(a2)

loc_358DC:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_DPZButton:	include "Levels/DPZ/Misc Object Data/Map - Button.asm"
; ---------------------------------------------------------------------------

Obj_2PItem:
		move.l	#Map_2PItem,$C(a0)
		move.w	#$3C6,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#8,7(a0)
		move.b	#8,6(a0)
		move.b	#4,$1F(a0)
		move.b	#8,$1E(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		move.b	$2C(a0),$26(a0)
		moveq	#1,d0
		bclr	#0,$2A(a0)
		beq.s	loc_35946
		neg.b	d0

loc_35946:
		move.b	d0,$27(a0)
		move.b	#3,$20(a0)
		move.b	#7,$20(a0)
		move.b	#-$39,$28(a0)
		move.l	#loc_35962,(a0)

loc_35962:
		bsr.s	sub_359CE
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		asl.w	#3,d1
		move.w	d1,d2
		add.w	d1,d1
		add.w	d1,d2
		add.w	d1,d1
		add.w	d2,d1
		asr.w	#8,d1
		add.w	$30(a0),d1
		and.w	(Screen_X_wrap_value).w,d1
		addi.w	#$400,d1
		move.w	d1,$10(a0)
		asl.w	#3,d0
		move.w	d0,d2
		add.w	d0,d0
		add.w	d0,d2
		add.w	d0,d0
		add.w	d2,d0
		asr.w	#8,d0
		add.w	$32(a0),d0
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_359AA
		and.w	(Screen_Y_wrap_value).w,d0

loc_359AA:
		move.w	d0,$14(a0)
		move.b	$27(a0),d0
		add.b	d0,$26(a0)
		lea	(Ani_2PItem).l,a1
		jsr	(Animate_Sprite).l
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_359CE:
		tst.b	$29(a0)
		beq.s	locret_359F4
		lea	(Player_1).w,a2
		bclr	#0,$29(a0)
		beq.s	loc_359E2
		bsr.s	sub_359F6

loc_359E2:
		lea	(Player_2).w,a2
		bclr	#1,$29(a0)
		beq.s	loc_359F0
		bsr.s	sub_359F6

loc_359F0:
		clr.b	$29(a0)

locret_359F4:
		rts
; End of function sub_359CE


; =============== S U B R O U T I N E =======================================


sub_359F6:
		moveq	#0,d0
		move.b	$20(a0),d0
		add.w	d0,d0
		move.w	off_35A08(pc,d0.w),d0
		jsr	off_35A08(pc,d0.w)
		rts
; End of function sub_359F6

; ---------------------------------------------------------------------------
off_35A08:	dc.w loc_35A18-off_35A08
		dc.w loc_35A6A-off_35A08
		dc.w loc_35ABC-off_35A08
		dc.w loc_35B7A-off_35A08
		dc.w loc_35BA4-off_35A08
		dc.w loc_35BE4-off_35A08
		dc.w loc_35C08-off_35A08
		dc.w locret_35C2C-off_35A08
; ---------------------------------------------------------------------------

loc_35A18:
		bset	#2,$2B(a2)
		move.b	#$4B,$36(a2)
		cmpa.w	#Player_1,a2
		bne.s	loc_35A3E
		move.w	#$C00,(Max_speed).w
		move.w	#$18,(Acceleration).w
		move.w	#$80,(Deceleration).w
		bra.s	loc_35A50
; ---------------------------------------------------------------------------

loc_35A3E:
		move.w	#$C00,(Max_speed_P2).w
		move.w	#$18,(Acceleration_P2).w
		move.w	#$80,(Deceleration_P2).w

loc_35A50:
		move.b	#7,$20(a0)
		move.b	#0,$28(a0)
		move.l	#loc_35FAC,d1
		moveq	#9,d2
		bsr.w	sub_35FCA
		rts
; ---------------------------------------------------------------------------

loc_35A6A:
		bset	#2,$2B(a2)
		move.b	#$4B,$36(a2)
		cmpa.w	#Player_1,a2
		bne.s	loc_35A90
		move.w	#$300,(Max_speed).w
		move.w	#8,(Acceleration).w
		move.w	#$20,(Deceleration).w
		bra.s	loc_35AA2
; ---------------------------------------------------------------------------

loc_35A90:
		move.w	#$300,(Max_speed_P2).w
		move.w	#8,(Acceleration_P2).w
		move.w	#$20,(Deceleration_P2).w

loc_35AA2:
		move.b	#7,$20(a0)
		move.b	#0,$28(a0)
		move.l	#loc_35FAC,d1
		moveq	#9,d2
		bsr.w	sub_35FCA
		rts
; ---------------------------------------------------------------------------

loc_35ABC:
		lea	(Player_1).w,a2
		lea	(Player_2).w,a3
		move.b	$2B(a2),d0
		move.b	$2B(a3),$2B(a2)
		move.b	d0,$2B(a3)
		move.b	$36(a2),d0
		move.b	$36(a3),$36(a2)
		move.b	d0,$36(a3)
		move.w	(Max_speed).w,d0
		move.w	(Acceleration).w,d1
		move.w	(Deceleration).w,d2
		move.w	(Max_speed_P2).w,d3
		move.w	(Acceleration_P2).w,d4
		move.w	(Deceleration_P2).w,d5
		move.w	d0,-(sp)
		lea	(Character_Speeds).l,a1
		moveq	#0,d0
		move.b	$38(a2),d0
		lsl.w	#3,d0
		lea	(a1,d0.w),a1
		move.w	(a1)+,(Max_speed).w
		move.w	(a1)+,(Acceleration).w
		move.w	(a1)+,(Deceleration).w
		lea	(Character_Speeds).l,a1
		moveq	#0,d0
		move.b	$38(a3),d0
		lsl.w	#3,d0
		lea	(a1,d0.w),a1
		move.w	(a1)+,(Max_speed_P2).w
		move.w	(a1)+,(Acceleration_P2).w
		move.w	(a1)+,(Deceleration_P2).w
		move.w	(sp)+,d0
		btst	#2,$2B(a2)
		beq.s	loc_35B4C
		move.w	d3,(Max_speed).w
		move.w	d4,(Acceleration).w
		move.w	d5,(Deceleration).w

loc_35B4C:
		btst	#2,$2B(a3)
		beq.s	loc_35B60
		move.w	d0,(Max_speed_P2).w
		move.w	d1,(Acceleration_P2).w
		move.w	d2,(Deceleration_P2).w

loc_35B60:
		move.b	#7,$20(a0)
		move.b	#0,$28(a0)
		move.l	#loc_35FAC,d1
		moveq	#9,d2
		bsr.w	sub_35FCA
		rts
; ---------------------------------------------------------------------------

loc_35B7A:
		move.b	#7,$20(a0)
		move.b	#0,$28(a0)
		move.l	#loc_35FAC,d1
		moveq	#8,d2
		bsr.w	sub_35FCA
		cmpa.w	#Player_1,a2
		bne.s	loc_35B9E
		jmp	(GiveRing).l
; ---------------------------------------------------------------------------

loc_35B9E:
		jmp	(loc_18DCC).l
; ---------------------------------------------------------------------------

loc_35BA4:
		move.b	#7,$20(a0)
		clr.b	$28(a0)
		clr.b	$29(a0)
		lea	(Breathing_bubbles).w,a1
		tst.l	(a1)
		moveq	#$2C,d0

loc_35BBA:
		move.w	(a0,d0.w),(a1,d0.w)
		subq.w	#2,d0
		bcc.s	loc_35BBA
		move.l	#loc_35C2E,(a1)
		move.b	#4,$20(a1)
		move.w	$46(a2),$46(a1)
		tst.w	$A(a2)
		bpl.s	locret_35BE2
		ori.w	#-$8000,$A(a1)

locret_35BE2:
		rts
; ---------------------------------------------------------------------------

loc_35BE4:
		move.b	#7,$20(a0)
		clr.b	$28(a0)
		clr.b	$29(a0)
		move.l	#loc_35C48,d1
		moveq	#5,d2
		bsr.w	sub_35FCA
		bne.s	locret_35C06
		move.w	$46(a2),$46(a1)

locret_35C06:
		rts
; ---------------------------------------------------------------------------

loc_35C08:
		move.b	#7,$20(a0)
		clr.b	$28(a0)
		clr.b	$29(a0)
		move.l	#loc_35C50,d1
		moveq	#6,d2
		bsr.w	sub_35FCA
		bne.s	locret_35C2A
		move.w	$46(a2),$46(a1)

locret_35C2A:
		rts
; ---------------------------------------------------------------------------

locret_35C2C:
		rts
; ---------------------------------------------------------------------------

loc_35C2E:
		move.w	#-$400,$1C(a0)
		move.b	#0,$26(a0)
		move.b	#0,$2A(a0)
		move.l	#loc_35E3C,d2
		bra.s	loc_35C56
; ---------------------------------------------------------------------------

loc_35C48:
		move.l	#loc_35D54,d2
		bra.s	loc_35C56
; ---------------------------------------------------------------------------

loc_35C50:
		move.l	#loc_35C9E,d2

loc_35C56:
		move.l	d2,-(sp)
		jsr	(MoveSprite).l
		jsr	(ObjCheckFloorDist).l
		move.l	(sp)+,d2
		tst.w	d1
		bpl.s	loc_35C76
		add.w	d1,$14(a0)
		move.l	d2,(a0)
		move.b	#-$39,$28(a0)

loc_35C76:
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_35C86
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)

loc_35C86:
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$60,d0
		cmp.w	$14(a0),d0
		bge.s	loc_35C9A
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_35C9A:
		bra.w	loc_35FAC
; ---------------------------------------------------------------------------

loc_35C9E:
		tst.b	$29(a0)
		beq.s	loc_35CC4
		lea	(Player_1).w,a2
		bclr	#0,$29(a0)
		beq.s	loc_35CB2
		bsr.s	sub_35CF0

loc_35CB2:
		lea	(Player_2).w,a2
		bclr	#1,$29(a0)
		beq.s	loc_35CC0
		bsr.s	sub_35CF0

loc_35CC0:
		clr.b	$29(a0)

loc_35CC4:
		lea	(Ani_2PItem).l,a1
		jsr	(Animate_Sprite).l
		tst.b	5(a0)
		beq.s	loc_35CDC
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_35CDC:
		cmpi.b	#9,$20(a0)
		beq.s	loc_35CEA
		jsr	(Add_SpriteToCollisionResponseList).l

loc_35CEA:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_35CF0:
		move.w	$46(a2),d0
		cmp.w	$46(a0),d0
		beq.s	loc_35CFC
		rts
; ---------------------------------------------------------------------------

loc_35CFC:
		move.b	#$A,$20(a0)
		move.w	#-$A00,$1A(a2)
		bset	#1,$2A(a2)
		bclr	#4,$2A(a2)
		bclr	#5,$2A(a2)
		clr.b	$40(a2)
		move.w	#1,$1C(a2)
		move.b	#1,$27(a2)
		move.b	#0,$20(a2)
		move.b	#0,$30(a2)
		move.b	#4,$31(a2)
		btst	#0,$2A(a2)
		beq.s	loc_35D4C
		neg.b	$27(a2)
		neg.w	$1C(a2)

loc_35D4C:
		moveq	#signextendB(sfx_SmallBumpers),d0
		jmp	(Play_Sound_2).l
; End of function sub_35CF0

; ---------------------------------------------------------------------------

loc_35D54:
		tst.b	$29(a0)
		beq.s	loc_35D7A
		lea	(Player_1).w,a2
		bclr	#0,$29(a0)
		beq.s	loc_35D68
		bsr.s	sub_35DDE

loc_35D68:
		lea	(Player_2).w,a2
		bclr	#1,$29(a0)
		beq.s	loc_35D76
		bsr.s	sub_35DDE

loc_35D76:
		clr.b	$29(a0)

loc_35D7A:
		lea	(Ani_2PItem).l,a1
		jsr	(Animate_Sprite).l
		tst.b	$3C(a0)
		beq.s	loc_35DC6
		movea.w	$3E(a0),a1
		subq.b	#1,$3C(a0)
		beq.s	loc_35DBA
		move.w	#$20,d1
		move.w	$1C(a1),d0
		bpl.s	loc_35DAE
		add.w	d1,$1C(a1)
		bcc.s	loc_35DD2
		move.w	#0,$1C(a1)
		bra.s	loc_35DBA
; ---------------------------------------------------------------------------

loc_35DAE:
		sub.w	d1,$1C(a1)
		bcc.s	loc_35DD2
		move.w	#0,$1C(a1)

loc_35DBA:
		move.w	#5,$32(a1)
		andi.b	#$7F,$2B(a1)

loc_35DC6:
		tst.b	5(a0)
		beq.s	loc_35DD2
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_35DD2:
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_35DDE:
		move.w	$46(a2),d0
		cmp.w	$46(a0),d0
		bne.s	locret_35E3A
		tst.b	$2B(a2)
		bmi.s	locret_35E3A
		btst	#1,$2A(a2)
		bne.s	locret_35E3A
		tst.w	$1C(a2)
		beq.s	locret_35E3A
		move.b	#9,$20(a0)
		move.b	#0,$28(a0)
		move.w	#$200,d1
		move.w	$1C(a2),d0
		bpl.s	loc_35E16
		neg.w	d0
		neg.w	d1

loc_35E16:
		cmpi.w	#$200,d0
		bcc.s	loc_35E20
		add.w	d1,$1C(a2)

loc_35E20:
		asl	$1C(a2)
		move.b	#$1B,$20(a2)
		ori.b	#-$80,$2B(a2)
		move.w	a2,$3E(a0)
		move.b	#$3C,$3C(a0)

locret_35E3A:
		rts
; End of function sub_35DDE

; ---------------------------------------------------------------------------

loc_35E3C:
		tst.b	$29(a0)
		beq.s	loc_35E62
		lea	(Player_1).w,a2
		bclr	#0,$29(a0)
		beq.s	loc_35E50
		bsr.s	sub_35E98

loc_35E50:
		lea	(Player_2).w,a2
		bclr	#1,$29(a0)
		beq.s	loc_35E5E
		bsr.s	sub_35E98

loc_35E5E:
		clr.b	$29(a0)

loc_35E62:
		bsr.w	sub_35EB8
		move.b	$26(a0),d0
		addi.b	#$10,d0
		lsr.b	#5,d0
		addi.b	#$11,d0
		move.b	d0,$22(a0)
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$60,d0
		cmp.w	$14(a0),d0
		bge.s	loc_35E8C
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_35E8C:
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_35E98:
		move.w	$46(a2),d0
		cmp.w	$46(a0),d0
		beq.s	loc_35EA4
		rts
; ---------------------------------------------------------------------------

loc_35EA4:
		move.l	#loc_35FAC,(a0)
		move.b	#$B,$20(a0)
		movea.l	a2,a1
		jmp	(sub_228EC).l
; End of function sub_35E98


; =============== S U B R O U T I N E =======================================


sub_35EB8:
		btst	#1,$2A(a0)
		bne.s	loc_35F22
		move.b	$26(a0),d0
		jsr	(GetSineCosine).l
		muls.w	$1C(a0),d1
		asr.l	#8,d1
		move.w	d1,$18(a0)
		muls.w	$1C(a0),d0
		asr.l	#8,d0
		move.w	d0,$1A(a0)
		jsr	(MoveSprite2).l
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)
		move.w	(Screen_X_wrap_value).w,d0
		and.w	d0,$10(a0)
		addi.w	#$400,$10(a0)
		jsr	(Player_AnglePos).l
		move.b	$26(a0),d0
		bne.s	locret_35F20
		jsr	(sub_110C8).l
		tst.w	d1
		bpl.s	locret_35F20
		sub.w	d1,$10(a0)
		move.l	#loc_35FAC,(a0)
		move.b	#$B,$20(a0)

locret_35F20:
		rts
; ---------------------------------------------------------------------------

loc_35F22:
		subi.w	#$10,$18(a0)
		cmpi.w	#-$400,$18(a0)
		bgt.s	loc_35F36
		move.w	#-$400,$18(a0)

loc_35F36:
		jsr	(MoveSprite).l
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)
		move.w	(Screen_X_wrap_value).w,d0
		and.w	d0,$10(a0)
		addi.w	#$400,$10(a0)
		jsr	(ChkFloorEdge).l
		tst.w	d1
		bpl.s	loc_35F6E
		add.w	d1,$14(a0)
		bclr	#1,$2A(a0)
		move.b	#0,$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_35F6E:
		move.b	$26(a0),d0
		beq.s	loc_35F88
		bpl.s	loc_35F7E
		addq.b	#2,d0
		bcc.s	loc_35F84
		moveq	#0,d0
		bra.s	loc_35F84
; ---------------------------------------------------------------------------

loc_35F7E:
		subq.b	#2,d0
		bcc.s	loc_35F84
		moveq	#0,d0

loc_35F84:
		move.b	d0,$26(a0)

loc_35F88:
		move.b	$26(a0),d0
		bne.s	locret_35FAA
		jsr	(sub_110C8).l
		tst.w	d1
		bpl.s	locret_35FAA
		sub.w	d1,$10(a0)
		move.l	#loc_35FAC,(a0)
		move.b	#$B,$20(a0)
		rts
; ---------------------------------------------------------------------------

locret_35FAA:
		rts
; ---------------------------------------------------------------------------

loc_35FAC:
		lea	(Ani_2PItem).l,a1
		jsr	(Animate_Sprite).l
		tst.b	5(a0)
		beq.s	loc_35FC4
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_35FC4:
		jmp	(Draw_Sprite).l
; End of function sub_35EB8


; =============== S U B R O U T I N E =======================================


sub_35FCA:
		jsr	(Create_New_Sprite3).l
		bne.w	locret_35FE8
		moveq	#$2C,d0

loc_35FD6:
		move.w	(a0,d0.w),(a1,d0.w)
		subq.w	#2,d0
		bcc.s	loc_35FD6
		move.l	d1,(a1)
		move.b	d2,$20(a1)
		moveq	#0,d0

locret_35FE8:
		rts
; End of function sub_35FCA

; ---------------------------------------------------------------------------
Ani_2PItem:	include "General/2P Zone/Anim - Item.asm"
Map_2PItem:	include "General/2P Zone/Map - Item.asm"
; ---------------------------------------------------------------------------

Obj_2PGoalMarker:
		move.l	#Map_2PGoalMarker,$C(a0)
		move.w	#$6BC,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#8,7(a0)
		move.b	#$20,6(a0)
		move.w	$10(a0),$30(a0)
		move.w	$14(a0),$32(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#3,d0
		subi.w	#$14,d0
		move.w	d0,$38(a0)
		move.b	#5,(Competition_total_laps).w
		clr.w	(Competition_current_lap).w
		clr.w	(Events_bg+$14).w
		clr.b	(Update_HUD_timer).w
		clr.l	(Timer).w
		clr.b	(_unkFEC7).w
		clr.l	(Timer_P2).w
		clr.w	(Ring_count).w
		clr.w	(Ring_count_P2).w
		jsr	sub_364EC(pc)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_36276
		move.l	#loc_37454,(a1)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_36276
		move.l	#loc_37454,(a1)
		move.b	#1,$2C(a1)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_36276
		move.l	#loc_365CC,(a1)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_36276
		move.l	#loc_365CC,(a1)
		move.b	#1,$2C(a1)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_36276
		move.l	#loc_366CC,(a1)
		move.w	#$120,$10(a1)
		move.w	#$B8,$14(a1)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_36276
		move.l	#loc_37220,(a1)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_36276
		move.l	#loc_37292,(a1)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_36276
		move.l	#locret_3780C,(a1)

loc_36276:
		move.l	#loc_3627C,(a0)

loc_3627C:
		move.w	$10(a0),d1
		lea	$34(a0),a2
		lea	(Player_1).w,a1
		lea	(Competition_current_lap).w,a3
		lea	(_unkF74A).w,a4
		lea	(Timer).w,a5
		lea	($FF7828).l,a6
		bsr.w	sub_3638E
		lea	(Player_2).w,a1
		lea	(Competition_current_lap_2P).w,a3
		lea	(_unkF74B).w,a4
		lea	(Timer_P2).w,a5
		lea	($FF7840).l,a6
		bsr.w	sub_3638E
		lea	(Ani_2PGoalMarker).l,a1
		jsr	(Animate_Sprite).l
		move.w	$36(a0),(Competition_lap_count).w
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_362D0:
		subq.w	#1,$3C(a0)
		bne.w	loc_3637C
		lea	(Player_1).w,a1
		move.w	(Saved_X_pos).w,$10(a1)
		move.w	(Saved_Y_pos).w,$14(a1)
		move.w	(Saved_art_tile).w,$A(a1)
		move.w	(Saved_solid_bits).w,$46(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.w	#0,$1C(a1)
		move.b	#2,$2A(a1)
		move.w	#0,$32(a1)
		tst.b	(Not_ghost_flag).w
		beq.s	loc_36352
		lea	(Player_2).w,a1
		move.w	(Saved2_X_pos).w,$10(a1)
		move.w	(Saved2_Y_pos).w,$14(a1)
		move.w	(Saved2_art_tile).w,$A(a1)
		move.w	(Saved2_solid_bits).w,$46(a1)
		move.w	#0,$18(a1)
		move.w	#0,$1A(a1)
		move.w	#0,$1C(a1)
		move.b	#2,$2A(a1)
		move.w	#0,$32(a1)

loc_36352:
		clr.w	(Competition_current_lap).w
		clr.b	(Update_HUD_timer).w
		clr.l	(Timer).w
		clr.b	(_unkFEC7).w
		clr.l	(Timer_P2).w
		clr.b	(Ctrl_1_locked).w
		clr.b	(Ctrl_2_locked).w
		jsr	sub_364EC(pc)
		clr.w	(Events_bg+$14).w
		move.l	#loc_3627C,(a0)

loc_3637C:
		lea	(Ani_2PGoalMarker).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_3638E:
		tst.b	(a4)
		bne.w	loc_3648E
		tst.b	(a2)+
		bne.w	loc_3649E
		cmp.w	$10(a1),d1
		bhi.w	locret_364EA
		move.b	#1,-1(a2)
		move.w	$14(a0),d2
		move.w	d2,d3
		sub.w	$38(a0),d2
		addi.w	#$14,d3
		move.w	$14(a1),d4
		cmp.w	d2,d4
		blt.w	locret_364EA
		cmp.w	d3,d4
		bge.w	locret_364EA
		move.w	$10(a1),d2
		sub.w	d1,d2
		bcc.s	loc_363D0
		neg.w	d2

loc_363D0:
		cmpi.w	#$20,d2
		bcc.w	locret_364EA
		cmpi.b	#$C,$46(a1)
		bne.s	locret_3642C
		move.b	(a3),d0
		beq.s	loc_3642E
		cmp.b	1(a2),d0
		bls.s	loc_3642A
		move.b	d0,1(a2)
		subq.b	#1,d0
		bmi.s	loc_3640E
		cmpi.b	#5,d0
		bcc.s	loc_3640E
		ext.w	d0
		lsl.w	#2,d0
		move.l	(a6,d0.w),d5
		move.l	$14(a6),d6
		jsr	sub_36508(pc)
		move.l	d6,$14(a6)
		clr.l	(a5)

loc_3640E:
		sub.w	$14(a0),d4
		neg.w	d4
		cmpi.w	#$14,d4
		bge.s	loc_3642A
		move.w	$3A(a0),d0
		andi.w	#$F,d0
		bsr.w	sub_3653C
		addq.w	#2,$3A(a0)

loc_3642A:
		addq.b	#1,(a3)

locret_3642C:
		rts
; ---------------------------------------------------------------------------

loc_3642E:
		tst.b	1(a2)
		bne.s	loc_3642A
		tst.b	(Update_HUD_timer).w
		bne.s	loc_3642A
		move.b	#1,(Ctrl_1_locked).w
		move.b	#1,(Ctrl_2_locked).w
		move.w	#0,(Ctrl_1_logical).w
		move.w	#0,(Ctrl_2_logical).w
		move.l	#loc_362D0,(a0)
		move.w	#$78,$3C(a0)
		st	(Events_bg+$14).w
		movea.l	a1,a6
		jsr	(Create_New_Sprite3).l
		bne.s	locret_3648C
		move.l	#loc_36A4A,(a1)
		move.b	#8,4(a1)
		cmpa.w	#Player_1,a6
		beq.s	loc_36484
		eori.b	#$18,4(a1)

loc_36484:
		moveq	#signextendB(sfx_Error),d0
		jmp	(Play_Sound_2).l
; ---------------------------------------------------------------------------

locret_3648C:
		rts
; ---------------------------------------------------------------------------

loc_3648E:
		clr.b	(a4)
		move.b	#0,(a2)+
		subq.b	#1,(a3)
		bcc.s	locret_3649C
		move.b	#0,(a3)

locret_3649C:
		rts
; ---------------------------------------------------------------------------

loc_3649E:
		cmp.w	$10(a1),d1
		bls.w	locret_364EA
		move.b	#0,-1(a2)
		move.w	$14(a0),d2
		move.w	d2,d3
		sub.w	$38(a0),d2
		addi.w	#$14,d3
		move.w	$14(a1),d4
		cmp.w	d2,d4
		blt.w	locret_364EA
		cmp.w	d3,d4
		bge.w	locret_364EA
		move.w	$10(a1),d2
		sub.w	d1,d2
		bcc.s	loc_364D4
		neg.w	d2

loc_364D4:
		cmpi.w	#$20,d2
		bcc.s	locret_364EA
		cmpi.b	#$C,$46(a1)
		bne.s	locret_364EA
		subq.b	#1,(a3)
		bcc.s	locret_364EA
		move.b	#0,(a3)

locret_364EA:
		rts
; End of function sub_3638E


; =============== S U B R O U T I N E =======================================


sub_364EC:
		lea	($FF7828).l,a1
		moveq	#$B,d0

loc_364F4:
		clr.l	(a1)+
		dbf	d0,loc_364F4
		clr.l	(Competition_time_record).w
		clr.l	(Competition_time_record_P2).w
		st	(Competition_time_attack_new_top_record).w
		rts
; End of function sub_364EC


; =============== S U B R O U T I N E =======================================


sub_36508:
		add.b	d5,d6
		moveq	#0,d3
		cmpi.b	#$64,d6
		bcs.s	loc_36518
		subi.b	#$64,d6
		moveq	#1,d3

loc_36518:
		ror.l	#8,d5
		ror.l	#8,d6
		add.b	d3,d6
		add.b	d5,d6
		moveq	#0,d3
		cmpi.b	#$3C,d6
		bcs.s	loc_3652E
		subi.b	#$3C,d6
		moveq	#1,d3

loc_3652E:
		ror.l	#8,d5
		ror.l	#8,d6
		add.b	d3,d6
		add.b	d5,d6
		swap	d5
		swap	d6
		rts
; End of function sub_36508


; =============== S U B R O U T I N E =======================================


sub_3653C:
		tst.b	(Competition_mode_monitors).w
		bne.s	locret_3656A
		lea	(byte_3656C).l,a4
		adda.w	d0,a4
		lea	(Dynamic_object_RAM).w,a1
		moveq	#(Dynamic_object_RAM_end-Dynamic_object_RAM)/object_size-1,d0

loc_36550:
		lea	next_object(a1),a1
		cmpi.l	#loc_35962,(a1)
		bne.s	loc_36566
		move.b	(a4)+,$20(a1)
		move.b	#-$39,$28(a1)

loc_36566:
		dbf	d0,loc_36550

locret_3656A:
		rts
; End of function sub_3653C

; ---------------------------------------------------------------------------
byte_3656C:	dc.b    0,   1,   2,   3,   4,   5,   6,   0,   1,   2,   3,   4,   5,   6,   2,   3,   0,   1,   2,   3
		dc.b    4,   5,   6,   0
Ani_2PGoalMarker:
		include "General/2P Zone/Anim - Goal Marker.asm"
Map_2PGoalMarker:
		include "General/2P Zone/Map - Goal Marker.asm"
; ---------------------------------------------------------------------------

loc_365CC:
		move.l	#Map_2PLapNumbers,$C(a0)
		move.w	#-$7900,$A(a0)
		move.w	#0,8(a0)
		move.b	#8,7(a0)
		move.b	#$C,6(a0)
		move.w	#$190,$10(a0)
		move.w	#$98,$14(a0)
		tst.b	$2C(a0)
		beq.s	loc_36618
		tst.b	(Not_ghost_flag).w
		bne.s	loc_3660A
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3660A:
		bset	#4,4(a0)
		move.l	#loc_36646,(a0)
		bra.s	loc_36646
; ---------------------------------------------------------------------------

loc_36618:
		bset	#3,4(a0)
		move.l	#loc_36624,(a0)

loc_36624:
		move.b	(Competition_current_lap).w,d0
		cmp.b	(Competition_total_laps).w,d0
		ble.s	loc_36632
		move.b	(Competition_total_laps).w,d0

loc_36632:
		subi.b	#$A,d0
		bcc.s	loc_36632
		addi.b	#$A,d0
		move.b	d0,$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_36646:
		move.b	(Competition_current_lap_2P).w,d0
		cmp.b	(Competition_total_laps).w,d0
		ble.s	loc_36654
		move.b	(Competition_total_laps).w,d0

loc_36654:
		subi.b	#$A,d0
		bcc.s	loc_36654
		addi.b	#$A,d0
		move.b	d0,$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_2PLapNumbers:
		include "General/2P Zone/Map - Lap Numbers.asm"
; ---------------------------------------------------------------------------

loc_366CC:
		move.l	#Map_2PNeonDisplay,$C(a0)
		move.w	#-$78AA,$A(a0)
		move.w	#0,8(a0)
		move.b	#-$80,7(a0)
		move.b	#$28,6(a0)
		move.l	#loc_366FE,(a0)
		tst.b	(Not_ghost_flag).w
		bne.s	loc_366FE
		bset	#3,4(a0)

loc_366FE:
		lea	(Ani_2PNeonDisplay).l,a1
		jsr	(Animate_Sprite).l
		cmpi.b	#1,$20(a0)
		bne.s	loc_36740
		cmpi.b	#5,$24(a0)
		bne.s	loc_36740
		moveq	#signextendB(sfx_LaunchReady),d0
		move.b	$23(a0),d1
		cmpi.b	#1,d1
		beq.s	loc_3673A
		cmpi.b	#$B,d1
		beq.s	loc_3673A
		cmpi.b	#$15,d1
		beq.s	loc_3673A
		moveq	#signextendB(sfx_LaunchGo),d0
		cmpi.b	#$1F,d1
		bne.s	loc_36740

loc_3673A:
		jsr	(Play_Sound_2).l

loc_36740:
		bsr.s	sub_36750
		tst.w	(Events_bg+$14).w
		bne.s	locret_3674E
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_3674E:
		rts

; =============== S U B R O U T I N E =======================================


sub_36750:
		move.b	$3A(a0),d0
		bne.s	loc_36786
		tst.b	(Ctrl_1_locked).w
		beq.s	loc_3676A
		move.w	#1,$20(a0)
		move.b	#$A,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_3676A:
		cmpi.b	#3,$22(a0)
		bne.s	locret_36784
		move.b	#1,(Update_HUD_timer).w
		move.b	#1,(_unkFEC7).w
		move.b	#1,$3A(a0)

locret_36784:
		rts
; ---------------------------------------------------------------------------

loc_36786:
		subq.b	#1,d0
		bne.w	loc_36862
		move.l	#$93B63,d0
		cmp.l	(Competition_time_record).w,d0
		bls.s	loc_3679E
		cmp.l	(Competition_time_record_P2).w,d0
		bhi.s	loc_367AA

loc_3679E:
		move.b	#2,$3A(a0)
		move.w	#$78,(Events_bg+$16).w

loc_367AA:
		move.b	(Competition_total_laps).w,d0
		cmp.b	(Competition_current_lap).w,d0
		bcc.s	loc_36824
		move.b	#3,$20(a0)
		tst.b	(Not_ghost_flag).w
		beq.s	loc_367C4
		addq.b	#1,$20(a0)

loc_367C4:
		bset	#3,4(a0)
		move.b	#2,$3A(a0)
		move.w	#$78,(Events_bg+$16).w
		tst.b	(Not_ghost_flag).w
		beq.s	loc_367E8
		tst.b	(Competition_mode_type).w
		bne.s	loc_367E8
		move.w	#$168,(Events_bg+$16).w

loc_367E8:
		move.b	#-$80,(Update_HUD_timer).w
		jsr	sub_369C2(pc)
		moveq	#signextendB(sfx_Goal),d0
		jsr	(Play_Sound_2).l
		move.b	(Competition_total_laps).w,d0
		cmp.b	(Competition_current_lap_2P).w,d0
		bcc.s	loc_3681E
		move.b	#6,$20(a0)
		bclr	#3,4(a0)
		move.w	#$78,(Events_bg+$16).w
		move.b	#-$80,(_unkFEC7).w
		rts
; ---------------------------------------------------------------------------

loc_3681E:
		bsr.w	sub_36998
		rts
; ---------------------------------------------------------------------------

loc_36824:
		cmp.b	(Competition_current_lap_2P).w,d0
		bcc.s	locret_36860
		move.b	#4,$20(a0)
		bset	#4,4(a0)
		move.b	#2,$3A(a0)
		move.w	#$78,(Events_bg+$16).w
		tst.b	(Competition_mode_type).w
		bne.s	loc_3684E
		move.w	#$168,(Events_bg+$16).w

loc_3684E:
		move.b	#-$80,(_unkFEC7).w
		bsr.w	sub_36998
		moveq	#signextendB(sfx_Goal),d0
		jsr	(Play_Sound_2).l

locret_36860:
		rts
; ---------------------------------------------------------------------------

loc_36862:
		subq.b	#1,d0
		bne.w	loc_36936
		tst.b	(Competition_mode_type).w
		beq.s	loc_3689A
		tst.b	(Update_HUD_timer).w
		bpl.s	locret_36898
		tst.b	(Not_ghost_flag).w
		beq.s	loc_36880
		tst.b	(_unkFEC7).w
		bpl.s	locret_36898

loc_36880:
		subq.w	#1,(Events_bg+$16).w
		bpl.s	locret_36898
		move.b	#$40,(Game_mode).w
		tst.b	(Competition_mode_type).w
		bpl.s	locret_36898
		move.b	#$50,(Game_mode).w

locret_36898:
		rts
; ---------------------------------------------------------------------------

loc_3689A:
		move.b	(Competition_current_lap).w,d0
		tst.b	(Update_HUD_timer).w
		bpl.s	loc_368AE
		move.b	(Competition_current_lap_2P).w,d0
		tst.b	(Update_HUD_timer).w
		bmi.s	loc_368B4

loc_368AE:
		cmp.b	(Competition_total_laps).w,d0
		beq.s	loc_368BA

loc_368B4:
		subq.w	#1,(Events_bg+$16).w
		bmi.s	loc_368CE

loc_368BA:
		cmpi.l	#$93B63,(Competition_time_record).w
		bcc.s	loc_368CE
		cmpi.l	#$93B63,(Competition_time_record_P2).w
		bcs.s	locret_3692A

loc_368CE:
		moveq	#0,d0
		move.b	(Current_zone).w,d0
		subi.b	#$E,d0
		move.b	byte_36931(pc,d0.w),d0
		lea	($FF7800).l,a1
		move.l	(Competition_time_record).w,(a1,d0.w)
		move.l	(Competition_time_record_P2).w,$14(a1,d0.w)
		tst.b	(Update_HUD_timer).w
		bmi.s	loc_368FC
		move.l	#$93B63,(a1,d0.w)

loc_368FC:
		tst.b	(_unkFEC7).w
		bmi.s	loc_3690A
		move.l	#$93B63,$14(a1,d0.w)

loc_3690A:
		move.b	(Current_zone).w,d0
		subi.b	#$E,d0
		move.b	byte_3692C(pc,d0.w),d0
		beq.s	loc_36924
		move.b	d0,(Current_zone).w
		move.b	#1,(Restart_level_flag).w
		rts
; ---------------------------------------------------------------------------

loc_36924:
		move.b	#$44,(Game_mode).w

locret_3692A:
		rts
; ---------------------------------------------------------------------------
byte_3692C:	dc.b $F
		dc.b $11
		dc.b $12
		dc.b $10
		dc.b 0
byte_36931:	dc.b 0
		dc.b 4
		dc.b $C
		dc.b 8
		dc.b $10
; ---------------------------------------------------------------------------

loc_36936:
		move.b	(Competition_total_laps).w,d0
		cmp.b	(Competition_current_lap).w,d0
		bcc.s	loc_36966
		tst.b	(Update_HUD_timer).w
		bmi.s	loc_36966
		move.b	#5,$20(a0)
		bset	#3,4(a0)
		move.b	#-$80,(Update_HUD_timer).w
		move.w	#$78,(Events_bg+$16).w
		moveq	#signextendB(sfx_Goal),d0
		jsr	(Play_Sound_2).l

loc_36966:
		move.b	(Competition_total_laps).w,d0
		cmp.b	(Competition_current_lap_2P).w,d0
		bcc.s	locret_36996
		tst.b	(_unkFEC7).w
		bmi.s	locret_36996
		move.b	#5,$20(a0)
		bset	#4,4(a0)
		move.b	#-$80,(_unkFEC7).w
		move.w	#$78,(Events_bg+$16).w
		moveq	#signextendB(sfx_Goal),d0
		jsr	(Play_Sound_2).l

locret_36996:
		rts
; End of function sub_36750


; =============== S U B R O U T I N E =======================================


sub_36998:
		jsr	(Create_New_Sprite3).l
		bne.w	locret_369C0
		move.l	#loc_366CC,(a1)
		move.w	#$120,$10(a1)
		move.w	#$B8,$14(a1)
		move.b	#2,$20(a1)
		move.b	#3,$3A(a1)

locret_369C0:
		rts
; End of function sub_36998


; =============== S U B R O U T I N E =======================================


sub_369C2:
		tst.b	(Competition_mode_type).w
		bpl.w	locret_36A48
		moveq	#0,d0
		move.b	(Current_zone).w,d0
		subi.w	#$E,d0
		lsl.w	#4,d0
		lea	(Competition_saved_data).w,a1
		adda.w	d0,a1
		move.l	(Competition_time_record).w,d0
		cmp.l	(a1),d0
		bcc.s	loc_36A08
		move.b	$D(a1),$E(a1)
		move.b	$C(a1),$D(a1)
		move.b	(P1_character).w,$C(a1)
		move.l	4(a1),8(a1)
		move.l	(a1),4(a1)
		move.l	d0,(a1)
		clr.b	(Competition_time_attack_new_top_record).w
		bra.s	loc_36A42
; ---------------------------------------------------------------------------

loc_36A08:
		cmp.l	4(a1),d0
		bcc.s	loc_36A2C
		move.b	$D(a1),$E(a1)
		move.b	(P1_character).w,$D(a1)
		move.l	4(a1),8(a1)
		move.l	d0,4(a1)
		move.b	#1,(Competition_time_attack_new_top_record).w
		bra.s	loc_36A42
; ---------------------------------------------------------------------------

loc_36A2C:
		cmp.l	8(a1),d0
		bcc.s	locret_36A48
		move.b	(P1_character).w,$E(a1)
		move.l	d0,8(a1)
		move.b	#2,(Competition_time_attack_new_top_record).w

loc_36A42:
		jsr	(Write_SaveGeneral).l

locret_36A48:
		rts
; End of function sub_369C2

; ---------------------------------------------------------------------------

loc_36A4A:
		move.l	#Map_2PNeonDisplay,$C(a0)
		move.w	#-$78AA,$A(a0)
		move.w	#0,8(a0)
		move.b	#-$80,7(a0)
		move.b	#$28,6(a0)
		move.w	#$120,$10(a0)
		move.w	#$B8,$14(a0)
		move.b	#7,$20(a0)
		move.l	#loc_36A82,(a0)

loc_36A82:
		tst.w	(Events_bg+$14).w
		bne.s	loc_36A8E
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_36A8E:
		lea	(Ani_2PNeonDisplay).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Ani_2PNeonDisplay:
		include "General/2P Zone/Anim - Neon Display.asm"
Map_2PNeonDisplay:
		include "General/2P Zone/Map - Neon Display.asm"
; ---------------------------------------------------------------------------

loc_37220:
		move.l	#$FF7000,$C(a0)
		move.w	#-$7A00,$A(a0)
		move.w	#0,8(a0)
		move.b	#$40,7(a0)
		move.b	#$10,6(a0)
		move.w	#$C8,$10(a0)
		move.w	#$90,$14(a0)
		bset	#3,4(a0)
		lea	(word_37420).l,a1
		lea	($FF7000).l,a2
		move.w	#$19,d0

loc_37262:
		move.w	(a1)+,(a2)+
		dbf	d0,loc_37262
		move.l	#loc_3726E,(a0)

loc_3726E:
		lea	(Score).w,a1
		lea	($FF700A).l,a2
		lea	(Timer_minute).w,a3
		moveq	#0,d1
		move.b	(Competition_lap_count).w,d1
		lea	(Update_HUD_timer).w,a4
		lea	(Competition_time_record).w,a5
		lea	($FF7828).l,a6
		bra.s	loc_3730E
; ---------------------------------------------------------------------------

loc_37292:
		tst.b	(Not_ghost_flag).w
		bne.s	loc_3729E
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3729E:
		move.l	#$FF7080,$C(a0)
		move.w	#-$7A00,$A(a0)
		move.w	#0,8(a0)
		move.b	#$40,7(a0)
		move.b	#$10,6(a0)
		move.w	#$C8,$10(a0)
		move.w	#$90,$14(a0)
		bset	#4,4(a0)
		lea	(word_37420).l,a1
		lea	($FF7080).l,a2
		move.w	#$19,d0

loc_372E0:
		move.w	(a1)+,(a2)+
		dbf	d0,loc_372E0
		move.l	#loc_372EC,(a0)

loc_372EC:
		lea	(Score_P2).w,a1
		lea	($FF708A).l,a2
		lea	(Timer_minute_P2).w,a3
		moveq	#0,d1
		move.b	(Competition_lap_count_2P).w,d1
		lea	(_unkFEC7).w,a4
		lea	(Competition_time_record_P2).w,a5
		lea	($FF7840).l,a6

loc_3730E:
		tst.b	(a4)
		beq.s	loc_37342
		bmi.s	loc_37342
		cmpi.l	#$93B63,(a5)
		bcs.s	loc_37328
		move.b	#-$80,(a4)
		move.l	#$93B63,(a5)
		bra.s	loc_37362
; ---------------------------------------------------------------------------

loc_37328:
		addq.b	#1,-(a1)
		cmpi.b	#$3C,(a1)
		bcs.s	loc_37342
		move.b	#0,(a1)
		addq.b	#1,-(a1)
		cmpi.b	#$3C,(a1)
		bcs.s	loc_37342
		move.b	#0,(a1)
		addq.b	#1,-(a1)

loc_37342:
		move.l	-1(a3),d6
		jsr	(sub_9F48).l
		cmpi.w	#5,d1
		bcc.s	loc_37362
		lsl.w	#2,d1
		move.l	d6,(a6,d1.w)
		move.l	$14(a6),d5
		jsr	sub_36508(pc)
		move.l	d6,(a5)

loc_37362:
		addq.w	#1,a5
		lea	word_373BC(pc),a1
		moveq	#0,d0
		move.b	(a5)+,d0
		lsl.w	#2,d0
		move.l	(a1,d0.w),(a2)+
		addq.w	#8,a2
		moveq	#0,d0
		move.b	(a5)+,d0
		moveq	#0,d2

loc_3737A:
		subi.w	#$A,d0
		bcs.s	loc_37384
		addq.w	#4,d2
		bra.s	loc_3737A
; ---------------------------------------------------------------------------

loc_37384:
		addi.w	#$A,d0
		move.l	(a1,d2.w),(a2)+
		addq.w	#2,a2
		lsl.w	#2,d0
		move.l	(a1,d0.w),(a2)+
		addq.w	#8,a2
		moveq	#0,d0
		move.b	(a5)+,d0
		moveq	#0,d2

loc_3739C:
		subi.w	#$A,d0
		bcs.s	loc_373A6
		addq.w	#4,d2
		bra.s	loc_3739C
; ---------------------------------------------------------------------------

loc_373A6:
		addi.w	#$A,d0
		move.l	(a1,d2.w),(a2)+
		addq.w	#2,a2
		lsl.w	#2,d0
		move.l	(a1,d0.w),(a2)+
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
word_373BC:	dc.w  $F805,     8
		dc.w  $F801,    $C
		dc.w  $F805,    $E
		dc.w  $F805,   $12
		dc.w  $F805,   $16
		dc.w  $F805,   $1A
		dc.w  $F805,   $1E
		dc.w  $F805,   $22
		dc.w  $F805,   $26
		dc.w  $F805,   $2A
byte_373E4:	dc.b    0,   1,   3,   5,   6,   8,  $A,  $B,  $D,  $F, $10, $12, $14, $15, $17, $19, $1A, $1C, $1E, $1F
		dc.b  $21, $23, $24, $26, $28, $29, $2B, $2D, $2E, $30, $32, $33, $35, $37, $38, $3A, $3C, $3D, $3F, $41
		dc.b  $42, $44, $46, $47, $49, $4B, $4C, $4E, $50, $51, $53, $55, $56, $58, $5A, $5B, $5D, $5F, $60, $62
word_37420:	dc.w 2
		dc.w 8
		dc.w $F80D
		dc.w 0
		dc.w $FFC0
		dc.w $F805
		dc.w 8
		dc.w $FFE8
		dc.w $F000
		dc.w $2E
		dc.w $FFF4
		dc.w $F805
		dc.w 8
		dc.w $FFFC
		dc.w $F805
		dc.w 8
		dc.w 8
		dc.w $F000
		dc.w $2F
		dc.w $14
		dc.w $F805
		dc.w 8
		dc.w $1C
		dc.w $F805
		dc.w 8
		dc.w $28
; ---------------------------------------------------------------------------

loc_37454:
		move.l	#Map_2PItemIcon,$C(a0)
		move.w	#-$78B0,$A(a0)
		move.w	#0,8(a0)
		move.b	#$10,7(a0)
		move.b	#$10,6(a0)
		move.w	#$120,$10(a0)
		move.w	#$E0,$14(a0)
		tst.b	$2C(a0)
		beq.s	loc_374A0
		tst.b	(Not_ghost_flag).w
		bne.s	loc_37492
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_37492:
		bset	#4,4(a0)
		move.l	#loc_374D4,(a0)
		bra.s	loc_374D4
; ---------------------------------------------------------------------------

loc_374A0:
		bset	#3,4(a0)
		move.l	#loc_374AC,(a0)

loc_374AC:
		moveq	#0,d0
		tst.w	(Ring_count).w
		beq.s	loc_374B6
		moveq	#3,d0

loc_374B6:
		btst	#2,(Player_1+status_secondary).w
		beq.s	loc_374CA
		moveq	#1,d0
		cmpi.w	#$C00,(Max_speed).w
		beq.s	loc_374CA
		moveq	#2,d0

loc_374CA:
		move.b	d0,$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_374D4:
		moveq	#0,d0
		tst.w	(Ring_count_P2).w
		beq.s	loc_374DE
		moveq	#3,d0

loc_374DE:
		btst	#2,(Player_2+status_secondary).w
		beq.s	loc_374F2
		moveq	#1,d0
		cmpi.w	#$C00,(Max_speed_P2).w
		beq.s	loc_374F2
		moveq	#2,d0

loc_374F2:
		move.b	d0,$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_2PItemIcon:	include "General/2P Zone/Map - Item Icon.asm"
; ---------------------------------------------------------------------------
		move.l	#Map_2PPosition,$C(a0)
		move.w	#-$78A2,$A(a0)
		move.w	#0,8(a0)
		move.b	#4,7(a0)
		move.b	#4,6(a0)
		tst.b	$2C(a0)
		beq.s	loc_375D6
		tst.b	(Not_ghost_flag).w
		bne.s	loc_375B0
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_375B0:
		move.w	#$90,$10(a0)
		move.w	#$84,$14(a0)
		move.w	(Player_2+x_pos).w,$30(a0)
		bset	#4,4(a0)
		move.b	#2,$22(a0)
		move.l	#loc_3764E,(a0)
		bra.s	loc_3764E
; ---------------------------------------------------------------------------

loc_375D6:
		move.w	#$90,$10(a0)
		move.w	#$E8,$14(a0)
		move.w	(Player_1+x_pos).w,$30(a0)
		bset	#3,4(a0)
		move.b	#1,$22(a0)
		move.l	#loc_375FA,(a0)

loc_375FA:
		move.w	(Player_1+x_pos).w,d0
		move.w	(Saved_X_pos).w,d1

loc_37602:
		tst.w	(Events_bg+$14).w
		beq.s	loc_37612
		move.w	#0,$34(a0)
		move.w	d1,$30(a0)

loc_37612:
		move.w	d0,d1
		sub.w	$30(a0),d0
		beq.s	loc_3763A
		bcc.s	loc_37628
		cmpi.w	#-$200,d0
		bge.s	loc_37632
		addi.w	#$400,d0
		bra.s	loc_37632
; ---------------------------------------------------------------------------

loc_37628:
		cmpi.w	#$200,d0
		blt.s	loc_37632
		subi.w	#$400,d0

loc_37632:
		add.w	d0,$34(a0)
		move.w	d1,$30(a0)

loc_3763A:
		move.w	$34(a0),d0
		asr.w	#6,d0
		addi.w	#$90,d0
		move.w	d0,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_3764E:
		move.w	(Player_2+x_pos).w,d0
		move.w	(Saved2_X_pos).w,d1
		bra.s	loc_37602
; ---------------------------------------------------------------------------
Map_2PPosition:	include "General/2P Zone/Map - Position Icons (Unused).asm"
; ---------------------------------------------------------------------------

Obj_EMZDripper:
		move.l	#Map_EMZDripper,$C(a0)
		move.w	#$6300,$A(a0)
		move.b	#4,4(a0)
		move.w	#$280,8(a0)
		move.b	#8,7(a0)
		move.b	#8,6(a0)
		move.b	#4,$1F(a0)
		move.b	#4,$1E(a0)
		btst	#0,$2A(a0)
		beq.s	loc_376DC
		move.w	#-$3D00,$A(a0)
		move.b	#3,$22(a0)
		move.l	#Draw_Sprite,(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_376DC:
		move.l	#loc_376E2,(a0)

loc_376E2:
		move.b	(Level_frame_counter+1).w,d0
		add.b	$2C(a0),d0
		andi.b	#$7F,d0
		bne.s	loc_3771A
		jsr	(Create_New_Sprite3).l
		bne.w	loc_3771A
		moveq	#$2C,d0

loc_376FC:
		move.w	(a0,d0.w),(a1,d0.w)
		subq.w	#2,d0
		bcc.s	loc_376FC
		move.l	#loc_37720,(a1)
		move.w	#$4300,$A(a1)
		move.b	#1,$22(a1)
		moveq	#0,d0

loc_3771A:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_37720:
		jsr	(MoveSprite2).l
		addi.w	#8,$1A(a0)
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_3775A
		move.l	#loc_377C6,(a0)
		move.w	#$100,$18(a0)
		neg.w	$1A(a0)
		asr	$1A(a0)
		asr	$1A(a0)
		move.b	#2,$22(a0)
		bsr.s	sub_37784
		bsr.s	sub_37784
		bsr.s	sub_37784

loc_3775A:
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_3776A
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)

loc_3776A:
		move.w	(Camera_max_Y_pos).w,d0
		addi.w	#$60,d0
		cmp.w	$14(a0),d0
		bge.s	loc_3777E
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3777E:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_37784:
		jsr	(Create_New_Sprite3).l
		bne.w	locret_377C4
		moveq	#$2C,d0

loc_37790:
		move.w	(a0,d0.w),(a1,d0.w)
		subq.w	#2,d0
		bcc.s	loc_37790
		jsr	(Random_Number).l
		move.w	d0,d1
		andi.w	#$1FF,d0
		subi.w	#$100,d0
		move.w	d0,$18(a1)
		rol.w	#4,d1
		andi.w	#$F,d1
		addi.w	#$1A,d1
		move.b	d1,$3C(a1)
		subi.w	#$10,$1A(a0)
		moveq	#0,d0

locret_377C4:
		rts
; End of function sub_37784

; ---------------------------------------------------------------------------

loc_377C6:
		jsr	(MoveSprite2).l
		addi.w	#8,$1A(a0)
		subq.b	#1,$3C(a0)
		bne.s	loc_377DE
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_377DE:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Map_EMZDripper:	include "Levels/EMZ/Misc Object Data/Map - Dripper.asm"
; ---------------------------------------------------------------------------

locret_3780C:
		rts
; ---------------------------------------------------------------------------

Obj_WaterDrop:
		move.l	#Map_HCZWaterDrop,$C(a0)
		move.w	#$235C,$A(a0)
		ori.b	#4,4(a0)
		move.w	#0,8(a0)
		move.b	#8,7(a0)
		move.b	#8,6(a0)
		move.b	#8,$1F(a0)
		move.b	#7,$1E(a0)
		move.b	#6,$22(a0)
		move.l	#loc_3784C,(a0)

loc_3784C:
		subq.w	#1,$30(a0)
		bpl.s	loc_37888
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#2,d0
		move.w	d0,$30(a0)
		tst.b	4(a0)
		bpl.s	loc_37888
		jsr	(Create_New_Sprite3).l
		bne.w	loc_37888
		moveq	#$2C,d0

loc_37870:
		move.w	(a0,d0.w),(a1,d0.w)
		subq.w	#2,d0
		bcc.s	loc_37870
		move.l	#loc_3788E,(a1)
		move.b	#-$39,$28(a1)
		moveq	#0,d0

loc_37888:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_3788E:
		tst.b	5(a0)
		beq.s	loc_378C8
		jsr	(MoveSprite2).l
		addi.w	#8,$1A(a0)
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_378C8
		add.w	d1,$14(a0)
		clr.w	$1A(a0)
		move.w	#$101,$20(a0)
		move.l	#loc_378C8,(a0)
		move.b	#1,$24(a0)
		clr.b	$23(a0)

loc_378C8:
		lea	(Ani_HCZWaterDrop).l,a1
		jsr	(Animate_Sprite).l
		cmpi.b	#4,5(a0)
		bne.s	loc_378E2
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_378E2:
		tst.b	$29(a0)
		beq.s	loc_37908
		lea	(Player_1).w,a2
		bclr	#0,$29(a0)
		beq.s	loc_378F6
		bsr.s	sub_37914

loc_378F6:
		lea	(Player_2).w,a2
		bclr	#1,$29(a0)
		beq.s	loc_37904
		bsr.s	sub_37914

loc_37904:
		clr.b	$29(a0)

loc_37908:
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_37914:
		cmpi.b	#5,$20(a2)
		bne.s	loc_37922
		move.b	#0,$21(a2)

loc_37922:
		move.b	#1,$20(a0)
		move.l	#loc_378C8,(a0)
		move.b	#0,$28(a0)
		move.b	#2,5(a0)
		rts
; End of function sub_37914

; ---------------------------------------------------------------------------
Ani_HCZWaterDrop:
		include "Levels/HCZ/Misc Object Data/Anim - Water Drop.asm"
Map_HCZWaterDrop:
		include "Levels/HCZ/Misc Object Data/Map - Water Drop.asm"
; ---------------------------------------------------------------------------

Obj_HCZWaterSplash:
		tst.b	$2C(a0)
		beq.s	loc_37A0A
		move.l	#Map_HCZWaterSplash2,$C(a0)
		move.w	#$36E,$A(a0)
		tst.b	(Current_act).w
		beq.s	loc_379B4
		move.w	#$344,$A(a0)

loc_379B4:
		ori.b	#4,4(a0)
		move.w	#$300,8(a0)
		move.b	#-$60,7(a0)
		move.b	#-$80,6(a0)
		move.b	#-1,$31(a0)
		move.b	#0,$2A(a0)
		bset	#6,4(a0)
		move.w	#2,$16(a0)
		lea	$18(a0),a2
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		move.w	#5,(a2)+
		move.w	$10(a0),(a2)+
		move.w	$14(a0),(a2)+
		move.w	#$505,(a2)+
		move.l	#loc_37A8A,(a0)
		bra.w	loc_37A8A
; ---------------------------------------------------------------------------

loc_37A0A:
		move.l	#Map_HCZWaterSplash,$C(a0)
		move.w	#$43B2,$A(a0)
		ori.b	#4,4(a0)
		move.w	#$300,8(a0)
		move.b	#$28,7(a0)
		move.b	#$20,6(a0)
		move.b	#-1,$30(a0)
		move.l	#loc_37A3C,(a0)

loc_37A3C:
		subq.b	#1,$24(a0)
		bpl.s	loc_37A52
		move.b	#7,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#3,$22(a0)

loc_37A52:
		tst.b	4(a0)
		bpl.s	loc_37A84
		moveq	#0,d1
		move.b	$22(a0),d1
		cmp.b	$30(a0),d1
		beq.s	loc_37A84
		move.b	d1,$30(a0)
		lsl.w	#8,d1
		move.w	d1,d0
		add.w	d0,d0
		add.w	d0,d1
		addi.l	#ArtUnc_HCZWaterSplash,d1
		move.w	#$7640,d2
		move.w	#$180,d3
		jsr	(Add_To_DMA_Queue).l

loc_37A84:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_37A8A:
		move.w	(Player_1+x_pos).w,$10(a0)
		move.w	(Water_level).w,$14(a0)
		bsr.s	sub_37B0C
		tst.b	$2A(a0)
		beq.s	loc_37AD0
		move.b	(Level_frame_counter+1).w,d0
		addq.b	#2,d0
		andi.b	#$F,d0
		bne.s	loc_37AB2
		moveq	#signextendB(sfx_WaterSkid),d0
		jsr	(Play_Sound_2).l

loc_37AB2:
		subq.b	#1,$24(a0)
		bpl.s	loc_37AD0
		move.b	#2,$24(a0)
		addq.b	#1,$30(a0)
		cmpi.b	#5,$30(a0)
		bcs.s	loc_37AD0
		move.b	#0,$30(a0)

loc_37AD0:
		moveq	#0,d1
		move.b	$30(a0),d1
		cmp.b	$31(a0),d1
		beq.s	loc_37B06
		move.b	d1,$31(a0)
		lsl.w	#7,d1
		move.w	d1,d0
		add.w	d0,d0
		add.w	d0,d1
		addi.l	#ArtUnc_HCZWaterSplash2,d1
		move.w	#$6DC0,d2
		tst.b	(Current_act).w
		beq.s	loc_37AFC
		move.w	#$6880,d2

loc_37AFC:
		move.w	#$C0,d3
		jsr	(Add_To_DMA_Queue).l

loc_37B06:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_37B0C:
		lea	(Player_1).w,a1
		lea	$18(a0),a2
		moveq	#3,d6
		move.w	(Ctrl_1_logical).w,d5
		bsr.s	sub_37B56
		bclr	#0,4(a0)
		btst	#0,$2A(a1)
		beq.s	loc_37B30
		bset	#0,4(a0)

loc_37B30:
		lea	(Player_2).w,a1
		lea	$1E(a0),a2
		moveq	#4,d6
		move.w	(Ctrl_2_logical).w,d5
		bsr.s	sub_37B56
		move.b	4(a0),d0
		add.b	$2A(a1),d0
		andi.b	#1,d0
		beq.s	locret_37B54
		move.b	#5,5(a2)

locret_37B54:
		rts
; End of function sub_37B0C


; =============== S U B R O U T I N E =======================================


sub_37B56:
		btst	d6,$2A(a0)
		bne.s	loc_37BAA
		tst.w	$1A(a1)
		bne.s	locret_37BA8
		moveq	#0,d1
		move.b	$1E(a1),d1
		add.w	$14(a1),d1
		addq.w	#1,d1
		cmp.w	(Water_level).w,d1
		bne.s	locret_37BA8
		move.w	$18(a1),d0
		bpl.s	loc_37B7C
		neg.w	d0

loc_37B7C:
		cmpi.w	#$700,d0
		bcs.s	locret_37BA8
		bset	d6,$2A(a0)
		move.w	$10(a1),(a2)
		move.w	(Water_level).w,2(a2)
		move.b	#0,5(a2)
		bclr	#0,$2A(a1)
		tst.w	$18(a1)
		bpl.s	locret_37BA8
		bset	#0,$2A(a1)

locret_37BA8:
		rts
; ---------------------------------------------------------------------------

loc_37BAA:
		move.w	d5,d0
		andi.w	#$70,d0
		bne.s	loc_37C2A
		move.w	(Water_level).w,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		sub.w	d1,d0
		subq.w	#1,d0
		cmp.w	$14(a1),d0
		bhi.s	loc_37C1E
		move.w	$18(a1),d1
		bpl.s	loc_37BCE
		neg.w	d1

loc_37BCE:
		cmpi.w	#$700,d1
		bcs.s	loc_37C1E
		move.w	d0,$14(a1)
		move.w	#0,$1A(a1)
		move.w	$10(a1),(a2)
		move.w	(Water_level).w,2(a2)
		btst	#1,$2A(a1)
		beq.s	locret_37C28
		andi.w	#$C00,d5
		bne.s	locret_37C28
		move.w	#$C,d1
		move.w	$18(a1),d0
		beq.s	loc_37C1E
		bmi.s	loc_37C10
		sub.w	d1,d0
		bcc.s	loc_37C0A
		move.w	#0,d0

loc_37C0A:
		move.w	d0,$18(a1)
		bra.s	locret_37C28
; ---------------------------------------------------------------------------

loc_37C10:
		add.w	d1,d0
		bcc.s	loc_37C18
		move.w	#0,d0

loc_37C18:
		move.w	d0,$18(a1)
		bra.s	locret_37C28
; ---------------------------------------------------------------------------

loc_37C1E:
		bclr	d6,$2A(a0)
		move.b	#5,5(a2)

locret_37C28:
		rts
; ---------------------------------------------------------------------------

loc_37C2A:
		bclr	d6,$2A(a0)
		move.b	#5,5(a2)
		move.w	#-$680,$1A(a1)
		bset	#1,$2A(a1)
		move.b	#1,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		rts
; End of function sub_37B56

; ---------------------------------------------------------------------------
Map_HCZWaterSplash:
		include "Levels/HCZ/Misc Object Data/Map - Water Splash.asm"
Map_HCZWaterSplash2:
		include "Levels/HCZ/Misc Object Data/Map - Water Splash 2.asm"
; ---------------------------------------------------------------------------

Obj_TensionBridge:
		move.l	#loc_37DDE,(a0)
		move.l	#Map_TensionBridge,$C(a0)
		move.w	#$4038,$A(a0)
		move.w	#$200,8(a0)
		cmpi.b	#5,(Current_zone).w
		bne.s	loc_37CDC
		move.l	#loc_37E80,(a0)
		move.l	#Map_ICZTensionBridge,$C(a0)
		move.w	#$43B6,$A(a0)
		tst.b	$2C(a0)
		bpl.s	loc_37CDC
		move.l	#loc_37F44,(a0)
		andi.b	#$7F,$2C(a0)

loc_37CDC:
		tst.b	$2C(a0)
		bpl.s	loc_37CEE
		move.l	#loc_37DB4,(a0)
		andi.b	#$7F,$2C(a0)

loc_37CEE:
		move.b	#4,4(a0)
		move.b	#-$80,7(a0)
		move.b	#8,6(a0)
		move.w	$14(a0),d2
		move.w	d2,$3C(a0)
		move.w	$10(a0),d3
		lea	$2C(a0),a2
		moveq	#0,d1
		move.b	(a2),d1
		move.w	d1,d0
		lsr.w	#1,d0
		lsl.w	#4,d0
		sub.w	d0,d3
		swap	d1
		move.w	#8,d1
		bsr.s	sub_37D54
		move.w	$30(a1),d0
		subq.w	#8,d0
		move.w	d0,$10(a1)
		move.l	a1,$30(a0)
		swap	d1
		subq.w	#8,d1
		bls.s	loc_37D50
		move.w	d1,d4
		bsr.s	sub_37D54
		move.l	a1,$34(a0)
		move.w	d4,d0
		add.w	d0,d0
		add.w	d4,d0
		move.w	$18(a1,d0.w),d0
		subq.w	#8,d0
		move.w	d0,$10(a1)

loc_37D50:
		bra.w	loc_37DDE

; =============== S U B R O U T I N E =======================================


sub_37D54:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_37DB2
		move.l	#loc_37E7A,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.l	$C(a0),$C(a1)
		move.w	$A(a0),$A(a1)
		move.b	4(a0),4(a1)
		move.w	8(a0),8(a1)
		bset	#6,4(a1)
		move.b	#$40,7(a1)
		move.b	#8,6(a1)
		move.w	d1,$16(a1)
		subq.b	#1,d1
		lea	$18(a1),a2

loc_37DA2:
		move.w	d3,(a2)+
		move.w	d2,(a2)+
		move.w	#0,(a2)+
		addi.w	#$10,d3
		dbf	d1,loc_37DA2

locret_37DB2:
		rts
; End of function sub_37D54

; ---------------------------------------------------------------------------

loc_37DB4:
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		lea	(a3,d0.w),a3
		tst.b	(a3)
		beq.s	loc_37DDE
		move.l	#loc_37F0A,(a0)
		move.b	#$E,$34(a0)
		move.l	#loc_37EE2,d4
		bra.w	loc_37FC6
; ---------------------------------------------------------------------------

loc_37DDE:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_37DF4
		tst.b	$3E(a0)
		beq.s	loc_37E20
		subq.b	#4,$3E(a0)
		bra.s	loc_37E1C
; ---------------------------------------------------------------------------

loc_37DF4:
		andi.b	#$10,d0
		beq.s	loc_37E10
		move.b	$3F(a0),d0
		sub.b	$3B(a0),d0
		beq.s	loc_37E10
		bcc.s	loc_37E0C
		addq.b	#1,$3F(a0)
		bra.s	loc_37E10
; ---------------------------------------------------------------------------

loc_37E0C:
		subq.b	#1,$3F(a0)

loc_37E10:
		cmpi.b	#$40,$3E(a0)
		beq.s	loc_37E1C
		addq.b	#4,$3E(a0)

loc_37E1C:
		bsr.w	sub_382C0

loc_37E20:
		moveq	#0,d1
		move.b	$2C(a0),d1
		lsl.w	#3,d1
		move.w	d1,d2
		addq.w	#8,d1
		add.w	d2,d2
		moveq	#8,d3
		move.w	$10(a0),d4
		bsr.w	sub_38086

loc_37E38:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_37E4C
		rts
; ---------------------------------------------------------------------------

loc_37E4C:
		movea.l	$30(a0),a1
		jsr	(Delete_Referenced_Sprite).l
		cmpi.b	#8,$2C(a0)
		bls.s	loc_37E68
		movea.l	$34(a0),a1
		jsr	(Delete_Referenced_Sprite).l

loc_37E68:
		move.w	$48(a0),d0
		beq.s	loc_37E74
		movea.w	d0,a2
		bclr	#7,(a2)

loc_37E74:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_37E7A:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_37E80:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_37E96
		tst.b	$3E(a0)
		beq.s	loc_37EC2
		subq.b	#4,$3E(a0)
		bra.s	loc_37EBE
; ---------------------------------------------------------------------------

loc_37E96:
		andi.b	#$10,d0
		beq.s	loc_37EB2
		move.b	$3F(a0),d0
		sub.b	$3B(a0),d0
		beq.s	loc_37EB2
		bcc.s	loc_37EAE
		addq.b	#1,$3F(a0)
		bra.s	loc_37EB2
; ---------------------------------------------------------------------------

loc_37EAE:
		subq.b	#1,$3F(a0)

loc_37EB2:
		cmpi.b	#$40,$3E(a0)
		beq.s	loc_37EBE
		addq.b	#4,$3E(a0)

loc_37EBE:
		bsr.w	sub_382C0

loc_37EC2:
		moveq	#0,d1
		move.b	$2C(a0),d1
		lsl.w	#3,d1
		move.w	d1,d2
		addq.w	#8,d1
		add.w	d2,d2
		moveq	#8,d3
		move.w	$10(a0),d4
		bsr.w	sub_38086
		bsr.w	sub_38210
		bra.w	loc_37E38
; ---------------------------------------------------------------------------

loc_37EE2:
		tst.b	$34(a0)
		beq.s	loc_37EF2
		subq.b	#1,$34(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_37EF2:
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bpl.s	loc_37F04
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_37F04:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_37F0A:
		tst.b	$34(a0)
		beq.s	loc_37F16
		subq.b	#1,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_37F16:
		bclr	#3,$2A(a0)
		beq.s	loc_37F2A
		bclr	#3,(Player_1+status).w
		bset	#1,(Player_1+status).w

loc_37F2A:
		bclr	#4,$2A(a0)
		beq.s	loc_37F3E
		bclr	#3,(Player_2+status).w
		bset	#1,(Player_2+status).w

loc_37F3E:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_37F44:
		bsr.w	sub_38372
		move.l	#loc_37F4E,(a0)

loc_37F4E:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_37F64
		tst.b	$3E(a0)
		beq.s	loc_37FA6
		subq.b	#4,$3E(a0)
		bra.s	loc_37FA2
; ---------------------------------------------------------------------------

loc_37F64:
		moveq	#0,d1
		move.b	$2C(a0),d1
		lsl.w	#3,d1
		move.w	d1,d2
		addq.w	#8,d1
		add.w	d2,d2
		bsr.w	sub_381D6
		move.b	$2A(a0),d0
		andi.b	#$10,d0
		beq.s	loc_37F96
		move.b	$3F(a0),d0
		sub.b	$3B(a0),d0
		beq.s	loc_37F96
		bcc.s	loc_37F92
		addq.b	#1,$3F(a0)
		bra.s	loc_37F96
; ---------------------------------------------------------------------------

loc_37F92:
		subq.b	#1,$3F(a0)

loc_37F96:
		cmpi.b	#$40,$3E(a0)
		beq.s	loc_37FA2
		addq.b	#4,$3E(a0)

loc_37FA2:
		bsr.w	sub_38372

loc_37FA6:
		moveq	#0,d1
		move.b	$2C(a0),d1
		lsl.w	#3,d1
		move.w	d1,d2
		addq.w	#8,d1
		add.w	d2,d2
		moveq	#8,d3
		move.w	$10(a0),d4
		bsr.w	sub_38128
		bsr.w	sub_38210
		bra.w	loc_37E38
; ---------------------------------------------------------------------------

loc_37FC6:
		movea.l	$30(a0),a3
		bsr.s	sub_37FDC
		cmpi.b	#8,$2C(a0)
		bls.s	locret_37FDA
		movea.l	$34(a0),a3
		bsr.s	sub_37FDC

locret_37FDA:
		rts

; =============== S U B R O U T I N E =======================================


sub_37FDC:
		lea	(byte_38076).l,a4
		lea	$18(a3),a2
		move.w	$16(a3),d6
		subq.w	#1,d6
		bclr	#6,4(a3)
		movea.l	a3,a1
		bra.s	loc_37FFE
; ---------------------------------------------------------------------------

loc_37FF6:
		jsr	(Create_New_Sprite3).l
		bne.s	loc_38062

loc_37FFE:
		move.l	d4,(a1)
		move.l	$C(a3),$C(a1)
		move.b	4(a3),4(a1)
		move.w	$A(a3),$A(a1)
		move.w	8(a3),8(a1)
		move.b	7(a3),7(a1)
		move.b	6(a3),6(a1)
		move.w	8(a3),8(a1)
		move.w	(a2)+,$10(a1)
		move.w	(a2)+,$14(a1)
		move.w	(a2)+,d0
		move.b	d0,$22(a1)
		move.b	(a4)+,$34(a1)
		movea.l	a1,a5
		jsr	(Create_New_Sprite3).l
		bne.s	loc_38062
		move.l	#loc_1C31E,(a1)
		move.w	$10(a5),$10(a1)
		move.w	$14(a5),$14(a1)
		move.b	-1(a4),$24(a1)
		dbf	d6,loc_37FF6

loc_38062:
		move.w	#0,$18(a3)
		move.w	#0,$1A(a3)
		moveq	#signextendB(sfx_BridgeCollapse),d0
		jmp	(Play_Sound_2).l
; End of function sub_37FDC

; ---------------------------------------------------------------------------
byte_38076:	dc.b    8, $10,  $C,  $E,   6,  $A,   4,   2
		dc.b    8, $10,  $C,  $E,   6,  $A,   4,   2

; =============== S U B R O U T I N E =======================================


sub_38086:
		lea	(Player_2).w,a1
		moveq	#4,d6
		moveq	#$3B,d5
		movem.l	d1-d4,-(sp)
		bsr.s	sub_380A0
		movem.l	(sp)+,d1-d4
		lea	(Player_1).w,a1
		subq.b	#1,d6
		moveq	#$3F,d5
; End of function sub_38086


; =============== S U B R O U T I N E =======================================


sub_380A0:
		btst	d6,$2A(a0)
		beq.s	loc_38104
		btst	#1,$2A(a1)
		bne.s	loc_380C0
		moveq	#0,d0
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_380C0
		cmp.w	d2,d0
		bcs.s	loc_380CE

loc_380C0:
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_380CE:
		lsr.w	#4,d0
		move.b	d0,(a0,d5.w)
		movea.l	$30(a0),a2
		cmpi.w	#8,d0
		bcs.s	loc_380E6
		movea.l	$34(a0),a2
		subi.w	#8,d0

loc_380E6:
		add.w	d0,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		move.w	$1A(a2,d0.w),d0
		subq.w	#8,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		sub.w	d1,d0
		move.w	d0,$14(a1)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_38104:
		move.w	d1,-(sp)
		jsr	(sub_1C0BE).l
		move.w	(sp)+,d1
		btst	d6,$2A(a0)
		beq.s	locret_38126
		moveq	#0,d0
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		lsr.w	#4,d0
		move.b	d0,(a0,d5.w)

locret_38126:
		rts
; End of function sub_380A0


; =============== S U B R O U T I N E =======================================


sub_38128:
		lea	(Player_2).w,a1
		moveq	#4,d6
		moveq	#$3B,d5
		movem.l	d1-d4,-(sp)
		bsr.s	sub_38142
		movem.l	(sp)+,d1-d4
		lea	(Player_1).w,a1
		subq.b	#1,d6
		moveq	#$3F,d5
; End of function sub_38128


; =============== S U B R O U T I N E =======================================


sub_38142:
		btst	d6,$2A(a0)
		beq.s	loc_381A2
		btst	#1,$2A(a1)
		bne.s	loc_38162
		moveq	#0,d0
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	loc_38162
		cmp.w	d2,d0
		bcs.s	loc_38170

loc_38162:
		bclr	#3,$2A(a1)
		bclr	d6,$2A(a0)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_38170:
		lsr.w	#4,d0
		movea.l	$30(a0),a2
		cmpi.w	#8,d0
		bcs.s	loc_38184
		movea.l	$34(a0),a2
		subi.w	#8,d0

loc_38184:
		add.w	d0,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		move.w	$1A(a2,d0.w),d0
		subq.w	#8,d0
		moveq	#0,d1
		move.b	$1E(a1),d1
		sub.w	d1,d0
		move.w	d0,$14(a1)
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_381A2:
		bsr.s	sub_381A6
		rts
; End of function sub_38142


; =============== S U B R O U T I N E =======================================


sub_381A6:
		tst.w	$1A(a1)
		bmi.s	locret_381D4
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	locret_381D4
		cmp.w	d2,d0
		bcc.s	locret_381D4
		lsr.w	#4,d0
		move.w	d0,d3
		add.w	d0,d0
		add.w	d0,d3
		neg.w	d3
		addq.w	#8,d3
		move.w	$14(a0),d0
		sub.w	d3,d0
		jmp	(loc_1C100).l
; ---------------------------------------------------------------------------

locret_381D4:
		rts
; End of function sub_381A6


; =============== S U B R O U T I N E =======================================


sub_381D6:
		lea	(Player_2).w,a1
		moveq	#4,d6
		moveq	#$3B,d5
		bsr.s	sub_381E8
		lea	(Player_1).w,a1
		subq.b	#1,d6
		moveq	#$3F,d5
; End of function sub_381D6


; =============== S U B R O U T I N E =======================================


sub_381E8:
		btst	d6,$2A(a0)
		beq.s	locret_3820E
		btst	#1,$2A(a1)
		bne.s	locret_3820E
		moveq	#0,d0
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		add.w	d1,d0
		bmi.s	locret_3820E
		cmp.w	d2,d0
		bcc.s	locret_3820E
		lsr.w	#4,d0
		move.b	d0,(a0,d5.w)

locret_3820E:
		rts
; End of function sub_381E8


; =============== S U B R O U T I N E =======================================


sub_38210:
		movea.l	$30(a0),a1
		lea	$1D(a1),a1
		movea.l	$34(a0),a2
		lea	$1D(a2),a2
		moveq	#-2,d3
		moveq	#-2,d4
		move.b	$2A(a0),d0
		andi.w	#8,d0
		beq.s	loc_3823C
		tst.w	(Player_1+x_vel).w
		beq.s	loc_3823C
		move.b	$3F(a0),d0
		bsr.w	sub_3828C

loc_3823C:
		move.b	$2A(a0),d0
		andi.w	#$10,d0
		beq.s	loc_38254
		tst.w	(Player_2+x_vel).w
		beq.s	loc_38254
		move.b	$3B(a0),d0
		bsr.w	sub_3828C

loc_38254:
		movea.l	$30(a0),a1
		lea	$4D(a1),a2
		lea	$1D(a1),a1
		moveq	#0,d1
		move.b	$2C(a0),d1
		subq.b	#1,d1

loc_38268:
		tst.b	(a1)
		beq.s	loc_38278
		addq.b	#1,(a1)
		cmpi.b	#$C,(a1)
		bcs.s	loc_38278
		move.b	#0,(a1)

loc_38278:
		addq.w	#6,a1
		cmpa.w	a2,a1
		bne.s	loc_38286
		movea.l	$34(a0),a1
		lea	$1D(a1),a1

loc_38286:
		dbf	d1,loc_38268
		rts
; End of function sub_38210


; =============== S U B R O U T I N E =======================================


sub_3828C:
		cmpi.b	#8,d0
		bcc.s	loc_382A8
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		add.w	d0,d0
		tst.b	(a1,d0.w)
		bne.s	locret_382A6
		move.b	#1,(a1,d0.w)

locret_382A6:
		rts
; ---------------------------------------------------------------------------

loc_382A8:
		subq.w	#8,d0
		move.w	d0,d1
		add.w	d0,d0
		add.w	d1,d0
		add.w	d0,d0
		tst.b	(a2,d0.w)
		bne.s	locret_382BE
		move.b	#1,(a2,d0.w)

locret_382BE:
		rts
; End of function sub_3828C


; =============== S U B R O U T I N E =======================================


sub_382C0:
		move.b	$3E(a0),d0
		jsr	(GetSineCosine).l
		move.w	d0,d4
		lea	(BridgeBendData).l,a4
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#4,d0
		moveq	#0,d3
		move.b	$3F(a0),d3
		move.w	d3,d2
		add.w	d0,d3
		moveq	#0,d5
		lea	(loc_383A8).l,a5
		move.b	(a5,d3.w),d5
		andi.w	#$F,d3
		lsl.w	#4,d3
		lea	(a4,d3.w),a3
		movea.l	$30(a0),a1
		lea	$4A(a1),a2
		lea	$1A(a1),a1

loc_38306:
		moveq	#0,d0
		move.b	(a3)+,d0
		addq.w	#1,d0
		mulu.w	d5,d0
		mulu.w	d4,d0
		swap	d0
		add.w	$3C(a0),d0
		move.w	d0,(a1)
		addq.w	#6,a1
		cmpa.w	a2,a1
		bne.s	loc_38326
		movea.l	$34(a0),a1
		lea	$1A(a1),a1

loc_38326:
		dbf	d2,loc_38306
		moveq	#0,d0
		move.b	$2C(a0),d0
		moveq	#0,d3
		move.b	$3F(a0),d3
		addq.b	#1,d3
		sub.b	d0,d3
		neg.b	d3
		bmi.s	locret_38370
		move.w	d3,d2
		lsl.w	#4,d3
		lea	(a4,d3.w),a3
		adda.w	d2,a3
		subq.w	#1,d2
		bcs.s	locret_38370

loc_3834C:
		moveq	#0,d0
		move.b	-(a3),d0
		addq.w	#1,d0
		mulu.w	d5,d0
		mulu.w	d4,d0
		swap	d0
		add.w	$3C(a0),d0
		move.w	d0,(a1)
		addq.w	#6,a1
		cmpa.w	a2,a1
		bne.s	loc_3836C
		movea.l	$34(a0),a1
		lea	$1A(a1),a1

loc_3836C:
		dbf	d2,loc_3834C

locret_38370:
		rts
; End of function sub_382C0


; =============== S U B R O U T I N E =======================================


sub_38372:
		move.b	$3E(a0),d0
		jsr	(GetSineCosine).l
		move.w	d0,d4
		lea	(BridgeBendData).l,a4
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#4,d0
		moveq	#0,d3
		move.b	$3F(a0),d3
		move.w	d3,d2
		add.w	d0,d3
		moveq	#0,d5
		lea	(loc_383A8).l,a5
		move.b	(a5,d3.w),d5
		andi.w	#$F,d3
		lsl.w	#4,d3

loc_383A8:
		lea	(a4,d3.w),a3
		move.w	$3C(a0),d6
		movea.l	$30(a0),a1
		lea	$4A(a1),a2
		lea	$1A(a1),a1

loc_383BC:
		moveq	#0,d0
		move.b	(a3)+,d0
		addq.w	#1,d0
		mulu.w	d5,d0
		mulu.w	d4,d0
		swap	d0
		add.w	d6,d0
		addq.w	#3,d6
		move.w	d0,(a1)
		addq.w	#6,a1
		cmpa.w	a2,a1
		bne.s	loc_383DC
		movea.l	$34(a0),a1
		lea	$1A(a1),a1

loc_383DC:
		dbf	d2,loc_383BC
		moveq	#0,d0
		move.b	$2C(a0),d0
		moveq	#0,d3
		move.b	$3F(a0),d3
		addq.b	#1,d3
		sub.b	d0,d3
		neg.b	d3
		bmi.s	locret_38426
		move.w	d3,d2
		lsl.w	#4,d3
		lea	(a4,d3.w),a3
		adda.w	d2,a3
		subq.w	#1,d2
		bcs.s	locret_38426

loc_38402:
		moveq	#0,d0
		move.b	-(a3),d0
		addq.w	#1,d0
		mulu.w	d5,d0
		mulu.w	d4,d0
		swap	d0
		add.w	d6,d0
		addq.w	#3,d6
		move.w	d0,(a1)
		addq.w	#6,a1
		cmpa.w	a2,a1
		bne.s	loc_38422
		movea.l	$34(a0),a1
		lea	$1A(a1),a1

loc_38422:
		dbf	d2,loc_38402

locret_38426:
		rts
; End of function sub_38372

; ---------------------------------------------------------------------------
		dc.b    2,   4,   6,   8,   8,   6,   4,   2,   0,   0,   0,   0,   0,   0,   0,   0
		dc.b    2,   4,   6,   8,  $A,   8,   6,   4,   2,   0,   0,   0,   0,   0,   0,   0
		dc.b    2,   4,   6,   8,  $A,  $A,   8,   6,   4,   2,   0,   0,   0,   0,   0,   0
		dc.b    2,   4,   6,   8,  $A,  $C,  $A,   8,   6,   4,   2,   0,   0,   0,   0,   0
		dc.b    2,   4,   6,   8,  $A,  $C,  $C,  $A,   8,   6,   4,   2,   0,   0,   0,   0
		dc.b    2,   4,   6,   8,  $A,  $C,  $E,  $C,  $A,   8,   6,   4,   2,   0,   0,   0
		dc.b    2,   4,   6,   8,  $A,  $C,  $E,  $E,  $C,  $A,   8,   6,   4,   2,   0,   0
		dc.b    2,   4,   6,   8,  $A,  $C,  $E, $10,  $E,  $C,  $A,   8,   6,   4,   2,   0
		dc.b    2,   4,   6,   8,  $A,  $C,  $E, $10, $10,  $E,  $C,  $A,   8,   6,   4,   2
BridgeBendData:	dc.b  $FF,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
		dc.b  $B5, $FF,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
		dc.b  $7E, $DB, $FF,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
		dc.b  $61, $B5, $EC, $FF,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
		dc.b  $4A, $93, $CD, $F3, $FF,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
		dc.b  $3E, $7E, $B0, $DB, $F6, $FF,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0
		dc.b  $38, $6D, $9D, $C5, $E4, $F8, $FF,   0,   0,   0,   0,   0,   0,   0,   0,   0
		dc.b  $31, $61, $8E, $B5, $D4, $EC, $FB, $FF,   0,   0,   0,   0,   0,   0,   0,   0
		dc.b  $2B, $56, $7E, $A2, $C1, $DB, $EE, $FB, $FF,   0,   0,   0,   0,   0,   0,   0
		dc.b  $25, $4A, $73, $93, $B0, $CD, $E1, $F3, $FC, $FF,   0,   0,   0,   0,   0,   0
		dc.b  $1F, $44, $67, $88, $A7, $BD, $D4, $E7, $F4, $FD, $FF,   0,   0,   0,   0,   0
		dc.b  $1F, $3E, $5C, $7E, $98, $B0, $C9, $DB, $EA, $F6, $FD, $FF,   0,   0,   0,   0
		dc.b  $19, $38, $56, $73, $8E, $A7, $BD, $D1, $E1, $EE, $F8, $FE, $FF,   0,   0,   0
		dc.b  $19, $38, $50, $6D, $83, $9D, $B0, $C5, $D8, $E4, $F1, $F8, $FE, $FF,   0,   0
		dc.b  $19, $31, $4A, $67, $7E, $93, $A7, $BD, $CD, $DB, $E7, $F3, $F9, $FE, $FF,   0
		dc.b  $19, $31, $4A, $61, $78, $8E, $A2, $B5, $C5, $D4, $E1, $EC, $F4, $FB, $FE, $FF
Map_ICZTensionBridge:
		include "Levels/ICZ/Misc Object Data/Map - ICZ Tension Bridge.asm"
Map_TensionBridge:
		include "Levels/Misc/Map - Tension Bridge.asm"
byte_38604:	dc.b    2,   4,   4,   4,   4,   4,  $C,   0
byte_3860C:	dc.b    2,   4,   6,   6,   6,   6,   8,   8,   8,   8,  $A,  $A,   0,   0
byte_3861A:	dc.b    2,   4,   6,   6,   6,   6,   8,   8,   8,   8,  $A,   0
byte_38626:	dc.b    2,   4,   6,   6,   6,   6,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,   8,  $E,   0
word_3863A:	dc.w $840
		dc.w $120
		dc.l byte_38604
		dc.w $1540
		dc.w $620
		dc.l byte_3860C
		dc.w $1740
		dc.w $3A0
		dc.l byte_3860C
		dc.w $1CC0
		dc.w $620
		dc.l byte_38604
		dc.w $1FC0
		dc.w $2A0
		dc.l byte_3861A
		dc.w $24C0
		dc.w $220
		dc.l byte_38626
		dc.w $26C0
		dc.w $120
		dc.l byte_38604
		dc.w $3040
		dc.w $620
		dc.l byte_3860C
; ---------------------------------------------------------------------------

Obj_69_1:
		move.b	$2C(a0),d0
		andi.w	#$7F,d0
		lsl.w	#3,d0
		lea	word_3863A(pc,d0.w),a1
		move.w	(a1)+,$30(a0)
		move.w	(a1)+,$32(a0)
		move.l	(a1)+,$40(a0)
		move.l	#loc_3869A,(a0)

loc_3869A:
		lea	(Player_1).w,a1
		lea	$34(a0),a4
		bsr.s	sub_386C0
		lea	(Player_2).w,a1
		lea	$3A(a0),a4
		bsr.s	sub_386C0
		move.b	$34(a0),d0
		add.b	$3A(a0),d0
		beq.s	loc_386BA
		rts
; ---------------------------------------------------------------------------

loc_386BA:
		jmp	(Delete_Sprite_If_Not_In_Range).l

; =============== S U B R O U T I N E =======================================


sub_386C0:
		moveq	#0,d0
		move.b	(a4),d0
		move.w	off_386F0(pc,d0.w),d0
		jsr	off_386F0(pc,d0.w)
		tst.b	(a4)
		beq.s	locret_386EE
		bsr.w	sub_38806
		moveq	#0,d0
		move.w	2(a4),d0
		divu.w	#$60,d0
		movea.l	$40(a0),a2
		move.b	(a2,d0.w),(a4)
		bne.s	locret_386EE
		move.b	#0,$2E(a1)

locret_386EE:
		rts
; End of function sub_386C0

; ---------------------------------------------------------------------------
off_386F0:	dc.w loc_38700-off_386F0
		dc.w loc_3885A-off_386F0
		dc.w loc_388B4-off_386F0
		dc.w loc_388EC-off_386F0
		dc.w loc_3891C-off_386F0
		dc.w loc_3895C-off_386F0
		dc.w loc_3898C-off_386F0
		dc.w loc_389BC-off_386F0
; ---------------------------------------------------------------------------

loc_38700:
		tst.w	(Debug_placement_mode).w
		bne.w	locret_38794
		tst.b	$2C(a0)
		bmi.w	loc_38796
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#8,d0
		cmpi.w	#$10,d0
		bcc.s	locret_38794
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		cmpi.w	#$30,d1
		bcc.s	locret_38794
		tst.b	$2E(a1)
		bne.s	locret_38794
		btst	#0,$2A(a0)
		beq.s	loc_38750
		tst.w	$1C(a1)
		bpl.s	locret_38794
		tst.w	$18(a1)
		bpl.s	locret_38794
		neg.w	$1C(a1)
		bra.s	loc_38756
; ---------------------------------------------------------------------------

loc_38750:
		tst.w	$1C(a1)
		bmi.s	locret_38794

loc_38756:
		addq.b	#2,(a4)
		move.b	#1,$2E(a1)
		move.b	#2,$20(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		bclr	#5,$2A(a1)
		move.b	#$28,$26(a1)
		move.w	$14(a1),d1
		sub.w	$32(a0),d1
		move.w	d1,2(a4)

locret_38794:
		rts
; ---------------------------------------------------------------------------

loc_38796:
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		addi.w	#$10,d0
		cmpi.w	#$20,d0
		bcc.s	locret_38794
		move.w	$14(a1),d1
		sub.w	$14(a0),d1
		addi.w	#$10,d1
		cmpi.w	#$10,d1
		bcc.s	locret_38794
		tst.b	$2E(a1)
		bne.s	locret_38794
		tst.w	$1C(a1)
		bpl.s	locret_38794
		addq.b	#2,(a4)
		move.b	#1,$2E(a1)
		move.b	#2,$20(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		bclr	#5,$2A(a1)
		move.b	#$28,$26(a1)
		move.w	$14(a1),d1
		sub.w	$32(a0),d1
		move.w	d1,2(a4)
		rts

; =============== S U B R O U T I N E =======================================


sub_38806:
		move.b	$26(a1),d0
		jsr	(GetSineCosine).l
		muls.w	$1C(a1),d1
		asr.l	#8,d1
		move.w	d1,$18(a1)
		muls.w	$1C(a1),d0
		asr.l	#8,d0
		move.w	d0,$1A(a1)
		move.b	$26(a1),d0
		jsr	(GetSineCosine).l
		muls.w	#$50,d0
		asr.l	#8,d0
		tst.w	$1C(a1)
		bmi.s	loc_3884E
		tst.w	d0
		bpl.s	loc_38840
		asr.l	#2,d0

loc_38840:
		cmpi.w	#$1800,$1C(a1)
		bge.s	locret_38858
		add.w	d0,$1C(a1)
		rts
; ---------------------------------------------------------------------------

loc_3884E:
		tst.w	d0
		bmi.s	loc_38854
		asr.l	#2,d0

loc_38854:
		add.w	d0,$1C(a1)

locret_38858:
		rts
; End of function sub_38806

; ---------------------------------------------------------------------------

loc_3885A:
		move.w	2(a4),d0
		subi.w	#$16,d0
		bcc.s	loc_38880
		tst.w	$1C(a1)
		bpl.s	loc_3887E
		move.b	#0,(a4)
		move.b	#0,$2E(a1)
		move.b	#$70,$26(a1)
		bra.w	sub_38806
; ---------------------------------------------------------------------------

loc_3887E:
		moveq	#0,d0

loc_38880:
		mulu.w	#$DD,d0
		lsr.w	#8,d0
		jsr	(GetSineCosine).l
		muls.w	#-$2800,d0
		swap	d0
		add.w	$30(a0),d0
		move.w	d0,$10(a1)
		move.w	2(a4),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a1)
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,2(a4)
		rts
; ---------------------------------------------------------------------------

loc_388B4:
		move.w	2(a4),d0
		mulu.w	#$AA,d0
		asr.w	#8,d0
		jsr	(GetSineCosine).l
		muls.w	#-$2800,d0
		swap	d0
		add.w	$30(a0),d0
		move.w	d0,$10(a1)
		move.w	2(a4),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a1)
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,2(a4)
		rts
; ---------------------------------------------------------------------------

loc_388EC:
		move.w	2(a4),d0
		subi.w	#$C0,d0
		muls.w	#$AA,d0
		asr.l	#8,d0
		add.w	$30(a0),d0
		move.w	d0,$10(a1)
		move.w	2(a4),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a1)
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,2(a4)
		rts
; ---------------------------------------------------------------------------

loc_3891C:
		move.w	2(a4),d0
		subi.w	#$180,d0
		mulu.w	#$AA,d0
		asr.w	#8,d0
		jsr	(GetSineCosine).l
		muls.w	#-$2800,d0
		swap	d0
		addi.w	#$100,d0
		add.w	$30(a0),d0
		move.w	d0,$10(a1)
		move.w	2(a4),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a1)
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,2(a4)
		rts
; ---------------------------------------------------------------------------

loc_3895C:
		move.w	2(a4),d0
		subi.w	#$240,d0
		muls.w	#$AA,d0
		asr.l	#8,d0
		add.w	$30(a0),d0
		move.w	d0,$10(a1)
		move.w	2(a4),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a1)
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,2(a4)
		rts
; ---------------------------------------------------------------------------

loc_3898C:
		move.w	2(a4),d0
		subi.w	#$240,d0
		muls.w	#$AA,d0
		asr.l	#8,d0
		add.w	$30(a0),d0
		move.w	d0,$10(a1)
		move.w	2(a4),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a1)
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,2(a4)
		rts
; ---------------------------------------------------------------------------

loc_389BC:
		move.w	2(a4),d0
		subi.w	#$540,d0
		muls.w	#$AA,d0
		asr.l	#8,d0
		add.w	$30(a0),d0
		move.w	d0,$10(a1)
		move.w	2(a4),d0
		add.w	$32(a0),d0
		move.w	d0,$14(a1)
		move.w	$1A(a1),d0
		ext.l	d0
		asl.l	#8,d0
		add.l	d0,2(a4)
		rts
; ---------------------------------------------------------------------------

loc_389EC:
		move.w	#ArtTile_Player_1,$A(a0)
		move.l	#Map_SonicSnowboard,$C(a0)
		move.w	#$100,8(a0)
		move.b	#$20,7(a0)
		move.b	#$20,6(a0)
		move.b	#4,4(a0)
		move.b	#6,$22(a0)
		move.w	#1,$20(a0)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_38A32
		move.l	#loc_38EDE,(a1)
		move.w	a0,$30(a1)

loc_38A32:
		move.l	#loc_38A38,(a0)

loc_38A38:
		lea	(Player_1).w,a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		btst	#1,$2A(a1)
		bne.s	loc_38A5C
		move.b	#1,$20(a0)
		move.l	#loc_38A9E,(a0)

loc_38A5C:
		lea	(Ani_SonicSnowboard).l,a1
		jsr	(Animate_Sprite).l
		jsr	(sub_38C8C).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
Ani_SonicSnowboard:
		include "General/Sprites/Sonic/Anim - Sonic Snowboard.asm"
; ---------------------------------------------------------------------------

loc_38A9E:
		lea	(Player_1).w,a2
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		moveq	#0,d0
		move.b	$26(a2),d0
		addq.b	#5,d0
		lsr.w	#4,d0
		move.b	byte_38AF0(pc,d0.w),$20(a0)
		btst	#1,$2A(a2)
		beq.s	loc_38B00
		move.b	#0,$20(a0)
		tst.w	$18(a2)
		beq.s	loc_38AE0
		cmpi.w	#$1000,$18(a2)
		blt.s	loc_38AE0
		move.w	#$1000,$18(a2)

loc_38AE0:
		cmpi.w	#-$200,$1A(a2)
		bge.s	loc_38B52
		move.w	#-$200,$1A(a2)
		bra.s	loc_38B52
; ---------------------------------------------------------------------------
byte_38AF0:	dc.b    4,   5,   2,   1,   1,   1,   1,   1,   0,   1,   2,   0,   1,   2,   0,   4
; ---------------------------------------------------------------------------

loc_38B00:
		move.b	(Level_frame_counter+1).w,d0
		andi.b	#$F,d0
		bne.s	loc_38B12
		moveq	#signextendB(sfx_SlideSkidQuiet),d0
		jsr	(Play_Sound_2).l

loc_38B12:
		cmpi.w	#$1310,$10(a2)
		bcs.s	loc_38B52
		moveq	#1,d0
		cmpi.w	#$1330,$10(a2)
		bcs.s	loc_38B36
		cmpi.w	#$2210,$10(a2)
		bcs.s	loc_38B52
		cmpi.w	#$2230,$10(a2)
		bcc.s	loc_38B52
		moveq	#2,d0

loc_38B36:
		cmp.b	$36(a0),d0
		beq.s	loc_38B52
		move.b	d0,$36(a0)
		move.b	#3,$2E(a2)
		move.l	#loc_38BFC,(a0)
		move.w	#0,$34(a0)

loc_38B52:
		lea	(Ani_SonicSnowboard).l,a1
		jsr	(Animate_Sprite).l
		cmpi.b	#8,$22(a0)
		bne.s	loc_38B76
		cmpi.w	#$1000,$1C(a2)
		blt.s	loc_38B76
		subi.w	#8,$1C(a2)
		bra.s	loc_38B84
; ---------------------------------------------------------------------------

loc_38B76:
		cmpi.w	#$1000,$1C(a2)
		bge.s	loc_38B84
		move.w	#$1000,$1C(a2)

loc_38B84:
		cmpi.w	#$3880,$10(a2)
		bcs.s	loc_38BCA
		tst.w	$18(a2)
		bne.s	loc_38BCA
		move.l	#loc_38C74,(a0)
		bset	#1,$2A(a2)
		move.w	#-$200,$18(a2)
		move.w	#-$400,$1A(a2)
		move.b	#$19,$20(a2)
		move.b	#0,$2E(a2)
		move.w	#$14,(Screen_shake_flag).w
		moveq	#signextendB(sfx_Crash),d0
		jsr	(Play_Sound_2).l
		move.w	#2,(Tails_CPU_routine).w

loc_38BCA:
		btst	#1,$2A(a2)
		bne.s	loc_38BF0
		move.b	$22(a0),d0
		cmp.b	$32(a0),d0
		beq.s	loc_38BF0
		cmpi.b	#7,d0
		beq.s	loc_38BE8
		cmpi.b	#8,d0
		bne.s	loc_38BF0

loc_38BE8:
		moveq	#signextendB(sfx_GroundSlide),d0
		jsr	(Play_Sound_2).l

loc_38BF0:
		jsr	(sub_38C8C).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_38BFC:
		lea	(Player_1).w,a2
		move.w	$34(a0),d0
		addq.w	#6,$34(a0)
		lea	(ICZSnowboard_Slope1).l,a1
		cmpi.b	#1,$36(a0)
		beq.s	loc_38C1C
		lea	(ICZSnowboard_Slope2).l,a1

loc_38C1C:
		lea	(a1,d0.w),a1
		move.w	(a1)+,d0
		move.w	d0,$10(a0)
		move.w	d0,$10(a2)
		move.w	(a1)+,d0
		move.w	d0,$14(a0)
		move.w	d0,$14(a2)
		move.w	(a1)+,d0
		move.b	d0,$22(a0)
		tst.w	(a1)
		bpl.s	loc_38C56
		move.b	#$E,$46(a2)
		move.b	#$F,$47(a2)
		move.b	#2,$2E(a2)
		move.l	#loc_38A9E,(a0)

loc_38C56:
		move.b	$22(a0),d0
		cmp.b	$32(a0),d0
		beq.s	loc_38C68
		moveq	#signextendB(sfx_GroundSlide),d0
		jsr	(Play_Sound_2).l

loc_38C68:
		jsr	(sub_38C8C).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_38C74:
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_38C7A:
		move.w	#$D480,d4
		move.l	#ArtUnc_Snowboard,d6
		lea	(DPLC_Snowboard).l,a2
		bra.s	loc_38C9C
; End of function sub_38C7A


; =============== S U B R O U T I N E =======================================


sub_38C8C:
		move.w	#-$3000,d4
		move.l	#ArtUnc_SonicSnowboard,d6
		lea	(DPLC_SonicSnowboard).l,a2

loc_38C9C:
		moveq	#0,d0
		move.b	$22(a0),d0
		cmp.b	$32(a0),d0
		beq.s	locret_38CE0
		move.b	d0,$32(a0)
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		subq.w	#1,d5
		bmi.s	locret_38CE0

loc_38CB8:
		moveq	#0,d1
		move.w	(a2)+,d1
		move.w	d1,d3
		lsr.w	#8,d3
		andi.w	#$F0,d3
		addi.w	#$10,d3
		andi.w	#$FFF,d1
		lsl.l	#5,d1
		add.l	d6,d1
		move.w	d4,d2
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_38CB8

locret_38CE0:
		rts
; End of function sub_38C8C

; ---------------------------------------------------------------------------

Obj_LevelIntroICZ1:
		lea	(Player_1).w,a1
		move.w	#$800,$18(a1)
		move.w	#$280,$1A(a1)
		move.w	#$800,$1C(a1)
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		move.b	#1,(Ctrl_1_locked).w
		move.w	#0,(Ctrl_1_logical).w
		move.w	#0,(Ctrl_1).w
		move.b	#0,$22(a1)
		move.b	#3,$2E(a1)
		move.b	#$1E,$24(a0)
		move.l	#Map_Snowboard,$C(a0)
		move.w	#$6A4,$A(a0)
		move.w	#$80,8(a0)
		move.b	#$20,7(a0)
		move.b	#$20,6(a0)
		move.b	#4,4(a0)
		move.b	#8,$22(a0)
		move.w	#$C0,$10(a0)
		move.w	#$170,$14(a0)
		move.l	#loc_38D7E,(a0)

loc_38D7E:
		subq.b	#1,$24(a0)
		bne.s	loc_38D94
		lea	(Player_1).w,a2
		move.b	#0,$2E(a2)
		move.l	#loc_38D94,(a0)

loc_38D94:
		move.b	#1,(Ctrl_1_locked).w
		move.w	#0,(Ctrl_1_logical).w
		lea	(Player_1).w,a2
		cmpi.w	#$C0,$10(a2)
		bcs.s	loc_38DC4
		move.w	#-$600,$1A(a0)
		move.w	#$400,$18(a2)
		move.w	#-$800,$1A(a2)
		move.l	#loc_38DD0,(a0)

loc_38DC4:
		jsr	(sub_38C7A).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_38DD0:
		lea	(Player_1).w,a2
		move.w	$10(a2),$10(a0)
		subq.b	#1,$24(a0)
		bpl.s	loc_38DF8
		move.b	#1,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#9,$22(a0)
		bcs.s	loc_38DF8
		move.b	#1,$22(a0)

loc_38DF8:
		cmpi.w	#$184,$10(a2)
		bcs.s	loc_38E3C
		move.b	#0,$22(a2)
		move.b	#2,$2E(a2)
		jsr	(Create_New_Sprite3).l
		bne.w	loc_38E34
		move.l	#loc_389EC,(a1)
		move.w	$10(a2),$10(a1)
		move.w	$14(a2),$14(a1)
		move.w	$18(a2),$18(a1)
		move.w	$1A(a2),$1A(a1)

loc_38E34:
		move.l	#loc_38E4C,(a0)
		rts
; ---------------------------------------------------------------------------

loc_38E3C:
		jsr	(MoveSprite2).l
		addi.w	#$28,$1A(a0)
		bra.w	loc_38DC4
; ---------------------------------------------------------------------------

loc_38E4C:
		lea	(Player_1).w,a2
		move.w	$10(a2),$10(a0)
		move.w	$14(a2),$14(a0)
		move.w	(Ctrl_1).w,d0
		andi.w	#-$F10,d0
		move.w	d0,(Ctrl_1_logical).w
		tst.b	$2E(a2)
		bne.s	locret_38EA2
		move.b	#0,(Ctrl_1_locked).w
		move.l	#loc_38EA4,(a0)
		addi.w	#$14,$14(a0)
		move.w	#-$200,$18(a0)
		move.w	#-$400,$1A(a0)
		move.b	#-$7C,4(a0)
		move.b	#1,$22(a0)
		move.b	#1,$24(a0)
		bra.w	loc_38DC4
; ---------------------------------------------------------------------------

locret_38EA2:
		rts
; ---------------------------------------------------------------------------

loc_38EA4:
		tst.b	4(a0)
		bmi.s	loc_38EB0
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_38EB0:
		subq.b	#1,$24(a0)
		bpl.s	loc_38ECE
		move.b	#1,$24(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#9,$22(a0)
		bcs.s	loc_38ECE
		move.b	#1,$22(a0)

loc_38ECE:
		jsr	(MoveSprite2).l
		addi.w	#$28,$1A(a0)
		bra.w	loc_38DC4
; ---------------------------------------------------------------------------

loc_38EDE:
		move.l	#loc_38EE4,(a0)

loc_38EE4:
		movea.w	$30(a0),a3
		lea	(Player_1).w,a2
		tst.b	$2E(a2)
		bne.s	loc_38EF8
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_38EF8:
		btst	#1,$2A(a2)
		bne.s	locret_38F20
		bsr.s	sub_38F22
		bsr.s	sub_38F22
		cmpi.b	#7,$22(a3)
		beq.s	loc_38F14
		cmpi.b	#8,$22(a3)
		bne.s	locret_38F20

loc_38F14:
		bsr.s	sub_38F22
		bsr.s	sub_38F22
		bsr.s	sub_38F22
		bsr.s	sub_38F22
		bsr.s	sub_38F22
		bsr.s	sub_38F22

locret_38F20:
		rts

; =============== S U B R O U T I N E =======================================


sub_38F22:
		jsr	(Create_New_Sprite3).l
		bne.w	locret_38FA2
		move.l	#loc_38FA4,(a1)
		move.w	#$6B8,$A(a1)
		move.l	#Map_SnowboardDust,$C(a1)
		move.w	#$100,8(a1)
		move.b	#4,7(a1)
		move.b	#4,6(a1)
		move.b	#-$7C,4(a1)
		move.w	#1,$20(a1)
		move.w	$10(a2),$10(a1)
		move.w	$14(a2),$14(a1)
		addi.w	#$14,$14(a1)
		jsr	(Random_Number).l
		move.l	d0,d1
		andi.w	#$1FF,d0
		neg.w	d0
		subi.w	#$200,$1A(a1)
		move.w	d0,$1A(a1)
		move.w	#-$100,$18(a1)
		move.l	d1,d0
		andi.w	#$F,d0
		sub.w	d0,$10(a1)
		swap	d0
		andi.w	#$F,d0
		sub.w	d0,$14(a1)

locret_38FA2:
		rts
; End of function sub_38F22

; ---------------------------------------------------------------------------

loc_38FA4:
		tst.b	4(a0)
		bpl.s	loc_38FC8
		jsr	(MoveSprite2).l
		lea	(Ani_SnowboardDust).l,a1
		jsr	(Animate_Sprite).l
		tst.b	5(a0)
		bne.s	loc_38FC8
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_38FC8:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
Ani_SnowboardDust:
		include "General/Sprites/Snowboard/Anim - Snowboard Dust.asm"
Map_SnowboardDust:
		include "General/Sprites/Snowboard/Map - Snowboard Dust.asm"
ArtNem_SnowboardDust:
		binclude "General/Sprites/Snowboard/Snowboard Dust.bin"
		even
; ---------------------------------------------------------------------------

Obj_LevelIntro_PlayerLaunchFromGround:
		move.l	#loc_3907E,(a0)
		move.b	#1,(Ctrl_1_locked).w
		move.b	#1,(Ctrl_2_locked).w
		moveq	#0,d0
		move.w	d0,(Ctrl_1_logical).w
		move.w	d0,(Ctrl_1).w
		move.w	d0,(Ctrl_2_logical).w
		move.w	d0,(Ctrl_2).w
		move.b	#$1E,$24(a0)
		lea	(Player_1).w,a1
		bsr.s	sub_39076
		lea	(Player_2).w,a1
		tst.l	(a1)
		beq.s	locret_3907C

; =============== S U B R O U T I N E =======================================


sub_39076:
		move.b	#3,$2E(a1)

locret_3907C:
		rts
; End of function sub_39076

; ---------------------------------------------------------------------------

loc_3907E:
		move.b	#1,(Ctrl_1_locked).w
		move.b	#1,(Ctrl_2_locked).w
		move.w	#0,(Ctrl_1_logical).w
		move.w	#0,(Ctrl_2_logical).w
		subq.b	#1,$24(a0)
		beq.s	loc_3909E
		rts
; ---------------------------------------------------------------------------

loc_3909E:
		move.l	#loc_390D0,(a0)
		lea	(Player_1).w,a1
		bsr.s	sub_390B2
		lea	(Player_2).w,a1
		tst.l	(a1)
		beq.s	locret_390CE

; =============== S U B R O U T I N E =======================================


sub_390B2:
		move.w	#-$B00,$1A(a1)
		bset	#1,$2A(a1)
		clr.b	$40(a1)
		move.b	#$10,$20(a1)
		move.b	#1,$2E(a1)

locret_390CE:
		rts
; End of function sub_390B2

; ---------------------------------------------------------------------------

loc_390D0:
		move.b	#1,(Ctrl_1_locked).w
		move.b	#1,(Ctrl_2_locked).w
		move.w	#0,(Ctrl_1_logical).w
		move.w	#0,(Ctrl_2_logical).w
		lea	(Player_1).w,a2
		cmpi.w	#$5C0,$14(a2)
		bcc.s	loc_3913A
		move.b	#0,$2E(a2)
		move.w	#$400,(Dust+anim).w
		move.w	#$5C0,(Dust+y_pos).w
		lea	(Player_2).w,a2
		tst.l	(a2)
		beq.s	loc_39120
		move.b	#0,$2E(a2)
		move.w	#$400,(Dust_P2+anim).w
		move.w	#$5C0,(Dust_P2+y_pos).w

loc_39120:
		moveq	#signextendB(sfx_SandSplash),d0
		jsr	(Play_Sound_2).l
		move.b	#0,(Ctrl_1_locked).w
		move.b	#0,(Ctrl_2_locked).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3913A:
		bsr.s	sub_39144
		lea	(Player_2).w,a2
		tst.l	(a2)
		beq.s	locret_39162

; =============== S U B R O U T I N E =======================================


sub_39144:
		move.w	$18(a2),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$10(a2)
		move.w	$1A(a2),d0
		addi.w	#$38,$1A(a2)
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$14(a2)

locret_39162:
		rts
; End of function sub_39144

; ---------------------------------------------------------------------------

Obj_LevelIntroICZ1Tails:
		lea	(Player_1).w,a1
		move.w	#$800,$18(a1)
		move.w	#$480,$1A(a1)
		move.w	#$800,$1C(a1)
		bset	#1,$2A(a1)
		move.b	#0,$40(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		bset	#2,$2A(a1)
		move.b	#3,$2E(a1)
		move.b	#1,(Ctrl_1_locked).w
		move.w	#0,(Ctrl_1_logical).w
		move.w	#0,(Ctrl_1).w
		move.b	#$1E,$24(a0)
		move.l	#loc_391C2,(a0)

loc_391C2:
		move.b	#1,(Ctrl_1_locked).w
		move.w	#0,(Ctrl_1_logical).w
		move.w	#0,(Ctrl_2_logical).w
		subq.b	#1,$24(a0)
		beq.s	loc_391DC
		rts
; ---------------------------------------------------------------------------

loc_391DC:
		lea	(Player_1).w,a2
		move.b	#0,$2E(a2)
		move.l	#loc_391EC,(a0)

loc_391EC:
		move.b	#1,(Ctrl_1_locked).w
		move.w	#0,(Ctrl_1_logical).w
		lea	(Player_1).w,a2
		cmpi.w	#$38F0,$10(a2)
		bcs.s	locret_3923C
		bset	#1,$2A(a2)
		move.w	#-$200,$18(a2)
		move.w	#-$400,$1A(a2)
		move.b	#$19,$20(a2)
		move.b	#0,$2E(a2)
		move.b	#0,(Ctrl_1_locked).w
		move.w	#$14,(Screen_shake_flag).w
		moveq	#signextendB(sfx_Crash),d0
		jsr	(Play_Sound_2).l
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

locret_3923C:
		rts
; ---------------------------------------------------------------------------

LevelSetup:
		clr.b	(Background_collision_flag).w
		clr.l	(Plane_double_update_flag).w
		clr.w	(Special_events_routine).w
		clr.l	(Level_repeat_offset).w
		clr.l	(Events_routine_fg).w
		clr.l	(Events_fg_4).w
		clr.w	(Screen_shake_flag).w
		clr.l	(Screen_shake_offset).w
		clr.l	(Events_bg+$00).w
		clr.l	(Events_bg+$04).w
		clr.l	(Events_bg+$08).w
		clr.l	(Events_bg+$0C).w
		move.w	#$FFF,(Screen_Y_wrap_value).w
		move.w	#$FF0,(Camera_Y_pos_mask).w
		move.w	#$7C,(Layout_row_index_mask).w
		move.w	(Camera_X_pos).w,(Camera_X_pos_copy).w
		move.w	(Camera_Y_pos).w,(Camera_Y_pos_copy).w
		lea	(Plane_buffer).w,a0
		lea	(Block_table).w,a2
		lea	(Level_layout_main).w,a3
		move.w	#$C000,d7
		move.w	(Current_zone_and_act).w,d0
		ror.b	#2,d0
		lsr.w	#3,d0
		movea.l	Offs_ScreenInit(pc,d0.w),a1
		jsr	(a1)
		addq.w	#2,a3
		move.w	#$E000,d7
		move.w	(Current_zone_and_act).w,d0
		ror.b	#2,d0
		lsr.w	#3,d0
		movea.l	Offs_BackgroundInit(pc,d0.w),a1
		jsr	(a1)
		move.w	(Camera_Y_pos_copy).w,(V_scroll_value).w
		move.w	(Camera_Y_pos_BG_copy).w,(V_scroll_value_BG).w
		rts

; =============== S U B R O U T I N E =======================================


ScreenEvents:
		move.w	(Camera_X_pos).w,(Camera_X_pos_copy).w
		move.w	(Camera_Y_pos).w,(Camera_Y_pos_copy).w
		lea	(Plane_buffer).w,a0
		lea	(Block_table).w,a2
		lea	(Level_layout_main).w,a3
		move.w	#$C000,d7
		move.w	(Current_zone_and_act).w,d0
		ror.b	#2,d0
		lsr.w	#3,d0
		movea.l	Offs_ScreenEvent(pc,d0.w),a1
		jsr	(a1)
		addq.w	#2,a3
		move.w	#$E000,d7
		move.w	(Current_zone_and_act).w,d0
		ror.b	#2,d0
		lsr.w	#3,d0
		movea.l	Offs_BackgroundEvent(pc,d0.w),a1
		jsr	(a1)
		move.w	(Camera_Y_pos_copy).w,(V_scroll_value).w
		move.w	(Camera_Y_pos_BG_copy).w,(V_scroll_value_BG).w
		rts
; End of function ScreenEvents

; ---------------------------------------------------------------------------
Offs_ScreenInit:dc.l AIZ1_ScreenInit
Offs_BackgroundInit:dc.l AIZ1_BackgroundInit
		dc.l AIZ2_ScreenInit
		dc.l AIZ2_BackgroundInit
Offs_ScreenEvent:dc.l AIZ1_ScreenEvent
Offs_BackgroundEvent:dc.l AIZ1_BackgroundEvent
		dc.l AIZ2_ScreenEvent
		dc.l AIZ2_BackgroundEvent
		dc.l HCZ1_ScreenInit
		dc.l HCZ1_BackgroundInit
		dc.l HCZ2_ScreenInit
		dc.l HCZ2_BackgroundInit
		dc.l HCZ1_ScreenEvent
		dc.l HCZ1_BackgroundEvent
		dc.l HCZ2_ScreenEvent
		dc.l HCZ2_BackgroundEvent
		dc.l MGZ1_ScreenInit
		dc.l MGZ1_BackgroundInit
		dc.l MGZ2_ScreenInit
		dc.l MGZ2_BackgroundInit
		dc.l MGZ1_ScreenEvent
		dc.l MGZ1_BackgroundEvent
		dc.l MGZ2_ScreenEvent
		dc.l MGZ2_BackgroundEvent
		dc.l CNZ1_ScreenInit
		dc.l CNZ1_BackgroundInit
		dc.l CNZ2_ScreenInit
		dc.l CNZ2_BackgroundInit
		dc.l CNZ1_ScreenEvent
		dc.l CNZ1_BackgroundEvent
		dc.l CNZ2_ScreenEvent
		dc.l CNZ2_BackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l ICZ1_ScreenInit
		dc.l ICZ1_BackgroundInit
		dc.l ICZ2_ScreenInit
		dc.l ICZ2_BackgroundInit
		dc.l ICZ1_ScreenEvent
		dc.l ICZ1_BackgroundEvent
		dc.l ICZ2_ScreenEvent
		dc.l ICZ2_BackgroundEvent
		dc.l LBZ1_ScreenInit
		dc.l LBZ1_BackgroundInit
		dc.l LBZ2_ScreenInit
		dc.l LBZ2_BackgroundInit
		dc.l LBZ1_ScreenEvent
		dc.l LBZ1_BackgroundEvent
		dc.l LBZ2_ScreenEvent
		dc.l LBZ2_BackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l Comp_ScreenInit
		dc.l ALZ_BackgroundInit
		dc.l Comp_ScreenInit
		dc.l ALZ_BackgroundInit
		dc.l Comp_ScreenEvent
		dc.l ALZ_BackgroundEvent
		dc.l Comp_ScreenEvent
		dc.l ALZ_BackgroundEvent
		dc.l Comp_ScreenInit
		dc.l BPZ_BackgroundInit
		dc.l Comp_ScreenInit
		dc.l BPZ_BackgroundInit
		dc.l Comp_ScreenEvent
		dc.l BPZ_BackgroundEvent
		dc.l Comp_ScreenEvent
		dc.l BPZ_BackgroundEvent
		dc.l Comp_ScreenInit
		dc.l DPZ_BackgroundInit
		dc.l Comp_ScreenInit
		dc.l DPZ_BackgroundInit
		dc.l Comp_ScreenEvent
		dc.l DPZ_BackgroundEvent
		dc.l Comp_ScreenEvent
		dc.l DPZ_BackgroundEvent
		dc.l Comp_ScreenInit
		dc.l CGZ_BackgroundInit
		dc.l Comp_ScreenInit
		dc.l CGZ_BackgroundInit
		dc.l CGZ_ScreenEvent
		dc.l CGZ_BackgroundEvent
		dc.l CGZ_ScreenEvent
		dc.l CGZ_BackgroundEvent
		dc.l Comp_ScreenInit
		dc.l EMZ_BackgroundInit
		dc.l Comp_ScreenInit
		dc.l EMZ_BackgroundInit
		dc.l Comp_ScreenEvent
		dc.l EMZ_BackgroundEvent
		dc.l Comp_ScreenEvent
		dc.l EMZ_BackgroundEvent
		dc.l Gumball_ScreenInit
		dc.l Gumball_BackgroundInit
		dc.l Gumball_ScreenInit
		dc.l Gumball_BackgroundInit
		dc.l Gumball_ScreenEvent
		dc.l Gumball_BackgroundEvent
		dc.l Gumball_ScreenEvent
		dc.l Gumball_BackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenInit
		dc.l NoBackgroundInit
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent
		dc.l NoScreenEvent
		dc.l NoBackgroundEvent

; =============== S U B R O U T I N E =======================================


VInt_DrawLevel:
		lea	(VDP_data_port).l,a6
		lea	(Plane_buffer).w,a0
; End of function VInt_DrawLevel


; =============== S U B R O U T I N E =======================================


VInt_DrawLevel_2:
		move.w	(a0),d0
		beq.s	VInt_DrawLevel_Done
		clr.w	(a0)+
		move.w	(a0)+,d1
		bmi.s	VInt_DrawLevel_Col
		move.w	#$8F02,d2
		move.w	#$80,d3
		bra.s	VInt_DrawLevel_Draw
; ---------------------------------------------------------------------------

VInt_DrawLevel_Col:
		move.w	#$8F80,d2
		moveq	#2,d3
		andi.w	#$7FFF,d1

VInt_DrawLevel_Draw:
		move.w	d2,VDP_control_port-VDP_data_port(a6)
		move.w	d0,d2
		move.w	d1,d4
		bsr.s	VInt_VRAMWrite
		move.w	d2,d0
		add.w	d3,d0
		move.w	d4,d1
		bsr.s	VInt_VRAMWrite
		bra.s	VInt_DrawLevel_2
; ---------------------------------------------------------------------------

VInt_DrawLevel_Done:
		move.w	#$8F02,VDP_control_port-VDP_data_port(a6)
		rts
; End of function VInt_DrawLevel_2


; =============== S U B R O U T I N E =======================================


VInt_VRAMWrite:
		swap	d0
		clr.w	d0
		swap	d0
		lsl.l	#2,d0
		lsr.w	#2,d0
		ori.w	#$4000,d0
		swap	d0
		move.l	d0,4(a6)

loc_39670:
		move.l	(a0)+,(a6)
		dbf	d1,loc_39670
		rts
; End of function VInt_VRAMWrite


; =============== S U B R O U T I N E =======================================


SpecialVInt_VRAMRead:
		swap	d0
		clr.w	d0
		swap	d0
		lsl.l	#2,d0
		lsr.w	#2,d0
		swap	d0
		move.l	d0,4(a6)

loc_39688:
		move.l	(a6),(a0)+
		dbf	d1,loc_39688
		rts
; End of function SpecialVInt_VRAMRead


; =============== S U B R O U T I N E =======================================


sub_39690:
		lea	(VDP_data_port).l,a6
		lea	(Plane_buffer).w,a0

loc_3969A:
		move.w	(a0),d0
		beq.s	locret_396B4
		clr.w	(a0)+
		move.w	(a0)+,d1
		move.w	d0,d2
		move.w	d1,d4
		bsr.s	VInt_VRAMWrite
		move.w	d2,d0
		add.w	(_unkEEB0).w,d0
		move.w	d4,d1
		bsr.s	VInt_VRAMWrite
		bra.s	loc_3969A
; ---------------------------------------------------------------------------

locret_396B4:
		rts
; End of function sub_39690


; =============== S U B R O U T I N E =======================================


SpecialVInt_Function:
		lea	(VDP_data_port).l,a6
		move.w	(Special_V_int_routine).w,d0
		jmp	SpecialVInt_Array(pc,d0.w)
; End of function SpecialVInt_Function

; ---------------------------------------------------------------------------

SpecialVInt_Array:
		rts
; ---------------------------------------------------------------------------
		nop
		bra.w	SpecialVInt_VScrollOn
; ---------------------------------------------------------------------------
		bra.w	SpecialVInt_VScrollCopy
; ---------------------------------------------------------------------------
		bra.w	SpecialVInt_VScrollOff
; ---------------------------------------------------------------------------
		bra.w	SpecialVInt_LBZ2WindowCopy
; ---------------------------------------------------------------------------
		bra.w	SpecialVInt_LBZ2ScrollAClear
; ---------------------------------------------------------------------------
		bra.w	SpecialVInt_LBZ2ScrollAClear2
; ---------------------------------------------------------------------------
		bra.w	SpecialVInt_LBZ2WindowClear
; ---------------------------------------------------------------------------

SpecialVInt_VScrollOn:
		move.w	#$8B07,VDP_control_port-VDP_data_port(a6)
		addq.w	#4,(Special_V_int_routine).w

SpecialVInt_VScrollCopy:
		lea	(Vscroll_buffer).w,a0
		move.l	#$40000010,VDP_control_port-VDP_data_port(a6)
		moveq	#$13,d0

loc_396FC:
		move.l	(a0)+,(a6)
		dbf	d0,loc_396FC
		rts
; ---------------------------------------------------------------------------

SpecialVInt_VScrollOff:
		move.w	#$8B03,VDP_control_port-VDP_data_port(a6)
		clr.w	(Special_V_int_routine).w
		rts
; ---------------------------------------------------------------------------

SpecialVInt_LBZ2WindowCopy:
		lea	(VRAM_buffer).w,a0
		move.w	(Draw_delayed_rowcount).w,d0
		addi.w	#$D,d0
		andi.w	#$1F,d0
		lsl.w	#7,d0
		addi.w	#$C000,d0
		move.w	d0,d2
		addi.w	#$64,d0
		moveq	#6,d1
		jsr	SpecialVInt_VRAMRead(pc)
		move.w	d2,d0
		moveq	#$18,d1
		jsr	SpecialVInt_VRAMRead(pc)
		lea	(VRAM_buffer).w,a0
		move.w	(Draw_delayed_rowcount).w,d0
		lsl.w	#7,d0
		addi.w	#$8000,d0
		moveq	#$1F,d1
		jsr	VInt_VRAMWrite(pc)
		subq.w	#1,(Draw_delayed_rowcount).w
		bpl.s	locret_39758
		addq.w	#4,(Special_V_int_routine).w

locret_39758:
		rts
; ---------------------------------------------------------------------------

SpecialVInt_LBZ2ScrollAClear:
		move.l	#$49000003,(VDP_control_port).l
		moveq	#0,d0
		moveq	#$5F,d1

loc_39768:
		move.l	d0,(a6)
		move.l	d0,(a6)
		dbf	d1,loc_39768
		move.w	#$8320,VDP_control_port-VDP_data_port(a6)
		move.w	#$9285,VDP_control_port-VDP_data_port(a6)
		clr.w	(Special_V_int_routine).w
		rts
; ---------------------------------------------------------------------------

SpecialVInt_LBZ2ScrollAClear2:
		move.l	#$46000003,(VDP_control_port).l
		moveq	#0,d0
		moveq	#$5F,d1

loc_39790:
		move.l	d0,(a6)
		move.l	d0,(a6)
		dbf	d1,loc_39790
		addq.w	#4,(Special_V_int_routine).w
		rts
; ---------------------------------------------------------------------------

SpecialVInt_LBZ2WindowClear:
		lea	(VRAM_buffer).w,a0
		move.w	#$829C,d0
		moveq	#$18,d1
		jsr	SpecialVInt_VRAMRead(pc)
		move.w	#$8280,d0
		moveq	#6,d1
		jsr	SpecialVInt_VRAMRead(pc)
		move.l	#$49000003,(VDP_control_port).l
		moveq	#5,d0

loc_397C2:
		lea	(VRAM_buffer).w,a0
		moveq	#$F,d1

loc_397C8:
		move.l	(a0)+,(a6)
		move.l	(a0)+,(a6)
		dbf	d1,loc_397C8
		dbf	d0,loc_397C2
		move.w	#$9200,VDP_control_port-VDP_data_port(a6)
		clr.w	(Special_V_int_routine).w
		rts

; =============== S U B R O U T I N E =======================================


Draw_TileColumn:
		move.w	(a6),d0
		andi.w	#-$10,d0
		move.w	(a5),d2
		move.w	d0,(a5)
		move.w	d2,d3
		sub.w	d0,d2
		beq.w	locret_3996C
		tst.b	d2
		bpl.s	loc_397FE
		neg.w	d2
		move.w	d3,d0
		addi.w	#$150,d0

loc_397FE:
		andi.w	#$30,d2
		cmpi.w	#$10,d2
		sne	(Plane_double_update_flag).w
		movem.w	d1/d6,-(sp)
		bsr.s	Setup_TileColumnDraw
		movem.w	(sp)+,d1/d6
		tst.b	(Plane_double_update_flag).w
		beq.w	locret_3996C
		addi.w	#$10,d0
		bra.s	Setup_TileColumnDraw
; End of function Draw_TileColumn


; =============== S U B R O U T I N E =======================================


Draw_TileColumn2:
		move.w	(a6),d0
		andi.w	#-$10,d0
		move.w	(a5),d2
		move.w	d0,(a5)
		move.w	d2,d3
		sub.w	d0,d2
		beq.w	locret_3996C
		tst.b	d2
		bpl.s	loc_39842
		neg.w	d2
		move.w	d3,d0
		addi.w	#$150,d0
		swap	d1

loc_39842:
		andi.w	#$30,d2
		cmpi.w	#$10,d2
		sne	(Plane_double_update_flag).w
		movem.w	d1/d6,-(sp)
		bsr.s	Setup_TileColumnDraw
		movem.w	(sp)+,d1/d6
		tst.b	(Plane_double_update_flag).w
		beq.w	locret_3996C
		addi.w	#$10,d0
; End of function Draw_TileColumn2


; =============== S U B R O U T I N E =======================================


Setup_TileColumnDraw:
		move.w	d1,d2
		andi.w	#$70,d2
		move.w	d1,d3
		lsl.w	#4,d3
		andi.w	#$F00,d3
		asr.w	#4,d1
		move.w	d1,d4
		asr.w	#1,d1
		and.w	(Layout_row_index_mask).w,d1
		andi.w	#$F,d4
		moveq	#$10,d5
		sub.w	d4,d5
		move.w	d5,d4
		sub.w	d6,d5
		bmi.s	loc_398B2
		move.w	d0,d5
		asr.w	#2,d5
		andi.w	#$7C,d5
		add.w	d7,d5
		add.w	d3,d5
		move.w	d5,(a0)+
		move.w	d6,d5
		subq.w	#1,d6
		move.w	d6,(a0)+
		bset	#7,-2(a0)
		lea	(a0),a1
		add.w	d5,d5
		add.w	d5,d5
		adda.w	d5,a0
		jsr	Get_LevelChunkColumn(pc)
		bra.s	loc_39900
; ---------------------------------------------------------------------------

loc_398B2:
		neg.w	d5
		move.w	d5,-(sp)
		move.w	d0,d5
		asr.w	#2,d5
		andi.w	#$7C,d5
		add.w	d7,d5
		add.w	d3,d5
		move.w	d5,(a0)+
		move.w	d4,d6
		subq.w	#1,d6
		move.w	d6,(a0)+
		bset	#7,-2(a0)
		lea	(a0),a1
		add.w	d4,d4
		add.w	d4,d4
		adda.w	d4,a0
		jsr	Get_LevelChunkColumn(pc)
		bsr.s	loc_39900
		move.w	(sp)+,d6
		move.w	d0,d5
		asr.w	#2,d5
		andi.w	#$7C,d5
		add.w	d7,d5
		move.w	d5,(a0)+
		move.w	d6,d5
		subq.w	#1,d6
		move.w	d6,(a0)+
		bset	#7,-2(a0)
		lea	(a0),a1
		add.w	d5,d5
		add.w	d5,d5
		adda.w	d5,a0

loc_39900:
		swap	d7

loc_39902:
		move.w	(a5,d2.w),d3
		move.w	d3,d4
		andi.w	#$3FF,d3
		lsl.w	#3,d3
		move.w	(a2,d3.w),d5
		swap	d5
		move.w	4(a2,d3.w),d5
		move.w	6(a2,d3.w),d7
		move.w	2(a2,d3.w),d3
		swap	d3
		move.w	d7,d3
		btst	#$B,d4
		beq.s	loc_3993A
		eori.l	#$10001000,d5
		eori.l	#$10001000,d3
		swap	d5
		swap	d3

loc_3993A:
		btst	#$A,d4
		beq.s	loc_3994E
		eori.l	#$8000800,d5
		eori.l	#$8000800,d3
		exg	d3,d5

loc_3994E:
		move.l	d5,(a1)+
		move.l	d3,(a0)+
		addi.w	#$10,d2
		andi.w	#$70,d2
		bne.s	loc_39964
		addq.w	#4,d1
		and.w	(Layout_row_index_mask).w,d1
		bsr.s	Get_LevelChunkColumn

loc_39964:
		dbf	d6,loc_39902
		swap	d7
		clr.w	(a0)

locret_3996C:
		rts
; End of function Setup_TileColumnDraw


; =============== S U B R O U T I N E =======================================


Get_LevelChunkColumn:
		movea.w	(a3,d1.w),a4
		move.w	d0,d3
		asr.w	#7,d3
		adda.w	d3,a4
		moveq	#-1,d3
		clr.w	d3
		move.b	(a4),d3
		lsl.w	#7,d3
		move.w	d0,d4
		asr.w	#3,d4
		andi.w	#$E,d4
		add.w	d4,d3
		movea.l	d3,a5
		rts
; End of function Get_LevelChunkColumn


; =============== S U B R O U T I N E =======================================


Draw_TileRow:
		move.w	(a6),d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	(a5),d2
		move.w	d0,(a5)
		move.w	d2,d3
		sub.w	d0,d2
		beq.w	locret_39AFC
		tst.b	d2
		bpl.s	loc_399B0
		neg.w	d2
		move.w	d3,d0
		addi.w	#$F0,d0
		and.w	(Camera_Y_pos_mask).w,d0

loc_399B0:
		andi.w	#$30,d2
		cmpi.w	#$10,d2
		sne	(Plane_double_update_flag).w
		movem.w	d1/d6,-(sp)
		bsr.s	Setup_TileRowDraw
		movem.w	(sp)+,d1/d6
		tst.b	(Plane_double_update_flag).w
		beq.w	locret_39AFC
		addi.w	#$10,d0
		and.w	(Camera_Y_pos_mask).w,d0
		bra.s	Setup_TileRowDraw
; End of function Draw_TileRow


; =============== S U B R O U T I N E =======================================


Draw_TileRow2:
		move.w	(a6),d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	(a5),d2
		move.w	d0,(a5)
		move.w	d2,d3
		sub.w	d0,d2
		beq.w	locret_39AFC
		tst.b	d2
		bpl.s	loc_399FC
		neg.w	d2
		move.w	d3,d0
		addi.w	#$F0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		swap	d1

loc_399FC:
		andi.w	#$30,d2
		cmpi.w	#$10,d2
		sne	(Plane_double_update_flag).w
		movem.w	d1/d6,-(sp)
		bsr.s	Setup_TileRowDraw
		movem.w	(sp)+,d1/d6
		tst.b	(Plane_double_update_flag).w
		beq.w	locret_39AFC
		addi.w	#$10,d0
		and.w	(Camera_Y_pos_mask).w,d0
; End of function Draw_TileRow2


; =============== S U B R O U T I N E =======================================


Setup_TileRowDraw:
		asr.w	#4,d1
		move.w	d1,d2
		move.w	d1,d4
		asr.w	#3,d1
		add.w	d2,d2
		move.w	d2,d3
		andi.w	#$E,d2
		add.w	d3,d3
		andi.w	#$7C,d3
		andi.w	#$1F,d4
		moveq	#$20,d5
		sub.w	d4,d5
		move.w	d5,d4
		sub.w	d6,d5
		bmi.s	loc_39A68
		move.w	d0,d5
		andi.w	#$F0,d5
		lsl.w	#4,d5
		add.w	d7,d5
		add.w	d3,d5
		move.w	d5,(a0)+
		move.w	d6,d5
		subq.w	#1,d6
		move.w	d6,(a0)+
		lea	(a0),a1
		add.w	d5,d5
		add.w	d5,d5
		adda.w	d5,a0
		jsr	Get_LevelAddrChunkRow(pc)
		bra.s	loc_39AA8
; ---------------------------------------------------------------------------

loc_39A68:
		neg.w	d5
		move.w	d5,-(sp)
		move.w	d0,d5
		andi.w	#$F0,d5
		lsl.w	#4,d5
		add.w	d7,d5
		add.w	d3,d5
		move.w	d5,(a0)+
		move.w	d4,d6
		subq.w	#1,d6
		move.w	d6,(a0)+
		lea	(a0),a1
		add.w	d4,d4
		add.w	d4,d4
		adda.w	d4,a0
		bsr.s	Get_LevelAddrChunkRow
		bsr.s	loc_39AA8
		move.w	(sp)+,d6
		move.w	d0,d5
		andi.w	#$F0,d5
		lsl.w	#4,d5
		add.w	d7,d5
		move.w	d5,(a0)+
		move.w	d6,d5
		subq.w	#1,d6
		move.w	d6,(a0)+
		lea	(a0),a1
		add.w	d5,d5
		add.w	d5,d5
		adda.w	d5,a0

loc_39AA8:
		move.w	(a5,d2.w),d3
		move.w	d3,d4
		andi.w	#$3FF,d3
		lsl.w	#3,d3
		move.l	(a2,d3.w),d5
		move.l	4(a2,d3.w),d3
		btst	#$B,d4
		beq.s	loc_39AD0
		eori.l	#$10001000,d5
		eori.l	#$10001000,d3
		exg	d3,d5

loc_39AD0:
		btst	#$A,d4
		beq.s	loc_39AE6
		eori.l	#$8000800,d5
		eori.l	#$8000800,d3
		swap	d5
		swap	d3

loc_39AE6:
		move.l	d5,(a1)+
		move.l	d3,(a0)+
		addq.w	#2,d2
		andi.w	#$E,d2
		bne.s	loc_39AF6
		addq.w	#1,d1
		bsr.s	Get_ChunkRow

loc_39AF6:
		dbf	d6,loc_39AA8
		clr.w	(a0)

locret_39AFC:
		rts
; End of function Setup_TileRowDraw


; =============== S U B R O U T I N E =======================================


Get_LevelAddrChunkRow:
		move.w	d0,d3
		asr.w	#5,d3
		and.w	(Layout_row_index_mask).w,d3
		movea.w	(a3,d3.w),a4

Get_ChunkRow:
		moveq	#-1,d3
		clr.w	d3
		move.b	(a4,d1.w),d3
		lsl.w	#7,d3
		move.w	d0,d4
		andi.w	#$70,d4
		add.w	d4,d3
		movea.l	d3,a5
		rts
; End of function Get_LevelAddrChunkRow


; =============== S U B R O U T I N E =======================================


sub_39B20:
		asr.w	#3,d1
		move.w	d1,d2
		asr.w	#4,d1
		andi.w	#$E,d2
		cmpi.w	#$100,(_unkEEB0).w
		beq.s	loc_39B3A
		moveq	#4,d3
		move.w	#$1F80,d4
		bra.s	loc_39B40
; ---------------------------------------------------------------------------

loc_39B3A:
		moveq	#5,d3
		move.w	#$1F00,d4

loc_39B40:
		move.w	d0,d5
		lsl.w	d3,d5
		and.w	d4,d5
		add.w	d7,d5
		move.w	d5,(a0)+
		move.w	d6,d5
		subq.w	#1,d6
		move.w	d6,(a0)+
		lea	(a0),a1
		add.w	d5,d5
		add.w	d5,d5
		adda.w	d5,a0
		jsr	Get_LevelAddrChunkRow(pc)
		bra.w	loc_39AA8
; End of function sub_39B20


; =============== S U B R O U T I N E =======================================


Refresh_PlaneFull:
		moveq	#$F,d2

loc_39B62:
		movem.l	d0-d2/a0,-(sp)
		moveq	#$20,d6
		jsr	Setup_TileRowDraw(pc)
		jsr	VInt_DrawLevel(pc)
		movem.l	(sp)+,d0-d2/a0
		addi.w	#$10,d0
		dbf	d2,loc_39B62
		rts
; End of function Refresh_PlaneFull


; =============== S U B R O U T I N E =======================================


Refresh_PlaneTileDeform:
		move.w	(a4)+,d2
		moveq	#$F,d3

loc_39B82:
		cmp.w	d2,d0
		bmi.s	loc_39B8C
		add.w	(a4)+,d2
		addq.w	#4,a5
		bra.s	loc_39B82
; ---------------------------------------------------------------------------

loc_39B8C:
		move.w	(a5),d1
		moveq	#$20,d6
		movem.l	d0/d2-d3/a0/a4-a5,-(sp)
		jsr	Setup_TileRowDraw(pc)
		jsr	VInt_DrawLevel(pc)
		movem.l	(sp)+,d0/d2-d3/a0/a4-a5
		addi.w	#$10,d0
		dbf	d3,loc_39B82
		rts
; End of function Refresh_PlaneTileDeform

; ---------------------------------------------------------------------------

RefreshPlaneDirectVScroll:
		move.w	(a4)+,d2
		moveq	#$1F,d3

loc_39BAE:
		cmp.w	d2,d0
		bmi.s	loc_39BB8
		add.w	(a4)+,d2
		addq.w	#4,a5
		bra.s	loc_39BAE
; ---------------------------------------------------------------------------

loc_39BB8:
		move.w	(a5),d1
		moveq	#$10,d6
		movem.l	d0/d2-d3/a0/a4-a5,-(sp)
		jsr	Setup_TileColumnDraw(pc)
		jsr	VInt_DrawLevel(pc)
		movem.l	(sp)+,d0/d2-d3/a0/a4-a5
		addi.w	#$10,d0
		dbf	d3,loc_39BAE
		rts
; ---------------------------------------------------------------------------

loc_39BD6:
		movem.l	d0-d2/d6/a0,-(sp)
		jsr	sub_39B20(pc)
		jsr	sub_39690(pc)
		movem.l	(sp)+,d0-d2/d6/a0
		addi.w	#$10,d0
		dbf	d2,loc_39BD6
		rts
; ---------------------------------------------------------------------------

Refresh_PlaneScreenDirect:
		move	#$2700,sr
		move.w	(Camera_Y_pos_copy).w,d0
		move.w	(Camera_X_pos_copy).w,d1
		moveq	#$E,d2

loc_39BFE:
		movem.l	d0-d2/a0,-(sp)
		moveq	#$15,d6
		jsr	Setup_TileRowDraw(pc)
		jsr	VInt_DrawLevel(pc)
		movem.l	(sp)+,d0-d2/a0
		addi.w	#$10,d0
		dbf	d2,loc_39BFE
		move	#$2300,sr
		rts

; =============== S U B R O U T I N E =======================================


DrawTilesAsYouMove:
		lea	(Camera_X_pos_copy).w,a6
		lea	(Camera_X_pos_rounded).w,a5
		move.w	(Camera_Y_pos_copy).w,d1
		moveq	#$F,d6
		jsr	Draw_TileColumn(pc)
		lea	(Camera_Y_pos_copy).w,a6
		lea	(Camera_Y_pos_rounded).w,a5
		move.w	(Camera_X_pos_copy).w,d1
		moveq	#$15,d6
		jmp	Draw_TileRow(pc)
; End of function DrawTilesAsYouMove


; =============== S U B R O U T I N E =======================================


DrawBGAsYouMove:
		lea	(Camera_X_pos_BG_copy).w,a6
		lea	(Camera_X_pos_BG_rounded).w,a5
		move.w	(Camera_Y_pos_BG_copy).w,d1
		moveq	#$F,d6
		jsr	Draw_TileColumn(pc)
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		move.w	(Camera_X_pos_BG_copy).w,d1
		moveq	#$15,d6
		jmp	Draw_TileRow(pc)
; End of function DrawBGAsYouMove

; ---------------------------------------------------------------------------
		movem.l	d5/a4-a5,-(sp)
		lea	(Camera_Y_pos_copy).w,a6
		jsr	Get_DeformDrawPosVert(pc)
		lea	(Camera_Y_pos_rounded).w,a5
		jsr	Draw_TileRow2(pc)
		movem.l	(sp)+,d5/a4/a6
		move.w	(Camera_Y_pos_rounded).w,d6
		bra.s	Draw_BGNoVert

; =============== S U B R O U T I N E =======================================


Draw_BG:
		movem.l	d5/a4-a5,-(sp)
		lea	(Camera_Y_pos_BG_copy).w,a6
		jsr	Get_DeformDrawPosVert(pc)
		lea	(Camera_Y_pos_BG_rounded).w,a5
		jsr	Draw_TileRow2(pc)
		movem.l	(sp)+,d5/a4/a6
		move.w	(Camera_Y_pos_BG_rounded).w,d6

Draw_BGNoVert:
		move.w	d6,d1

loc_39CA2:
		sub.w	(a4)+,d6
		bmi.s	loc_39CB2
		move.w	(a6)+,d0
		andi.w	#-$10,d0
		move.w	d0,(a6)+
		subq.w	#1,d5
		bra.s	loc_39CA2
; ---------------------------------------------------------------------------

loc_39CB2:
		neg.w	d6
		lsr.w	#4,d6
		moveq	#$F,d4
		sub.w	d6,d4
		bcc.s	loc_39CC0
		moveq	#0,d4
		moveq	#$F,d6

loc_39CC0:
		movem.w	d1/d4-d6,-(sp)
		movem.l	a4/a6,-(sp)
		lea	2(a6),a5
		jsr	Draw_TileColumn(pc)
		movem.l	(sp)+,a4/a6
		movem.w	(sp)+,d1/d4-d6
		addq.w	#4,a6
		tst.w	d4
		beq.s	loc_39CF4
		lsl.w	#4,d6
		add.w	d6,d1
		subq.w	#1,d5
		move.w	(a4)+,d6
		lsr.w	#4,d6
		move.w	d4,d0
		sub.w	d6,d4
		bpl.s	loc_39CC0
		move.w	d0,d6
		moveq	#0,d4
		bra.s	loc_39CC0
; ---------------------------------------------------------------------------

loc_39CF4:
		subq.w	#1,d5
		beq.s	locret_39D02
		move.w	(a6)+,d0
		andi.w	#-$10,d0
		move.w	d0,(a6)+
		bra.s	loc_39CF4
; ---------------------------------------------------------------------------

locret_39D02:
		rts
; End of function Draw_BG


; =============== S U B R O U T I N E =======================================


Get_DeformDrawPosVert:
		move.w	(a4)+,d2
		move.w	(a6),d0
		bsr.s	sub_39D0E
		addi.w	#$E0,d0
; End of function Get_DeformDrawPosVert


; =============== S U B R O U T I N E =======================================


sub_39D0E:
		cmp.w	d2,d0
		bmi.s	loc_39D18
		add.w	(a4)+,d2
		addq.w	#4,a5
		bra.s	sub_39D0E
; ---------------------------------------------------------------------------

loc_39D18:
		move.w	(a5),d1
		swap	d1
		rts
; End of function sub_39D0E

; ---------------------------------------------------------------------------

DrawTilesVDeform:
		movem.l	d5/a4-a5,-(sp)
		lea	(Camera_X_pos_copy).w,a6
		jsr	Get_XDeformRange(pc)
		lea	(Camera_X_pos_rounded).w,a5
		jsr	Draw_TileColumn2(pc)
		movem.l	(sp)+,d5/a4/a6
		move.w	(Camera_X_pos_rounded).w,d6
		bra.s	loc_39D58
; ---------------------------------------------------------------------------

DrawTilesVDeform2:
		movem.l	d5/a4-a5,-(sp)
		lea	(Camera_X_pos_BG_copy).w,a6
		jsr	Get_XDeformRange(pc)
		lea	(Camera_X_pos_BG_rounded).w,a5
		jsr	Draw_TileColumn2(pc)
		movem.l	(sp)+,d5/a4/a6
		move.w	(Camera_X_pos_BG_rounded).w,d6

loc_39D58:
		move.w	d6,d1

loc_39D5A:
		sub.w	(a4)+,d6
		bcs.s	loc_39D6A
		move.w	(a6)+,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(a6)+
		subq.w	#1,d5
		bra.s	loc_39D5A
; ---------------------------------------------------------------------------

loc_39D6A:
		neg.w	d6
		lsr.w	#4,d6
		moveq	#$15,d4
		sub.w	d6,d4
		bcc.s	loc_39D78
		moveq	#0,d4
		moveq	#$15,d6

loc_39D78:
		movem.w	d1/d4-d6,-(sp)
		movem.l	a4/a6,-(sp)
		lea	2(a6),a5
		jsr	Draw_TileRow(pc)
		movem.l	(sp)+,a4/a6
		movem.w	(sp)+,d1/d4-d6
		addq.w	#4,a6
		tst.w	d4
		beq.s	loc_39DAC
		lsl.w	#4,d6
		add.w	d6,d1
		subq.w	#1,d5
		move.w	(a4)+,d6
		lsr.w	#4,d6
		move.w	d4,d0
		sub.w	d6,d4
		bcc.s	loc_39D78
		move.w	d0,d6
		moveq	#0,d4
		bra.s	loc_39D78
; ---------------------------------------------------------------------------

loc_39DAC:
		subq.w	#1,d5
		beq.s	locret_39DBA
		move.w	(a6)+,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(a6)+
		bra.s	loc_39DAC
; ---------------------------------------------------------------------------

locret_39DBA:
		rts

; =============== S U B R O U T I N E =======================================


Get_XDeformRange:
		move.w	(a4)+,d2
		move.w	(a6),d0
		bsr.s	sub_39DC6
		addi.w	#$140,d0
; End of function Get_XDeformRange


; =============== S U B R O U T I N E =======================================


sub_39DC6:
		cmp.w	d2,d0
		bcs.s	loc_39DD0
		add.w	(a4)+,d2
		addq.w	#4,a5
		bra.s	sub_39DC6
; ---------------------------------------------------------------------------

loc_39DD0:
		move.w	(a5),d1
		swap	d1
		rts
; End of function sub_39DC6


; =============== S U B R O U T I N E =======================================


Draw_PlaneVertBottomUp:
		movem.w	d1-d2,-(sp)
		bsr.s	Draw_PlaneVertSingleBottomUp
		movem.w	(sp)+,d1-d2
		bpl.s	Draw_PlaneVertSingleBottomUp
		rts
; End of function Draw_PlaneVertBottomUp


; =============== S U B R O U T I N E =======================================


Draw_PlaneVertSingleBottomUp:
		and.w	(Camera_Y_pos_mask).w,d2
		move.w	d2,d3
		addi.w	#$F0,d3
		and.w	(Camera_Y_pos_mask).w,d3
		move.w	(Draw_delayed_position).w,d0
		cmp.w	d2,d0
		bcs.s	loc_39E04
		cmp.w	d3,d0
		bhi.s	loc_39E04
		moveq	#$20,d6
		jsr	Setup_TileRowDraw(pc)

loc_39E04:
		subi.w	#$10,(Draw_delayed_position).w
		subq.w	#1,(Draw_delayed_rowcount).w
		rts
; End of function Draw_PlaneVertSingleBottomUp


; =============== S U B R O U T I N E =======================================


Draw_PlaneVertBottomUpComplex:
		movem.l	d1/a4-a5,-(sp)
		bsr.s	sub_39E1E
		movem.l	(sp)+,d1/a4-a5
		bpl.s	sub_39E1E
		rts
; End of function Draw_PlaneVertBottomUpComplex


; =============== S U B R O U T I N E =======================================


sub_39E1E:
		and.w	(Camera_Y_pos_mask).w,d1
		move.w	d1,d2
		addi.w	#$F0,d2
		and.w	(Camera_Y_pos_mask).w,d2
		move.w	(Draw_delayed_position).w,d0
		cmp.w	d1,d0
		bcs.s	loc_39E46
		cmp.w	d2,d0
		bhi.s	loc_39E46

loc_39E38:
		addq.w	#4,a5
		cmp.w	(a4)+,d0
		bpl.s	loc_39E38
		move.w	(a5),d1
		moveq	#$20,d6
		jsr	Setup_TileRowDraw(pc)

loc_39E46:
		subi.w	#$10,(Draw_delayed_position).w
		subq.w	#1,(Draw_delayed_rowcount).w
		rts
; End of function sub_39E1E


; =============== S U B R O U T I N E =======================================


PlainDeformation:
		lea	(H_scroll_buffer).w,a1
		move.w	(Camera_X_pos_copy).w,d0
		neg.w	d0
		swap	d0
		move.w	(Camera_X_pos_BG_copy).w,d0
		neg.w	d0
		moveq	#$37,d1

loc_39E66:
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		dbf	d1,loc_39E66
		rts
; End of function PlainDeformation


; =============== S U B R O U T I N E =======================================


MakeFGDeformArray:
		move.w	d1,d0
		lsr.w	#1,d0
		bcc.s	loc_39E80

loc_39E7A:
		move.w	(a6)+,d5
		add.w	d6,d5
		move.w	d5,(a1)+

loc_39E80:
		move.w	(a6)+,d5
		add.w	d6,d5
		move.w	d5,(a1)+
		dbf	d0,loc_39E7A
		rts
; End of function MakeFGDeformArray


; =============== S U B R O U T I N E =======================================


ApplyDeformation:
		move.w	#$DF,d1

ApplyDeformation3:
		lea	(H_scroll_buffer).w,a1
		move.w	(Camera_Y_pos_BG_copy).w,d0
		move.w	(Camera_X_pos_copy).w,d3

ApplyDeformation2:
		move.w	(a4)+,d2
		smi	d4
		bpl.s	loc_39EA6
		andi.w	#$7FFF,d2

loc_39EA6:
		sub.w	d2,d0
		bmi.s	loc_39EB8
		addq.w	#2,a5
		tst.b	d4
		beq.s	ApplyDeformation2
		subq.w	#2,a5
		add.w	d2,d2
		adda.w	d2,a5
		bra.s	ApplyDeformation2
; ---------------------------------------------------------------------------

loc_39EB8:
		tst.b	d4
		beq.s	loc_39EC2
		add.w	d0,d2
		add.w	d2,d2
		adda.w	d2,a5

loc_39EC2:
		neg.w	d0
		move.w	d1,d2
		sub.w	d0,d2
		bcc.s	loc_39ECE
		move.w	d1,d0
		addq.w	#1,d0

loc_39ECE:
		neg.w	d3
		swap	d3

loc_39ED2:
		subq.w	#1,d0

loc_39ED4:
		tst.b	d4
		beq.s	loc_39EEE
		lsr.w	#1,d0
		bcc.s	loc_39EE2

loc_39EDC:
		move.w	(a5)+,d3
		neg.w	d3
		move.l	d3,(a1)+

loc_39EE2:
		move.w	(a5)+,d3
		neg.w	d3
		move.l	d3,(a1)+
		dbf	d0,loc_39EDC
		bra.s	loc_39EFE
; ---------------------------------------------------------------------------

loc_39EEE:
		move.w	(a5)+,d3
		neg.w	d3
		lsr.w	#1,d0
		bcc.s	loc_39EF8

loc_39EF6:
		move.l	d3,(a1)+

loc_39EF8:
		move.l	d3,(a1)+
		dbf	d0,loc_39EF6

loc_39EFE:
		tst.w	d2
		bmi.s	locret_39F16
		move.w	(a4)+,d0
		smi	d4
		bpl.s	loc_39F0C
		andi.w	#$7FFF,d0

loc_39F0C:
		move.w	d2,d3
		sub.w	d0,d2
		bpl.s	loc_39ED2
		move.w	d3,d0
		bra.s	loc_39ED4
; ---------------------------------------------------------------------------

locret_39F16:
		rts
; End of function ApplyDeformation


; =============== S U B R O U T I N E =======================================


ApplyFGandBGDeformation:
		swap	d7
		swap	d3

loc_39F1C:
		move.w	(a4)+,d3
		smi	d7
		bpl.s	loc_39F26
		andi.w	#$7FFF,d3

loc_39F26:
		sub.w	d3,d0
		bmi.s	loc_39F38
		addq.w	#2,a5
		tst.b	d7
		beq.s	loc_39F1C
		subq.w	#2,a5
		add.w	d3,d3
		adda.w	d3,a5
		bra.s	loc_39F1C
; ---------------------------------------------------------------------------

loc_39F38:
		tst.b	d7
		beq.s	loc_39F42
		add.w	d0,d3
		add.w	d3,d3
		adda.w	d3,a5

loc_39F42:
		swap	d3
		neg.w	d0
		move.w	d1,d4
		sub.w	d0,d4
		bcc.s	loc_39F50
		move.w	d1,d0
		addq.w	#1,d0

loc_39F50:
		subq.w	#1,d0

loc_39F52:
		tst.b	d7
		beq.s	loc_39F78
		lsr.w	#1,d0
		bcc.s	loc_39F66

loc_39F5A:
		move.w	(a2)+,d6
		swap	d6
		move.w	(a5)+,d6
		neg.w	d6
		add.w	(a6)+,d6
		move.l	d6,(a1)+

loc_39F66:
		move.w	(a2)+,d6
		swap	d6
		move.w	(a5)+,d6
		neg.w	d6
		add.w	(a6)+,d6
		move.l	d6,(a1)+
		dbf	d0,loc_39F5A
		bra.s	loc_39F98
; ---------------------------------------------------------------------------

loc_39F78:
		move.w	(a5)+,d5
		neg.w	d5
		lsr.w	#1,d0
		bcc.s	loc_39F8A

loc_39F80:
		move.w	(a2)+,d6
		swap	d6
		move.w	(a6)+,d6
		add.w	d5,d6
		move.l	d6,(a1)+

loc_39F8A:
		move.w	(a2)+,d6
		swap	d6
		move.w	(a6)+,d6
		add.w	d5,d6
		move.l	d6,(a1)+
		dbf	d0,loc_39F80

loc_39F98:
		tst.w	d4
		bmi.s	loc_39FB0
		move.w	(a4)+,d0
		smi	d7
		bpl.s	loc_39FA6
		andi.w	#$7FFF,d0

loc_39FA6:
		move.w	d4,d5
		sub.w	d0,d4
		bpl.s	loc_39F50
		move.w	d5,d0
		bra.s	loc_39F52
; ---------------------------------------------------------------------------

loc_39FB0:
		swap	d7
		rts
; End of function ApplyFGandBGDeformation


; =============== S U B R O U T I N E =======================================


Apply_FGVScroll:
		lea	(Vscroll_buffer).w,a1
		move.w	(Camera_Y_pos_BG_copy).w,d1
		move.w	(Camera_X_pos_copy).w,d0
		move.w	d0,d2
		andi.w	#$F,d2
		beq.s	loc_39FCC
		addi.w	#$10,d0

loc_39FCC:
		lsr.w	#4,d0

loc_39FCE:
		addq.w	#2,a5
		move.w	(a4)+,d2
		lsr.w	#4,d2
		sub.w	d2,d0
		bpl.s	loc_39FCE
		neg.w	d0
		moveq	#$13,d2
		sub.w	d0,d2
		bcc.s	loc_39FE2
		moveq	#$14,d0

loc_39FE2:
		subq.w	#1,d0

loc_39FE4:
		move.w	(a5)+,d3

loc_39FE6:
		move.w	d3,(a1)+
		move.w	d1,(a1)+
		dbf	d0,loc_39FE6
		tst.w	d2
		bmi.s	locret_3A000
		move.w	(a4)+,d0
		lsr.w	#4,d0
		move.w	d2,d3
		sub.w	d0,d2
		bpl.s	loc_39FE2
		move.w	d3,d0
		bra.s	loc_39FE4
; ---------------------------------------------------------------------------

locret_3A000:
		rts
; End of function Apply_FGVScroll


; =============== S U B R O U T I N E =======================================


Reset_TileOffsetPositionActual:
		move.w	(Camera_X_pos_copy).w,d0
		move.w	d0,d1
		andi.w	#$FFF0,d0
		move.w	d0,(Camera_X_pos_rounded).w
		move.w	(Camera_Y_pos_copy).w,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Camera_Y_pos_rounded).w
		rts
; End of function Reset_TileOffsetPositionActual


; =============== S U B R O U T I N E =======================================


Reset_TileOffsetPositionEff:
		move.w	(Camera_X_pos_BG_copy).w,d0
		move.w	d0,d1
		andi.w	#-$10,d0
		move.w	d0,d2
		move.w	d0,(Camera_X_pos_BG_rounded).w
		move.w	(Camera_Y_pos_BG_copy).w,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Camera_Y_pos_BG_rounded).w
		rts
; End of function Reset_TileOffsetPositionEff


; =============== S U B R O U T I N E =======================================


Update_CameraPositionP2:
		move.w	(Camera_X_pos_P2).w,(Camera_X_pos_P2_copy).w
		move.w	(Camera_Y_pos_P2).w,(Camera_Y_pos_P2_copy).w
		rts
; End of function Update_CameraPositionP2

; ---------------------------------------------------------------------------

Update_VScrollValueP2:
		move.w	(Camera_Y_pos_P2_copy).w,d0
		subi.w	#$70,d0
		move.w	d0,(V_scroll_value_P2).w
		move.w	(_unkEE74).w,d0
		subi.w	#$70,d0
		move.w	d0,(V_scroll_value_BG_P2).w
		rts

; =============== S U B R O U T I N E =======================================


SpecialEvents:
		cmpi.b	#6,(Player_1+routine).w
		bcc.s	locret_3A07E
		move.w	(Special_events_routine).w,d0
		movea.l	off_3A076(pc,d0.w),a0
		jmp	(a0)
; ---------------------------------------------------------------------------
off_3A076:	dc.l locret_3A07E
		dc.l AIZ2_DoShipLoop
; ---------------------------------------------------------------------------

locret_3A07E:
		rts
; End of function SpecialEvents


; =============== S U B R O U T I N E =======================================


Adjust_BGDuringLoop:
		move.w	(a1),d1
		move.w	d0,(a1)+
		sub.w	d1,d0
		bpl.s	loc_3A094
		neg.w	d0
		cmp.w	d2,d0
		bcs.s	loc_3A090
		sub.w	d3,d0

loc_3A090:
		sub.w	d0,(a1)+
		rts
; ---------------------------------------------------------------------------

loc_3A094:
		cmp.w	d2,d0
		bcs.s	loc_3A09A
		sub.w	d3,d0

loc_3A09A:
		add.w	d0,(a1)+
		rts
; End of function Adjust_BGDuringLoop


; =============== S U B R O U T I N E =======================================


Get_BGActualEffectiveDiff:
		move.w	(Camera_X_pos_copy).w,d0
		sub.w	(Camera_X_pos_BG_copy).w,d0
		move.w	d0,(Camera_X_diff).w
		move.w	(Camera_Y_pos_copy).w,d0
		sub.w	(Camera_Y_pos_BG_copy).w,d0
		move.w	d0,(Camera_Y_diff).w
		rts
; End of function Get_BGActualEffectiveDiff


; =============== S U B R O U T I N E =======================================


ShakeScreen_Setup:
		move.w	(Screen_shake_offset).w,(Screen_shake_last_offset).w
		cmpi.b	#6,(Player_1+routine).w
		bcc.s	loc_3A0F2
		move.w	(Screen_shake_flag).w,d0
		beq.s	loc_3A0F2
		bmi.s	loc_3A0E0
		subq.w	#1,d0
		move.w	d0,(Screen_shake_flag).w
		move.b	ScreenShakeArray(pc,d0.w),d0
		ext.w	d0
		move.w	d0,(Screen_shake_offset).w
		rts
; ---------------------------------------------------------------------------

loc_3A0E0:
		move.w	(Level_frame_counter).w,d0
		andi.w	#$3F,d0
		move.b	ScreenShakeArray2(pc,d0.w),d0
		move.w	d0,(Screen_shake_offset).w
		rts
; ---------------------------------------------------------------------------

loc_3A0F2:
		clr.w	(Screen_shake_offset).w
		rts
; End of function ShakeScreen_Setup


; =============== S U B R O U T I N E =======================================


Offset_ObjectsDuringTransition:
		lea	(Dynamic_object_RAM+object_size).w,a1
		moveq	#((Breathing_bubbles)-(Dynamic_object_RAM+object_size))/object_size-1,d2

loc_3A0FE:
		tst.l	(a1)
		beq.s	loc_3A112
		btst	#2,4(a1)
		beq.s	loc_3A112
		sub.w	d0,$10(a1)
		sub.w	d1,$14(a1)

loc_3A112:
		lea	$4A(a1),a1
		dbf	d2,loc_3A0FE
		rts
; End of function Offset_ObjectsDuringTransition

; ---------------------------------------------------------------------------
ScreenShakeArray:
		dc.b   1, -1,  1, -1,  2, -2,  2, -2,  3, -3,  3, -3,  4, -4,  4, -4
		dc.b   5, -5,  5, -5
ScreenShakeArray2:
		dc.b   1,  2,  1,  3,  1,  2,  2,  1,  2,  3,  1,  2,  1,  2,  0,  0
		dc.b   2,  0,  3,  2,  2,  3,  2,  2,  1,  3,  0,  0,  1,  0,  1,  3
		dc.b   1,  2,  1,  3,  1,  2,  2,  1,  2,  3,  1,  2,  1,  2,  0,  0
		dc.b   2,  0,  3,  2,  2,  3,  2,  2,  1,  3,  0,  0,  1,  0,  1,  3
AIZ1_WaterFGDeformDelta:
		dc.w   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0
		dc.w   0,  0,  0,  0,  0,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
		dc.w  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1
		dc.w   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0
		dc.w   0,  0,  0,  0,  0,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
		dc.w  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1
		dc.w   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0
		dc.w   0,  0,  0,  0,  0,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
		dc.w  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1
		dc.w   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0
		dc.w   0,  0,  0,  0,  0,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
		dc.w  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0,  0,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1
		dc.w   1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  0,  0,  0,  0
		dc.w   0,  0,  0,  0,  0,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
AIZ1_WaterBGDeformDelta:
		dc.w   0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1,  1,  1
		dc.w   1,  0,  0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1
		dc.w   1,  1,  1,  0,  0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1
		dc.w   1,  1,  1,  1,  1,  0, -1, -2, -2, -1,  0,  2,  2,  2,  2,  0
		dc.w   0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1,  1,  1
		dc.w   1,  0,  0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1
LBZ_WaterWaveArray2:
		dc.w   1,  1,  1,  0,  0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1
		dc.w   1,  1,  1,  1,  1,  0, -1, -2, -2, -1,  0,  2,  2,  2,  2,  0
		dc.w   0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1,  1,  1
		dc.w   1,  0,  0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1
		dc.w   1,  1,  1,  0,  0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1
		dc.w   1,  1,  1,  1,  1,  0, -1, -2, -2, -1,  0,  2,  2,  2,  2,  0
		dc.w   0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1,  1,  1
		dc.w   1,  0,  0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1
LBZ_WaterWaveArray:
		dc.w   1,  1,  1,  0,  0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1
		dc.w   1,  1,  1,  1,  1,  0, -1, -2, -2, -1,  0,  2,  2,  2,  2,  0
		dc.w   0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1,  1,  1
		dc.w   1,  0,  0,  0, -1, -1, -1, -1, -1, -1,  0,  0,  0,  1,  1,  1

; =============== S U B R O U T I N E =======================================


Clear_Switches:
		lea	(Level_trigger_array).w,a1
		moveq	#7,d0

loc_3A5F6:
		clr.l	(a1)+
		dbf	d0,loc_3A5F6
		rts
; End of function Clear_Switches

; ---------------------------------------------------------------------------

NoScreenInit:
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

NoScreenEvent:
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

NoBackgroundInit:
		jsr	sub_3A626(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		jsr	Refresh_PlaneFull(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

NoBackgroundEvent:
		jsr	sub_3A626(pc)
		jsr	DrawBGAsYouMove(pc)
		jmp	PlainDeformation(pc)

; =============== S U B R O U T I N E =======================================


sub_3A626:
		move.w	(Camera_X_pos_copy).w,d0
		asr.w	#3,d0
		move.w	d0,(Camera_X_pos_BG_copy).w
		move.w	(Camera_Y_pos_copy).w,d0
		asr.w	#3,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		rts
; End of function sub_3A626

; ---------------------------------------------------------------------------

Comp_ScreenInit:
		jsr	Update_CameraPositionP2(pc)
		move.w	(Camera_X_pos_copy).w,d0
		move.w	d0,(Events_fg_0).w
		move.w	d0,(Events_fg_1).w
		move.w	(Camera_X_pos_P2_copy).w,d0
		move.w	d0,(Events_fg_2).w
		move.w	d0,(_unkEEBA).w
		moveq	#0,d0
		move.b	(Current_zone).w,d0
		lsl.w	#4,d0
		lea	Comp_ScreenInitArray-$E0(pc),a1
		adda.w	d0,a1
		move.w	(a1)+,(Screen_X_wrap_value).w
		move.w	(a1)+,(Screen_Y_wrap_value).w
		move.w	(a1)+,(Camera_Y_pos_mask).w
		move.w	(a1)+,(Layout_row_index_mask).w
		move.w	(a1)+,(_unkEEB0).w
		move.w	(a1)+,d0
		move.w	(a1)+,d2
		move.w	(a1)+,d6
		moveq	#0,d1
		move.w	#$8000,d7
		jmp	loc_39BD6(pc)

; =============== S U B R O U T I N E =======================================


Comp_ScreenEvent:
		jsr	Update_CameraPositionP2(pc)
		move.w	(Screen_X_wrap_value).w,d2
		addq.w	#1,d2
		move.w	d2,d3
		lsr.w	#1,d2
		lea	(Events_fg_0).w,a1
		move.w	(Camera_X_pos_copy).w,d0
		jsr	Adjust_BGDuringLoop(pc)
		move.w	(Camera_X_pos_P2_copy).w,d0
		jmp	Adjust_BGDuringLoop(pc)
; End of function Comp_ScreenEvent

; ---------------------------------------------------------------------------

CGZ_ScreenEvent:
		bsr.s	Comp_ScreenEvent
		move.w	(Screen_Y_wrap_value).w,d2
		addq.w	#1,d2
		move.w	d2,d3
		lsr.w	#1,d2
		lea	(Events_bg+$00).w,a1
		move.w	(Camera_Y_pos_copy).w,d0
		jsr	Adjust_BGDuringLoop(pc)
		move.w	(Camera_Y_pos_P2_copy).w,d0
		jmp	Adjust_BGDuringLoop(pc)
; ---------------------------------------------------------------------------

ALZ_BackgroundInit:
		jsr	ALZ_BackgroundEvent(pc)
		bra.s	Comp_BackgroundInit
; ---------------------------------------------------------------------------

BPZ_BackgroundInit:
		jsr	BPZ_BackgroundEvent(pc)
		bra.s	Comp_BackgroundInit
; ---------------------------------------------------------------------------

DPZ_BackgroundInit:
		jsr	DPZ_BackgroundEvent(pc)
		bra.s	Comp_BackgroundInit
; ---------------------------------------------------------------------------

CGZ_BackgroundInit:
		move.w	(Camera_Y_pos_copy).w,d0
		move.w	d0,(Events_bg+$00).w
		move.w	d0,(Events_bg+$02).w
		move.w	(Camera_Y_pos_P2_copy).w,d0
		move.w	d0,(Events_bg+$04).w
		move.w	d0,(Events_bg+$06).w
		moveq	#0,d0
		move.b	(Competition_total_laps).w,d0
		addq.w	#1,d0
		lsl.w	#8,d0
		subi.w	#$70,d0
		move.l	#$900000,d1
		divu.w	d0,d1
		move.w	d1,(Events_bg+$08).w
		jsr	CGZ_BackgroundEvent(pc)
		bra.s	Comp_BackgroundInit
; ---------------------------------------------------------------------------

EMZ_BackgroundInit:
		jsr	EMZ_BackgroundEvent(pc)

Comp_BackgroundInit:
		move.l	(V_scroll_value_P2).w,(V_scroll_value_P2_copy).w
		moveq	#0,d0
		move.b	(Current_zone).w,d0
		lsl.w	#4,d0
		lea	Comp_ScreenInitArray-$D4(pc),a1
		adda.w	d0,a1
		move.w	(a1)+,d2
		move.w	(a1)+,d6
		moveq	#0,d0
		moveq	#0,d1
		move.w	#$A000,d7
		jmp	loc_39BD6(pc)

; =============== S U B R O U T I N E =======================================


ALZ_BackgroundEvent:
		jsr	ALZ_Deformation(pc)
		lea	ALZ_BGDeformArray(pc),a4
		bra.s	loc_3A764
; ---------------------------------------------------------------------------

BPZ_BackgroundEvent:
		jsr	BPZ_Deformation(pc)
		lea	BPZ_DeformArray(pc),a4
		bra.s	loc_3A764
; ---------------------------------------------------------------------------

CGZ_BackgroundEvent:
		jsr	CGZ_Deformation(pc)
		lea	CGZ_DeformArray(pc),a4
		bra.s	loc_3A764
; ---------------------------------------------------------------------------

EMZ_BackgroundEvent:
		jsr	EMZ_Deformation(pc)
		lea	EMZ_DeformArray(pc),a4

loc_3A764:
		lea	(H_scroll_buffer).w,a1
		movea.l	a4,a6
		lea	(HScroll_table).w,a5
		move.w	(Camera_Y_pos_BG_copy).w,d0
		move.w	(Camera_X_pos_copy).w,d3
		moveq	#$6B,d1
		jsr	ApplyDeformation2(pc)
		movea.l	a6,a4
		lea	(HScroll_table+$100).w,a5
		move.w	(_unkEE74).w,d0
		subq.w	#4,d0
		move.w	(Camera_X_pos_P2_copy).w,d3
		moveq	#$73,d1
		jsr	ApplyDeformation2(pc)
		jmp	Update_VScrollValueP2(pc)
; End of function ALZ_BackgroundEvent


; =============== S U B R O U T I N E =======================================


DPZ_BackgroundEvent:
		jsr	DPZ_Deformation(pc)
		lea	(H_scroll_buffer).w,a1
		move.w	(Camera_X_pos_copy).w,d0
		move.w	(Camera_X_pos_BG_copy).w,d1
		moveq	#$1A,d2
		bsr.s	sub_3A7BA
		move.w	(Camera_X_pos_P2_copy).w,d0
		move.w	(_unkEE70).w,d1
		moveq	#$1C,d2
		bsr.s	sub_3A7BA
		jmp	Update_VScrollValueP2(pc)
; End of function DPZ_BackgroundEvent


; =============== S U B R O U T I N E =======================================


sub_3A7BA:
		neg.w	d0
		swap	d0
		neg.w	d1
		move.w	d1,d0

loc_3A7C2:
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		move.l	d0,(a1)+
		dbf	d2,loc_3A7C2
		rts
; End of function sub_3A7BA


; =============== S U B R O U T I N E =======================================


ALZ_Deformation:
		move.w	(Camera_Y_pos_copy).w,d0
		bsr.s	sub_3A808
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_Y_pos_P2_copy).w,d0
		bsr.s	sub_3A808
		move.w	d0,(_unkEE74).w
		addq.w	#3,(Events_bg+$00).w
		addi.l	#$1000,(Events_bg+$02).w
		lea	ALZ_AIZ2_BGDeformDelta(pc),a4
		lea	(HScroll_table).w,a1
		move.w	(Events_fg_1).w,d0
		bsr.s	sub_3A81E
		lea	(HScroll_table+$100).w,a1
		move.w	(_unkEEBA).w,d0
		bra.s	sub_3A81E
; End of function ALZ_Deformation


; =============== S U B R O U T I N E =======================================


sub_3A808:
		subi.w	#$148,d0
		swap	d0
		clr.w	d0
		move.l	d0,d1
		asr.l	#2,d1
		sub.l	d1,d0
		swap	d0
		addi.w	#$48,d0
		rts
; End of function sub_3A808


; =============== S U B R O U T I N E =======================================


sub_3A81E:
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,$90(a1)
		asr.l	#3,d0
		lea	$C(a1),a5
		move.l	d0,d1
		asr.l	#2,d1
		move.l	d1,d2
		move.l	(Events_bg+$02).w,d3
		moveq	#5,d4

loc_3A83A:
		add.l	d3,d1
		swap	d1
		move.w	d1,-(a5)
		swap	d1
		add.l	d2,d1
		dbf	d4,loc_3A83A
		movem.w	(a5),d1-d6
		move.w	d2,(a5)+
		move.w	d6,(a5)+
		move.w	d1,(a5)+
		move.w	d4,(a5)+
		move.w	d3,(a5)+
		move.w	d5,(a5)
		lea	$C(a1),a5
		move.l	d0,d1
		move.l	d1,d2
		asr.l	#1,d2
		moveq	#2,d3

loc_3A864:
		swap	d1
		move.w	d1,(a5)+
		swap	d1
		add.l	d2,d1
		dbf	d3,loc_3A864
		move.w	(Events_bg+$00).w,d1
		lsr.w	#3,d1
		andi.w	#$3E,d1
		lea	(a4,d1.w),a6
		swap	d0
		moveq	#$3E,d1

loc_3A882:
		move.w	(a6)+,d2
		add.w	d0,d2
		move.w	d2,(a5)+
		dbf	d1,loc_3A882
		rts
; End of function sub_3A81E


; =============== S U B R O U T I N E =======================================


BPZ_Deformation:
		move.w	(Camera_Y_pos_copy).w,d0
		bsr.s	sub_3A8B6
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_Y_pos_P2_copy).w,d0
		bsr.s	sub_3A8B6
		move.w	d0,(_unkEE74).w
		lea	(HScroll_table+$00E).w,a1
		move.w	(Events_fg_1).w,d0
		bsr.s	sub_3A8C2
		lea	(HScroll_table+$10E).w,a1
		move.w	(_unkEEBA).w,d0
		bsr.s	sub_3A8C2
; End of function BPZ_Deformation


; =============== S U B R O U T I N E =======================================


sub_3A8B6:
		subi.w	#$2C8,d0
		asr.w	#1,d0
		addi.w	#$90,d0
		rts
; End of function sub_3A8B6


; =============== S U B R O U T I N E =======================================


sub_3A8C2:
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d1
		asr.l	#3,d1
		moveq	#6,d2

loc_3A8CE:
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		sub.l	d1,d0
		dbf	d2,loc_3A8CE
		rts
; End of function sub_3A8C2


; =============== S U B R O U T I N E =======================================


DPZ_Deformation:
		move.w	(Camera_Y_pos_copy).w,d0
		bsr.s	sub_3A912
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_Y_pos_P2_copy).w,d0
		bsr.s	sub_3A912
		addi.w	#$80,d0
		move.w	d0,(_unkEE74).w
		move.w	(Events_fg_1).w,d0
		bsr.s	sub_3A91C
		move.w	d0,(Camera_X_pos_BG_copy).w
		move.w	d1,(Events_bg+$10).w
		move.w	(_unkEEBA).w,d0
		bsr.s	sub_3A91C
		move.w	d0,(_unkEE70).w
		move.w	d1,(Events_bg+$12).w
		rts
; End of function DPZ_Deformation


; =============== S U B R O U T I N E =======================================


sub_3A912:
		subi.w	#$148,d0
		asr.w	#4,d0
		addq.w	#8,d0
		rts
; End of function sub_3A912


; =============== S U B R O U T I N E =======================================


sub_3A91C:
		asr.w	#1,d0
		move.w	d0,d1
		asr.w	#2,d1
		rts
; End of function sub_3A91C


; =============== S U B R O U T I N E =======================================


CGZ_Deformation:
		move.w	(Events_bg+$02).w,d0
		bsr.s	sub_3A94C
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Events_bg+$06).w,d0
		bsr.s	sub_3A94C
		move.w	d0,(_unkEE74).w
		lea	(HScroll_table+$00A).w,a1
		move.w	(Events_fg_1).w,d0
		bsr.s	sub_3A95C
		lea	(HScroll_table+$10A).w,a1
		move.w	(_unkEEBA).w,d0
		bsr.s	sub_3A95C
; End of function CGZ_Deformation


; =============== S U B R O U T I N E =======================================


sub_3A94C:
		bmi.s	loc_3A958
		move.w	(Events_bg+$08).w,d1
		mulu.w	d1,d0
		swap	d0
		rts
; ---------------------------------------------------------------------------

loc_3A958:
		moveq	#0,d0
		rts
; End of function sub_3A94C


; =============== S U B R O U T I N E =======================================


sub_3A95C:
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d1
		asr.l	#2,d1
		moveq	#3,d2

loc_3A968:
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		sub.l	d1,d0
		dbf	d2,loc_3A968
		asr.l	#2,d1
		swap	d1
		addi.w	#$100,d1
		move.w	d1,-(a1)
		rts
; End of function sub_3A95C


; =============== S U B R O U T I N E =======================================


EMZ_Deformation:
		move.w	(Camera_Y_pos_copy).w,d0
		bsr.s	sub_3A9A8
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_Y_pos_P2_copy).w,d0
		bsr.s	sub_3A9A8
		move.w	d0,(_unkEE74).w
		lea	(HScroll_table).w,a1
		move.w	(Events_fg_1).w,d0
		bsr.s	sub_3A9BE
		lea	(HScroll_table+$100).w,a1
		move.w	(_unkEEBA).w,d0
		bsr.s	sub_3A9BE
; End of function EMZ_Deformation


; =============== S U B R O U T I N E =======================================


sub_3A9A8:
		subi.w	#$148,d0
		swap	d0
		clr.w	d0
		move.l	d0,d1
		asr.l	#2,d1
		sub.l	d1,d0
		swap	d0
		addi.w	#$48,d0
		rts
; End of function sub_3A9A8


; =============== S U B R O U T I N E =======================================


sub_3A9BE:
		swap	d0
		clr.w	d0
		asr.l	#3,d0
		move.l	d0,d1
		swap	d0
		move.w	d0,$E(a1)
		swap	d0
		add.l	d1,d0
		swap	d0
		move.w	d0,$C(a1)
		move.w	d0,$10(a1)
		swap	d0
		add.l	d1,d0
		swap	d0
		move.w	d0,6(a1)
		move.w	d0,$A(a1)
		move.w	d0,$12(a1)
		swap	d0
		add.l	d1,d0
		swap	d0
		move.w	d0,(a1)
		move.w	d0,4(a1)
		move.w	d0,8(a1)
		swap	d0
		add.l	d1,d0
		swap	d0
		move.w	d0,2(a1)
		rts
; End of function sub_3A9BE

; ---------------------------------------------------------------------------
Comp_ScreenInitArray:
		dc.w  $3FF, $1FF, $1F0,   $C, $100, $100,   $F,  $40
		dc.w  $1FF, $3FF, $3F0,  $1C,  $80, $200,  $1F,  $20
		dc.w  $3FF, $1FF, $1F0,   $C, $100, $100,   $F,  $40
		dc.w  $3FF,  $FF,  $F0,    4, $100, $100,   $F,  $40
		dc.w  $3FF, $1FF, $1F0,   $C, $100, $100,   $F,  $40
ALZ_BGDeformArray:
		dc.w  $18,   8,   8,   8,   8,   8, $2E,   6,  $D,$803F,$7FFF
BPZ_DeformArray:dc.w  $88, $16,  $A, $28, $10,   8,$7FFF
CGZ_DeformArray:dc.w  $50,   8, $10, $10,$7FFF
EMZ_DeformArray:dc.w  $10, $10, $10, $10,   8,  $C, $24, $38, $20,$7FFF
; ---------------------------------------------------------------------------

AIZ1_ScreenInit:
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

AIZ1_ScreenEvent:
		jsr	DrawTilesAsYouMove(pc)
		move.w	(Events_fg_4).w,d0
		beq.w	locret_3AB48
		cmpi.w	#$2D30,(Camera_X_pos_copy).w
		bcc.w	AIZ1SE_ChangeChunk1
		cmpi.w	#$39,d0
		bcc.w	AIZ1SE_ChangeChunk1
		cmpi.w	#$34,d0
		bcs.s	loc_3AACC
		bsr.w	AIZ1SE_ChangeChunk2
		bra.s	loc_3AAE2
; ---------------------------------------------------------------------------

loc_3AACC:
		cmpi.w	#$24,d0
		bcs.s	loc_3AAD8
		bsr.w	AIZ1SE_ChangeChunk3
		bra.s	loc_3AAE2
; ---------------------------------------------------------------------------

loc_3AAD8:
		cmpi.w	#$14,d0
		bcs.s	loc_3AAE2
		bsr.w	AIZ1SE_ChangeChunk4

loc_3AAE2:
		lea	AIZ_TreeRevealArray(pc),a6
		btst	#0,d0
		bne.s	loc_3AAF0
		lea	$10(a6),a6

loc_3AAF0:
		subq.w	#1,d0
		lsr.w	#1,d0
		move.w	d0,(Events_bg+$00).w
		cmpi.w	#3,d0
		bcs.s	loc_3AB04
		move.w	#2,(Events_bg+$00).w

loc_3AB04:
		lsl.w	#4,d0
		neg.w	d0
		addi.w	#$470,d0

loc_3AB0C:
		cmp.w	(Camera_Y_pos_rounded).w,d0
		bcc.s	loc_3AB22
		lea	$20(a6),a6
		addi.w	#$10,d0
		subq.w	#1,(Events_bg+$00).w
		bpl.s	loc_3AB0C
		bra.s	AIZ1SE_ChangeChunk1
; ---------------------------------------------------------------------------

loc_3AB22:
		move.w	#$2C80,d1
		moveq	#$10,d6
		move.l	a0,-(sp)
		jsr	Setup_TileRowDraw(pc)
		movea.l	(sp)+,a0
		subi.w	#$280,d0
		moveq	#0,d1
		moveq	#$F,d6
		bsr.s	AIZ_TreeReveal
		lea	$10(a6),a6
		addi.w	#$290,d0
		subq.w	#1,(Events_bg+$00).w
		bpl.s	loc_3AB0C

locret_3AB48:
		rts
; ---------------------------------------------------------------------------

AIZ1SE_ChangeChunk1:
		clr.w	(Events_fg_4).w
		movea.w	$14(a3),a1
		movea.w	(a3),a5
		move.b	(a5),$59(a1)
		move.b	1(a5),$5A(a1)

; =============== S U B R O U T I N E =======================================


AIZ1SE_ChangeChunk2:
		movea.w	$18(a3),a1
		movea.w	4(a3),a5
		move.b	(a5),$59(a1)
		move.b	1(a5),$5A(a1)
; End of function AIZ1SE_ChangeChunk2


; =============== S U B R O U T I N E =======================================


AIZ1SE_ChangeChunk3:
		movea.w	$1C(a3),a1
		movea.w	8(a3),a5
		move.b	(a5),$59(a1)
		move.b	1(a5),$5A(a1)
; End of function AIZ1SE_ChangeChunk3


; =============== S U B R O U T I N E =======================================


AIZ1SE_ChangeChunk4:
		movea.w	$20(a3),a1
		movea.w	$C(a3),a5
		move.b	(a5),$59(a1)
		move.b	1(a5),$5A(a1)
		rts
; End of function AIZ1SE_ChangeChunk4


; =============== S U B R O U T I N E =======================================


AIZ_TreeReveal:
		asr.w	#4,d1
		move.w	d1,d2
		asr.w	#3,d1
		add.w	d2,d2
		andi.w	#$E,d2
		addq.w	#4,a0
		movea.l	a0,a1
		lea	$40(a0),a0
		jsr	Get_LevelAddrChunkRow(pc)

loc_3ABAE:
		move.w	(a5,d2.w),d3
		move.w	d3,d4
		andi.w	#$3FF,d3
		lsl.w	#3,d3
		move.l	(a2,d3.w),d5
		move.l	4(a2,d3.w),d3
		btst	#$B,d4
		beq.s	loc_3ABD6
		eori.l	#$10001000,d5
		eori.l	#$10001000,d3
		exg	d3,d5

loc_3ABD6:
		btst	#$A,d4
		beq.s	loc_3ABEC
		eori.l	#$8000800,d5
		eori.l	#$8000800,d3
		swap	d5
		swap	d3

loc_3ABEC:
		tst.b	(a6)+
		beq.s	loc_3ABF2
		move.l	d5,(a1)

loc_3ABF2:
		addq.w	#4,a1
		tst.b	$F(a6)
		beq.s	loc_3ABFC
		move.l	d3,(a0)

loc_3ABFC:
		addq.w	#4,a0
		addq.w	#2,d2
		andi.w	#$E,d2
		bne.s	loc_3AC0C
		addq.w	#1,d1
		jsr	Get_ChunkRow(pc)

loc_3AC0C:
		dbf	d6,loc_3ABAE
		clr.w	(a0)
		rts
; End of function AIZ_TreeReveal

; ---------------------------------------------------------------------------

Obj_AIZ1TreeRevealControl:
		tst.w	$2E(a0)
		beq.s	loc_3AC26
		tst.w	(Events_fg_4).w
		bne.s	loc_3AC26
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3AC26:
		subq.w	#1,$2E(a0)
		move.w	#$480,d0
		sub.w	(Player_1+y_pos).w,d0
		lsr.w	#3,d0
		addq.w	#3,d0
		cmp.w	(Events_fg_4).w,d0
		bcc.s	loc_3AC44
		btst	#0,$2F(a0)
		beq.s	locret_3AC48

loc_3AC44:
		addq.w	#1,(Events_fg_4).w

locret_3AC48:
		rts
; ---------------------------------------------------------------------------
AIZ_TreeRevealArray:
		dc.b  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
		dc.b  0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0
		dc.b  0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0
		dc.b  0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0
		dc.b  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0
		dc.b  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
		dc.b  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
; ---------------------------------------------------------------------------

AIZ1_BackgroundInit:
		cmpi.w	#$1300,(Camera_X_pos_copy).w
		bcc.s	loc_3ACE6
		lea	(HScroll_table).w,a1
		moveq	#9,d0

loc_3ACC8:
		clr.l	(a1)+
		dbf	d0,loc_3ACC8
		jsr	AIZ1_IntroDeform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		jsr	Refresh_PlaneFull(pc)
		lea	AIZ1_IntroDeformArray(pc),a4
		lea	(HScroll_table+$028).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

loc_3ACE6:
		move.w	#8,(Events_routine_bg).w
		jsr	AIZ1_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		clr.l	(HScroll_table).w
		move.w	d2,(HScroll_table+$006).w
		lea	AIZ1_BGDrawArray(pc),a4
		lea	(HScroll_table).w,a5
		jsr	Refresh_PlaneTileDeform(pc)
		jmp	AIZ1_ApplyDeformWater(pc)
; ---------------------------------------------------------------------------

AIZ1_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3AD14(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3AD14:
		bra.w	AIZ1BGE_Intro
; ---------------------------------------------------------------------------
		bra.w	AIZ1BGE_NormalRefresh
; ---------------------------------------------------------------------------
		bra.w	AIZ1BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	AIZ1BGE_FireTransition
; ---------------------------------------------------------------------------
		bra.w	AIZ1BGE_FireRefresh
; ---------------------------------------------------------------------------
		bra.w	AIZ1BGE_Finish
; ---------------------------------------------------------------------------

AIZ1BGE_Intro:
		tst.w	(Events_fg_5).w
		beq.s	loc_3AD66
		tst.w	(Kos_decomp_queue_count).w
		bne.w	loc_3AD66
		clr.w	(Events_fg_5).w
		jsr	AIZ1_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		clr.l	(HScroll_table).w
		move.w	d2,(HScroll_table+$006).w
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3AD8A
; ---------------------------------------------------------------------------

loc_3AD66:
		jsr	AIZ1_IntroDeform(pc)
		lea	AIZ1_IntroDrawArray(pc),a4
		lea	(HScroll_table).w,a5
		moveq	#$20,d6
		moveq	#$A,d5
		jsr	Draw_BG(pc)
		lea	AIZ1_IntroDeformArray(pc),a4
		lea	(HScroll_table+$028).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

AIZ1BGE_NormalRefresh:
		jsr	AIZ1_Deform(pc)

loc_3AD8A:
		lea	AIZ1_BGDrawArray(pc),a4
		lea	(HScroll_table-$04).w,a5
		move.w	(Camera_Y_pos_BG_copy).w,d1
		jsr	Draw_PlaneVertBottomUpComplex(pc)
		bpl.s	loc_3ADAC
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3ADAC
; ---------------------------------------------------------------------------

AIZ1BGE_Normal:
		tst.w	(Events_fg_5).w
		bne.s	AIZ1_AIZ2_Transition
		jsr	AIZ1_Deform(pc)

loc_3ADAC:
		lea	AIZ1_BGDrawArray(pc),a4
		lea	(HScroll_table).w,a5
		moveq	#$20,d6
		moveq	#2,d5
		jsr	Draw_BG(pc)
		jmp	AIZ1_ApplyDeformWater(pc)
; ---------------------------------------------------------------------------

AIZ1_AIZ2_Transition:
		clr.w	(Events_fg_5).w
		lea	(Normal_palette_line_4+2).w,a1
		move.l	#$4E006E,(a1)+
		move.l	#$AE00CE,(a1)+
		move.l	#$2EE0AEE,(a1)
		move.l	#$200000,(Camera_Y_pos_BG_copy).w
		move.w	#$10,(Camera_Y_pos_BG_rounded).w
		move.w	#$68,(Events_bg+$00).w
		move.w	#4,(Special_V_int_routine).w
		addq.w	#4,(Events_routine_bg).w

AIZ1BGE_FireTransition:
		tst.w	(Events_bg+$02).w
		bne.s	loc_3AE18
		move.w	(Events_bg+$00).w,d0
		swap	d0
		clr.w	d0
		sub.l	(Camera_Y_pos_BG_copy).w,d0
		asr.l	#5,d0
		add.l	d0,(Camera_Y_pos_BG_copy).w
		cmpi.l	#$1400,d0
		bcc.s	loc_3AE1C

loc_3AE18:
		jsr	AIZ1_FireRise(pc)

loc_3AE1C:
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		move.w	#$1000,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		cmpi.w	#$190,(Camera_Y_pos_BG_copy).w
		bcs.w	loc_3AECA
		movem.l	d7-a0/a2-a3,-(sp)
		lea	(AIZ2_128x128_Kos).l,a1
		lea	(RAM_start).l,a2
		jsr	(Queue_Kos).l
		lea	(AIZ2_16x16_Primary_Kos).l,a1
		lea	(Block_table).w,a2
		jsr	(Queue_Kos).l
		lea	(AIZ2_16x16_Secondary_Kos).l,a1
		lea	(Block_table+$AB8).w,a2
		jsr	(Queue_Kos).l
		lea	(AIZ2_8x8_Primary_KosM).l,a1
		move.w	#0,d2
		jsr	(Queue_Kos_Module).l
		lea	(AIZ2_8x8_Secondary_KosM).l,a1
		move.w	#$3F80,d2
		jsr	(Queue_Kos_Module).l
		lea	(PLC_SpikesSprings).l,a1
		jsr	(Load_PLC_Raw).l
		movem.l	(sp)+,d7-a0/a2-a3
		jsr	(Create_New_Sprite).l
		bne.s	loc_3AEB8
		move.l	#Obj_AIZTransitionFloor,(a1)
		move.w	#$2FB0,$10(a1)
		move.w	#$3A0,$14(a1)

loc_3AEB8:
		move.w	#$F0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3AED6
; ---------------------------------------------------------------------------

loc_3AECA:
		jsr	AIZTrans_WavyFlame(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

AIZ1BGE_FireRefresh:
		jsr	AIZ1_FireRise(pc)

loc_3AED6:
		lea	(Level_layout_main).w,a3
		move.w	#$C000,d7
		move.w	#$180,d1
		moveq	#0,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.s	loc_3AEF6
		addq.w	#2,a3
		move.w	#$E000,d7
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3AF02
; ---------------------------------------------------------------------------

loc_3AEF6:
		jsr	AIZTrans_WavyFlame(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

AIZ1BGE_Finish:
		jsr	AIZ1_FireRise(pc)

loc_3AF02:
		tst.b	(Kos_modules_left).w
		bne.w	loc_3AFCA
		move.w	#1,(Current_zone_and_act).w
		clr.b	(Dynamic_resize_routine).w
		clr.b	(Object_load_routine).w
		clr.b	(Rings_manager_routine).w
		clr.b	(Boss_flag).w
		clr.b	(Respawn_table_keep).w
		jsr	Clear_Switches(pc)
		movem.l	d7-a0/a2-a3,-(sp)
		jsr	(Load_Level).l
		jsr	(LoadSolids).l
		jsr	(CheckLevelForWater).l
		moveq	#$B,d0
		jsr	(LoadPalette_Immediate).l
		movem.l	(sp)+,d7-a0/a2-a3
		lea	(Normal_palette_line_4+2).w,a1
		move.l	#$4E006E,(a1)+
		move.l	#$AE00CE,(a1)+
		move.l	#$2EE0AEE,(a1)
		move.w	#$2F00,d0
		move.w	#$80,d1
		sub.w	d0,(Player_1+x_pos).w
		sub.w	d1,(Player_1+y_pos).w
		sub.w	d0,(Player_2+x_pos).w
		sub.w	d1,(Player_2+y_pos).w
		sub.w	d0,(Camera_X_pos).w
		sub.w	d1,(Camera_Y_pos).w
		sub.w	d0,(Camera_X_pos_copy).w
		sub.w	d1,(Camera_Y_pos_copy).w
		move.l	#$100010,d0
		move.l	#$260,d1
		move.l	d0,(Camera_min_X_pos).w
		move.l	d0,(Camera_target_min_X_pos).w
		move.l	d1,(Camera_min_Y_pos).w
		move.l	d1,(Camera_target_min_Y_pos).w
		move.w	(Camera_X_pos_copy).w,(Events_fg_0).w
		move.w	(Camera_X_pos_copy).w,(Events_fg_1).w
		jsr	Reset_TileOffsetPositionActual(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		clr.w	(Events_routine_bg).w

loc_3AFCA:
		jsr	AIZTrans_WavyFlame(pc)
		jmp	PlainDeformation(pc)

; =============== S U B R O U T I N E =======================================


AIZ1_IntroDeform:
		move.w	(Camera_Y_pos_copy).w,(Camera_Y_pos_BG_copy).w
		move.w	(Events_fg_1).w,d0
		bmi.s	loc_3AFE2
		move.w	(Camera_X_pos_copy).w,d0

loc_3AFE2:
		asr.w	#1,d0
		lea	(HScroll_table+$028).w,a1
		cmpi.w	#$580,d0
		blt.s	loc_3AFF8
		moveq	#$24,d1

loc_3AFF0:
		move.w	d0,(a1)+
		dbf	d1,loc_3AFF0
		bra.s	loc_3B018
; ---------------------------------------------------------------------------

loc_3AFF8:
		move.w	d0,(a1)+
		subi.w	#$580,d0
		swap	d0
		clr.w	d0
		move.l	d0,d1
		asr.l	#5,d1
		moveq	#$23,d2

loc_3B008:
		add.l	d1,d0
		move.l	d0,d3
		swap	d3
		addi.w	#$580,d3
		move.w	d3,(a1)+
		dbf	d2,loc_3B008

loc_3B018:
		lea	(HScroll_table+$028).w,a1
		lea	(HScroll_table).w,a5
		move.w	(a1)+,d0
		bpl.s	loc_3B026
		moveq	#0,d0

loc_3B026:
		move.w	d0,(a5)
		addq.w	#4,a5
		moveq	#8,d0

loc_3B02C:
		move.w	(a1),d1
		bpl.s	loc_3B032
		moveq	#0,d1

loc_3B032:
		move.w	d1,(a5)
		addq.w	#8,a1
		addq.w	#4,a5
		dbf	d0,loc_3B02C
		rts
; End of function AIZ1_IntroDeform


; =============== S U B R O U T I N E =======================================


AIZ1_Deform:
		move.w	(Camera_Y_pos_copy).w,d0
		asr.w	#1,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		subi.w	#$1300,d0
		swap	d0
		clr.w	d0
		asr.l	#5,d0
		move.l	d0,d2
		add.l	d0,d0
		move.l	d0,d1
		lsl.l	#3,d0
		sub.l	d1,d0
		lea	(HScroll_table+$030).w,a1
		swap	d0
		move.w	d0,(a1)
		swap	d0
		add.l	d1,d0
		swap	d0
		move.w	d0,-$2C(a1)
		move.w	d0,2(a1)
		move.w	d0,$A(a1)
		swap	d0
		add.l	d1,d0
		swap	d0
		move.w	d0,4(a1)
		move.w	d0,8(a1)
		swap	d0
		add.l	d1,d0
		swap	d0
		move.w	d0,6(a1)
		lea	(HScroll_table+$016).w,a1
		move.l	d2,d0
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		move.l	(HScroll_table+$03C).w,d3
		addi.l	#$2000,(HScroll_table+$03C).w
		asr.l	#1,d0
		moveq	#5,d1

loc_3B0AE:
		add.l	d3,d0
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		add.l	d2,d0
		dbf	d1,loc_3B0AE
		lea	(HScroll_table+$016).w,a1
		move.l	d2,d0
		asr.l	#3,d2
		moveq	#$C,d1

loc_3B0C6:
		add.l	d2,d0
		swap	d0
		move.w	d0,(a1)+
		swap	d0
		dbf	d1,loc_3B0C6
		rts
; End of function AIZ1_Deform

; ---------------------------------------------------------------------------

AIZ1_ApplyDeformWater:
		lea	AIZ1_DeformArray(pc),a4
		lea	(HScroll_table+$008).w,a5
		move.w	(Water_level).w,d1
		sub.w	(Camera_Y_pos_copy).w,d1
		cmpi.w	#$E0,d1
		blt.s	loc_3B0EE
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

loc_3B0EE:
		subq.w	#1,d1
		jsr	ApplyDeformation3(pc)
		move.l	a1,-(sp)
		lea	(HScroll_table+$040).w,a1
		lea	AIZ1_WaterFGDeformDelta(pc),a6
		move.w	(Water_level).w,d0
		subi.w	#$DE,d1
		neg.w	d1
		move.w	(Level_frame_counter).w,d2
		add.w	d0,d2
		add.w	d0,d2
		andi.w	#$7E,d2
		adda.w	d2,a6
		move.w	(Camera_X_pos_copy).w,d6
		neg.w	d6
		jsr	MakeFGDeformArray(pc)
		movea.l	(sp)+,a1
		lea	(HScroll_table+$040).w,a2
		lea	AIZ1_DeformArray(pc),a4
		lea	(HScroll_table+$008).w,a5
		lea	AIZ1_WaterBGDeformDelta(pc),a6
		move.w	(Water_level).w,d0
		sub.w	(Camera_Y_pos_copy).w,d0
		add.w	(Camera_Y_pos_BG_copy).w,d0
		move.w	(Level_frame_counter).w,d2
		asr.w	#1,d2
		add.w	d0,d2
		add.w	d0,d2
		andi.w	#$7E,d2
		adda.w	d2,a6
		jmp	ApplyFGandBGDeformation(pc)

; =============== S U B R O U T I N E =======================================


AIZ1_FireRise:
		cmpi.b	#6,(Player_1+routine).w
		bcc.s	locret_3B178
		moveq	#0,d0
		move.w	(Events_bg+$02).w,d0
		addi.w	#$280,d0
		cmpi.w	#$A000,d0
		bcs.s	loc_3B16E
		move.w	#$A000,d0

loc_3B16E:
		move.w	d0,(Events_bg+$02).w
		lsl.l	#4,d0
		add.l	d0,(Camera_Y_pos_BG_copy).w

locret_3B178:
		rts
; End of function AIZ1_FireRise


; =============== S U B R O U T I N E =======================================


AIZTrans_WavyFlame:
		cmpi.b	#6,(Player_1+routine).w
		bcc.s	locret_3B1C4
		addq.w	#6,(_unkEE8E).w
		move.w	(_unkEE8E).w,d0
		andi.w	#$60,d0
		addi.w	#$1000,d0
		move.w	d0,(Camera_X_pos_BG_copy).w
		lea	(Vscroll_buffer).w,a1
		lea	AIZ_FlameVScroll(pc),a5
		move.w	(Camera_Y_pos_copy).w,d0
		swap	d0
		move.w	(Camera_Y_pos_BG_copy).w,d1
		move.w	(Level_frame_counter).w,d2
		asr.w	#2,d2
		moveq	#$13,d3

loc_3B1B0:
		addq.w	#2,d2
		andi.w	#$F,d2
		move.b	(a5,d2.w),d0
		ext.w	d0
		add.w	d1,d0
		move.l	d0,(a1)+
		dbf	d3,loc_3B1B0

locret_3B1C4:
		rts
; End of function AIZTrans_WavyFlame

; ---------------------------------------------------------------------------

Obj_AIZTransitionFloor:
		tst.b	(Current_act).w
		beq.s	loc_3B1D8
		move.w	#$7F00,$10(a0)
		move.l	#Delete_Current_Sprite,(a0)

loc_3B1D8:
		move.b	#-$60,7(a0)
		bset	#7,$2A(a0)
		move.w	#$AB,d1
		moveq	#$10,d2
		moveq	#$10,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull2).l
; ---------------------------------------------------------------------------
AIZ1_IntroDrawArray:
		dc.w $3E0, $10, $10, $10, $10, $10, $10, $10, $10, $7FFF
AIZ1_IntroDeformArray:
		dc.w $3E0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4
		dc.w 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, $7FFF
AIZ1_BGDrawArray:dc.w $220, $7FFF
AIZ1_DeformArray:dc.w $D0, $20, $30, $30, $10, $10, $10, $800D, $F, 6, $E, $50, $20, $7FFF
AIZ_FlameVScroll:dc.b 0, $FF, $FE, $FB, $F8, $F6, $F3, $F2, $F1, $F2, $F3, $F6, $F9, $FB, $FE, $FF
; ---------------------------------------------------------------------------

AIZ2_ScreenInit:
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

AIZ2_ScreenEvent:
		move.w	(Screen_shake_offset).w,d0
		add.w	d0,(Camera_Y_pos_copy).w
		move.w	(Events_routine_fg).w,d0
		jmp	loc_3B29C(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3B29C:
		bra.w	AIZ2SE_Normal
; ---------------------------------------------------------------------------
		bra.w	AIZ2SE_ShipRefresh
; ---------------------------------------------------------------------------
		bra.w	AIZ2SE_ShipDraw
; ---------------------------------------------------------------------------
		bra.w	AIZ2SE_EndRefresh
; ---------------------------------------------------------------------------
		bra.w	AIZ2SE_End
; ---------------------------------------------------------------------------

AIZ2SE_Normal:
		tst.w	(Events_fg_4).w
		beq.w	DrawTilesAsYouMove
		clr.w	(Events_fg_4).w
		move.w	#$180,(Draw_delayed_position).w
		move.w	#5,(Draw_delayed_rowcount).w
		clr.l	(HScroll_table+$1F8).w
		move.w	(Camera_X_pos_copy).w,d0
		andi.w	#-$10,d0
		subi.w	#$10,d0
		move.w	d0,(HScroll_table+$1FE).w
		move.b	#1,(Scroll_lock).w
		move.w	#4,(Special_events_routine).w
		addq.w	#4,(Events_routine_fg).w

AIZ2SE_ShipRefresh:
		move.w	#$4380,d1
		move.w	(Camera_Y_pos_copy).w,d2
		subi.w	#$10,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.w	loc_3B368
		move.w	#$4020,d0
		move.w	d0,(HScroll_table+$1F6).w
		move.w	d0,(_unkEE98).w
		clr.w	(_unkEE98+2).w
		move.w	(Camera_Y_pos_copy).w,d0
		addi.w	#$8F0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(_unkEE9C).w
		move.w	d0,(_unkEEA2).w
		jsr	(Create_New_Sprite).l
		bne.s	loc_3B332
		move.l	#Obj_AIZBattleship,(a1)

loc_3B332:
		st	(Events_bg+$04).w
		move.l	#HInt6,(H_int_addr).w
		clr.b	(Water_flag).w
		move.b	#$40,(H_int_counter).w
		addq.w	#4,(Events_routine_fg).w

AIZ2SE_ShipDraw:
		tst.w	(Events_fg_4).w
		bne.s	loc_3B380
		lea	AIZ2SE_BGShipDrawArray2(pc),a4
		lea	(HScroll_table+$1F4).w,a6
		move.w	(_unkEE98).w,(a6)
		moveq	#2,d5
		move.w	(_unkEEA2).w,d6
		jsr	Draw_BGNoVert(pc)

loc_3B368:
		lea	AIZ2SE_BGShipDrawArray1(pc),a4
		lea	(HScroll_table+$1F8).w,a6
		move.w	(Camera_X_pos_copy).w,4(a6)
		moveq	#2,d5
		move.w	(Camera_Y_pos_rounded).w,d6
		jmp	Draw_BGNoVert(pc)
; ---------------------------------------------------------------------------

loc_3B380:
		clr.w	(Events_fg_4).w
		move.w	#$170,(Draw_delayed_position).w
		move.w	#4,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_fg).w

AIZ2SE_EndRefresh:
		move.w	#$4380,d1
		move.w	(Camera_Y_pos_copy).w,d2
		subi.w	#$10,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.s	loc_3B368
		move.w	(Camera_X_pos_copy).w,d0
		andi.w	#-$10,d0
		subi.w	#$10,d0
		move.w	d0,(Camera_X_pos_rounded).w
		move.w	#$46C0,(Events_bg+$02).w
		clr.w	(Events_bg+$04).w
		move.b	#-1,(H_int_counter).w
		addq.w	#4,(Events_routine_fg).w

AIZ2SE_End:
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

HInt6:
		move.w	#$8AFF,(VDP_control_port).l
		move.l	#$40000010,(VDP_control_port).l
		move.w	(Camera_Y_pos_copy).w,(VDP_data_port).l
		rte
; ---------------------------------------------------------------------------
AIZ2SE_BGShipDrawArray1:dc.w $180
		dc.w $7FFF
AIZ2SE_BGShipDrawArray2:dc.w $A80
		dc.w $7FFF
; ---------------------------------------------------------------------------

AIZ2_BackgroundInit:
		move.w	(Camera_X_pos_copy).w,(Events_fg_0).w
		move.w	(Camera_X_pos_copy).w,(Events_fg_1).w
		move.w	#$C,(Events_routine_bg).w
		cmpi.w	#$3E80,(Camera_X_pos_copy).w
		bcs.s	loc_3B418
		move.w	#$14,(Events_routine_bg).w
		move.w	#$4440,(Events_bg+$02).w

loc_3B418:
		jsr	AIZ2_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		jmp	AIZ2_ApplyDeform(pc)
; ---------------------------------------------------------------------------

AIZ2_BackgroundEvent:
		lea	(Events_fg_0).w,a1
		move.w	(Camera_X_pos_copy).w,d0
		move.w	#$100,d2
		move.w	#$200,d3
		jsr	Adjust_BGDuringLoop(pc)
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3B446(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3B446:
		bra.w	AIZ2BGE_FireRedraw
; ---------------------------------------------------------------------------
		bra.w	AIZ2BGE_WaitFire
; ---------------------------------------------------------------------------
		bra.w	AIZ2BGE_BGRedraw
; ---------------------------------------------------------------------------
		bra.w	AIZ2BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	AIZ2BGE_ShipRefresh
; ---------------------------------------------------------------------------
		bra.w	AIZ2BGE_ShipMove
; ---------------------------------------------------------------------------

AIZ2BGE_FireRedraw:
		lea	(Level_layout_main).w,a3
		move.w	#$C000,d7
		move.w	(Camera_X_pos_copy).w,d1
		move.w	(Camera_Y_pos_copy).w,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bmi.s	loc_3B480
		jsr	AIZ1_FireRise(pc)
		jsr	AIZTrans_WavyFlame(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

loc_3B480:
		addq.w	#2,a3
		move.w	#-$2000,d7
		clr.w	(Events_bg+$00).w
		addq.w	#4,(Events_routine_bg).w

AIZ2BGE_WaitFire:
		jsr	AIZ1_FireRise(pc)
		jsr	AIZTrans_WavyFlame(pc)
		tst.w	(Events_bg+$00).w
		bne.s	loc_3B4CC
		move.w	(Camera_Y_pos_BG_copy).w,d0
		andi.w	#$7F,d0
		cmpi.w	#$20,d0
		bcs.s	loc_3B4B0
		cmpi.w	#$30,d0
		bcs.s	loc_3B4B4

loc_3B4B0:
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

loc_3B4B4:
		addi.w	#$180,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		and.w	(Camera_Y_pos_mask).w,d0
		subi.w	#$10,d0
		move.w	d0,(Camera_Y_pos_BG_rounded).w
		st	(Events_bg+$00).w

loc_3B4CC:
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		move.w	#$200,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		cmpi.w	#$310,(Camera_Y_pos_BG_copy).w
		bcs.s	loc_3B544
		movem.l	d7-a0/a2-a3,-(sp)
		moveq	#$C,d0
		jsr	(Load_PLC).l
		jsr	(LoadEnemyArt).l
		movem.l	(sp)+,d7-a0/a2-a3
		lea	(Normal_palette_line_4+2).w,a1
		move.l	#$8EE00AA,(a1)+
		move.l	#$8E004E,(a1)+
		move.l	#$2E000C,(a1)
		move.w	#$6000,d0
		move.w	d0,(Camera_max_X_pos).w
		move.w	d0,(Camera_target_max_X_pos).w
		jsr	AIZ2_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		move.w	#$C,(Special_V_int_routine).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3B56E
; ---------------------------------------------------------------------------

loc_3B544:
		jsr	AIZ2_ApplyDeform(pc)
		lea	(H_scroll_buffer+2).w,a1
		move.w	(Camera_X_pos_BG_copy).w,d0
		neg.w	d0
		moveq	#$37,d1

loc_3B554:
		move.w	d0,(a1)
		addq.w	#4,a1
		move.w	d0,(a1)
		addq.w	#4,a1
		move.w	d0,(a1)
		addq.w	#4,a1
		move.w	d0,(a1)
		addq.w	#4,a1
		dbf	d1,loc_3B554
		rts
; ---------------------------------------------------------------------------

AIZ2BGE_BGRedraw:
		jsr	AIZ2_Deform(pc)

loc_3B56E:
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.s	loc_3B5C8
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3B5C8
; ---------------------------------------------------------------------------

AIZ2BGE_Normal:
		jsr	AIZ2_Deform(pc)
		tst.w	(Events_fg_5).w
		beq.s	loc_3B5C8
		clr.w	(Events_fg_5).w
		move.w	#$A8,d0
		cmpi.w	#$400,(Camera_Y_pos_copy).w
		bcs.s	loc_3B59E
		move.w	#-$198,d0

loc_3B59E:
		move.w	d0,(Events_bg+$16).w
		add.w	d0,(Camera_Y_pos_BG_copy).w
		jsr	Reset_TileOffsetPositionEff(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		move.w	#$4440,(Events_bg+$02).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3B5E4
; ---------------------------------------------------------------------------

loc_3B5C8:
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		jsr	AIZ2_ApplyDeform(pc)
		jmp	ShakeScreen_Setup(pc)
; ---------------------------------------------------------------------------

AIZ2BGE_ShipRefresh:
		jsr	AIZ2_Deform(pc)

loc_3B5E4:
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.s	loc_3B5FA
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3B5FA
; ---------------------------------------------------------------------------

AIZ2BGE_ShipMove:
		jsr	AIZ2_Deform(pc)

loc_3B5FA:
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		jsr	AIZ2_ApplyDeform(pc)
		tst.w	(Events_bg+$04).w
		beq.s	loc_3B622
		move.w	(_unkEE9C).w,(V_scroll_value).w
		move.w	(Camera_Y_pos_BG_copy).w,(V_scroll_value_BG).w
		addq.w	#4,sp

loc_3B622:
		jmp	ShakeScreen_Setup(pc)

; =============== S U B R O U T I N E =======================================


AIZ2_Deform:
		move.w	(Camera_Y_pos_copy).w,d0
		move.w	(Screen_shake_offset).w,d1
		sub.w	d1,d0
		asr.w	#1,d0
		add.w	d1,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		cmpi.w	#$10,(Events_routine_bg).w
		bcs.s	loc_3B648
		move.w	(Events_bg+$16).w,d0
		add.w	d0,(Camera_Y_pos_BG_copy).w

loc_3B648:
		move.w	(Events_fg_1).w,d0
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d1
		asr.l	#5,d1
		move.l	d1,d2
		add.l	d1,d1
		add.l	d2,d1
		lea	(HScroll_table+$1C0).w,a1
		lea	AIZ2_BGDeformMake(pc),a5
		moveq	#0,d2

loc_3B666:
		move.b	(a5)+,d3
		bmi.s	locret_3B67E
		ext.w	d3
		swap	d0

loc_3B66E:
		move.b	(a5)+,d2
		move.w	d0,(a1,d2.w)
		dbf	d3,loc_3B66E
		swap	d0
		add.l	d1,d0
		bra.s	loc_3B666
; ---------------------------------------------------------------------------

locret_3B67E:
		rts
; End of function AIZ2_Deform


; =============== S U B R O U T I N E =======================================


AIZ2_ApplyDeform:
		lea	(HScroll_table).w,a1
		lea	AIZ2_FGDeformDelta(pc),a6
		move.w	(Camera_Y_pos_copy).w,d0
		move.w	#$DF,d1
		move.w	(Level_frame_counter).w,d2
		add.w	d0,d2
		add.w	d0,d2
		moveq	#$3E,d3
		move.w	(Camera_X_pos_copy).w,d6
		neg.w	d6
		move.w	(Water_level).w,d4
		sub.w	d0,d4
		bls.s	loc_3B6CA
		cmp.w	d1,d4
		bhi.s	loc_3B6D0
		move.w	d4,d1
		subq.w	#1,d1
		and.w	d3,d2
		adda.w	d2,a6
		jsr	MakeFGDeformArray(pc)
		move.w	(Water_level).w,d0
		subi.w	#$DE,d1
		neg.w	d1
		move.w	(Level_frame_counter).w,d2
		add.w	d0,d2
		add.w	d0,d2

loc_3B6CA:
		lea	AIZ1_WaterFGDeformDelta(pc),a6
		moveq	#$7E,d3

loc_3B6D0:
		and.w	d3,d2
		adda.w	d2,a6
		jsr	MakeFGDeformArray(pc)
		lea	(H_scroll_buffer).w,a1
		lea	(HScroll_table).w,a2
		lea	AIZ2_BGDeformArray(pc),a4
		lea	(HScroll_table+$1C0).w,a5
		lea	ALZ_AIZ2_BGDeformDelta(pc),a6
		move.w	(Camera_Y_pos_BG_copy).w,d0
		move.w	#$DF,d1
		move.w	(Level_frame_counter).w,d2
		asr.w	#1,d2
		add.w	d0,d2
		add.w	d0,d2
		moveq	#$3E,d3
		move.w	(Water_level).w,d4
		sub.w	(Camera_Y_pos_copy).w,d4
		bls.s	loc_3B73E
		cmp.w	d1,d4
		bhi.s	loc_3B744
		move.w	d4,d1
		subq.w	#1,d1
		and.w	d3,d2
		adda.w	d2,a6
		jsr	ApplyFGandBGDeformation(pc)
		lea	AIZ2_BGDeformArray(pc),a4
		lea	(HScroll_table+$1C0).w,a5
		move.w	(Water_level).w,d0
		sub.w	(Camera_Y_pos_copy).w,d0
		add.w	(Camera_Y_pos_BG_copy).w,d0
		subi.w	#$DE,d1
		neg.w	d1
		move.w	(Level_frame_counter).w,d2
		asr.w	#1,d2
		add.w	d0,d2
		add.w	d0,d2

loc_3B73E:
		lea	AIZ1_WaterBGDeformDelta(pc),a6
		moveq	#$7E,d3

loc_3B744:
		and.w	d3,d2
		adda.w	d2,a6
		jsr	ApplyFGandBGDeformation(pc)
		tst.w	(Events_bg+$04).w
		beq.s	locret_3B772
		lea	(H_scroll_buffer).w,a1
		move.w	(_unkEE98).w,d0
		neg.w	d0
		moveq	#$F,d1

loc_3B75E:
		move.w	d0,(a1)
		addq.w	#4,a1
		move.w	d0,(a1)
		addq.w	#4,a1
		move.w	d0,(a1)
		addq.w	#4,a1
		move.w	d0,(a1)
		addq.w	#4,a1
		dbf	d1,loc_3B75E

locret_3B772:
		rts
; End of function AIZ2_ApplyDeform

; ---------------------------------------------------------------------------

AIZ2_DoShipLoop:
		clr.w	(Level_repeat_offset).w
		move.w	(Camera_X_pos).w,d0
		addq.w	#4,d0
		cmp.w	(Events_bg+$02).w,d0
		bcs.s	loc_3B7A8
		move.w	#$200,d1
		move.w	d1,(Level_repeat_offset).w
		sub.w	d1,(Player_1+x_pos).w
		sub.w	d1,(Player_2+x_pos).w
		sub.w	d1,d0
		move.w	d0,d1
		andi.w	#-$10,d1
		subi.w	#$10,d1
		move.w	d1,(Camera_X_pos_rounded).w
		move.w	d1,(HScroll_table+$1FE).w

loc_3B7A8:
		move.w	d0,(Camera_X_pos).w
		move.w	d0,(Camera_X_pos_copy).w
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_max_X_pos).w
		addi.w	#$18,d0
		cmp.w	(Player_1+x_pos).w,d0
		bls.s	loc_3B7CE
		move.w	d0,(Player_1+x_pos).w
		move.w	#$400,(Player_1+ground_vel).w
		bra.s	locret_3B7DC
; ---------------------------------------------------------------------------

loc_3B7CE:
		addi.w	#$88,d0
		cmp.w	(Player_1+x_pos).w,d0
		bhi.s	locret_3B7DC
		move.w	d0,(Player_1+x_pos).w

locret_3B7DC:
		rts
; ---------------------------------------------------------------------------

Obj_AIZBattleship:
		move.l	#Obj_AIZBattleshipMain,(a0)
		move.l	#AIZBattleship_BombScript,$2E(a0)
		move.w	#$1A4,$32(a0)
		move.w	#$3FBC,d1
		moveq	#1,d2

loc_3B7F8:
		jsr	(Create_New_Sprite3).l
		bne.s	loc_3B812
		move.l	#Obj_BattleshipPropeller,(a1)
		move.w	d1,$2E(a1)
		move.w	#$3DCC,d1
		dbf	d2,loc_3B7F8

loc_3B812:
		lea	(Normal_palette_line_2).w,a1
		lea	Pal_AIZBattleship(pc),a5
		moveq	#7,d0

loc_3B81C:
		move.l	(a5)+,(a1)+
		dbf	d0,loc_3B81C

Obj_AIZBattleshipMain:
		subi.l	#$8800,(_unkEE98).w
		move.w	(_unkEE98).w,d0
		cmpi.w	#$3CDC,d0
		bpl.s	loc_3B84E
		move.l	#Obj_AIZ2BossSmall,(a0)
		st	(Events_fg_4).w
		jsr	(Create_New_Sprite3).l
		bne.s	locret_3B84C
		move.l	#Obj_AIZ2MakeTree,(a1)

locret_3B84C:
		rts
; ---------------------------------------------------------------------------

loc_3B84E:
		move.w	d0,d1
		subi.w	#$3D5C,d0
		bpl.s	loc_3B864
		neg.w	d0
		asr.w	#1,d0
		add.w	(_unkEEA2).w,d0
		move.w	d0,(_unkEE9C).w
		bra.s	loc_3B87A
; ---------------------------------------------------------------------------

loc_3B864:
		asr.w	#2,d1
		andi.w	#$F,d1
		lea	AIZBattleShip_BobbingMotion(pc),a1
		move.b	(a1,d1.w),d1
		add.w	(_unkEEA2).w,d1
		move.w	d1,(_unkEE9C).w

loc_3B87A:
		move.w	(Level_frame_counter).w,d0
		subq.w	#1,d0
		andi.w	#$F,d0
		bne.s	loc_3B88E
		moveq	#signextendB(sfx_LargeShip),d0
		jsr	(Play_Sound_2).l

loc_3B88E:
		subq.w	#1,$32(a0)
		bcc.s	locret_3B8B4
		movea.l	$2E(a0),a2
		move.w	(a2)+,$32(a0)
		bmi.s	locret_3B8B4
		jsr	(Create_New_Sprite3).l
		bne.s	locret_3B8B4
		move.l	#Obj_AIZShipBomb,(a1)
		move.w	(a2)+,$2E(a1)
		move.l	a2,$2E(a0)

locret_3B8B4:
		rts
; ---------------------------------------------------------------------------

Obj_BattleshipPropeller:
		move.l	#Obj_BattleshipPropellerMain,(a0)
		move.b	#4,4(a0)
		move.b	#$20,6(a0)
		move.b	#8,7(a0)
		move.w	#$80,8(a0)
		move.w	#$500,$A(a0)
		move.l	#Map_AIZShipPropeller,$C(a0)
		move.w	#$A71,$30(a0)

Obj_BattleshipPropellerMain:
		cmpi.w	#$C,(Events_routine_fg).w
		bne.s	loc_3B8F6
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3B8F6:
		lea	Ani_AIZShipPropeller(pc),a1
		jsr	(Animate_Sprite).l
		jsr	Translate_Camera2ObjPosition(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_AIZShipBomb:
		move.l	#Obj_AIZShipBombMain,(a0)
		move.b	#4,4(a0)
		move.b	#$18,7(a0)
		move.w	#$80,8(a0)
		move.w	#$500,$A(a0)
		move.l	#Map_AIZ2BombExplode,$C(a0)
		move.b	#$10,$1E(a0)
		move.w	#$A60,$30(a0)
		move.w	#6,$32(a0)

Obj_AIZShipBombMain:
		moveq	#0,d0
		move.b	5(a0),d0
		jmp	loc_3B94C(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3B94C:
		bra.w	AIZShipBomb_ReadyDrop
; ---------------------------------------------------------------------------
		bra.w	AIZShipBomb_Delay
; ---------------------------------------------------------------------------
		bra.w	AIZShipBomb_Drop
; ---------------------------------------------------------------------------

AIZShipBomb_ReadyDrop:
		addq.w	#2,$30(a0)
		cmpi.w	#$A80,$30(a0)
		bcs.s	loc_3B97C
		addq.b	#4,5(a0)
		bra.s	loc_3B97C
; ---------------------------------------------------------------------------

AIZShipBomb_Delay:
		subq.w	#1,$32(a0)
		bne.s	loc_3B97C
		addq.b	#4,5(a0)
		moveq	#signextendB(sfx_MissileThrow),d0
		jsr	(Play_Sound_2).l

loc_3B97C:
		jsr	Translate_Camera2ObjPosition(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

AIZShipBomb_Drop:
		move.l	$14(a0),d0
		add.l	$1A(a0),d0
		move.l	d0,$14(a0)
		addi.l	#$2000,$1A(a0)
		swap	d0
		jsr	Translate_Camera2ObjX(pc)
		jsr	(Draw_Sprite).l
		jsr	(ObjCheckFloorDist).l
		cmpi.w	#-8,d1
		bgt.s	locret_3BA04
		move.w	#$10,(Screen_shake_flag).w
		moveq	#signextendB(sfx_MissileExplode),d0
		jsr	(Play_Sound_2).l
		jsr	(Create_New_Sprite3).l
		bne.s	loc_3B9FE
		lea	AIZBombExplodeDat(pc),a2
		moveq	#7,d1

loc_3B9CE:
		move.l	#Obj_AIZBombExplosion,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	(a2)+,d2
		add.w	d2,$10(a1)
		move.w	(a2)+,d2
		add.w	d2,$14(a1)
		move.w	(a2)+,$20(a1)
		move.w	(a2)+,$2E(a1)
		jsr	(CreateNewSprite4).l
		dbne	d1,loc_3B9CE

loc_3B9FE:
		move.l	#Delete_Current_Sprite,(a0)

locret_3BA04:
		rts

; =============== S U B R O U T I N E =======================================


Translate_Camera2ObjPosition:
		move.w	$30(a0),d0
		sub.w	(_unkEE9C).w,d0
		add.w	(Camera_Y_pos_copy).w,d0

Translate_Camera2ObjX:
		sub.w	(Screen_shake_last_offset).w,d0
		add.w	(Screen_shake_offset).w,d0
		move.w	d0,$14(a0)
		move.w	$2E(a0),d0
		sub.w	(_unkEE98).w,d0
		add.w	(Camera_X_pos_copy).w,d0
		move.w	d0,$10(a0)
		rts
; End of function Translate_Camera2ObjPosition

; ---------------------------------------------------------------------------

Obj_AIZBombExplosion:
		move.w	(Level_repeat_offset).w,d0
		sub.w	d0,$10(a0)
		subq.w	#1,$2E(a0)
		bmi.s	loc_3BA40
		rts
; ---------------------------------------------------------------------------

loc_3BA40:
		move.l	#Obj_AIZBombExplosionAnim,(a0)
		move.b	#4,4(a0)
		move.b	#$20,7(a0)
		move.w	#$500,$A(a0)
		move.l	#Map_AIZ2BombExplode,$C(a0)
		move.b	#-$75,$28(a0)
		bra.s	loc_3BA70
; ---------------------------------------------------------------------------

Obj_AIZBombExplosionAnim:
		move.w	(Level_repeat_offset).w,d0
		sub.w	d0,$10(a0)

loc_3BA70:
		lea	Ani_AIZ2BombExplode(pc),a1
		jsr	(Animate_SpriteIrregularDelay).l
		tst.b	5(a0)
		beq.s	loc_3BA86
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3BA86:
		moveq	#4,d0
		add.b	$20(a0),d0
		cmp.b	$22(a0),d0
		bls.s	loc_3BA98
		jsr	(Add_SpriteToCollisionResponseList).l

loc_3BA98:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_AIZ2MakeTree:
		cmpi.w	#$44D0,(Camera_X_pos_copy).w
		bcc.s	loc_3BAA8
		rts
; ---------------------------------------------------------------------------

loc_3BAA8:
		move.l	#loc_3BABC,(a0)
		move.w	(Events_fg_1).w,$2E(a0)
		move.l	#AIZMakeTreeScript,$30(a0)

loc_3BABC:
		movea.l	$30(a0),a2
		tst.w	(a2)
		bpl.s	loc_3BACA
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3BACA:
		move.w	(Events_fg_1).w,d0
		sub.w	$2E(a0),d0
		cmp.w	(a2)+,d0
		bcs.s	locret_3BAEC
		jsr	(Create_New_Sprite3).l
		bne.s	locret_3BAEC
		move.l	#Obj_AIZ2BGTree,(a1)
		move.w	(a2)+,8(a1)
		move.l	a2,$30(a0)

locret_3BAEC:
		rts
; ---------------------------------------------------------------------------

Obj_AIZ2BGTree:
		move.l	#Obj_AIZ2BGTreeMove,(a0)
		move.w	#$438,$A(a0)
		move.l	#Map_AIZ2BGTree,$C(a0)
		move.w	#$E9,$14(a0)
		move.w	#$1C0,$2E(a0)
		move.w	(Events_fg_1).w,$30(a0)

Obj_AIZ2BGTreeMove:
		cmpi.w	#$4880,(Camera_X_pos_copy).w
		bcs.s	loc_3BB22
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3BB22:
		move.w	(Events_fg_1).w,d0
		sub.w	$30(a0),d0
		move.w	d0,d1
		asr.w	#2,d0
		sub.w	d0,d1
		move.w	$2E(a0),d0
		sub.w	d1,d0
		move.w	d0,$10(a0)
		cmpi.w	#$1C0,d0
		bcc.s	locret_3BB46
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

locret_3BB46:
		rts
; ---------------------------------------------------------------------------

Obj_AIZ2BossSmall:
		move.l	#Obj_AIZ2BossSmallMain,(a0)
		move.w	#$300,8(a0)
		move.w	#$500,$A(a0)
		move.l	#Map_AIZ2BossSmall,$C(a0)
		move.w	#$30,$10(a0)
		move.w	#$D8,$14(a0)
		move.w	#5,$18(a0)
		clr.w	$2E(a0)
		lea	(Normal_palette_line_2+2).w,a1
		lea	Pal_AIZBossSmall(pc),a5
		moveq	#6,d0

loc_3BB82:
		move.l	(a5)+,(a1)+
		dbf	d0,loc_3BB82

Obj_AIZ2BossSmallMain:
		tst.b	$2E(a0)
		bne.s	loc_3BB9A
		cmpi.w	#$4670,(Camera_X_pos_copy).w
		bcs.s	locret_3BC04
		st	$2E(a0)

loc_3BB9A:
		cmpi.w	#$240,$10(a0)
		bcs.s	loc_3BBBA
		clr.b	(Scroll_lock).w
		clr.w	(Special_events_routine).w
		clr.w	(Level_repeat_offset).w
		move.w	#$6000,(Camera_max_X_pos).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3BBBA:
		move.l	$10(a0),d0
		move.l	$18(a0),d1
		add.l	d1,d0
		move.l	d0,$10(a0)
		tst.b	$2F(a0)
		bne.s	loc_3BBE0
		subi.l	#$E80,d1
		cmpi.l	#-$10000,d1
		sle	$2F(a0)
		bra.s	loc_3BBE6
; ---------------------------------------------------------------------------

loc_3BBE0:
		addi.l	#$E80,d1

loc_3BBE6:
		move.l	d1,$18(a0)
		jsr	(Draw_Sprite).l
		move.w	(Level_frame_counter).w,d0
		subq.w	#1,d0
		andi.w	#$F,d0
		bne.s	locret_3BC04
		moveq	#signextendB(sfx_EggmanSiren),d0
		jsr	(Play_Sound_2).l

locret_3BC04:
		rts
; ---------------------------------------------------------------------------
AIZ2_BGDeformArray:
		dc.w $10, $20, $38, $58, $28, $40, $38, $18, $18, $90, $48, $10, $18
		dc.w $20, $38, $58, $28, $40, $38, $18, $18, $90, $48, $10, $7FFF
AIZ2_BGDeformMake:
		dc.b    1, $12, $2A
		dc.b    3, $10, $14, $28, $2C
		dc.b    3,  $E, $16, $26, $2E
		dc.b    4,   0,  $C, $18, $24, $30
		dc.b    3,   2,  $A, $1A, $22
		dc.b    3,   4,   8, $1C, $20
		dc.b    1,   6, $1E
		dc.b  $FF,   0
AIZ2_FGDeformDelta:
		dc.w   0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  0,  0
		dc.w   0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  0,  0
		dc.w   0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  0,  0
		dc.w   0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  0,  0
		dc.w   0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  0,  0
		dc.w   0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  0,  0
		dc.w   0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  0,  0
		dc.w   0,  0,  1,  1,  0,  0,  0,  0,  1,  0,  0,  0,  0,  1,  0,  0
		dc.w   0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  0,  0,  1,  1,  0,  0
ALZ_AIZ2_BGDeformDelta:
		dc.w  -2,  1,  2,  2, -1,  2,  2,  1,  2, -1, -2, -2, -2,  1, -1, -1
		dc.w  -1,  0, -2,  0,  0,  0, -2,  0, -2,  2,  0, -2,  2,  2, -1, -2
		dc.w  -2,  1,  2,  2, -1,  2,  2,  1,  2, -1, -2, -2, -2,  1, -1, -1
		dc.w  -1,  0, -2,  0,  0,  0, -2,  0, -2,  2,  0, -2,  2,  2, -1, -2
		dc.w  -2,  1,  2,  2, -1,  2,  2,  1,  2, -1, -2, -2, -2,  1, -1, -1
		dc.w  -1,  0, -2,  0,  0,  0, -2,  0, -2,  2,  0, -2,  2,  2, -1, -2
		dc.w  -2,  1,  2,  2, -1,  2,  2,  1,  2, -1, -2, -2, -2,  1, -1, -1
		dc.w  -1,  0, -2,  0,  0,  0, -2,  0, -2,  2,  0, -2,  2,  2, -1, -2
		dc.w  -2,  1,  2,  2, -1,  2,  2,  1,  2, -1, -2, -2, -2,  1, -1, -1
		dc.w  -1,  0, -2,  0,  0,  0, -2,  0, -2,  2,  0, -2,  2,  2, -1, -2
		dc.w  -2,  1,  2,  2, -1,  2,  2,  1,  2, -1, -2, -2, -2,  1, -1, -1
		dc.w  -1,  0, -2,  0,  0,  0, -2,  0, -2,  2,  0, -2,  2,  2, -1, -2
		dc.w  -2,  1,  2,  2, -1,  2,  2,  1,  2, -1, -2, -2, -2,  1, -1, -1
		dc.w  -1,  0, -2,  0,  0,  0, -2,  0, -2,  2,  0, -2,  2,  2, -1, -2
		dc.w  -2,  1,  2,  2, -1,  2,  2,  1,  2, -1, -2, -2, -2,  1, -1, -1
		dc.w  -1,  0, -2,  0,  0,  0, -2,  0, -2,  2,  0, -2,  2,  2, -1, -2
Pal_AIZBattleship:
		binclude "Levels/AIZ/Palettes/Battleship.bin"
		even
Pal_AIZBossSmall:
		binclude "Levels/AIZ/Palettes/Boss Small.bin"
		even
AIZBattleShip_BobbingMotion:
		dc.b   4,  4,  3,  3,  2,  1,  1,  0,  0,  0,  1,  1,  2,  3,  3,  4
AIZBattleship_BombScript:
		dc.w    $20, $3F5C
		dc.w    $20, $3F2C
		dc.w    $20, $3F5C
		dc.w    $20, $3F2C
		dc.w    $20, $3F5C
		dc.w    $38, $3F2C
		dc.w    $20, $3EDC
		dc.w    $20, $3EAC
		dc.w    $20, $3EDC
		dc.w    $20, $3EAC
		dc.w    $20, $3EDC
		dc.w    $38, $3EAC
		dc.w    $20, $3E5C
		dc.w    $20, $3E2C
		dc.w    $20, $3E5C
		dc.w    $20, $3E2C
		dc.w    $20, $3E5C
		dc.w    $38, $3E2C
		dc.w    $40, $3DEC
		dc.w    $40, $3DEC
		dc.w    $40, $3DEC
		dc.w  $FFFF
AIZBombExplodeDat:
		dc.w      0, $FFC4,     0,    $A
		dc.w      0, $FFF4,  $101,     9
		dc.w  $FFFC, $FFCC,     0,     8
		dc.w     $C, $FFFC,  $101,     7
		dc.w  $FFF4, $FFFC,  $101,     5
		dc.w      8, $FFDC,     0,     4
		dc.w  $FFF8, $FFE4,     0,     2
		dc.w      0, $FFF4,     0,     0
AIZMakeTreeScript:
		dc.w     0, $280
		dc.w   $32, $380
		dc.w   $8E, $280
		dc.w  $103, $380
		dc.w  $179, $280
		dc.w  $1C6, $380
		dc.w  $233, $280
		dc.w  $2A0, $380
		dc.w  $30A, $280
		dc.w  $37C, $380
		dc.w  $3C7, $280
		dc.w  $401, $380
		dc.w  $439, $280
		dc.w  $46E, $380
		dc.w  $4CA, $280
		dc.w  $50C, $380
		dc.w  $557, $280
		dc.w $FFFF
Map_AIZShipPropeller:
		include "Levels/AIZ/Misc Object Data/Map - Act 2 Ship Propeller.asm"
Ani_AIZShipPropeller:
		include "Levels/AIZ/Misc Object Data/Anim - Act 2 Ship Propeller.asm"
Map_AIZ2BombExplode:
		include "Levels/AIZ/Misc Object Data/Map - Act 2 Bomb Explosion.asm"
Ani_AIZ2BombExplode:
		include "Levels/AIZ/Misc Object Data/Anim - Act 2 Bomb Explosion.asm"
Map_AIZ2BGTree:
		include "Levels/AIZ/Misc Object Data/Map - Act 2 Background Tree.asm"
Map_AIZ2BossSmall:
		include "Levels/AIZ/Misc Object Data/Map - Act 2 Boss Small.asm"
; ---------------------------------------------------------------------------

HCZ1_ScreenInit:
		clr.w	(Events_bg+$16).w
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

HCZ1_ScreenEvent:
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

HCZ1_BackgroundInit:
		jsr	HCZ1_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		moveq	#$60,d0
		cmp.w	(Events_bg+$10).w,d0
		blt.s	loc_3C2BA
		neg.w	d0
		cmp.w	(Events_bg+$10).w,d0
		bgt.s	loc_3C2BE

loc_3C2BA:
		move.w	d0,(Events_bg+$10).w

loc_3C2BE:
		lea	HCZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

HCZ1_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3C2D2(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3C2D2:
		bra.w	HCZ1BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	HCZ1BGE_DoTransition
; ---------------------------------------------------------------------------

HCZ1BGE_Normal:
		tst.w	(Events_fg_5).w
		beq.s	loc_3C336
		clr.w	(Events_fg_5).w
		movem.l	d7-a0/a2-a3,-(sp)
		lea	(HCZ2_128x128_Secondary_Kos).l,a1
		lea	(RAM_start+$A00).l,a2
		jsr	(Queue_Kos).l
		lea	(HCZ2_16x16_Secondary_Kos).l,a1
		lea	(Block_table+$558).w,a2
		jsr	(Queue_Kos).l
		lea	(HCZ2_8x8_Secondary_KosM).l,a1
		move.w	#$2360,d2
		jsr	(Queue_Kos_Module).l
		moveq	#$10,d0
		jsr	(Load_PLC).l
		moveq	#$11,d0
		jsr	(Load_PLC).l
		movem.l	(sp)+,d7-a0/a2-a3
		st	(Events_bg+$16).w
		addq.w	#4,(Events_routine_bg).w

loc_3C336:
		jsr	HCZ1_Deform(pc)
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		lea	HCZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

HCZ1BGE_DoTransition:
		tst.b	(Kos_modules_left).w
		bne.w	loc_3C3E6
		move.w	#$101,(Current_zone_and_act).w
		clr.b	(Dynamic_resize_routine).w
		clr.b	(Object_load_routine).w
		clr.b	(Rings_manager_routine).w
		clr.b	(Boss_flag).w
		clr.b	(Respawn_table_keep).w
		jsr	Clear_Switches(pc)
		move.l	#Obj_HCZWaterSplash,(Dynamic_object_RAM+(object_size*2)).w
		move.b	#1,(Dynamic_object_RAM+(object_size*2)+subtype).w
		movem.l	d7-a0/a2-a3,-(sp)
		jsr	(Load_Level).l
		jsr	(LoadSolids).l
		jsr	(CheckLevelForWater).l
		move.w	#$6A0,d0
		move.w	d0,(Water_level).w
		move.w	d0,(Mean_water_level).w
		move.w	d0,(Target_water_level).w
		moveq	#$D,d0
		jsr	(LoadPalette_Immediate).l
		movem.l	(sp)+,d7-a0/a2-a3
		move.w	#$3600,d0
		moveq	#0,d1
		sub.w	d0,(Player_1+x_pos).w
		sub.w	d0,(Player_2+x_pos).w
		jsr	Offset_ObjectsDuringTransition(pc)
		sub.w	d0,(Camera_X_pos).w
		sub.w	d0,(Camera_X_pos_copy).w
		sub.w	d0,(Camera_min_X_pos).w
		sub.w	d0,(Camera_max_X_pos).w
		jsr	Reset_TileOffsetPositionActual(pc)
		clr.w	(Events_routine_bg).w

loc_3C3E6:
		jsr	HCZ1_Deform(pc)
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		lea	HCZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)

; =============== S U B R O U T I N E =======================================


HCZ1_Deform:
		move.w	(Camera_Y_pos_copy).w,d0
		subi.w	#$610,d0
		move.w	d0,d1
		asr.w	#2,d0
		move.w	d0,d2
		addi.w	#$190,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		sub.w	d1,d2
		move.w	d2,(Events_bg+$10).w
		move.w	(Camera_X_pos_copy).w,d0
		swap	d0
		clr.w	d0
		tst.w	d2
		beq.w	loc_3C4E2
		move.l	d0,d1
		move.l	d0,d3
		asr.l	#7,d3
		moveq	#$2F,d4
		cmpi.w	#-$60,d2
		bgt.s	loc_3C45A
		lea	(HScroll_table+$01A).w,a1

loc_3C442:
		swap	d1
		move.w	d1,(a1)+
		swap	d1
		sub.l	d3,d1
		swap	d1
		move.w	d1,(a1)+
		swap	d1
		sub.l	d3,d1
		dbf	d4,loc_3C442
		bra.w	loc_3C4E2
; ---------------------------------------------------------------------------

loc_3C45A:
		lea	(HScroll_table+$19A).w,a1

loc_3C45E:
		swap	d1
		move.w	d1,-(a1)
		swap	d1
		sub.l	d3,d1
		swap	d1
		move.w	d1,-(a1)
		swap	d1
		sub.l	d3,d1
		dbf	d4,loc_3C45E
		cmpi.w	#$60,d2
		bge.s	loc_3C4E2
		lea	(HScroll_table+$0DA).w,a1
		lea	(a1),a5
		lea	(HCZ_WaterlineScroll_Data).l,a6
		move.w	d2,d1
		bmi.s	loc_3C4B6
		move.w	d1,d3
		neg.w	d3
		addi.w	#$60,d3
		lsl.w	#5,d3
		adda.w	d3,a6
		add.w	d3,d3
		adda.w	d3,a6
		subq.w	#1,d1
		moveq	#0,d3
		lsr.w	#1,d1
		bcc.s	loc_3C4A8

loc_3C4A0:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),(a1)+

loc_3C4A8:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),(a1)+
		dbf	d1,loc_3C4A0
		bra.s	loc_3C4E2
; ---------------------------------------------------------------------------

loc_3C4B6:
		move.w	d1,d3
		addi.w	#$60,d3
		lsl.w	#5,d3
		adda.w	d3,a6
		add.w	d3,d3
		adda.w	d3,a6
		neg.w	d1
		subq.w	#1,d1
		moveq	#0,d3
		lsr.w	#1,d1
		bcc.s	loc_3C4D6

loc_3C4CE:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),-(a1)

loc_3C4D6:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),-(a1)
		dbf	d1,loc_3C4CE

loc_3C4E2:
		move.l	d0,d1
		asr.l	#2,d0
		asr.l	#5,d1
		lea	(HScroll_table).w,a1
		swap	d0
		move.w	d0,(a1)
		move.w	d0,$18(a1)
		move.w	d0,d3
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,2(a1)
		move.w	d0,$16(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,4(a1)
		move.w	d0,$14(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,6(a1)
		move.w	d0,$12(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,8(a1)
		move.w	d0,$10(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,$A(a1)
		move.w	d0,$E(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,$C(a1)
		move.w	d0,$19A(a1)
		move.w	d0,d4
		tst.w	d2
		bpl.s	loc_3C570
		lea	(HScroll_table+$0DA).w,a1
		moveq	#$2F,d0

loc_3C556:
		move.w	d4,(a1)+
		move.w	d4,(a1)+
		dbf	d0,loc_3C556
		moveq	#$5F,d0
		add.w	d2,d0
		bmi.s	locret_3C58E
		lea	(HScroll_table+$01A).w,a1

loc_3C568:
		move.w	d3,(a1)+
		dbf	d0,loc_3C568
		bra.s	locret_3C58E
; ---------------------------------------------------------------------------

loc_3C570:
		lea	(HScroll_table+$01A).w,a1
		moveq	#$2F,d0

loc_3C576:
		move.w	d3,(a1)+
		move.w	d3,(a1)+
		dbf	d0,loc_3C576
		moveq	#$5F,d0
		sub.w	d2,d0
		bmi.s	locret_3C58E
		lea	(HScroll_table+$19A).w,a1

loc_3C588:
		move.w	d4,-(a1)
		dbf	d0,loc_3C588

locret_3C58E:
		rts
; End of function HCZ1_Deform

; ---------------------------------------------------------------------------
HCZ1_BGDeformArray:dc.w $40, 8, 8, 5, 5, 6, $F0, 6, 5, 5, 8, 8, $30, $80C0, $7FFF
; ---------------------------------------------------------------------------

HCZ2_ScreenInit:
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

HCZ2_ScreenEvent:
		move.w	(Screen_shake_offset).w,d0
		add.w	d0,(Camera_Y_pos_copy).w
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

HCZ2_BackgroundInit:
		cmpi.w	#$C00,(Camera_X_pos_copy).w
		bcc.s	loc_3C5E8
		cmpi.w	#$500,(Camera_Y_pos_copy).w
		bcs.s	loc_3C5E8
		move.w	#4,(Events_routine_bg).w
		jsr	HCZ2_WallMove(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		jsr	Refresh_PlaneFull(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

loc_3C5E8:
		move.w	#$10,(Events_routine_bg).w
		jsr	HCZ2_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		lea	HCZ2_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

HCZ2_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3C610(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3C610:
		bra.w	HCZ2BGE_WallMoveInit
; ---------------------------------------------------------------------------
		bra.w	HCZ2BGE_WallMove
; ---------------------------------------------------------------------------
		bra.w	HCZ2BGE_NormalTransition
; ---------------------------------------------------------------------------
		bra.w	HCZ2BGE_NormalRefresh
; ---------------------------------------------------------------------------
		bra.w	HCZ2BGE_Normal
; ---------------------------------------------------------------------------

HCZ2BGE_WallMoveInit:
		addq.w	#4,(Events_routine_bg).w

HCZ2BGE_WallMove:
		tst.w	(Events_fg_5).w
		bne.s	loc_3C66C
		jsr	HCZ2_WallMove(pc)
		jsr	DrawBGAsYouMove(pc)
		jsr	PlainDeformation(pc)
		jsr	ShakeScreen_Setup(pc)
		jsr	Get_BGActualEffectiveDiff(pc)
		clr.b	(Background_collision_flag).w
		move.w	(Player_1+x_pos).w,d0
		cmpi.w	#$3F0,d0
		bcs.s	locret_3C66A
		cmpi.w	#$C10,d0
		bcc.s	locret_3C66A
		move.w	(Player_1+y_pos).w,d0
		cmpi.w	#$600,d0
		bcs.s	locret_3C66A
		cmpi.w	#$840,d0
		bcc.s	locret_3C66A
		st	(Background_collision_flag).w

locret_3C66A:
		rts
; ---------------------------------------------------------------------------

loc_3C66C:
		clr.w	(Events_fg_5).w
		tst.w	(Screen_shake_flag).w
		bpl.s	loc_3C67A
		clr.w	(Screen_shake_flag).w

loc_3C67A:
		clr.b	(Background_collision_flag).w
		move.w	#$F0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w

HCZ2BGE_NormalTransition:
		move.w	#$400,d1
		moveq	#0,d2
		jsr	Draw_PlaneVertSingleBottomUp(pc)
		bpl.w	PlainDeformation
		jsr	HCZ2_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3C6C0
; ---------------------------------------------------------------------------

HCZ2BGE_NormalRefresh:
		jsr	HCZ2_Deform(pc)

loc_3C6C0:
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.s	loc_3C6D6
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3C6D6
; ---------------------------------------------------------------------------

HCZ2BGE_Normal:
		jsr	HCZ2_Deform(pc)

loc_3C6D6:
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		lea	HCZ2_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)

; =============== S U B R O U T I N E =======================================


HCZ2_WallMove:
		cmpi.b	#6,(Player_1+routine).w
		bcc.s	loc_3C754
		move.l	#$E000,d0
		cmpi.w	#$A88,(Player_1+x_pos).w
		bcs.s	loc_3C70E
		move.l	#$14000,d0

loc_3C70E:
		move.w	(Events_bg+$00).w,d1
		beq.s	loc_3C730
		cmpi.w	#-$600,d1
		bgt.s	loc_3C73C
		tst.w	(Screen_shake_flag).w
		bpl.s	loc_3C754
		move.w	#$E,(Screen_shake_flag).w
		moveq	#signextendB(sfx_Crash),d0
		jsr	(Play_Sound_2).l
		bra.s	loc_3C754
; ---------------------------------------------------------------------------

loc_3C730:
		cmpi.w	#$680,(Player_1+x_pos).w
		bcs.s	loc_3C754
		st	(Screen_shake_flag).w

loc_3C73C:
		sub.l	d0,(Events_bg+$00).w
		move.w	(Level_frame_counter).w,d0
		subq.w	#1,d0
		andi.w	#$F,d0
		bne.s	loc_3C754
		moveq	#signextendB(sfx_Rumble2),d0
		jsr	(Play_Sound_2).l

loc_3C754:
		move.w	(Camera_Y_pos_copy).w,d0
		subi.w	#$500,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		subi.w	#$200,d0
		add.w	(Events_bg+$00).w,d0
		move.w	d0,(Camera_X_pos_BG_copy).w
		rts
; End of function HCZ2_WallMove


; =============== S U B R O U T I N E =======================================


HCZ2_Deform:
		move.w	(Camera_Y_pos_copy).w,d0
		asr.w	#2,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d1
		asr.l	#3,d1
		lea	(HScroll_table).w,a1
		lea	HCZ2_BGDeformIndex(pc),a5
		moveq	#0,d2

loc_3C794:
		move.b	(a5)+,d3
		bmi.s	loc_3C7AC
		ext.w	d3
		swap	d0

loc_3C79C:
		move.b	(a5)+,d2
		move.w	d0,(a1,d2.w)
		dbf	d3,loc_3C79C
		swap	d0
		sub.l	d1,d0
		bra.s	loc_3C794
; ---------------------------------------------------------------------------

loc_3C7AC:
		move.w	$12(a1),d0
		sub.w	$A(a1),d0
		move.w	d0,(Events_bg+$10).w
		move.w	6(a1),d0
		sub.w	$12(a1),d0
		move.w	d0,(Events_bg+$12).w
		move.w	4(a1),d0
		sub.w	$12(a1),d0
		move.w	d0,(Events_bg+$14).w
		rts
; End of function HCZ2_Deform

; ---------------------------------------------------------------------------
HCZ2_BGDeformArray:dc.w 8, 8, $90, $10, 8, $30, $18, 8, 8, $A8, $30, $18
		dc.w 8, 8, $A8, $30, $18, 8, 8, $B0, $10, 8, $7FFF
HCZ2_BGDeformIndex:dc.b   3, $A
		dc.b $14,$1E
		dc.b $2C,  2
		dc.b  $C,$16
		dc.b $20,  5
		dc.b   0,  8
		dc.b  $E,$18
		dc.b $22,$2A
		dc.b   3,  2
		dc.b $10,$1A
		dc.b $24,  1
		dc.b $12,$1C
		dc.b   1,  6
		dc.b $28,  1
		dc.b   4,$26
		dc.b $FF,  0
; ---------------------------------------------------------------------------

MGZ1_ScreenInit:
		clr.w	(Events_bg+$16).w
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

MGZ1_ScreenEvent:
		move.w	(Screen_shake_offset).w,d0
		add.w	d0,(Camera_Y_pos_copy).w
		jsr	Do_ShakeSound(pc)
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

MGZ1_BackgroundInit:
		jsr	MGZ1_Deform(pc)
		moveq	#0,d0
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		lea	MGZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

MGZ1_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3C85C(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3C85C:
		bra.w	MGZ1BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	MGZ1BGE_Transition
; ---------------------------------------------------------------------------

MGZ1BGE_Normal:
		tst.w	(Events_fg_5).w
		beq.s	loc_3C8B4
		clr.w	(Events_fg_5).w
		movem.l	d7-a0/a2-a3,-(sp)
		lea	(MGZ2_128x128_Secondary_Kos).l,a1
		lea	(RAM_start+$6B00).l,a2
		jsr	(Queue_Kos).l
		lea	(MGZ2_16x16_Secondary_Kos).l,a1
		lea	(Block_table+$C60).w,a2
		jsr	(Queue_Kos).l
		lea	(MGZ2_8x8_Secondary_KosM).l,a1
		move.w	#$4A40,d2
		jsr	(Queue_Kos_Module).l
		moveq	#$14,d0
		jsr	(Load_PLC).l
		movem.l	(sp)+,d7-a0/a2-a3
		addq.w	#4,(Events_routine_bg).w

loc_3C8B4:
		jsr	MGZ1_Deform(pc)
		lea	MGZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jsr	ApplyDeformation(pc)
		jmp	ShakeScreen_Setup(pc)
; ---------------------------------------------------------------------------

MGZ1BGE_Transition:
		tst.b	(Kos_modules_left).w
		bne.w	loc_3C960
		move.w	#$201,(Current_zone_and_act).w
		clr.b	(Dynamic_resize_routine).w
		clr.b	(Object_load_routine).w
		clr.b	(Rings_manager_routine).w
		clr.b	(Boss_flag).w
		clr.b	(Respawn_table_keep).w
		jsr	Clear_Switches(pc)
		movem.l	d7-a0/a2-a3,-(sp)
		jsr	(Load_Level).l
		jsr	(LoadSolids).l
		moveq	#$F,d0
		jsr	(LoadPalette_Immediate).l
		movem.l	(sp)+,d7-a0/a2-a3
		move.w	#$2E00,d0
		move.w	#$600,d1
		sub.w	d0,(Player_1+x_pos).w
		sub.w	d1,(Player_1+y_pos).w
		sub.w	d0,(Player_2+x_pos).w
		sub.w	d1,(Player_2+y_pos).w
		jsr	Offset_ObjectsDuringTransition(pc)
		sub.w	d0,(Camera_X_pos).w
		sub.w	d1,(Camera_Y_pos).w
		sub.w	d0,(Camera_X_pos_copy).w
		sub.w	d1,(Camera_Y_pos_copy).w
		sub.w	d0,(Camera_min_X_pos).w
		sub.w	d0,(Camera_max_X_pos).w
		sub.w	d1,(Camera_min_Y_pos).w
		sub.w	d1,(Camera_max_Y_pos).w
		move.w	(Camera_max_Y_pos).w,(Camera_target_max_Y_pos).w
		jsr	Reset_TileOffsetPositionActual(pc)
		clr.l	(Events_bg+$10).w
		clr.w	(Events_bg+$14).w
		clr.w	(_unkEEA2).w
		clr.w	(Events_routine_bg).w

loc_3C960:
		jsr	MGZ1_Deform(pc)
		lea	MGZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)

; =============== S U B R O U T I N E =======================================


MGZ1_Deform:
		move.w	(Screen_shake_offset).w,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		swap	d0
		clr.w	d0
		asr.l	#2,d0
		move.l	d0,d1
		asr.l	#4,d1
		lea	(HScroll_table+$01C).w,a1
		moveq	#8,d2

loc_3C98A:
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		sub.l	d1,d0
		dbf	d2,loc_3C98A
		lea	(HScroll_table).w,a1
		move.l	(HScroll_table+$01C).w,d2
		addi.l	#$500,(HScroll_table+$01C).w
		asr.l	#1,d0
		moveq	#4,d3

loc_3C9AA:
		add.l	d2,d0
		addi.l	#$500,d2
		swap	d0
		move.w	d0,(a1)+
		swap	d0
		add.l	d1,d0
		dbf	d3,loc_3C9AA
		move.w	-2(a1),d0
		move.w	-4(a1),-2(a1)
		move.w	d0,-4(a1)
		rts
; End of function MGZ1_Deform


; =============== S U B R O U T I N E =======================================


Do_ShakeSound:
		cmpi.b	#6,(Player_1+routine).w
		bcc.s	locret_3C9F6
		tst.w	(Events_bg+$16).w
		bne.s	locret_3C9F6
		tst.w	(Screen_shake_flag).w
		bpl.s	locret_3C9F6
		move.w	(Level_frame_counter).w,d0
		subq.w	#1,d0
		andi.w	#$F,d0
		bne.s	locret_3C9F6
		moveq	#signextendB(sfx_Rumble2),d0
		jsr	(Play_Sound_2).l

locret_3C9F6:
		rts
; End of function Do_ShakeSound

; ---------------------------------------------------------------------------
MGZ1_BGDeformArray:dc.w $10, 4, 4, 8, 8, 8, $D, $13, 8, 8, 8, 8, $18, $7FFF
; ---------------------------------------------------------------------------

MGZ2_ScreenInit:
		clr.l	(Events_bg+$10).w
		clr.l	(Events_bg+$14).w
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

MGZ2_ScreenEvent:
		move.w	(Screen_shake_offset).w,d0
		add.w	d0,(Camera_Y_pos_copy).w
		jsr	Do_ShakeSound(pc)
		move.w	(Events_routine_fg).w,d0
		jmp	loc_3CA38(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3CA38:
		bra.w	MGZ2SE_Normal
; ---------------------------------------------------------------------------
		bra.w	MGZ2SE_Collapse
; ---------------------------------------------------------------------------
		bra.w	MGZ2SE_MoveBG
; ---------------------------------------------------------------------------

MGZ2SE_Normal:
		tst.w	(Events_fg_4).w
		bne.s	loc_3CA56
		jsr	MGZ2_QuakeEvent(pc)
		jsr	MGZ2_ChunkEvent(pc)
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

loc_3CA56:
		clr.w	(Events_fg_4).w
		st	(Events_bg+$16).w
		move.w	#$14,(Screen_shake_flag).w
		addq.w	#4,(Events_routine_fg).w

MGZ2SE_Collapse:
		jsr	MGZ2_LevelCollapse(pc)
		tst.w	(Screen_shake_flag).w
		bmi.s	loc_3CA76
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

loc_3CA76:
		lea	MGZ2_FGVScrollArray(pc),a4
		lea	(HScroll_table+$100).w,a5
		moveq	#$F,d6
		moveq	#$A,d5
		jmp	DrawTilesVDeform(pc)
; ---------------------------------------------------------------------------

MGZ2SE_MoveBG:
		move.l	(Events_bg+$08).w,d0
		cmpi.l	#loc_50000,d0
		bcc.s	loc_3CA9C
		addi.l	#$800,d0
		move.l	d0,(Events_bg+$08).w

loc_3CA9C:
		swap	d0
		add.w	d0,(Events_bg+$0C).w
		jmp	DrawTilesAsYouMove(pc)

; =============== S U B R O U T I N E =======================================


MGZ2_LevelCollapse:
		cmpi.b	#6,(Player_1+routine).w
		bcc.w	locret_3CC00
		tst.w	(Screen_shake_flag).w
		bmi.w	loc_3CB66
		bne.w	locret_3CC00
		movea.w	$38(a3),a1
		lea	$79(a1),a1
		move.w	-8(a3),d0
		subq.w	#3,d0
		moveq	#2,d1

loc_3CACC:
		clr.b	(a1)+
		clr.b	(a1)+
		clr.b	(a1)+
		adda.w	d0,a1
		dbf	d1,loc_3CACC
		lea	(HScroll_table+$102).w,a1
		lea	(HScroll_table+$13C).w,a5
		lea	$28(a5),a6
		move.w	(Camera_Y_pos_copy).w,d0
		and.w	(Camera_Y_pos_mask).w,d0
		moveq	#9,d1

loc_3CAEE:
		move.w	d0,(a1)
		addq.w	#4,a1
		clr.l	(a5)+
		clr.l	(a6)+
		dbf	d1,loc_3CAEE
		jsr	(Create_New_Sprite).l
		bne.s	loc_3CB54
		move.w	#$3C90,d1
		move.l	#$5C00790,d2
		move.l	#HScroll_table+$13C,d3
		moveq	#9,d4

loc_3CB14:
		move.l	#Obj_MGZ2LevelCollapseSolid,(a1)
		move.w	d1,$10(a1)
		move.w	d2,$2E(a1)
		move.l	d3,$30(a1)
		swap	d2
		jsr	(CreateNewSprite4).l
		bne.s	loc_3CB54
		move.l	#Obj_MGZ2LevelCollapseSolid,(a1)
		move.w	d1,$10(a1)
		move.w	d2,$2E(a1)
		move.l	d3,$30(a1)
		addi.w	#$20,d1
		swap	d2
		addq.l	#4,d3
		jsr	(CreateNewSprite4).l
		dbne	d4,loc_3CB14

loc_3CB54:
		st	(Screen_shake_flag).w
		clr.w	(Events_bg+$06).w
		st	(_unkEEA2).w
		move.w	#4,(Special_V_int_routine).w

loc_3CB66:
		lea	(HScroll_table+$100).w,a1
		lea	$28(a1),a4
		lea	$14(a4),a5
		lea	MGZ2_CollapseScrollDelay(pc),a6
		move.w	(Events_bg+$06).w,d0
		addq.w	#1,(Events_bg+$06).w
		moveq	#$A,d1
		moveq	#9,d2

loc_3CB82:
		cmp.w	(a6)+,d0
		bcs.s	loc_3CB8E
		addi.l	#$500,$64(a1)

loc_3CB8E:
		move.l	$64(a1),d3
		add.l	d3,(a5)+
		move.w	-4(a5),d3
		cmpi.w	#$2E0,d3
		bcs.s	loc_3CBA4
		move.w	#$2E0,d3
		subq.w	#1,d1

loc_3CBA4:
		move.w	(Camera_Y_pos_copy).w,d4
		sub.w	d3,d4
		move.w	d4,(a4)+
		move.w	d4,(a1)
		addq.w	#4,a1
		dbf	d2,loc_3CB82
		move.w	(Level_frame_counter).w,d0
		subq.w	#1,d0
		andi.w	#$F,d0
		bne.s	loc_3CBC8
		moveq	#signextendB(sfx_BigRumble),d0
		jsr	(Play_Sound_2).l

loc_3CBC8:
		tst.w	d1
		bne.s	locret_3CC00
		movea.w	$2C(a3),a1
		lea	$79(a1),a1
		move.w	-8(a3),d0
		subq.w	#3,d0
		moveq	#2,d1

loc_3CBDC:
		clr.b	(a1)+
		clr.b	(a1)+
		clr.b	(a1)+
		adda.w	d0,a1
		dbf	d1,loc_3CBDC
		clr.w	(Screen_shake_flag).w
		clr.l	(Events_bg+$08).w
		move.w	(Camera_X_pos_copy).w,(Events_bg+$0C).w
		move.w	#$C,(Special_V_int_routine).w
		addq.w	#4,(Events_routine_fg).w

locret_3CC00:
		rts
; End of function MGZ2_LevelCollapse


; =============== S U B R O U T I N E =======================================


MGZ2_QuakeEvent:
		move.w	(Player_1+x_pos).w,d0
		move.w	(Player_1+y_pos).w,d1
		move.w	(Events_bg+$10).w,d2
		jmp	loc_3CC12(pc,d2.w)
; End of function MGZ2_QuakeEvent

; ---------------------------------------------------------------------------

loc_3CC12:
		bra.w	MGZ2_QuakeEventCheck
; ---------------------------------------------------------------------------
		bra.w	MGZ2_QuakeEvent1
; ---------------------------------------------------------------------------
		bra.w	MGZ2_QuakeEvent2
; ---------------------------------------------------------------------------
		bra.w	MGZ2_QuakeEvent3
; ---------------------------------------------------------------------------
		bra.w	MGZ2_QuakeEvent1Cont
; ---------------------------------------------------------------------------
		bra.w	MGZ2_QuakeEvent2Cont
; ---------------------------------------------------------------------------
		bra.w	MGZ2_QuakeEvent3Cont
; ---------------------------------------------------------------------------

MGZ2_QuakeEventCheck:
		lea	(Events_bg+$12).w,a5
		lea	MGZ2_QuakeEventArray(pc),a1
		moveq	#4,d2
		moveq	#2,d3

loc_3CC3A:
		tst.b	(a5)
		bne.s	loc_3CC82
		cmp.w	(a1),d0
		bcs.s	loc_3CC82
		cmp.w	2(a1),d0
		bcc.s	loc_3CC82
		cmp.w	4(a1),d1
		bcs.s	loc_3CC82
		cmp.w	6(a1),d1
		bcc.s	loc_3CC82
		move.w	d2,(Events_bg+$10).w
		move.w	8(a1),d0
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		move.w	$A(a1),d0
		cmpi.w	#4,d2
		bne.s	loc_3CC78
		move.w	d0,(Camera_max_X_pos).w
		move.w	d0,(Camera_target_max_X_pos).w
		rts
; ---------------------------------------------------------------------------

loc_3CC78:
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_target_min_X_pos).w
		rts
; ---------------------------------------------------------------------------

loc_3CC82:
		lea	$C(a1),a1
		addq.w	#1,a5
		addq.w	#4,d2
		dbf	d3,loc_3CC3A
		rts
; ---------------------------------------------------------------------------

MGZ2_QuakeEvent1:
		cmpi.w	#$780,d0
		bcs.w	loc_3CD66
		move.w	(Camera_max_X_pos).w,d0
		cmp.w	(Camera_X_pos).w,d0
		bhi.s	locret_3CCD2
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_target_min_X_pos).w
		st	(Events_bg+$12).w
		addi.w	#$C,(Events_bg+$10).w
		st	(Screen_shake_flag).w
		jsr	(Create_New_Sprite).l
		bne.s	locret_3CCD2
		move.l	#Obj_MGZ2DrillingEggman,(a1)
		move.w	#$8E0,$10(a1)
		move.w	#$690,$14(a1)

locret_3CCD2:
		rts
; ---------------------------------------------------------------------------

MGZ2_QuakeEvent2:
		cmpi.w	#$3200,d0
		bcc.w	loc_3CD66
		move.w	(Camera_min_X_pos).w,d0
		cmp.w	(Camera_X_pos).w,d0
		bcs.s	locret_3CD1C
		move.w	d0,(Camera_max_X_pos).w
		move.w	d0,(Camera_target_max_X_pos).w
		st	(Events_bg+$13).w
		addi.w	#$C,(Events_bg+$10).w
		st	(Screen_shake_flag).w
		jsr	(Create_New_Sprite).l
		bne.s	locret_3CD1C
		move.l	#Obj_MGZ2DrillingEggman,(a1)
		bset	#0,4(a1)
		move.w	#$2FA0,$10(a1)
		move.w	#$2D0,$14(a1)

locret_3CD1C:
		rts
; ---------------------------------------------------------------------------

MGZ2_QuakeEvent3:
		cmpi.w	#$3480,d0
		bcc.s	loc_3CD66
		move.w	(Camera_min_X_pos).w,d0
		cmp.w	(Camera_X_pos).w,d0
		bcs.s	locret_3CD64
		move.w	d0,(Camera_max_X_pos).w
		move.w	d0,(Camera_target_max_X_pos).w
		st	(Events_bg+$14).w
		addi.w	#$C,(Events_bg+$10).w
		st	(Screen_shake_flag).w
		jsr	(Create_New_Sprite).l
		bne.s	locret_3CD64
		move.l	#Obj_MGZ2DrillingEggman,(a1)
		bset	#0,4(a1)
		move.w	#$3300,$10(a1)
		move.w	#$790,$14(a1)

locret_3CD64:
		rts
; ---------------------------------------------------------------------------

loc_3CD66:
		move.w	#$1000,d0
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		move.l	#$6000,d0
		move.l	d0,(Camera_min_X_pos).w
		move.l	d0,(Camera_target_min_X_pos).w
		clr.w	(Events_bg+$10).w
		rts
; ---------------------------------------------------------------------------

MGZ2_QuakeEvent1Cont:
		cmpi.w	#$980,(Player_1+x_pos).w
		bcc.s	loc_3CDBA
		rts
; ---------------------------------------------------------------------------

MGZ2_QuakeEvent2Cont:
		cmpi.w	#$100,(Player_1+y_pos).w
		bcc.s	locret_3CDAE
		cmpi.w	#$2F80,(Player_1+x_pos).w
		bcs.s	locret_3CDAE
		move.w	#$6000,d0
		move.w	d0,(Camera_max_X_pos).w
		move.w	d0,(Camera_target_max_X_pos).w
		bra.s	loc_3CDBA
; ---------------------------------------------------------------------------

locret_3CDAE:
		rts
; ---------------------------------------------------------------------------

MGZ2_QuakeEvent3Cont:
		cmpi.w	#$3200,(Player_1+x_pos).w
		bcs.s	loc_3CDBA
		rts
; ---------------------------------------------------------------------------

loc_3CDBA:
		move.w	#$1000,d0
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		clr.w	(Events_bg+$10).w
		rts

; =============== S U B R O U T I N E =======================================


MGZ2_ChunkEvent:
		move.w	(Events_bg+$04).w,d0
		jmp	loc_3CDD4(pc,d0.w)
; End of function MGZ2_ChunkEvent

; ---------------------------------------------------------------------------

loc_3CDD4:
		bra.w	MGZ2_ChunkEventCheck
; ---------------------------------------------------------------------------
		bra.w	MGZ2_ChunkEvent1
; ---------------------------------------------------------------------------
		bra.w	MGZ2_ChunkEvent2_3
; ---------------------------------------------------------------------------
		bra.w	MGZ2_ChunkEvent2_3
; ---------------------------------------------------------------------------
		bra.w	MGZ2_ChunkEventReset
; ---------------------------------------------------------------------------
		rts
; ---------------------------------------------------------------------------

MGZ2_ChunkEventCheck:
		move.w	(Player_1+x_pos).w,d0
		move.w	(Player_1+y_pos).w,d1
		lea	MGZ2_ChunkEventArray(pc),a1
		moveq	#4,d2
		moveq	#2,d3

loc_3CDFA:
		cmp.w	(a1),d0
		bcs.s	loc_3CE1C
		cmp.w	2(a1),d0
		bcc.s	loc_3CE1C
		cmp.w	4(a1),d1
		bcs.s	loc_3CE1C
		cmp.w	6(a1),d1
		bcc.s	loc_3CE1C
		cmpi.w	#4,d2
		bne.s	loc_3CE28
		tst.w	(Screen_shake_flag).w
		bmi.s	loc_3CE28

loc_3CE1C:
		lea	$C(a1),a1
		addq.w	#4,d2
		dbf	d3,loc_3CDFA
		rts
; ---------------------------------------------------------------------------

loc_3CE28:
		move.w	d2,(Events_bg+$04).w
		clr.w	(Events_bg+$06).w
		clr.w	(Events_bg+$08).w
		move.w	8(a1),(Events_bg+$0A).w
		move.w	$A(a1),(Events_bg+$0C).w

MGZ2_ChunkEvent1:
		move.w	(Events_bg+$06).w,d0
		cmpi.w	#$5C,d0
		bcs.s	loc_3CE7C
		clr.w	(Screen_shake_flag).w
		clr.w	(Camera_min_X_pos).w
		clr.w	(Camera_target_min_X_pos).w
		move.w	#$10,(Events_bg+$04).w
		rts
; ---------------------------------------------------------------------------

MGZ2_ChunkEvent2_3:
		move.w	(Events_bg+$06).w,d0
		cmpi.w	#$5C,d0
		bcs.s	loc_3CE7C
		move.w	#$6000,d0
		move.w	d0,(Camera_max_X_pos).w
		move.w	d0,(Camera_target_max_X_pos).w
		move.w	#$14,(Events_bg+$04).w
		rts
; ---------------------------------------------------------------------------

loc_3CE7C:
		subq.w	#1,(Events_bg+$08).w
		bpl.s	locret_3CEDA
		move.w	#6,(Events_bg+$08).w
		move.w	d0,d2
		bsr.s	MGZ2_ModifyChunk
		move.w	(Events_bg+$0A).w,d0
		addi.w	#$80,d0
		sub.w	(Camera_X_pos_copy).w,d0
		bcs.s	locret_3CEDA
		cmpi.w	#$1C0,d0
		bcc.s	locret_3CEDA
		move.w	(Events_bg+$0C).w,d0
		lea	MGZ2_ScreenRedrawArray(pc),a1
		add.w	(a1,d2.w),d0
		move.w	2(a1,d2.w),d2

loc_3CEB0:
		move.w	(Camera_Y_pos_copy).w,d3
		and.w	(Camera_Y_pos_mask).w,d3
		cmp.w	d3,d0
		bcs.s	loc_3CED2
		addi.w	#$F0,d3
		cmp.w	d3,d0
		bcc.s	loc_3CED2
		move.w	(Events_bg+$0A).w,d1
		moveq	#8,d6
		swap	d2
		jsr	Setup_TileRowDraw(pc)
		swap	d2

loc_3CED2:
		addi.w	#$10,d0
		dbf	d2,loc_3CEB0

locret_3CEDA:
		rts
; ---------------------------------------------------------------------------

MGZ2_ChunkEventReset:
		cmpi.w	#$2A00,(Player_1+x_pos).w
		bcs.s	locret_3CEEC
		clr.w	(Events_bg+$04).w
		moveq	#$5C,d0
		bra.s	MGZ2_ModifyChunk
; ---------------------------------------------------------------------------

locret_3CEEC:
		rts

; =============== S U B R O U T I N E =======================================


MGZ2_ModifyChunk:
		lea	MGZ2_ChunkReplaceArray(pc),a1
		lea	($FF5880).l,a5
		bsr.s	sub_3CF00
		lea	($FF7500).l,a5
; End of function MGZ2_ModifyChunk


; =============== S U B R O U T I N E =======================================


sub_3CF00:
		lea	(MGZ2_QuakeChunks).l,a4
		adda.w	(a1,d0.w),a4
		moveq	#7,d1

loc_3CF0C:
		move.l	(a4)+,(a5)+
		move.l	(a4)+,(a5)+
		move.l	(a4)+,(a5)+
		move.l	(a4)+,(a5)+
		dbf	d1,loc_3CF0C
		addq.w	#2,d0
		move.w	d0,(Events_bg+$06).w
		rts
; End of function sub_3CF00

; ---------------------------------------------------------------------------

Obj_MGZ2LevelCollapseSolid:
		cmpi.w	#8,(Events_routine_fg).w
		bne.s	loc_3CF2E
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3CF2E:
		movea.l	$30(a0),a1
		move.w	$2E(a0),d0
		add.w	(a1),d0
		move.w	d0,$14(a0)
		move.b	#$10,7(a0)
		bset	#7,$2A(a0)
		moveq	#$1B,d1
		moveq	#$40,d2
		moveq	#$40,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull2).l
; ---------------------------------------------------------------------------
MGZ2_QuakeEventArray:
		dc.w   $780,  $7C0,  $580,  $600,  $5A0,  $7E0
		dc.w  $31C0, $3200,  $1C0,  $280,  $1E0, $2F60
		dc.w  $3440, $3480,  $680,  $700,  $6A0, $32C0
MGZ2_ChunkEventArray:
		dc.w   $F68,  $F78,  $500,  $580,  $F00,  $500
		dc.w  $3680, $3700,  $2F0,  $380, $3700,  $280
		dc.w  $3000, $3080,  $770,  $800, $3080,  $700
MGZ2_ScreenRedrawArray:dc.w   $40,    3
		dc.w   $50,    3
		dc.w   $50,    4
		dc.w   $60,    4
		dc.w   $60,    3
		dc.w   $70,    2
		dc.w   $70,    3
		dc.w   $80,    3
		dc.w   $80,    3
		dc.w   $80,    4
		dc.w   $80,    4
		dc.w   $80,    4
		dc.w   $80,    5
		dc.w   $90,    5
		dc.w   $A0,    4
		dc.w   $90,    6
		dc.w   $80,    6
		dc.w   $90,    6
		dc.w   $A0,    5
		dc.w   $B0,    4
		dc.w   $C0,    3
		dc.w   $D0,    2
		dc.w   $E0,    1
MGZ2_ChunkReplaceArray:dc.w  $100, $500
		dc.w  $180, $580
		dc.w  $200, $600
		dc.w  $280, $680
		dc.w  $300, $700
		dc.w  $380, $780
		dc.w     0, $800
		dc.w     0, $880
		dc.w     0, $900
		dc.w     0, $980
		dc.w     0, $A00
		dc.w     0, $A80
		dc.w     0, $B00
		dc.w     0, $B80
		dc.w     0, $C00
		dc.w     0, $C80
		dc.w     0, $D00
		dc.w     0, $D80
		dc.w     0, $E00
		dc.w     0, $E80
		dc.w     0, $F00
		dc.w     0, $F80
		dc.w     0,$1000
		dc.w   $80, $480
MGZ2_CollapseScrollDelay:dc.w    $A,  $10,    2,    8,   $E,    6,    0,   $C,  $12,    4
MGZ2_FGVScrollArray:dc.w $3CA0,  $20,  $20,  $20,  $20,  $20,  $20,  $20,  $20,$7FFF
; ---------------------------------------------------------------------------

MGZ2_BackgroundInit:
		jsr	MGZ2_ClearBottomBG(pc)
		move.w	#4,(Events_routine_bg).w
		clr.w	(_unkEEA2).w
		move.w	(Player_1+x_pos).w,d0
		move.w	(Player_1+y_pos).w,d1
		cmpi.w	#$500,d1
		bcc.s	loc_3D0C0
		cmpi.w	#$3800,d0
		bcs.s	loc_3D10C
		move.w	#4,(Events_bg+$00).w
		move.l	#Obj_MGZ2BGMoveKnux,d1
		cmpi.w	#$3A80,d0
		bcs.s	loc_3D102
		move.w	#$220,(Events_bg+$02).w
		bra.s	loc_3D10C
; ---------------------------------------------------------------------------

loc_3D0C0:
		cmpi.w	#$800,d1
		bcs.s	loc_3D0E6
		cmpi.w	#$34C0,d0
		bcs.s	loc_3D10C
		move.w	#8,(Events_bg+$00).w
		move.l	#Obj_MGZ2BGMoveSonic,d1
		cmpi.w	#$3800,d0
		bcs.s	loc_3D102
		move.w	#$1D0,(Events_bg+$02).w
		bra.s	loc_3D10C
; ---------------------------------------------------------------------------

loc_3D0E6:
		cmpi.w	#$3900,d0
		bcs.s	loc_3D10C
		move.w	#$C,(Events_bg+$00).w
		move.w	#$1D0,(Events_bg+$02).w
		st	(Events_bg+$0E).w
		clr.l	(HScroll_table+$038).w
		bra.s	loc_3D10C
; ---------------------------------------------------------------------------

loc_3D102:
		jsr	(Create_New_Sprite).l
		bne.s	loc_3D10C
		move.l	d1,(a1)

loc_3D10C:
		jsr	MGZ2_BGDeform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		clr.l	(HScroll_table).w
		move.w	d2,(HScroll_table+$006).w
		lea	MGZ2_BGDrawArray(pc),a4
		lea	(HScroll_table).w,a5
		jsr	Refresh_PlaneTileDeform(pc)
		lea	MGZ2_BGDeformArray(pc),a4
		lea	(HScroll_table+$008).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

MGZ2_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3D13C(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3D13C:
		bra.w	MGZ2BGE_GoRefresh
; ---------------------------------------------------------------------------
		bra.w	MGZ2BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	MGZ2BGE_Refresh
; ---------------------------------------------------------------------------

MGZ2BGE_GoRefresh:
		jsr	MGZ2_ClearBottomBG(pc)
		clr.l	(HScroll_table).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3D190
; ---------------------------------------------------------------------------

MGZ2BGE_Normal:
		jsr	MGZ2_BGEventTrigger(pc)
		bne.s	loc_3D190
		jsr	MGZ2_BGDeform(pc)

loc_3D160:
		lea	MGZ2_BGDrawArray(pc),a4
		lea	(HScroll_table).w,a5
		moveq	#$20,d6
		moveq	#2,d5
		jsr	Draw_BG(pc)
		lea	MGZ2_BGDeformArray(pc),a4
		lea	(HScroll_table+$008).w,a5
		jsr	ApplyDeformation(pc)
		lea	MGZ2_FGVScrollArray(pc),a4
		lea	(HScroll_table+$126).w,a5
		jsr	Apply_FGVScroll(pc)
		jsr	Get_BGActualEffectiveDiff(pc)
		jmp	ShakeScreen_Setup(pc)
; ---------------------------------------------------------------------------

loc_3D190:
		jsr	MGZ2_BGDeform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		move.w	d2,(HScroll_table+$006).w
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3D1B8
; ---------------------------------------------------------------------------

MGZ2BGE_Refresh:
		jsr	MGZ2_BGDeform(pc)

loc_3D1B8:
		lea	MGZ2_BGDrawArray(pc),a4
		lea	(HScroll_table-$04).w,a5
		move.w	(Camera_Y_pos_BG_copy).w,d1
		jsr	Draw_PlaneVertBottomUpComplex(pc)
		bpl.s	loc_3D160
		subq.w	#4,(Events_routine_bg).w
		bra.s	loc_3D160

; =============== S U B R O U T I N E =======================================


MGZ2_BGDeform:
		move.w	(Events_bg+$00).w,d0
		jmp	loc_3D1D8(pc,d0.w)
; End of function MGZ2_BGDeform

; ---------------------------------------------------------------------------

loc_3D1D8:
		bra.w	loc_3D21E
; ---------------------------------------------------------------------------
		bra.w	loc_3D1F4
; ---------------------------------------------------------------------------
		bra.w	loc_3D1EA
; ---------------------------------------------------------------------------
		move.w	#$500,d1
		bra.s	loc_3D220
; ---------------------------------------------------------------------------

loc_3D1EA:
		move.w	#$8F0,d1
		move.w	#$3200,d2
		bra.s	loc_3D1FC
; ---------------------------------------------------------------------------

loc_3D1F4:
		move.w	#$1E0,d1
		move.w	#$3580,d2

loc_3D1FC:
		move.w	(Camera_Y_pos_copy).w,d0
		sub.w	d1,d0
		add.w	(Events_bg+$02).w,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		sub.w	d2,d0
		move.w	d0,(Camera_X_pos_BG_copy).w
		move.w	d0,(HScroll_table+$004).w
		move.w	d0,(HScroll_table+$036).w
		bra.s	loc_3D24C
; ---------------------------------------------------------------------------

loc_3D21E:
		moveq	#0,d1

loc_3D220:
		move.w	(Camera_Y_pos_copy).w,d0
		move.w	(Screen_shake_offset).w,d2
		sub.w	d2,d0
		sub.w	d1,d0
		swap	d0
		clr.w	d0
		asr.l	#4,d0
		move.l	d0,d1
		add.l	d0,d0
		add.l	d1,d0
		swap	d0
		add.w	d2,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		clr.w	(Camera_X_pos_BG_copy).w
		clr.w	(HScroll_table+$004).w
		clr.w	(HScroll_table+$036).w

loc_3D24C:
		move.w	(Camera_X_pos_copy).w,d0
		cmpi.w	#8,(Events_routine_fg).w
		bne.s	loc_3D25C
		move.w	(Events_bg+$0C).w,d0

loc_3D25C:
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d1
		asr.l	#3,d1
		move.l	d1,d2
		asr.l	#2,d2
		lea	(HScroll_table+$036).w,a1
		moveq	#7,d3

loc_3D270:
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		sub.l	d1,d0
		dbf	d3,loc_3D270
		tst.w	(Events_bg+$0E).w
		bne.s	loc_3D28A
		addi.l	#$800,(HScroll_table+$038).w

loc_3D28A:
		move.l	(HScroll_table+$038).w,d1
		lea	(HScroll_table+$008).w,a1
		lea	MGZ2_BGDeformIndex(pc),a5
		move.l	d2,d0
		asr.l	#1,d2
		moveq	#$E,d3

loc_3D29C:
		move.w	(a5)+,d4
		add.l	d1,d0
		swap	d0
		move.w	d0,(a1,d4.w)
		swap	d0
		add.l	d2,d0
		dbf	d3,loc_3D29C
		lea	MGZ2_BGDeformOffset(pc),a5
		moveq	#$16,d0

loc_3D2B4:
		move.w	(a5)+,d1
		add.w	d1,(a1)+
		dbf	d0,loc_3D2B4
		rts

; =============== S U B R O U T I N E =======================================


MGZ2_ClearBottomBG:
		move.w	(a3),d0
		addq.w	#8,d0
		move.w	d0,$74(a3)
		move.w	d0,$78(a3)
		move.w	d0,$7C(a3)
		rts
; End of function MGZ2_ClearBottomBG


; =============== S U B R O U T I N E =======================================


MGZ2_BGEventTrigger:
		tst.w	(_unkEEA2).w
		beq.s	loc_3D2D8
		rts
; ---------------------------------------------------------------------------

loc_3D2D8:
		move.w	(Player_1+x_pos).w,d0
		move.w	(Player_1+y_pos).w,d1
		move.w	(Events_bg+$00).w,d2
		jmp	loc_3D2E8(pc,d2.w)
; End of function MGZ2_BGEventTrigger

; ---------------------------------------------------------------------------

loc_3D2E8:
		bra.w	loc_3D376
; ---------------------------------------------------------------------------
		bra.w	loc_3D348
; ---------------------------------------------------------------------------
		bra.w	loc_3D310
; ---------------------------------------------------------------------------
		clr.b	(Background_collision_flag).w
		cmpi.w	#$800,d1
		bcs.w	loc_3D3C4
		cmpi.w	#$3A40,d0
		bcs.w	loc_3D3C4
		move.w	#8,(Events_bg+$00).w
		rts
; ---------------------------------------------------------------------------

loc_3D310:
		st	(Background_collision_flag).w
		cmpi.w	#$800,d1
		bcc.s	loc_3D32E
		cmpi.w	#$3900,d0
		bcs.w	loc_3D3C4
		st	(Events_bg+$0E).w
		clr.l	(HScroll_table+$038).w
		moveq	#$C,d0
		bra.s	loc_3D340
; ---------------------------------------------------------------------------

loc_3D32E:
		cmpi.w	#$900,d1
		bcc.w	loc_3D3C4
		cmpi.w	#$34C0,d0
		bcc.w	loc_3D3C4
		moveq	#0,d0

loc_3D340:
		move.w	d0,(Events_bg+$00).w
		moveq	#-1,d0
		rts
; ---------------------------------------------------------------------------

loc_3D348:
		st	(Background_collision_flag).w
		cmpi.w	#$100,d1
		bcc.s	loc_3D35C
		cmpi.w	#$3C00,d0
		bcs.s	loc_3D35C
		clr.b	(Background_collision_flag).w

loc_3D35C:
		cmpi.w	#$80,d1
		bcs.s	loc_3D3C4
		cmpi.w	#$180,d1
		bcc.s	loc_3D3C4
		cmpi.w	#$3800,d0
		bcc.s	loc_3D3C4
		clr.w	(Events_bg+$00).w
		moveq	#-1,d0
		rts
; ---------------------------------------------------------------------------

loc_3D376:
		clr.b	(Background_collision_flag).w
		cmpi.w	#$80,d1
		bcs.s	loc_3D3C4
		cmpi.w	#$180,d1
		bcc.s	loc_3D396
		cmpi.w	#$3800,d0
		bcs.s	loc_3D3C4
		moveq	#4,d0
		move.l	#Obj_MGZ2BGMoveKnux,d1
		bra.s	loc_3D3B0
; ---------------------------------------------------------------------------

loc_3D396:
		cmpi.w	#$800,d1
		bcs.s	loc_3D3C4
		cmpi.w	#$900,d1
		bcc.s	loc_3D3C4
		cmpi.w	#$34C0,d0
		bcs.s	loc_3D3C4
		moveq	#8,d0
		move.l	#Obj_MGZ2BGMoveSonic,d1

loc_3D3B0:
		move.w	d0,(Events_bg+$00).w
		clr.w	(Events_bg+$02).w
		jsr	(Create_New_Sprite).l
		bne.s	locret_3D3C2
		move.l	d1,(a1)

locret_3D3C2:
		rts
; ---------------------------------------------------------------------------

loc_3D3C4:
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

Obj_MGZ2BGMoveKnux:
		moveq	#4,d0
		move.w	#$400,d1
		move.w	#$38A0,d2
		move.w	#$220,d3
		move.w	#$6000,d4
		bra.s	loc_3D3F2
; ---------------------------------------------------------------------------

Obj_MGZ2BGMoveSonic:
		moveq	#8,d0
		move.w	#$A80,d1
		move.w	#$36D0,d2
		move.w	#$1D0,d3
		move.w	#$6000,d4
		st	$38(a0)

loc_3D3F2:
		cmp.w	(Events_bg+$00).w,d0
		beq.s	loc_3D3FE
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3D3FE:
		cmp.w	(Player_1+y_pos).w,d1
		bcc.s	locret_3D40A
		cmp.w	(Player_1+x_pos).w,d2
		bcs.s	loc_3D40C

locret_3D40A:
		rts
; ---------------------------------------------------------------------------

loc_3D40C:
		move.w	d3,$2E(a0)
		move.w	d4,$32(a0)
		move.w	(Camera_X_pos_copy).w,d0
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_target_min_X_pos).w
		move.l	#loc_3D426,(a0)

loc_3D426:
		move.w	(Events_bg+$02).w,d0
		cmp.w	$2E(a0),d0
		bcs.s	loc_3D444
		moveq	#signextendB(sfx_Crash),d0
		jsr	(Play_Sound_2).l
		move.w	#$E,(Screen_shake_flag).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3D444:
		move.w	(Player_1+x_pos).w,d2
		move.w	(Player_1+y_pos).w,d3
		tst.b	$39(a0)
		beq.s	loc_3D458
		move.w	d0,d1
		addq.w	#1,d1
		bra.s	loc_3D484
; ---------------------------------------------------------------------------

loc_3D458:
		tst.b	$38(a0)
		bne.s	loc_3D46C
		cmpi.w	#$200,d3
		bcc.s	loc_3D476
		cmpi.w	#$3CB0,d2
		bcs.s	loc_3D472
		bra.s	loc_3D476
; ---------------------------------------------------------------------------

loc_3D46C:
		cmpi.w	#$3D50,d2
		bcs.s	loc_3D476

loc_3D472:
		st	$39(a0)

loc_3D476:
		move.l	$34(a0),d1
		add.l	$30(a0),d1
		move.l	d1,$34(a0)
		swap	d1

loc_3D484:
		move.w	d1,(Events_bg+$02).w
		sub.w	d0,d1
		sub.w	d1,(Player_1+y_pos).w
		sub.w	d1,(Player_2+y_pos).w
		rts
; ---------------------------------------------------------------------------
MGZ2_BGDrawArray:dc.w $200, $7FFF
MGZ2_BGDeformArray:dc.w $10, $10, $10, $10, $10, $18, 8, $10, 8, 8, $10, 8
		dc.w 8, 8, 5, $2B, $C, 6, 6, 8, 8, $18, $D8, $7FFF
MGZ2_BGDeformIndex:dc.w  $1C, $18, $1A,  $C,   6, $14,   2, $10, $16, $12,  $A,   0,   8,   4,  $E
MGZ2_BGDeformOffset:dc.w   -5,  -8,   9,  $A,   2, -$C,   3, $10,  -1,  $D, -$F,   6, -$B,  -4,  $E
		dc.w   -8, $10,   8,   0,  -8, $10,   8,   0
; ---------------------------------------------------------------------------

CNZ1_ScreenInit:
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

CNZ1_ScreenEvent:
		tst.w	(Events_bg+$06).w
		beq.s	loc_3D52A
		clr.w	(Events_bg+$06).w
		jmp	Refresh_PlaneScreenDirect(pc)
; ---------------------------------------------------------------------------

loc_3D52A:
		jsr	DrawTilesAsYouMove(pc)
		lea	(Events_bg+$00).w,a5
		tst.l	(a5)
		beq.w	locret_3D5EA
		move.w	(a5)+,d0
		move.w	(a5),d1
		clr.l	-2(a5)
		move.w	d0,d2
		move.w	d1,d3
		asr.w	#3,d2
		move.w	d2,d4
		asr.w	#4,d2
		move.w	d3,d5
		asr.w	#5,d3
		and.w	(Layout_row_index_mask).w,d3
		movea.w	(a3,d3.w),a4
		moveq	#-1,d6
		clr.w	d6
		move.b	(a4,d2.w),d6
		lsl.w	#7,d6
		andi.w	#$C,d4
		andi.w	#$60,d5
		add.w	d4,d6
		add.w	d5,d6
		movea.l	d6,a4
		clr.l	(a4)
		clr.l	$10(a4)
		asr.w	#2,d0
		andi.w	#$78,d0
		lsl.w	#4,d1
		andi.w	#$E00,d1
		add.w	d1,d0
		add.w	d7,d0
		moveq	#0,d1
		move.w	d0,(a0)+
		move.w	#1,(a0)+
		move.l	d1,(a0)+
		move.l	d1,(a0)+
		move.l	d1,(a0)+
		move.l	d1,(a0)+
		addi.w	#$100,d0
		move.w	d0,(a0)+
		move.w	#1,(a0)+
		move.l	d1,(a0)+
		move.l	d1,(a0)+
		move.l	d1,(a0)+
		move.l	d1,(a0)+
		clr.w	(a0)
		movea.w	$18(a3),a4
		lea	$64(a4),a4
		moveq	#0,d1
		clr.w	(Events_bg+$04).w
		moveq	#3,d3

loc_3D5B8:
		lea	(a4),a5
		moveq	#2,d2

loc_3D5BC:
		moveq	#-1,d0
		clr.w	d0
		move.b	(a5)+,d0
		lsl.w	#7,d0
		add.w	d1,d0
		movea.l	d0,a6
		tst.l	(a6)+
		bne.s	locret_3D5EA
		tst.l	(a6)+
		bne.s	locret_3D5EA
		tst.l	(a6)+
		bne.s	locret_3D5EA
		tst.l	(a6)
		bne.s	locret_3D5EA
		dbf	d2,loc_3D5BC
		addi.w	#$20,d1
		addi.w	#$20,(Events_bg+$04).w
		dbf	d3,loc_3D5B8

locret_3D5EA:
		rts
; ---------------------------------------------------------------------------

CNZ1_BackgroundInit:
		jsr	CNZ1_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		lea	CNZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

CNZ1_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3D60E(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3D60E:
		bra.w	CNZ1BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	CNZ1BGE_BossStart
; ---------------------------------------------------------------------------
		bra.w	CNZ1BGE_Boss
; ---------------------------------------------------------------------------
		bra.w	CNZ1BGE_AfterBoss
; ---------------------------------------------------------------------------
		bra.w	CNZ1BGE_FGRefresh
; ---------------------------------------------------------------------------
		bra.w	CNZ1BGE_FGRefresh2
; ---------------------------------------------------------------------------
		bra.w	CNZ1BGE_DoTransition
; ---------------------------------------------------------------------------

CNZ1BGE_Normal:
		cmpi.w	#$3000,(Camera_X_pos_copy).w
		bcs.s	loc_3D678
		cmpi.w	#$54C,(Camera_Y_pos_copy).w
		bcs.s	loc_3D652
		move.w	#$700,d0
		sub.w	d0,(Player_1+y_pos).w
		sub.w	d0,(Player_2+y_pos).w
		sub.w	d0,(Camera_Y_pos).w
		sub.w	d0,(Camera_Y_pos_copy).w
		jsr	Reset_TileOffsetPositionActual(pc)

loc_3D652:
		jsr	CNZ1_BossLevelScroll(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		lea	(Pal_CNZMiniboss).l,a1
		jsr	(PalLoad_Line1).l
		move.w	#$1C0,d0
		move.w	d0,(Camera_min_Y_pos).w
		move.w	d0,(Camera_target_min_Y_pos).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3D69C
; ---------------------------------------------------------------------------

loc_3D678:
		jsr	CNZ1_Deform(pc)
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		lea	CNZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

CNZ1BGE_BossStart:
		jsr	CNZ1_BossLevelScroll(pc)

loc_3D69C:
		jsr	DrawBGAsYouMove(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

CNZ1BGE_Boss:
		jsr	CNZ1_BossLevelScroll2(pc)
		lea	(Camera_X_pos_BG_copy).w,a6
		lea	(Camera_X_pos_BG_rounded).w,a5
		move.w	#$200,d1
		moveq	#$10,d6
		jsr	Draw_TileColumn(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

CNZ1BGE_AfterBoss:
		tst.w	(Events_fg_5).w
		bne.s	loc_3D6D4
		jsr	CNZ1_BossLevelScroll2(pc)
		jsr	DrawBGAsYouMove(pc)
		jsr	PlainDeformation(pc)
		jmp	Get_BGActualEffectiveDiff(pc)
; ---------------------------------------------------------------------------

loc_3D6D4:
		clr.w	(Events_fg_5).w
		move.w	#$2F0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w

CNZ1BGE_FGRefresh:
		move.w	#-$4000,d7
		moveq	#0,d1
		move.w	#$200,d2
		jsr	Draw_PlaneVertSingleBottomUp(pc)
		bmi.s	loc_3D70C
		move.w	#-$2000,d7
		jsr	CNZ1_BossLevelScroll2(pc)
		jsr	DrawBGAsYouMove(pc)
		jsr	PlainDeformation(pc)
		jmp	Get_BGActualEffectiveDiff(pc)
; ---------------------------------------------------------------------------

loc_3D70C:
		movea.w	$C(a3),a1
		addq.w	#4,a1
		move.w	-8(a3),d0
		subq.w	#5,d0
		movea.w	$12(a3),a5
		lea	$63(a5),a5
		move.w	-$A(a3),d1
		subq.w	#5,d1
		moveq	#5,d2

loc_3D728:
		move.b	(a1)+,(a5)+
		move.b	(a1)+,(a5)+
		move.b	(a1)+,(a5)+
		move.b	(a1)+,(a5)+
		move.b	(a1)+,(a5)+
		adda.w	d0,a1
		adda.w	d1,a5
		dbf	d2,loc_3D728
		clr.b	(Background_collision_flag).w
		clr.w	(Events_bg+$08).w
		move.w	#$1C0,d0
		add.w	d0,(Player_1+y_pos).w
		add.w	d0,(Player_2+y_pos).w
		add.w	d0,(Camera_Y_pos).w
		add.w	d0,(Camera_Y_pos_copy).w
		jsr	Reset_TileOffsetPositionActual(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w

CNZ1BGE_FGRefresh2:
		lea	(Level_layout_main).w,a3
		move.w	#-$4000,d7
		move.w	(Camera_X_pos_copy).w,d1
		move.w	(Camera_Y_pos_copy).w,d2
		jsr	Draw_PlaneVertSingleBottomUp(pc)
		bmi.s	loc_3D798
		addq.w	#2,a3
		move.w	#-$2000,d7
		jsr	CNZ1_BossLevelScroll2(pc)
		jsr	DrawBGAsYouMove(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

loc_3D798:
		addq.w	#2,a3
		move.w	#-$2000,d7
		jsr	(Create_New_Sprite).l
		bne.s	loc_3D7B2
		move.l	#Obj_EndSign,(a1)
		move.w	#$32C0,$10(a1)

loc_3D7B2:
		addq.w	#4,(Events_routine_bg).w

CNZ1BGE_DoTransition:
		tst.w	(Events_fg_5).w
		beq.w	loc_3D870
		clr.w	(Events_fg_5).w
		movem.l	d7-a0/a2-a3,-(sp)
		moveq	#$18,d0
		jsr	(Load_PLC).l
		moveq	#$19,d0
		jsr	(Load_PLC).l
		move.w	#$301,(Current_zone_and_act).w
		clr.b	(Dynamic_resize_routine).w
		clr.b	(Object_load_routine).w
		clr.b	(Rings_manager_routine).w
		clr.b	(Boss_flag).w
		clr.b	(Respawn_table_keep).w
		jsr	Clear_Switches(pc)
		jsr	(Load_Level).l
		jsr	(LoadSolids).l
		jsr	(CheckLevelForWater).l
		move.w	#$8014,(VDP_control_port).l
		moveq	#$11,d0
		jsr	(LoadPalette_Immediate).l
		movem.l	(sp)+,d7-a0/a2-a3
		move.w	#$3000,d0
		move.w	#-$200,d1
		sub.w	d0,(Player_1+x_pos).w
		sub.w	d1,(Player_1+y_pos).w
		sub.w	d0,(Player_2+x_pos).w
		sub.w	d1,(Player_2+y_pos).w
		jsr	Offset_ObjectsDuringTransition(pc)
		sub.w	d0,(Camera_X_pos).w
		sub.w	d1,(Camera_Y_pos).w
		sub.w	d0,(Camera_X_pos_copy).w
		sub.w	d1,(Camera_Y_pos_copy).w
		sub.w	d0,(Camera_min_X_pos).w
		sub.w	d0,(Camera_max_X_pos).w
		sub.w	d1,(Camera_min_Y_pos).w
		sub.w	d1,(Camera_max_Y_pos).w
		move.w	(Camera_max_Y_pos).w,(Camera_target_max_Y_pos).w
		jsr	Reset_TileOffsetPositionActual(pc)
		move.w	#$2F0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		clr.w	(Events_routine_bg).w

loc_3D870:
		jsr	CNZ1_BossLevelScroll2(pc)
		jsr	DrawBGAsYouMove(pc)
		jmp	PlainDeformation(pc)

; =============== S U B R O U T I N E =======================================


CNZ1_Deform:
		move.w	(Camera_Y_pos_copy).w,d0
		swap	d0
		clr.w	d0
		asr.l	#4,d0
		move.l	d0,d1
		asr.l	#1,d1
		add.l	d1,d0
		asr.l	#2,d1
		add.l	d1,d0
		swap	d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d1
		asr.l	#3,d1
		lea	(HScroll_table+$00A).w,a1
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,(Camera_X_pos_BG_copy).w
		move.w	d0,-(a1)
		swap	d0
		sub.l	d1,d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,(Events_bg+$10).w
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		sub.l	d1,d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		sub.l	d1,d0
		asr.l	#1,d1
		sub.l	d1,d0
		swap	d0
		move.w	d0,-(a1)
		rts
; End of function CNZ1_Deform


; =============== S U B R O U T I N E =======================================


CNZ1_BossLevelScroll:
		cmpi.w	#$1E0,(Camera_Y_pos_BG_copy).w
		bcs.s	CNZ1_BossLevelScroll2
		addq.w	#4,(Events_routine_bg).w

CNZ1_BossLevelScroll2:
		move.w	(Camera_Y_pos_copy).w,d0
		subi.w	#$100,d0
		add.w	(Events_bg+$08).w,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		subi.w	#$2F80,d0
		move.w	d0,(Camera_X_pos_BG_copy).w
		rts
; End of function CNZ1_BossLevelScroll

; ---------------------------------------------------------------------------

Obj_CNZMinibossScrollControl:
		moveq	#0,d0
		move.b	5(a0),d0
		jmp	loc_3D918(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3D918:
		bra.w	Obj_CNZMinibossScrollInit
; ---------------------------------------------------------------------------
		bra.w	Obj_CNZMinibossScrollMain
; ---------------------------------------------------------------------------
		bra.w	Obj_CNZMinibossScrollWait
; ---------------------------------------------------------------------------
		bra.w	Obj_CNZMinibossScrollSlow
; ---------------------------------------------------------------------------
		bra.w	Obj_CNZMinibossScrollWait2
; ---------------------------------------------------------------------------
		bra.w	Obj_CNZMinibossScrollWait3
; ---------------------------------------------------------------------------

Obj_CNZMinibossScrollInit:
		lea	(Level_layout_main).w,a3
		movea.w	$14(a3),a1
		move.b	$63(a1),d0
		suba.w	-8(a3),a1
		move.b	d0,$63(a1)
		addq.w	#2,a3
		movea.w	(a3),a1
		move.b	4(a1),d0
		move.w	-8(a3),d1
		adda.w	d1,a1
		move.b	d0,4(a1)
		adda.w	d1,a1
		move.b	d0,4(a1)
		addq.b	#4,5(a0)

Obj_CNZMinibossScrollMain:
		tst.w	(Events_fg_5).w
		bne.s	loc_3D982
		move.l	(Events_bg+$0C).w,d0
		cmpi.l	#$40000,d0
		bcc.s	loc_3D97C
		addi.l	#$200,d0
		move.l	d0,(Events_bg+$0C).w

loc_3D97C:
		add.l	d0,(Events_bg+$08).w
		rts
; ---------------------------------------------------------------------------

loc_3D982:
		clr.w	(Events_fg_5).w
		addq.b	#4,5(a0)

Obj_CNZMinibossScrollWait:
		move.w	(Events_bg+$08).w,d0
		andi.w	#$FF,d0
		cmpi.w	#4,d0
		bcs.s	loc_3D9A2
		move.l	(Events_bg+$0C).w,d0
		add.l	d0,(Events_bg+$08).w
		rts
; ---------------------------------------------------------------------------

loc_3D9A2:
		addq.b	#4,5(a0)

Obj_CNZMinibossScrollSlow:
		move.l	(Events_bg+$0C).w,d0
		cmpi.l	#$10000,d0
		bls.s	loc_3D9C2
		subi.l	#$400,d0
		move.l	d0,(Events_bg+$0C).w
		add.l	d0,(Events_bg+$08).w
		rts
; ---------------------------------------------------------------------------

loc_3D9C2:
		addq.b	#4,5(a0)

Obj_CNZMinibossScrollWait2:
		move.w	(Events_bg+$08).w,d0
		andi.w	#$FF,d0
		cmpi.w	#4,d0
		bcs.s	loc_3D9DE
		move.l	(Events_bg+$0C).w,d0
		add.l	d0,(Events_bg+$08).w
		rts
; ---------------------------------------------------------------------------

loc_3D9DE:
		move.w	d0,(Events_bg+$08).w
		move.w	#$1000,(Camera_target_max_Y_pos).w
		st	(Background_collision_flag).w
		addq.w	#4,(Events_routine_bg).w
		movea.w	(Level_layout_main).w,a1
		lea	$67(a1),a1
		move.w	(Level_layout_header).w,d0
		moveq	#0,d1
		moveq	#6,d2

loc_3DA00:
		move.b	d1,(a1)
		adda.w	d0,a1
		dbf	d2,loc_3DA00
		addq.b	#4,5(a0)

Obj_CNZMinibossScrollWait3:
		cmpi.w	#$1C0,(Events_bg+$08).w
		bcc.s	loc_3DA1E
		move.l	(Events_bg+$0C).w,d0
		add.l	d0,(Events_bg+$08).w
		rts
; ---------------------------------------------------------------------------

loc_3DA1E:
		st	(Events_fg_5).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
CNZ1_BGDeformArray:dc.w $80
		dc.w $30
		dc.w $60
		dc.w $C0
		dc.w $7FFF
; ---------------------------------------------------------------------------

CNZ2_ScreenInit:
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

CNZ2_ScreenEvent:
		move.w	(Screen_shake_offset).w,d0
		add.w	d0,(Camera_Y_pos_copy).w
		tst.w	(Events_bg+$06).w
		beq.s	loc_3DA50
		clr.w	(Events_bg+$06).w
		jmp	Refresh_PlaneScreenDirect(pc)
; ---------------------------------------------------------------------------

loc_3DA50:
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

CNZ2_BackgroundInit:
		move.w	#8,(Events_routine_bg).w
		jsr	CNZ1_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		lea	CNZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

CNZ2_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3DA7C(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3DA7C:
		bra.w	loc_3DA88
; ---------------------------------------------------------------------------
		bra.w	loc_3DAB6
; ---------------------------------------------------------------------------
		bra.w	loc_3DACC
; ---------------------------------------------------------------------------

loc_3DA88:
		moveq	#0,d1
		move.w	#$200,d2
		jsr	Draw_PlaneVertSingleBottomUp(pc)
		bpl.w	PlainDeformation
		jsr	CNZ1_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3DABA
; ---------------------------------------------------------------------------

loc_3DAB6:
		jsr	CNZ1_Deform(pc)

loc_3DABA:
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d2
		jsr	Draw_PlaneVertSingleBottomUp(pc)
		bpl.s	loc_3DAD0
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3DAD0
; ---------------------------------------------------------------------------

loc_3DACC:
		jsr	CNZ1_Deform(pc)

loc_3DAD0:
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		lea	CNZ1_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jsr	ApplyDeformation(pc)
		jmp	ShakeScreen_Setup(pc)
; ---------------------------------------------------------------------------

ICZ1_ScreenInit:
		move.w	#$7FF,(Screen_Y_wrap_value).w
		move.w	#$7F0,(Camera_Y_pos_mask).w
		move.w	#$3C,(Layout_row_index_mask).w
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

ICZ1_ScreenEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3DB12(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3DB12:
		bra.w	ICZ1SE_Init
; ---------------------------------------------------------------------------
		bra.w	ICZ1SE_WaitQuake
; ---------------------------------------------------------------------------
		bra.w	ICZ1SE_Normal
; ---------------------------------------------------------------------------
		bra.w	ICZ1SE_Normal
; ---------------------------------------------------------------------------
		bra.w	ICZ1SE_Normal
; ---------------------------------------------------------------------------
		bra.w	ICZ1SE_Normal
; ---------------------------------------------------------------------------

ICZ1SE_Init:
		move.w	(Screen_shake_offset).w,d0
		add.w	d0,(Camera_X_pos_copy).w
		bra.s	ICZ1SE_Normal
; ---------------------------------------------------------------------------

ICZ1SE_WaitQuake:
		move.w	(Screen_shake_offset).w,d0
		add.w	d0,(Camera_Y_pos_copy).w

ICZ1SE_Normal:
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

ICZ1_BackgroundInit:
		lea	(a3),a1
		moveq	#7,d0

loc_3DB44:
		move.w	(a1),$20(a1)
		addq.w	#4,a1
		dbf	d0,loc_3DB44
		move.w	(Camera_Y_pos_copy).w,(Events_fg_0).w
		move.w	(Camera_Y_pos_copy).w,(Events_fg_1).w
		cmpi.w	#$3940,(Camera_X_pos_copy).w
		bcc.s	loc_3DB9C
		cmpi.w	#$3600,(Camera_X_pos_copy).w
		bcs.s	loc_3DB70
		addi.w	#$2800,(Events_fg_1).w

loc_3DB70:
		cmpi.w	#$580,(Camera_Y_pos_copy).w
		bcc.s	loc_3DB9C
		clr.w	(Events_bg+$16).w
		jsr	ICZ1_SetIntroPal(pc)
		jsr	ICZ1_IntroDeform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		move.w	#$1880,d1
		jsr	Refresh_PlaneFull(pc)
		lea	ICZ1_IntroBGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

loc_3DB9C:
		move.w	#$10,(Events_routine_bg).w
		st	(Events_bg+$16).w
		jsr	ICZ1_SetIndoorPal(pc)
		jsr	ICZ1_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		jsr	Refresh_PlaneFull(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

ICZ1_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3DBC2(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3DBC2:
		bra.w	ICZ1BGE_Intro
; ---------------------------------------------------------------------------
		bra.w	ICZ1BGE_SnowFall
; ---------------------------------------------------------------------------
		bra.w	ICZ1BGE_Refresh
; ---------------------------------------------------------------------------
		bra.w	ICZ1BGE_Refresh2
; ---------------------------------------------------------------------------
		bra.w	ICZ1BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	ICZ1BGE_Transition
; ---------------------------------------------------------------------------

ICZ1BGE_Intro:
		tst.w	(Events_fg_5).w
		beq.s	loc_3DBFA
		clr.w	(Events_fg_5).w
		clr.l	(Events_bg+$00).w
		clr.l	(Events_bg+$04).w
		jsr	ICZ1_BigSnowFall(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3DC2A
; ---------------------------------------------------------------------------

loc_3DBFA:
		jsr	ICZ1_IntroDeform(pc)
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		move.w	#$1880,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		lea	ICZ1_IntroBGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jsr	ApplyDeformation(pc)
		jmp	ShakeScreen_Setup(pc)
; ---------------------------------------------------------------------------

ICZ1BGE_SnowFall:
		tst.w	(Events_fg_5).w
		bne.s	loc_3DC36
		jsr	ICZ1_BigSnowFall(pc)

loc_3DC2A:
		jsr	DrawBGAsYouMove(pc)
		jsr	PlainDeformation(pc)
		jmp	ShakeScreen_Setup(pc)
; ---------------------------------------------------------------------------

loc_3DC36:
		clr.w	(Events_fg_5).w
		move.w	#$2E0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w

ICZ1BGE_Refresh:
		move.w	#$1880,d1
		move.w	#$200,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.w	PlainDeformation
		jsr	ICZ1_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3DC7E
; ---------------------------------------------------------------------------

ICZ1BGE_Refresh2:
		jsr	ICZ1_Deform(pc)

loc_3DC7E:
		move.w	(Camera_X_pos_BG_copy).w,d1
		move.w	(Camera_Y_pos_BG_copy).w,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.s	loc_3DCEC
		st	(Events_bg+$16).w
		jsr	ICZ1_SetIndoorPal(pc)
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3DCEC
; ---------------------------------------------------------------------------

ICZ1BGE_Normal:
		cmpi.w	#$6900,(Camera_X_pos_copy).w
		bcs.s	loc_3DCE8
		movem.l	d7-a0/a2-a3,-(sp)
		lea	(ICZ2_128x128_Secondary_Kos).l,a1
		lea	(RAM_start+$A00).l,a2
		jsr	(Queue_Kos).l
		lea	(ICZ2_16x16_Secondary_Kos).l,a1
		lea	(Block_table+$408).w,a2
		jsr	(Queue_Kos).l
		lea	(ICZ2_8x8_Secondary_KosM).l,a1
		move.w	#$2440,d2
		jsr	(Queue_Kos_Module).l
		moveq	#$20,d0
		jsr	(Load_PLC).l
		movem.l	(sp)+,d7-a0/a2-a3
		addq.w	#4,(Events_routine_bg).w

loc_3DCE8:
		jsr	ICZ1_Deform(pc)

loc_3DCEC:
		jsr	DrawBGAsYouMove(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

ICZ1BGE_Transition:
		tst.w	(Kos_decomp_queue_count).w
		bne.w	loc_3DDA6
		move.w	#$501,(Current_zone_and_act).w
		clr.b	(Dynamic_resize_routine).w
		clr.b	(Object_load_routine).w
		clr.b	(Rings_manager_routine).w
		clr.b	(Boss_flag).w
		clr.b	(Respawn_table_keep).w
		jsr	Clear_Switches(pc)
		movem.l	d7-a0/a2-a3,-(sp)
		jsr	(Load_Level).l
		jsr	(LoadSolids).l
		jsr	(CheckLevelForWater).l
		move.w	#$8014,(VDP_control_port).l
		moveq	#$15,d0
		jsr	(LoadPalette_Immediate).l
		movem.l	(sp)+,d7-a0/a2-a3
		move.w	#$6880,d0
		move.w	#-$100,d1
		sub.w	d0,(Player_1+x_pos).w
		sub.w	d1,(Player_1+y_pos).w
		sub.w	d0,(Player_2+x_pos).w
		sub.w	d1,(Player_2+y_pos).w
		jsr	Offset_ObjectsDuringTransition(pc)
		sub.w	d0,(Camera_X_pos).w
		sub.w	d1,(Camera_Y_pos).w
		sub.w	d0,(Camera_X_pos_copy).w
		sub.w	d1,(Camera_Y_pos_copy).w
		move.l	#$7000,d0
		move.l	d0,(Camera_min_X_pos).w
		move.l	d0,(Camera_target_min_X_pos).w
		move.l	#$B20,d0
		move.l	d0,(Camera_min_Y_pos).w
		move.l	d0,(Camera_target_min_Y_pos).w
		move.w	#$FFF,(Screen_Y_wrap_value).w
		move.w	#$FF0,(Camera_Y_pos_mask).w
		move.w	#$7C,(Layout_row_index_mask).w
		jsr	Reset_TileOffsetPositionActual(pc)
		clr.w	(Events_routine_bg).w

loc_3DDA6:
		jsr	ICZ1_Deform(pc)
		jmp	PlainDeformation(pc)

; =============== S U B R O U T I N E =======================================


ICZ1_IntroDeform:
		lea	(Events_fg_0).w,a1
		move.w	(Camera_Y_pos_copy).w,d0
		move.w	#$400,d2
		move.w	#$800,d3
		jsr	Adjust_BGDuringLoop(pc)
		move.w	(Events_fg_1).w,d0
		asr.w	#7,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		move.w	(Screen_shake_offset).w,d3
		sub.w	d3,d0
		swap	d0
		clr.w	d0
		asr.l	#5,d0
		move.l	d0,d1
		swap	d0
		add.w	d3,d0
		swap	d0
		lea	(HScroll_table).w,a1
		moveq	#4,d2
		bsr.s	sub_3DDF6
		add.l	d1,d0
		move.l	d1,d2
		asr.l	#1,d2
		add.l	d2,d1
		moveq	#8,d2
; End of function ICZ1_IntroDeform


; =============== S U B R O U T I N E =======================================


sub_3DDF6:
		swap	d0
		move.w	d0,(a1)+
		swap	d0
		add.l	d1,d0
		dbf	d2,sub_3DDF6
		rts
; End of function sub_3DDF6


; =============== S U B R O U T I N E =======================================


ICZ1_BigSnowFall:
		cmpi.w	#-$120,(Events_bg+$00).w
		ble.s	loc_3DE36
		st	(Screen_shake_flag).w
		addi.l	#$2400,(Events_bg+$04).w
		move.l	(Events_bg+$04).w,d0
		sub.l	d0,(Events_bg+$00).w
		move.w	(Level_frame_counter).w,d0
		subq.w	#1,d0
		andi.w	#$F,d0
		bne.s	loc_3DE42
		moveq	#signextendB(sfx_Rumble2),d0
		jsr	(Play_Sound_2).l
		bra.s	loc_3DE42
; ---------------------------------------------------------------------------

loc_3DE36:
		tst.w	(Screen_shake_flag).w
		bpl.s	loc_3DE42
		move.w	#4,(Screen_shake_flag).w

loc_3DE42:
		move.w	(Camera_Y_pos_copy).w,d0
		subi.w	#$460,d0
		add.w	(Events_bg+$00).w,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		subi.w	#$1D40,d0
		move.w	d0,(Camera_X_pos_BG_copy).w
		rts
; End of function ICZ1_BigSnowFall


; =============== S U B R O U T I N E =======================================


ICZ1_Deform:
		move.w	(Camera_Y_pos_copy).w,d0
		asr.w	#1,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		asr.w	#1,d0
		move.w	d0,(Events_bg+$12).w
		move.w	(Camera_X_pos_copy).w,d0
		asr.w	#1,d0
		subi.w	#$1D80,d0
		move.w	d0,(Camera_X_pos_BG_copy).w
		asr.w	#1,d0
		move.w	d0,(Events_bg+$10).w
		rts
; End of function ICZ1_Deform


; =============== S U B R O U T I N E =======================================


ICZ1_SetIntroPal:
		tst.b	(Game_mode).w
		bmi.s	loc_3DE92
		lea	(Normal_palette_line_4+2).w,a1
		bsr.s	sub_3DE96

loc_3DE92:
		lea	(Target_palette_line_4+2).w,a1
; End of function ICZ1_SetIntroPal


; =============== S U B R O U T I N E =======================================


sub_3DE96:
		move.l	#$EEE0EEC,(a1)+
		move.l	#$EEA0ECA,(a1)+
		move.l	#$EC80EA6,(a1)+
		move.l	#$E860E64,(a1)+
		move.l	#$E400E00,(a1)+
		move.l	#$C000000,(a1)+
		move.l	#$AEC0CEA,(a1)+
		move.w	#$E80,(a1)
		rts
; End of function sub_3DE96


; =============== S U B R O U T I N E =======================================


ICZ1_SetIndoorPal:
		tst.b	(Game_mode).w
		bmi.s	loc_3DED2
		lea	(Normal_palette_line_4+2).w,a1
		bsr.s	sub_3DED6

loc_3DED2:
		lea	(Target_palette_line_4+2).w,a1
; End of function ICZ1_SetIndoorPal


; =============== S U B R O U T I N E =======================================


sub_3DED6:
		move.l	#$EC00E40,(a1)+
		move.l	#$E040C00,(a1)+
		move.l	#$6000200,(a1)+
		move.l	#$E64,(a1)+
		move.l	#$E240A02,(a1)+
		move.w	#$402,(a1)
		rts
; End of function sub_3DED6

; ---------------------------------------------------------------------------
ICZ1_IntroBGDeformArray:dc.w $44, $C, $B, $D, $18, $50, 2, 6, 8, $10, $18, $20, $28, $7FFF
; ---------------------------------------------------------------------------

ICZ2_ScreenInit:
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

ICZ2_ScreenEvent:
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

ICZ2_BackgroundInit:
		move.w	#4,(Events_routine_bg).w
		cmpi.w	#$3600,(Camera_X_pos_copy).w
		bcc.s	loc_3DF48
		cmpi.w	#$720,(Camera_Y_pos_copy).w
		bcc.s	loc_3DF76
		cmpi.w	#$1000,(Camera_X_pos_copy).w
		bcc.s	loc_3DF48
		cmpi.w	#$580,(Camera_Y_pos_copy).w
		bcc.s	loc_3DF76

loc_3DF48:
		clr.w	(Events_bg+$16).w
		cmpi.w	#$720,(Camera_X_pos_copy).w
		bcc.s	loc_3DF5A
		jsr	ICZ2_SetICZ1Pal(pc)
		bra.s	loc_3DF5E
; ---------------------------------------------------------------------------

loc_3DF5A:
		jsr	ICZ2_SetOutdoorsPal(pc)

loc_3DF5E:
		jsr	ICZ2_OutDeform(pc)
		moveq	#0,d0
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		lea	ICZ2_OutBGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

loc_3DF76:
		st	(Events_bg+$16).w
		jsr	ICZ2_SetIndoorsPal(pc)
		jsr	ICZ2_InDeform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		lea	ICZ2_InBGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

ICZ2_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3DFA0(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3DFA0:
		bra.w	ICZ2BGE_FromICZ1
; ---------------------------------------------------------------------------
		bra.w	ICZ2BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	ICZ2BGE_Refresh
; ---------------------------------------------------------------------------

ICZ2BGE_FromICZ1:
		addq.w	#4,(Events_routine_bg).w
		cmpi.w	#$580,(Camera_Y_pos_copy).w
		bcc.s	loc_3DFD8
		bra.s	loc_3E036
; ---------------------------------------------------------------------------

ICZ2BGE_Normal:
		tst.w	(Events_bg+$16).w
		bne.s	loc_3E012
		move.w	(Camera_X_pos_copy).w,d0
		cmpi.w	#$1000,d0
		bcs.s	loc_3E002
		cmpi.w	#$3600,d0
		bcc.s	loc_3E002
		cmpi.w	#$720,(Camera_Y_pos_copy).w
		bcs.s	loc_3E002

loc_3DFD8:
		st	(Events_bg+$16).w
		jsr	ICZ2_SetIndoorsPal(pc)
		jsr	ICZ2_InDeform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w
		bra.w	loc_3E0B0
; ---------------------------------------------------------------------------

loc_3E002:
		jsr	ICZ2_OutDeform(pc)

loc_3E006:
		lea	ICZ2_OutBGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

loc_3E012:
		move.w	(Camera_X_pos_copy).w,d0
		cmpi.w	#$1900,d0
		bcs.s	loc_3E022
		cmpi.w	#$1B80,d0
		bcs.s	loc_3E06C

loc_3E022:
		cmpi.w	#$1000,d0
		bcs.s	loc_3E06C
		cmpi.w	#$3600,d0
		bcc.s	loc_3E06C
		cmpi.w	#$720,(Camera_Y_pos_copy).w
		bcc.s	loc_3E06C

loc_3E036:
		clr.w	(Events_bg+$16).w
		cmpi.w	#$720,(Camera_X_pos_copy).w
		bcc.s	loc_3E048
		jsr	ICZ2_SetICZ1Pal(pc)
		bra.s	loc_3E04C
; ---------------------------------------------------------------------------

loc_3E048:
		jsr	ICZ2_SetOutdoorsPal(pc)

loc_3E04C:
		jsr	ICZ2_OutDeform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3E096
; ---------------------------------------------------------------------------

loc_3E06C:
		jsr	ICZ2_InDeform(pc)

loc_3E070:
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		lea	ICZ2_InBGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

ICZ2BGE_Refresh:
		tst.w	(Events_bg+$16).w
		bne.s	loc_3E0AC
		jsr	ICZ2_OutDeform(pc)

loc_3E096:
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.w	loc_3E006
		subq.w	#4,(Events_routine_bg).w
		bra.w	loc_3E006
; ---------------------------------------------------------------------------

loc_3E0AC:
		jsr	ICZ2_InDeform(pc)

loc_3E0B0:
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.s	loc_3E070
		subq.w	#4,(Events_routine_bg).w
		bra.s	loc_3E070

; =============== S U B R O U T I N E =======================================


ICZ2_OutDeform:
		clr.w	(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		move.w	(Level_frame_counter).w,d1
		asr.w	#1,d1
		add.w	d1,d0
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		andi.l	#$7FFFFF,d0
		move.l	d0,d1
		asr.l	#6,d1
		lea	(HScroll_table+$064).w,a1
		moveq	#$27,d2

loc_3E0E8:
		swap	d0
		move.w	d0,-(a1)
		swap	d0
		sub.l	d1,d0
		dbf	d2,loc_3E0E8
		lea	(HScroll_table).w,a1
		move.w	(Camera_X_pos_copy).w,d0
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d1
		asr.l	#1,d0
		add.l	d0,d1
		move.l	d1,$64(a1)
		asr.l	#2,d0
		move.l	d0,d1
		swap	d0
		move.w	d0,(a1)+
		swap	d0
		add.l	d1,d0
		swap	d0
		move.w	d0,(a1)+
		move.w	(Level_frame_counter).w,d1
		lsr.w	#2,d1
		andi.w	#$3E,d1
		lea	ALZ_AIZ2_BGDeformDelta(pc),a5
		adda.w	d1,a5
		moveq	#7,d1

loc_3E12E:
		move.w	(a5)+,d2
		add.w	d0,d2
		move.w	d2,(a1)+
		dbf	d1,loc_3E12E
		rts
; End of function ICZ2_OutDeform


; =============== S U B R O U T I N E =======================================


ICZ2_InDeform:
		move.w	(Camera_Y_pos_copy).w,d0
		subi.w	#$700,d0
		asr.w	#2,d0
		addi.w	#$118,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		lea	(HScroll_table).w,a1
		move.w	(Camera_X_pos_copy).w,d0
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d1
		asr.l	#3,d1
		swap	d0
		move.w	d0,(a1)
		move.w	d0,$10(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,2(a1)
		move.w	d0,$E(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,4(a1)
		move.w	d0,$C(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,6(a1)
		move.w	d0,$A(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,(Camera_X_pos_BG_copy).w
		move.w	d0,8(a1)
		swap	d0
		sub.l	d1,d0
		swap	d0
		move.w	d0,(Events_bg+$10).w
		rts
; End of function ICZ2_InDeform


; =============== S U B R O U T I N E =======================================


ICZ2_SetOutdoorsPal:
		tst.b	(Game_mode).w
		bmi.s	loc_3E1B6
		lea	(Normal_palette_line_4+2).w,a1
		bsr.s	sub_3E1BA

loc_3E1B6:
		lea	(Target_palette_line_4+2).w,a1
; End of function ICZ2_SetOutdoorsPal


; =============== S U B R O U T I N E =======================================


sub_3E1BA:
		move.l	#$EEE0EEA,(a1)+
		move.l	#$EC80EA4,(a1)+
		move.l	#$C820C60,(a1)+
		move.l	#$C400E20,(a1)+
		move.l	#$A000E00,(a1)
		rts
; End of function sub_3E1BA


; =============== S U B R O U T I N E =======================================


ICZ2_SetIndoorsPal:
		tst.b	(Game_mode).w
		bmi.s	loc_3E1E6
		lea	(Normal_palette_line_4+2).w,a1
		bsr.s	sub_3E1EA

loc_3E1E6:
		lea	(Target_palette_line_4+2).w,a1
; End of function ICZ2_SetIndoorsPal


; =============== S U B R O U T I N E =======================================


sub_3E1EA:
		move.l	#$EE20E24,(a1)+
		move.l	#$E040E02,(a1)+
		move.l	#$4020200,(a1)+
		move.l	#$E20,(a1)+
		move.l	#$E400840,(a1)+
		move.w	#$600,(a1)
		rts
; End of function sub_3E1EA


; =============== S U B R O U T I N E =======================================


ICZ2_SetICZ1Pal:
		tst.b	(Game_mode).w
		bmi.s	loc_3E21A
		lea	(Normal_palette_line_4+2).w,a1
		bsr.s	sub_3E21E

loc_3E21A:
		lea	(Target_palette_line_4+2).w,a1
; End of function ICZ2_SetICZ1Pal


; =============== S U B R O U T I N E =======================================


sub_3E21E:
		move.l	#$EEC0CC6,(a1)+
		move.l	#$C800C60,(a1)+
		move.l	#$C400A40,(a1)+
		move.l	#$8200620,(a1)+
		move.l	#$2000600,(a1)
		rts
; End of function sub_3E21E

; ---------------------------------------------------------------------------
ICZ2_OutBGDeformArray:dc.w $5A, $26, $8030, $7FFF
ICZ2_InBGDeformArray:dc.w $1A0, $40, $20, $18, $40, 8, 8, $18, $7FFF
; ---------------------------------------------------------------------------

LBZ1_ScreenInit:
		move.w	4(a3),d0
		subi.w	#$76,d0
		move.w	d0,$70(a3)
		move.w	d0,$74(a3)
		move.w	d0,$78(a3)
		move.w	d0,$7C(a3)
		lea	(HScroll_table+$148).w,a1
		moveq	#$D,d0

loc_3E276:
		clr.l	(a1)+
		dbf	d0,loc_3E276
		jsr	LBZ1_EventVScroll(pc)
		lea	(HScroll_table+$100).w,a1
		moveq	#$B,d0

loc_3E286:
		move.w	(a1)+,d1
		and.w	(Camera_Y_pos_mask).w,d1
		move.w	d1,(a1)+
		dbf	d0,loc_3E286
		cmpi.w	#3,(Player_mode).w
		beq.s	loc_3E2B0
		cmpi.w	#$3B60,(Camera_X_pos_copy).w
		bcs.s	loc_3E2B4
		jsr	(Create_New_Sprite).l
		bne.s	loc_3E2B0
		move.l	#Obj_LBZ1InvisibleBarrier,(a1)

loc_3E2B0:
		jsr	LBZ1_ModEndingLayout(pc)

loc_3E2B4:
		move.w	(Player_1+x_pos).w,d0
		move.w	(Player_1+y_pos).w,d1
		moveq	#0,d2
		jsr	LBZ1_CheckLayoutMod(pc)
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

LBZ1_ScreenEvent:
		move.w	(Screen_shake_offset).w,d0
		add.w	d0,(Camera_Y_pos_copy).w
		cmpi.w	#$55,(Events_fg_4).w
		bne.s	loc_3E302
		clr.w	(Events_fg_4).w
		cmpi.w	#$540,(Camera_Y_pos_copy).w
		bcc.s	loc_3E2F4
		movea.w	8(a3),a1
		move.b	#-$26,$7D(a1)
		jmp	Refresh_PlaneScreenDirect(pc)
; ---------------------------------------------------------------------------

loc_3E2F4:
		movea.w	$4C(a3),a1
		move.b	#-$25,$79(a1)
		jmp	Refresh_PlaneScreenDirect(pc)
; ---------------------------------------------------------------------------

loc_3E302:
		move.w	(Player_1+x_pos).w,d0
		move.w	(Player_1+y_pos).w,d1
		move.w	(Events_bg+$00).w,d2
		bne.s	loc_3E31C
		jsr	LBZ1_CheckLayoutMod(pc)
		tst.w	d3
		bmi.s	loc_3E36E
		jmp	Refresh_PlaneScreenDirect(pc)
; ---------------------------------------------------------------------------

loc_3E31C:
		lea	LBZ1_LayoutModExitRange-4(pc),a1
		adda.w	d2,a1
		cmp.w	(a1)+,d0
		bcs.s	loc_3E32C
		cmp.w	(a1)+,d0
		bhi.s	loc_3E32C
		bra.s	loc_3E36E
; ---------------------------------------------------------------------------

loc_3E32C:
		clr.w	(Events_bg+$00).w
		lsr.w	#1,d2
		jsr	loc_3E33A-2(pc,d2.w)
		jmp	Refresh_PlaneScreenDirect(pc)
; ---------------------------------------------------------------------------

loc_3E33A:
		bra.s	LBZ1_LayoutExitMod1
; ---------------------------------------------------------------------------
		bra.s	LBZ1_LayoutExitMod2
; ---------------------------------------------------------------------------
		bra.s	LBZ1_LayoutExitMod3
; ---------------------------------------------------------------------------
		bra.s	LBZ1_LayoutExitMod4
; ---------------------------------------------------------------------------

LBZ1_LayoutExitMod1:
		movea.w	(a3),a5
		lea	$88(a5),a5
		bra.w	LBZ1_DoMod1
; ---------------------------------------------------------------------------

LBZ1_LayoutExitMod2:
		movea.w	$24(a3),a5
		lea	$8A(a5),a5
		bra.w	LBZ1_DoMod2
; ---------------------------------------------------------------------------

LBZ1_LayoutExitMod3:
		movea.w	(a3),a5
		lea	$98(a5),a5
		bra.w	LBZ1_DoMod3
; ---------------------------------------------------------------------------

LBZ1_LayoutExitMod4:
		movea.w	$30(a3),a5
		lea	$9A(a5),a5
		bra.w	LBZ1_DoMod4
; ---------------------------------------------------------------------------

loc_3E36E:
		jsr	LBZ1_EventVScroll(pc)
		lea	LBZ1_FGVScrollArray(pc),a4
		lea	(HScroll_table+$100).w,a5
		moveq	#$F,d6
		moveq	#$C,d5
		jmp	DrawTilesVDeform(pc)

; =============== S U B R O U T I N E =======================================


LBZ1_EventVScroll:
		tst.w	(Events_fg_4).w
		beq.w	loc_3E434
		bpl.s	loc_3E3A6
		move.w	#1,(Events_fg_4).w
		move.w	#4,(Special_V_int_routine).w
		jsr	(Create_New_Sprite).l
		bne.s	loc_3E3A6
		move.l	#Obj_LBZ1InvisibleBarrier,(a1)

loc_3E3A6:
		lea	(HScroll_table+$14C).w,a1
		lea	LBZ1_CollapseScrollSpeed(pc),a5
		move.l	$2C(a1),d0
		addi.l	#$100,$2C(a1)
		move.w	$30(a1),d1
		addq.w	#1,$30(a1)
		asr.w	#6,d1
		moveq	#$A,d2
		moveq	#9,d3

loc_3E3C8:
		addq.w	#2,d1
		andi.w	#$E,d1
		move.w	(a5,d1.w),d4
		ext.l	d4
		lsl.l	#4,d4
		move.l	(a1),d5
		sub.l	d4,d5
		sub.l	d0,d5
		swap	d5
		cmpi.w	#-$300,d5
		bgt.s	loc_3E3EA
		move.w	#-$300,d5
		subq.w	#1,d2

loc_3E3EA:
		swap	d5
		move.l	d5,(a1)+
		dbf	d3,loc_3E3C8
		move.w	(Level_frame_counter).w,d0
		subq.w	#1,d0
		andi.w	#$F,d0
		bne.s	loc_3E40A
		tst.w	d2
		beq.s	loc_3E40A
		moveq	#signextendB(sfx_BigRumble),d0
		jsr	(Play_Sound_2).l

loc_3E40A:
		tst.w	d2
		bne.s	loc_3E434
		clr.w	(Screen_shake_flag).w
		clr.w	(Events_fg_4).w
		move.w	#$C,(Special_V_int_routine).w
		jsr	LBZ1_ModEndingLayout(pc)
		lea	(HScroll_table+$148).w,a1
		moveq	#$D,d0

loc_3E426:
		clr.l	(a1)+
		dbf	d0,loc_3E426
		moveq	#signextendB(sfx_Crash),d0
		jsr	(Play_Sound_2).l

loc_3E434:
		lea	(HScroll_table+$100).w,a1
		lea	(HScroll_table+$130).w,a4
		lea	(HScroll_table+$148).w,a5
		move.w	(Camera_Y_pos_copy).w,d0
		moveq	#$B,d1

loc_3E446:
		move.w	(a5),d2
		add.w	d0,d2
		move.w	d2,(a1)
		move.w	d2,(a4)+
		addq.w	#4,a1
		addq.w	#4,a5
		dbf	d1,loc_3E446
		rts
; End of function LBZ1_EventVScroll


; =============== S U B R O U T I N E =======================================


LBZ1_CheckLayoutMod:
		lea	LBZ1_LayoutModRange(pc),a1
		moveq	#3,d3

loc_3E45E:
		lea	(a1),a5
		cmp.w	(a5)+,d0
		bcs.s	loc_3E480
		cmp.w	(a5)+,d0
		bhi.s	loc_3E480
		cmp.w	(a5)+,d1
		bcs.s	loc_3E480
		cmp.w	(a5)+,d1
		bhi.s	loc_3E480
		tst.w	d2
		bne.s	loc_3E48A
		cmpi.w	#$1580,d0
		bcs.s	loc_3E48A
		cmpi.w	#$400,d1
		bcs.s	loc_3E48A

loc_3E480:
		addq.w	#8,a1
		addq.w	#4,d2
		dbf	d3,loc_3E45E
		rts
; ---------------------------------------------------------------------------

loc_3E48A:
		addq.w	#4,d2
		move.w	d2,(Events_bg+$00).w
		lsr.w	#1,d2
		jmp	LBZ1_LayoutModBranch-2(pc,d2.w)
; End of function LBZ1_CheckLayoutMod

; ---------------------------------------------------------------------------

LBZ1_LayoutModBranch:
		bra.s	LBZ1_LayoutMod1
; ---------------------------------------------------------------------------
		bra.s	LBZ1_LayoutMod2
; ---------------------------------------------------------------------------
		bra.s	LBZ1_LayoutMod3
; ---------------------------------------------------------------------------
		bra.s	LBZ1_LayoutMod4
; ---------------------------------------------------------------------------

LBZ1_LayoutMod1:
		movea.w	(a3),a5
		lea	$80(a5),a5
		bra.w	LBZ1_DoMod1
; ---------------------------------------------------------------------------

LBZ1_LayoutMod2:
		movea.w	$24(a3),a5
		lea	$80(a5),a5
		bra.s	LBZ1_DoMod2
; ---------------------------------------------------------------------------

LBZ1_LayoutMod3:
		tst.w	(Events_bg+$02).w
		beq.s	loc_3E4C0
		clr.w	(Events_bg+$00).w
		moveq	#-1,d3
		rts
; ---------------------------------------------------------------------------

loc_3E4C0:
		movea.w	(a3),a5
		lea	$94(a5),a5
		bra.s	LBZ1_DoMod3
; ---------------------------------------------------------------------------

LBZ1_LayoutMod4:
		movea.w	$30(a3),a5
		lea	$94(a5),a5

LBZ1_DoMod4:
		movea.w	(a3),a1
		lea	$7A(a1),a1
		move.w	-8(a3),d0
		subq.w	#6,d0
		moveq	#5,d1

loc_3E4DE:
		move.l	(a5)+,(a1)+
		move.w	(a5)+,(a1)+
		adda.w	d0,a5
		adda.w	d0,a1
		dbf	d1,loc_3E4DE
		rts
; ---------------------------------------------------------------------------

LBZ1_DoMod3:
		movea.w	(a3),a1
		lea	$74(a1),a1
		move.w	-8(a3),d0
		subq.w	#4,d0
		moveq	#$B,d1

loc_3E4FA:
		move.l	(a5)+,(a1)+
		adda.w	d0,a5
		adda.w	d0,a1
		dbf	d1,loc_3E4FA
		rts
; ---------------------------------------------------------------------------

LBZ1_DoMod2:
		movea.w	(a3),a1
		lea	$42(a1),a1
		move.w	-8(a3),d0
		subi.w	#$A,d0
		moveq	#$D,d1

loc_3E516:
		move.l	(a5)+,(a1)+
		move.l	(a5)+,(a1)+
		move.w	(a5)+,(a1)+
		adda.w	d0,a5
		adda.w	d0,a1
		dbf	d1,loc_3E516
		rts
; ---------------------------------------------------------------------------

LBZ1_DoMod1:
		movea.w	8(a3),a1
		lea	$26(a1),a1
		move.w	-8(a3),d0
		subq.w	#8,d0
		moveq	#8,d1

loc_3E536:
		move.l	(a5)+,(a1)+
		move.l	(a5)+,(a1)+
		adda.w	d0,a5
		adda.w	d0,a1
		dbf	d1,loc_3E536
		rts

; =============== S U B R O U T I N E =======================================


LBZ1_ModEndingLayout:
		movea.w	(a3),a1
		lea	$74(a1),a1
		move.w	-8(a3),d0
		subq.w	#4,d0
		moveq	#$B,d1

loc_3E552:
		clr.l	(a1)+
		adda.w	d0,a1
		dbf	d1,loc_3E552
		st	(Events_bg+$02).w
		rts
; End of function LBZ1_ModEndingLayout

; ---------------------------------------------------------------------------

Obj_LBZ1InvisibleBarrier:
		cmpi.w	#$3D80,(Camera_X_pos_copy).w
		bcs.s	loc_3E56E
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3E56E:
		move.w	#$3BC0,d4
		move.w	d4,$10(a0)
		move.w	#$100,$14(a0)
		move.b	#$40,7(a0)
		bset	#7,$2A(a0)
		moveq	#$4B,d1
		move.w	#$100,d2
		move.w	#$100,d3
		jmp	(SolidObjectFull2).l
; ---------------------------------------------------------------------------
LBZ1_FGVScrollArray:dc.w $3B60, $10, $10, $10, $10, $10, $10, $10, $10, $10, $10, $7FFF
LBZ1_LayoutModRange:dc.w $13E0,$16A0, $100, $580
		dc.w $2160,$2520,    0, $700
		dc.w $3A60,$3BA0,    0, $600
		dc.w $3DE0,$3FA0,    0, $300
LBZ1_LayoutModExitRange:dc.w $1376,$170A
		dc.w $20F6,$258A
		dc.w $39F6,$3C0A
		dc.w $3D76,$400A
LBZ1_CollapseScrollSpeed:dc.w  $1EE, $1F2,  $C7, $1B3, $1B7, $198,   $E, $139
; ---------------------------------------------------------------------------

LBZ1_BackgroundInit:
		jsr	LBZ1_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		move.w	d2,(HScroll_table+$002).w
		clr.l	(HScroll_table+$004).w
		lea	LBZ1_BGDrawArray(pc),a4
		lea	(HScroll_table).w,a5
		jsr	Refresh_PlaneTileDeform(pc)
		lea	LBZ1_BGDeformArray(pc),a4
		lea	(HScroll_table+$008).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

LBZ1_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3E620(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3E620:
		bra.w	LBZ1BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	LBZ1BGE_DoTransition
; ---------------------------------------------------------------------------

LBZ1BGE_Normal:
		tst.w	(Events_fg_5).w
		beq.s	loc_3E670
		clr.w	(Events_fg_5).w
		movem.l	d7-a0/a2-a3,-(sp)
		lea	(LBZ2_128x128_Kos).l,a1
		lea	(RAM_start).l,a2
		jsr	(Queue_Kos).l
		lea	(LBZ2_16x16_Secondary_Kos).l,a1
		lea	(Block_table+$6B8).w,a2
		jsr	(Queue_Kos).l
		lea	(LBZ2_8x8_Secondary_KosM).l,a1
		move.w	#$33A0,d2
		jsr	(Queue_Kos_Module).l
		movem.l	(sp)+,d7-a0/a2-a3
		addq.w	#4,(Events_routine_bg).w

loc_3E670:
		jsr	LBZ1_Deform(pc)
		lea	LBZ1_BGDrawArray(pc),a4
		lea	(HScroll_table).w,a5
		moveq	#$20,d6
		moveq	#2,d5
		jsr	Draw_BG(pc)
		lea	LBZ1_BGDeformArray(pc),a4
		lea	(HScroll_table+$008).w,a5
		jsr	ApplyDeformation(pc)
		lea	LBZ1_FGVScrollArray(pc),a4
		lea	(HScroll_table+$12E).w,a5
		jsr	Apply_FGVScroll(pc)
		jmp	ShakeScreen_Setup(pc)
; ---------------------------------------------------------------------------

LBZ1BGE_DoTransition:
		tst.b	(Kos_modules_left).w
		bne.w	loc_3E74A
		move.w	#$601,(Current_zone_and_act).w
		clr.b	(Dynamic_resize_routine).w
		clr.b	(Object_load_routine).w
		clr.b	(Rings_manager_routine).w
		clr.b	(Boss_flag).w
		clr.b	(Respawn_table_keep).w
		jsr	Clear_Switches(pc)
		movem.l	d7-a0/a2-a3,-(sp)
		jsr	(Load_Level).l
		jsr	(LoadSolids).l
		jsr	(CheckLevelForWater).l
		move.w	#$8014,(VDP_control_port).l
		moveq	#$17,d0
		jsr	(LoadPalette_Immediate).l
		movem.l	(sp)+,d7-a0/a2-a3
		move.w	#$3A00,d0
		moveq	#0,d1
		sub.w	d0,(Player_1+x_pos).w
		sub.w	d0,(Player_2+x_pos).w
		jsr	Offset_ObjectsDuringTransition(pc)
		sub.w	d0,(Camera_X_pos).w
		sub.w	d0,(Camera_X_pos_copy).w
		sub.w	d0,(Camera_min_X_pos).w
		sub.w	d0,(Camera_max_X_pos).w
		jsr	Reset_TileOffsetPositionActual(pc)
		clr.l	(Events_bg+$00).w
		clr.l	(Events_bg+$14).w
		clr.w	(_unkEEA0).w
		clr.w	(Event_LBZ2_DeathEgg).w
		move.w	#$40,(Events_bg+$10).w
		cmpi.w	#$540,(Camera_Y_pos_copy).w
		bcs.s	loc_3E738
		neg.w	(Events_bg+$10).w

loc_3E738:
		movem.l	d7-a0/a2-a3,-(sp)
		jsr	(sub_273B4).l
		movem.l	(sp)+,d7-a0/a2-a3
		clr.w	(Events_routine_bg).w

loc_3E74A:
		lea	LBZ1_BGDeformArray(pc),a4
		lea	(HScroll_table+$008).w,a5
		jmp	ApplyDeformation(pc)

; =============== S U B R O U T I N E =======================================


LBZ1_Deform:
		move.w	(Camera_Y_pos_copy).w,d0
		move.w	(Screen_shake_offset).w,d1
		sub.w	d1,d0
		asr.w	#4,d0
		add.w	d1,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		move.w	(Camera_X_pos_copy).w,d0
		swap	d0
		clr.w	d0
		asr.l	#4,d0
		move.l	d0,d1
		asr.l	#1,d0
		swap	d0
		move.w	d0,(Events_bg+$10).w
		swap	d0
		swap	d1
		move.w	d1,(Camera_X_pos_BG_copy).w
		move.w	d1,(HScroll_table).w
		move.w	d1,(HScroll_table+$008).w
		swap	d1
		lea	(HScroll_table+$00A).w,a1
		add.l	d0,d1
		add.l	d0,d1
		asr.l	#2,d0
		moveq	#3,d2

loc_3E79A:
		swap	d1
		move.w	d1,(a1)+
		swap	d1
		add.l	d0,d1
		dbf	d2,loc_3E79A
		moveq	#$A,d0
		add.w	d0,(Events_bg+$10).w
		add.w	d0,(Camera_X_pos_BG_copy).w
		add.w	d0,(HScroll_table).w
		add.w	d0,(HScroll_table+$008).w
		lea	(HScroll_table+$00A).w,a1
		addq.w	#4,(a1)+
		subq.w	#2,(a1)+
		addq.w	#7,(a1)
		rts
; End of function LBZ1_Deform

; ---------------------------------------------------------------------------
LBZ1_BGDrawArray:dc.w $D0, $7FFF
LBZ1_BGDeformArray:dc.w $D0
		dc.w $18
		dc.w 8
		dc.w 8
		dc.w $7FFF
; ---------------------------------------------------------------------------

LBZ2_ScreenInit:
		move.w	#4,(Events_routine_fg).w
		clr.l	(Events_bg+$14).w
		clr.w	(_unkEEA0).w
		clr.w	(Event_LBZ2_DeathEgg).w
		bsr.s	LBZ2_LayoutMod
		jsr	Reset_TileOffsetPositionActual(pc)
		jmp	Refresh_PlaneFull(pc)
; ---------------------------------------------------------------------------

LBZ2_ScreenEvent:
		move.w	(Screen_shake_offset).w,d0
		add.w	d0,(Camera_Y_pos_copy).w
		move.w	(Events_routine_fg).w,d0
		jmp	loc_3E7FE(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3E7FE:
		bra.w	LBZ2SE_FromTransition
; ---------------------------------------------------------------------------
		bra.w	LBZ2SE_Normal
; ---------------------------------------------------------------------------

LBZ2SE_FromTransition:
		cmpi.w	#3,(Player_mode).w
		beq.s	loc_3E844
		cmpi.w	#$60A,(Player_1+x_pos).w
		bcs.s	loc_3E820
		bsr.s	LBZ2_LayoutMod
		addq.w	#4,(Events_routine_fg).w
		jmp	Refresh_PlaneScreenDirect(pc)
; ---------------------------------------------------------------------------

loc_3E820:
		jmp	DrawTilesAsYouMove(pc)

; =============== S U B R O U T I N E =======================================


LBZ2_LayoutMod:
		movea.w	(a3),a5
		lea	$94(a5),a5
		movea.w	(a3),a1
		addq.w	#6,a1
		move.w	-8(a3),d0
		subq.w	#6,d0
		moveq	#5,d1

loc_3E836:
		move.l	(a5)+,(a1)+
		move.w	(a5)+,(a1)+
		adda.w	d0,a5
		adda.w	d0,a1
		dbf	d1,loc_3E836
		rts
; End of function LBZ2_LayoutMod

; ---------------------------------------------------------------------------

loc_3E844:
		bsr.s	LBZ2_LayoutMod
		addq.w	#4,(Events_routine_fg).w

LBZ2SE_Normal:
		jmp	DrawTilesAsYouMove(pc)
; ---------------------------------------------------------------------------

LBZ2_BackgroundInit:
		move.w	#8,(Events_routine_bg).w
		jsr	LBZ2_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		moveq	#$40,d0
		cmp.w	(Events_bg+$10).w,d0
		blt.s	loc_3E872
		neg.w	d0
		cmp.w	(Events_bg+$10).w,d0
		bgt.s	loc_3E876

loc_3E872:
		move.w	d0,(Events_bg+$10).w

loc_3E876:
		lea	LBZ2_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jmp	ApplyDeformation(pc)
; ---------------------------------------------------------------------------

LBZ2_BackgroundEvent:
		move.w	(Events_routine_bg).w,d0
		jmp	loc_3E88A(pc,d0.w)
; ---------------------------------------------------------------------------

loc_3E88A:
		bra.w	LBZ2BGE_FromTransition
; ---------------------------------------------------------------------------
		bra.w	LBZ2BGE_Refresh
; ---------------------------------------------------------------------------
		bra.w	LBZ2BGE_Normal
; ---------------------------------------------------------------------------
		bra.w	LBZ2BGE_DeathEgg
; ---------------------------------------------------------------------------
		bra.w	LBZ2BGE_PlatformDetach
; ---------------------------------------------------------------------------
		bra.w	LBZ2BGE_Falling
; ---------------------------------------------------------------------------

LBZ2BGE_FromTransition:
		jsr	LBZ2_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		addi.w	#$E0,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(Draw_delayed_position).w
		move.w	#$F,(Draw_delayed_rowcount).w
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3E8C6
; ---------------------------------------------------------------------------

LBZ2BGE_Refresh:
		jsr	LBZ2_Deform(pc)

loc_3E8C6:
		moveq	#0,d1
		move.w	(Camera_Y_pos_BG_copy).w,d2
		jsr	Draw_PlaneVertBottomUp(pc)
		bpl.s	loc_3E8E2
		addq.w	#4,(Events_routine_bg).w
		bra.s	loc_3E8E2
; ---------------------------------------------------------------------------

LBZ2BGE_Normal:
		tst.w	(Events_fg_5).w
		bne.s	loc_3E902
		jsr	LBZ2_Deform(pc)

loc_3E8E2:
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		lea	LBZ2_BGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jsr	ApplyDeformation(pc)
		jmp	ShakeScreen_Setup(pc)
; ---------------------------------------------------------------------------

loc_3E902:
		clr.w	(Events_fg_5).w
		move.w	8(a3),(a3)
		move.w	$C(a3),4(a3)
		move.w	#$4390,d0
		move.w	d0,(Camera_max_X_pos).w
		move.w	d0,(Camera_target_max_X_pos).w
		move.w	#$668,d0
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		move.w	#$3C,(Events_bg+$0E).w
		move.w	#$1E00,(_unkEEA2).w
		move.l	#$6200,(_unkEE9C).w
		st	(Scroll_lock).w
		st	(Event_LBZ2_DeathEgg).w
		addq.w	#4,(Events_routine_bg).w

LBZ2BGE_DeathEgg:
		tst.w	(Event_LBZ2_DeathEgg).w
		beq.s	loc_3E96E
		tst.w	(Screen_shake_flag).w
		bne.s	loc_3E95A
		clr.w	(Event_LBZ2_DeathEgg).w
		bra.s	loc_3E96E
; ---------------------------------------------------------------------------

loc_3E95A:
		move.w	(Level_frame_counter).w,d0
		subq.w	#1,d0
		andi.w	#$F,d0
		bne.s	loc_3E96E
		moveq	#signextendB(sfx_DeathEggRiseLoud),d0
		jsr	(Play_Sound_2).l

loc_3E96E:
		tst.w	(Events_fg_5).w
		beq.w	loc_3EA1C
		jsr	LBZ2_EndFallingAccel(pc)
		tst.w	(_unkEE9C).w
		bpl.w	loc_3EA1C
		clr.w	(Events_fg_5).w
		move.w	#$1B,(Draw_delayed_rowcount).w
		move.w	#$10,(Special_V_int_routine).w
		addq.w	#4,(Events_routine_bg).w
		bra.w	loc_3EA1C
; ---------------------------------------------------------------------------

LBZ2BGE_PlatformDetach:
		tst.w	(Special_V_int_routine).w
		bne.s	sub_3EA18
		move.w	(Level_frame_counter).w,d0
		andi.w	#3,d0
		bne.s	loc_3E9E6
		move.w	(Events_bg+$16).w,d0
		cmpi.w	#$28,d0
		bcs.s	loc_3E9E0
		clr.w	(Events_bg+$16).w
		move.w	#$18,(Special_V_int_routine).w
		movea.w	$2A(a3),a1
		lea	$87(a1),a1
		clr.b	(a1)
		clr.b	1(a1)
		clr.b	2(a1)
		adda.w	-$A(a3),a1
		clr.b	(a1)+
		clr.b	(a1)+
		clr.b	(a1)
		addq.w	#4,(Events_routine_bg).w
		bra.s	LBZ2BGE_Falling
; ---------------------------------------------------------------------------

loc_3E9E0:
		addq.w	#1,d0
		move.w	d0,(Events_bg+$16).w

loc_3E9E6:
		bsr.s	sub_3EA18
		move.w	(Camera_Y_pos_copy).w,(V_scroll_value).w
		move.w	(Camera_Y_pos_BG_copy).w,(V_scroll_value_BG).w
		move.w	(Events_bg+$16).w,d0
		add.w	d0,(V_scroll_value).w
		addq.w	#4,sp
		rts
; ---------------------------------------------------------------------------

LBZ2BGE_Falling:
		cmpi.w	#$260,(Camera_Y_pos_BG_copy).w
		bcs.s	sub_3EA18
		st	(Scroll_lock).w
		move.w	(Camera_Y_pos).w,(Camera_Y_pos_copy).w
		subq.w	#2,(Camera_Y_pos).w
		rts

; =============== S U B R O U T I N E =======================================


sub_3EA18:
		jsr	LBZ2_EndFallingAccel(pc)

loc_3EA1C:
		jsr	LBZ2_DeathEggMoveScreen(pc)
		jsr	LBZ2_DeathEggDeform(pc)
		lea	(Camera_Y_pos_BG_copy).w,a6
		lea	(Camera_Y_pos_BG_rounded).w,a5
		moveq	#0,d1
		moveq	#$20,d6
		jsr	Draw_TileRow(pc)
		lea	LBZ2_DEBGDeformArray(pc),a4
		lea	(HScroll_table).w,a5
		jsr	ApplyDeformation(pc)
		jmp	ShakeScreen_Setup(pc)
; End of function sub_3EA18


; =============== S U B R O U T I N E =======================================


LBZ2_Deform:
		move.w	(Camera_Y_pos_copy).w,d0
		move.w	(Screen_shake_offset).w,d3
		sub.w	d3,d0
		subi.w	#$5F0,d0
		move.w	d0,d1
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d2
		asr.l	#3,d2
		sub.l	d2,d0
		asr.l	#2,d2
		sub.l	d2,d0
		swap	d0
		move.w	d0,d2
		addi.w	#$2C0,d0
		add.w	d3,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		sub.w	d1,d2
		move.w	d2,(Events_bg+$10).w
		move.w	(Camera_X_pos_copy).w,d0
		swap	d0
		clr.w	d0
		tst.w	d2
		beq.w	loc_3EB36
		move.l	d0,d1
		move.l	d0,d3
		asr.l	#6,d3
		move.l	d3,d4
		asr.l	#3,d4
		sub.l	d4,d3
		moveq	#$1F,d4
		cmpi.w	#-$40,d2
		bgt.s	loc_3EAB6
		lea	(HScroll_table+$01E).w,a1

loc_3EA9E:
		swap	d1
		move.w	d1,(a1)+
		swap	d1
		sub.l	d3,d1
		swap	d1
		move.w	d1,(a1)+
		swap	d1
		sub.l	d3,d1
		dbf	d4,loc_3EA9E
		bra.w	loc_3EB36
; ---------------------------------------------------------------------------

loc_3EAB6:
		lea	(HScroll_table+$11E).w,a1

loc_3EABA:
		swap	d1
		move.w	d1,-(a1)
		swap	d1
		sub.l	d3,d1
		swap	d1
		move.w	d1,-(a1)
		swap	d1
		sub.l	d3,d1
		dbf	d4,loc_3EABA
		cmpi.w	#$40,d2
		bge.s	loc_3EB36
		lea	(HScroll_table+$09E).w,a1
		lea	(a1),a5
		lea	(LBZ_WaterlineScroll_Data).l,a6
		move.w	d2,d1
		bmi.s	loc_3EB0E
		move.w	d1,d3
		neg.w	d3
		addi.w	#$40,d3
		lsl.w	#6,d3
		adda.w	d3,a6
		subq.w	#1,d1
		moveq	#0,d3
		lsr.w	#1,d1
		bcc.s	loc_3EB00

loc_3EAF8:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),(a1)+

loc_3EB00:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),(a1)+
		dbf	d1,loc_3EAF8
		bra.s	loc_3EB36
; ---------------------------------------------------------------------------

loc_3EB0E:
		move.w	d1,d3
		addi.w	#$40,d3
		lsl.w	#6,d3
		adda.w	d3,a6
		neg.w	d1
		subq.w	#1,d1
		moveq	#0,d3
		lsr.w	#1,d1
		bcc.s	loc_3EB2A

loc_3EB22:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),-(a1)

loc_3EB2A:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),-(a1)
		dbf	d1,loc_3EB22

loc_3EB36:
		lea	(HScroll_table+$1E2).w,a1
		move.l	d0,d1
		asr.l	#1,d1
		move.l	d1,d3
		asr.l	#3,d3
		swap	d1
		move.w	d1,(Camera_X_pos_BG_copy).w
		move.w	d1,-(a1)
		swap	d1
		sub.l	d3,d1
		swap	d1
		move.w	d1,(Events_bg+$12).w
		move.w	d1,-(a1)
		swap	d1
		lea	LBZ2_BGUWDeformRange(pc),a5
		sub.l	d3,d1
		moveq	#4,d4

loc_3EB60:
		sub.l	d3,d1
		swap	d1
		move.w	(a5)+,d5

loc_3EB66:
		move.w	d1,-(a1)
		move.w	d1,-(a1)
		move.w	d1,-(a1)
		move.w	d1,-(a1)
		dbf	d5,loc_3EB66
		swap	d1
		dbf	d4,loc_3EB60
		moveq	#$3F,d3
		tst.w	d2
		bmi.s	loc_3EB82
		sub.w	d2,d3
		bcs.s	loc_3EB90

loc_3EB82:
		swap	d1
		lsr.w	#1,d3
		bcc.s	loc_3EB8A

loc_3EB88:
		move.w	d1,-(a1)

loc_3EB8A:
		move.w	d1,-(a1)
		dbf	d3,loc_3EB88

loc_3EB90:
		lea	(HScroll_table).w,a1
		lea	LBZ2_CloudDeformArray(pc),a5
		move.l	d0,d1
		asr.l	#6,d1
		move.l	d1,d3
		move.l	(HScroll_table+$1E2).w,d4
		addi.l	#$E00,(HScroll_table+$1E2).w
		moveq	#$C,d5

loc_3EBAC:
		move.w	(a5)+,d6
		add.l	d4,d1
		swap	d1
		move.w	d1,(a1,d6.w)
		swap	d1
		add.l	d3,d1
		dbf	d5,loc_3EBAC
		move.l	d0,d1
		asr.l	#4,d1
		move.l	d1,d3
		asr.l	#1,d3
		lea	(HScroll_table+$01A).w,a1
		swap	d1
		move.w	d1,(a1)+
		swap	d1
		add.l	d3,d1
		swap	d1
		move.w	d1,(a1)+
		tst.w	d2
		bpl.s	loc_3EBEC
		moveq	#$3F,d4
		add.w	d2,d4
		bmi.s	loc_3EC0A
		cmpi.w	#$30,d4
		bcs.s	loc_3EBFE
		subi.w	#$30,d4
		bra.s	loc_3EBEE
; ---------------------------------------------------------------------------

loc_3EBEC:
		moveq	#$F,d4

loc_3EBEE:
		moveq	#$17,d5

loc_3EBF0:
		move.w	d1,(a1)+
		move.w	d1,(a1)+
		dbf	d5,loc_3EBF0
		swap	d1
		add.l	d3,d1
		swap	d1

loc_3EBFE:
		lsr.w	#1,d4
		bcc.s	loc_3EC04

loc_3EC02:
		move.w	d1,(a1)+

loc_3EC04:
		move.w	d1,(a1)+
		dbf	d4,loc_3EC02

loc_3EC0A:
		moveq	#$3F,d0
		sub.w	d2,d0
		bmi.s	locret_3EC42
		addi.w	#$60,d0
		cmpi.w	#$E0,d0
		bcs.s	loc_3EC1E
		move.w	#$DF,d0

loc_3EC1E:
		lea	(HScroll_table+$1DE).w,a1
		lea	LBZ_WaterWaveArray(pc),a5
		move.w	(Level_frame_counter).w,d1
		asr.w	#1,d1
		andi.w	#$7E,d1
		adda.w	d1,a5
		lsr.w	#1,d0
		bcc.s	loc_3EC3A

loc_3EC36:
		move.w	-(a5),d3
		add.w	d3,-(a1)

loc_3EC3A:
		move.w	-(a5),d3
		add.w	d3,-(a1)
		dbf	d0,loc_3EC36

locret_3EC42:
		rts
; End of function LBZ2_Deform


; =============== S U B R O U T I N E =======================================


LBZ2_DeathEggDeform:
		move.w	(Camera_Y_pos_copy).w,d0
		move.w	(Screen_shake_offset).w,d3
		sub.w	d3,d0
		subi.w	#$5F0,d0
		sub.w	(Events_bg+$02).w,d0
		sub.w	(Events_bg+$06).w,d0
		move.w	d0,d1
		swap	d0
		clr.w	d0
		asr.l	#1,d0
		move.l	d0,d2
		asr.l	#3,d2
		sub.l	d2,d0
		asr.l	#2,d2
		sub.l	d2,d0
		swap	d0
		move.w	d0,d2
		addi.w	#$2C0,d0
		add.w	d3,d0
		bpl.s	loc_3EC90
		moveq	#0,d3
		move.w	d0,d4

loc_3EC7C:
		addi.w	#$100,d3
		addi.w	#$100,d4
		bmi.s	loc_3EC7C
		cmp.w	(_unkEEA0).w,d3
		bcs.s	loc_3EC90
		move.w	d3,(_unkEEA0).w

loc_3EC90:
		add.w	(_unkEEA0).w,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		tst.w	(_unkEEA0).w
		beq.s	loc_3ECAE

loc_3EC9E:
		cmpi.w	#$100,d0
		bcs.s	loc_3ECAA
		subi.w	#$100,d0
		bra.s	loc_3EC9E
; ---------------------------------------------------------------------------

loc_3ECAA:
		move.w	d0,(Camera_Y_pos_BG_copy).w

loc_3ECAE:
		tst.w	(_unkEE9C).w
		bmi.s	loc_3ECB8
		sub.w	d1,d2
		bpl.s	loc_3ECBC

loc_3ECB8:
		move.w	#$7FFF,d2

loc_3ECBC:
		move.w	d2,(Events_bg+$10).w
		move.w	(Camera_X_pos_copy).w,d0
		swap	d0
		clr.w	d0
		move.l	d0,d1
		move.l	d0,d3
		asr.l	#6,d3
		move.l	d3,d4
		asr.l	#3,d4
		sub.l	d4,d3
		moveq	#$1F,d4
		lea	(HScroll_table+$0AC).w,a1

loc_3ECDA:
		swap	d1
		move.w	d1,-(a1)
		swap	d1
		sub.l	d3,d1
		swap	d1
		move.w	d1,-(a1)
		swap	d1
		sub.l	d3,d1
		dbf	d4,loc_3ECDA
		cmpi.w	#$40,d2
		bge.s	loc_3ED2A
		lea	(HScroll_table+$02C).w,a1
		lea	(a1),a5
		lea	(LBZ_WaterlineScroll_Data).l,a6
		move.w	d2,d1
		move.w	d1,d3
		neg.w	d3
		addi.w	#$40,d3
		lsl.w	#6,d3
		adda.w	d3,a6
		subq.w	#1,d1
		moveq	#0,d3
		lsr.w	#1,d1
		bcc.s	loc_3ED1E

loc_3ED16:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),(a1)+

loc_3ED1E:
		move.b	(a6)+,d3
		add.w	d3,d3
		move.w	(a5,d3.w),(a1)+
		dbf	d1,loc_3ED16

loc_3ED2A:
		lea	(HScroll_table+$0EC).w,a1
		move.l	d0,d1
		asr.l	#1,d1
		move.l	d1,d3
		asr.l	#3,d3
		moveq	#6,d4

loc_3ED38:
		sub.l	d3,d1
		dbf	d4,loc_3ED38
		moveq	#$5F,d3
		sub.w	d2,d3
		bcs.s	loc_3ED52
		swap	d1
		lsr.w	#1,d3
		bcc.s	loc_3ED4C

loc_3ED4A:
		move.w	d1,-(a1)

loc_3ED4C:
		move.w	d1,-(a1)
		dbf	d3,loc_3ED4A

loc_3ED52:
		lea	(HScroll_table+$00C).w,a1
		lea	LBZ2_CloudDeformArray(pc),a5
		move.l	d0,d1
		asr.l	#6,d1
		move.l	d1,d3
		move.l	(HScroll_table+$1E2).w,d4
		addi.l	#$E00,(HScroll_table+$1E2).w
		moveq	#$C,d5

loc_3ED6E:
		move.w	(a5)+,d6
		add.l	d4,d1
		swap	d1
		move.w	d1,(a1,d6.w)
		swap	d1
		add.l	d3,d1
		dbf	d5,loc_3ED6E
		lea	(HScroll_table+$010).w,a1
		lea	(HScroll_table).w,a5
		moveq	#3,d1

loc_3ED8A:
		move.l	(a1)+,(a5)+
		dbf	d1,loc_3ED8A
		move.l	d0,d1
		asr.l	#4,d1
		move.l	d1,d3
		asr.l	#1,d3
		lea	(HScroll_table+$026).w,a1
		swap	d1
		move.w	d1,(a1)+
		swap	d1
		add.l	d3,d1
		swap	d1
		move.w	d1,(a1)+
		swap	d1
		add.l	d3,d1
		swap	d1
		move.w	d1,(a1)+
		moveq	#$3F,d0
		sub.w	d2,d0
		addi.w	#$20,d0
		cmpi.w	#$60,d0
		bcs.s	loc_3EDC2
		move.w	#$5F,d0

loc_3EDC2:
		lea	(HScroll_table+$0EC).w,a1
		lea	LBZ_WaterWaveArray2(pc),a5
		move.w	(Level_frame_counter).w,d1
		asr.w	#1,d1
		andi.w	#$7E,d1
		adda.w	d1,a5
		lsr.w	#1,d0
		bcc.s	loc_3EDDE

loc_3EDDA:
		move.w	-(a5),d3
		add.w	d3,-(a1)

loc_3EDDE:
		move.w	-(a5),d3
		add.w	d3,-(a1)
		dbf	d0,loc_3EDDA
		rts
; End of function LBZ2_DeathEggDeform


; =============== S U B R O U T I N E =======================================


LBZ2_DeathEggMoveScreen:
		cmpi.b	#6,(Player_1+routine).w
		bcc.w	locret_3EEBC
		tst.b	(Scroll_lock).w
		beq.s	loc_3EE1E
		move.w	(Player_1+x_pos).w,d0
		sub.w	(Camera_X_pos).w,d0
		subi.w	#$A0,d0
		bcs.s	loc_3EE0A
		add.w	d0,(Camera_X_pos).w

loc_3EE0A:
		cmpi.w	#$4390,(Camera_X_pos).w
		bcc.s	loc_3EE1A
		cmpi.w	#$668,(Camera_Y_pos).w
		bcs.s	loc_3EE1E

loc_3EE1A:
		clr.b	(Scroll_lock).w

loc_3EE1E:
		tst.w	(Events_bg+$0E).w
		beq.s	loc_3EE2C
		subq.w	#1,(Events_bg+$0E).w
		bra.w	locret_3EEBC
; ---------------------------------------------------------------------------

loc_3EE2C:
		cmpi.w	#$4390,(Camera_X_pos).w
		bcs.s	loc_3EE40
		move.w	(Camera_max_X_pos).w,d0
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_target_min_X_pos).w

loc_3EE40:
		cmpi.w	#$668,(Camera_Y_pos).w
		bcs.s	loc_3EE54
		move.w	(Camera_max_Y_pos).w,d0
		move.w	d0,(Camera_min_Y_pos).w
		move.w	d0,(Camera_target_min_Y_pos).w

loc_3EE54:
		lea	(Events_bg+$02).w,a1
		moveq	#0,d1
		move.w	(_unkEEA2).w,d1
		add.l	d1,(a1)
		move.w	(a1),d0
		move.w	d0,d1
		sub.w	8(a1),d0
		move.w	d1,8(a1)
		move.w	#$2200,d1
		tst.b	(Scroll_lock).w
		bne.s	loc_3EE7A
		move.l	(_unkEE9C).w,d1

loc_3EE7A:
		add.l	d1,4(a1)
		move.w	4(a1),d1
		move.w	d1,d2
		sub.w	$A(a1),d1
		move.w	d2,$A(a1)
		tst.b	(Scroll_lock).w
		beq.s	loc_3EE9E
		movea.w	(Events_bg+$00).w,a5
		add.w	d0,$14(a5)
		add.w	d0,(Camera_Y_pos).w

loc_3EE9E:
		move.w	(Target_water_level).w,d2
		add.w	d0,d2
		add.w	d1,d2
		cmpi.w	#$F00,d2
		bcs.s	loc_3EEB0
		move.w	#$F80,d2

loc_3EEB0:
		move.w	d2,(Target_water_level).w
		move.w	d0,(Events_bg+$14).w
		add.w	d1,(Events_bg+$14).w

locret_3EEBC:
		rts
; End of function LBZ2_DeathEggMoveScreen


; =============== S U B R O U T I N E =======================================


LBZ2_EndFallingAccel:
		tst.w	(_unkEEA2).w
		beq.s	loc_3EECC
		subi.w	#$100,(_unkEEA2).w
		bra.s	locret_3EEDE
; ---------------------------------------------------------------------------

loc_3EECC:
		cmpi.l	#$FFFE8000,(_unkEE9C).w
		ble.s	locret_3EEDE
		subi.l	#$100,(_unkEE9C).w

locret_3EEDE:
		rts
; End of function LBZ2_EndFallingAccel

; ---------------------------------------------------------------------------
LBZ2_BGDeformArray:dc.w $C0, $40, $38, $18, $28, $10, $10, $10, $18, $40, $20, $10, $20
		dc.w $70, $30, $80E0, $20, $7FFF
LBZ2_DEBGDeformArray:dc.w $38, $18, $28, $10, $10, $10, $18, $40, $38, $18, $28, $10, $10
		dc.w $10, $18, $40, $20, $10, $20, $70, $60, $10, $805F, $7FFF
LBZ2_CloudDeformArray:dc.w  $16,  $E,  $A, $14,  $C,   6, $18, $10, $12,   2,   8,   4,   0
LBZ2_BGUWDeformRange:dc.w    7,   1,   3,   1,   7
; ---------------------------------------------------------------------------

Gumball_ScreenInit:
		move.w	#$3FF,(Screen_Y_wrap_value).w
		move.w	#$3F0,(Camera_Y_pos_mask).w
		move.w	#$1C,(Layout_row_index_mask).w
		move.w	#4,(Special_V_int_routine).w
		move.w	#$C0,d0
		move.w	d0,d1
		jsr	Gumball_VScroll(pc)
		jsr	Reset_TileOffsetPositionActual(pc)
		move.w	d2,(HScroll_table+$002).w
		move.w	d2,(HScroll_table+$00A).w
		move.w	(HScroll_table+$00E).w,d0
		and.w	(Camera_Y_pos_mask).w,d0
		move.w	d0,(HScroll_table+$006).w
		lea	Gumball_VScrollArray(pc),a4
		lea	(HScroll_table).w,a5
		move.w	(Camera_X_pos_rounded).w,d0
		jmp	RefreshPlaneDirectVScroll(pc)
; ---------------------------------------------------------------------------

Gumball_ScreenEvent:
		jsr	Gumball_SetUpVScroll(pc)
		lea	Gumball_VScrollArray(pc),a4
		lea	(HScroll_table).w,a5
		moveq	#$F,d6
		moveq	#3,d5
		jmp	DrawTilesVDeform(pc)

; =============== S U B R O U T I N E =======================================


Gumball_SetUpVScroll:
		move.w	(Camera_Y_pos_copy).w,d0
		movea.w	(_unkFAA4).w,a5
		move.w	$14(a5),d1
		subi.w	#$C8,d1
		sub.w	d0,d1
		neg.w	d1
; End of function Gumball_SetUpVScroll


; =============== S U B R O U T I N E =======================================


Gumball_VScroll:
		lea	(HScroll_table).w,a1
		move.w	d0,(a1)
		move.w	d0,8(a1)
		move.w	d0,$C(a1)
		move.w	d0,$10(a1)
		move.w	d1,4(a1)
		move.w	d1,$E(a1)
		rts
; End of function Gumball_VScroll

; ---------------------------------------------------------------------------
Gumball_VScrollArray:dc.w $C0, $80, $7FFF
; ---------------------------------------------------------------------------

Gumball_BackgroundInit:
		jsr	Gumball_Deform(pc)
		jsr	Reset_TileOffsetPositionEff(pc)
		moveq	#0,d1
		jsr	Refresh_PlaneFull(pc)
		jmp	PlainDeformation(pc)
; ---------------------------------------------------------------------------

Gumball_BackgroundEvent:
		jsr	Gumball_Deform(pc)
		jsr	PlainDeformation(pc)
		lea	Gumball_VScrollArray(pc),a4
		lea	(HScroll_table+$00A).w,a5
		jmp	Apply_FGVScroll(pc)

; =============== S U B R O U T I N E =======================================


Gumball_Deform:
		move.w	#-$20,(Camera_X_pos_BG_copy).w
		move.w	(Camera_Y_pos_copy).w,d0
		asr.w	#1,d0
		move.w	d0,(Camera_Y_pos_BG_copy).w
		asr.w	#1,d0
		move.w	d0,(Events_bg+$10).w
		rts
; End of function Gumball_Deform

; ---------------------------------------------------------------------------

ContinueScreen:
		jsr	(Pal_FadeToBlack).l
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#-$41,d0
		move.w	d0,(VDP_control_port).l
		lea	(VDP_control_port).l,a6
		move.w	#-$7FFC,(a6)
		move.w	#-$7900,(a6)
		jsr	(Clear_DisplayData).l
		move.l	#$40200000,(VDP_control_port).l
		lea	(ArtNem_ContinueDigits).l,a0
		jsr	(Nem_Decomp).l
		move.l	#$45200000,(VDP_control_port).l
		lea	(ArtNem_ContinueText).l,a0
		jsr	(Nem_Decomp).l
		move.l	#$51800000,(VDP_control_port).l
		lea	(ArtNem_ContinueSprites).l,a0
		jsr	(Nem_Decomp).l
		move.l	#$5B200000,(VDP_control_port).l
		lea	(ArtNem_ContinueIcons).l,a0
		jsr	(Nem_Decomp).l
		clr.b	(Level_started_flag).w
		clr.b	(_unkFAA9).w
		clr.b	(_unkFA88).w
		lea	(Player_1).w,a1
		moveq	#0,d0
		move.w	#(Kos_decomp_buffer-Player_1)/4-1,d1

loc_3F0C4:
		move.l	d0,(a1)+
		dbf	d1,loc_3F0C4
		lea	(RAM_start+$2000).l,a1
		moveq	#0,d0
		move.w	#$7FF,d1

loc_3F0D6:
		move.l	d0,(a1)+
		dbf	d1,loc_3F0D6
		jsr	(Init_SpriteTable).l
		move.w	#$293,(Demo_timer).w
		lea	(Pal_ContinueScreen).l,a1
		lea	(Target_palette).w,a2
		moveq	#$1F,d6

loc_3F0F4:
		move.l	(a1)+,(a2)+
		dbf	d6,loc_3F0F4
		lea	word_3F684(pc),a1
		jsr	sub_40A4A(pc)
		move.l	#Obj_Continue_SonicWTails,(Player_1).w
		move.l	#Obj_Continue_TailsWSonic,(Player_2).w
		move.l	#loc_3F47E,(Reserved_object_3).w
		lea	(Dynamic_object_RAM).w,a1
		move.l	#loc_3F1D4,(a1)
		move.w	a1,(_unkFAA4).w
		move.l	#loc_3F500,(Dynamic_object_RAM+object_size).w
		bsr.w	sub_3F5FE
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		move.b	#$18,(V_int_routine).w
		jsr	(Wait_VSync).l
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		moveq	#signextendB(mus_Continue),d0
		jsr	(Play_Sound).l
		jsr	(Pal_FadeFromBlack).l

loc_3F168:
		move.b	#$18,(V_int_routine).w
		jsr	(Wait_VSync).l
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		move.b	(_unkFAA9).w,d0
		beq.s	loc_3F168
		subq.b	#1,d0
		beq.s	loc_3F192
		move.b	#0,(Game_mode).w
		rts
; ---------------------------------------------------------------------------

loc_3F192:
		move.b	#$C,(Game_mode).w
		move.b	#3,(Life_count).w
		move.b	#3,(Life_count_P2).w
		moveq	#0,d0
		move.w	d0,(Ring_count).w
		move.l	d0,(Timer).w
		move.l	d0,(Score).w
		move.w	d0,(Ring_count_P2).w
		move.l	d0,(Timer_P2).w
		move.l	d0,(Score_P2).w
		move.l	#5000,(Next_extra_life_score).w
		move.l	#5000,(Next_extra_life_score_P2).w
		subq.b	#1,(Continue_count).w

locret_3F1D2:
		rts
; ---------------------------------------------------------------------------

loc_3F1D4:
		move.l	#loc_3F1E4,(a0)
		clr.w	(_unkFA82).w
		move.b	#$A,(_unkFA84).w

loc_3F1E4:
		btst	#7,(Ctrl_1_pressed).w
		bne.s	loc_3F21A
		btst	#7,(Ctrl_2_pressed).w
		bne.s	loc_3F21A
		subq.w	#1,(_unkFA82).w
		bpl.s	locret_3F210
		move.w	#$3B,(_unkFA82).w
		move.b	(_unkFA84).w,d0
		subq.b	#1,d0
		bmi.s	loc_3F212
		move.b	d0,(_unkFA84).w
		bsr.w	sub_3F5C4

locret_3F210:
		rts
; ---------------------------------------------------------------------------

loc_3F212:
		move.b	#2,(_unkFAA9).w
		rts
; ---------------------------------------------------------------------------

loc_3F21A:
		move.l	#locret_3F226,(a0)
		bset	#3,$38(a0)

locret_3F226:
		rts
; ---------------------------------------------------------------------------

Obj_Continue_SonicWTails:
		move.l	#Map_ContinueSprites,$C(a0)
		move.w	#$8C,$A(a0)
		move.w	#$280,8(a0)
		move.b	#$C,7(a0)
		move.b	#$14,6(a0)
		move.w	#$118,$10(a0)
		move.w	#$120,$14(a0)
		move.l	#loc_3F25A,(a0)

loc_3F25A:
		movea.w	(_unkFAA4).w,a1
		btst	#3,$38(a1)
		bne.s	loc_3F280
		move.b	#0,$22(a0)
		btst	#4,(V_int_run_count+3).w
		beq.s	loc_3F27A
		move.b	#1,$22(a0)

loc_3F27A:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_3F280:
		move.l	#loc_3F286,(a0)

loc_3F286:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_3F2A0(pc,d0.w),d1
		jsr	off_3F2A0(pc,d1.w)
		jsr	(Sonic_Load_PLC).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_3F2A0:	dc.w loc_3F2AA-off_3F2A0
		dc.w loc_3F2CE-off_3F2A0
		dc.w loc_3F32A-off_3F2A0
		dc.w loc_3F340-off_3F2A0
		dc.w locret_3F35C-off_3F2A0
; ---------------------------------------------------------------------------

loc_3F2AA:
		addq.b	#2,5(a0)
		move.l	#Map_Sonic,$C(a0)
		move.w	#ArtTile_Player_1,$A(a0)
		clr.b	(Player_prev_frame).w
		move.b	#$5A,$22(a0)
		move.b	#6,$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_3F2CE:
		subq.b	#1,$24(a0)
		bpl.s	locret_3F304
		move.b	#6,$24(a0)
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.w	#2,d0
		cmpi.b	#$A,d0
		bcc.s	loc_3F306
		move.b	d0,$23(a0)
		lea	RawAni_3F320(pc,d0.w),a2
		move.b	(a2)+,$22(a0)
		bclr	#0,4(a0)
		tst.b	(a2)
		beq.s	locret_3F304
		bset	#0,4(a0)

locret_3F304:
		rts
; ---------------------------------------------------------------------------

loc_3F306:
		move.b	#4,5(a0)
		move.w	#1,$20(a0)
		move.w	#$600,$1C(a0)
		move.w	#$F,$2E(a0)
		rts
; ---------------------------------------------------------------------------
RawAni_3F320:	dc.b  $5A,   1, $59,   1, $55,   0, $56,   0, $57,   0
; ---------------------------------------------------------------------------

loc_3F32A:
		jsr	(Animate_Sonic).l
		subq.w	#1,$2E(a0)
		bmi.s	loc_3F338
		rts
; ---------------------------------------------------------------------------

loc_3F338:
		move.b	#6,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_3F340:
		jsr	(Animate_Sonic).l
		addq.w	#6,$10(a0)
		cmpi.w	#$1E0,$10(a0)
		bcc.s	loc_3F354
		rts
; ---------------------------------------------------------------------------

loc_3F354:
		move.b	#8,5(a0)
		rts
; ---------------------------------------------------------------------------

locret_3F35C:
		rts
; ---------------------------------------------------------------------------

Obj_Continue_TailsWSonic:
		move.l	#Map_ContinueSprites,$C(a0)
		move.w	#$8C,$A(a0)
		move.w	#$200,8(a0)
		move.b	#$10,7(a0)
		move.b	#$14,6(a0)
		move.w	#$12C,$10(a0)
		move.w	#$120,$14(a0)
		move.l	#loc_3F390,(a0)

loc_3F390:
		movea.w	(_unkFAA4).w,a1
		btst	#3,$38(a1)
		bne.s	loc_3F3B6
		move.b	#5,$22(a0)
		btst	#5,(V_int_run_count+3).w
		beq.s	loc_3F3B0
		move.b	#6,$22(a0)

loc_3F3B0:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_3F3B6:
		move.l	#loc_3F3D6,(a0)
		addq.w	#4,$14(a0)
		lea	(Tails_tails).w,a1
		move.l	#Obj_Tails_Tail,(a1)
		move.w	a0,$30(a1)
		move.l	#loc_3F472,(Dust).w

loc_3F3D6:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_3F3F0(pc,d0.w),d1
		jsr	off_3F3F0(pc,d1.w)
		jsr	(Tails_Load_PLC).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_3F3F0:	dc.w loc_3F3F8-off_3F3F0
		dc.w loc_3F428-off_3F3F0
		dc.w loc_3F448-off_3F3F0
		dc.w loc_3F45A-off_3F3F0
; ---------------------------------------------------------------------------

loc_3F3F8:
		addq.b	#2,5(a0)
		move.l	#Map_Tails,$C(a0)
		move.w	#ArtTile_Player_2,$A(a0)
		move.w	#$280,8(a0)
		clr.b	(Player_prev_frame_P2).w
		move.w	#$500,$20(a0)
		move.w	#-$5300,$22(a0)
		move.w	#$27,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_3F428:
		subq.w	#1,$2E(a0)
		bpl.w	locret_3F1D2
		move.b	#4,5(a0)
		move.b	#0,$20(a0)
		move.w	#$600,$1C(a0)
		move.w	#$13,$2E(a0)

loc_3F448:
		subq.w	#1,$2E(a0)
		bpl.s	loc_3F454
		move.b	#6,5(a0)

loc_3F454:
		jmp	(Animate_Tails).l
; ---------------------------------------------------------------------------

loc_3F45A:
		addq.w	#6,$10(a0)
		cmpi.w	#$1E0,$10(a0)
		bcs.s	loc_3F46C
		move.b	#1,(_unkFAA9).w

loc_3F46C:
		jmp	(Animate_Tails).l
; ---------------------------------------------------------------------------

loc_3F472:
		bclr	#2,(Tails_tails+render_flags).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_3F47E:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_3F49E(pc,d0.w),d1
		jsr	off_3F49E(pc,d1.w)
		lea	(DPLCPtr_4575E).l,a2
		jsr	(Perform_DPLC).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_3F49E:	dc.w loc_3F4A6-off_3F49E
		dc.w loc_3F4CA-off_3F49E
		dc.w loc_3F4DE-off_3F49E
		dc.w locret_3F4FE-off_3F49E
; ---------------------------------------------------------------------------

loc_3F4A6:
		lea	(ObjDat4_456DC).l,a1
		jsr	(SetUp_ObjAttributesSlotted).l
		move.w	#$64DA,$A(a0)
		bclr	#2,4(a0)
		move.w	#$40,$10(a0)
		move.w	#$120,$14(a0)

loc_3F4CA:
		movea.w	(_unkFAA4).w,a1
		btst	#3,$38(a1)
		bne.s	loc_3F4D8
		rts
; ---------------------------------------------------------------------------

loc_3F4D8:
		move.b	#4,5(a0)

loc_3F4DE:
		move.w	$10(a0),d0
		addq.w	#6,d0
		move.w	d0,$10(a0)
		cmpi.w	#$1E0,d0
		bcc.s	loc_3F4F8
		lea	byte_3F83A(pc),a1
		jmp	(Animate_RawNoSST).l
; ---------------------------------------------------------------------------

loc_3F4F8:
		move.b	#6,5(a0)

locret_3F4FE:
		rts
; ---------------------------------------------------------------------------

loc_3F500:
		move.l	#Map_ContinueSprites,$C(a0)
		move.w	#$408C,$A(a0)
		move.w	#$280,8(a0)
		move.b	#7,$22(a0)
		move.b	#8,7(a0)
		move.b	#8,6(a0)
		move.w	#$120,$10(a0)
		move.w	#$F5,$14(a0)
		move.l	#loc_3F538,(a0)

loc_3F538:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_3F53E:
		move.l	#Map_ContinueIcons,$C(a0)
		move.w	#$D9,$A(a0)
		move.w	#$280,8(a0)
		move.b	#8,7(a0)
		move.b	#8,6(a0)
		bsr.w	sub_3F630
		move.w	#$D8,$14(a0)
		move.l	#loc_3F572,(a0)
		bsr.w	sub_3F650

loc_3F572:
		moveq	#0,d0
		btst	#4,(V_int_run_count+3).w
		beq.s	loc_3F57E
		addq.w	#1,d0

loc_3F57E:
		movea.l	$30(a0),a1
		move.b	(a1,d0.w),$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_3F58E:
		move.l	#Map_ContinueIcons,$C(a0)
		move.w	#$D9,$A(a0)
		move.w	#$280,8(a0)
		move.b	#8,7(a0)
		move.b	#8,6(a0)
		move.l	#loc_3F5B4,(a0)

loc_3F5B4:
		lea	byte_3F840(pc),a1
		jsr	(Animate_RawNoSST).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_3F5C4:
		move.b	(_unkFA84).w,d0
		move.b	d0,d1
		andi.w	#$F0,d0
		lsr.w	#3,d0
		andi.w	#$F,d1
		add.w	d1,d1
		move.w	#1,d2
		lea	(RAM_start+$2726).l,a1
		add.w	d2,d0
		move.w	d0,(a1)
		addq.w	#1,d0
		move.w	d0,$80(a1)
		add.w	d2,d1
		move.w	d1,2(a1)
		addq.w	#1,d1
		move.w	d1,$82(a1)
		bset	#0,(_unkFA88).w
		rts
; End of function sub_3F5C4


; =============== S U B R O U T I N E =======================================


sub_3F5FE:
		moveq	#0,d0
		move.b	(Continue_count).w,d0
		beq.s	loc_3F60C
		cmpi.b	#$A,d0
		bls.s	loc_3F612

loc_3F60C:
		moveq	#$A,d0
		move.b	d0,(Continue_count).w

loc_3F612:
		lea	(Dynamic_object_RAM+(object_size*2)).w,a1
		moveq	#0,d1

loc_3F618:
		subq.b	#1,d0
		beq.w	locret_3F1D2
		move.l	#loc_3F53E,(a1)
		move.b	d1,$2C(a1)
		addq.w	#2,d1
		lea	$4A(a1),a1
		bra.s	loc_3F618
; End of function sub_3F5FE


; =============== S U B R O U T I N E =======================================


sub_3F630:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_3F63E(pc,d0.w),$10(a0)
		rts
; End of function sub_3F630

; ---------------------------------------------------------------------------
word_3F63E:	dc.w $120
		dc.w $138
		dc.w $108
		dc.w $150
		dc.w $F0
		dc.w $168
		dc.w $D8
		dc.w $180
		dc.w $C0

; =============== S U B R O U T I N E =======================================


sub_3F650:
		move.w	(Player_mode).w,d4
		cmpi.b	#2,d4
		bne.s	loc_3F664
		lea	ChildObjDat_3F66E(pc),a2
		jsr	(CreateChild6_Simple).l

loc_3F664:
		lsl.w	#2,d4
		move.l	off_3F674(pc,d4.w),$30(a0)
		rts
; End of function sub_3F650

; ---------------------------------------------------------------------------
ChildObjDat_3F66E:dc.w 0
		dc.l Obj_3F58E
off_3F674:	dc.l byte_3F834
		dc.l byte_3F834
		dc.l byte_3F836
		dc.l byte_3F838
word_3F684:	dc.w 0
		dc.w $292
		dc.b "C O N T I N U E",0
		even
Pal_ContinueScreen:
		binclude "General/Sprites/Continue/Palette S3.bin"
		even
Map_ContinueSprites:
		include "General/Sprites/Continue/Map - Player Sprites S3.asm"
Map_ContinueIcons:
		include "General/Sprites/Continue/Map - Player Icons.asm"
byte_3F834:	dc.b 0
		dc.b 1
byte_3F836:	dc.b 2
		dc.b 3
byte_3F838:	dc.b 7
		dc.b 8
byte_3F83A:	dc.b    1, $12, $13, $14, $15, $FC
byte_3F840:	dc.b    8,   4,   5,   6, $FC,   0
ArtNem_ContinueSprites:
		binclude "General/Sprites/Continue/Player Sprites.bin"
		even
ArtNem_ContinueIcons:
		binclude "General/Sprites/Continue/Player Icons.bin"
		even
ArtNem_ContinueDigits:
		binclude "General/Sprites/Continue/Digits.bin"
		even
; ---------------------------------------------------------------------------

S3Credits:
		moveq	#signextendB(mus_Stop),d0
		jsr	(Play_Sound).l
		jsr	(Clear_Nem_Queue).l
		jsr	(Pal_FadeToBlack).l
		lea	(VDP_control_port).l,a6
		move.w	#$8004,(a6)
		move.w	#$8230,(a6)
		move.w	#$8407,(a6)
		move.w	#$8700,(a6)
		move.w	#$8B03,(a6)
		move.w	#$8C81,(a6)
		move.w	#$9011,(a6)
		move.w	#$9200,(a6)
		clr.b	(Water_full_screen_flag).w
		clr.w	(Competition_mode).w
		move	#$2700,sr
		move.w	(VDP_reg_1_command).w,d0
		andi.b	#$BF,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Clear_DisplayData).l
		lea	(Sprite_table_buffer).w,a1
		moveq	#0,d0
		move.w	#$A0,d1

loc_403AC:
		move.l	d0,(a1)+
		dbf	d1,loc_403AC
		lea	(H_scroll_buffer).w,a1
		moveq	#0,d0
		move.w	#$100,d1

loc_403BC:
		move.l	d0,(a1)+
		dbf	d1,loc_403BC
		lea	(Sprite_table_input).w,a1
		moveq	#0,d0
		move.w	#$FF,d1

loc_403CC:
		move.l	d0,(a1)+
		dbf	d1,loc_403CC
		lea	(Player_1).w,a1
		moveq	#0,d0
		move.w	#$7FF,d1

loc_403DC:
		move.l	d0,(a1)+
		dbf	d1,loc_403DC
		lea	(RAM_start+$2000).l,a1
		moveq	#0,d0
		move.w	#$7FF,d1

loc_403EE:
		move.l	d0,(a1)+
		dbf	d1,loc_403EE
		lea	(_unkFA80).w,a1
		moveq	#0,d0
		move.w	#$1F,d1

loc_403FE:
		move.l	d0,(a1)+
		dbf	d1,loc_403FE
		clr.w	(DMA_queue).w
		move.l	#DMA_queue,(DMA_queue_slot).w
		clr.w	(Player_mode).w
		clr.b	(Current_act_2P).w
		clr.w	(Results_screen_2P).w
		clr.b	(Level_started_flag).w
		clr.w	(Anim_Counters).w
		clr.w	(_unkFF98).w
		clr.w	(Competition_mode).w
		clr.l	(Camera_X_pos).w
		clr.l	(Camera_Y_pos).w
		clr.l	(V_scroll_value).w
		clr.l	(_unkF61A).w
		jsr	(Init_SpriteTable).l
		move.l	#$40200000,(VDP_control_port).l
		lea	(ArtNem_S38x16Font).l,a0
		jsr	(Nem_Decomp).l
		move.l	#$45200000,(VDP_control_port).l
		lea	(ArtNem_ContinueText).l,a0
		jsr	(Nem_Decomp).l
		move.l	#$51C00000,(VDP_control_port).l
		lea	(ArtNem_EndingGraphics).l,a0
		jsr	(Nem_Decomp).l
		lea	(ArtKosM_AIZIntroEmeralds).l,a1
		move.w	#$4220,d2
		jsr	(Queue_Kos_Module).l
		lea	S3CreditsText_Main(pc),a1
		move.w	(a1),d0
		adda.w	d0,a1
		bsr.w	sub_40A4A
		lea	(Pal_Ending).l,a1
		lea	(Target_palette).w,a2
		moveq	#$F,d6

loc_404AC:
		move.l	(a1)+,(a2)+
		dbf	d6,loc_404AC
		moveq	#signextendB(mus_Credits3),d0
		jsr	(Play_Sound).l
		move.w	#$B4,(_unkFA82).w
		move.b	#$18,(V_int_routine).w
		jsr	(Wait_VSync).l
		move.w	(VDP_reg_1_command).w,d0
		ori.b	#$40,d0
		move.w	d0,(VDP_control_port).l
		jsr	(Pal_FadeFromBlack).l

loc_404E0:
		move.b	#$18,(V_int_routine).w
		jsr	(Process_Kos_Queue).l
		jsr	(Wait_VSync).l
		addq.w	#1,(Level_frame_counter).w
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		bsr.w	sub_4051E
		jsr	(Process_Nem_Queue_Init).l
		jsr	(Process_Kos_Module_Queue).l
		cmpi.b	#$20,(Game_mode).w
		beq.w	loc_404E0
		rts

; =============== S U B R O U T I N E =======================================


sub_4051E:
		move.w	(_unkFA86).w,d0
		move.w	off_4052A(pc,d0.w),d0
		jmp	off_4052A(pc,d0.w)
; End of function sub_4051E

; ---------------------------------------------------------------------------
off_4052A:	dc.w loc_40530-off_4052A
		dc.w loc_405AE-off_4052A
		dc.w locret_4069C-off_4052A
; ---------------------------------------------------------------------------

loc_40530:
		subq.w	#1,(_unkFA82).w
		bmi.s	loc_40538
		rts
; ---------------------------------------------------------------------------

loc_40538:
		move.w	#$B4,(_unkFA82).w
		jsr	(Pal_FadeToBlack).l
		lea	(RAM_start+$2000).l,a1
		moveq	#0,d0
		move.w	#$3FF,d1

loc_40550:
		move.l	d0,(a1)+
		dbf	d1,loc_40550
		move.w	(_unkFA84).w,d0
		addq.w	#2,d0
		move.w	d0,(_unkFA84).w
		lea	S3CreditsText_Main(pc),a1
		move.w	(a1,d0.w),d0
		beq.w	loc_405FA
		lea	(a1,d0.w),a1
		bsr.w	sub_40A4A
		move.b	#$18,(V_int_routine).w
		jsr	(Wait_VSync).l
		jmp	(Pal_FadeFromBlack).l
; ---------------------------------------------------------------------------
		move.w	#2,(_unkFA86).w
		lea	S3CreditsText_Dummy(pc),a1
		move.w	(a1),d0
		adda.w	d0,a1
		bsr.w	sub_40A4A
		lea	(Target_palette).w,a1
		lea	(Normal_palette).w,a2
		moveq	#$1F,d6

loc_405A2:
		move.l	(a1)+,(a2)+
		dbf	d6,loc_405A2
		clr.w	(_unkFA84).w
		rts
; ---------------------------------------------------------------------------

loc_405AE:
		move.w	(V_scroll_value).w,d0
		addq.w	#1,d0
		move.w	d0,(V_scroll_value).w
		andi.w	#$FF,d0
		beq.s	loc_405C0
		rts
; ---------------------------------------------------------------------------

loc_405C0:
		move.w	(_unkFA84).w,d0
		addq.w	#2,d0
		move.w	d0,(_unkFA84).w
		lea	(RAM_start+$2000).l,a2
		btst	#1,d0
		bne.s	loc_405DC
		lea	(RAM_start+$3000).l,a2

loc_405DC:
		moveq	#0,d2
		move.w	#$3FF,d3

loc_405E2:
		move.l	d2,(a2)+
		dbf	d3,loc_405E2
		lea	S3CreditsText_Dummy(pc),a1
		move.w	(a1,d0.w),d0
		beq.s	loc_405FA
		lea	(a1,d0.w),a1
		bra.w	sub_40A4A
; ---------------------------------------------------------------------------

loc_405FA:
		jsr	(Pal_FadeToBlack).l
		move.w	#4,(_unkFA86).w
		lea	Pal_EndingEyecatchKnuckles(pc),a1
		cmpi.w	#7,(Emerald_count).w
		bne.s	loc_40616
		lea	Pal_EndingS3Logo(pc),a1

loc_40616:
		lea	(Target_palette_line_3).w,a2
		moveq	#$F,d0

loc_4061C:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_4061C
		lea	(RAM_start+$2000).l,a1
		moveq	#0,d0
		move.w	#$7FF,d1

loc_4062E:
		move.l	d0,(a1)+
		dbf	d1,loc_4062E
		bset	#0,(_unkFA88).w
		clr.l	(V_scroll_value).w
		lea	Child6_EndingS3Logo(pc),a1
		cmpi.w	#7,(Emerald_count).w
		beq.s	loc_40656
		lea	S3CreditsText_TryAgain(pc),a1
		bsr.w	sub_40A4A
		lea	Child6_EndingTryAgain(pc),a1

loc_40656:
		move.w	(a1)+,d0
		lea	(Dynamic_object_RAM+object_size).w,a2

loc_4065C:
		move.l	(a1)+,(a2)
		lea	$4A(a2),a2
		dbf	d0,loc_4065C
		jsr	(Process_Sprites).l
		jsr	(Render_Sprites).l
		move.b	#$18,(V_int_routine).w
		jsr	(Wait_VSync).l
		jmp	(Pal_FadeFromBlack).l
; ---------------------------------------------------------------------------
Child6_EndingS3Logo:dc.w 2
		dc.l loc_4069E
		dc.l loc_4078C
		dc.l loc_407FC
Child6_EndingTryAgain:dc.w 1
		dc.l loc_40896
		dc.l loc_409A2
; ---------------------------------------------------------------------------

locret_4069C:
		rts
; ---------------------------------------------------------------------------

loc_4069E:
		move.l	#loc_406E2,(a0)
		move.w	a0,(_unkFAA4).w
		move.l	#Map_EndingGraphics,$C(a0)
		move.w	#$C08E,$A(a0)
		move.w	#$280,8(a0)
		move.b	#$40,7(a0)
		move.b	#$40,6(a0)
		move.b	#0,$22(a0)
		move.w	#$120,$10(a0)
		move.w	#$40,$14(a0)
		move.w	#$3C,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_406E2:
		subq.w	#1,$2E(a0)
		bmi.s	loc_406EA
		rts
; ---------------------------------------------------------------------------

loc_406EA:
		move.l	#loc_406F0,(a0)

loc_406F0:
		jsr	(MoveSprite).l
		cmpi.w	#$F0,$14(a0)
		bcs.s	loc_40712
		move.w	$1A(a0),d0
		bmi.s	loc_40712
		asr.w	#1,d0
		cmpi.w	#$80,d0
		bcs.s	loc_40718
		neg.w	d0
		move.w	d0,$1A(a0)

loc_40712:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_40718:
		move.l	#loc_40728,(a0)
		move.w	#$F0,$14(a0)
		clr.w	$2E(a0)

loc_40728:
		subq.w	#1,$2E(a0)
		bmi.s	loc_40734
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_40734:
		move.w	#1,$2E(a0)
		move.w	$3A(a0),d0
		cmpi.w	#6,d0
		bcc.s	loc_40762
		addq.w	#1,$3A(a0)
		lsl.w	#5,d0
		lea	Pal_EndingS3LogoFlash(pc),a1
		adda.w	d0,a1
		lea	(Normal_palette_line_3).w,a2
		moveq	#7,d0

loc_40756:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_40756
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_40762:
		move.l	#loc_40774,(a0)
		move.w	#$168,$2E(a0)
		bset	#5,$38(a0)

loc_40774:
		subq.w	#1,$2E(a0)
		bmi.s	loc_40780
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_40780:
		move.b	#0,(Game_mode).w
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4078C:
		move.l	#loc_407CC,(a0)
		move.l	#Map_EndingGraphics,$C(a0)
		move.w	#$E08E,$A(a0)
		move.w	#$100,8(a0)
		move.b	#$18,7(a0)
		move.b	#$18,6(a0)
		move.b	#1,$22(a0)
		move.w	#$100,$10(a0)
		move.w	#$11C,$14(a0)
		move.l	#AniRaw_41932,$30(a0)

loc_407CC:
		bsr.w	sub_407DC
		jsr	(Animate_Raw).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_407DC:
		movea.w	(_unkFAA4).w,a1
		btst	#5,$38(a1)
		beq.s	locret_407FA
		clr.b	$24(a0)
		clr.b	$23(a0)
		move.l	#AniRaw_41936,$30(a0)
		move.l	(sp),(a0)

locret_407FA:
		rts
; End of function sub_407DC

; ---------------------------------------------------------------------------

loc_407FC:
		move.l	#loc_40844,(a0)
		move.l	#Map_EndingGraphics,$C(a0)
		move.w	#$E08E,$A(a0)
		move.w	#$100,8(a0)
		move.b	#$C,7(a0)
		move.b	#$18,6(a0)
		move.b	#1,$22(a0)
		bset	#0,4(a0)
		move.w	#$140,$10(a0)
		move.w	#$11C,$14(a0)
		lea	ChildObjDat_4192A(pc),a2
		jsr	(CreateChild1_Normal).l

loc_40844:
		lea	AniRaw_41941(pc),a1
		jsr	(Animate_RawNoSST).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_40854:
		move.l	#loc_40886,(a0)
		move.l	#Map_EndingGraphics,$C(a0)
		move.w	#$E08E,$A(a0)
		move.w	#$180,8(a0)
		move.b	#$C,7(a0)
		move.b	#$C,6(a0)
		move.b	#1,$22(a0)
		bset	#0,4(a0)

loc_40886:
		lea	AniRaw_41945(pc),a1
		jsr	(Animate_RawNoSST).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_40896:
		move.l	#loc_408D6,(a0)
		move.l	#Map_EndingGraphics,$C(a0)
		move.w	#$C08E,$A(a0)
		move.w	#$100,8(a0)
		move.b	#$10,7(a0)
		move.b	#$14,6(a0)
		move.b	#$C,$22(a0)
		move.w	#$12C,$10(a0)
		move.w	#$E8,$14(a0)
		move.l	#loc_408E6,$34(a0)

loc_408D6:
		lea	AniRaw_41950(pc),a1
		jsr	(Animate_RawNoSSTMultiDelay).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_408E6:
		move.l	#loc_408F0,(a0)
		bra.w	loc_40A02
; ---------------------------------------------------------------------------

loc_408F0:
		movea.w	$44(a0),a1
		btst	#7,$2A(a1)
		beq.s	loc_4090A
		move.l	#loc_40910,(a0)
		move.l	#loc_40920,$34(a0)

loc_4090A:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_40910:
		lea	AniRaw_41959(pc),a1
		jsr	(Animate_RawNoSSTMultiDelay).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_40920:
		move.l	#loc_408D6,(a0)
		move.l	#loc_408E6,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_40930:
		move.l	#loc_40962,(a0)
		move.l	#Map_AIZIntroEmeralds,$C(a0)
		move.w	#$E211,$A(a0)
		move.w	#$80,8(a0)
		move.b	#4,7(a0)
		move.b	#4,6(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		move.w	d0,$2E(a0)

loc_40962:
		subq.w	#1,$2E(a0)
		bpl.s	loc_40974
		move.l	#loc_4097A,(a0)
		move.w	#-$300,$1A(a0)

loc_40974:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4097A:
		jsr	(MoveSprite_LightGravity).l
		tst.w	$1A(a0)
		bmi.s	loc_4099C
		movea.w	$46(a0),a1
		move.w	$14(a1),d0
		subq.w	#4,d0
		cmp.w	$14(a0),d0
		bhi.s	loc_4099C
		jsr	(Go_Delete_Sprite).l

loc_4099C:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_409A2:
		move.l	#loc_409E0,(a0)
		move.l	#Map_EndingGraphics,$C(a0)
		move.w	#$C08E,$A(a0)
		move.w	#$180,8(a0)
		move.b	#$14,7(a0)
		move.b	#$1C,6(a0)
		move.b	#$E,$22(a0)
		move.w	#$118,$10(a0)
		move.w	#$E0,$14(a0)
		move.w	#$168,$2E(a0)

loc_409E0:
		subq.w	#1,$2E(a0)
		bmi.s	loc_409F6
		lea	AniRaw_4194C(pc),a1
		jsr	(Animate_RawNoSST).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_409F6:
		move.b	#0,(Game_mode).w
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_40A02:
		lea	(Collected_emeralds_array).w,a2
		moveq	#0,d1
		moveq	#0,d2
		moveq	#6,d3

loc_40A0C:
		tst.b	(a2)+
		bne.s	loc_40A42
		jsr	(Create_New_Sprite).l
		bne.s	loc_40A42
		move.l	#loc_40930,(a1)
		move.b	d1,$22(a1)
		move.b	d2,$2C(a1)
		move.w	$10(a0),d4
		addi.w	#$C,d4
		move.w	d4,$10(a1)
		move.w	$14(a0),$14(a1)
		move.w	a0,$46(a1)
		addq.b	#2,d2
		move.w	a1,$44(a0)

loc_40A42:
		addq.b	#1,d1
		dbf	d3,loc_40A0C
		rts

; =============== S U B R O U T I N E =======================================


sub_40A4A:
		move.w	(a1)+,d6

loc_40A4C:
		bsr.w	sub_40A5C
		dbf	d6,loc_40A4C
		bset	#0,(_unkFA88).w
		rts
; End of function sub_40A4A


; =============== S U B R O U T I N E =======================================


sub_40A5C:
		lea	(RAM_start+$2000).l,a2
		move.w	(a1)+,d0
		adda.w	d0,a2

loc_40A66:
		moveq	#0,d0
		move.b	(a1)+,d0
		beq.w	loc_40B10
		move.w	d0,d1
		subi.b	#$61,d0
		bcs.s	loc_40A9A
		lea	(S3Credits_PlaneMapSmall).l,a3
		lsl.w	#2,d0
		adda.w	d0,a3
		move.w	(a3)+,(a2)+
		move.l	a2,d2
		addi.w	#$7E,d2
		andi.l	#$FFFF3FFF,d2
		ori.l	#$2000,d2
		movea.l	d2,a4
		move.w	(a3)+,(a4)
		bra.s	loc_40A66
; ---------------------------------------------------------------------------

loc_40A9A:
		cmpi.b	#$20,d1
		bne.s	loc_40AA6
		moveq	#$1D,d1
		bra.w	loc_40ACE
; ---------------------------------------------------------------------------

loc_40AA6:
		cmpi.b	#$2E,d1
		bne.s	loc_40AB2
		moveq	#$1A,d1
		bra.w	loc_40ACE
; ---------------------------------------------------------------------------

loc_40AB2:
		cmpi.b	#$28,d1
		bne.s	loc_40ABE
		moveq	#$1B,d1
		bra.w	loc_40ACE
; ---------------------------------------------------------------------------

loc_40ABE:
		cmpi.b	#$29,d1
		bne.s	loc_40ACA
		moveq	#$1C,d1
		bra.w	loc_40ACE
; ---------------------------------------------------------------------------

loc_40ACA:
		subi.b	#$41,d1

loc_40ACE:
		add.w	d1,d1
		lea	(S3Credits_PlaneMapLarge).l,a3
		move.w	(a3,d1.w),d1
		lea	(a3,d1.w),a3
		move.w	(a3)+,d0
		movea.l	a2,a4
		moveq	#2,d3

loc_40AE4:
		move.w	d0,d1
		movea.l	a4,a5

loc_40AE8:
		move.w	(a3)+,(a5)+
		dbf	d1,loc_40AE8
		move.l	a4,d2
		addi.w	#$80,d2
		andi.l	#$FFFF3FFF,d2
		ori.l	#$2000,d2
		movea.l	d2,a4
		dbf	d3,loc_40AE4
		addq.w	#1,d0
		add.w	d0,d0
		adda.w	d0,a2
		bra.w	loc_40A66
; ---------------------------------------------------------------------------

loc_40B10:
		move.l	a1,d0
		btst	#0,d0
		beq.s	locret_40B1A
		addq.l	#1,a1

locret_40B1A:
		rts
; End of function sub_40A5C

; ---------------------------------------------------------------------------
S3CreditsText_TryAgain:dc.w 0
		dc.w $996
		dc.b "TRY  AGAIN",0
		even
S3CreditsText_Main:dc.w	word_40B7C-S3CreditsText_Main
		dc.w word_40B94-S3CreditsText_Main
		dc.w word_40BC2-S3CreditsText_Main
		dc.w word_40BEC-S3CreditsText_Main
		dc.w word_40C16-S3CreditsText_Main
		dc.w word_40C42-S3CreditsText_Main
		dc.w word_40C5E-S3CreditsText_Main
		dc.w word_40C86-S3CreditsText_Main
		dc.w word_40CB8-S3CreditsText_Main
		dc.w word_40CFC-S3CreditsText_Main
		dc.w word_40D1E-S3CreditsText_Main
		dc.w word_40D62-S3CreditsText_Main
		dc.w word_40D90-S3CreditsText_Main
		dc.w word_40DB6-S3CreditsText_Main
		dc.w word_40DDA-S3CreditsText_Main
		dc.w word_40E00-S3CreditsText_Main
		dc.w word_40E34-S3CreditsText_Main
		dc.w word_40E68-S3CreditsText_Main
		dc.w word_40EA4-S3CreditsText_Main
		dc.w word_40EC6-S3CreditsText_Main
		dc.w word_40EF8-S3CreditsText_Main
		dc.w word_40F2A-S3CreditsText_Main
		dc.w word_40F5E-S3CreditsText_Main
		dc.w word_40F88-S3CreditsText_Main
		dc.w word_40FB8-S3CreditsText_Main
		dc.w word_40FF4-S3CreditsText_Main
		dc.w word_41028-S3CreditsText_Main
		dc.w word_4105C-S3CreditsText_Main
		dc.w word_4108C-S3CreditsText_Main
		dc.w word_410D8-S3CreditsText_Main
		dc.w word_41124-S3CreditsText_Main
		dc.w word_4117C-S3CreditsText_Main
		dc.w word_411B0-S3CreditsText_Main
		dc.w word_411F4-S3CreditsText_Main
		dc.w word_41244-S3CreditsText_Main
		dc.w word_41290-S3CreditsText_Main
		dc.w word_412C4-S3CreditsText_Main
		dc.w word_41314-S3CreditsText_Main
		dc.w word_4134C-S3CreditsText_Main
		dc.w 0
word_40B7C:	dc.w 1
		dc.w $598
		dc.b "SONIC  III",0
		even
		dc.w $8A2
		dc.b "staff",0
		even
word_40B94:	dc.w 1
		dc.w $48E
		dc.b "    executive producer",0
		even
		dc.w $78A
		dc.b "HAYAO  NAKAYAMA",0
		even
word_40BC2:	dc.w 1
		dc.w $490
		dc.b "    project manager",0
		even
		dc.w $78E
		dc.b "HISASHI  SUZUKI",0
		even
word_40BEC:	dc.w 1
		dc.w $490
		dc.b "    project manager",0
		even
		dc.w $78A
		dc.b "SHINOBU  TOYODA",0
		even
word_40C16:	dc.w 1
		dc.w $490
		dc.b "    project manager",0
		even
		dc.w $78A
		dc.b "MASAHARU  YOSHII",0
		even
word_40C42:	dc.w 1
		dc.w $4A0
		dc.b "producer",0
		even
		dc.w $798
		dc.b "YUJ I  NAKA",0
		even
word_40C5E:	dc.w 1
		dc.w $498
		dc.b "    director",0
		even
		dc.w $786
		dc.b "HIROKAZU  YASUHARA",0
		even
word_40C86:	dc.w 1
		dc.w $48C
		dc.b "     lead game designer",0
		even
		dc.w $786
		dc.b "HIROKAZU  YASUHARA",0
		even
word_40CB8:	dc.w 2
		dc.w $48A
		dc.b "    senior game designers",0
		even
		dc.w $688
		dc.b "HISAYOSHI YOSHIDA",0
		even
		dc.w $990
		dc.b "TAKASHI  IIZUKA",0
		even
word_40CFC:	dc.w 1
		dc.w $498
		dc.b "lead programmer",0
		even
		dc.w $796
		dc.b "YUJ I  NAKA",0
		even
word_40D1E:	dc.w 2
		dc.w $48E
		dc.b "    senior programmers",0
		even
		dc.w $688
		dc.b "HIROSHI NIKAIDOH",0
		even
		dc.w $980
		dc.b "MASANOBU YAMAMOTO",0
		even
word_40D62:	dc.w 1
		dc.w $496
		dc.b "character designer",0
		even
		dc.w $784
		dc.b "TAKASHI THOMAS YUDA",0
		even
word_40D90:	dc.w 1
		dc.w $496
		dc.b "    cg  artist",0
		even
		dc.w $78E
		dc.b "KUNITAKE   AOKI",0
		even
word_40DB6:	dc.w 1
		dc.w $4A0
		dc.b "animator",0
		even
		dc.w $784
		dc.b "TAKASHI THOMAS YUDA",0
		even
word_40DDA:	dc.w 1
		dc.w $49A
		dc.b "enemy artist",0
		even
		dc.w $786
		dc.b "SATOSHI YOKOKAWA",0
		even
word_40E00:	dc.w 2
		dc.w $498
		dc.b "scene artists",0
		even
		dc.w $690
		dc.b "KUNITAKE  AOKI",0
		even
		dc.w $992
		dc.b "CHIE YOSHIDA",0
		even
word_40E34:	dc.w 2
		dc.w $49A
		dc.b "scene artists",0
		even
		dc.w $690
		dc.b "TSUNEKO  AOKI",0
		even
		dc.w $990
		dc.b "SHIGERU  OKADA",0
		even
word_40E68:	dc.w 2
		dc.w $49A
		dc.b "scene artists",0
		even
		dc.w $684
		dc.b "TAKASHI THOMAS YUDA",0
		even
		dc.w $986
		dc.b "SATOSHI YOKOKAWA",0
		even
word_40EA4:	dc.w 1
		dc.w $498
		dc.b "art assistant",0
		even
		dc.w $78E
		dc.b "OSAMU  OHASHI",0
		even
word_40EC6:	dc.w 2
		dc.w $498
		dc.b "music composers",0
		even
		dc.w $694
		dc.b "BRAD  BUXER",0
		even
		dc.w $98E
		dc.b "BOBBY BROOKS",0
		even
word_40EF8:	dc.w 2
		dc.w $498
		dc.b "music composers",0
		even
		dc.w $692
		dc.b "DARRYL  ROSS",0
		even
		dc.w $992
		dc.b "GEOFF GRACE",0
		even
word_40F2A:	dc.w 2
		dc.w $498
		dc.b "music composers",0
		even
		dc.w $68C
		dc.b "DOUG  GRIGSBY III",0
		even
		dc.w $996
		dc.b "SCIROCCO",0
		even
word_40F5E:	dc.w 2
		dc.w $498
		dc.b "sega sound team",0
		even
		dc.w $6A2
		dc.b "BO",0
		even
		dc.w $98E
		dc.b "SACHIO  OGAWA",0
		even
word_40F88:	dc.w 2
		dc.w $498
		dc.b "sega sound team",0
		even
		dc.w $69C
		dc.b "MILPO",0
		even
		dc.w $986
		dc.b "MASARU  SETSUMARU",0
		even
word_40FB8:	dc.w 2
		dc.w $498
		dc.b "sega sound team",0
		even
		dc.w $68A
		dc.b "TATSUYUKI  MAEDA",0
		even
		dc.w $986
		dc.b "TOMONORI  SAWADA",0
		even
word_40FF4:	dc.w 2
		dc.w $498
		dc.b "sega sound team",0
		even
		dc.w $68C
		dc.b "MASAYUKI NAGAO",0
		even
		dc.w $994
		dc.b "J UN SENOUE",0
		even
word_41028:	dc.w 1
		dc.w $490
		dc.b "sound project coordinator",0
		even
		dc.w $78A
		dc.b "    HISAKI  NIMIYA",0
		even
word_4105C:	dc.w 1
		dc.w $490
		dc.b "       marketing      ",0
		even
		dc.w $78A
		dc.b "    PAMELA  KELLY",0
		even
word_4108C:	dc.w 2
		dc.w $490
		dc.b " executive management ",0
		even
		dc.w $680
		dc.b " SHOUICHIROU IRIMAJ IRI",0
		even
		dc.w $98A
		dc.b "  TOM  KAL INSKE  ",0
		even
word_410D8:	dc.w 2
		dc.w $490
		dc.b " executive coordinator",0
		even
		dc.w $680
		dc.b "     MAMORU  SHIGETA    ",0
		even
		dc.w $98A
		dc.b "  TOMIO  TAKAMI  ",0
		even
word_41124:	dc.w 2
		dc.w $490
		dc.b " executive coordinator",0
		even
		dc.w $680
		dc.b "    DIANE  A  FORNASIER   ",0
		even
		dc.w $980
		dc.b "       ROGER  HECTOR      ",0
		even
word_4117C:	dc.w 1
		dc.w $490
		dc.b " executive coordinator",0
		even
		dc.w $780
		dc.b " TAKAHARU  UTSUNOMIYA",0
		even
word_411B0:	dc.w 2
		dc.w $490
		dc.b " sound special thanks ",0
		even
		dc.w $680
		dc.b " MAYUMI NINA SAKAZAKI",0
		even
		dc.w $98A
		dc.b "        (MRM)",0
		even
word_411F4:	dc.w 2
		dc.w $490
		dc.b " sound special thanks ",0
		even
		dc.w $680
		dc.b "         CUBE  CORP.   ",0
		even
		dc.w $980
		dc.b "         OPUS CORP.   ",0
		even
word_41244:	dc.w 2
		dc.w $490
		dc.b " sound special thanks ",0
		even
		dc.w $680
		dc.b "  MASANORI  NAKAYAMA",0
		even
		dc.w $980
		dc.b "       (STUDIO WHO) ",0
		even
word_41290:	dc.w 1
		dc.w $490
		dc.b " sound special thanks ",0
		even
		dc.w $780
		dc.b "     HOWARD  DROSSIN",0
		even
word_412C4:	dc.w 2
		dc.w $490
		dc.b "    special thanks    ",0
		even
		dc.w $680
		dc.b "   DEBORAH MCCRACKEN  ",0
		even
		dc.w $980
		dc.b "       EMI  KAWAMURA  ",0
		even
word_41314:	dc.w 1
		dc.w $490
		dc.b "    special thanks    ",0
		even
		dc.w $780
		dc.b "       J INA  ISHIWATARI",0
		even
word_4134C:	dc.w 1
		dc.w $490
		dc.b "     presented by",0
		even
		dc.w $78A
		dc.b "          SEGA           ",0
		even
S3CreditsText_Dummy:dc.w word_4138C-S3CreditsText_Dummy
		dc.w word_41396-S3CreditsText_Dummy
		dc.w word_413A0-S3CreditsText_Dummy
		dc.w word_413AA-S3CreditsText_Dummy
		dc.w word_413B4-S3CreditsText_Dummy
		dc.w word_413BE-S3CreditsText_Dummy
		dc.w 0
word_4138C:	dc.w 1
		dc.w $1310
		dc.b "a",0
		even
		dc.w $1710
		dc.b "A",0
		even
word_41396:	dc.w 1
		dc.w $1310
		dc.b "b",0
		even
		dc.w $1710
		dc.b "B",0
		even
word_413A0:	dc.w 1
		dc.w $1310
		dc.b "c",0
		even
		dc.w $1710
		dc.b "C",0
		even
word_413AA:	dc.w 1
		dc.w $310
		dc.b "d",0
		even
		dc.w $710
		dc.b "D",0
		even
word_413B4:	dc.w 1
		dc.w $1310
		dc.b "e",0
		even
		dc.w $1710
		dc.b "E",0
		even
word_413BE:	dc.w 1
		dc.w $310
		dc.b "f",0
		even
		dc.w $710
		dc.b "F",0
		even
S3Credits_PlaneMapSmall:
		dc.w    1,   2
		dc.w    3,   4
		dc.w    5,   6
		dc.w    7,   8
		dc.w    9,  $A
		dc.w    9,  $B
		dc.w   $C,   6
		dc.w   $D,   2
		dc.w   $E,  $F
		dc.w  $10,   6
		dc.w  $11, $12
		dc.w  $13, $14
		dc.w  $15, $16
		dc.w  $17, $18
		dc.w  $19,   6
		dc.w  $1A,  $B
		dc.w  $1B, $1C
		dc.w    3,   2
		dc.w  $1D,   6
		dc.w  $1E,  $F
		dc.w  $1F,   6
		dc.w  $1F, $20
		dc.w  $21, $22
		dc.w  $23, $18
		dc.w  $24,  $F
		dc.w  $25, $26
S3Credits_PlaneMapLarge:dc.w word_4146C-S3Credits_PlaneMapLarge
		dc.w word_4147A-S3Credits_PlaneMapLarge
		dc.w word_41488-S3Credits_PlaneMapLarge
		dc.w word_41496-S3Credits_PlaneMapLarge
		dc.w word_414A4-S3Credits_PlaneMapLarge
		dc.w word_414B2-S3Credits_PlaneMapLarge
		dc.w word_414C0-S3Credits_PlaneMapLarge
		dc.w word_414CE-S3Credits_PlaneMapLarge
		dc.w word_414DC-S3Credits_PlaneMapLarge
		dc.w word_414E4-S3Credits_PlaneMapLarge
		dc.w word_414EC-S3Credits_PlaneMapLarge
		dc.w word_414FA-S3Credits_PlaneMapLarge
		dc.w word_41502-S3Credits_PlaneMapLarge
		dc.w word_41516-S3Credits_PlaneMapLarge
		dc.w word_41524-S3Credits_PlaneMapLarge
		dc.w word_41538-S3Credits_PlaneMapLarge
		dc.w word_41546-S3Credits_PlaneMapLarge
		dc.w word_4155A-S3Credits_PlaneMapLarge
		dc.w word_41568-S3Credits_PlaneMapLarge
		dc.w word_41576-S3Credits_PlaneMapLarge
		dc.w word_41584-S3Credits_PlaneMapLarge
		dc.w word_41592-S3Credits_PlaneMapLarge
		dc.w word_415A0-S3Credits_PlaneMapLarge
		dc.w word_415B4-S3Credits_PlaneMapLarge
		dc.w word_415C2-S3Credits_PlaneMapLarge
		dc.w word_415D0-S3Credits_PlaneMapLarge
		dc.w word_415DE-S3Credits_PlaneMapLarge
		dc.w word_415E6-S3Credits_PlaneMapLarge
		dc.w word_415F4-S3Credits_PlaneMapLarge
		dc.w word_41602-S3Credits_PlaneMapLarge
word_4146C:	dc.w 1
		dc.w  $2029, $202A, $202B, $202C, $202D, $202C
word_4147A:	dc.w 1
		dc.w  $202E, $202F, $2030, $2031, $2032, $2033
word_41488:	dc.w 1
		dc.w  $2034, $2035, $2036, $2037, $2038, $2039
word_41496:	dc.w 1
		dc.w  $203A, $2834, $203B, $2836, $203C, $2838
word_414A4:	dc.w 1
		dc.w  $203D, $203E, $202D, $2037, $203F, $2040
word_414B2:	dc.w 1
		dc.w  $203D, $203E, $202D, $2037, $202D, $2037
word_414C0:	dc.w 1
		dc.w  $2041, $2042, $2043, $202D, $2044, $2045
word_414CE:	dc.w 1
		dc.w  $2046, $2047, $202D, $202C, $202D, $202C
word_414DC:	dc.w 0
		dc.w  $2048, $203B, $203B
word_414E4:	dc.w 0
		dc.w  $2049, $282C, $204A
word_414EC:	dc.w 1
		dc.w  $204B, $204C, $204D, $204E, $204F, $2050
word_414FA:	dc.w 0
		dc.w  $2048, $203B, $2051
word_41502:	dc.w 2
		dc.w  $2052, $2053, $2054, $2055, $2056, $2057, $3855, $2058, $2059
word_41516:	dc.w 1
		dc.w  $205A, $2047, $203B, $202C, $203B, $202C
word_41524:	dc.w 2
		dc.w  $205B, $205C, $285B, $2043, $2037, $2843, $205D, $205E, $285D
word_41538:	dc.w 1
		dc.w  $205F, $2060, $3030, $3031, $2061, $2037
word_41546:	dc.w 2
		dc.w  $205B, $205C, $285B, $2043, $2037, $2843, $205D, $2062, $2063
word_4155A:	dc.w 1
		dc.w  $205F, $2060, $3030, $3031, $2064, $2065
word_41568:	dc.w 1
		dc.w  $2066, $2067, $2068, $2069, $206A, $206B
word_41576:	dc.w 1
		dc.w  $206C, $2067, $282D, $2037, $282D, $2037
word_41584:	dc.w 1
		dc.w  $206D, $206E, $206F, $2070, $2071, $2072
word_41592:	dc.w 1
		dc.w  $2073, $2074, $3055, $2075, $2076, $2077
word_415A0:	dc.w 2
		dc.w  $2073, $2078, $2079, $3055, $3056, $3057, $2076, $207A, $207B
word_415B4:	dc.w 1
		dc.w  $207C, $207D, $207E, $287E, $207F, $2080
word_415C2:	dc.w 1
		dc.w  $2081, $2082, $282C, $2037, $282C, $2037
word_415D0:	dc.w 1
		dc.w  $2083, $2084, $2085, $2037, $2086, $2087
word_415DE:	dc.w 0
		dc.w  $202F, $2037, $2088
word_415E6:	dc.w 1
		dc.w  $2089, $208A, $208B, $2037, $208C, $208D
word_415F4:	dc.w 1
		dc.w  $288A, $2889, $2037, $288B, $288D, $288C
word_41602:	dc.w 0
		dc.w      0,     0,     0
Pal_Ending:	binclude "General/Ending/Palettes/S3 Ending.bin"
		even
Pal_EndingS3Logo:
		binclude "General/Ending/Palettes/S3 Logo.bin"
		even
Pal_EndingEyecatchKnuckles:
		binclude "General/Ending/Palettes/S3 Knuckles Eyecatch.bin"
		even
Pal_EndingS3LogoFlash:
		binclude "General/Ending/Palettes/S3 Logo Flash.bin"
		even
Map_EndingGraphics:
		include "General/Ending/Map - S3 Ending Graphics.asm"
ChildObjDat_4192A:dc.w 0
		dc.l loc_40854
		dc.w $1008
AniRaw_41932:	dc.b   $F,   1,   2, $FC
AniRaw_41936:	dc.b    7,   1,   1,   3,   4, $F8,   7, $7F,   4,   4, $FC
AniRaw_41941:	dc.b   $F,  $A,  $B, $FC
AniRaw_41945:	dc.b    7,   5,   6,   7,   8,   9, $FC
AniRaw_4194C:	dc.b   $F,  $C,  $D, $FC
AniRaw_41950:	dc.b   $E, $1F,  $E, $1F,  $F,   7, $10,   0, $F4
AniRaw_41959:	dc.b  $10, $1F,  $F,   7,  $E,   0, $F4
ArtNem_EndingGraphics:
		binclude "General/Ending/Nemesis Art/S3 Ending Graphics.bin"
		even
; ---------------------------------------------------------------------------
		movea.l ObjB0(pc,d6.w),a6
		jsr	(a6)
		nop
		nop
		move	sr,d5
		move.w	(sp),d6
		andi.w	#$1F,d5
		andi.w	#-$20,d6
		or.w	d5,d6
		move.w	d6,(sp)
		nop
		nop
		rte
; ---------------------------------------------------------------------------

ObjB0:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	ObjB0_Index(pc,d0.w),d1
		jmp	ObjB0_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjB0_Index:	dc.w ObjB0_Init-ObjB0_Index
		dc.w ObjB0_RunLeft-ObjB0_Index
		dc.w ObjB0_MidWipe-ObjB0_Index
		dc.w ObjB0_RunRight-ObjB0_Index
		dc.w ObjB0_EndWipe-ObjB0_Index
		dc.w locret_43340-ObjB0_Index
; ---------------------------------------------------------------------------

ObjB0_Init:
		lea	ObjDat3_434E0(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#0,4(a0)
		move.w	#$1E8,$10(a0)
		move.w	#$F0,$14(a0)
		move.w	#$B,$2E(a0)
		move.w	#2,(_unkF662).w
		bset	#0,4(a0)
		bset	#0,$2A(a0)
		lea	(H_scroll_buffer+$138).w,a1
		lea	Streak_Horizontal_offsets(pc),a2
		moveq	#0,d0
		moveq	#$22,d6

loc_431B8:
		move.b	(a2)+,d0
		add.w	d0,(a1)
		addq.w	#8,a1
		dbf	d6,loc_431B8
		move.w	d7,-(sp)
		moveq	#0,d0
		moveq	#0,d1
		lea	SonicRunningSpriteScaleData(pc),a6
		moveq	#7,d7

loc_431CE:
		movea.l	(a6)+,a1
		movea.l	(a6)+,a2
		move.b	(a6)+,d0
		move.b	(a6)+,d1
		bsr.w	Scale_2x
		dbf	d7,loc_431CE
		move.w	(sp)+,d7
		rts
; ---------------------------------------------------------------------------
SonicRunningSpriteScaleData:
		dc.l Chunk_table
		dc.l Chunk_table+$B00
		dc.b 2
		dc.b 1
		dc.l Chunk_table+$C0
		dc.l Chunk_table+$E00
		dc.b 3
		dc.b 3
		dc.l Chunk_table+$2C0
		dc.l Chunk_table+$1600
		dc.b 2
		dc.b 1
		dc.l Chunk_table+$380
		dc.l Chunk_table+$1900
		dc.b 3
		dc.b 3
		dc.l Chunk_table+$580
		dc.l Chunk_table+$2100
		dc.b 2
		dc.b 1
		dc.l Chunk_table+$640
		dc.l Chunk_table+$2400
		dc.b 3
		dc.b 3
		dc.l Chunk_table+$840
		dc.l Chunk_table+$2C00
		dc.b 2
		dc.b 1
		dc.l Chunk_table+$900
		dc.l Chunk_table+$2F00
		dc.b 3
		dc.b 3
; ---------------------------------------------------------------------------

ObjB0_RunLeft:
		subi.w	#$20,$10(a0)
		subq.w	#1,$2E(a0)
		bmi.s	loc_43254
		bsr.w	ObjB0_Move_Streaks_Left
		lea	(Ani_SonicOnSegaScr).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_43254:
		addq.b	#2,5(a0)
		move.w	#$C,$2E(a0)
		move.b	#1,$30(a0)
		move.b	#-1,$31(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

ObjB0_MidWipe:
		tst.w	$2E(a0)
		beq.s	loc_4327E
		subq.w	#1,$2E(a0)
		bsr.w	ObjB0_Move_Streaks_Left

loc_4327E:
		lea	byte_433F4(pc),a1
		bsr.w	sub_433A6
		bne.s	loc_4328A
		rts
; ---------------------------------------------------------------------------

loc_4328A:
		addq.b	#2,5(a0)
		bchg	#0,4(a0)
		move.w	#$B,$2E(a0)
		move.w	#4,(_unkF662).w
		subi.w	#$28,$10(a0)
		bchg	#0,4(a0)
		bchg	#0,$2A(a0)
		lea	(H_scroll_buffer).w,a1
		moveq	#0,d0
		move.w	#$400,d1

loc_432BC:
		move.l	d0,(a1)+
		dbf	d1,loc_432BC
		lea	(H_scroll_buffer+$13C).w,a1
		lea	Streak_Horizontal_offsets(pc),a2
		moveq	#0,d0
		moveq	#$22,d6

loc_432CE:
		move.b	(a2)+,d0
		sub.w	d0,(a1)
		addq.w	#8,a1
		dbf	d6,loc_432CE

locret_432D8:
		rts
; ---------------------------------------------------------------------------

ObjB0_RunRight:
		subq.w	#1,$2E(a0)
		bmi.s	loc_432FC
		addi.w	#$20,$10(a0)
		bsr.w	ObjB0_Move_Streaks_Right
		lea	(Ani_SonicOnSegaScr).l,a1
		jsr	(Animate_Sprite).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_432FC:
		addq.b	#2,5(a0)
		move.w	#$C,$2E(a0)
		move.b	#1,$30(a0)
		move.b	#-1,$31(a0)
		rts
; ---------------------------------------------------------------------------

ObjB0_EndWipe:
		tst.w	$2E(a0)
		beq.s	loc_43322
		subq.w	#1,$2E(a0)
		bsr.w	ObjB0_Move_Streaks_Right

loc_43322:
		lea	byte_4346A(pc),a1
		bsr.w	sub_433A6
		bne.s	loc_4332E
		rts
; ---------------------------------------------------------------------------

loc_4332E:
		addq.b	#2,5(a0)
		st	(_unkF660).w
		move.b	#mus_FA,d0
		jsr	(Play_Sound_2).l

locret_43340:
		rts
; ---------------------------------------------------------------------------

ObjB1:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	ObjB1_Index(pc,d0.w),d1
		jmp	ObjB1_Index(pc,d1.w)
; ---------------------------------------------------------------------------
ObjB1_Index:	dc.w ObjB1_Init-ObjB1_Index
		dc.w ObjB1_Main-ObjB1_Index
; ---------------------------------------------------------------------------

ObjB1_Init:
		lea	ObjDat3_434EA(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#0,4(a0)
		move.b	#4,$22(a0)
		move.w	#$174,$10(a0)
		move.w	#$D8,$14(a0)
		rts
; ---------------------------------------------------------------------------

ObjB1_Main:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


ObjB0_Move_Streaks_Left:
		lea	(H_scroll_buffer+$138).w,a1
		move.w	#$22,d6

loc_43386:
		subi.w	#$20,(a1)
		addq.w	#8,a1
		dbf	d6,loc_43386
		rts
; End of function ObjB0_Move_Streaks_Left


; =============== S U B R O U T I N E =======================================


ObjB0_Move_Streaks_Right:
		lea	(H_scroll_buffer+$13C).w,a1
		move.w	#$22,d6

loc_4339A:
		addi.w	#$20,(a1)
		addq.w	#8,a1
		dbf	d6,loc_4339A
		rts
; End of function ObjB0_Move_Streaks_Right


; =============== S U B R O U T I N E =======================================


sub_433A6:
		subq.b	#1,$30(a0)
		bne.s	loc_433EC
		moveq	#0,d0
		move.b	$31(a0),d0
		addq.b	#1,d0
		cmp.b	1(a1),d0
		bcs.s	loc_433C0
		tst.b	3(a1)
		bne.s	loc_433F0

loc_433C0:
		move.b	d0,$31(a0)
		move.b	(a1),$30(a0)
		lea	6(a1),a2
		moveq	#0,d1
		move.b	2(a1),d1
		move.w	d1,d2
		tst.w	d0
		beq.s	loc_433E2

loc_433D8:
		subq.b	#1,d0
		beq.s	loc_433E0
		add.w	d2,d1
		bra.s	loc_433D8
; ---------------------------------------------------------------------------

loc_433E0:
		adda.w	d1,a2

loc_433E2:
		movea.w	4(a1),a3

loc_433E6:
		move.w	(a2)+,(a3)+
		subq.w	#2,d2
		bne.s	loc_433E6

loc_433EC:
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

loc_433F0:
		moveq	#1,d0
		rts
; End of function sub_433A6

; ---------------------------------------------------------------------------
byte_433F4:	dc.b 4
		dc.b 7
		dc.b $10
		dc.b $FF
		dc.w $FC10
		binclude "General/Sprites/S2Menu/Palettes/Sega Screen 2.bin"
byte_4346A:	dc.b 4
		dc.b 7
		dc.b $10
		dc.b $FF
		dc.w $FC00
		binclude "General/Sprites/S2Menu/Palettes/Sega Screen 3.bin"
ObjDat3_434E0:	dc.l Map_SonicOnSegaScr
		dc.w $C088
		dc.w $80
		dc.b $10
		dc.b 0
ObjDat3_434EA:	dc.l Map_SonicOnSegaScr
		dc.w 3
		dc.w $100
		dc.b 8
		dc.b 0
Ani_SonicOnSegaScr:
		include "General/Sprites/S2Menu/Anim - Sonic On Sega Screen.asm"
Map_SonicOnSegaScr:
		include "General/Sprites/S2Menu/Map - Sonic On Sega Screen.asm"

; =============== S U B R O U T I N E =======================================


SegaScr_VInt:
		move.w	(_unkF662).w,d0
		beq.w	locret_432D8
		clr.w	(_unkF662).w
		move.w	off_435C0-2(pc,d0.w),d0
		jmp	off_435C0(pc,d0.w)
; End of function SegaScr_VInt

; ---------------------------------------------------------------------------
off_435C0:	dc.w loc_435C4-off_435C0
		dc.w loc_435F6-off_435C0
; ---------------------------------------------------------------------------

loc_435C4:
		lea	(VDP_control_port).l,a5
		move.l	#$94169300,(a5)
		move.l	#$96859580,(a5)
		move.w	#$977F,(a5)
		move.w	#$5100,(a5)
		move.w	#$80,(DMA_trigger_word).w
		move.w	(DMA_trigger_word).w,(a5)
		lea	ObjB1_Streak_fade_to_right(pc),a1
		move.l	#$49500003,d0
		bra.w	loc_43632
; ---------------------------------------------------------------------------

loc_435F6:
		lea	(VDP_control_port).l,a5
		move.w	#$8F01,(a5)
		move.l	#$941F93FF,(a5)
		move.w	#$9780,(a5)
		move.l	#$40000083,(a5)
		move.w	#0,(VDP_data_port).l

loc_43618:
		move.w	(a5),d1
		btst	#1,d1
		bne.s	loc_43618
		move.w	#-$70FE,(a5)
		lea	ObjB1_Streak_fade_to_left(pc),a1
		move.l	#$49A00003,d0
		bra.w	loc_43632
; ---------------------------------------------------------------------------

loc_43632:
		lea	(VDP_data_port).l,a6
		move.l	#$1000000,d6
		moveq	#7,d1
		moveq	#9,d2

loc_43642:
		move.l	d0,4(a6)
		move.w	d1,d3
		movea.l	a1,a2

loc_4364A:
		move.w	(a2)+,d4
		bclr	#$A,d4
		beq.s	loc_43656
		bsr.w	sub_43664

loc_43656:
		move.w	d4,(a6)
		dbf	d3,loc_4364A
		add.l	d6,d0
		dbf	d2,loc_43642
		rts

; =============== S U B R O U T I N E =======================================


sub_43664:
		moveq	#$28,d5

loc_43666:
		move.w	d4,(a6)
		dbf	d5,loc_43666
		rts
; End of function sub_43664

; ---------------------------------------------------------------------------
ObjB1_Streak_fade_to_right:
		dc.w $A080
		dc.w $A081
		dc.w $A082
		dc.w $A083
		dc.w $A084
		dc.w $A085
		dc.w $A086
		dc.w $A487
ObjB1_Streak_fade_to_left:
		dc.w $A487
		dc.w $A086
		dc.w $A085
		dc.w $A084
		dc.w $A083
		dc.w $A082
		dc.w $A081
		dc.w $A080
Streak_Horizontal_offsets:
		dc.b  $12
		dc.b    4
		dc.b    4
		dc.b    2
		dc.b    2
		dc.b    2
		dc.b    2
		dc.b    0
		dc.b    0
		dc.b    0
		dc.b    0
		dc.b    0
		dc.b    0
		dc.b    0
		dc.b    0
		dc.b    4
		dc.b    4
		dc.b    6
		dc.b   $A
		dc.b    8
		dc.b    6
		dc.b    4
		dc.b    4
		dc.b    4
		dc.b    4
		dc.b    6
		dc.b    6
		dc.b    8
		dc.b    8
		dc.b   $A
		dc.b   $A
		dc.b   $C
		dc.b   $E
		dc.b  $10
		dc.b  $16
		dc.b    0

; =============== S U B R O U T I N E =======================================


Scale_2x:
		move.w	d1,d2
		andi.w	#1,d2
		addq.w	#1,d2
		lsl.w	#6,d2
		swap	d2
		move.w	d1,d3
		lsr.w	#1,d3
		addq.w	#1,d3
		lsl.w	#6,d3
		swap	d3
		bsr.w	sub_436DE
		btst	#1,d0
		beq.w	locret_432D8
		btst	#1,d1
		bne.s	loc_436DC
		movea.l	a3,a5

loc_436DC:
		movea.l	a5,a2
; End of function Scale_2x


; =============== S U B R O U T I N E =======================================


sub_436DE:
		movea.l	a2,a4
		swap	d2
		lea	(a2,d2.w),a3
		swap	d2
		move.w	d1,d5
		andi.w	#1,d5
		bsr.w	Scale2x_SingleTile
		btst	#1,d1
		beq.s	loc_4371A
		swap	d2
		move.w	d2,d4
		swap	d2
		add.w	d4,d4
		move.w	d0,d3
		andi.w	#1,d3
		lsl.w	d3,d4
		adda.w	d4,a4
		move.w	d1,d5
		lsr.w	#1,d5
		swap	d3
		lea	(a4,d3.w),a5
		swap	d3
		bsr.w	Scale2x_SingleTile2

loc_4371A:
		btst	#0,d0
		bne.s	loc_43726
		btst	#1,d0
		beq.s	locret_43756

loc_43726:
		swap	d2
		lea	(a2,d2.w),a2
		lea	(a2,d2.w),a3
		swap	d2
		move.w	d1,d5
		andi.w	#1,d5
		bsr.w	Scale2x_SingleTile
		btst	#1,d1
		beq.s	locret_43756
		move.w	d1,d5
		lsr.w	#1,d5
		swap	d3
		lea	(a4,d3.w),a4
		lea	(a4,d3.w),a5
		swap	d3
		bsr.w	Scale2x_SingleTile2

locret_43756:
		rts
; End of function sub_436DE


; =============== S U B R O U T I N E =======================================


Scale2x_SingleTile:
		moveq	#7,d6

loc_4375A:
		bsr.w	Scale_2x_LeftPixels
		addq.w	#4,a2
		bsr.w	Scale_2x_RightPixels
		addq.w	#4,a3
		dbf	d6,loc_4375A
		dbf	d5,Scale2x_SingleTile
		rts
; End of function Scale2x_SingleTile


; =============== S U B R O U T I N E =======================================


Scale2x_SingleTile2:
		moveq	#7,d6

loc_43772:
		bsr.w	Scale_2x_LeftPixels2
		addq.w	#4,a4
		bsr.w	Scale_2x_RightPixels2
		addq.w	#4,a5
		dbf	d6,loc_43772
		dbf	d5,Scale2x_SingleTile2
		rts
; End of function Scale2x_SingleTile2


; =============== S U B R O U T I N E =======================================


Scale_2x_LeftPixels:
		bsr.w	loc_4378C

loc_4378C:
		move.b	(a1)+,d2
		move.b	d2,d3
		andi.b	#-$10,d2
		move.b	d2,d4
		lsr.b	#4,d4
		or.b	d2,d4
		move.b	d4,(a2)+
		move.b	d4,3(a2)
		andi.b	#$F,d3
		move.b	d3,d4
		lsl.b	#4,d4
		or.b	d3,d4
		move.b	d4,(a2)+
		move.b	d4,3(a2)
		rts
; End of function Scale_2x_LeftPixels


; =============== S U B R O U T I N E =======================================


Scale_2x_RightPixels:
		bsr.w	loc_437B6

loc_437B6:
		move.b	(a1)+,d2
		move.b	d2,d3
		andi.b	#-$10,d2
		move.b	d2,d4
		lsr.b	#4,d4
		or.b	d2,d4
		move.b	d4,(a3)+
		move.b	d4,3(a3)
		andi.b	#$F,d3
		move.b	d3,d4
		lsl.b	#4,d4
		or.b	d3,d4
		move.b	d4,(a3)+
		move.b	d4,3(a3)
		rts
; End of function Scale_2x_RightPixels


; =============== S U B R O U T I N E =======================================


Scale_2x_LeftPixels2:
		bsr.w	loc_437E0

loc_437E0:
		move.b	(a1)+,d2
		move.b	d2,d3
		andi.b	#-$10,d2
		move.b	d2,d4
		lsr.b	#4,d4
		or.b	d2,d4
		move.b	d4,(a4)+
		move.b	d4,3(a4)
		andi.b	#$F,d3
		move.b	d3,d4
		lsl.b	#4,d4
		or.b	d3,d4
		move.b	d4,(a4)+
		move.b	d4,3(a4)
		rts
; End of function Scale_2x_LeftPixels2


; =============== S U B R O U T I N E =======================================


Scale_2x_RightPixels2:
		bsr.w	loc_4380A

loc_4380A:
		move.b	(a1)+,d2
		move.b	d2,d3
		andi.b	#-$10,d2
		move.b	d2,d4
		lsr.b	#4,d4
		or.b	d2,d4
		move.b	d4,(a5)+
		move.b	d4,3(a5)
		andi.b	#$F,d3
		move.b	d3,d4
		lsl.b	#4,d4
		or.b	d3,d4
		move.b	d4,(a5)+
		move.b	d4,3(a5)
		rts
; End of function Scale_2x_RightPixels2

; ---------------------------------------------------------------------------

Obj_86:
		lea	ObjDat3_43F7C(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_43892,(a0)
		move.w	a0,(_unkFAA4).w
		subi.w	#$100,$14(a0)
		move.w	$14(a0),$3A(a0)
		st	(Disable_death_plane).w
		move.l	(V_int_run_count).w,(RNG_seed).w
		move.w	(Saved_ring_count).w,(Ring_count).w
		move.b	(Saved_extra_life_flags).w,(Extra_life_flags).w
		move.b	#1,(Update_HUD_ring_count).w
		bset	#7,(Player_1+art_tile).w
		bset	#7,(Player_2+art_tile).w
		lea	($FF2000).l,a1
		moveq	#-1,d0
		moveq	#8,d1

loc_43882:
		move.l	d0,(a1)+
		dbf	d1,loc_43882
		lea	ChildObjDat_43FC4(pc),a2
		jsr	(CreateChild1_Normal).l

loc_43892:
		bsr.w	sub_43E38
		lea	word_438F0(pc),a1
		jsr	(Check_PlayerInRange).l
		tst.w	d0
		bne.s	loc_438AA
		swap	d0
		tst.w	d0
		beq.s	loc_438EA

loc_438AA:
		move.l	#loc_438F8,(a0)
		move.l	#loc_4390C,$34(a0)
		bset	#1,$38(a0)
		movea.w	d0,a1
		move.w	$10(a0),d0
		cmp.w	$10(a1),d0
		scs	d1
		tst.w	$1A(a1)
		bmi.s	loc_438D2
		not.b	d1

loc_438D2:
		bclr	#0,4(a0)
		tst.b	d1
		beq.s	loc_438E2
		bset	#0,4(a0)

loc_438E2:
		moveq	#signextendB(sfx_GumballTab),d0
		jsr	(Play_Sound_2).l

loc_438EA:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
word_438F0:	dc.w $FFDC
		dc.w $48
		dc.w $FFF8
		dc.w $10
; ---------------------------------------------------------------------------

loc_438F8:
		bsr.w	sub_43E38
		lea	byte_4401C(pc),a1
		jsr	(Animate_RawNoSST).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4390C:
		move.l	#loc_4391A,(a0)
		bset	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4391A:
		bsr.w	sub_43E38
		btst	#1,$38(a0)
		bne.s	loc_4392C
		move.l	#loc_43892,(a0)

loc_4392C:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_43932:
		lea	ObjDat3_43F64(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.w	#$100,$10(a0)
		move.w	#$310,$14(a0)
		lea	word_43FF0(pc),a2
		jsr	(CreateChild1_Normal).l
		move.l	#loc_43958,(a0)

loc_43958:
		btst	#1,$38(a0)
		bne.s	loc_43970
		lea	(SolidObjectFull).l,a1
		bsr.w	sub_43EE0
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_43970:
		clr.b	($FF2022).l
		lea	ChildObjDat_4400A(pc),a2
		jsr	(CreateChild6_Simple).l
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_43986:
		lea	ObjDat3_43F94(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.w	#-$1000,$30(a0)
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_43A10
		move.w	#$1B,d1
		move.w	#8,d2
		move.w	#$10,d3
		move.w	$10(a0),d4
		lea	(Player_1).w,a1
		moveq	#3,d6
		movem.l	d1-d4,-(sp)
		jsr	(SolidObjectFull2_1P).l
		btst	#3,$2A(a0)
		beq.s	loc_439D6
		bset	#5,$38(a0)
		jsr	(sub_2164A).l

loc_439D6:
		movem.l	(sp)+,d1-d4
		lea	(Player_2).w,a1
		moveq	#4,d6
		jsr	(SolidObjectFull2_1P).l
		btst	#4,$2A(a0)
		beq.s	loc_439F4
		jsr	(sub_2164A).l

loc_439F4:
		lea	(Ani_Spring).l,a1
		jsr	(Animate_Sprite).l
		btst	#5,$38(a0)
		beq.s	loc_43A20
		cmpi.b	#1,$21(a0)
		bne.s	loc_43A20

loc_43A10:
		move.l	#MoveChkDel,(a0)
		movea.w	$46(a0),a1
		bset	#1,$38(a1)

loc_43A20:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_43A26:
		lea	ObjDat3_43F88(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_43A36,(a0)

loc_43A36:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		beq.s	loc_43A5A
		move.l	#loc_43A66,(a0)
		move.l	#loc_43A7C,$34(a0)
		lea	ChildObjDat_44010(pc),a2
		jsr	(CreateChild6_Simple).l

loc_43A5A:
		jsr	(Refresh_ChildPosition).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_43A66:
		lea	byte_44027(pc),a1
		jsr	(Animate_RawNoSSTMultiDelay).l
		jsr	(Refresh_ChildPosition).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_43A7C:
		move.l	#loc_43A36,(a0)
		movea.w	$46(a0),a1
		bclr	#1,$38(a1)
		bclr	#3,$38(a1)

locret_43A92:
		rts
; ---------------------------------------------------------------------------

loc_43A94:
		lea	ObjDat3_43FAC(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_43AA8,(a0)
		bsr.w	sub_43E74

loc_43AA8:
		move.w	$1A(a0),d0
		addi.w	#$10,d0
		cmpi.w	#$200,d0
		bhi.s	loc_43ABA
		move.w	d0,$1A(a0)

loc_43ABA:
		jsr	(MoveSprite2).l
		movea.w	$46(a0),a1
		move.w	$14(a1),d0
		cmp.w	$14(a0),d0
		bls.s	loc_43AD6
		move.w	d0,$14(a0)
		bra.w	loc_43AE8
; ---------------------------------------------------------------------------

loc_43AD6:
		addi.w	#$10,d0
		cmp.w	$14(a0),d0
		bhi.s	loc_43AE8
		jsr	(sub_43CAE).l
		bne.s	loc_43B02

loc_43AE8:
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$240,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_43B02
		jsr	(Animate_Raw).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_43B02:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_87:
		lea	ObjDat3_43F70(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_43B18,(a0)

loc_43B18:
		tst.w	($FF2020).l
		bpl.s	loc_43B68
		moveq	#$D,d1
		moveq	#8,d2
		moveq	#$11,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		btst	#$10,d6
		bne.s	loc_43B3E
		btst	#3,$2A(a0)
		beq.s	loc_43B4C

loc_43B3E:
		lea	(Player_1).w,a1
		bsr.w	sub_43B6E
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_43B4C:
		btst	#$11,d6
		bne.s	loc_43B5A
		btst	#4,$2A(a0)
		beq.s	loc_43B68

loc_43B5A:
		lea	(Player_2).w,a1
		bsr.w	sub_43B6E
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_43B68:
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_43B6E:
		move.w	#-$300,d0
		move.w	#-$600,$1A(a1)
		bset	#0,$2A(a1)
		btst	#0,4(a0)
		bne.s	loc_43B8E
		bclr	#0,$2A(a1)
		neg.w	d0

loc_43B8E:
		move.w	d0,$18(a1)
		move.w	d0,$1C(a1)
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		move.b	#$10,$20(a1)
		clr.b	$40(a1)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lea	($FF2000).l,a1
		clr.b	(a1,d0.w)
		move.w	#$F,($FF2020).l
		movea.w	(_unkFAA4).w,a1
		bset	#0,$38(a1)
		moveq	#signextendB(sfx_Spring),d0
		jsr	(Play_Sound_2).l
		rts
; End of function sub_43B6E

; ---------------------------------------------------------------------------

loc_43BD8:
		lea	ObjDat3_43F58(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_43BEC,(a0)
		bsr.w	sub_43F2E

loc_43BEC:
		jsr	(Refresh_ChildPosition).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_43BF8:
		lea	ObjDat3_43FA0(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_43C0C,(a0)
		bsr.w	sub_43EEC

loc_43C0C:
		subq.b	#1,$2E(a0)
		bpl.s	loc_43C18
		move.l	#MoveChkDel,(a0)

loc_43C18:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_43C1E:
		addi.w	#$2A0,$14(a0)
		move.l	#loc_43C2A,(a0)

loc_43C2A:
		subq.w	#1,($FF2020).l
		lea	word_43C7C(pc),a1
		jsr	(Check_PlayerInRange).l
		tst.w	d0
		bne.s	loc_43C50
		swap	d0
		tst.w	d0
		beq.w	locret_43A92
		lea	(Player_2).w,a1
		jmp	(Delete_Referenced_Sprite).l
; ---------------------------------------------------------------------------

loc_43C50:
		move.w	(Saved_zone_and_act).w,(Current_zone_and_act).w
		move.w	(Saved_apparent_zone_and_act).w,(Apparent_zone_and_act).w
		move.b	(Saved_last_star_post_hit).w,(Last_star_post_hit).w
		move.b	#0,(Special_bonus_entry_flag).w
		move.b	#1,(Restart_level_flag).w
		move.w	(Ring_count).w,(Saved_ring_count).w
		move.b	(Extra_life_flags).w,(Saved_extra_life_flags).w
		rts
; ---------------------------------------------------------------------------
word_43C7C:	dc.w  $FF00,  $200, $FFF0,   $40
; ---------------------------------------------------------------------------

loc_43C84:
		lea	ObjDat3_43FB8(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_43C94,(a0)

loc_43C94:
		st	(Spritemask_flag).w
		movea.w	$46(a0),a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_43CAE:
		lea	word_43CE4(pc),a1
		jsr	(Check_PlayerInRange).l
		tst.l	d0
		beq.s	locret_43CD0
		moveq	#0,d1
		moveq	#1,d2
		move.b	$2C(a0),d1
		add.w	d1,d1
		move.w	off_43CD2(pc,d1.w),d1
		jsr	off_43CD2(pc,d1.w)
		tst.w	d2

locret_43CD0:
		rts
; End of function sub_43CAE

; ---------------------------------------------------------------------------
off_43CD2:	dc.w loc_43CEC-off_43CD2
		dc.w loc_43CFC-off_43CD2
		dc.w loc_43D1A-off_43CD2
		dc.w locret_43D18-off_43CD2
		dc.w loc_43D28-off_43CD2
		dc.w loc_43DA2-off_43CD2
		dc.w loc_43DCC-off_43CD2
		dc.w loc_43DF6-off_43CD2
		dc.w loc_43E30-off_43CD2
word_43CE4:	dc.w  $FFE8,   $30, $FFE8,   $30
; ---------------------------------------------------------------------------

loc_43CEC:
		addq.b	#1,(Life_count).w
		addq.b	#1,(Update_HUD_life_count).w
		moveq	#signextendB(mus_ExtraLife),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

loc_43CFC:
		tst.b	($FF2022).l
		bne.s	locret_43CD0
		jsr	(Create_New_Sprite3).l
		bne.s	locret_43CD0
		move.l	#loc_43932,(a1)
		st	($FF2022).l

locret_43D18:
		rts
; ---------------------------------------------------------------------------

loc_43D1A:
		addi.w	#$14,(Saved_ring_count).w
		moveq	#$A,d0
		jmp	(AddRings).l
; ---------------------------------------------------------------------------

loc_43D28:
		move.l	d0,-(sp)
		tst.w	d0
		beq.s	loc_43D30
		bsr.s	sub_43D42

loc_43D30:
		move.l	(sp)+,d0
		swap	d0
		tst.w	d0
		beq.s	loc_43D3A
		bsr.s	sub_43D42

loc_43D3A:
		clr.b	$29(a0)
		moveq	#0,d2
		rts

; =============== S U B R O U T I N E =======================================


sub_43D42:
		movea.w	d0,a1
		move.w	$10(a0),d1
		move.w	$14(a0),d2
		sub.w	$10(a1),d1
		sub.w	$14(a1),d2
		jsr	(GetArcTan).l
		move.b	(Level_frame_counter).w,d1
		andi.w	#3,d1
		add.w	d1,d0
		jsr	(GetSineCosine).l
		muls.w	#-$700,d1
		asr.l	#8,d1
		move.w	d1,$18(a1)
		muls.w	#-$700,d0
		asr.l	#8,d0
		move.w	d0,$1A(a1)
		bset	#1,$2A(a1)
		bclr	#4,$2A(a1)
		bclr	#5,$2A(a1)
		clr.b	$40(a1)
		move.b	#1,$20(a0)
		moveq	#signextendB(sfx_SmallBumpers),d0
		jmp	(Play_Sound_2).l
; End of function sub_43D42

; ---------------------------------------------------------------------------

loc_43DA2:
		lea	(Player_1).w,a1
		move.l	#Obj_Fire_Shield,(Shield).w
		move.w	a1,(Shield+parent).w
		andi.b	#-$72,$2B(a1)
		bset	#0,$2B(a1)
		moveq	#4,d0
		bsr.w	sub_43E20
		moveq	#signextendB(sfx_FireShield),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

loc_43DCC:
		lea	(Player_1).w,a1
		move.l	#Obj_Bubble_Shield,(Shield).w
		move.w	a1,(Shield+parent).w
		andi.b	#-$72,$2B(a1)
		bset	#0,$2B(a1)
		moveq	#6,d0
		bsr.w	sub_43E20
		moveq	#signextendB(sfx_BubbleShield),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

loc_43DF6:
		lea	(Player_1).w,a1
		move.l	#Obj_Lightning_Shield,(Shield).w
		move.w	a1,(Shield+parent).w
		andi.b	#-$72,$2B(a1)
		bset	#0,$2B(a1)
		moveq	#5,d0
		bsr.w	sub_43E20
		moveq	#signextendB(sfx_ElectricShield),d0
		jmp	(Play_Sound).l

; =============== S U B R O U T I N E =======================================


sub_43E20:
		bset	d0,$2B(a1)
		lea	(Saved_status_secondary).w,a2
		andi.b	#-$71,(a2)
		bset	d0,(a2)
		rts
; End of function sub_43E20

; ---------------------------------------------------------------------------

loc_43E30:
		bset	#7,(Saved_status_secondary).w
		rts

; =============== S U B R O U T I N E =======================================


sub_43E38:
		bclr	#0,$38(a0)
		beq.s	loc_43E60
		lea	($FF2000).l,a1
		moveq	#0,d0
		moveq	#$D,d1

loc_43E4A:
		tst.w	(a1)+
		bne.s	loc_43E56
		addi.w	#$20,d0
		dbf	d1,loc_43E4A

loc_43E56:
		move.w	$3A(a0),d1
		add.w	d0,d1
		move.w	d1,$3C(a0)

loc_43E60:
		move.w	$3C(a0),d1
		move.w	$14(a0),d2
		cmp.w	d1,d2
		bcc.s	locret_43E72
		addq.w	#4,d2
		move.w	d2,$14(a0)

locret_43E72:
		rts
; End of function sub_43E38


; =============== S U B R O U T I N E =======================================


sub_43E74:
		jsr	(Random_Number).l
		andi.w	#$F,d0
		bne.s	loc_43E8E
		movea.w	$46(a0),a1
		bset	#7,$38(a1)
		beq.s	loc_43E8E
		moveq	#3,d0

loc_43E8E:
		move.b	byte_43EAC(pc,d0.w),d0
		move.b	d0,$2C(a0)
		cmpi.b	#4,d0
		bne.s	loc_43EA2
		move.b	#-$29,$28(a0)

loc_43EA2:
		lsl.w	#2,d0
		move.l	off_43EBC(pc,d0.w),$30(a0)
		rts
; End of function sub_43E74

; ---------------------------------------------------------------------------
byte_43EAC:	dc.b 0
		dc.b 3
		dc.b 1
		dc.b 4
		dc.b 2
		dc.b 4
		dc.b 5
		dc.b 4
		dc.b 6
		dc.b 3
		dc.b 7
		dc.b 4
		dc.b 5
		dc.b 6
		dc.b 7
		dc.b 2
off_43EBC:	dc.l word_44032
		dc.l word_44036
		dc.l word_4403A
		dc.l word_4403E
		dc.l word_44042
		dc.l word_44046
		dc.l word_4404A
		dc.l word_4404E
		dc.l word_44052

; =============== S U B R O U T I N E =======================================


sub_43EE0:
		moveq	#$4B,d1
		moveq	#$10,d2
		moveq	#$11,d3
		move.w	$10(a0),d4
		jmp	(a1)
; End of function sub_43EE0


; =============== S U B R O U T I N E =======================================


sub_43EEC:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.b	d0,$2E(a0)
		lea	byte_43F0E(pc,d0.w),a1
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d0,$10(a0)
		moveq	#0,d0
		move.b	(a1)+,d0
		ext.w	d0
		add.w	d0,$14(a0)
		rts
; End of function sub_43EEC

; ---------------------------------------------------------------------------
byte_43F0E:	dc.b  $F8,   8
		dc.b    8,   8
		dc.b  $F8, $F8
		dc.b    8, $F8
		dc.b  $E8,   8
		dc.b  $18,   8
		dc.b  $E8, $F8
		dc.b  $18, $F8
		dc.b  $D8,   8
		dc.b  $28,   8
		dc.b  $D8, $F8
		dc.b  $28, $F8
		dc.b  $C8,   8
		dc.b  $38,   8
		dc.b  $C8, $F8
		dc.b  $38, $F8

; =============== S U B R O U T I N E =======================================


sub_43F2E:
		moveq	#0,d0
		move.b	$2C(a0),d0
		subi.w	#6,d0
		lsr.w	#1,d0
		move.b	RawAni_43F54(pc,d0.w),d0
		move.b	d0,$22(a0)
		cmpi.b	#$16,d0
		bne.w	locret_43A92
		lea	ChildObjDat_44016(pc),a2
		jmp	(CreateChild6_Simple).l
; End of function sub_43F2E

; ---------------------------------------------------------------------------
RawAni_43F54:	dc.b    0,   1,   0, $16
ObjDat3_43F58:	dc.l Map_GumballBonus
		dc.w $15B
		dc.w $200
		dc.b $10
		dc.b $20
		dc.b 0
		dc.b 0
ObjDat3_43F64:	dc.l Map_GumballBonus
		dc.w $A15B
		dc.w $100
		dc.b $40
		dc.b $10
		dc.b $13
		dc.b 0
ObjDat3_43F70:	dc.l Map_GumballBonus
		dc.w $A15B
		dc.w $100
		dc.b 4
		dc.b $10
		dc.b $12
		dc.b 0
ObjDat3_43F7C:	dc.l Map_GumballBonus
		dc.w $A15B
		dc.w $100
		dc.b $18
		dc.b $18
		dc.b 5
		dc.b 0
ObjDat3_43F88:	dc.l Map_GumballBonus
		dc.w $A15B
		dc.w $100
		dc.b $14
		dc.b $14
		dc.b 2
		dc.b 0
ObjDat3_43F94:	dc.l Map_Spring
		dc.w $4A4
		dc.w $100
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
ObjDat3_43FA0:	dc.l Map_GumballBonus
		dc.w $A15B
		dc.w $100
		dc.b 8
		dc.b 8
		dc.b $15
		dc.b 0
ObjDat3_43FAC:	dc.l Map_GumballBonus
		dc.w $815B
		dc.w $100
		dc.b 8
		dc.b 8
		dc.b 8
		dc.b 0
ObjDat3_43FB8:	dc.l Map_GumballBonus
		dc.w 0
		dc.w $180
		dc.b 4
		dc.b $10
		dc.b $17
		dc.b 0
ChildObjDat_43FC4:dc.w 6
		dc.l loc_43932
		dc.b 0
		dc.b 0
		dc.l loc_43A26
		dc.b 0
		dc.b $24
		dc.l loc_43C1E
		dc.b 0
		dc.b 0
		dc.l loc_43BD8
		dc.b $C8
		dc.b $D4
		dc.l loc_43BD8
		dc.b 0
		dc.b $D4
		dc.l loc_43BD8
		dc.b $38
		dc.b $D4
		dc.l loc_43BD8
		dc.b 0
		dc.b $D8
word_43FF0:	dc.w 3
		dc.l loc_43986
		dc.b $D0
		dc.b $E8
		dc.l loc_43986
		dc.b $F0
		dc.b $E8
		dc.l loc_43986
		dc.b $10
		dc.b $E8
		dc.l loc_43986
		dc.b $30
		dc.b $E8
ChildObjDat_4400A:dc.w $F
		dc.l loc_43BF8
ChildObjDat_44010:dc.w 0
		dc.l loc_43A94
ChildObjDat_44016:dc.w 0
		dc.l loc_43C84
byte_4401C:	dc.b 3
		dc.b 5
		dc.b 6
		dc.b 7
		dc.b $14
		dc.b 5
		dc.b $F4
		dc.b $7F
		dc.b 5
		dc.b 5
		dc.b $FC
byte_44027:	dc.b 2
		dc.b 3
		dc.b 3
		dc.b 3
		dc.b 4
		dc.b $F
		dc.b 3
		dc.b 3
		dc.b 2
		dc.b 3
		dc.b $F4
word_44032:	dc.w $7F08
		dc.w $8FC
word_44036:	dc.w $7F09
		dc.w $9FC
word_4403A:	dc.w $7F0A
		dc.w $AFC
word_4403E:	dc.w $7F0B
		dc.w $BFC
word_44042:	dc.w $7F0C
		dc.w $CFC
word_44046:	dc.w $7F0D
		dc.w $DFC
word_4404A:	dc.w $7F0E
		dc.w $EFC
word_4404E:	dc.w $7F0F
		dc.w $FFC
word_44052:	dc.w $110
		dc.w $11FC
Map_GumballBonus:
		include "Levels/Gumball/Misc Object Data/Map - Gumball Bonus.asm"
; ---------------------------------------------------------------------------

Obj_SSEntryRing:
		move.b	$2C(a0),d0
		move.l	(Collected_special_ring_array).w,d1
		btst	d0,d1
		beq.s	loc_44248
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_44248:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	SSEntryRing_Index(pc,d0.w),d1
		jsr	SSEntryRing_Index(pc,d1.w)
		bra.w	SSEntryRing_Display
; ---------------------------------------------------------------------------
SSEntryRing_Index:dc.w SSEntryRing_Init-SSEntryRing_Index
		dc.w SSEntryRing_Main-SSEntryRing_Index
		dc.w SSEntryRing_Animate-SSEntryRing_Index
; ---------------------------------------------------------------------------

SSEntryRing_Init:
		lea	ObjSlot_SSEntryRing(pc),a1
		jsr	(SetUp_ObjAttributesSlotted).l
		move.l	#AniRaw_SSEntryRing,$30(a0)

SSEntryRing_Main:
		jsr	(Animate_Raw).l
		tst.w	(Debug_placement_mode).w
		bne.s	locret_4429A
		cmpi.b	#8,$22(a0)
		bcs.s	locret_4429A
		lea	SSEntry_Range(pc),a1
		jsr	(Check_PlayerInRange).l
		tst.w	d0
		bne.s	loc_4429C

locret_4429A:
		rts
; ---------------------------------------------------------------------------

loc_4429C:
		lea	(Player_1).w,a1
		cmpi.b	#6,5(a1)
		bcc.s	locret_4429A
		cmpi.w	#7,(Emerald_count).w
		beq.s	loc_442FE
		move.b	#4,5(a0)
		move.b	#-1,(Player_prev_frame).w
		lea	(Player_1).w,a1
		move.b	#0,$22(a1)
		move.b	#$1C,$20(a1)
		move.b	#$53,$2E(a1)
		lea	ChildObjDat_44476(pc),a2
		jsr	(CreateChild6_Simple).l
		move.w	(Player_1+x_pos).w,d0
		cmp.w	$10(a0),d0
		bcs.s	locret_4429A
		bset	#0,4(a1)
		moveq	#signextendB(sfx_BigRing),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------
SSEntry_Range:	dc.w $FFE8
		dc.w $30
		dc.w $FFD8
		dc.w $50
; ---------------------------------------------------------------------------

loc_442FE:
		moveq	#signextendB(sfx_BigRing),d0
		jsr	(Play_Sound_2).l
		move.b	$2C(a0),d0
		move.l	(Collected_special_ring_array).w,d1
		bset	d0,d1
		move.l	d1,(Collected_special_ring_array).w
		bset	#0,$38(a0)
		moveq	#$32,d0
		jmp	(AddRings).l
; ---------------------------------------------------------------------------

SSEntryRing_Animate:
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

Obj_SSEntryFlash:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	SSEntryFlash_Index(pc,d0.w),d1
		jsr	SSEntryFlash_Index(pc,d1.w)
		lea	DPLCPtr_SSEntryFlash(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
SSEntryFlash_Index:dc.w	SSEntryFlash_Init-SSEntryFlash_Index
		dc.w SSEntryFlash_Main-SSEntryFlash_Index
; ---------------------------------------------------------------------------

SSEntryFlash_Init:
		move.l	#AniRaw_SSEntryFlash,$30(a0)
		move.l	#SSEntryFlash_Finished,$34(a0)
		movea.w	$46(a0),a1
		move.b	$2C(a1),$2C(a0)
		lea	ObjSlot_SSEntryFlash(pc),a1
		jmp	(SetUp_ObjAttributesSlotted).l
; ---------------------------------------------------------------------------

SSEntryFlash_Main:
		move.b	$22(a0),d6
		jsr	(Animate_RawAdjustFlipX).l
		cmp.b	$22(a0),d6
		beq.s	locret_44390
		cmpi.b	#3,$23(a0)
		bne.s	locret_44390
		movea.w	$46(a0),a1
		bset	#0,$38(a1)

locret_44390:
		rts
; ---------------------------------------------------------------------------

SSEntryFlash_Finished:
		move.l	#Obj_Wait,(a0)
		move.w	#$20,$2E(a0)
		move.l	#SSEntryFlash_GoSS,$34(a0)
		rts
; ---------------------------------------------------------------------------

SSEntryFlash_GoSS:
		cmpi.w	#7,(Emerald_count).w
		beq.s	loc_443E4
		moveq	#signextendB(sfx_EnterSS),d0
		jsr	(Play_Sound_2).l
		jsr	(Clear_SpriteRingMem).l
		jsr	(Save_Level_Data2).l
		move.b	#1,(Special_bonus_entry_flag).w
		move.b	#$34,(Game_mode).w
		move.b	#1,(Respawn_table_keep).w
		move.b	$2C(a0),d0
		move.l	(Collected_special_ring_array).w,d1
		bset	d0,d1
		move.l	d1,(Collected_special_ring_array).w

loc_443E4:
		jmp	(Go_Delete_SpriteSlotted2).l
; ---------------------------------------------------------------------------

SSEntryRing_Display:
		btst	#0,$38(a0)
		bne.s	loc_4443C
		tst.b	4(a0)
		bpl.s	loc_44408
		lea	DPLCPtr_SSEntryRing(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_44408:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_4443C
		move.w	$14(a0),d0
		move.w	(Camera_Y_pos).w,d1
		move.w	$14(a0),d0
		sub.w	(Camera_Y_pos).w,d0
		addi.w	#$80,d0
		cmpi.w	#$200,d0
		bhi.w	loc_4443C
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4443C:
		lea	(ArtKosM_BadnikExplosion).l,a1
		move.w	#-$4C00,d2
		jsr	(Queue_Kos_Module).l
		jmp	(Go_Delete_SpriteSlotted).l
; ---------------------------------------------------------------------------
ObjSlot_SSEntryRing:dc.w 0
		dc.w make_art_tile($5A0,1,0)
		dc.w $40
		dc.w 4
		dc.l Map_SSEntryRing
		dc.b 2
		dc.b $80
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
ObjSlot_SSEntryFlash:dc.w 0
		dc.w make_art_tile(ArtTile_Player_1,1,0)
		dc.w $18
		dc.w 6
		dc.l Map_SSEntryFlash
		dc.b 2
		dc.b 0
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
ChildObjDat_44476:dc.w 0
		dc.l Obj_SSEntryFlash
DPLCPtr_SSEntryRing:dc.l ArtUnc_SSEntryRing
		dc.l DPLC_SSEntryRing
DPLCPtr_SSEntryFlash:dc.l ArtUnc_SSEntryFlash
		dc.l DPLC_SSEntryFlash
AniRaw_SSEntryRing:dc.b	4
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b 6
		dc.b 7
		dc.b $F8
		dc.b $C
		dc.b 6
		dc.b $A
		dc.b 9
		dc.b 8
		dc.b $B
		dc.b $FC
AniRaw_SSEntryFlash:dc.b 0
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b $43
		dc.b 3
		dc.b 2
		dc.b 1
		dc.b 0
		dc.b $F4
		dc.b 0
Map_SSEntryRing:
		include "General/Sprites/SS Entry/Map - Entry Ring.asm"
DPLC_SSEntryRing:
		include "General/Sprites/SS Entry/DPLC - Special Stage Entry Ring.asm"
Map_SSEntryFlash:
		include "General/Sprites/SS Entry/Map - Entry Flash.asm"
DPLC_SSEntryFlash:
		include "General/Sprites/SS Entry/DPLC - Special Stage Entry Flash.asm"
; ---------------------------------------------------------------------------

Obj_CutsceneKnuckles:
		move.w	a0,(_unkFAA4).w
		moveq	#0,d0
		move.b	$2C(a0),d0
		movea.l	off_44704(pc,d0.w),a1
		move.l	a1,(a0)
		jmp	(a1)
; ---------------------------------------------------------------------------
off_44704:	dc.l CutsceneKnux_AIZ1
		dc.l CutsceneKnux_AIZ2
		dc.l CutsceneKnux_HCZ2
		dc.l CutsceneKnux_CNZ2A
		dc.l CutsceneKnux_CNZ2B
		dc.l CutsceneKnux_LBZ1
		dc.l CutsceneKnux_LBZ2
; ---------------------------------------------------------------------------

CutsceneKnux_AIZ1:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4473E(pc,d0.w),d1
		jsr	off_4473E(pc,d1.w)
		lea	DPLCPtr_4575E(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_4473E:	dc.w loc_4474C-off_4473E
		dc.w loc_44782-off_4473E
		dc.w loc_447B2-off_4473E
		dc.w loc_447F2-off_4473E
		dc.w loc_44824-off_4473E
		dc.w loc_4486E-off_4473E
		dc.w loc_4489E-off_4473E
; ---------------------------------------------------------------------------

loc_4474C:
		lea	ObjDat4_456DC(pc),a1
		jsr	(SetUp_ObjAttributesSlotted).l
		bclr	#7,$A(a0)
		move.b	#$13,$1E(a0)
		move.b	#8,$22(a0)
		move.w	#$1400,$10(a0)
		move.w	#$440,$14(a0)
		bsr.w	sub_456C6
		lea	ChildObjDat_45756(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_44782:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_44790
		rts
; ---------------------------------------------------------------------------

loc_44790:
		move.b	#4,5(a0)
		bset	#7,$2A(a0)
		move.w	#-$600,$1A(a0)
		move.w	#$80,$18(a0)
		lea	Pal_CutsceneKnux1(pc),a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------

loc_447B2:
		lea	word_4577B(pc),a1
		jsr	(Animate_RawNoSST).l
		jsr	(MoveSprite).l
		tst.l	d0
		bmi.s	locret_447D0
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bmi.s	loc_447D2

locret_447D0:
		rts
; ---------------------------------------------------------------------------

loc_447D2:
		move.b	#6,5(a0)
		add.w	d1,$14(a0)
		move.b	#$16,$22(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_447F8,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_447F2:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_447F8:
		move.b	#8,5(a0)
		bchg	#0,4(a0)
		move.l	#word_45775,$30(a0)
		move.w	#-$600,$18(a0)
		clr.w	$1A(a0)
		move.w	#$29,$2E(a0)
		move.l	#loc_44836,$34(a0)

loc_44824:
		jsr	(Animate_Raw).l
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_44836:
		neg.w	$18(a0)
		bchg	#0,4(a0)
		move.w	#$29,$2E(a0)
		move.l	#loc_44850,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_44850:
		move.b	#$A,5(a0)
		move.b	#$16,$22(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4487A,$34(a0)
		bra.w	loc_449E4
; ---------------------------------------------------------------------------

loc_4486E:
		jsr	(Animate_Raw).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4487A:
		move.b	#$C,5(a0)
		move.l	#word_45775,$30(a0)
		move.w	#$600,$18(a0)
		jsr	(Create_New_Sprite).l
		bne.s	locret_4489C
		move.l	#Obj_Song_Fade_ToLevelMusic,(a1)

locret_4489C:
		rts
; ---------------------------------------------------------------------------

loc_4489E:
		tst.b	4(a0)
		bpl.s	loc_448B0
		jsr	(Animate_Raw).l
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_448B0:
		clr.b	(Palette_cycle_counters+$00).w
		clr.b	(Ctrl_1_locked).w
		jsr	(AfterBoss_Cleanup).l
		jsr	(Remove_From_TrackingSlot).l
		jsr	(Create_New_Sprite).l
		bne.s	loc_448D2
		move.l	#Obj_TitleCard,(a1)

loc_448D2:
		move.b	#-$6F,(Level_started_flag).w
		move.b	#-$80,(Update_HUD_timer).w
		clr.l	(Timer).w
		move.b	#1,(Update_HUD_life_count).w
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_448EE:
		lea	ObjDat3_4571E(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_448FE,(a0)

loc_448FE:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_44910
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_44910:
		lea	(word_29AF0).l,a4
		addq.b	#1,$22(a0)
		move.l	#loc_29838,(a0)
		jmp	(sub_1F98C).l
; ---------------------------------------------------------------------------

CutsceneKnux_AIZ2:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_44944(pc,d0.w),d1
		jsr	off_44944(pc,d1.w)
		lea	DPLCPtr_4575E(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_44944:	dc.w loc_44950-off_44944
		dc.w loc_449A2-off_44944
		dc.w loc_449B0-off_44944
		dc.w loc_449FC-off_44944
		dc.w loc_44A38-off_44944
		dc.w loc_44A72-off_44944
; ---------------------------------------------------------------------------

loc_44950:
		lea	ObjDat4_456DC(pc),a1
		jsr	(SetUp_ObjAttributesSlotted).l
		move.w	#$4B8E,$10(a0)
		move.w	#$17D,$14(a0)
		bset	#0,4(a0)
		bsr.w	sub_456C6
		move.w	#$77,$2E(a0)
		move.l	#loc_449A8,$34(a0)
		lea	Pal_CutsceneKnux1(pc),a1
		jsr	(PalLoad_Line1).l
		lea	ChildObjDat_4572A(pc),a2
		jsr	(CreateChild6_Simple).l
		bne.s	locret_449A0
		move.w	#$4B08,$10(a1)
		move.w	#$178,$14(a1)

locret_449A0:
		rts
; ---------------------------------------------------------------------------

loc_449A2:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_449A8:
		move.b	#4,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_449B0:
		move.w	$10(a0),d0
		subq.w	#2,d0
		cmpi.w	#$4B3C,d0
		bcs.s	loc_449CA
		move.w	d0,$10(a0)
		lea	byte_4576B(pc),a1
		jmp	(Animate_RawNoSST).l
; ---------------------------------------------------------------------------

loc_449CA:
		move.b	#6,5(a0)
		bclr	#0,4(a0)
		move.w	#$5F,$2E(a0)
		move.l	#loc_44A08,$34(a0)

loc_449E4:
		move.l	#word_45785,$30(a0)
		clr.b	$24(a0)
		clr.b	$23(a0)
		move.b	#$1C,$22(a0)

locret_449FA:
		rts
; ---------------------------------------------------------------------------

loc_449FC:
		jsr	(Animate_Raw).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_44A08:
		move.b	#8,5(a0)

loc_44A0E:
		move.w	#-$100,$18(a0)
		move.w	#-$400,$1A(a0)

loc_44A1A:
		move.l	#word_4577B,$30(a0)
		clr.b	$24(a0)
		clr.b	$23(a0)
		move.b	#8,$22(a0)
		move.b	#$13,$1E(a0)
		rts
; ---------------------------------------------------------------------------

loc_44A38:
		jsr	(Animate_Raw).l
		jsr	(MoveSprite).l
		tst.w	$1A(a0)
		bmi.s	locret_44A64
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	locret_44A64
		bset	#2,$38(a0)
		bne.s	loc_44A66
		neg.w	$18(a0)
		neg.w	$1A(a0)

locret_44A64:
		rts
; ---------------------------------------------------------------------------

loc_44A66:
		addq.b	#2,5(a0)
		add.w	d1,$14(a0)
		bra.w	loc_449E4
; ---------------------------------------------------------------------------

loc_44A72:
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

loc_44A78:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_44A9E
		move.b	#8,7(a0)
		moveq	#$13,d1
		move.w	#$20,d2
		move.w	#$40,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull2).l
; ---------------------------------------------------------------------------

loc_44A9E:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

CutsceneKnux_HCZ2:
		lea	word_44ADA(pc),a1
		jsr	(Check_CameraInRange).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_44ACC(pc,d0.w),d1
		jsr	off_44ACC(pc,d1.w)
		lea	DPLCPtr_4575E(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Sprite_CheckDeleteTouchSlotted).l
; ---------------------------------------------------------------------------
off_44ACC:	dc.w loc_44AE2-off_44ACC
		dc.w loc_44B00-off_44ACC
		dc.w loc_449A2-off_44ACC
		dc.w loc_44B6C-off_44ACC
		dc.w loc_449A2-off_44ACC
		dc.w loc_44A38-off_44ACC
		dc.w loc_44BAE-off_44ACC
word_44ADA:	dc.w $540
		dc.w $600
		dc.w $3900
		dc.w $3940
; ---------------------------------------------------------------------------

loc_44AE2:
		lea	ObjDat4_456DC(pc),a1
		jsr	(SetUp_ObjAttributesSlotted).l
		move.w	(Camera_min_Y_pos).w,(Target_camera_min_Y_pos).w
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.w	#$3940,(Camera_max_X_pos).w
		rts
; ---------------------------------------------------------------------------

loc_44B00:
		lea	(Player_1).w,a1
		cmpi.w	#$3990,$10(a1)
		bcs.s	loc_44B1A
		tst.b	$2E(a1)
		bne.s	loc_44B1A
		btst	#3,$2A(a1)
		bne.s	loc_44B28

loc_44B1A:
		move.w	(Camera_Y_pos).w,(Camera_min_Y_pos).w
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		rts
; ---------------------------------------------------------------------------

loc_44B28:
		move.b	#4,5(a0)
		bsr.w	sub_456C6
		move.w	#$B3,$2E(a0)
		move.l	#loc_44B42,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_44B42:
		move.b	#6,5(a0)
		bset	#0,4(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_44B82,$34(a0)
		move.w	#$5C0,(Camera_min_Y_pos).w
		lea	Pal_CutsceneKnux1(pc),a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------

loc_44B6C:
		subq.w	#4,$10(a0)
		lea	(byte_4576B).l,a1
		jsr	(Animate_RawNoSST).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_44B82:
		move.b	#8,5(a0)
		move.b	#$20,$22(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_44B9E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_44B9E:
		move.b	#$A,5(a0)
		bchg	#0,4(a0)
		bra.w	loc_44A0E
; ---------------------------------------------------------------------------

loc_44BAE:
		jsr	(Animate_Raw).l
		tst.b	4(a0)
		bmi.w	locret_449FA
		lea	(Pal_HCZ2).l,a1
		jsr	(PalLoad_Line1).l
		lea	ChildObjDat_44BEC(pc),a2
		jsr	(CreateChild1_Normal).l
		jsr	(Create_New_Sprite).l
		bne.s	loc_44BE0
		move.l	#Obj_Song_Fade_ToLevelMusic,(a1)

loc_44BE0:
		jsr	(Remove_From_TrackingSlot).l
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------
ChildObjDat_44BEC:dc.w 1
		dc.l Obj_DecLevStartYGradual
		dc.b 0
		dc.b 0
		dc.l Obj_IncLevEndXGradual
		dc.b 0
		dc.b 0
; ---------------------------------------------------------------------------

CutsceneKnux_CNZ2A:
		lea	word_44C2E(pc),a1
		jsr	(Check_CameraInRange).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_44C22(pc,d0.w),d1
		jsr	off_44C22(pc,d1.w)
		lea	DPLCPtr_4575E(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_44C22:	dc.w loc_44C36-off_44C22
		dc.w loc_44CA2-off_44C22
		dc.w loc_44CC4-off_44C22
		dc.w loc_44CEC-off_44C22
		dc.w loc_44CC4-off_44C22
		dc.w loc_44D6E-off_44C22
word_44C2E:	dc.w $176
		dc.w $300
		dc.w $1B00
		dc.w $1D00
; ---------------------------------------------------------------------------

loc_44C36:
		lea	ObjDat4_456DC(pc),a1
		jsr	(SetUp_ObjAttributesSlotted).l
		move.l	#word_4578B,$30(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.w	#$78,$2E(a0)
		move.b	#mus_Knuckles,$26(a0)
		move.w	(Camera_min_Y_pos).w,(Target_camera_min_Y_pos).w
		move.w	(Camera_target_max_Y_pos).w,(Target_camera_max_Y_pos).w
		move.w	(Camera_min_X_pos).w,(Target_camera_min_X_pos).w
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.w	#$280,(Camera_target_max_Y_pos).w
		move.w	#$1D00,$1C(a0)
		move.w	#$1D00,(Camera_max_X_pos).w
		move.l	#loc_44CAE,$34(a0)
		lea	Pal_CutsceneKnux1(pc),a1
		jsr	(PalLoad_Line1).l
		lea	ChildObjDat_45730(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_44CA2:
		jsr	(Animate_Raw).l
		jmp	(loc_541C8).l
; ---------------------------------------------------------------------------

loc_44CAE:
		move.b	#4,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_44CD0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_44CC4:
		jsr	(Animate_Raw).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_44CD0:
		move.b	#6,5(a0)
		bset	#0,4(a0)
		move.w	#-$600,$1A(a0)
		move.w	#$140,$18(a0)
		bra.w	loc_44A1A
; ---------------------------------------------------------------------------

loc_44CEC:
		jsr	(Animate_Raw).l
		jsr	(MoveSprite).l
		tst.w	$1A(a0)
		bmi.s	locret_44D26
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	locret_44D26
		moveq	#0,d0
		move.b	$39(a0),d0
		cmpi.b	#8,d0
		bcc.s	loc_44D28
		move.l	word_44D4A(pc,d0.w),$18(a0)
		addq.b	#4,d0
		move.b	d0,$39(a0)
		bchg	#0,4(a0)

locret_44D26:
		rts
; ---------------------------------------------------------------------------

loc_44D28:
		move.b	#8,5(a0)
		bclr	#0,4(a0)
		add.w	d1,$14(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_44D52,$34(a0)
		bra.w	loc_449E4
; ---------------------------------------------------------------------------
word_44D4A:	dc.w  $FF00, $FC00
		dc.w   $100, $FC00
; ---------------------------------------------------------------------------

loc_44D52:
		move.b	#$A,5(a0)
		bset	#0,4(a0)
		move.w	#-$600,$1A(a0)
		move.w	#$400,$18(a0)
		bra.w	loc_44A1A
; ---------------------------------------------------------------------------

loc_44D6E:
		jsr	(Animate_Raw).l
		jsr	(MoveSprite).l
		tst.b	4(a0)
		bmi.w	locret_449FA
		lea	(Pal_CNZ).l,a1
		jsr	(PalLoad_Line1).l
		lea	(PLC_Monitors).l,a1
		jsr	(Load_PLC_Raw).l
		lea	ChildObjDat_44DC4(pc),a2
		jsr	(CreateChild1_Normal).l
		move.w	(Target_camera_max_Y_pos).w,(Camera_target_max_Y_pos).w
		jsr	(Create_New_Sprite).l
		bne.s	loc_44DB8
		move.l	#Obj_Song_Fade_ToLevelMusic,(a1)

loc_44DB8:
		jsr	(Remove_From_TrackingSlot).l
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------
ChildObjDat_44DC4:dc.w 2
		dc.l Obj_DecLevStartYGradual
		dc.w 0
		dc.l Obj_DecLevStartXGradual
		dc.w 0
		dc.l Obj_IncLevEndXGradual
		dc.w 0
; ---------------------------------------------------------------------------

loc_44DD8:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_44DFE
		move.b	#8,7(a0)
		moveq	#$13,d1
		move.w	#$100,d2
		move.w	#$200,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull2).l
; ---------------------------------------------------------------------------

loc_44DFE:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_44E04:
		subq.w	#1,$2E(a0)
		bpl.s	locret_44E3E
		moveq	#0,d0
		move.b	$39(a0),d0
		cmpi.b	#6,d0
		bcc.s	loc_44E40
		addq.b	#1,$39(a0)
		add.w	d0,d0
		move.w	word_44E54(pc,d0.w),$2E(a0)
		moveq	#0,d1
		btst	#1,d0
		beq.s	loc_44E2C
		moveq	#$40,d1

loc_44E2C:
		lea	Pal_CNZFlash(pc),a1
		adda.w	d1,a1

; =============== S U B R O U T I N E =======================================


sub_44E32:
		lea	(Normal_palette_line_3).w,a2
		moveq	#$F,d0

loc_44E38:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_44E38

locret_44E3E:
		rts
; End of function sub_44E32

; ---------------------------------------------------------------------------

loc_44E40:
		tst.b	$2C(a0)
		beq.s	loc_44E4E
		lea	(Pal_CNZ+$20).l,a1
		bsr.s	sub_44E32

loc_44E4E:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
word_44E54:	dc.w 8
		dc.w 4
		dc.w 3
		dc.w 2
		dc.w 4
		dc.w 8
		dc.w 8
; ---------------------------------------------------------------------------

CutsceneKnux_CNZ2B:
		lea	word_44E9A(pc),a1
		jsr	(Check_CameraInRange).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_44E8A(pc,d0.w),d1
		jsr	off_44E8A(pc,d1.w)
		lea	DPLCPtr_4575E(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Sprite_CheckDeleteTouchSlotted).l
; ---------------------------------------------------------------------------
off_44E8A:	dc.w loc_44EA2-off_44E8A
		dc.w loc_44EC8-off_44E8A
		dc.w loc_44EE6-off_44E8A
		dc.w loc_449A2-off_44E8A
		dc.w loc_44A38-off_44E8A
		dc.w loc_44F38-off_44E8A
		dc.w loc_44F5C-off_44E8A
		dc.w loc_44F94-off_44E8A
word_44E9A:	dc.w $720
		dc.w $A00
		dc.w $45C0
		dc.w $46E0
; ---------------------------------------------------------------------------

loc_44EA2:
		lea	ObjDat4_456DC(pc),a1
		jsr	(SetUp_ObjAttributesSlotted).l
		clr.w	(Ctrl_1_logical).w
		st	(Ctrl_1_locked).w
		move.b	#-$80,(Player_1+object_control).w
		bsr.w	sub_456C6
		lea	Pal_CutsceneKnux1(pc),a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------

loc_44EC8:
		lea	(Player_1).w,a1
		cmpi.w	#$4728,$10(a1)
		bcs.s	locret_44EDC
		btst	#1,$2A(a1)
		bne.s	loc_44EDE

locret_44EDC:
		rts
; ---------------------------------------------------------------------------

loc_44EDE:
		move.b	#4,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_44EE6:
		move.w	#$808,(Ctrl_1_logical).w
		cmpi.w	#$4760,(Player_1+x_pos).w
		bcc.s	loc_44EF6
		rts
; ---------------------------------------------------------------------------

loc_44EF6:
		move.b	#6,5(a0)
		clr.w	(Ctrl_1_logical).w
		lea	(Player_1).w,a1
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		move.w	#$1F,$2E(a0)
		move.l	#loc_44F20,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_44F20:
		move.b	#8,5(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_44F44,$34(a0)
		bra.w	loc_44A0E
; ---------------------------------------------------------------------------

loc_44F38:
		jsr	(Animate_Raw).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_44F44:
		move.b	#$C,5(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		move.l	#byte_4576B,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_44F5C:
		addq.w	#4,$10(a0)
		jsr	(Animate_Raw).l
		tst.b	4(a0)
		bmi.w	locret_449FA
		move.b	#$E,5(a0)
		clr.b	(Player_1+object_control).w
		lea	(Pal_CNZ).l,a1
		jsr	(PalLoad_Line1).l
		jsr	(Create_New_Sprite).l
		bne.s	locret_44F92
		move.l	#Obj_Song_Fade_ToLevelMusic,(a1)

locret_44F92:
		rts
; ---------------------------------------------------------------------------

loc_44F94:
		move.w	#$404,(Ctrl_1_logical).w
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$160,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_44FAA
		rts
; ---------------------------------------------------------------------------

loc_44FAA:
		clr.b	(Ctrl_1_locked).w
		jsr	(Remove_From_TrackingSlot).l
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

CutsceneKnux_LBZ1:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_44FD8(pc,d0.w),d1
		jsr	off_44FD8(pc,d1.w)
		lea	DPLCPtr_4575E(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Sprite_CheckDeleteTouchSlotted).l
; ---------------------------------------------------------------------------
off_44FD8:	dc.w loc_44FE8-off_44FD8
		dc.w loc_45022-off_44FD8
		dc.w loc_449A2-off_44FD8
		dc.w loc_4505E-off_44FD8
		dc.w loc_449A2-off_44FD8
		dc.w loc_44CC4-off_44FD8
		dc.w loc_44CC4-off_44FD8
		dc.w loc_450E8-off_44FD8
; ---------------------------------------------------------------------------

loc_44FE8:
		move.w	(Player_1+x_pos).w,d0
		cmp.w	$10(a0),d0
		bcc.s	loc_4501C
		lea	ObjDat4_456DC(pc),a1
		jsr	(SetUp_ObjAttributesSlotted).l
		move.b	#$16,$22(a0)
		move.w	#$A0,(Camera_min_Y_pos).w
		lea	Pal_CutsceneKnux1(pc),a1
		jsr	(PalLoad_Line1).l
		lea	ChildObjDat_45738(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4501C:
		jmp	(Go_Delete_SpriteSlotted2).l
; ---------------------------------------------------------------------------

loc_45022:
		btst	#3,$38(a0)
		bne.s	loc_4502C
		rts
; ---------------------------------------------------------------------------

loc_4502C:
		move.b	#4,5(a0)
		bsr.w	sub_456C6
		move.w	#$3B,$2E(a0)
		move.l	#loc_45046,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_45046:
		move.b	#6,5(a0)
		move.l	#byte_4578F,$30(a0)
		move.l	#loc_45064,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4505E:
		jmp	(Animate_RawMultiDelay).l
; ---------------------------------------------------------------------------

loc_45064:
		move.b	#8,5(a0)
		move.w	#$F,$2E(a0)
		move.l	#loc_45096,$34(a0)
		moveq	#signextendB(sfx_MissileThrow),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_45740(pc),a2
		jsr	(CreateChild1_Normal).l
		lea	(PLC_BossExplosion).l,a1
		jmp	(Load_PLC_Raw).l
; ---------------------------------------------------------------------------

loc_45096:
		move.b	#$A,5(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_450AE,$34(a0)
		bra.w	loc_449E4
; ---------------------------------------------------------------------------

loc_450AE:
		move.b	#$C,5(a0)
		st	(Screen_shake_flag).w
		move.w	#$5F,$2E(a0)
		move.l	#loc_450D0,$34(a0)
		lea	ChildObjDat_45748(pc),a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_450D0:
		move.b	#$E,5(a0)
		move.l	#byte_4576B,$30(a0)
		clr.b	$24(a0)
		clr.b	$23(a0)
		rts
; ---------------------------------------------------------------------------

loc_450E8:
		tst.b	4(a0)
		bpl.w	loc_450FA
		addq.w	#2,$10(a0)
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

loc_450FA:
		clr.b	(_unkFAA9).w
		clr.b	(Player_1+object_control).w
		clr.b	(Player_2+object_control).w
		move.w	#$3B60,(Target_camera_max_X_pos).w
		lea	(Child6_IncLevX).l,a2
		jsr	(CreateChild6_Simple).l
		move.w	#$148,(Camera_target_max_Y_pos).w
		jsr	(Remove_From_TrackingSlot).l
		lea	(Pal_LBZ1).l,a1
		jsr	(PalLoad_Line1).l
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_45136:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4516E
		lea	word_45196(pc),a1
		jsr	(Check_PlayerInRange).l
		tst.l	d0
		beq.s	locret_4516C
		tst.w	d0
		beq.s	loc_45162
		movea.w	$46(a0),a2
		bset	#3,$38(a2)
		bsr.w	sub_45174

loc_45162:
		swap	d0
		tst.w	d0
		beq.s	locret_4516C
		bsr.w	sub_45174

locret_4516C:
		rts
; ---------------------------------------------------------------------------

loc_4516E:
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_45174:
		st	(_unkFAA9).w
		movea.w	d0,a1
		cmpi.b	#6,5(a1)
		bcc.s	locret_4516C
		move.b	#-$7F,$2E(a1)
		bclr	#0,4(a1)
		bclr	#0,$2A(a1)
		rts
; End of function sub_45174

; ---------------------------------------------------------------------------
word_45196:	dc.w  $FFC0,   $80, $FFD0,   $60
; ---------------------------------------------------------------------------

loc_4519E:
		lea	ObjDat3_456FA(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_451C2,(a0)
		move.w	#-$200,$18(a0)
		move.w	#-$400,$1A(a0)
		moveq	#signextendB(sfx_MissileThrow),d0
		jsr	(Play_Sound_2).l

loc_451C2:
		jsr	(MoveSprite_LightGravity).l
		jmp	(Sprite_CheckDeleteXY).l
; ---------------------------------------------------------------------------

loc_451CE:
		move.l	#loc_4520C,(a0)
		move.l	#Obj_NormalExpControl,$34(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		lea	word_451FC(pc,d0.w),a1
		move.w	(a1)+,$10(a0)
		move.w	(a1)+,$14(a0)
		move.b	#$A,$2C(a0)
		jmp	(loc_528BA).l
; ---------------------------------------------------------------------------
word_451FC:	dc.w  $3BC0,  $1A0
		dc.w  $3B80,  $1A0
		dc.w  $3B40,  $1A0
		dc.w  $3B00,  $1A0
; ---------------------------------------------------------------------------

loc_4520C:
		subq.w	#4,$14(a0)
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

CutsceneKnux_LBZ2:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_45234(pc,d0.w),d1
		jsr	off_45234(pc,d1.w)
		lea	DPLCPtr_4575E(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Sprite_CheckDeleteTouchSlotted).l
; ---------------------------------------------------------------------------
off_45234:	dc.w loc_45242-off_45234
		dc.w loc_45270-off_45234
		dc.w loc_4528A-off_45234
		dc.w loc_452A4-off_45234
		dc.w loc_452C6-off_45234
		dc.w loc_4530A-off_45234
		dc.w loc_45322-off_45234
; ---------------------------------------------------------------------------

loc_45242:
		lea	ObjDat4_456DC(pc),a1
		jsr	(SetUp_ObjAttributesSlotted).l
		bset	#0,4(a0)
		move.b	#$20,$22(a0)
		bsr.w	sub_456C6
		lea	Pal_CutsceneKnux1(pc),a1
		jsr	(PalLoad_Line1).l
		lea	ChildObjDat_4574E(pc),a2
		jmp	(CreateChild3_NormalRepeated).l
; ---------------------------------------------------------------------------

loc_45270:
		btst	#1,$38(a0)
		bne.s	loc_4527A
		rts
; ---------------------------------------------------------------------------

loc_4527A:
		move.b	#4,5(a0)
		move.l	#loc_45294,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4528A:
		lea	byte_4579E(pc),a1
		jmp	(Animate_RawNoSSTMultiDelay).l
; ---------------------------------------------------------------------------

loc_45294:
		move.b	#6,5(a0)
		bclr	#0,4(a0)
		bra.w	loc_449E4
; ---------------------------------------------------------------------------

loc_452A4:
		tst.b	(Screen_shake_flag).w
		beq.s	loc_452C0
		move.b	#8,5(a0)
		move.l	#byte_45766,$30(a0)
		clr.b	$24(a0)
		clr.b	$23(a0)

loc_452C0:
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

loc_452C6:
		btst	#3,$38(a0)
		bne.s	loc_452DC
		move.w	(Events_bg+$14).w,d0
		add.w	d0,$14(a0)
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

loc_452DC:
		move.b	#$A,5(a0)
		bset	#0,4(a0)
		move.b	#9,$22(a0)
		move.w	#$200,$18(a0)
		move.w	#-$100,$1A(a0)
		jsr	(Create_New_Sprite).l
		bne.s	locret_45308
		move.l	#Obj_Song_Fade_ToLevelMusic,(a1)

locret_45308:
		rts
; ---------------------------------------------------------------------------

loc_4530A:
		move.w	$14(a0),d0
		cmp.w	(Water_level).w,d0
		bcs.s	loc_45322
		moveq	#signextendB(sfx_Splash),d0
		jsr	(Play_Sound_2).l
		move.b	#$C,5(a0)

loc_45322:
		move.w	(Events_bg+$14).w,d0
		add.w	d0,$14(a0)
		jmp	(MoveSprite_LightGravity).l
; ---------------------------------------------------------------------------

loc_45330:
		lea	ObjDat3_45706(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_4536C,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		move.l	dword_4535C(pc,d0.w),$3E(a0)
		lsl.w	#3,d0
		add.w	d0,$14(a0)
		move.w	$10(a0),$3A(a0)
		rts
; ---------------------------------------------------------------------------
dword_4535C:	dc.l $1000010
		dc.l $C0000C
		dc.l $800008
		dc.l $400004
; ---------------------------------------------------------------------------

loc_4536C:
		tst.b	(Screen_shake_flag).w
		beq.s	loc_45384
		move.l	#loc_4538A,(a0)
		move.w	$3E(a0),$18(a0)
		move.b	#6,$39(a0)

loc_45384:
		jmp	(Sprite_CheckDeleteXY).l
; ---------------------------------------------------------------------------

loc_4538A:
		move.w	(Events_bg+$14).w,d0
		add.w	d0,$14(a0)
		move.w	$10(a0),d0
		move.w	$40(a0),d1
		cmp.w	$3A(a0),d0
		scs	d2
		bcs.s	loc_453A4
		neg.w	d1

loc_453A4:
		add.w	d1,$18(a0)
		cmp.b	$3C(a0),d2
		beq.s	loc_453E4
		move.b	d2,$3C(a0)
		cmpi.b	#3,$39(a0)
		bne.s	loc_453CE
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		move.l	dword_45400(pc,d0.w),$3E(a0)
		move.w	$3E(a0),$18(a0)

loc_453CE:
		subq.b	#1,$39(a0)
		bne.s	loc_453E4
		move.l	#loc_45410,(a0)
		movea.w	$46(a0),a1
		bset	#3,$38(a1)

loc_453E4:
		jsr	(MoveSprite2).l
		tst.b	$2C(a0)
		bne.s	loc_453FA
		movea.w	$46(a0),a1
		move.w	$10(a0),$10(a1)

loc_453FA:
		jmp	(Sprite_CheckDeleteXY).l
; ---------------------------------------------------------------------------
dword_45400:	dc.l $2000020
		dc.l $1800018
		dc.l $1000010
		dc.l $800008
; ---------------------------------------------------------------------------

loc_45410:
		move.w	(Events_bg+$14).w,d0
		add.w	d0,$14(a0)
		jsr	(MoveSprite_LightGravity).l
		jmp	(Sprite_CheckDeleteXY).l
; ---------------------------------------------------------------------------

Obj_C8_1:
		lea	ObjDat3_45712(pc),a1
		jsr	(SetUp_ObjAttributes).l
		bclr	#1,4(a0)
		beq.s	loc_4543C
		bset	#7,$A(a0)

loc_4543C:
		bclr	#0,4(a0)
		beq.s	loc_4544A
		move.w	#0,8(a0)

loc_4544A:
		move.l	#loc_45450,(a0)

loc_45450:
		move.w	(Events_bg+$14).w,d0
		add.w	d0,$14(a0)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
Map_LBZKnuxPillar:
		include "Levels/LBZ/Misc Object Data/Map - Knuckles Pillar.asm"
; ---------------------------------------------------------------------------

Obj_83:
		lea	ObjDat3_456EE(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_454C2,(a0)
		addq.w	#4,$14(a0)
		lea	PLC_454BA(pc),a1
		jmp	(Load_PLC_Raw).l
; ---------------------------------------------------------------------------
PLC_454BA:	dc.w 0
		dc.l ArtNem_GrayButton
		dc.w $8AC0
; ---------------------------------------------------------------------------

loc_454C2:
		move.w	(_unkFAA4).w,d0
		beq.s	loc_45518
		movea.w	d0,a1
		lea	word_4551E(pc),a2
		move.w	$10(a0),d0
		move.w	$10(a1),d1
		add.w	(a2)+,d0
		cmp.w	d0,d1
		bcs.s	loc_45518
		add.w	(a2)+,d0
		cmp.w	d0,d1
		bcc.s	loc_45518
		move.w	$14(a0),d0
		move.w	$14(a1),d1
		add.w	(a2)+,d0
		cmp.w	d0,d1
		bcs.s	loc_45518
		add.w	(a2)+,d0
		cmp.w	d0,d1
		bcc.s	loc_45518
		move.l	#loc_4552E,(a0)
		move.b	#1,$22(a0)
		st	(_unkFAA9).w
		clr.w	$48(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	off_45526(pc,d0.w),d0
		jsr	off_45526(pc,d0.w)

loc_45518:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
word_4551E:	dc.w  $FFE8,   $30, $FFE8,   $30
off_45526:	dc.w loc_45534-off_45526
		dc.w loc_45550-off_45526
		dc.w loc_45556-off_45526
		dc.w loc_4558A-off_45526
; ---------------------------------------------------------------------------

loc_4552E:
		jmp	(Sprite_CheckDelete).l
; ---------------------------------------------------------------------------

loc_45534:
		clr.b	(Ctrl_1_locked).w
		move.w	#$1000,d0
		move.w	d0,(Target_camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w
		lea	(Child6_IncLevY).l,a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_45550:
		st	(Level_trigger_array+8).w
		rts
; ---------------------------------------------------------------------------

loc_45556:
		move.w	#$14,(Screen_shake_flag).w
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$100,d0
		move.w	d0,(Mean_water_level).w
		move.w	#$350,(Target_water_level).w
		st	(_unkFAA3).w
		moveq	#signextendB(sfx_Geyser),d0
		jsr	(Play_Sound_2).l
		jsr	(Create_New_Sprite).l
		bne.s	locret_45588
		move.l	#loc_44E04,(a1)

locret_45588:
		rts
; ---------------------------------------------------------------------------

loc_4558A:
		move.w	#$14,(Screen_shake_flag).w
		movea.w	(Level_layout_main+$40).w,a1
		lea	$8E(a1),a1
		move.w	(Level_layout_header).w,d0
		move.b	#$14,(a1)
		adda.w	d0,a1
		move.b	#$F,(a1)
		adda.w	d0,a1
		move.b	#$F,(a1)
		adda.w	d0,a1
		move.b	#-$78,(a1)
		jsr	(Create_New_Sprite).l
		bne.s	loc_455D2
		move.l	#Obj_48_1,(a1)
		move.w	#$4740,$10(a1)
		move.w	#$828,$14(a1)
		move.b	#$4C,$2C(a1)

loc_455D2:
		jsr	(Create_New_Sprite).l
		bne.s	locret_455F2
		move.l	#Obj_48_1,(a1)
		move.w	#$4740,$10(a1)
		move.w	#$A28,$14(a1)
		move.b	#$20,$2C(a1)

locret_455F2:
		rts
; ---------------------------------------------------------------------------

Obj_88:
		jsr	(Obj_WaitOffscreen).l
		move.l	#loc_45624,(a0)
		jsr	(Create_New_Sprite3).l
		bne.s	loc_45624
		move.l	#Obj_CorkFloor,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	#1,$2C(a1)
		move.w	a1,$44(a0)

loc_45624:
		movea.w	$44(a0),a1
		cmpi.l	#loc_29838,(a1)
		beq.s	loc_45636
		jmp	(Delete_Sprite_If_Not_In_Range).l
; ---------------------------------------------------------------------------

loc_45636:
		tst.b	(_unkFAA2).w
		bne.s	loc_45646
		st	(_unkFAA2).w
		move.w	#$958,(Target_water_level).w

loc_45646:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_89:
		lea	ObjDat3_456EE(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_4566A,(a0)
		addq.w	#4,$14(a0)
		lea	PLC_454BA(pc),a1
		jmp	(Load_PLC_Raw).l
; ---------------------------------------------------------------------------

loc_4566A:
		move.w	#$1B,d1
		move.w	#4,d2
		move.w	#5,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		move.b	#0,$22(a0)
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_456C0
		move.b	#1,$22(a0)
		tst.b	(_unkFAA3).w
		beq.s	loc_456C0
		clr.b	(_unkFAA3).w
		move.w	#$A58,(Target_water_level).w
		moveq	#signextendB(sfx_Geyser),d0
		jsr	(Play_Sound_2).l
		jsr	(Create_New_Sprite).l
		bne.s	loc_456C0
		move.l	#loc_44E04,(a1)
		st	$2C(a1)

loc_456C0:
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_456C6:
		jsr	(Create_New_Sprite).l
		bne.s	locret_456DA
		move.l	#Obj_Song_Fade_Transition,(a1)
		move.b	#mus_Knuckles,$2C(a1)

locret_456DA:
		rts
; End of function sub_456C6

; ---------------------------------------------------------------------------
ObjDat4_456DC:	dc.w 0
		dc.w make_art_tile(ArtTile_CutsceneKnux,1,1)
		dc.w $2E
		dc.w 0
		dc.l Map_CutsceneKnux
		dc.w $180
		dc.b $1C
		dc.b $18
		dc.b $16
		dc.b 0
ObjDat3_456EE:	dc.l Map_Button
		dc.w $8456
		dc.w $100
		dc.b $10
		dc.b 8
		dc.b 0
		dc.b 0
ObjDat3_456FA:	dc.l Map_LBZKnuxBomb
		dc.w $A4D6
		dc.w $80
		dc.b 8
		dc.b 8
		dc.b 0
		dc.b 0
ObjDat3_45706:	dc.l Map_LBZKnuxPillar
		dc.w $45A0
		dc.w $280
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
ObjDat3_45712:	dc.l Map_LBZKnuxPillar
		dc.w $45A0
		dc.w $280
		dc.b $10
		dc.b $80
		dc.b 1
		dc.b 0
ObjDat3_4571E:	dc.l Map_AIZCorkFloor
		dc.w $4001
		dc.w $180
		dc.b $10
		dc.b $18
		dc.b 0
		dc.b 0
ChildObjDat_4572A:dc.w 0
		dc.l loc_44A78
ChildObjDat_45730:dc.w 0
		dc.l loc_44DD8
		dc.w $E094
ChildObjDat_45738:dc.w 0
		dc.l loc_45136
		dc.w $C000
ChildObjDat_45740:dc.w 0
		dc.l loc_4519E
		dc.w $F8F0
ChildObjDat_45748:dc.w 3
		dc.l loc_451CE
ChildObjDat_4574E:dc.w 3
		dc.l loc_45330
		dc.b 2
		dc.b $24
ChildObjDat_45756:dc.w 0
		dc.l loc_448EE
		dc.w $18
DPLCPtr_4575E:	dc.l ArtUnc_CutsceneKnux
		dc.l DPLC_CutsceneKnux
byte_45766:	dc.b 7
		dc.b 1
		dc.b 2
		dc.b 3
		dc.b $FC
byte_4576B:	dc.b 5
		dc.b $A
		dc.b $B
		dc.b $C
		dc.b $D
		dc.b $E
		dc.b $F
		dc.b $10
		dc.b $11
		dc.b $FC
word_45775:	dc.w $112
		dc.w $1314
		dc.w $15FC
word_4577B:	dc.w $108
		dc.w $408
		dc.w $508
		dc.w $608
		dc.w $7FC
word_45785:	dc.w $71C
		dc.w $1C1D
		dc.w $F806
word_4578B:	dc.w $71E
		dc.w $1FFC
byte_4578F:	dc.b  $16,   7
		dc.b  $16,   7
		dc.b  $17,   7
		dc.b  $18,   7
		dc.b  $19, $13
		dc.b  $1A,   7
		dc.b  $1B,   0
		dc.b  $F4
byte_4579E:	dc.b  $20,   5
		dc.b  $21,   5
		dc.b  $22, $14
		dc.b  $23,   3
		dc.b  $24,  $F
		dc.b  $21,   5
		dc.b  $20,   5
		dc.b  $F4,   0
Pal_CutsceneKnux1:
		binclude "General/Sprites/Knuckles/Cutscene/Pal.bin"
		even
Pal_CNZFlash:	binclude "Levels/CNZ/Palettes/Flash.bin"
		even
; ---------------------------------------------------------------------------

Obj_AIZPlaneIntro:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4586C(pc,d0.w),d1
		jsr	off_4586C(pc,d1.w)
		jsr	(Sonic_Load_PLC).l
		bsr.w	sub_45DE4
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_4586C:	dc.w loc_45888-off_4586C
		dc.w loc_458F0-off_4586C
		dc.w loc_45912-off_4586C
		dc.w loc_4593C-off_4586C
		dc.w loc_45970-off_4586C
		dc.w loc_4599C-off_4586C
		dc.w loc_459F0-off_4586C
		dc.w loc_45A00-off_4586C
		dc.w loc_45A2A-off_4586C
		dc.w loc_45A50-off_4586C
		dc.w loc_45A88-off_4586C
		dc.w loc_45AA2-off_4586C
		dc.w loc_45AC4-off_4586C
		dc.w loc_45AE0-off_4586C
; ---------------------------------------------------------------------------

loc_45888:
		addq.b	#2,5(a0)
		move.l	#Map_Sonic,$C(a0)
		move.w	#ArtTile_Player_1,$A(a0)
		move.w	#$280,8(a0)
		move.b	#-$46,$22(a0)
		move.b	#$40,7(a0)
		move.b	#$20,6(a0)
		move.w	#$60,$10(a0)
		move.w	#$30,$14(a0)
		move.w	#$40,$2E(a0)
		move.l	#loc_458F6,$34(a0)
		move.w	#8,$40(a0)
		move.w	#-$16E8,(Events_fg_1).w
		move.b	#-1,(Player_prev_frame).w
		lea	(Player_1).w,a1
		move.b	#0,$22(a1)
		move.b	#$53,$2E(a1)

locret_458EE:
		rts
; ---------------------------------------------------------------------------

loc_458F0:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_458F6:
		move.b	#4,5(a0)
		move.w	#$300,$18(a0)
		move.w	#$600,$1A(a0)
		lea	ChildObjDat_45E36(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_45912:
		subi.w	#$18,$1A(a0)
		beq.s	loc_45920
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_45920:
		move.b	#6,5(a0)
		clr.w	$18(a0)
		move.w	#$5F,$2E(a0)
		move.l	#loc_4594E,$34(a0)
		jmp	Swing_Setup1(pc)
; ---------------------------------------------------------------------------

loc_4593C:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4594E:
		move.b	#8,5(a0)
		move.w	#$400,$18(a0)
		move.w	#-$400,$1A(a0)
		move.l	#byte_45E60,$30(a0)
		bset	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_45970:
		subi.w	#$40,$18(a0)
		jsr	(MoveSprite).l
		cmpi.w	#$130,$14(a0)
		bcc.s	loc_4598A
		jmp	(loc_45DFC).l
; ---------------------------------------------------------------------------

loc_4598A:
		move.b	#$A,5(a0)
		move.w	#$130,$14(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_4599C:
		subi.w	#$40,$18(a0)
		jsr	(MoveSprite2).l
		cmpi.w	#$40,$10(a0)
		bcs.s	loc_459B2
		rts
; ---------------------------------------------------------------------------

loc_459B2:
		move.b	#$C,5(a0)
		move.w	#$40,$10(a0)
		move.w	#5,$2E(a0)
		move.l	#loc_459D6,$34(a0)
		move.w	#$3F,$3A(a0)
		bra.w	loc_45D72
; ---------------------------------------------------------------------------

loc_459D6:
		move.w	#5,$2E(a0)
		cmpi.w	#$80,$10(a0)
		bcs.w	locret_458EE
		lea	ChildObjDat_45E4C(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_459F0:
		subq.w	#1,$3A(a0)
		bpl.w	locret_458EE
		move.b	#$E,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_45A00:
		bsr.w	sub_45D94
		jsr	(Obj_Wait).l
		move.w	$10(a0),d0
		addq.w	#4,d0
		move.w	d0,$10(a0)
		cmpi.w	#$200,d0
		bcc.s	loc_45A1C
		rts
; ---------------------------------------------------------------------------

loc_45A1C:
		move.b	#$10,5(a0)
		move.w	#$1F,$3A(a0)
		rts
; ---------------------------------------------------------------------------

loc_45A2A:
		bsr.w	sub_45D94
		jsr	(Obj_Wait).l
		subq.w	#1,$3A(a0)
		bpl.w	locret_458EE
		move.b	#$12,5(a0)
		bset	#2,$38(a0)
		move.w	#$C,$40(a0)
		rts
; ---------------------------------------------------------------------------

loc_45A50:
		bsr.w	sub_45D94
		jsr	(Obj_Wait).l
		move.w	$10(a0),d0
		subi.w	#4,d0
		move.w	d0,$10(a0)
		cmpi.w	#$120,d0
		bls.s	loc_45A6E
		rts
; ---------------------------------------------------------------------------

loc_45A6E:
		move.b	#$14,5(a0)
		bset	#2,$38(a0)
		move.w	#$1F,$3A(a0)
		move.w	#$10,$40(a0)
		rts
; ---------------------------------------------------------------------------

loc_45A88:
		bsr.w	sub_45D94
		jsr	(Obj_Wait).l
		subq.w	#1,$3A(a0)
		bpl.w	locret_458EE
		move.b	#$16,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_45AA2:
		bsr.w	sub_45D94
		cmpi.w	#$918,(Player_1+x_pos).w
		bcc.s	loc_45AB4
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_45AB4:
		move.b	#$18,5(a0)
		lea	ChildObjDat_45E54(pc),a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_45AC4:
		bsr.w	sub_45D94
		cmpi.w	#$1240,(Player_1+x_pos).w
		bcc.s	loc_45AD2
		rts
; ---------------------------------------------------------------------------

loc_45AD2:
		move.b	#$1A,5(a0)
		subi.w	#$20,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_45AE0:
		bsr.w	sub_45D94
		cmpi.w	#$13D0,(Player_1+x_pos).w
		bcc.s	loc_45AEE
		rts
; ---------------------------------------------------------------------------

loc_45AEE:
		st	(Palette_cycle_counters+$00).w
		lea	(Player_1).w,a1
		move.b	#4,5(a1)
		bset	#1,$2A(a1)
		move.w	#-$400,$1A(a1)
		move.w	#-$200,$18(a1)
		move.w	#0,$1C(a1)
		move.b	#$1A,$20(a1)
		clr.b	$2E(a1)
		clr.w	(Ctrl_1_logical).w
		st	(Ctrl_1_locked).w
		clr.b	(Super_Sonic_Knux_flag).w
		move.b	#2,(Super_palette_status).w
		move.w	#$1E,(Palette_frame).w
		lea	Pal_AIZIntroEmeralds(pc),a1
		lea	(Normal_palette_line_4).w,a2
		moveq	#7,d0

loc_45B40:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_45B40
		lea	ChildObjDat_45E5A(pc),a2
		jsr	(CreateChild6_Simple).l
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_45B56:
		move.l	#loc_45BAA,(a0)
		move.l	#Map_AIZIntroPlane,$C(a0)
		move.w	#$529,$A(a0)
		move.w	#$280,8(a0)
		move.b	#$40,7(a0)
		move.b	#$20,7(a0)
		jsr	Swing_Setup1(pc)
		lea	(ArtKosM_AIZIntroPlane).l,a1
		move.w	#-$5AE0,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_AIZIntroEmeralds).l,a1
		move.w	#-$49E0,d2
		jsr	(Queue_Kos_Module).l
		lea	ChildObjDat_45E3E(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_45BAA:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		beq.s	loc_45BC8
		move.l	#loc_45BDC,(a0)

loc_45BC8:
		btst	#3,$38(a1)
		bne.s	loc_45BD6
		jsr	(Refresh_ChildPosition).l

loc_45BD6:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_45BDC:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		subq.w	#4,$10(a0)
		cmpi.w	#$20,$10(a0)
		bcs.s	loc_45BFA
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_45BFA:
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_45C00:
		move.l	#Map_AIZIntroPlane,$C(a0)
		move.w	#$529,$A(a0)
		move.w	#$280,8(a0)
		move.b	#4,7(a0)
		move.b	#$C,7(a0)
		move.l	#loc_45C26,(a0)

loc_45C26:
		lea	(byte_45E6B).l,a1
		jsr	(Animate_RawNoSST).l
		jsr	(Refresh_ChildPosition).l
		jmp	(Child_Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_45C3E:
		move.l	#Map_AIZIntroPlane,$C(a0)
		move.w	#$529,$A(a0)
		move.w	#$280,8(a0)
		move.b	#4,7(a0)
		move.b	#$C,7(a0)
		move.l	#loc_45C64,(a0)

loc_45C64:
		lea	(byte_45E73).l,a1
		jsr	(Animate_RawNoSST).l
		jsr	(Refresh_ChildPosition).l
		jmp	(Child_Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_45C7C:
		move.l	#loc_45CB6,(a0)
		move.l	#Map_AIZIntroWaves,$C(a0)
		move.w	#$3D1,$A(a0)
		move.w	#$100,8(a0)
		move.b	#$10,7(a0)
		bset	#0,4(a0)
		movea.w	$46(a0),a1
		move.l	#byte_45E77,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)

loc_45CB6:
		cmpi.w	#$60,$10(a0)
		bcs.s	loc_45CD6
		movea.w	$46(a0),a1
		move.w	$40(a1),d0
		sub.w	d0,$10(a0)
		jsr	(Animate_RawMultiDelay).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_45CD6:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_45CDC:
		lea	ObjDat3_45E2A(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	$2C(a0),d0
		lsr.b	#1,d0
		move.b	d0,$22(a0)
		move.l	#loc_45D14,(a0)
		move.b	#4,$1E(a0)
		lea	(Player_1).w,a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		moveq	#$40,d0
		jsr	(Set_IndexedVelocity).l

loc_45D14:
		jsr	(MoveSprite).l
		tst.l	d0
		bmi.s	loc_45D32
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_45D32
		add.w	d1,$14(a0)
		move.l	#loc_45D38,(a0)

loc_45D32:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_45D38:
		movea.w	(_unkFAA4).w,a1
		move.w	$10(a0),d0
		move.w	$10(a1),d1
		subq.w	#8,d0
		cmp.w	d0,d1
		bcs.s	loc_45D52
		addi.w	#$10,d0
		cmp.w	d0,d1
		bcs.s	loc_45D58

loc_45D52:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_45D58:
		move.w	$18(a1),d0
		btst	#1,$2C(a0)
		beq.s	loc_45D66
		neg.w	d0

loc_45D66:
		tst.w	d0
		bmi.w	locret_458EE
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_45D72:
		move.l	#Map_SuperSonic,$C(a0)
		move.b	#$21,$22(a0)
		move.b	#0,(Palette_timer).w
		move.w	#$24,(Palette_frame).w
		move.w	#$7FFF,(Super_frame_count).w
		rts

; =============== S U B R O U T I N E =======================================


sub_45D94:
		move.b	#1,(Super_Sonic_Knux_flag).w
		move.b	#$21,$22(a0)
		btst	#1,(V_int_run_count+3).w
		beq.s	loc_45DAE
		move.b	#$22,$22(a0)

loc_45DAE:
		subq.b	#1,(Palette_timer).w
		bpl.s	locret_45DE2
		move.b	#6,(Palette_timer).w
		lea	(PalCycle_SuperSonic).l,a1
		move.w	(Palette_frame).w,d0
		addq.w	#6,(Palette_frame).w
		cmpi.w	#$36,(Palette_frame).w
		bcs.s	loc_45DD6
		move.w	#$24,(Palette_frame).w

loc_45DD6:
		lea	(Normal_palette+4).w,a2
		move.l	(a1,d0.w),(a2)+
		move.w	4(a1,d0.w),(a2)

locret_45DE2:
		rts
; End of function sub_45D94


; =============== S U B R O U T I N E =======================================


sub_45DE4:
		move.w	$40(a0),d1
		move.w	(Events_fg_1).w,d0
		bpl.s	loc_45DF6
		add.w	d1,d0
		move.w	d0,(Events_fg_1).w
		rts
; ---------------------------------------------------------------------------

loc_45DF6:
		add.w	d1,(Player_1+x_pos).w
		rts
; End of function sub_45DE4

; ---------------------------------------------------------------------------

loc_45DFC:
		movea.l	$30(a0),a1
		subq.b	#1,$24(a0)
		bpl.s	locret_45E28
		move.b	(a1),$24(a0)
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.w	#1,d0
		cmp.b	1(a1),d0
		bcs.s	loc_45E1A
		moveq	#0,d0

loc_45E1A:
		move.b	d0,$23(a0)
		moveq	#0,d1
		move.b	2(a1,d0.w),d1
		move.b	d1,$22(a0)

locret_45E28:
		rts
; ---------------------------------------------------------------------------
ObjDat3_45E2A:	dc.l Map_AIZIntroEmeralds
		dc.w $65B1
		dc.w $280
		dc.b 4
		dc.b 4
		dc.b 1
		dc.b 0
ChildObjDat_45E36:dc.w 0
		dc.l loc_45B56
		dc.w $DE2C
ChildObjDat_45E3E:dc.w 1
		dc.l loc_45C00
		dc.w $3804
		dc.l loc_45C3E
		dc.w $1818
ChildObjDat_45E4C:dc.w 0
		dc.l loc_45C7C
		dc.w $18
ChildObjDat_45E54:dc.w 0
		dc.l Obj_CutsceneKnuckles
ChildObjDat_45E5A:dc.w 6
		dc.l loc_45CDC
byte_45E60:	dc.b    3,   8
		dc.b  $97, $96
		dc.b  $98, $96
		dc.b  $99, $96
		dc.b  $9A, $96
		dc.b  $FC
byte_45E6B:	dc.b 0
		dc.b 1
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 3
		dc.b 2
		dc.b $FC
byte_45E73:	dc.b 0
		dc.b 5
		dc.b 6
		dc.b $FC
byte_45E77:	dc.b 0
		dc.b 1
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 1
		dc.b 2
		dc.b 2
		dc.b 3
		dc.b 2
		dc.b 4
		dc.b 1
		dc.b 5
		dc.b 1
		dc.b $F4
Pal_AIZIntroEmeralds:
		binclude "Levels/AIZ/Palettes/Intro Emeralds.bin"
		even
; ---------------------------------------------------------------------------

Obj_RobotnikHead:
		jsr	(Refresh_ChildPositionAdjusted).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	RobotnikHead_Index(pc,d0.w),d1
		jsr	RobotnikHead_Index(pc,d1.w)
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------
RobotnikHead_Index:dc.w	Obj_RobotnikHeadInit-RobotnikHead_Index
		dc.w Obj_RobotnikHeadMain-RobotnikHead_Index
		dc.w Obj_RobotnikHeadEnd-RobotnikHead_Index
; ---------------------------------------------------------------------------

Obj_RobotnikHeadInit:
		lea	ObjDat_RobotnikHead(pc),a1
		jsr	(SetUp_ObjAttributes).l
		jsr	(Child_SyncDraw).l
		movea.w	$46(a0),a1
		move.w	$46(a1),$44(a0)

locret_45EE0:
		rts
; ---------------------------------------------------------------------------

Obj_RobotnikHeadMain:
		lea	AniRaw_RobotnikHead(pc),a1
		jsr	(Animate_RawNoSST).l
		movea.w	$44(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_45F08
		btst	#6,$2A(a1)
		beq.s	locret_45F06
		move.b	#2,$22(a0)

locret_45F06:
		rts
; ---------------------------------------------------------------------------

loc_45F08:
		move.b	#4,5(a0)
		move.b	#3,$22(a0)
		rts
; ---------------------------------------------------------------------------

Obj_RobotnikHeadEnd:
		rts
; ---------------------------------------------------------------------------

Obj_RobotnikHead2:
		jsr	(Refresh_ChildPositionAdjusted).l
		jsr	(Child_SyncDraw).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	RobotnikHead2_Index(pc,d0.w),d1
		jsr	RobotnikHead2_Index(pc,d1.w)
		btst	#6,$38(a0)
		bne.w	locret_45EE0
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------
RobotnikHead2_Index:dc.w Obj_RobotnikHeadInit-RobotnikHead2_Index
		dc.w Obj_RobotnikHeadMain-RobotnikHead2_Index
		dc.w Obj_RobotnikHeadEnd-RobotnikHead2_Index
; ---------------------------------------------------------------------------

Obj_FBZRobotnikHead:
		jsr	(Refresh_ChildPositionAdjusted).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	FBZRobotnikHead_Index(pc,d0.w),d1
		jsr	FBZRobotnikHead_Index(pc,d1.w)
		jsr	(Child_GetPriority).l
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------
FBZRobotnikHead_Index:dc.w Obj_FBZRobotnikHeadInit-FBZRobotnikHead_Index
		dc.w Obj_FBZRobotnikHeadMain-FBZRobotnikHead_Index
		dc.w Obj_RobotnikHeadEnd-FBZRobotnikHead_Index
; ---------------------------------------------------------------------------

Obj_FBZRobotnikHeadInit:
		lea	ObjDat_FBZRobotnikHead(pc),a1
		jsr	(SetUp_ObjAttributes).l
		movea.w	$46(a0),a1
		move.w	$46(a1),$44(a0)
		rts
; ---------------------------------------------------------------------------

Obj_FBZRobotnikHeadMain:
		move.w	$10(a0),d0
		bclr	#0,4(a0)
		cmp.w	(Player_1+x_pos).w,d0
		bcc.s	loc_45F9A
		bset	#0,4(a0)

loc_45F9A:
		clr.b	$22(a0)
		movea.w	$44(a0),a1
		btst	#2,$38(a0)
		beq.s	loc_45FB0
		move.b	#1,$22(a0)

loc_45FB0:
		btst	#7,$2A(a1)
		bne.s	loc_45FC8
		btst	#6,$2A(a1)
		beq.s	locret_45FC6
		move.b	#2,$22(a0)

locret_45FC6:
		rts
; ---------------------------------------------------------------------------

loc_45FC8:
		move.b	#4,5(a0)
		move.b	#3,$22(a0)
		rts
; ---------------------------------------------------------------------------

Obj_RobotnikHead3:
		jsr	(Refresh_ChildPositionAdjusted).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	RobotnikHead3_Index(pc,d0.w),d1
		jsr	RobotnikHead3_Index(pc,d1.w)
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------
RobotnikHead3_Index:dc.w Obj_RobotnikHead3Init-RobotnikHead3_Index
		dc.w Obj_RobotnikHead3Main-RobotnikHead3_Index
		dc.w Obj_RobotnikHeadEnd-RobotnikHead3_Index
; ---------------------------------------------------------------------------

Obj_RobotnikHead3Init:
		lea	ObjDat_RobotnikHead(pc),a1
		jsr	(SetUp_ObjAttributes).l
		movea.w	$46(a0),a1
		btst	#7,$A(a1)
		beq.s	locret_46012
		bset	#7,$A(a0)

locret_46012:
		rts
; ---------------------------------------------------------------------------

Obj_RobotnikHead3Main:
		lea	AniRaw_RobotnikHead(pc),a1
		jsr	(Animate_RawNoSST).l
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4603A
		btst	#6,$2A(a1)
		beq.s	locret_46038
		move.b	#2,$22(a0)

locret_46038:
		rts
; ---------------------------------------------------------------------------

loc_4603A:
		move.b	#4,5(a0)
		move.b	#3,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_46048:
		jsr	(Refresh_ChildPositionAdjusted).l
		jsr	(Child_SyncDraw).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	RobotnikHead4_Index(pc,d0.w),d1
		jsr	RobotnikHead4_Index(pc,d1.w)
		movea.w	$46(a0),a1
		btst	#5,$38(a1)
		bne.s	loc_46074
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_46074:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
RobotnikHead4_Index:dc.w Obj_RobotnikHead3Init-RobotnikHead4_Index
		dc.w Obj_RobotnikHead3Main-RobotnikHead4_Index
		dc.w Obj_RobotnikHeadEnd-RobotnikHead4_Index
; ---------------------------------------------------------------------------

Obj_RobotnikShip:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	RobotnikShip_Index(pc,d0.w),d1
		jsr	RobotnikShip_Index(pc,d1.w)
		btst	#6,$38(a0)
		bne.w	locret_45EE0
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
RobotnikShip_Index:dc.w	loc_460A6-RobotnikShip_Index
		dc.w loc_460C2-RobotnikShip_Index
		dc.w loc_460F8-RobotnikShip_Index
		dc.w loc_4612A-RobotnikShip_Index
; ---------------------------------------------------------------------------

loc_460A6:
		lea	ObjDat_RobotnikShip(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	$2C(a0),$22(a0)
		lea	(Child1_MakeRoboHead2).l,a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_460C2:
		jsr	(Refresh_ChildPositionAdjusted).l
		jsr	(Child_SyncDraw).l
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_460DC
		rts
; ---------------------------------------------------------------------------

loc_460DC:
		move.b	#4,5(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	(CreateChild1_Normal).l
		bne.s	locret_460F6
		move.b	#4,$2C(a1)

locret_460F6:
		rts
; ---------------------------------------------------------------------------

loc_460F8:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_46110
		jsr	(Child_SyncDraw).l
		jmp	(Refresh_ChildPositionAdjusted).l
; ---------------------------------------------------------------------------

loc_46110:
		move.b	#6,5(a0)
		move.b	#5,$22(a0)
		move.w	#-$200,$1A(a0)
		move.w	#$7F,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_4612A:
		jsr	(MoveSprite).l
		subq.w	#1,$2E(a0)
		bmi.s	loc_46138
		rts
; ---------------------------------------------------------------------------

loc_46138:
		bset	#5,$38(a0)
		clr.b	(Boss_flag).w
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

Obj_RobotnikShip2:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	RobotnikShip2_Index(pc,d0.w),d1
		jsr	RobotnikShip2_Index(pc,d1.w)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
RobotnikShip2_Index:dc.w Obj_RobotnikShipInit-RobotnikShip2_Index
		dc.w Obj_RobotnikShipMain-RobotnikShip2_Index
		dc.w Obj_RobotnikShip2Wait-RobotnikShip2_Index
		dc.w Obj_RobotnikShipReady-RobotnikShip2_Index
		dc.w Obj_RobotnikShipEscape-RobotnikShip2_Index
; ---------------------------------------------------------------------------

Obj_RobotnikShip2Wait:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_46174
		rts
; ---------------------------------------------------------------------------

loc_46174:
		move.b	#6,5(a0)
		move.b	#5,$22(a0)
		rts
; ---------------------------------------------------------------------------

Obj_RobotnikShip3:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	RobotnikShip3_Index(pc,d0.w),d1
		jsr	RobotnikShip3_Index(pc,d1.w)
		movea.w	$46(a0),a1
		btst	#5,$38(a1)
		bne.s	loc_461AC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
RobotnikShip3_Index:dc.w Obj_RobotnikShipInit-RobotnikShip3_Index
		dc.w Obj_RobotnikShipMain-RobotnikShip3_Index
		dc.w Obj_RobotnikShipWait-RobotnikShip3_Index
		dc.w Obj_RobotnikShipReady-RobotnikShip3_Index
		dc.w Obj_RobotnikShipEscape-RobotnikShip3_Index
; ---------------------------------------------------------------------------

loc_461AC:
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

Obj_RobotnikShipInit:
		lea	ObjDat_RobotnikShip(pc),a1
		jsr	(SetUp_ObjAttributes).l
		jsr	(Child_SyncDraw).l
		move.b	$2C(a0),$22(a0)
		lea	(Child1_MakeRoboHead).l,a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

Obj_RobotnikShipMain:
		jsr	(Refresh_ChildPositionAdjusted).l
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_461E8
		rts
; ---------------------------------------------------------------------------

loc_461E8:
		move.b	#4,5(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	(CreateChild1_Normal).l
		bne.s	locret_46202
		move.b	#4,$2C(a1)

locret_46202:
		rts
; ---------------------------------------------------------------------------

Obj_RobotnikShipWait:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_46216
		jmp	(Refresh_ChildPositionAdjusted).l
; ---------------------------------------------------------------------------

loc_46216:
		move.b	#6,5(a0)
		move.b	#$A,$22(a0)
		rts
; ---------------------------------------------------------------------------

Obj_RobotnikShipReady:
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$40,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_46238
		subq.w	#1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_46238:
		move.b	#8,5(a0)

loc_4623E:
		bset	#0,4(a0)
		move.w	#$300,$18(a0)
		clr.w	$1A(a0)
		move.w	#$100,$2E(a0)
		lea	Child1_MakeRoboShipFlame(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

Obj_RobotnikShipEscape:
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bmi.s	loc_4626C
		rts
; ---------------------------------------------------------------------------

loc_4626C:
		bset	#5,$38(a0)
		clr.b	(Boss_flag).w
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

Obj_RobotnikShip4:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	RobotnikShip4_Index(pc,d0.w),d1
		jsr	RobotnikShip4_Index(pc,d1.w)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
RobotnikShip4_Index:dc.w Obj_RobotnikShipInit-RobotnikShip4_Index
		dc.w Obj_RobotnikShipMain-RobotnikShip4_Index
		dc.w Obj_RobotnikShipWait-RobotnikShip4_Index
		dc.w Obj_RobotnikShipReady-RobotnikShip4_Index
		dc.w Obj_RobotnikShipEscape-RobotnikShip4_Index
; ---------------------------------------------------------------------------

Obj_FBZRobotnikShip:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	FBZRobotnikShip_Index(pc,d0.w),d1
		jsr	FBZRobotnikShip_Index(pc,d1.w)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
FBZRobotnikShip_Index:dc.w Obj_FBZRobotnikShipInit-FBZRobotnikShip_Index
		dc.w Obj_FBZRobotnikShipMain-FBZRobotnikShip_Index
		dc.w Obj_FBZRobotnikShipWait-FBZRobotnikShip_Index
		dc.w Obj_FBZRobotnikShipFall-FBZRobotnikShip_Index
		dc.w Obj_FBZRobotnikShipRise-FBZRobotnikShip_Index
		dc.w Obj_RobotnikShipEscape-FBZRobotnikShip_Index
; ---------------------------------------------------------------------------

Obj_FBZRobotnikShipInit:
		lea	ObjDat_RobotnikShip(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	$2C(a0),$22(a0)
		lea	(Child1_MakeFBZRoboHead).l,a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

Obj_FBZRobotnikShipMain:
		jsr	(Refresh_ChildPosition).l
		jsr	(Child_GetPriority).l
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_462F0
		rts
; ---------------------------------------------------------------------------

loc_462F0:
		move.b	#4,5(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	(CreateChild1_Normal).l
		bne.s	locret_4630A
		move.b	#4,$2C(a1)

locret_4630A:
		rts
; ---------------------------------------------------------------------------

Obj_FBZRobotnikShipWait:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_46324
		jsr	(Child_GetPriority).l
		jmp	(Refresh_ChildPosition).l
; ---------------------------------------------------------------------------

loc_46324:
		move.b	#6,5(a0)
		move.b	#5,$22(a0)
		clr.w	$18(a0)
		move.w	#-$200,$1A(a0)
		move.w	#$2F,$2E(a0)
		move.l	#Obj_FBZRobotnikShipReadyGo,$34(a0)
		rts
; ---------------------------------------------------------------------------

Obj_FBZRobotnikShipFall:
		jsr	(MoveSprite).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

Obj_FBZRobotnikShipReadyGo:
		move.b	#8,5(a0)
		bset	#0,4(a0)
		rts
; ---------------------------------------------------------------------------

Obj_FBZRobotnikShipRise:
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$C0,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_46378
		subq.w	#1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_46378:
		move.b	#$A,5(a0)
		bra.w	loc_4623E
; ---------------------------------------------------------------------------

Obj_RobotnikShipFlame:
		lea	ObjDat2_RoboShipFlame(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#Obj_RobotnikShipFlameMain,(a0)
		rts
; ---------------------------------------------------------------------------

Obj_RobotnikShipFlameMain:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_463B6
		jsr	(Refresh_ChildPositionAdjusted).l
		btst	#0,(V_int_run_count+3).w
		bne.w	locret_45EE0
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_463B6:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
ObjDat_RobotnikHead:dc.l Map_RobotnikShip
		dc.w $52E
		dc.w $280
		dc.b $10
		dc.b 8
		dc.b 0
		dc.b 0
ObjDat_FBZRobotnikHead:dc.l Map_FBZRobotnikHead
		dc.w $410
		dc.w $280
		dc.b $10
		dc.b 8
		dc.b 0
		dc.b 0
ObjDat_RobotnikShip:dc.l Map_RobotnikShip
		dc.w $52E
		dc.w $280
		dc.b $1C
		dc.b $20
		dc.b 8
		dc.b 0
ObjDat2_RoboShipFlame:dc.w $280
		dc.b 8
		dc.b 4
		dc.b 6
		dc.b 0
Child1_MakeRoboHead:dc.w 0
		dc.l Obj_RobotnikHead
		dc.w $E4
Child1_MakeRoboHead2:dc.w 0
		dc.l Obj_RobotnikHead2
		dc.w $E4
Child1_MakeFBZRoboHead:dc.w 0
		dc.l Obj_FBZRobotnikHead
		dc.w $E4
Child1_MakeRoboHead3:dc.w 0
		dc.l Obj_RobotnikHead3
		dc.w $E4
Child1_MakeRoboHead4:dc.w 0
		dc.l loc_46048
		dc.w $E4
word_4640E:	dc.w 0
		dc.l Obj_RobotnikShip
		dc.w $EC
		dc.w 0
		dc.l Obj_RobotnikShip2
		dc.w 0
Child1_MakeRoboShip3:dc.w 0
		dc.l Obj_RobotnikShip3
		dc.w $FA04
ChildObjDat_46426:dc.w 0
		dc.l Obj_RobotnikShip4
		dc.w $F8
ChildObjDat_4642E:dc.w 0
		dc.l Obj_FBZRobotnikShip
		dc.w 4
Child1_MakeRoboShipFlame:dc.w 0
		dc.l Obj_RobotnikShipFlame
		dc.w $1E00
AniRaw_RobotnikHead:dc.b 5
		dc.b 0
		dc.b 1
		dc.b $FC
; ---------------------------------------------------------------------------

Obj_AIZ_Miniboss_Cutscene:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_46454(pc,d0.w),d1
		jsr	off_46454(pc,d1.w)
		bra.w	loc_46E80
; ---------------------------------------------------------------------------
off_46454:	dc.w loc_4645E-off_46454
		dc.w loc_46482-off_46454
		dc.w loc_464CA-off_46454
		dc.w loc_46508-off_46454
		dc.w loc_4654C-off_46454
; ---------------------------------------------------------------------------

loc_4645E:
		lea	ObjDat3_46F14(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#$60,$29(a0)
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.b	#1,(Boss_flag).w
		moveq	#$5A,d0
		jmp	(Load_PLC).l
; ---------------------------------------------------------------------------

loc_46482:
		move.w	(Camera_X_pos).w,d0
		move.w	#$2F10,d5
		cmp.w	d5,d0
		bcc.s	loc_46490
		rts
; ---------------------------------------------------------------------------

loc_46490:
		move.l	#loc_464D0,$34(a0)
		lea	ChildObjDat_46F80(pc),a2
		jsr	(CreateChild3_NormalRepeated).l
		lea	Pal_AIZMiniboss(pc),a1
		jsr	(PalLoad_Line1).l

loc_464AC:
		move.b	#4,5(a0)
		move.w	#$B4,$2E(a0)
		move.w	d5,(Camera_min_X_pos).w
		move.w	d5,(Camera_max_X_pos).w
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l

locret_464C8:
		rts
; ---------------------------------------------------------------------------

loc_464CA:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_464D0:
		move.l	#loc_4650E,$34(a0)
		move.b	#6,5(a0)
		lea	ChildObjDat_46F72(pc),a2
		jsr	(CreateChild1_Normal).l
		lea	ChildObjDat_46F88(pc),a2
		jsr	(CreateChild1_Normal).l

; =============== S U B R O U T I N E =======================================


sub_464F2:
		move.w	#$100,$1A(a0)
		move.w	#$AF,$2E(a0)
		moveq	#signextendB(mus_Miniboss),d0
		jsr	(Play_Sound).l
		rts
; End of function sub_464F2

; ---------------------------------------------------------------------------

loc_46508:
		jmp	(MoveWaitTouch).l
; ---------------------------------------------------------------------------

loc_4650E:
		move.w	#$7F,$2E(a0)
		move.l	#loc_4657E,$34(a0)
		move.b	#3,$39(a0)
		bset	#1,$38(a0)

loc_46528:
		move.b	#8,5(a0)
		clr.w	$1A(a0)

; =============== S U B R O U T I N E =======================================


Swing_Setup1:
		move.w	#$C0,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#$10,$40(a0)
		bclr	#0,$38(a0)
		rts
; End of function Swing_Setup1

; ---------------------------------------------------------------------------

loc_4654C:
		jsr	(Swing_UpAndDown).l
		jmp	(MoveWaitTouch).l
; ---------------------------------------------------------------------------
		subq.b	#1,$39(a0)
		bpl.s	loc_46566
		move.l	#loc_4657E,$34(a0)

loc_46566:
		move.w	#$40,$2E(a0)
		moveq	#signextendB(sfx_FlamethrowerQuiet),d0
		jsr	(Play_Sound_2).l
		lea	Child1_AIZ_MinibossFlames(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4657E:
		move.w	#$10,$2E(a0)
		move.l	#loc_46596,$34(a0)
		lea	ChildObjDat_4701A(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_46596:
		move.l	#loc_465E0,(a0)
		lea	Pal_AIZMiniboss(pc),a1
		jsr	(PalLoad_Line1).l
		move.b	#$F,$28(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.w	#$400,$18(a0)
		clr.w	$1A(a0)
		move.w	#$40,$2E(a0)
		cmpi.w	#0,(Current_zone_and_act).w
		bne.s	loc_465D2
		move.w	#$120,$2E(a0)

loc_465D2:
		move.l	#Go_Delete_Sprite,$34(a0)
		st	(Events_fg_5).w
		rts
; ---------------------------------------------------------------------------

loc_465E0:
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bmi.s	loc_465F2
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_465F2:
		clr.b	(Boss_flag).w
		jsr	(Obj_PlayLevelMusic).l
		lea	(PLC_Monitors).l,a1
		jsr	(Load_PLC_Raw).l
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

loc_4660E:
		jsr	(Refresh_ChildPositionAdjusted).l
		lea	word_46F20(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		bset	#4,$2B(a0)
		move.l	#byte_4703C,$30(a0)
		move.l	#loc_46638,(a0)
		jmp	(Child_DrawTouch_Sprite2).l
; ---------------------------------------------------------------------------

loc_46638:
		jsr	(Refresh_ChildPositionAdjusted).l
		jsr	(Animate_Raw).l
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		beq.s	loc_46654
		clr.b	$28(a0)

loc_46654:
		jmp	(Child_DrawTouch_Sprite2).l
; ---------------------------------------------------------------------------

loc_4665A:
		jsr	(Refresh_ChildPositionAdjusted).l
		move.l	#loc_46670,(a0)
		lea	word_46F28(pc),a1
		jmp	(SetUp_ObjAttributes2).l
; ---------------------------------------------------------------------------

loc_46670:
		jsr	(Refresh_ChildPositionAdjusted).l
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------

loc_4667C:
		jsr	(Refresh_ChildPositionAdjusted).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_46696(pc,d0.w),d1
		jsr	off_46696(pc,d1.w)
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------
off_46696:	dc.w loc_466A4-off_46696
		dc.w loc_466AE-off_46696
		dc.w loc_466CE-off_46696
		dc.w loc_466EC-off_46696
		dc.w loc_4672C-off_46696
		dc.w loc_466EC-off_46696
		dc.w locret_464C8-off_46696
; ---------------------------------------------------------------------------

loc_466A4:
		lea	word_46F30(pc),a1
		jmp	(SetUp_ObjAttributes2).l
; ---------------------------------------------------------------------------

loc_466AE:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_466BC
		rts
; ---------------------------------------------------------------------------

loc_466BC:
		move.b	#4,5(a0)
		move.l	#loc_466D4,$34(a0)
		bra.w	loc_46DDE
; ---------------------------------------------------------------------------

loc_466CE:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_466D4:
		move.l	#loc_466F2,$34(a0)

loc_466DC:
		move.b	#6,5(a0)
		move.l	#byte_47045,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_466EC:
		jmp	(Animate_RawMultiDelay).l
; ---------------------------------------------------------------------------

loc_466F2:
		move.b	#8,5(a0)
		move.b	#3,$39(a0)
		move.l	#loc_46706,$34(a0)

loc_46706:
		move.w	#$1C,$2E(a0)
		subq.b	#1,$39(a0)
		cmpi.b	#1,$39(a0)
		beq.s	loc_46722
		lea	ChildObjDat_46FB0(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_46722:
		lea	ChildObjDat_46FBE(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4672C:
		jsr	(Obj_Wait).l
		tst.b	$39(a0)
		bmi.s	loc_4673A
		rts
; ---------------------------------------------------------------------------

loc_4673A:
		move.b	#$A,5(a0)
		move.l	#byte_4704C,$30(a0)
		move.l	#loc_46752,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_46752:
		move.b	#$C,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4675A:
		jsr	(Refresh_ChildPositionAdjusted).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_46774(pc,d0.w),d1
		jsr	off_46774(pc,d1.w)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_46774:	dc.w loc_46778-off_46774
		dc.w loc_466EC-off_46774
; ---------------------------------------------------------------------------

loc_46778:
		lea	byte_46F38(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		move.l	#byte_47055,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_46794:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_467A2(pc,d0.w),d1
		jmp	off_467A2(pc,d1.w)
; ---------------------------------------------------------------------------
off_467A2:	dc.w sub_467AA-off_467A2
		dc.w loc_467DE-off_467A2
		dc.w loc_464CA-off_467A2
		dc.w loc_467DE-off_467A2

; =============== S U B R O U T I N E =======================================


sub_467AA:
		lea	word_46F40(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		moveq	#signextendB(sfx_Projectile),d0
		jsr	(Play_Sound_2).l
		move.l	#byte_47062,$30(a0)
		move.l	#loc_467EA,$34(a0)
		move.w	#-$400,$1A(a0)
		move.w	#$60,$2E(a0)
		jmp	(Draw_Sprite).l
; End of function sub_467AA

; ---------------------------------------------------------------------------

loc_467DE:
		jsr	(Move_AnimateRaw_Wait).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_467EA:
		move.b	#4,5(a0)
		move.w	#8,$2E(a0)
		move.l	#loc_46800,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_46800:
		move.b	#6,5(a0)
		moveq	#signextendB(sfx_MissileThrow),d0
		jsr	(Play_Sound_2).l
		move.w	#$80,8(a0)
		bset	#1,4(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		move.w	#$60,$2E(a0)
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	$2C(a1),d0
		bsr.w	loc_46E02
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$20,d0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

Obj_AIZMiniboss_Flame:
		jsr	(Refresh_ChildPositionAdjusted).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_46858(pc,d0.w),d1
		jmp	off_46858(pc,d1.w)
; ---------------------------------------------------------------------------
off_46858:	dc.w sub_4685E-off_46858
		dc.w loc_464CA-off_46858
		dc.w loc_468A6-off_46858

; =============== S U B R O U T I N E =======================================


sub_4685E:
		lea	ObjDat3_46F54(pc),a1
		jsr	(SetUp_ObjAttributes).l
		bset	#4,$2B(a0)
		move.l	#loc_4688E,$34(a0)
		moveq	#6,d1

loc_46878:
		moveq	#0,d0
		move.b	$2C(a0),d0
		sub.w	d0,d1
		add.b	d1,d1
		move.w	d1,$2E(a0)
		rts
; ---------------------------------------------------------------------------
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4688E:
		move.b	#4,5(a0)
		move.l	#byte_47075,$30(a0)
		move.l	#loc_468B2,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_468A6:
		jsr	(Animate_RawMultiDelay).l
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_468B2:
		move.l	#Map_BossExplosion,$C(a0)
		move.w	#-$7B2E,$A(a0)
		move.l	#byte_4707A,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		cmpi.b	#6,$2C(a0)
		bne.w	locret_464C8
		lea	ChildObjDat_46FE6(pc),a2
		jmp	(CreateChild1_Normal).l
; End of function sub_4685E

; ---------------------------------------------------------------------------

loc_468E4:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_468F8(pc,d0.w),d1
		jsr	off_468F8(pc,d1.w)
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
off_468F8:	dc.w loc_468FC-off_468F8
		dc.w loc_46948-off_468F8
; ---------------------------------------------------------------------------

loc_468FC:
		bsr.w	sub_4685E
		move.w	#$100,8(a0)
		move.l	#byte_47085,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		movea.w	$46(a0),a1
		movea.w	$46(a1),a1
		move.w	a1,$46(a0)
		move.w	$14(a1),$14(a0)
		move.w	#-$60,d0
		btst	#0,4(a1)
		beq.s	loc_4693C
		neg.w	d0
		bset	#0,4(a0)

loc_4693C:
		move.w	$10(a1),d1
		add.w	d0,d1
		move.w	d1,$10(a0)
		rts
; ---------------------------------------------------------------------------

loc_46948:
		jsr	(Animate_RawMultiDelay).l
		tst.w	d2
		beq.s	locret_46966
		bmi.s	locret_46966
		move.w	word_46968(pc,d0.w),d0
		btst	#0,4(a0)
		bne.s	loc_46962
		neg.w	d0

loc_46962:
		add.w	d0,$10(a0)

locret_46966:
		rts
; ---------------------------------------------------------------------------
word_46968:	dc.w 0
		dc.w 0
		dc.w 0
		dc.w $10
		dc.w 8
		dc.w 8
; ---------------------------------------------------------------------------

Obj_AIZ_Miniboss:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_46986(pc,d0.w),d1
		jsr	off_46986(pc,d1.w)
		bra.w	loc_46E80
; ---------------------------------------------------------------------------
off_46986:	dc.w loc_46996-off_46986
		dc.w loc_469BE-off_46986
		dc.w loc_464CA-off_46986
		dc.w loc_469FE-off_46986
		dc.w loc_4654C-off_46986
		dc.w loc_46A5E-off_46986
		dc.w loc_46AAA-off_46986
		dc.w loc_46AFE-off_46986
; ---------------------------------------------------------------------------

loc_46996:
		lea	ObjDat3_46F14(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#6,$29(a0)
		move.b	#1,(Boss_flag).w
		moveq	#$5A,d0
		jsr	(Load_PLC).l
		lea	Pal_AIZMiniboss(pc),a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------

loc_469BE:
		move.w	(Camera_X_pos).w,d0
		move.w	#$10E0,d5
		cmp.w	d5,d0
		bcc.s	loc_469CC
		rts
; ---------------------------------------------------------------------------

loc_469CC:
		move.l	#loc_469D8,$34(a0)
		bra.w	loc_464AC
; ---------------------------------------------------------------------------

loc_469D8:
		move.l	#loc_46A10,$34(a0)
		move.b	#6,5(a0)
		bsr.w	sub_464F2
		lea	ChildObjDat_46F72(pc),a2
		jsr	(CreateChild1_Normal).l
		lea	ChildObjDat_46F9C(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_469FE:
		jsr	(MoveSprite2).l
		jsr	(Obj_Wait).l
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_46A10:
		move.l	#loc_46A22,$34(a0)
		move.w	#$14,$2E(a0)
		bra.w	loc_46528
; ---------------------------------------------------------------------------

loc_46A22:
		move.l	#loc_46A40,$34(a0)
		move.w	#$1E,$2E(a0)
		tst.b	(_unkFA80+1).w
		beq.w	locret_464C8
		bset	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_46A40:
		move.b	#$A,5(a0)
		move.b	#8,$39(a0)
		moveq	#signextendB(sfx_FlamethrowerQuiet),d0
		jsr	(Play_Sound_2).l
		lea	Child1_AIZ_MinibossFlames(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_46A5E:
		jsr	(Swing_UpAndDown_Count).l
		beq.s	loc_46A6A
		tst.w	d1
		bmi.s	loc_46A76

loc_46A6A:
		jsr	(MoveSprite2).l
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_46A76:
		move.b	#6,5(a0)
		move.w	#$5F,$2E(a0)
		move.l	#loc_46AB6,$34(a0)
		move.w	#-$100,d0
		bchg	#2,$38(a0)
		beq.s	loc_46AA0
		neg.w	d0
		move.l	#loc_46A10,$34(a0)

loc_46AA0:
		move.w	d0,$1A(a0)
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_46AAA:
		jsr	(Obj_Wait).l
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_46AB6:
		move.l	#loc_46AD4,$34(a0)

loc_46ABE:
		move.b	#$C,5(a0)
		clr.w	$18(a0)
		clr.w	$1A(a0)
		move.w	#$10,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_46AD4:
		move.b	#$E,5(a0)
		move.b	#4,$39(a0)
		move.l	#loc_46B1E,$34(a0)
		move.w	#$100,d0
		bchg	#3,$38(a0)
		bne.s	loc_46AF6
		neg.w	d0

loc_46AF6:
		move.w	d0,$18(a0)
		bra.w	Swing_Setup1
; ---------------------------------------------------------------------------

loc_46AFE:
		jsr	(Swing_UpAndDown_Count).l
		bne.s	loc_46B12
		jsr	(MoveSprite2).l
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_46B12:
		movea.l	$34(a0),a1
		jsr	(a1)
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_46B1E:
		move.b	#4,$39(a0)
		move.l	#loc_46B38,$34(a0)
		bchg	#0,4(a0)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_46B38:
		move.l	#loc_46A76,$34(a0)
		bra.w	loc_46ABE
; ---------------------------------------------------------------------------

loc_46B44:
		jsr	(Obj_EndSignControl).l
		lea	ChildObjDat_47022(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_46B54:
		jsr	(Refresh_ChildPositionAdjusted).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_46B6E(pc,d0.w),d1
		jsr	off_46B6E(pc,d1.w)
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------
off_46B6E:	dc.w loc_466A4-off_46B6E
		dc.w loc_46B7A-off_46B6E
		dc.w loc_464CA-off_46B6E
		dc.w loc_466EC-off_46B6E
		dc.w loc_466EC-off_46B6E
		dc.w locret_464C8-off_46B6E
; ---------------------------------------------------------------------------

loc_46B7A:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_46B88
		rts
; ---------------------------------------------------------------------------

loc_46B88:
		move.b	#4,5(a0)
		move.l	#loc_46B9A,$34(a0)
		bra.w	loc_46DDE
; ---------------------------------------------------------------------------

loc_46B9A:
		move.l	#loc_46BA6,$34(a0)
		bra.w	loc_466DC
; ---------------------------------------------------------------------------

loc_46BA6:
		move.b	#8,5(a0)
		move.l	#loc_46BC6,$34(a0)
		move.l	#byte_4704C,$30(a0)
		lea	ChildObjDat_46FBE(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_46BC6:
		move.b	#2,5(a0)
		movea.w	$46(a0),a1
		bclr	#1,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_46BD8:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_46BEC(pc,d0.w),d1
		jsr	off_46BEC(pc,d1.w)
		jmp	(Child_DrawTouch_Sprite).l
; ---------------------------------------------------------------------------
off_46BEC:	dc.w loc_46BF6-off_46BEC
		dc.w loc_46C1A-off_46BEC
		dc.w loc_464CA-off_46BEC
		dc.w loc_46C68-off_46BEC
		dc.w loc_46C84-off_46BEC
; ---------------------------------------------------------------------------

loc_46BF6:
		bsr.w	sub_467AA
		movea.w	$46(a0),a1
		cmpi.l	#loc_4667C,(a1)
		bne.s	loc_46C0A
		clr.b	$28(a0)

loc_46C0A:
		move.l	#loc_46C2C,$34(a0)
		move.b	#8,$1E(a0)
		rts
; ---------------------------------------------------------------------------

loc_46C1A:
		jsr	(Animate_Raw).l
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_46C2C:
		move.b	#4,5(a0)
		move.w	#8,$2E(a0)
		move.l	#loc_46C42,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_46C42:
		move.b	#6,5(a0)
		move.l	#loc_46C6E,$34(a0)
		bset	#1,4(a0)
		bsr.w	sub_46DF2
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$20,d0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_46C68:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_46C6E:
		move.b	#8,5(a0)
		move.w	#$80,8(a0)
		move.l	#loc_46C96,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_46C84:
		jsr	(Animate_Raw).l
		jsr	(MoveSprite2).l
		jmp	(ObjHitFloor_DoRoutine).l
; ---------------------------------------------------------------------------

loc_46C96:
		moveq	#signextendB(sfx_MissileExplode),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_46FEE(pc),a2
		jsr	(CreateChild1_Normal).l
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_46CAE:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_46CBC(pc,d0.w),d1
		jmp	off_46CBC(pc,d1.w)
; ---------------------------------------------------------------------------
off_46CBC:	dc.w loc_46CC2-off_46CBC
		dc.w loc_464CA-off_46CBC
		dc.w loc_46D00-off_46CBC
; ---------------------------------------------------------------------------

loc_46CC2:
		lea	ObjDat3_46F48(pc),a1
		jsr	(SetUp_ObjAttributes).l
		movea.w	$46(a0),a1
		tst.b	$28(a1)
		bne.s	loc_46CDA
		clr.b	$28(a0)

loc_46CDA:
		move.l	#AniRaw_BossExplosion,$30(a0)
		move.l	#loc_46CF0,$34(a0)
		moveq	#$C,d1
		bra.w	loc_46878
; ---------------------------------------------------------------------------

loc_46CF0:
		move.b	#4,5(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_46D00:
		jsr	(Animate_RawMultiDelay).l
		tst.b	$28(a0)
		beq.s	loc_46D12
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_46D12:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_46D18:
		lea	ObjDat3_46F60(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_46D9C,(a0)
		move.l	#loc_46DA2,$34(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	(Camera_X_pos).w,d1
		move.w	word_46D66(pc,d0.w),d2
		add.w	d2,d1
		move.w	d1,$10(a0)
		move.w	(Camera_Y_pos).w,d1
		move.w	word_46D72(pc,d0.w),d2
		move.w	d2,$14(a0)
		move.w	byte_46D7E(pc,d0.w),$18(a0)
		move.w	byte_46D7E(pc,d0.w),$2E(a0)
		lsr.w	#1,d0
		move.b	byte_46D96(pc,d0.w),$22(a0)
		rts
; ---------------------------------------------------------------------------
word_46D66:	dc.w $FFE0
		dc.w $FF98
		dc.w $FFF0
		dc.w $FFA8
		dc.w $FFF8
		dc.w $FFB0
word_46D72:	dc.w $310
		dc.w $310
		dc.w $31C
		dc.w $31C
		dc.w $328
		dc.w $328
byte_46D7E:	dc.b 2
		dc.b 0
		dc.b 2
		dc.b 0
		dc.b 1
		dc.b $80
		dc.b 1
		dc.b $80
		dc.b 1
		dc.b 0
		dc.b 1
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
byte_46D96:	dc.b 0
		dc.b 0
		dc.b 1
		dc.b 1
		dc.b 2
		dc.b 2
; ---------------------------------------------------------------------------

loc_46D9C:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_46DA2:
		move.l	#loc_46DAA,(a0)
		rts
; ---------------------------------------------------------------------------

loc_46DAA:
		jsr	(MoveSprite2).l
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------

loc_46DB6:
		lea	word_46F6C(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		addi.b	#$E,d0
		move.b	d0,$22(a0)
		moveq	#8,d0
		jmp	(Set_IndexedVelocity).l
; ---------------------------------------------------------------------------

loc_46DDE:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_46DEC(pc,d0.w),$2E(a0)
		rts
; ---------------------------------------------------------------------------
word_46DEC:	dc.w 0
		dc.w $10
		dc.w $20

; =============== S U B R O U T I N E =======================================


sub_46DF2:
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	$2C(a1),d0
		move.w	word_46E46(pc,d0.w),$2E(a0)

loc_46E02:
		lsr.w	#1,d0
		move.b	$39(a1),d1
		addq.b	#4,d1
		move.b	d1,$39(a1)
		andi.w	#$C,d1
		add.w	d1,d0
		lea	byte_46E4C(pc),a2
		lea	word_46E6C(pc),a3
		btst	#0,4(a1)
		beq.s	loc_46E2C
		lea	byte_46E5C(pc),a2
		lea	word_46E76(pc),a3

loc_46E2C:
		move.b	(a2,d0.w),d0
		add.w	d0,d0
		move.w	(a3,d0.w),d0
		add.w	(Camera_X_pos).w,d0
		move.w	d0,$10(a0)
		move.w	#$400,$1A(a0)
		rts
; End of function sub_46DF2

; ---------------------------------------------------------------------------
word_46E46:	dc.w 0
		dc.w $20
		dc.w $40
byte_46E4C:	dc.b 2
		dc.b 3
		dc.b 4
		dc.b 0
		dc.b 0
		dc.b 2
		dc.b 4
		dc.b 0
		dc.b 1
		dc.b 3
		dc.b 4
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 4
		dc.b 0
byte_46E5C:	dc.b 3
		dc.b 2
		dc.b 0
		dc.b 0
		dc.b 4
		dc.b 3
		dc.b 1
		dc.b 0
		dc.b 4
		dc.b 2
		dc.b 0
		dc.b 0
		dc.b 3
		dc.b 2
		dc.b 1
		dc.b 0
word_46E6C:	dc.w $24
		dc.w $4C
		dc.w $74
		dc.w $9C
		dc.w $C4
word_46E76:	dc.w $7C
		dc.w $A4
		dc.w $CC
		dc.w $F4
		dc.w $11C
; ---------------------------------------------------------------------------

loc_46E80:
		tst.b	$28(a0)
		bne.s	locret_46ED2
		tst.b	$29(a0)
		beq.s	loc_46ED4
		tst.b	$20(a0)
		bne.s	loc_46EA6
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l
		bset	#6,$2A(a0)

loc_46EA6:
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_46EB2
		addq.w	#8,d0

loc_46EB2:
		lea	word_46EFC(pc),a1
		lea	word_46F04(pc,d0.w),a2
		jsr	(CopyWordData_4).l
		subq.b	#1,$20(a0)
		bne.s	locret_46ED2
		bclr	#6,$2A(a0)
		move.b	$25(a0),$28(a0)

locret_46ED2:
		rts
; ---------------------------------------------------------------------------

loc_46ED4:
		move.l	#Wait_Draw,(a0)
		move.l	#loc_46B44,$34(a0)
		clr.w	$18(a0)
		clr.w	$1A(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	(CreateChild1_Normal).l
		jmp	(BossDefeated_StopTimer).l
; ---------------------------------------------------------------------------
word_46EFC:	dc.w Normal_palette_line_2+$0E, Normal_palette_line_2+$14, Normal_palette_line_2+$16, Normal_palette_line_2+$1C
word_46F04:	dc.w   $644,  $240,   $20,  $644
		dc.w   $888,  $AAA,  $EEE,  $AAA
ObjDat3_46F14:	dc.l Map_AIZMiniboss
		dc.w $A41A
		dc.w $200
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b $F
word_46F20:	dc.w $841A
		dc.w $180
		dc.b $28
		dc.b $10
		dc.b 2
		dc.b $9C
word_46F28:	dc.w $A41A
		dc.w $200
		dc.b 4
		dc.b 8
		dc.b 6
		dc.b 0
word_46F30:	dc.w $A41A
		dc.w $280
		dc.b 8
		dc.b 8
		dc.b 3
		dc.b 0
byte_46F38:	dc.b 4
		dc.b $1A
		dc.b 2
		dc.b 0
		dc.b 8
		dc.b 8
		dc.b 7
		dc.b 0
word_46F40:	dc.w $41A
		dc.w $280
		dc.b 8
		dc.b $10
		dc.b $C
		dc.b $98
ObjDat3_46F48:	dc.l Map_BossExplosion
		dc.w $4D2
		dc.w $80
		dc.b $C
		dc.b $C
		dc.b 0
		dc.b $97
ObjDat3_46F54:	dc.l Map_AIZMinibossFlame
		dc.w $8482
		dc.w $100
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b $8B
ObjDat3_46F60:	dc.l Map_AIZMinibossSmall
		dc.w $2474
		dc.w $380
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
word_46F6C:	dc.w $200
		dc.b $10
		dc.b $14
		dc.b 0
		dc.b 0
ChildObjDat_46F72:dc.w 1
		dc.l loc_4660E
		dc.w $20
		dc.l loc_4665A
		dc.w $DC08
ChildObjDat_46F80:dc.w 5
		dc.l loc_46D18
		dc.w 0
ChildObjDat_46F88:dc.w 2
		dc.l loc_4667C
		dc.w $E0
		dc.l loc_4667C
		dc.w $9E4
		dc.l loc_4667C
		dc.w $12E8
ChildObjDat_46F9C:dc.w 2
		dc.l loc_46B54
		dc.w $E0
		dc.l loc_46B54
		dc.w $9E4
		dc.l loc_46B54
		dc.w $12E8
ChildObjDat_46FB0:dc.w 1
		dc.l loc_4675A
		dc.w 4
		dc.l loc_46794
		dc.w 4
ChildObjDat_46FBE:dc.w 1
		dc.l loc_4675A
		dc.w 4
		dc.l loc_46BD8
		dc.w 4
Child1_AIZ_MinibossFlames:dc.w 3
		dc.l Obj_AIZMiniboss_Flame
		dc.w $9C04
		dc.l Obj_AIZMiniboss_Flame
		dc.w $AC04
		dc.l Obj_AIZMiniboss_Flame
		dc.w $BC04
		dc.l Obj_AIZMiniboss_Flame
		dc.w $D403
ChildObjDat_46FE6:dc.w 0
		dc.l loc_468E4
		dc.w 0
ChildObjDat_46FEE:dc.w 6
		dc.l loc_46CAE
		dc.w $DC
		dc.l loc_46CAE
		dc.w $8E4
		dc.l loc_46CAE
		dc.w $F8E4
		dc.l loc_46CAE
		dc.w $4EC
		dc.l loc_46CAE
		dc.w $FCEC
		dc.l loc_46CAE
		dc.w $4FC
		dc.l loc_46CAE
		dc.w $FCFC
ChildObjDat_4701A:dc.w 0
		dc.l Obj_BossExplosionSpecial
		dc.w 0
ChildObjDat_47022:dc.w 3
		dc.l loc_46DB6
		dc.w $F0F8
		dc.l loc_46DB6
		dc.w $CF0
		dc.l loc_46DB6
		dc.w $F014
		dc.l loc_46DB6
		dc.w $100C
byte_4703C:	dc.b 1
		dc.b 1
		dc.b 2
		dc.b $FC
		dc.b 7
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b $F4
byte_47045:	dc.b 3
		dc.b 5
		dc.b 4
		dc.b 5
		dc.b 5
		dc.b $17
		dc.b $F4
byte_4704C:	dc.b 5
		dc.b $17
		dc.b 5
		dc.b $17
		dc.b 4
		dc.b 5
		dc.b 3
		dc.b 5
		dc.b $F4
byte_47055:	dc.b 7
		dc.b 1
		dc.b 7
		dc.b 1
		dc.b 8
		dc.b 1
		dc.b 9
		dc.b 3
		dc.b $A
		dc.b 3
		dc.b $B
		dc.b 3
		dc.b $F4
byte_47062:	dc.b 1
		dc.b $C
		dc.b $D
		dc.b $FC
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 0
		dc.b 1
		dc.b 1
		dc.b 2
		dc.b 2
		dc.b 3
		dc.b 3
		dc.b 4
		dc.b 4
		dc.b 5
		dc.b 4
		dc.b $F4
byte_47075:	dc.b 0
		dc.b 1
		dc.b 0
		dc.b 1
		dc.b $F4
byte_4707A:	dc.b 2
		dc.b 1
		dc.b 2
		dc.b 1
		dc.b 3
		dc.b 2
		dc.b 4
		dc.b 4
		dc.b 5
		dc.b 1
		dc.b $F4
byte_47085:	dc.b 0
		dc.b 1
		dc.b 0
		dc.b 1
		dc.b 1
		dc.b 2
		dc.b 2
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 4
		dc.b 4
		dc.b $F4
Pal_AIZMiniboss:binclude "Levels/AIZ/Palettes/Miniboss.bin"
		even
; ---------------------------------------------------------------------------

Obj_AIZ_EndBoss:
		move.w	#$4880,d0
		cmp.w	(Camera_X_pos).w,d0
		bls.s	loc_470BE
		rts
; ---------------------------------------------------------------------------

loc_470BE:
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_max_X_pos).w
		move.l	#Obj_Wait,(a0)
		move.w	#$78,$2E(a0)
		move.l	#Obj_AIZ_EndBossMusic,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.b	#1,(Boss_flag).w
		clr.b	(_unkFAA3).w
		moveq	#$6B,d0
		jsr	(Load_PLC).l
		lea	(ArtKosM_AIZEndBoss).l,a1
		move.w	#$3000,d2
		jsr	(Queue_Kos_Module).l
		lea	Pal_AIZEndBoss(pc),a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------

Obj_AIZ_EndBossMusic:
		move.l	#Obj_AIZ_EndBossMain,(a0)
		moveq	#signextendB(mus_EndBoss),d0
		jsr	(Play_Sound).l
		rts
; ---------------------------------------------------------------------------

Obj_AIZ_EndBossMain:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	AIZ_EndBossIndex(pc,d0.w),d1
		jsr	AIZ_EndBossIndex(pc,d1.w)
		btst	#6,$38(a0)
		bne.w	locret_47246
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
AIZ_EndBossIndex:dc.w Obj_AIZ_EndBossInit-AIZ_EndBossIndex
		dc.w loc_471C2-AIZ_EndBossIndex
		dc.w loc_4720C-AIZ_EndBossIndex
		dc.w loc_47248-AIZ_EndBossIndex
		dc.w loc_472C2-AIZ_EndBossIndex
		dc.w loc_471C2-AIZ_EndBossIndex
		dc.w loc_47328-AIZ_EndBossIndex
		dc.w loc_47348-AIZ_EndBossIndex
; ---------------------------------------------------------------------------

Obj_AIZ_EndBossInit:
		lea	ObjDat_AIZEndBoss(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#8,$29(a0)
		bset	#0,4(a0)
		lea	(word_4640E).l,a2
		jsr	(CreateChild1_Normal).l
		bne.s	loc_47176
		move.b	#8,$2C(a1)

loc_47176:
		lea	ChildObjDat_47B6E(pc),a2
		jsr	(CreateChild1_Normal).l

loc_47180:
		move.b	#2,5(a0)
		moveq	#signextendB(sfx_WaterfallSplash),d0
		jsr	(Play_Sound_2).l
		ori.b	#$48,$38(a0)
		move.l	#loc_471E2,$34(a0)
		clr.b	$28(a0)
		bsr.w	sub_47AEA
		bclr	#0,4(a0)
		cmpi.w	#8,$26(a0)
		bcc.s	loc_471B8
		bset	#0,4(a0)

loc_471B8:
		lea	ChildObjDat_47B84(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_471C2:
		lea	byte_47BEE(pc),a1
		jsr	(Animate_RawNoSSTMultiDelay).l
		bclr	#6,$38(a0)
		cmpi.b	#$2B,$22(a0)
		bne.s	locret_471E0
		bset	#6,$38(a0)

locret_471E0:
		rts
; ---------------------------------------------------------------------------

loc_471E2:
		move.b	#4,5(a0)
		bclr	#6,$38(a0)
		bset	#7,$A(a0)
		move.b	#$16,$28(a0)
		move.l	#loc_4721A,$34(a0)
		lea	ChildObjDat_47B8C(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4720C:
		lea	byte_47C09(pc),a1
		jsr	(Animate_RawNoSSTMultiDelay).l
		bra.w	sub_47A20
; ---------------------------------------------------------------------------

loc_4721A:
		move.b	#6,5(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4725E,$34(a0)
		move.w	#$C0,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#$10,$40(a0)
		bclr	#0,$38(a0)

locret_47246:
		rts
; ---------------------------------------------------------------------------

loc_47248:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jsr	(Obj_Wait).l
		bra.w	sub_47A20
; ---------------------------------------------------------------------------

loc_4725E:
		bset	#1,$38(a0)
		btst	#7,$38(a0)
		bne.s	loc_47282
		move.w	#4,$26(a0)
		move.w	#$2F,$2E(a0)
		move.l	#loc_472AE,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47282:
		move.w	#$BF,$2E(a0)
		move.l	#loc_47292,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47292:
		move.b	#8,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_472CC,$34(a0)
		andi.b	#-$B,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_472AE:
		st	(_unkFAA2).w
		move.w	#$8F,$2E(a0)
		move.l	#loc_47292,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_472C2:
		bsr.w	sub_47A20
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_472CC:
		move.b	#$A,5(a0)
		moveq	#signextendB(sfx_WaterfallSplash),d0
		jsr	(Play_Sound_2).l
		move.l	#loc_472FC,$34(a0)
		clr.b	$28(a0)
		bsr.w	sub_47AEA
		lea	ChildObjDat_47B84(pc),a2
		jsr	(CreateChild1_Normal).l
		move.b	#2,$2C(a1)
		rts
; ---------------------------------------------------------------------------

loc_472FC:
		move.b	#$C,5(a0)
		bset	#7,$38(a0)
		beq.s	loc_47310
		move.b	#$E,5(a0)

loc_47310:
		move.l	#loc_47354,$34(a0)
		bclr	#7,$A(a0)
		move.b	#0,$22(a0)
		bra.w	loc_478AC
; ---------------------------------------------------------------------------

loc_47328:
		move.w	(Camera_max_X_pos).w,d0
		addq.w	#2,d0
		cmpi.w	#$49A0,d0
		bcc.s	loc_47338
		move.w	d0,(Camera_max_X_pos).w

loc_47338:
		move.w	(Camera_min_X_pos).w,d0
		addq.w	#2,d0
		cmpi.w	#$48E0,d0
		bcc.s	loc_47348
		move.w	d0,(Camera_min_X_pos).w

loc_47348:
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_47354:
		clr.w	$18(a0)
		clr.w	$1A(a0)
		bra.w	loc_47180
; ---------------------------------------------------------------------------

loc_47360:
		move.l	#loc_47390,$34(a0)
		st	(_unkFAA3).w
		move.l	#Obj_Wait,(a0)
		bset	#4,$38(a0)
		move.w	#$7F,$2E(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		lea	ChildObjDat_47BBC(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_47390:
		move.l	#loc_473C6,(a0)

loc_47396:
		st	(_unkFAA8).w
		clr.b	(Boss_flag).w
		jsr	(Obj_PlayLevelMusic).l
		lea	(PLC_EggCapsule).l,a1
		jsr	(Load_PLC_Raw).l
		lea	ChildObjDat_47BE2(pc),a2
		jsr	(CreateChild6_Simple).l
		bset	#1,4(a1)
		jmp	(PLCLoad_AnimalsAndExplosion).l
; ---------------------------------------------------------------------------

loc_473C6:
		tst.b	(_unkFAA8).w
		bne.w	locret_47246
		move.l	#loc_47402,(a0)
		clr.b	(_unkFAA8).w
		jsr	(Restore_PlayerControl).l
		lea	(Player_2).w,a1
		jsr	(Restore_PlayerControl2).l
		clr.w	(Ctrl_1_logical).w
		st	(Ctrl_1_locked).w
		move.w	#$4A38,(Target_camera_max_X_pos).w
		lea	(Child6_IncLevX).l,a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_47402:
		move.b	#5,(Flying_picking_Sonic_timer).w
		lea	(Player_1).w,a1
		cmpi.w	#$4AD8,$10(a1)
		bcc.s	loc_4741C
		move.w	#$808,(Ctrl_1_logical).w
		rts
; ---------------------------------------------------------------------------

loc_4741C:
		move.l	#loc_4744A,(a0)
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		lea	ChildObjDat_47BE8(pc),a2
		jsr	(CreateChild6_Simple).l
		move.b	#4,$2C(a1)
		lea	(PLC_Explosion).l,a1
		jmp	(Load_PLC_Raw).l
; ---------------------------------------------------------------------------

loc_4744A:
		move.b	#5,(Flying_picking_Sonic_timer).w
		tst.b	(Ctrl_1_locked).w
		beq.s	loc_4745E
		move.w	#$101,(Ctrl_1_logical).w
		rts
; ---------------------------------------------------------------------------

loc_4745E:
		move.l	#loc_47466,(a0)
		rts
; ---------------------------------------------------------------------------

loc_47466:
		move.b	#5,(Flying_picking_Sonic_timer).w
		cmpi.w	#$340,(Player_1+y_pos).w
		bcc.s	loc_47476
		rts
; ---------------------------------------------------------------------------

loc_47476:
		move.w	#$100,d0
		jsr	(StartNewLevel).l
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_47486:
		jsr	(Refresh_ChildPositionAdjusted).l
		bsr.w	Child_SyncDraw
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_474B2(pc,d0.w),d1
		jsr	off_474B2(pc,d1.w)
		btst	#6,$38(a0)
		bne.w	locret_47246
		bsr.w	sub_47AFA
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_474B2:	dc.w loc_474BE-off_474B2
		dc.w loc_474E6-off_474B2
		dc.w loc_47518-off_474B2
		dc.w loc_4752E-off_474B2
		dc.w loc_47546-off_474B2
		dc.w loc_47568-off_474B2
; ---------------------------------------------------------------------------

loc_474BE:
		lea	word_47B36(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		moveq	#0,d0
		tst.b	$2C(a0)
		beq.s	loc_474DC
		move.b	#$2A,$22(a0)
		move.w	#$280,8(a0)

loc_474DC:
		lea	ChildObjDat_47B7C(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_474E6:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_474F4
		rts
; ---------------------------------------------------------------------------

loc_474F4:
		tst.b	$2C(a0)
		bne.s	loc_47510
		move.b	#4,5(a0)
		move.w	#4,$2E(a0)
		move.l	#loc_4751E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47510:
		move.b	#8,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_47518:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4751E:
		move.b	#6,5(a0)
		move.l	#loc_4753E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4752E:
		bclr	#6,$38(a0)
		lea	byte_47C14(pc),a1
		jmp	(Animate_RawNoSSTMultiDelay).l
; ---------------------------------------------------------------------------

loc_4753E:
		move.b	#8,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_47546:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_47554
		rts
; ---------------------------------------------------------------------------

loc_47554:
		move.b	#$A,5(a0)
		bset	#1,$38(a0)
		move.w	$26(a1),$26(a0)
		rts
; ---------------------------------------------------------------------------

loc_47568:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	loc_47576
		rts
; ---------------------------------------------------------------------------

loc_47576:
		move.b	#2,5(a0)
		bclr	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_47584:
		move.l	#Obj_FlickerMove,(a0)
		move.b	#1,$22(a0)
		clr.b	$28(a0)
		moveq	#$C,d0
		jmp	(Set_IndexedVelocity).l
; ---------------------------------------------------------------------------

loc_4759C:
		bsr.w	Child_SyncDraw
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_475C4(pc,d0.w),d1
		jsr	off_475C4(pc,d1.w)
		jsr	(Refresh_ChildPositionAdjusted).l
		btst	#6,$38(a0)
		bne.w	locret_47246
		jmp	(Child_Draw_Sprite).l
; ---------------------------------------------------------------------------
off_475C4:	dc.w loc_475CC-off_475C4
		dc.w loc_475D8-off_475C4
		dc.w loc_47618-off_475C4
		dc.w loc_47664-off_475C4
; ---------------------------------------------------------------------------

loc_475CC:
		lea	word_47B3C(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		rts
; ---------------------------------------------------------------------------

loc_475D8:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_475E6
		rts
; ---------------------------------------------------------------------------

loc_475E6:
		move.b	#4,5(a0)
		move.b	#1,$23(a0)
		bset	#1,$38(a0)
		move.l	#loc_47636,$34(a0)
		move.w	$26(a1),$26(a0)
		clr.w	$2E(a0)
		tst.b	$2C(a1)
		beq.s	locret_47616
		move.w	#$4F,$2E(a0)

locret_47616:
		rts
; ---------------------------------------------------------------------------

loc_47618:
		subq.w	#1,$2E(a0)
		bpl.s	locret_47634
		move.w	#3,$2E(a0)
		bsr.w	sub_47916
		subq.b	#1,$23(a0)
		bpl.s	locret_47634
		movea.l	$34(a0),a1
		jsr	(a1)

locret_47634:
		rts
; ---------------------------------------------------------------------------

loc_47636:
		move.b	#6,5(a0)
		movea.w	$46(a0),a1
		bclr	#1,$38(a1)
		move.w	#$5F,$2E(a0)
		move.l	#loc_4766A,$34(a0)
		bra.w	loc_4799C
; ---------------------------------------------------------------------------

loc_47658:
		move.b	#2,5(a0)
		clr.b	$39(a0)
		rts
; ---------------------------------------------------------------------------

loc_47664:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4766A:
		move.b	#4,5(a0)
		move.b	#1,$23(a0)
		bclr	#1,$38(a0)
		clr.w	$2E(a0)
		move.l	#loc_47658,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4768A:
		lea	word_47B42(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#loc_476E4,(a0)
		bset	#4,$2B(a0)
		move.l	#loc_47702,$34(a0)
		movea.w	$46(a0),a1
		movea.w	$46(a1),a2
		movea.w	$46(a2),a2
		move.w	a2,$44(a0)
		move.w	$26(a1),d0
		move.w	d0,$26(a0)
		move.l	off_476D4(pc,d0.w),$30(a0)
		cmpi.w	#8,d0
		bcc.s	locret_476D2
		bset	#0,4(a0)

locret_476D2:
		rts
; ---------------------------------------------------------------------------
off_476D4:	dc.l word_47C1F
		dc.l word_47C49
		dc.l word_47C49
		dc.l word_47C1F
; ---------------------------------------------------------------------------

loc_476E4:
		movea.w	$44(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4770C
		jsr	(Refresh_ChildPosition).l
		jsr	(Animate_Raw).l
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_47702:
		lea	ChildObjDat_47BAC(pc),a2
		jsr	(CreateChild1_Normal).l

loc_4770C:
		bset	#6,$38(a0)
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_47718:
		lea	word_47B48(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		bset	#4,$2B(a0)
		moveq	#signextendB(sfx_Projectile),d0
		jsr	(Play_Sound_2).l
		move.b	#$C,$1E(a0)
		move.w	#$9F,$2E(a0)
		move.l	#loc_4774E,(a0)
		move.l	#loc_4778C,$34(a0)
		bra.w	loc_479B8
; ---------------------------------------------------------------------------

loc_4774E:
		tst.w	$18(a0)
		beq.s	loc_4775A
		jsr	(ObjHitFloor_DoRoutine).l

loc_4775A:
		jsr	(Animate_Raw).l
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bmi.s	loc_47786
		move.b	(V_int_run_count+3).w,d0
		andi.b	#3,d0
		bne.s	loc_47780
		lea	ChildObjDat_47BB4(pc),a2
		jsr	(CreateChild1_Normal).l

loc_47780:
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_47786:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4778C:
		move.l	#loc_4775A,(a0)
		move.l	#byte_47C7F,$30(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_477A0:
		lea	word_47B4E(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#loc_477D0,(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		move.l	#byte_47C85,$30(a0)
		tst.w	$18(a0)
		bne.s	locret_477CE
		move.l	#byte_47C8E,$30(a0)

locret_477CE:
		rts
; ---------------------------------------------------------------------------

loc_477D0:
		jsr	(Animate_RawMultiDelay).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_477DC:
		lea	ObjDat_AIZEndBoss2(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_477F6,(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_477F6:
		lea	byte_47C97(pc),a1
		jsr	(Animate_RawNoSSTMultiDelay).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_47806:
		lea	word_47B54(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		move.l	#loc_47830,(a0)
		tst.b	$2C(a0)
		bne.s	loc_47826
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47826:
		move.l	#loc_4784A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47830:
		lea	byte_47CA0(pc),a1
		jsr	(Animate_RawNoSSTMultiDelayFlipX).l
		cmpi.b	#$2B,$22(a0)
		beq.w	locret_47246
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4784A:
		move.l	#loc_47860,(a0)
		move.w	#$800,$1A(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47860:
		jsr	(MoveSprite2).l
		lea	byte_47CBB(pc),a1
		jsr	(Animate_RawNoSSTMultiDelayFlipX).l
		cmpi.b	#$2B,$22(a0)
		beq.w	locret_47246
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_47880:
		lea	word_47B68(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#Obj_FlickerMove,(a0)
		move.b	$2C(a0),d0
		lsr.b	#1,d0
		addi.b	#$32,d0
		move.b	d0,$22(a0)
		moveq	#0,d0
		jsr	(Set_IndexedVelocity).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_478AC:
		jsr	(Random_Number).l
		andi.w	#$C,d0
		move.w	$26(a0),d1
		move.w	d0,$26(a0)
		cmp.w	d1,d0
		beq.s	loc_478AC
		lea	word_47906(pc,d0.w),a1
		moveq	#0,d2
		move.w	(a1)+,d2
		swap	d2
		sub.l	$10(a0),d2
		add.l	d2,d2
		swap	d2
		move.w	d2,$18(a0)
		moveq	#0,d3
		move.w	(a1)+,d3
		swap	d3
		sub.l	$14(a0),d3
		add.l	d3,d3
		swap	d3
		move.w	d3,$1A(a0)
		move.w	#$7F,$2E(a0)
		tst.w	d2
		beq.s	locret_47904
		bclr	#0,4(a0)
		tst.w	d2
		bmi.s	locret_47904
		bset	#0,4(a0)

locret_47904:
		rts
; ---------------------------------------------------------------------------
word_47906:	dc.w  $4938,  $1D0
		dc.w  $4980,  $1A0
		dc.w  $4A40,  $1A0
		dc.w  $4A88,  $1D0

; =============== S U B R O U T I N E =======================================


sub_47916:
		move.w	$26(a0),d0
		moveq	#0,d1
		eori.w	#$C,d0
		beq.s	loc_4792C
		cmpi.w	#$C,d0
		beq.s	loc_4792C
		addi.w	#$10,d1

loc_4792C:
		moveq	#0,d2
		move.b	$39(a0),d2
		add.w	d2,d1
		lea	byte_4794C(pc,d1.w),a1
		move.b	(a1)+,$42(a0)
		move.b	(a1)+,$43(a0)
		move.b	(a1)+,$22(a0)
		addq.b	#4,d2
		move.b	d2,$39(a0)
		rts
; End of function sub_47916

; ---------------------------------------------------------------------------
byte_4794C:	dc.b  $E8,   8,   5,   0
		dc.b  $E8,   8,   5,   0
		dc.b  $E4,   0,   4,   0
		dc.b  $E4,   0,   4,   0
		dc.b  $E8,   8,   5,   0
		dc.b  $F0, $10,   6,   0
		dc.b  $E8,   8,   5,   0
		dc.b  $E4,   0,   4,   0

; =============== S U B R O U T I N E =======================================


Child_SyncDraw:
		movea.w	$46(a0),a1
		btst	#6,$38(a1)
		bne.s	loc_47994
		bclr	#6,$38(a0)
		bset	#7,$A(a0)
		btst	#7,$A(a1)
		bne.s	locret_47992
		bclr	#7,$A(a0)

locret_47992:
		rts
; ---------------------------------------------------------------------------

loc_47994:
		bset	#6,$38(a0)
		rts
; End of function Child_SyncDraw

; ---------------------------------------------------------------------------

loc_4799C:
		move.w	$26(a0),d0
		lsr.w	#1,d0
		move.w	off_479B0(pc,d0.w),d0
		lea	off_479B0(pc,d0.w),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------
off_479B0:	dc.w ChildObjDat_47B94-off_479B0
		dc.w ChildObjDat_47B9C-off_479B0
		dc.w ChildObjDat_47B9C-off_479B0
		dc.w ChildObjDat_47BA4-off_479B0
; ---------------------------------------------------------------------------

loc_479B8:
		movea.w	$46(a0),a1
		move.w	$26(a1),d0
		cmpi.w	#8,d0
		bcc.s	loc_479CC
		bset	#0,4(a0)

loc_479CC:
		move.l	off_479F0(pc,d0.w),$30(a0)
		lea	word_47A00(pc,d0.w),a1
		move.w	(a1)+,d1
		add.w	d1,$10(a0)
		move.w	(a1)+,d1
		add.w	d1,$14(a0)
		lea	word_47A10(pc,d0.w),a1
		move.w	(a1)+,$18(a0)
		move.w	(a1)+,$1A(a0)
		rts
; ---------------------------------------------------------------------------
off_479F0:	dc.l byte_47C73
		dc.l byte_47C79
		dc.l byte_47C79
		dc.l byte_47C73
word_47A00:	dc.w    $14,   $14
		dc.w      0,   $18
		dc.w      0,   $18
		dc.w  $FFEC,   $14
word_47A10:	dc.w   $300,  $300
		dc.w      0,  $400
		dc.w      0,  $400
		dc.w  $FD00,  $300

; =============== S U B R O U T I N E =======================================


sub_47A20:
		tst.b	$28(a0)
		bne.s	locret_47A72
		tst.b	$29(a0)
		beq.s	loc_47A74
		tst.b	$20(a0)
		bne.s	loc_47A40
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_47A40:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_47A54
		addi.w	#$E,d0

loc_47A54:
		bsr.w	sub_47A9A
		subq.b	#1,$20(a0)
		bne.s	locret_47A72
		bclr	#6,$2A(a0)
		cmpi.b	#0,$22(a0)
		bne.s	locret_47A72
		move.b	$25(a0),$28(a0)

locret_47A72:
		rts
; ---------------------------------------------------------------------------

loc_47A74:
		move.l	#Wait_Draw,(a0)
		bclr	#6,$38(a0)
		bset	#7,$A(a0)
		move.b	#0,$22(a0)
		move.l	#loc_47360,$34(a0)
		jmp	(BossDefeated_StopTimer).l
; End of function sub_47A20


; =============== S U B R O U T I N E =======================================


sub_47A9A:
		lea	word_47AC0(pc),a1
		lea	word_47ACE(pc,d0.w),a2
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		rts
; End of function sub_47A9A

; ---------------------------------------------------------------------------
word_47AC0:	dc.w Normal_palette_line_2+$08, Normal_palette_line_2+$0E, Normal_palette_line_2+$12
		dc.w Normal_palette_line_2+$14, Normal_palette_line_2+$16, Normal_palette_line_2+$1A
		dc.w Normal_palette_line_2+$1C
word_47ACE:	dc.w   $222,     8,   $4C,     6,   $20,  $A24,  $622
		dc.w   $AAA,  $AAA,  $AAA,  $CCC,  $EEE,  $666,  $888

; =============== S U B R O U T I N E =======================================


sub_47AEA:
		moveq	#0,d0
		bsr.s	sub_47A9A
		bclr	#6,$2A(a0)
		clr.b	$20(a0)
		rts
; End of function sub_47AEA


; =============== S U B R O U T I N E =======================================


sub_47AFA:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_47B08
		rts
; ---------------------------------------------------------------------------

loc_47B08:
		move.l	#Wait_Draw,(a0)
		bset	#7,$2A(a0)
		move.b	#1,$22(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_47584,$34(a0)
		rts
; End of function sub_47AFA

; ---------------------------------------------------------------------------
ObjDat_AIZEndBoss:dc.l Map_AIZEndBoss
		dc.w $A180
		dc.w $280
		dc.b $28
		dc.b $20
		dc.b 0
		dc.b $10
word_47B36:	dc.w $200
		dc.b $24
		dc.b $14
		dc.b 1
		dc.b 0
word_47B3C:	dc.w $180
		dc.b $C
		dc.b $C
		dc.b 4
		dc.b 0
word_47B42:	dc.w $100
		dc.b 8
		dc.b 4
		dc.b $B
		dc.b $97
word_47B48:	dc.w $100
		dc.b $14
		dc.b $18
		dc.b $F
		dc.b $9A
word_47B4E:	dc.w $100
		dc.b 8
		dc.b 8
		dc.b $18
		dc.b 0
word_47B54:	dc.w $8180
		dc.w $100
		dc.b $30
		dc.b $30
		dc.b $24
		dc.b 0
ObjDat_AIZEndBoss2:dc.l	Map_AIZEndBoss
		dc.w $8180
		dc.w $100
		dc.b $18
		dc.b $10
		dc.b $21
		dc.b 0
word_47B68:	dc.w $180
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
ChildObjDat_47B6E:dc.w 1
		dc.l loc_47486
		dc.w $14FC
		dc.l loc_47486
		dc.w $ECFC
ChildObjDat_47B7C:dc.w 0
		dc.l loc_4759C
		dc.w $E400
ChildObjDat_47B84:dc.w 0
		dc.l loc_47806
		dc.w 0
ChildObjDat_47B8C:dc.w 0
		dc.l loc_477DC
		dc.w $D0
ChildObjDat_47B94:dc.w 0
		dc.l loc_4768A
		dc.w $305
ChildObjDat_47B9C:dc.w 0
		dc.l loc_4768A
		dc.w 7
ChildObjDat_47BA4:dc.w 0
		dc.l loc_4768A
		dc.w $FD05
ChildObjDat_47BAC:dc.w 0
		dc.l loc_47718
		dc.w 0
ChildObjDat_47BB4:dc.w 0
		dc.l loc_477A0
		dc.w 0
ChildObjDat_47BBC:dc.w 5
		dc.l loc_47880
		dc.w $F0F0
		dc.l loc_47880
		dc.w $10F0
		dc.l loc_47880
		dc.w $F008
		dc.l loc_47880
		dc.w $1008
		dc.l loc_47880
		dc.w $F418
		dc.l loc_47880
		dc.w $C18
ChildObjDat_47BE2:dc.w 0
		dc.l Obj_81
ChildObjDat_47BE8:dc.w 0
		dc.l Obj_CutsceneKnuckles
byte_47BEE:	dc.b  $2B,   0
		dc.b  $2B,   0
		dc.b  $2B,   0
		dc.b    0,   0
		dc.b  $2B,   0
		dc.b  $2B,   0
		dc.b    0,   0
		dc.b  $2B,   0
		dc.b  $2B,   0
		dc.b    0,   0
		dc.b  $2B,   0
		dc.b  $2B,   0
		dc.b    0,   0
		dc.b  $F4
byte_47C09:	dc.b  $1B,   0
		dc.b  $1B,   4
		dc.b  $1C,   5
		dc.b  $1D,   6
		dc.b    0,   0
		dc.b  $F4
byte_47C14:	dc.b  $1E,   0
		dc.b  $1E,   4
		dc.b  $1F,   5
		dc.b  $20,   6
		dc.b    1,   0
		dc.b  $F4
word_47C1F:	dc.w 7
		dc.w $2B07
		dc.w $2B08
		dc.w $2B08
		dc.w $2B09
		dc.w $2B09
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2B0A
		dc.w $2BF4
word_47C49:	dc.w $B
		dc.w $2B0B
		dc.w $2B0C
		dc.w $2B0C
		dc.w $2B0D
		dc.w $2B0D
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2B0E
		dc.w $2BF4
byte_47C73:	dc.b 1
		dc.b $26
		dc.b $27
		dc.b $28
		dc.b $29
		dc.b $FC
byte_47C79:	dc.b 1
		dc.b $16
		dc.b $17
		dc.b $2F
		dc.b $30
		dc.b $FC
byte_47C7F:	dc.b 1
		dc.b $10
		dc.b $11
		dc.b $2D
		dc.b $2E
		dc.b $FC
byte_47C85:	dc.b  $12,   0
		dc.b  $12,   9
		dc.b  $13,   2
		dc.b  $14,   2
		dc.b  $F4
byte_47C8E:	dc.b  $18,   0
		dc.b  $18,   9
		dc.b  $19,   2
		dc.b  $1A,   2
		dc.b  $F4
byte_47C97:	dc.b  $21,   0
		dc.b  $21,   4
		dc.b  $22,   5
		dc.b  $23,   6
		dc.b  $F4
byte_47CA0:	dc.b  $2B,   0
		dc.b  $24,   0
		dc.b  $64,   0
		dc.b  $6B,   0
		dc.b  $2C,   0
		dc.b  $6C,   0
		dc.b  $6B,   0
		dc.b  $24,   0
		dc.b  $64,   0
		dc.b  $6B,   0
		dc.b  $2C,   0
		dc.b  $6C,   0
		dc.b  $6B,   0
		dc.b  $F4
byte_47CBB:	dc.b  $2B,   0
		dc.b  $24,   0
		dc.b  $64,   0
		dc.b  $6B,   0
		dc.b  $2C,   0
		dc.b  $6C,   0
		dc.b  $6B,   0
		dc.b  $31,   0
		dc.b  $71,   0
		dc.b  $6B,   0
		dc.b  $31,   0
		dc.b  $71,   0
		dc.b  $6B,   0
		dc.b  $F4
Pal_AIZEndBoss:	binclude "Levels/AIZ/Palettes/End Boss.bin"
		even
; ---------------------------------------------------------------------------

Obj_HCZMiniboss:
		lea	word_47D28(pc),a1
		jsr	(Check_CameraInRange).l
		move.l	#loc_47D30,(a0)
		move.b	#1,(Boss_flag).w
		st	(Events_bg+$16).w
		moveq	#$5B,d0
		jsr	(Load_PLC).l
		move.w	#$300,(Camera_min_Y_pos).w
		lea	ChildObjDat_48BB2(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------
word_47D28:	dc.w   $300,  $400, $3500, $3700
; ---------------------------------------------------------------------------

loc_47D30:
		btst	#0,$38(a0)
		bne.s	loc_47D54
		move.w	#$638,d0
		cmp.w	(Camera_Y_pos).w,d0
		bhi.s	loc_47D54
		bset	#0,$38(a0)
		move.w	d0,(Camera_min_Y_pos).w
		move.w	d0,(Camera_max_Y_pos).w
		move.w	d0,(Camera_target_max_Y_pos).w

loc_47D54:
		btst	#1,$38(a0)
		move.w	#$3680,d0
		move.w	(Camera_X_pos).w,d1
		move.w	d1,(Camera_min_X_pos).w
		cmp.w	d1,d0
		bhi.s	loc_47D78
		bset	#1,$38(a0)
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_max_X_pos).w

loc_47D78:
		cmpi.b	#3,$38(a0)
		beq.s	loc_47D82
		rts
; ---------------------------------------------------------------------------

loc_47D82:
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.w	$14(a0),$44(a0)
		move.l	#Obj_Wait,(a0)
		move.w	#$78,$2E(a0)
		move.l	#loc_47DBA,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		bset	#3,$38(a0)
		lea	Pal_HCZMiniboss(pc),a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------

loc_47DBA:
		move.l	#Obj_HCZ_MinibossLoop,(a0)
		moveq	#signextendB(mus_EndBoss),d0
		jsr	(Play_Sound).l

locret_47DC8:
		rts
; ---------------------------------------------------------------------------

Obj_HCZ_MinibossLoop:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_47DE2(pc,d0.w),d1
		jsr	off_47DE2(pc,d1.w)
		bsr.w	sub_48A8C
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
off_47DE2:	dc.w loc_47DFA-off_47DE2
		dc.w loc_47E34-off_47DE2
		dc.w loc_47E5A-off_47DE2
		dc.w loc_47E34-off_47DE2
		dc.w loc_47E5A-off_47DE2
		dc.w loc_47EC6-off_47DE2
		dc.w loc_47F12-off_47DE2
		dc.w loc_47F48-off_47DE2
		dc.w loc_47F60-off_47DE2
		dc.w loc_47FAA-off_47DE2
		dc.w loc_47E5A-off_47DE2
		dc.w loc_48066-off_47DE2
; ---------------------------------------------------------------------------

loc_47DFA:
		lea	ObjDat3_48B34(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#6,$29(a0)
		move.b	#$28,$1E(a0)
		bset	#3,$38(a0)
		move.w	#$100,$1A(a0)
		move.w	#$DF,$2E(a0)
		move.l	#loc_47E40,$34(a0)
		lea	Child1_HCZMiniboss_RocketsEngine(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_47E34:
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_47E40:
		move.b	#4,5(a0)
		clr.w	$1A(a0)
		move.w	#$3B,$2E(a0)
		move.l	#loc_47E60,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47E5A:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_47E60:
		move.b	#6,5(a0)
		move.w	#-$400,$1A(a0)
		move.w	#$37,$2E(a0)
		move.l	#loc_47E7C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47E7C:
		move.b	#8,5(a0)
		move.w	#$3B,$2E(a0)
		move.l	#loc_47E92,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47E92:
		bsr.w	sub_48916

loc_47E96:
		move.b	#$A,5(a0)
		moveq	#signextendB(sfx_Roll),d0
		jsr	(Play_Sound_2).l
		bset	#6,$38(a0)
		bclr	#7,$38(a0)
		move.w	#$400,$1A(a0)
		move.w	#$47,$2E(a0)
		move.l	#loc_47EE8,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47EC6:
		btst	#7,$38(a0)
		bne.s	loc_47EDC
		move.w	$14(a0),d0
		cmp.w	(Water_level).w,d0
		bcs.s	loc_47EDC
		bsr.w	sub_488FA

loc_47EDC:
		jsr	(MoveSprite2).l
		jmp	(ObjHitFloor_DoRoutine).l
; ---------------------------------------------------------------------------

loc_47EE8:
		move.b	#$C,5(a0)
		move.w	$40(a0),$18(a0)
		neg.w	$40(a0)
		clr.w	$1A(a0)
		move.w	#$2F,$2E(a0)
		move.l	#loc_47F28,$34(a0)
		bclr	#7,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_47F12:
		jsr	(MoveSprite2).l
		jsr	(ObjCheckFloorDist).l
		add.w	d1,$14(a0)
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_47F28:
		move.w	#-$400,$1A(a0)
		clr.w	$18(a0)
		subq.b	#1,$39(a0)
		bmi.s	loc_47F40
		move.b	#$E,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_47F40:
		move.b	#$10,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_47F48:
		bsr.w	sub_488E4
		jsr	(MoveSprite2).l
		move.w	$14(a0),d0
		cmp.w	$44(a0),d0
		bls.w	loc_47E96
		rts
; ---------------------------------------------------------------------------

loc_47F60:
		bsr.w	sub_488E4
		jsr	(MoveSprite2).l
		move.w	$44(a0),d0
		addi.w	#$108,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_47F7A
		rts
; ---------------------------------------------------------------------------

loc_47F7A:
		move.b	#$12,5(a0)
		bclr	#7,$38(a0)
		move.w	d0,$14(a0)
		move.w	#$180,d0
		tst.w	$40(a0)
		bpl.s	loc_47F96
		neg.w	d0

loc_47F96:
		move.w	d0,$18(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_47FBC,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47FAA:
		addi.w	#$20,$1A(a0)
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_47FBC:
		move.b	#$14,5(a0)
		moveq	#signextendB(sfx_DoorClose),d0
		jsr	(Play_Sound_2).l
		bclr	#3,$38(a0)
		move.w	#$9F,$2E(a0)
		move.l	#loc_47FE4,$34(a0)
		clr.w	$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_47FE4:
		bset	#2,$38(a0)
		move.w	#$17F,$2E(a0)
		move.l	#loc_47FFA,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_47FFA:
		bclr	#2,$38(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_48010,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_48010:
		bset	#3,$38(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_48010,$34(a0)
		move.l	#loc_4802E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4802E:
		move.b	#2,5(a0)
		move.w	#-$20,$1A(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4804A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4804A:
		move.b	#$16,5(a0)
		bclr	#6,$38(a0)
		move.w	#-$400,$1A(a0)
		moveq	#signextendB(sfx_LavaBall),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_48066:
		jsr	(MoveSprite2).l
		move.w	$14(a0),d0
		cmp.w	$44(a0),d0
		bls.w	loc_47E92
		rts
; ---------------------------------------------------------------------------

loc_4807A:
		st	(_unkFAA2).w
		jsr	(Obj_EndSignControl).l
		jsr	(Create_New_Sprite).l
		bne.s	loc_48092
		move.l	#loc_4809C,(a1)

loc_48092:
		lea	ChildObjDat_48BEE(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4809C:
		tst.b	(_unkFAA8).w
		bne.w	locret_47DC8
		move.l	#loc_480C0,(a0)
		clr.w	(Ctrl_1_logical).w
		clr.w	(Ctrl_2_logical).w
		st	(Ctrl_1_locked).w
		st	(Ctrl_2_locked).w
		move.b	#-$80,(Player_1+object_control).w

loc_480C0:
		tst.b	(End_of_level_flag).w
		beq.w	locret_47DC8
		move.l	#loc_480F0,(a0)
		lea	ChildObjDat_48BE8(pc),a2
		tst.b	(Player_mode+1).w
		beq.s	loc_480DC
		lea	word_48BE2(pc),a2

loc_480DC:
		jsr	(CreateChild6_Simple).l
		move.w	#$2F,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)

loc_480F0:
		btst	#0,$38(a0)
		beq.w	locret_47DC8
		lea	ChildObjDat_48BDC(pc),a2
		jsr	(CreateChild6_Simple).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

Obj_HCZMiniboss_Rockets:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_48120(pc,d0.w),d1
		jsr	off_48120(pc,d1.w)
		moveq	#$20,d0
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------
off_48120:	dc.w loc_4812E-off_48120
		dc.w loc_48148-off_48120
		dc.w loc_4819C-off_48120
		dc.w loc_481BC-off_48120
		dc.w loc_481CA-off_48120
		dc.w loc_48254-off_48120
		dc.w loc_4826E-off_48120
; ---------------------------------------------------------------------------

loc_4812E:
		lea	ObjDat3_48B40(pc),a1
		jsr	(SetUp_ObjAttributes).l
		bset	#6,$38(a0)
		lea	ChildObjDat_48BBA(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_48148:
		clr.b	$28(a0)
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		beq.w	locret_47DC8
		move.b	#4,5(a0)
		move.b	#1,$40(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_481A6,$34(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_48194(pc,d0.w),$3C(a0)
		cmpi.b	#4,d0
		bcs.s	locret_48192
		bset	#0,4(a0)
		move.b	#6,5(a0)

locret_48192:
		rts
; ---------------------------------------------------------------------------
word_48194:	dc.w 0
		dc.w $8080
		dc.w $8000
		dc.w $80
; ---------------------------------------------------------------------------

loc_4819C:
		bsr.w	sub_4895E
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_481A6:
		move.b	#8,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_481D4,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_481BC:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_481C2:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_481CA:
		bsr.w	sub_4895E
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_481D4:
		move.b	#2,$40(a0)
		move.b	#-$75,$28(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_481F0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_481F0:
		move.b	#$A,5(a0)
		move.b	#4,$40(a0)
		move.l	#loc_48266,$34(a0)
		bclr	#6,$38(a0)
		moveq	#signextendB(sfx_LevelProjectile),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_48214:
		move.b	#2,$40(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4822A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4822A:
		move.b	#6,5(a0)
		cmpi.b	#4,$2C(a0)
		bcs.s	loc_4823E
		move.b	#4,5(a0)

loc_4823E:
		move.b	#1,$40(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_481C2,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_48254:
		bsr.w	sub_4895E
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.w	locret_47DC8

loc_48266:
		move.b	#$C,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4826E:
		bsr.w	sub_4895E
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.b	#1,d0
		move.b	byte_482AC(pc,d0.w),d1
		cmp.b	$3C(a0),d1
		beq.s	loc_48286
		rts
; ---------------------------------------------------------------------------

loc_48286:
		move.b	#8,5(a0)
		clr.b	$28(a0)
		move.b	#2,$40(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_48214,$34(a0)
		bset	#6,$38(a0)
		rts
; ---------------------------------------------------------------------------
byte_482AC:	dc.b  $80,   0, $C0, $40
; ---------------------------------------------------------------------------

loc_482B0:
		lea	word_48B4C(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		move.l	#loc_482C2,(a0)
		rts
; ---------------------------------------------------------------------------

loc_482C2:
		bsr.w	sub_489EC

loc_482C6:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_482EC
		btst	#6,$38(a1)
		bne.w	locret_47DC8
		btst	#0,(V_int_run_count+3).w
		bne.w	locret_47DC8
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_482EC:
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

Obj_HCZMiniboss_Engine:
		lea	word_48B54(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		move.l	#loc_48304,(a0)
		rts
; ---------------------------------------------------------------------------

loc_48304:
		jsr	(Refresh_ChildPosition).l
		bra.s	loc_482C6
; ---------------------------------------------------------------------------

loc_4830C:
		lea	ObjDat4_48B74(pc),a1
		jsr	(SetUp_ObjAttributesSlotted).l
		move.w	(Water_level).w,$14(a0)
		move.l	#Obj_Wait,(a0)
		tst.b	$2C(a0)
		beq.s	loc_4832E
		move.w	#7,$2E(a0)

loc_4832E:
		move.l	#loc_48338,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_48338:
		move.l	#loc_48348,(a0)
		move.l	#Go_Delete_SpriteSlotted3,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_48348:
		lea	byte_48C7F(pc),a1
		jsr	(Animate_RawNoSST).l
		lea	DPLCPtr_48C28(pc),a2
		jsr	(Perform_DPLC).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_48362:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4837A(pc,d0.w),d1
		jsr	off_4837A(pc,d1.w)
		bsr.w	sub_487A4
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
off_4837A:	dc.w loc_48386-off_4837A
		dc.w loc_483A0-off_4837A
		dc.w loc_483C0-off_4837A
		dc.w loc_483F6-off_4837A
		dc.w loc_4841C-off_4837A
		dc.w loc_4845C-off_4837A
; ---------------------------------------------------------------------------

loc_48386:
		lea	ObjDat3_48B5C(pc),a1
		jsr	(SetUp_ObjAttributes).l
		addi.w	#$148,$14(a0)
		clr.w	$42(a0)
		clr.w	$44(a0)
		rts
; ---------------------------------------------------------------------------

loc_483A0:
		tst.b	4(a0)
		bpl.w	locret_47DC8
		move.b	#4,5(a0)
		lea	Pal_HCZMinibossWater(pc),a1
		lea	(Water_palette_line_2).w,a2
		moveq	#7,d0

loc_483B8:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_483B8
		rts
; ---------------------------------------------------------------------------

loc_483C0:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		beq.w	locret_47DC8
		move.b	#6,5(a0)
		move.l	#byte_48C30,$30(a0)
		move.l	#loc_48400,$34(a0)
		moveq	#signextendB(sfx_FanBig),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_48BD6(pc),a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_483F6:
		lea	byte_48C30(pc),a1
		jmp	(Animate_RawNoSSTMultiDelay).l
; ---------------------------------------------------------------------------

loc_48400:
		move.b	#8,5(a0)
		move.l	#byte_48C30,$30(a0)
		move.l	#loc_48466,$34(a0)
		clr.b	$29(a0)
		rts
; ---------------------------------------------------------------------------

loc_4841C:
		bsr.w	sub_487FC
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		beq.s	loc_4843E
		moveq	#signextendB(sfx_BossRotate),d0
		jsr	(sub_542A6).l
		lea	byte_48C55(pc),a1
		jmp	(Animate_RawNoSST).l
; ---------------------------------------------------------------------------

loc_4843E:
		move.b	#$A,5(a0)
		bset	#3,$38(a0)
		move.l	#loc_48466,$34(a0)
		bsr.w	loc_487CA
		jmp	(Animate_RawMultiDelay).l
; ---------------------------------------------------------------------------

loc_4845C:
		lea	byte_48C5A(pc),a1
		jmp	(Animate_RawNoSSTMultiDelay).l
; ---------------------------------------------------------------------------

loc_48466:
		move.b	#4,5(a0)
		move.b	#$16,$22(a0)
		bclr	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4847A:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		beq.s	loc_4849A
		lea	ChildObjDat_48C08(pc),a2
		jsr	(CreateChild1_Normal).l
		bsr.w	loc_487CA
		jsr	(Go_Delete_Sprite_2).l

loc_4849A:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_484A0:
		lea	ObjDat3_48B68(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_484FC,(a0)
		jsr	(Random_Number).l
		andi.w	#$FF,d0
		ext.w	d0
		add.w	d0,$10(a0)
		swap	d0
		andi.w	#$3F,d0
		subq.w	#8,d0
		add.w	d0,$14(a0)
		andi.w	#3,d0
		move.b	d0,$22(a0)
		lsl.w	#2,d0
		move.l	off_484EC(pc,d0.w),$30(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_48516,$34(a0)
		rts
; ---------------------------------------------------------------------------
off_484EC:	dc.l word_48C8A
		dc.l word_48C8E
		dc.l word_48C92
		dc.l word_48C96
; ---------------------------------------------------------------------------

loc_484FC:
		movea.w	$46(a0),a3
		bsr.w	sub_487EE
		jsr	(Animate_Raw).l
		jsr	(Obj_Wait).l
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------

loc_48516:
		move.l	#loc_48528,(a0)
		movea.l	$30(a0),a1
		move.b	1(a1),$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_48528:
		movea.w	$46(a0),a3
		btst	#3,$38(a3)
		bne.s	loc_4853E
		bsr.w	sub_487EE
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------

loc_4853E:
		move.l	#loc_484FC,(a0)
		move.w	#$1F,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_48554:
		lea	ObjDat3_48B68(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_485E0,(a0)
		move.w	(Camera_X_pos).w,d0
		addi.w	#$A0,d0
		move.w	d0,$10(a0)
		move.w	d0,$3A(a0)
		move.w	(Water_level).w,d0
		addq.w	#8,d0
		move.w	d0,$14(a0)
		jsr	(Random_Number).l
		andi.w	#$FF,d0
		move.w	d0,d1
		ext.w	d0
		bpl.s	loc_48592
		st	$3C(a0)

loc_48592:
		add.w	d0,$10(a0)
		bsr.w	sub_48784
		lsl.w	#4,d0
		move.w	d0,$18(a0)
		andi.b	#1,d1
		move.b	d1,$23(a0)
		swap	d0
		andi.w	#$1F,d0
		add.w	d0,$14(a0)
		andi.w	#3,d0
		move.b	d0,$22(a0)
		lsl.w	#2,d0
		lea	off_484EC(pc),a1
		move.l	(a1,d0.w),$30(a0)
		move.w	#$200,$1A(a0)
		move.w	#$BF,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_485E0:
		tst.b	4(a0)
		bpl.s	loc_48602
		bsr.w	sub_4875A
		jsr	(MoveSprite2).l
		jsr	(Animate_Raw).l
		jsr	(Obj_Wait).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_48602:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_48608:
		lea	(Player_1).w,a1
		btst	#6,$2A(a1)
		beq.w	locret_47DC8
		move.l	#loc_486B6,(a0)
		clr.b	(_unkFAA2).w
		movea.w	$46(a0),a1
		bset	#0,$38(a1)
		move.b	#4,4(a0)
		lea	(Player_1).w,a1
		lea	(Ctrl_1_locked).w,a2
		tst.b	$2C(a0)
		beq.s	loc_48650
		lea	(Player_2).w,a1
		lea	(Ctrl_2_locked).w,a2
		btst	#6,$2A(a1)
		beq.w	loc_486B0

loc_48650:
		clr.b	(a2)
		tst.l	(a1)
		beq.s	loc_486B0
		move.w	a1,$44(a0)
		bclr	#7,$A(a0)
		move.w	$10(a1),d0
		move.w	d0,$10(a0)
		move.w	$14(a1),$14(a0)
		move.w	(Camera_X_pos).w,d1
		addi.w	#$A0,d1
		move.w	d1,$3A(a0)
		sub.w	d1,d0
		bpl.s	loc_48682
		st	$3C(a0)

loc_48682:
		bsr.w	sub_48784
		move.w	#$200,$1A(a0)
		bset	#1,$2A(a1)
		move.b	#1,$2E(a1)
		move.b	#$F,$20(a1)
		clr.b	$3D(a1)
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		rts
; ---------------------------------------------------------------------------

loc_486B0:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_486B6:
		bsr.w	sub_4875A
		jsr	(MoveSprite2).l
		movea.w	$44(a0),a1
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),d0
		move.w	d0,$14(a1)
		cmpi.w	#$828,d0
		bcc.s	loc_486DA
		rts
; ---------------------------------------------------------------------------

loc_486DA:
		tst.b	$2C(a0)
		beq.s	loc_486F2
		lea	(Player_2).w,a1
		tst.l	(a1)
		beq.s	loc_48704
		jsr	(Restore_PlayerControl2).l
		bra.w	loc_48704
; ---------------------------------------------------------------------------

loc_486F2:
		jsr	(Restore_PlayerControl).l
		move.w	#0,(Target_camera_min_Y_pos).w
		jsr	(Make_LevelSizeObj).l

loc_48704:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4870A:
		lea	byte_48B86(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		addi.b	#$1B,d0
		move.b	d0,$22(a0)
		moveq	#$20,d0
		jmp	(Set_IndexedVelocity).l
; ---------------------------------------------------------------------------

loc_48732:
		lea	byte_48B8C(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#MoveChkDel,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		addi.b	#$1F,d0
		move.b	d0,$22(a0)
		moveq	#$1C,d0
		jmp	(Set_IndexedVelocity).l

; =============== S U B R O U T I N E =======================================


sub_4875A:
		move.w	$10(a0),d0
		move.w	$18(a0),d1
		move.w	#$100,d2
		cmp.w	$3A(a0),d0
		scs	d3
		bcs.s	loc_48770
		neg.w	d2

loc_48770:
		add.w	d2,d1
		cmp.b	$3C(a0),d3
		beq.s	loc_4877E
		move.b	d3,$3C(a0)
		add.w	d2,d1

loc_4877E:
		move.w	d1,$18(a0)
		rts
; End of function sub_4875A


; =============== S U B R O U T I N E =======================================


sub_48784:
		add.w	d0,d0
		smi	d2
		bpl.s	loc_4878C
		neg.w	d0

loc_4878C:
		move.w	#$100,d3
		sub.w	d0,d3
		bpl.s	loc_48796
		moveq	#0,d3

loc_48796:
		lsl.w	#4,d3
		tst.b	d2
		beq.s	loc_4879E
		neg.w	d3

loc_4879E:
		move.w	d3,$18(a0)
		rts
; End of function sub_48784


; =============== S U B R O U T I N E =======================================


sub_487A4:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		beq.w	locret_47DC8
		move.l	#loc_4847A,(a0)
		clr.b	$28(a0)
		bclr	#3,$38(a0)
		beq.w	locret_47DC8
		bra.w	loc_487CA
; ---------------------------------------------------------------------------

loc_487CA:
		move.w	$42(a0),d0
		beq.s	loc_487D4
		bsr.w	sub_487DA

loc_487D4:
		move.w	$44(a0),d0
		beq.s	locret_487EC
; End of function sub_487A4


; =============== S U B R O U T I N E =======================================


sub_487DA:
		movea.w	d0,a2
		bset	#1,$2A(a2)
		clr.b	$2E(a2)
		move.w	#$100,8(a2)

locret_487EC:
		rts
; End of function sub_487DA


; =============== S U B R O U T I N E =======================================


sub_487EE:
		movea.l	a0,a1
		movea.l	a0,a2
		movea.l	a3,a0
		bsr.w	sub_48874
		movea.l	a1,a0
		rts
; End of function sub_487EE


; =============== S U B R O U T I N E =======================================


sub_487FC:
		clr.l	$42(a0)
		move.w	$14(a0),d0
		subi.w	#$20,d0
		lea	(Player_1).w,a2
		cmp.w	$14(a2),d0
		bhi.s	loc_48824
		move.w	a2,$42(a0)
		bsr.w	sub_48874
		tst.b	$2E(a2)
		bne.s	loc_48824
		bsr.w	sub_48844

loc_48824:
		lea	(Player_2).w,a2
		cmp.w	$14(a2),d0
		bhi.s	locret_48866
		cmpi.b	#6,5(a2)
		bcc.s	locret_48866
		move.w	a2,$44(a0)
		bsr.w	sub_48874
		tst.b	$2E(a2)
		bne.s	locret_48866
; End of function sub_487FC


; =============== S U B R O U T I N E =======================================


sub_48844:
		bset	#1,$2A(a2)
		move.b	#1,$2E(a2)
		move.b	#$F,$20(a2)
		clr.b	$3D(a2)
		clr.w	$18(a2)
		clr.w	$1A(a2)
		clr.w	$1C(a2)

locret_48866:
		rts
; End of function sub_48844

; ---------------------------------------------------------------------------
		dc.w Player_1
		dc.w 0
		dc.w Player_2
		dc.w 0
		dc.w Player_1
		dc.w Player_2

; =============== S U B R O U T I N E =======================================


sub_48874:
		move.w	$10(a2),d0
		move.w	$18(a2),d1
		move.w	#$40,d2
		sub.w	$10(a0),d0
		scs	d3
		bcc.s	loc_4888A
		neg.w	d0

loc_4888A:
		cmpi.w	#3,d0
		bhi.s	loc_48898
		tst.w	d1
		bpl.s	loc_488A6
		bra.w	loc_488A4
; ---------------------------------------------------------------------------

loc_48898:
		cmpi.w	#$70,d0
		bls.s	loc_488A0
		moveq	#0,d1

loc_488A0:
		tst.b	d3
		bne.s	loc_488A6

loc_488A4:
		neg.w	d2

loc_488A6:
		add.w	d2,d1
		move.w	#$100,8(a2)
		move.w	d1,$18(a2)
		bpl.s	loc_488BA
		move.w	#$300,8(a2)

loc_488BA:
		ext.l	d1
		lsl.l	#8,d1
		add.l	d1,$10(a2)
		move.l	#$8000,d4
		move.w	$14(a2),d5
		sub.w	$14(a0),d5
		cmpi.w	#-$10,d5
		blt.s	loc_488DE
		cmpi.w	#$10,d5
		ble.s	locret_488E2
		neg.l	d4

loc_488DE:
		add.l	d4,$14(a2)

locret_488E2:
		rts
; End of function sub_48874


; =============== S U B R O U T I N E =======================================


sub_488E4:
		btst	#7,$38(a0)
		bne.w	locret_47DC8
		move.w	$14(a0),d0
		cmp.w	(Water_level).w,d0
		bcs.w	locret_47DC8
; End of function sub_488E4


; =============== S U B R O U T I N E =======================================


sub_488FA:
		bset	#7,$38(a0)
		moveq	#signextendB(sfx_Splash),d0
		jsr	(Play_Sound_2).l
		clr.w	(Slotted_object_bits).w
		lea	ChildObjDat_48BC2(pc),a2
		jmp	(CreateChild1_Normal).l
; End of function sub_488FA


; =============== S U B R O U T I N E =======================================


sub_48916:
		move.b	$3A(a0),d0
		addq.b	#2,$3A(a0)
		andi.w	#$E,d0
		lea	byte_4894E(pc,d0.w),a1
		move.b	(a1)+,d0
		bne.s	loc_4892E
		move.w	#$100,d0

loc_4892E:
		move.w	#$400,d2
		cmpi.w	#$A0,d0
		bcs.s	loc_4893A
		neg.w	d2

loc_4893A:
		move.w	d2,$40(a0)
		move.w	(Camera_X_pos).w,d1
		add.w	d0,d1
		move.w	d1,$10(a0)
		move.b	(a1)+,$39(a0)
		rts
; End of function sub_48916

; ---------------------------------------------------------------------------
byte_4894E:	dc.b  $40,   1
		dc.b    0,   1
		dc.b  $40,   0
		dc.b  $40,   1
		dc.b    0,   0
		dc.b    0,   1
		dc.b  $40,   0
		dc.b    0,   0

; =============== S U B R O U T I N E =======================================


sub_4895E:
		move.b	$40(a0),d2
		add.b	d2,$3C(a0)
		bsr.w	sub_489A4
		add.b	d2,$3D(a0)
		bsr.w	sub_489D8
		moveq	#0,d0
		move.b	$3D(a0),d0
		lsr.w	#4,d0
		move.b	byte_48994(pc,d0.w),$22(a0)
		move.w	#$200,8(a0)
		cmpi.b	#8,d0
		bcs.s	locret_48992
		move.w	#$280,8(a0)

locret_48992:
		rts
; End of function sub_4895E

; ---------------------------------------------------------------------------
byte_48994:	dc.b 1
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b 6
		dc.b 7
		dc.b 8
		dc.b 9
		dc.b $A
		dc.b $B
		dc.b $1A
		dc.b $1A
		dc.b $1A
		dc.b $C
		dc.b $D

; =============== S U B R O U T I N E =======================================


sub_489A4:
		moveq	#0,d0
		move.b	$3C(a0),d0
		bsr.w	sub_489BA
		move.w	$10(a2),d0
		add.w	d1,d0
		move.w	d0,$10(a0)
		rts
; End of function sub_489A4


; =============== S U B R O U T I N E =======================================


sub_489BA:
		cmpi.b	#-$80,d0
		bcs.s	loc_489C6
		moveq	#-1,d1
		sub.b	d0,d1
		move.b	d1,d0

loc_489C6:
		lea	(HCZMiniboss_RocketTwistLookup).l,a1
		move.b	(a1,d0.w),d1
		ext.w	d1
		movea.w	$46(a0),a2
		rts
; End of function sub_489BA


; =============== S U B R O U T I N E =======================================


sub_489D8:
		moveq	#0,d0
		move.b	$3D(a0),d0
		bsr.s	sub_489BA
		move.w	$14(a2),d0
		add.w	d1,d0
		move.w	d0,$14(a0)
		rts
; End of function sub_489D8


; =============== S U B R O U T I N E =======================================


sub_489EC:
		movea.w	$46(a0),a2
		moveq	#0,d0
		move.b	$3D(a2),d0
		lsr.w	#3,d0
		andi.w	#-2,d0
		move.w	word_48A3C(pc,d0.w),8(a0)
		lea	byte_48A5C(pc,d0.w),a1
		move.b	(a1)+,d1
		ext.w	d1
		btst	#0,4(a2)
		beq.s	loc_48A1A
		neg.w	d1
		bset	#0,4(a0)

loc_48A1A:
		move.b	(a1)+,d2
		ext.w	d2
		move.w	$10(a2),d3
		add.w	d1,d3
		move.w	d3,$10(a0)
		move.w	$14(a2),d3
		add.w	d2,d3
		move.w	d3,$14(a0)
		lsr.w	#1,d0
		move.b	byte_48A7C(pc,d0.w),$22(a0)
		rts
; End of function sub_489EC

; ---------------------------------------------------------------------------
word_48A3C:	dc.w $280
		dc.w $200
		dc.w $200
		dc.w $200
		dc.w $200
		dc.w $180
		dc.w $180
		dc.w $180
		dc.w $180
		dc.w $180
		dc.w $180
		dc.w $280
		dc.w $280
		dc.w $280
		dc.w $280
		dc.w $280
byte_48A5C:	dc.b    3,   3
		dc.b    0,   0
		dc.b    6,   6
		dc.b   $C,  $C
		dc.b  $12, $12
		dc.b   $C,  $C
		dc.b    8,   8
		dc.b    0,   0
		dc.b    3,   3
		dc.b    0,   0
		dc.b    0,   0
		dc.b    0,   0
		dc.b  $FA, $FA
		dc.b  $F6, $F6
		dc.b    0,   0
		dc.b    0,   0
byte_48A7C:	dc.b   $E,  $F
		dc.b  $10, $11
		dc.b  $12, $11
		dc.b  $10,  $F
		dc.b   $E, $1A
		dc.b  $1A, $1A
		dc.b   $E,  $E
		dc.b  $1A, $1A

; =============== S U B R O U T I N E =======================================


sub_48A8C:
		tst.b	$28(a0)
		bne.s	locret_48AE8
		tst.b	$29(a0)
		beq.s	loc_48AEA
		tst.b	$20(a0)
		bne.s	loc_48AAC
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_48AAC:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_48AC0
		addi.w	#$E,d0

loc_48AC0:
		lea	word_48B0A(pc),a1
		lea	word_48B18(pc,d0.w),a2
		jsr	(CopyWordData_7).l
		subq.b	#1,$20(a0)
		bne.s	locret_48AE8
		bclr	#6,$2A(a0)
		cmpi.b	#0,$22(a0)
		bne.s	locret_48AE8
		move.b	$25(a0),$28(a0)

locret_48AE8:
		rts
; ---------------------------------------------------------------------------

loc_48AEA:
		move.l	#Wait_Draw,(a0)
		move.l	#loc_4807A,$34(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	(CreateChild1_Normal).l
		jmp	(BossDefeated_StopTimer).l
; End of function sub_48A8C

; ---------------------------------------------------------------------------
word_48B0A:	dc.w Normal_palette_line_2+$08, Normal_palette_line_2+$0E, Normal_palette_line_2+$12, Normal_palette_line_2+$14
		dc.w Normal_palette_line_2+$16, Normal_palette_line_2+$1A, Normal_palette_line_2+$1C
word_48B18:	dc.w      4,     0,    $C,     8,   $20,  $826,  $624
		dc.w   $AAA,  $AAA,  $888,  $AAA,  $EEE,  $888,  $AAA
ObjDat3_48B34:	dc.l Map_HCZMiniboss
		dc.w $A304
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b $F
ObjDat3_48B40:	dc.l Map_HCZMiniboss
		dc.w $A304
		dc.w $200
		dc.b $10
		dc.b $10
		dc.b 1
		dc.b $8B
word_48B4C:	dc.w $8304
		dc.w $280
		dc.b $10
		dc.b $10
		dc.b $15
		dc.b 0
word_48B54:	dc.w $8304
		dc.w $280
		dc.b $10
		dc.b $10
		dc.b $15
		dc.b $92
ObjDat3_48B5C:	dc.l Map_HCZMiniboss
		dc.w $A304
		dc.w $280
		dc.b $10
		dc.b $28
		dc.b $16
		dc.b 0
ObjDat3_48B68:	dc.l Map_Bubbler
		dc.w $A45C
		dc.w $280
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
ObjDat4_48B74:	dc.w 2
		dc.w $83FC
		dc.w $10
		dc.w 0
		dc.l Map_HCZMinibossSplash
		dc.w $80
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
byte_48B86:	dc.b 2
		dc.b $80
		dc.b $C
		dc.b $C
		dc.b 0
		dc.b 0
byte_48B8C:	dc.b 2
		dc.b $80
		dc.b $14
		dc.b $24
		dc.b 0
		dc.b 0
Child1_HCZMiniboss_RocketsEngine:dc.w 4
		dc.l Obj_HCZMiniboss_Rockets
		dc.w $1818
		dc.l Obj_HCZMiniboss_Rockets
		dc.w $E8E8
		dc.l Obj_HCZMiniboss_Rockets
		dc.w $E818
		dc.l Obj_HCZMiniboss_Rockets
		dc.w $18E8
		dc.l Obj_HCZMiniboss_Engine
		dc.w $24
ChildObjDat_48BB2:dc.w 0
		dc.l loc_48362
		dc.w 0
ChildObjDat_48BBA:dc.w 0
		dc.l loc_482B0
		dc.w 0
ChildObjDat_48BC2:dc.w 2
		dc.l loc_4830C
		dc.w 0
		dc.l loc_4830C
		dc.w $F000
		dc.l loc_4830C
		dc.w $1000
ChildObjDat_48BD6:dc.w $1D
		dc.l loc_484A0
ChildObjDat_48BDC:dc.w 0
		dc.l loc_48554
word_48BE2:	dc.w 0
		dc.l loc_48608
ChildObjDat_48BE8:dc.w 1
		dc.l loc_48608
ChildObjDat_48BEE:dc.w 3
		dc.l loc_4870A
		dc.w $F4F4
		dc.l loc_4870A
		dc.w $F40C
		dc.l loc_4870A
		dc.w $CF4
		dc.l loc_4870A
		dc.w $C0C
ChildObjDat_48C08:dc.w 4
		dc.l loc_48732
		dc.w $DC
		dc.l loc_48732
		dc.w $F800
		dc.l loc_48732
		dc.w $800
		dc.l loc_48732
		dc.w $F430
		dc.l loc_48732
		dc.w $C30
DPLCPtr_48C28:	dc.l ArtUnc_DashDust
		dc.l DPLC_HCZMinibossSplash
byte_48C30:	dc.b  $16,   7
		dc.b  $17,   7
		dc.b  $18,   7
		dc.b  $16,   6
		dc.b  $17,   6
		dc.b  $18,   6
		dc.b  $16,   5
		dc.b  $17,   5
		dc.b  $18,   5
		dc.b  $16,   4
		dc.b  $17,   4
		dc.b  $18,   4
		dc.b  $16,   3
		dc.b  $17,   3
		dc.b  $18,   3
		dc.b  $16,   2
		dc.b  $17,   2
		dc.b  $18,   2
		dc.b  $F4
byte_48C55:	dc.b 1
		dc.b $16
		dc.b $17
		dc.b $18
		dc.b $FC
byte_48C5A:	dc.b  $16,   2
		dc.b  $17,   2
		dc.b  $18,   2
		dc.b  $16,   3
		dc.b  $17,   3
		dc.b  $18,   3
		dc.b  $16,   4
		dc.b  $17,   4
		dc.b  $18,   4
		dc.b  $16,   5
		dc.b  $17,   5
		dc.b  $18,   5
		dc.b  $16,   6
		dc.b  $17,   6
		dc.b  $18,   6
		dc.b  $16,   7
		dc.b  $17,   7
		dc.b  $18,   7
		dc.b  $F4
byte_48C7F:	dc.b 3
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b 6
		dc.b 7
		dc.b 8
		dc.b $F4
word_48C8A:	dc.w 0
		dc.w $16FC
word_48C8E:	dc.w 1
		dc.w $16FC
word_48C92:	dc.w 2
		dc.w $16FC
word_48C96:	dc.w 3
		dc.w $16FC
Pal_HCZMiniboss:binclude "Levels/HCZ/Palettes/Miniboss.bin"
		even
Pal_HCZMinibossWater:
		binclude "Levels/HCZ/Palettes/Miniboss Water.bin"
		even
; ---------------------------------------------------------------------------

Obj_HCZEndBoss:
		move.w	#$4050,(Camera_max_X_pos).w
		lea	word_48D26(pc),a1
		jsr	(Check_CameraInRange).l
		move.l	#loc_48D2E,(a0)
		move.b	#1,(Boss_flag).w
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.w	#$78,$2E(a0)
		move.b	#mus_EndBoss,$26(a0)
		move.w	(Camera_target_max_Y_pos).w,(Target_camera_max_Y_pos).w
		move.w	#$738,(Camera_target_max_Y_pos).w
		move.w	#$4000,$1C(a0)
		move.l	#loc_48D34,$34(a0)
		rts
; ---------------------------------------------------------------------------
word_48D26:	dc.w $400
		dc.w $880
		dc.w $3E80
		dc.w $4090
; ---------------------------------------------------------------------------

loc_48D2E:
		jmp	(loc_541C8).l
; ---------------------------------------------------------------------------

loc_48D34:
		move.l	#loc_48D3C,(a0)

locret_48D3A:
		rts
; ---------------------------------------------------------------------------

loc_48D3C:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_48D54(pc,d0.w),d1
		jsr	off_48D54(pc,d1.w)
		bsr.w	sub_49A06
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
off_48D54:	dc.w loc_48D62-off_48D54
		dc.w loc_48DBC-off_48D54
		dc.w loc_48DFE-off_48D54
		dc.w loc_48DBC-off_48D54
		dc.w loc_48DBC-off_48D54
		dc.w loc_48DFE-off_48D54
		dc.w loc_48EAA-off_48D54
; ---------------------------------------------------------------------------

loc_48D62:
		lea	ObjDat3_49B62(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#8,$29(a0)
		move.w	#$80,$1A(a0)
		move.w	#$EF,$2E(a0)
		move.l	#loc_48DC8,$34(a0)
		moveq	#$6C,d0
		jsr	(Load_PLC).l
		move.w	#0,(Normal_palette+$1E).w
		lea	Pal_HCZEndBoss(pc),a1
		jsr	(PalLoad_Line1).l
		lea	(ChildObjDat_49C2E).l,a2
		jsr	(CreateChild1_Normal).l
		bne.s	loc_48DB2
		move.b	#5,$2C(a1)

loc_48DB2:
		lea	ChildObjDat_49BCC(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_48DBC:
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_48DC8:
		move.b	#4,5(a0)
		move.w	$14(a0),$3A(a0)
		move.w	#-$100,$44(a0)
		move.w	#$9F,$30(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_48E10,$34(a0)
		lea	(PLC_Explosion).l,a1
		jsr	(Load_PLC_Raw).l
		jmp	Swing_Setup1(pc)
; ---------------------------------------------------------------------------

loc_48DFE:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_48E10:
		bset	#3,$38(a0)
		tst.b	(_unkFA80+1).w
		bne.s	loc_48E38
		move.b	#6,5(a0)
		move.w	#$80,$1A(a0)
		move.w	#$9F,$2E(a0)
		move.l	#loc_48E4E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_48E38:
		move.b	#$A,5(a0)
		move.w	#$1FF,$2E(a0)
		move.l	#loc_48E80,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_48E4E:
		move.w	#-$100,$1A(a0)
		move.w	#$4F,$2E(a0)
		move.l	#loc_48E64,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_48E64:
		move.b	#$A,5(a0)
		move.w	#$FF,$2E(a0)
		move.w	$3A(a0),$14(a0)
		move.l	#loc_48E80,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_48E80:
		move.b	#$C,5(a0)
		bclr	#3,$38(a0)
		move.w	$44(a0),$18(a0)
		move.w	#$BF,$2E(a0)
		move.l	#loc_48ED4,$34(a0)
		move.b	#8,$39(a0)
		jmp	Swing_Setup1(pc)
; ---------------------------------------------------------------------------

loc_48EAA:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jsr	(Obj_Wait).l
		subq.w	#1,$30(a0)
		bpl.s	locret_48ED2
		neg.w	$18(a0)
		bchg	#0,4(a0)
		move.w	#$13F,$30(a0)

locret_48ED2:
		rts
; ---------------------------------------------------------------------------

loc_48ED4:
		move.w	#$5F,$2E(a0)
		subq.b	#1,$39(a0)
		bmi.s	loc_48EE8
		bset	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_48EE8:
		move.w	$18(a0),$44(a0)
		clr.w	$18(a0)
		bra.w	loc_48E10
; ---------------------------------------------------------------------------

loc_48EF6:
		move.l	#loc_48F20,(a0)
		bset	#4,$38(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_48F3C,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		moveq	#$C,d0
		jmp	(Set_IndexedVelocity).l
; ---------------------------------------------------------------------------

loc_48F20:
		jsr	(MoveSprite).l
		jsr	(Obj_Wait).l
		btst	#0,(V_int_run_count+3).w
		beq.w	locret_48D3A
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_48F3C:
		move.l	#loc_48F68,(a0)
		bclr	#7,4(a0)
		st	(_unkFAA8).w
		clr.b	(Boss_flag).w
		jsr	(Obj_PlayLevelMusic).l
		move.w	#$4230,(Target_camera_max_X_pos).w
		lea	(Child6_IncLevX).l,a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_48F68:
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		tst.b	(_unkFAA8).w
		bne.w	locret_48D3A
		clr.w	(Ctrl_1_logical).w
		clr.w	(Ctrl_2_logical).w
		st	(Ctrl_1_locked).w
		st	(Ctrl_2_locked).w
		move.b	#-$80,(Player_1+object_control).w
		jsr	(Restore_PlayerControl).l
		lea	(Player_2).w,a1
		jsr	(Restore_PlayerControl2).l
		lea	ChildObjDat_49C36(pc),a2
		jsr	(CreateChild6_Simple).l
		move.w	#0,(Camera_min_Y_pos).w
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

loc_48FB2:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_48FCE(pc,d0.w),d1
		jsr	off_48FCE(pc,d1.w)
		jsr	(Refresh_ChildPosition).l
		moveq	#0,d0
		jmp	(Child_DrawTouch_Sprite2_FlickerMove).l
; ---------------------------------------------------------------------------
off_48FCE:	dc.w loc_48FD8-off_48FCE
		dc.w loc_48FE2-off_48FCE
		dc.w loc_4900E-off_48FCE
		dc.w loc_49034-off_48FCE
		dc.w loc_49066-off_48FCE
; ---------------------------------------------------------------------------

loc_48FD8:
		lea	byte_49B74(pc),a1
		jmp	(SetUp_ObjAttributes3).l
; ---------------------------------------------------------------------------

loc_48FE2:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_48FF0
		rts
; ---------------------------------------------------------------------------

loc_48FF0:
		move.b	#4,5(a0)
		move.b	#-$5A,$28(a0)
		move.l	#byte_49C3C,$30(a0)
		move.l	#loc_4901C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4900E:
		moveq	#signextendB(sfx_FanBig),d0
		jsr	(sub_542A6).l
		jmp	(Animate_RawGetFaster).l
; ---------------------------------------------------------------------------

loc_4901C:
		move.b	#6,5(a0)
		move.l	#byte_49C43,$30(a0)
		lea	ChildObjDat_49BFC(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_49034:
		jsr	(Animate_Raw).l
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		beq.s	loc_4904E
		moveq	#signextendB(sfx_FanBig),d0
		jmp	(sub_542A6).l
; ---------------------------------------------------------------------------

loc_4904E:
		move.b	#8,5(a0)
		move.l	#byte_49C49,$30(a0)
		move.l	#loc_4906C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_49066:
		jmp	(Animate_RawGetSlower).l
; ---------------------------------------------------------------------------

loc_4906C:
		move.b	#2,5(a0)
		clr.b	$28(a0)
		rts
; ---------------------------------------------------------------------------

loc_49078:
		move.w	$10(a0),-(sp)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_490A8(pc,d0.w),d1
		jsr	off_490A8(pc,d1.w)
		move.w	#$1F,d1
		move.w	#$C,d2
		move.w	#$C,d3
		move.w	(sp)+,d4
		jsr	(SolidObjectTop).l
		bsr.w	sub_49A84
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_490A8:	dc.w loc_490B4-off_490A8
		dc.w loc_490FC-off_490A8
		dc.w loc_49128-off_490A8
		dc.w loc_49140-off_490A8
		dc.w loc_49128-off_490A8
		dc.w loc_4919E-off_490A8
; ---------------------------------------------------------------------------

loc_490B4:
		lea	word_49B80(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		move.w	(Water_level).w,d0
		subq.w	#8,d0
		move.w	d0,$14(a0)
		move.w	d0,$3A(a0)
		move.l	#byte_49C54,$30(a0)
		move.l	#loc_49102,$34(a0)
		lea	ChildObjDat_49C0C(pc),a2
		jsr	(CreateChild1_Normal).l
		lea	ChildObjDat_49C28(pc),a2
		jsr	(CreateChild6_Simple).l
		movea.w	$46(a0),a1
		move.w	$46(a1),$44(a0)
		rts
; ---------------------------------------------------------------------------

loc_490FC:
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

loc_49102:
		move.b	#4,5(a0)
		move.l	#byte_49C5D,$30(a0)
		move.w	#-$100,$1A(a0)
		move.l	#loc_49138,$34(a0)
		lea	ChildObjDat_49C04(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_49128:
		jsr	(MoveSprite2).l
		jsr	(Animate_Raw).l
		bra.w	sub_49ACC
; ---------------------------------------------------------------------------

loc_49138:
		move.b	#6,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_49140:
		jsr	(Animate_Raw).l
		movea.w	$44(a0),a1
		btst	#3,$38(a1)
		beq.s	loc_49154
		rts
; ---------------------------------------------------------------------------

loc_49154:
		move.b	#8,5(a0)
		bset	#3,$38(a0)
		move.w	#$80,$1A(a0)
		move.l	#loc_49184,$34(a0)
		move.w	#$80,$18(a0)
		tst.w	$18(a1)
		bpl.s	locret_4917E
		neg.w	$18(a0)

locret_4917E:
		rts
; ---------------------------------------------------------------------------
		bra.w	sub_49ACC
; ---------------------------------------------------------------------------

loc_49184:
		move.l	#loc_4919E,(a0)
		move.w	#$F,$2E(a0)
		clr.w	$18(a0)
		move.l	#loc_491C6,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4919E:
		move.w	#$1F,d1
		move.w	#$C,d2
		move.w	#$C,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		jsr	(Animate_Raw).l
		jsr	(Obj_Wait).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_491C6:
		jsr	(Displace_PlayerOffObject).l
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

loc_491D2:
		jsr	(MoveSprite2).l
		jsr	(Animate_Raw).l
		bsr.w	sub_49ACC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_491E8:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_49200(pc,d0.w),d1
		jsr	off_49200(pc,d1.w)
		bsr.w	sub_49AB2
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------
off_49200:	dc.w loc_49206-off_49200
		dc.w loc_4921A-off_49200
		dc.w loc_4924A-off_49200
; ---------------------------------------------------------------------------

loc_49206:
		lea	byte_49B88(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#byte_49C61,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_4921A:
		bsr.w	sub_4981E
		bsr.w	sub_497E8
		bsr.w	sub_49752
		jsr	(Animate_Raw).l
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_4923A
		rts
; ---------------------------------------------------------------------------

loc_4923A:
		move.b	#4,5(a0)
		move.w	$18(a1),$18(a0)
		bra.w	loc_49960
; ---------------------------------------------------------------------------

loc_4924A:
		bsr.w	sub_49752
		move.w	$18(a1),$18(a0)
		jsr	(MoveSprite2).l
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

loc_49260:
		lea	word_49B8E(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#loc_49284,(a0)
		move.l	#byte_49C7A,$30(a0)

loc_49278:
		move.w	(Water_level).w,d0
		subq.w	#4,d0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_49284:
		jsr	(Animate_Raw).l
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_492A8(pc,d0.w),d0
		movea.w	$46(a0),a1
		move.w	$10(a1),d1
		add.w	d0,d1
		move.w	d1,$10(a0)
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------
word_492A8:	dc.w $FFFC
		dc.w 4
; ---------------------------------------------------------------------------

loc_492AC:
		lea	word_49B94(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		move.l	#AnimateRaw_DrawTouch,(a0)
		move.l	#byte_49C7E,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		bra.s	loc_49278
; ---------------------------------------------------------------------------

loc_492CE:
		lea	ObjDat3_49B9C(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#Obj_Wait,(a0)
		move.l	#loc_492FC,$34(a0)
		bsr.w	sub_497A8
		tst.b	$2C(a0)
		bne.w	locret_48D3A
		lea	ChildObjDat_49C0C(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_492FC:
		move.l	#loc_4930C,(a0)
		move.l	#Go_Delete_Sprite_2,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4930C:
		bsr.w	sub_49982
		jmp	(AnimateRaw_DrawTouch).l
; ---------------------------------------------------------------------------

loc_49316:
		lea	ObjDat3_49BB4(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_49376,(a0)
		jsr	(Random_Number).l
		andi.w	#$FF,d0
		ext.w	d0
		add.w	d0,$10(a0)
		swap	d0
		move.w	(Water_level).w,d1
		andi.w	#$1F,d0
		add.w	d0,d1
		move.w	d1,$14(a0)
		andi.w	#3,d0
		move.b	d0,$22(a0)
		lsl.w	#2,d0
		move.l	off_49366(pc,d0.w),$30(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_49390,$34(a0)
		rts
; ---------------------------------------------------------------------------
off_49366:	dc.l word_48C8A
		dc.l word_48C8E
		dc.l word_48C92
		dc.l word_48C96
; ---------------------------------------------------------------------------

loc_49376:
		movea.w	$46(a0),a3
		bsr.w	sub_499DC
		jsr	(Animate_Raw).l
		jsr	(Obj_Wait).l
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------

loc_49390:
		move.l	#loc_493A2,(a0)
		movea.l	$30(a0),a1
		move.b	1(a1),$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_493A2:
		movea.w	$46(a0),a3
		btst	#3,$38(a3)
		bne.s	loc_493B8
		bsr.w	sub_499DC
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------

loc_493B8:
		move.l	#loc_49376,(a0)
		move.w	#$1F,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_493CE:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_493E2(pc,d0.w),d1
		jsr	off_493E2(pc,d1.w)
		jmp	(Child_DrawTouch_Sprite).l
; ---------------------------------------------------------------------------
off_493E2:	dc.w loc_493F0-off_493E2
		dc.w loc_4940A-off_493E2
		dc.w loc_4944E-off_493E2
		dc.w loc_49482-off_493E2
		dc.w loc_494F0-off_493E2
		dc.w loc_49518-off_493E2
		dc.w loc_4953E-off_493E2
; ---------------------------------------------------------------------------

loc_493F0:
		lea	byte_49B7A(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.b	#8,$1E(a0)
		bsr.w	sub_4972C
		jmp	(Refresh_ChildPositionAdjusted).l
; ---------------------------------------------------------------------------

loc_4940A:
		jsr	(Refresh_ChildPositionAdjusted).l
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_4941E
		rts
; ---------------------------------------------------------------------------

loc_4941E:
		move.b	#4,5(a0)
		tst.b	$2C(a0)
		beq.s	loc_4942C
		rts
; ---------------------------------------------------------------------------

loc_4942C:
		move.b	#6,5(a0)
		move.w	#3,$2E(a0)
		move.l	#loc_494C4,$34(a0)
		move.b	#1,$40(a0)
		move.b	#0,$41(a0)
		rts
; ---------------------------------------------------------------------------

loc_4944E:
		jsr	(Refresh_ChildPositionAdjusted).l
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	loc_49462
		rts
; ---------------------------------------------------------------------------

loc_49462:
		move.b	#6,5(a0)
		subq.b	#2,$2C(a0)
		move.w	#7,$2E(a0)
		move.l	#loc_4949E,$34(a0)
		bsr.w	sub_4972C
		bra.w	loc_49740
; ---------------------------------------------------------------------------

loc_49482:
		move.b	$40(a0),d0
		add.b	d0,$42(a0)
		move.b	$41(a0),d0
		add.b	d0,$43(a0)
		jsr	(Refresh_ChildPositionAdjusted).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4949E:
		move.b	#2,5(a0)
		tst.b	$2C(a0)
		bne.s	locret_494C2
		lea	word_49BEC(pc),a2
		jsr	(CreateChild7_Normal2).l
		bne.s	locret_494C2
		move.w	$46(a0),$46(a1)
		move.b	#4,$2C(a1)

locret_494C2:
		rts
; ---------------------------------------------------------------------------

loc_494C4:
		move.b	#8,5(a0)
		move.l	#loc_49526,$34(a0)
		move.w	#$100,$18(a0)
		movea.w	$46(a0),a1
		bclr	#1,$38(a1)
		btst	#0,4(a1)
		beq.s	locret_494EE
		neg.w	$18(a0)

locret_494EE:
		rts
; ---------------------------------------------------------------------------

loc_494F0:
		move.w	$14(a0),d0
		cmp.w	(Water_level).w,d0
		bcc.s	loc_49508
		jsr	(MoveSprite_LightGravity).l
		jsr	(ObjHitFloor_DoRoutine).l
		rts
; ---------------------------------------------------------------------------

loc_49508:
		move.b	#$A,5(a0)
		lea	ChildObjDat_49C1A(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_49518:
		jsr	(MoveSprite_LightGravity).l
		jsr	(ObjHitFloor_DoRoutine).l
		rts
; ---------------------------------------------------------------------------

loc_49526:
		move.b	#$C,5(a0)
		move.l	#byte_49C4F,$30(a0)
		move.l	#loc_49544,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4953E:
		jmp	(Animate_RawGetFaster).l
; ---------------------------------------------------------------------------

loc_49544:
		lea	ChildObjDat_49C22(pc),a2
		jsr	(CreateChild6_Simple).l
		moveq	#signextendB(sfx_MissileExplode),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_49BF4(pc),a2
		jsr	(CreateChild1_Normal).l
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_49566:
		lea	word_49B6E(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#loc_49578,(a0)
		rts
; ---------------------------------------------------------------------------

loc_49578:
		jsr	(Refresh_ChildPositionAdjusted).l
		moveq	#0,d0
		jmp	(Child_Draw_Sprite2_FlickerMove).l
; ---------------------------------------------------------------------------

loc_49586:
		lea	ObjDat3_49BA8(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_495AC,(a0)
		move.l	#byte_49D4A,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_495AC:
		jsr	(Animate_Raw).l
		cmpi.b	#3,$22(a0)
		bcc.s	loc_495C0
		jsr	(Add_SpriteToCollisionResponseList).l

loc_495C0:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_495C6:
		lea	(ArtKosM_HCZGeyserVert).l,a1
		move.w	#$6D60,d2
		jsr	(Queue_Kos_Module).l
		move.l	#loc_495DC,(a0)

loc_495DC:
		tst.b	(Kos_modules_left).w
		bne.w	locret_48D3A
		move.l	#loc_495FE,(a0)
		move.w	#$5F,$2E(a0)
		move.l	#loc_49616,$34(a0)
		st	(Screen_shake_flag).w
		rts
; ---------------------------------------------------------------------------

loc_495FE:
		move.b	(V_int_run_count+3).w,d0
		andi.b	#7,d0
		bne.s	loc_49610
		moveq	#signextendB(sfx_Rumble2),d0
		jsr	(Play_Sound_2).l

loc_49610:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_49616:
		move.l	#loc_4961C,(a0)

loc_4961C:
		lea	ObjDat3_49BC0(pc),a1
		jsr	(SetUp_ObjAttributes).l
		st	(Screen_shake_flag).w
		moveq	#signextendB(sfx_Geyser),d0
		jsr	(Play_Sound_2).l
		lea	(Player_1).w,a1
		move.w	$10(a1),d0
		move.w	d0,$10(a0)
		move.w	(Camera_Y_pos).w,d1
		addi.w	#$130,d1
		move.w	d1,$14(a0)
		clr.w	$44(a0)
		lea	(Player_2).w,a1
		addi.w	#$30,d0
		sub.w	$10(a1),d0
		cmpi.w	#$60,d0
		bcc.s	loc_49664
		move.w	a1,$44(a0)

loc_49664:
		jsr	(sub_49AF4).l
		move.l	#loc_49674,(a0)
		st	(Palette_cycle_counters+$00).w

loc_49674:
		lea	(Player_1).w,a1
		move.w	$14(a0),d0
		subq.w	#6,d0
		move.w	d0,$14(a0)
		subi.w	#$60,d0
		cmp.w	$14(a1),d0
		bcc.s	loc_496A4
		move.b	#-$7F,$2E(a1)
		move.b	#$1A,$20(a1)
		move.l	#loc_496B8,(a0)
		move.w	#$5F,$2E(a0)

loc_496A4:
		bsr.w	sub_496F4
		move.l	a0,-(sp)
		jsr	(AnPal_HCZ1).l
		movea.l	(sp)+,a0
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_496B8:
		lea	(Player_1).w,a1
		move.b	#$1A,$20(a1)
		subq.w	#6,$14(a0)
		subq.w	#6,(Player_1+y_pos).w
		bsr.w	sub_496F4
		subq.w	#1,$2E(a0)
		bmi.s	loc_496E4
		move.l	a0,-(sp)
		jsr	(AnPal_HCZ1).l
		movea.l	(sp)+,a0
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_496E4:
		move.w	#$200,d0
		jsr	(StartNewLevel).l
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_496F4:
		move.w	$44(a0),d0
		beq.s	locret_4972A
		movea.w	d0,a1
		btst	#2,$38(a0)
		bne.s	loc_49726
		move.w	$14(a0),d0
		subi.w	#$60,d0
		cmp.w	$14(a1),d0
		bcc.s	locret_4972A
		bset	#2,$38(a0)
		move.b	#-$7F,$2E(a1)
		move.b	#$1A,$20(a1)
		rts
; ---------------------------------------------------------------------------

loc_49726:
		subq.w	#8,$14(a1)

locret_4972A:
		rts
; End of function sub_496F4


; =============== S U B R O U T I N E =======================================


sub_4972C:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4973A(pc,d0.w),8(a0)
		rts
; End of function sub_4972C

; ---------------------------------------------------------------------------
word_4973A:	dc.w $280
		dc.w $200
		dc.w $180
; ---------------------------------------------------------------------------

loc_49740:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4974E(pc,d0.w),$40(a0)
		rts
; ---------------------------------------------------------------------------
word_4974E:	dc.w $101
		dc.w $100

; =============== S U B R O U T I N E =======================================


sub_49752:
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	$39(a1),d0
		cmp.b	$39(a0),d0
		beq.s	locret_49782
		move.b	d0,$39(a0)
		move.b	byte_49785(pc,d0.w),d1
		ext.w	d1
		move.w	(Water_level).w,d2
		add.w	d1,d2
		move.w	d2,$14(a0)
		lsl.w	#2,d0
		move.l	off_49790(pc,d0.w),$30(a0)
		clr.b	$24(a0)

locret_49782:
		rts
; End of function sub_49752

; ---------------------------------------------------------------------------
		dc.b $F8
byte_49785:	dc.b $F8
		dc.b $F0
		dc.b $E8
		dc.b $E0
		dc.b $D8
		dc.b $D8
		dc.b 0
		dc.b 0
		dc.b 4
		dc.b $9C
		dc.b $61
off_49790:	dc.l byte_49C61
		dc.l byte_49C66
		dc.l byte_49C6B
		dc.l byte_49C70
		dc.l byte_49C75
		dc.l byte_49C75

; =============== S U B R O U T I N E =======================================


sub_497A8:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,$2E(a0)
		move.w	word_497CA(pc,d0.w),d1
		move.w	(Water_level).w,d2
		add.w	d1,d2
		move.w	d2,$14(a0)
		add.w	d0,d0
		move.l	off_497D4(pc,d0.w),$30(a0)
		rts
; End of function sub_497A8

; ---------------------------------------------------------------------------
word_497CA:	dc.w $FFF8
		dc.w $FFE8
		dc.w $FFD8
		dc.w $FFC8
		dc.w $FFB8
off_497D4:	dc.l byte_49C87
		dc.l byte_49CBE
		dc.l byte_49CED
		dc.l byte_49D14
		dc.l byte_49D33

; =============== S U B R O U T I N E =======================================


sub_497E8:
		move.w	$10(a0),d0
		move.w	(Water_level).w,d1
		addq.w	#8,d1
		move.l	#$20000,d2
		lea	(Player_1).w,a1
		bsr.w	sub_49804
		lea	(Player_2).w,a1
; End of function sub_497E8


; =============== S U B R O U T I N E =======================================


sub_49804:
		tst.b	$2E(a1)
		bne.s	locret_4981C
		cmp.w	$14(a1),d1
		bcc.s	locret_4981C
		cmp.w	$10(a1),d0
		bcc.s	loc_49818
		neg.l	d2

loc_49818:
		add.l	d2,$10(a1)

locret_4981C:
		rts
; End of function sub_49804


; =============== S U B R O U T I N E =======================================


sub_4981E:
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	$39(a1),d0
		lsl.w	#2,d0
		lea	word_498FE(pc),a1
		lea	(a1,d0.w),a1
		moveq	#$42,d4
		lea	(Player_1).w,a2
		bsr.w	sub_49842
		moveq	#$43,d4
		lea	(Player_2).w,a2
; End of function sub_4981E


; =============== S U B R O U T I N E =======================================


sub_49842:
		movea.w	$46(a0),a3
		btst	#7,$2A(a3)
		bne.w	sub_4993E
		cmpi.b	#6,5(a2)
		bcc.w	loc_498EE
		tst.b	$34(a2)
		bne.w	loc_498EE
		tst.b	$2E(a2)
		beq.s	loc_4986E
		tst.b	(a0,d4.w)
		bne.s	loc_498A8

loc_4986E:
		move.w	$14(a0),d0
		move.w	$14(a2),d2
		add.w	(a1),d0
		cmp.w	d0,d2
		bcs.w	locret_4993C
		add.w	2(a1),d0
		cmp.w	d0,d2
		bcc.w	locret_4993C
		move.w	$10(a0),d0
		move.w	$10(a2),d2
		sub.w	d2,d0
		addi.w	#$10,d0
		cmpi.w	#$20,d0
		bcc.w	locret_4993C
		tst.b	$2E(a2)
		bne.s	loc_498A8
		bsr.w	sub_49916

loc_498A8:
		move.w	$14(a0),d0
		move.w	$14(a2),d2
		add.w	(a1)+,d0
		cmp.w	d0,d2
		bcs.w	sub_4993E
		move.w	$10(a2),d0
		move.w	$18(a2),d1
		move.w	#$80,d2
		sub.w	$10(a0),d0
		cmpi.w	#-$12,d0
		ble.s	sub_4993E
		cmpi.w	#$12,d0
		bge.s	sub_4993E
		tst.w	d0
		bmi.s	loc_498DA
		neg.w	d2

loc_498DA:
		add.w	d2,d1
		move.w	d1,$18(a2)
		ext.l	d1
		lsl.l	#8,d1
		add.l	d1,$10(a2)
		subq.w	#2,$14(a2)
		rts
; ---------------------------------------------------------------------------

loc_498EE:
		jsr	(Displace_PlayerOffObject).l
		clr.b	(a0,d4.w)
		clr.b	$2E(a2)
		rts
; End of function sub_49842

; ---------------------------------------------------------------------------
word_498FE:	dc.w  $FFE8,   $48
		dc.w  $FFE0,   $58
		dc.w  $FFD8,   $68
		dc.w  $FFD0,   $78
		dc.w  $FFC8,   $88
		dc.w  $FFB8,   $88

; =============== S U B R O U T I N E =======================================


sub_49916:
		st	(a0,d4.w)
		bset	#1,$2A(a2)
		move.b	#1,$2E(a2)
		move.b	#$18,$20(a2)
		clr.b	$3D(a2)
		clr.w	$18(a2)
		clr.w	$1A(a2)
		clr.w	$1C(a2)

locret_4993C:
		rts
; End of function sub_49916


; =============== S U B R O U T I N E =======================================


sub_4993E:
		clr.b	(a0,d4.w)
		bset	#1,$2A(a2)
		clr.b	$2E(a2)
		move.b	#0,5(a2)
		move.b	#2,$20(a2)
		move.w	#-$200,$1A(a2)
		rts
; End of function sub_4993E

; ---------------------------------------------------------------------------

loc_49960:
		tst.b	$42(a0)
		beq.s	loc_49970
		clr.b	$42(a0)
		lea	(Player_1).w,a2
		bsr.s	sub_4993E

loc_49970:
		tst.b	$43(a0)
		beq.s	locret_49980
		clr.b	$43(a0)
		lea	(Player_2).w,a2
		bsr.s	sub_4993E

locret_49980:
		rts

; =============== S U B R O U T I N E =======================================


sub_49982:
		cmpi.b	#$30,$23(a0)
		bcc.s	locret_499D2
		lea	word_499D4(pc),a1
		lea	(Player_1).w,a2
		bsr.w	sub_4999E
		lea	word_499D4(pc),a1
		lea	(Player_2).w,a2
; End of function sub_49982


; =============== S U B R O U T I N E =======================================


sub_4999E:
		tst.b	$2E(a2)
		bne.s	locret_499D2
		move.w	$10(a0),d0
		move.w	$10(a2),d1
		add.w	(a1)+,d0
		cmp.w	d0,d1
		bcs.s	locret_499D2
		add.w	(a1)+,d0
		cmp.w	d0,d1
		bcc.s	locret_499D2
		move.w	$14(a0),d0
		move.w	$14(a2),d1
		add.w	(a1)+,d0
		cmp.w	d0,d1
		bcs.s	locret_499D2
		add.w	(a1)+,d0
		cmp.w	d0,d1
		bcc.s	locret_499D2
		move.w	#-$800,$1A(a2)

locret_499D2:
		rts
; End of function sub_4999E

; ---------------------------------------------------------------------------
word_499D4:	dc.w  $FFF4,   $18
		dc.w  $FFC8,   $40

; =============== S U B R O U T I N E =======================================


sub_499DC:
		movea.w	$46(a0),a1
		move.w	$10(a0),d0
		move.w	$18(a0),d1
		move.w	#$80,d2
		sub.w	$10(a1),d0
		tst.w	d0
		bmi.s	loc_499F6
		neg.w	d2

loc_499F6:
		add.w	d2,d1
		move.w	d1,$18(a0)
		ext.l	d1
		lsl.l	#8,d1
		add.l	d1,$10(a0)
		rts
; End of function sub_499DC


; =============== S U B R O U T I N E =======================================


sub_49A06:
		tst.l	(a0)
		beq.s	locret_49A5C
		tst.b	$28(a0)
		bne.s	locret_49A5C
		tst.b	$29(a0)
		beq.s	loc_49A5E
		tst.b	$20(a0)
		bne.s	loc_49A2A
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_49A2A:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_49A3C
		addq.w	#6,d0

loc_49A3C:
		lea	word_49A72(pc),a1
		lea	word_49A78(pc,d0.w),a2
		jsr	(CopyWordData_3).l
		subq.b	#1,$20(a0)
		bne.s	locret_49A5C
		bclr	#6,$2A(a0)
		move.b	$25(a0),$28(a0)

locret_49A5C:
		rts
; ---------------------------------------------------------------------------

loc_49A5E:
		move.l	#Wait_Draw,(a0)
		move.l	#loc_48EF6,$34(a0)
		jmp	(BossDefeated_StopTimer).l
; End of function sub_49A06

; ---------------------------------------------------------------------------
word_49A72:	dc.w Normal_palette_line_2+$14, Normal_palette_line_2+$16, Normal_palette_line_2+$1C
word_49A78:	dc.w      6,   $20,  $624
		dc.w   $EEE,  $EEE,  $EEE

; =============== S U B R O U T I N E =======================================


sub_49A84:
		movea.w	$44(a0),a1
		btst	#7,$2A(a1)
		beq.s	locret_49AB0
		bset	#7,$2A(a0)
		move.l	#loc_491D2,(a0)
		move.w	#$100,$1A(a0)
		move.l	#Go_Delete_Sprite_2,$34(a0)
		jsr	(Displace_PlayerOffObject).l

locret_49AB0:
		rts
; End of function sub_49A84


; =============== S U B R O U T I N E =======================================


sub_49AB2:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		beq.s	locret_49ACA
		bset	#7,$2A(a0)
		move.b	#4,5(a0)

locret_49ACA:
		rts
; End of function sub_49AB2


; =============== S U B R O U T I N E =======================================


sub_49ACC:
		move.w	$3A(a0),d0
		sub.w	$14(a0),d0
		bcs.s	loc_49AEE
		andi.w	#$F0,d0
		lsr.w	#4,d0
		move.b	d0,$39(a0)
		tst.w	$1A(a0)
		bpl.s	locret_49AEC
		cmpi.b	#5,d0
		bcc.s	loc_49AEE

locret_49AEC:
		rts
; ---------------------------------------------------------------------------

loc_49AEE:
		movea.l	$34(a0),a2
		jmp	(a2)
; End of function sub_49ACC


; =============== S U B R O U T I N E =======================================


sub_49AF4:
		lea	(byte_2EC7A).l,a3
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		subi.w	#$80,d3
		moveq	#7,d1

loc_49B08:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_49B60
		move.l	#loc_2E9AA,(a1)
		move.l	#Map_HCZWaterWallDebris,$C(a1)
		move.w	#$43C3,$A(a1)
		move.b	#-$7C,4(a1)
		move.b	(a3)+,d0
		ext.w	d0
		add.w	d2,d0
		move.w	d0,$10(a1)
		move.b	(a3)+,d0
		ext.w	d0
		add.w	d3,d0
		move.w	d0,$14(a1)
		move.w	#$280,8(a1)
		move.b	#$18,7(a1)
		move.b	#$18,6(a1)
		move.w	(a3)+,$18(a1)
		move.w	(a3)+,$1A(a1)
		move.b	d1,$22(a1)
		dbf	d1,loc_49B08

locret_49B60:
		rts
; End of function sub_49AF4

; ---------------------------------------------------------------------------
ObjDat3_49B62:	dc.l Map_HCZEndBoss
		dc.w $A320
		dc.w $100
		dc.b $2C
		dc.b $1C
		dc.b 0
		dc.b 6
word_49B6E:	dc.w $200
		dc.b $C
		dc.b 4
		dc.b 1
		dc.b 0
byte_49B74:	dc.b 2
		dc.b 0
		dc.b $1C
		dc.b 4
		dc.b 2
		dc.b 0
byte_49B7A:	dc.b 2
		dc.b 0
		dc.b $1C
		dc.b 4
		dc.b 6
		dc.b 0
word_49B80:	dc.w $8320
		dc.b 0
		dc.b $80
		dc.b $14
		dc.b $C
		dc.b $17
		dc.b 0
byte_49B88:	dc.b 0
		dc.b $80
		dc.b $14
		dc.b $30
		dc.b $D
		dc.b 0
word_49B8E:	dc.w 0
		dc.w $1004
		dc.b $1A
		dc.b 0
word_49B94:	dc.w $8320
		dc.w $80
		dc.b $C
		dc.b 8
		dc.b $18
		dc.b 0
ObjDat3_49B9C:	dc.l Map_HCZEndBoss
		dc.w $8320
		dc.w $100
		dc.b $C
		dc.b $10
		dc.b 8
		dc.b 0
ObjDat3_49BA8:	dc.l Map_Explosion
		dc.w $85A0
		dc.w $80
		dc.b $C
		dc.b $C
		dc.b 0
		dc.b $8B
ObjDat3_49BB4:	dc.l Map_Bubbler
		dc.w $845C
		dc.w $280
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
ObjDat3_49BC0:	dc.l Map_HCZWaterWall
		dc.w $436B
		dc.w $280
		dc.b $20
		dc.b $60
		dc.b 1
		dc.b 0
ChildObjDat_49BCC:dc.w 4
		dc.l loc_493CE
		dc.w $2312
		dc.l loc_493CE
		dc.w $1B0A
		dc.l loc_493CE
		dc.w $130A
		dc.l loc_49566
		dc.w $1C
		dc.l loc_48FB2
		dc.w $24
word_49BEC:	dc.w 0
		dc.l loc_493CE
		dc.b $13
		dc.b $A
ChildObjDat_49BF4:dc.w 0
		dc.l loc_49586
		dc.w 0
ChildObjDat_49BFC:dc.w 0
		dc.l loc_49078
		dc.w 0
ChildObjDat_49C04:dc.w 0
		dc.l loc_491E8
		dc.w 0
ChildObjDat_49C0C:dc.w 1
		dc.l loc_49260
		dc.w $FC00
		dc.l loc_49260
		dc.w $400
ChildObjDat_49C1A:dc.w 0
		dc.l loc_492AC
		dc.w 0
ChildObjDat_49C22:dc.w 4
		dc.l loc_492CE
ChildObjDat_49C28:dc.w $13
		dc.l loc_49316
ChildObjDat_49C2E:dc.w 0
		dc.l Obj_RobotnikShip2
		dc.w $C
ChildObjDat_49C36:dc.w 0
		dc.l loc_495C6
byte_49C3C:	dc.b 7
		dc.b 8
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b $FC
byte_49C43:	dc.b 0
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b $FC
byte_49C49:	dc.b 7
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b $FC
byte_49C4F:	dc.b 5
		dc.b 8
		dc.b 6
		dc.b 7
		dc.b $FC
byte_49C54:	dc.b 3
		dc.b $17
		dc.b $17
		dc.b $22
		dc.b $16
		dc.b $21
		dc.b $15
		dc.b $20
		dc.b $F4
byte_49C5D:	dc.b 3
		dc.b $15
		dc.b $20
		dc.b $FC
byte_49C61:	dc.b 3
		dc.b $D
		dc.b $F
		dc.b $11
		dc.b $FC
byte_49C66:	dc.b 3
		dc.b $24
		dc.b $25
		dc.b $26
		dc.b $FC
byte_49C6B:	dc.b 3
		dc.b $27
		dc.b $28
		dc.b $29
		dc.b $FC
byte_49C70:	dc.b 3
		dc.b $2A
		dc.b $2B
		dc.b $2C
		dc.b $FC
byte_49C75:	dc.b 3
		dc.b $2D
		dc.b $2E
		dc.b $2F
		dc.b $FC
byte_49C7A:	dc.b 1
		dc.b $1A
		dc.b $23
		dc.b $FC
byte_49C7E:	dc.b  $18,   2, $18,   2
		dc.b  $30,   3, $19,   4
		dc.b  $F4
byte_49C87:	dc.b    8,   0,   8,   0
		dc.b  $1B,   0,   9,   0
		dc.b  $1C,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $B,   2
		dc.b  $1E,   2,  $C,   3
		dc.b  $1F,   3, $F4
byte_49CBE:	dc.b    8,   0,   8,   0
		dc.b  $1B,   0,   9,   0
		dc.b  $1C,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $B,   2
		dc.b  $1E,   2,  $C,   3
		dc.b  $1F,   3, $F4
byte_49CED:	dc.b    8,   0,   8,   0
		dc.b  $1B,   0,   9,   0
		dc.b  $1C,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $B,   2
		dc.b  $1E,   2,  $C,   3
		dc.b  $1F,   3, $F4
byte_49D14:	dc.b    8,   0,   8,   0
		dc.b  $1B,   0,   9,   0
		dc.b  $1C,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $A,   0
		dc.b  $1D,   0,  $B,   2
		dc.b  $1E,   2,  $C,   3
		dc.b  $1F,   3, $F4
byte_49D33:	dc.b    8,   0,   8,   0
		dc.b  $1B,   0,   9,   0
		dc.b  $1C,   0,  $A,   0
		dc.b  $1D,   0,  $B,   2
		dc.b  $1E,   2,  $C,   3
		dc.b  $1F,   3, $F4
byte_49D4A:	dc.b    7,   0,   0,   1
		dc.b    2,   3,   4, $F4
Pal_HCZEndBoss:	binclude "Levels/HCZ/Palettes/End Boss.bin"
		even
; ---------------------------------------------------------------------------

Obj_MGZ2DrillingEggman:
		move.l	#Obj_Wait,(a0)
		move.b	#1,(Boss_flag).w
		move.w	#$78,$2E(a0)
		move.l	#Obj_MGZ2DrillingEggmanGo,$34(a0)
		clr.b	$2C(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		lea	(ArtKosM_MGZEndBoss).l,a1
		move.w	#$67E0,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_MGZEndBossDebris).l,a1
		move.w	#-$7440,d2
		jsr	(Queue_Kos_Module).l
		moveq	#$6D,d0
		jsr	(Load_PLC).l
		lea	Pal_MGZEndBoss(pc),a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------

Obj_MGZ2DrillingEggmanGo:
		move.l	#Obj_MGZ2DrillingEggmanStart,(a0)
		moveq	#signextendB(mus_EndBoss),d0
		jsr	(Play_Sound).l

locret_49DD8:
		rts
; ---------------------------------------------------------------------------

Obj_MGZ2DrillingEggmanStart:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_49DF2(pc,d0.w),d1
		jsr	off_49DF2(pc,d1.w)
		bsr.w	MGZ2_SpecialCheckHit
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
off_49DF2:	dc.w loc_49E0C-off_49DF2
		dc.w loc_49E56-off_49DF2
		dc.w loc_49E6E-off_49DF2
		dc.w loc_49EC8-off_49DF2
		dc.w loc_49EFC-off_49DF2
		dc.w loc_49F2E-off_49DF2
		dc.w loc_49F6C-off_49DF2
		dc.w loc_49F80-off_49DF2
		dc.w loc_49F2E-off_49DF2
		dc.w loc_49FB4-off_49DF2
		dc.w loc_49F2E-off_49DF2
		dc.w loc_4A01E-off_49DF2
		dc.w loc_4A0EC-off_49DF2
; ---------------------------------------------------------------------------

loc_49E0C:
		lea	ObjDat_MGZDrillBoss(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#-1,$29(a0)
		move.b	#$30,$1F(a0)
		move.b	#$24,$1E(a0)
		move.w	#$C,$26(a0)
		bset	#3,$38(a0)
		move.w	#-$800,$1A(a0)
		lea	Child1_MakeRoboShip3(pc),a2
		jsr	(CreateChild1_Normal).l
		bne.s	loc_49E4C
		move.b	#9,$2C(a1)

loc_49E4C:
		lea	ChildObjDat_4B3D4(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_49E56:
		tst.l	(Nem_decomp_queue).w
		bne.w	locret_49DD8
		move.b	#4,5(a0)
		moveq	#signextendB(sfx_Collapse),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_49E6E:
		move.w	$1A(a0),d0
		addi.w	#$40,d0
		cmpi.w	#$C0,d0
		bge.s	loc_49EB8
		move.w	d0,$1A(a0)
		btst	#7,$38(a0)
		bne.s	loc_49EB2
		move.w	(Camera_Y_pos).w,d1
		addi.w	#$120,d1
		cmp.w	$14(a0),d1
		bcs.s	loc_49EB2
		bset	#7,$38(a0)
		lea	ChildObjDat_4B3FE(pc),a2
		btst	#0,4(a0)
		beq.s	loc_49EAC
		lea	ChildObjDat_4B406(pc),a2

loc_49EAC:
		jsr	(CreateChild3_NormalRepeated).l

loc_49EB2:
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_49EB8:
		move.b	#6,5(a0)
		move.b	#5,$39(a0)
		jmp	Swing_Setup1(pc)
; ---------------------------------------------------------------------------

loc_49EC8:
		btst	#6,$2A(a0)
		bne.s	loc_49EDC
		jsr	(Swing_UpAndDown_Count).l
		tst.b	$39(a0)
		bpl.s	loc_49EF6

loc_49EDC:
		move.b	#$16,5(a0)
		move.w	#-$400,$1A(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4A04A,$34(a0)

loc_49EF6:
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_49EFC:
		subq.w	#1,$2E(a0)
		bpl.s	loc_49F22
		move.w	#3,$2E(a0)
		subq.w	#2,$26(a0)
		bne.s	loc_49F22
		move.b	#$A,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_49F40,$34(a0)

loc_49F22:
		jsr	(Swing_UpAndDown).l
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_49F2E:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_49F40:
		move.l	#loc_49F56,$34(a0)

loc_49F48:
		bset	#3,$38(a0)
		move.w	#$5F,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_49F56:
		move.b	#$C,5(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_49F72,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_49F6C:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_49F72:
		move.b	#$E,5(a0)
		bset	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_49F80:
		btst	#1,$38(a0)
		beq.s	loc_49F8A
		rts
; ---------------------------------------------------------------------------

loc_49F8A:
		move.b	#$10,5(a0)
		bclr	#3,$38(a0)
		move.w	#$5F,$2E(a0)
		move.l	#loc_49FA6,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_49FA6:
		move.b	#$12,5(a0)
		move.w	#3,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_49FB4:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bpl.s	locret_49FD8
		move.w	#3,$2E(a0)
		addq.w	#2,$26(a0)
		cmpi.w	#$C,$26(a0)
		bcc.s	loc_49FDA

locret_49FD8:
		rts
; ---------------------------------------------------------------------------

loc_49FDA:
		move.b	#$14,5(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_49FF0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_49FF0:
		move.l	#loc_49FFC,$34(a0)
		bra.w	loc_49F48
; ---------------------------------------------------------------------------

loc_49FFC:
		move.b	#$16,5(a0)
		move.w	#-$400,$1A(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4A04A,$34(a0)
		bclr	#7,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A01E:
		jsr	(ObjCheckCeilingDist).l
		tst.w	d1
		bmi.s	loc_4A02E
		jmp	(Move_WaitNoFall).l
; ---------------------------------------------------------------------------

loc_4A02E:
		move.b	#$18,5(a0)
		lea	ChildObjDat_4B3FE(pc),a2
		btst	#0,4(a0)
		beq.s	loc_4A044
		lea	ChildObjDat_4B406(pc),a2

loc_4A044:
		jmp	(CreateChild3_NormalRepeated).l
; ---------------------------------------------------------------------------

loc_4A04A:
		bset	#5,$38(a0)
		clr.b	(Boss_flag).w
		move.l	#Delete_Current_Sprite,(a0)
		jsr	(Obj_PlayLevelMusic).l
		lea	(MGZ_8x8_Primary_KosM).l,a1
		move.w	#0,d2
		jsr	(Queue_Kos_Module).l
		lea	(MGZ2_8x8_Secondary_KosM).l,a1
		move.w	#$4A40,d2
		jsr	(Queue_Kos_Module).l
		moveq	#$14,d0
		jsr	(Load_PLC).l
		lea	(ArtKosM_Spiker).l,a1
		move.w	#-$5A00,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_Mantis).l,a1
		move.w	#-$5620,d2
		jsr	(Queue_Kos_Module).l
		lea	(PLC_MonitorsSpikesSprings).l,a1
		jsr	(Load_PLC_Raw).l
		lea	(Pal_MGZ).l,a1
		jsr	(PalLoad_Line1).l
		btst	#0,4(a0)
		bne.s	loc_4A0DA
		lea	(Child6_IncLevX).l,a2
		move.w	#$6000,(Target_camera_max_X_pos).w
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_4A0DA:
		lea	(Child6_DecLevX).l,a2
		move.w	#0,(Target_camera_min_X_pos).w
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_4A0EC:
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

Obj_A1_1_MGZ2_Boss:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4A110(pc,d0.w),d1
		jsr	off_4A110(pc,d1.w)
		bsr.w	MGZ2_SpecialCheckHit
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
off_4A110:	dc.w loc_4A132-off_4A110
		dc.w loc_4A1C2-off_4A110
		dc.w loc_4A1EC-off_4A110
		dc.w loc_4A210-off_4A110
		dc.w loc_4A230-off_4A110
		dc.w loc_4A1C2-off_4A110
		dc.w loc_4A288-off_4A110
		dc.w loc_4A2C8-off_4A110
		dc.w loc_4A2EA-off_4A110
		dc.w loc_4A1C2-off_4A110
		dc.w loc_4A31C-off_4A110
		dc.w loc_4A1C2-off_4A110
		dc.w loc_4A2EA-off_4A110
		dc.w loc_4A39A-off_4A110
		dc.w loc_4A3D4-off_4A110
		dc.w loc_4A2C8-off_4A110
		dc.w loc_4A2EA-off_4A110
; ---------------------------------------------------------------------------

loc_4A132:
		lea	ObjDat_MGZDrillBoss(pc),a1
		jsr	(SetUp_ObjAttributes).l
		bset	#7,$A(a0)
		st	$46(a0)
		move.b	#8,$29(a0)
		move.b	#1,(Boss_flag).w
		move.b	#$1C,$1E(a0)
		move.w	#$C,$26(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.w	#$78,$2E(a0)
		move.l	#loc_4A1C8,$34(a0)
		lea	(ArtKosM_MGZEndBoss).l,a1
		move.w	#$67E0,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_MGZEndBossDebris).l,a1
		move.w	#-$7440,d2
		jsr	(Queue_Kos_Module).l
		moveq	#$6D,d0
		jsr	(Load_PLC).l
		lea	Pal_MGZEndBoss(pc),a1
		jsr	(PalLoad_Line1).l
		lea	(Child1_MakeRoboShip3).l,a2
		jsr	(CreateChild1_Normal).l
		move.b	#9,$2C(a1)
		lea	ChildObjDat_4B3D4(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4A1C2:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4A1C8:
		move.b	#4,5(a0)
		moveq	#signextendB(mus_EndBoss),d0
		jsr	(Play_Sound).l
		move.w	#$80,$1A(a0)
		move.w	#$BF,$2E(a0)
		move.l	#loc_4A1F8,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A1EC:
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4A1F8:
		move.b	#6,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4A222,$34(a0)
		jmp	Swing_Setup1(pc)
; ---------------------------------------------------------------------------

loc_4A210:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4A222:
		move.b	#8,5(a0)
		move.w	#3,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A230:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bpl.s	locret_4A254
		move.w	#3,$2E(a0)
		subq.w	#2,$26(a0)
		cmpi.w	#4,$26(a0)
		bls.s	loc_4A256

locret_4A254:
		rts
; ---------------------------------------------------------------------------

loc_4A256:
		move.b	#$A,5(a0)
		bset	#3,$38(a0)
		move.w	#$5F,$2E(a0)
		move.l	#loc_4A272,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A272:
		move.b	#$C,5(a0)
		move.w	#$400,$1A(a0)
		move.l	#loc_4A294,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A288:
		jsr	(MoveSprite2).l
		jmp	(ObjHitFloor_DoRoutine).l
; ---------------------------------------------------------------------------

loc_4A294:
		move.b	#$E,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4A2CE,$34(a0)
		st	(Events_fg_4).w
		st	(Disable_death_plane).w
		moveq	#signextendB(sfx_BossHitFloor),d0
		jsr	(Play_Sound_2).l
		jsr	(Create_New_Sprite).l
		bne.s	locret_4A2C6
		move.l	#Obj_MGZ2_BossTransition,(a1)

locret_4A2C6:
		rts
; ---------------------------------------------------------------------------

loc_4A2C8:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4A2CE:
		move.b	#$10,5(a0)
		move.w	#-$400,$1A(a0)
		move.w	#$17,$2E(a0)
		move.l	#loc_4A2F0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A2EA:
		jmp	(Move_WaitNoFall).l
; ---------------------------------------------------------------------------

loc_4A2F0:
		move.b	#$12,5(a0)
		bclr	#3,$38(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4A30E,$34(a0)
		jmp	Swing_Setup1(pc)
; ---------------------------------------------------------------------------

loc_4A30E:
		move.b	#$14,5(a0)
		move.w	#3,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A31C:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bpl.s	locret_4A33A
		move.w	#3,$2E(a0)
		subq.w	#2,$26(a0)
		beq.s	loc_4A33C

locret_4A33A:
		rts
; ---------------------------------------------------------------------------

loc_4A33C:
		move.b	#$16,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4A352,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A352:
		move.b	#$18,5(a0)
		move.w	#-$400,$1A(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4A36E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A36E:
		move.b	#$1A,5(a0)
		clr.b	$46(a0)
		bset	#0,4(a0)
		move.w	#$3E80,$10(a0)
		move.w	#$700,$14(a0)
		move.w	#-$80,$18(a0)
		move.b	#6,$3A(a0)
		jmp	Swing_Setup1(pc)
; ---------------------------------------------------------------------------

loc_4A39A:
		jsr	(MoveSprite2).l
		btst	#6,$2A(a0)
		bne.s	loc_4A3BE
		move.w	(Player_1+x_pos).w,d0
		cmp.w	$10(a0),d0
		bcc.s	loc_4A3BE
		jsr	(Swing_UpAndDown).l
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_4A3BE:
		move.b	#$1C,5(a0)
		move.w	#$200,$18(a0)
		move.l	#loc_4A3EA,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A3D4:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		cmpi.w	#$3E00,$10(a0)
		bcs.w	locret_49DD8

loc_4A3EA:
		move.b	#$1E,5(a0)
		moveq	#signextendB(sfx_BossZoom),d0
		jsr	(Play_Sound_2).l
		bclr	#3,$38(a0)
		bclr	#2,$38(a0)
		move.w	#$9F,$2E(a0)
		move.l	#loc_4A41C,$34(a0)
		lea	ChildObjDat_4B44A(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4A41C:
		move.w	#$1F,$2E(a0)
		move.l	#loc_4A42E,$34(a0)
		bra.w	loc_4B324
; ---------------------------------------------------------------------------

loc_4A42E:
		bset	#3,$38(a0)
		move.w	#$9F,$2E(a0)
		move.l	#loc_4A442,$34(a0)

loc_4A442:
		move.b	#$20,5(a0)
		move.w	#$FF,$2E(a0)
		move.l	#loc_4A3EA,$34(a0)
		bset	#2,$38(a0)
		rts
; ---------------------------------------------------------------------------

Obj_A2_1:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4A476(pc,d0.w),d1
		jsr	off_4A476(pc,d1.w)
		bsr.w	MGZ2_SpecialCheckHit
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
off_4A476:	dc.w loc_4A132-off_4A476
		dc.w loc_4A488-off_4A476
		dc.w loc_4A4C2-off_4A476
		dc.w loc_4A4DE-off_4A476
		dc.w loc_4A542-off_4A476
		dc.w loc_4A520-off_4A476
		dc.w loc_4A542-off_4A476
		dc.w loc_4A520-off_4A476
		dc.w loc_4A542-off_4A476
; ---------------------------------------------------------------------------

loc_4A488:
		jsr	(Obj_Wait).l
		move.w	#$3A50,d0
		cmp.w	(Camera_X_pos).w,d0
		bls.s	loc_4A49A
		rts
; ---------------------------------------------------------------------------

loc_4A49A:
		move.b	#4,5(a0)
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_max_X_pos).w
		move.w	#$B4,$30(a0)
		move.b	#2,$2C(a0)
		bset	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A4C2:
		jsr	(Obj_Wait).l
		subq.w	#1,$30(a0)
		bmi.s	loc_4A4D0
		rts
; ---------------------------------------------------------------------------

loc_4A4D0:
		move.b	#6,5(a0)
		bset	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A4DE:
		btst	#2,$38(a0)
		bne.s	loc_4A4E8
		rts
; ---------------------------------------------------------------------------

loc_4A4E8:
		move.b	#8,5(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4A504,$34(a0)
		move.b	#0,$2C(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A504:
		move.b	#$A,5(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4A52C,$34(a0)
		lea	(_unkFA82).w,a1
		bra.w	loc_4B184
; ---------------------------------------------------------------------------

loc_4A520:
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4A52C:
		move.b	#$C,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4A548,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A542:
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4A548:
		move.b	#$E,5(a0)
		move.w	#$9F,$2E(a0)
		move.l	#loc_4A56A,$34(a0)
		move.b	#2,$2C(a0)
		lea	(_unkFA8A).w,a1
		bra.w	loc_4B184
; ---------------------------------------------------------------------------

loc_4A56A:
		move.b	#$10,5(a0)
		move.w	#$3AF0,$10(a0)
		move.w	#$4C0,$14(a0)
		move.w	#$77,$2E(a0)
		move.l	#loc_4A4D0,$34(a0)
		bclr	#2,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A592:
		move.l	#Obj_Wait,(a0)
		bclr	#7,4(a0)
		bset	#4,$38(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.w	#$7F,$2E(a0)
		move.l	#loc_4A5CA,$34(a0)
		move.w	#$200,8(a0)
		lea	ChildObjDat_4B436(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4A5CA:
		move.l	#loc_4A5D6,(a0)
		jmp	(loc_47396).l
; ---------------------------------------------------------------------------

loc_4A5D6:
		tst.b	(_unkFAA8).w
		bne.w	locret_49DD8
		move.l	#locret_4A5FA,(a0)
		bset	#4,$38(a0)
		jsr	(Create_New_Sprite).l
		bne.s	locret_4A5F8
		move.l	#loc_4AE36,(a1)

locret_4A5F8:
		rts
; ---------------------------------------------------------------------------

locret_4A5FA:
		rts
; ---------------------------------------------------------------------------

loc_4A5FC:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4A612(pc,d0.w),d1
		jsr	off_4A612(pc,d1.w)
		moveq	#0,d0
		jmp	(Child_Draw_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------
off_4A612:	dc.w loc_4A616-off_4A612
		dc.w loc_4A63C-off_4A612
; ---------------------------------------------------------------------------

loc_4A616:
		lea	word_4B396(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		movea.w	$46(a0),a1
		cmpi.l	#Obj_A1_1_MGZ2_Boss,(a1)
		bne.s	loc_4A632
		bclr	#7,$A(a0)

loc_4A632:
		lea	ChildObjDat_4B3EE(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4A63C:
		movea.w	$46(a0),a1
		btst	#5,$38(a1)
		bne.s	loc_4A696
		cmpi.b	#2,$2C(a1)
		beq.s	loc_4A680
		btst	#1,$38(a1)
		beq.s	loc_4A67A
		bset	#1,$38(a0)
		bne.s	loc_4A680
		lea	ChildObjDat_4B416(pc),a2
		btst	#0,4(a0)
		beq.s	loc_4A670
		lea	ChildObjDat_4B41E(pc),a2

loc_4A670:
		jsr	(CreateChild3_NormalRepeated).l
		bra.w	loc_4A680
; ---------------------------------------------------------------------------

loc_4A67A:
		bclr	#1,$38(a0)

loc_4A680:
		lea	byte_4AEBC(pc),a2
		bsr.w	sub_4AE9A
		lea	byte_4AEF6(pc),a2
		bsr.w	sub_4AEDC
		jmp	(Refresh_ChildPositionAdjusted).l
; ---------------------------------------------------------------------------

loc_4A696:
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_4A69C:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4A6B2(pc,d0.w),d1
		jsr	off_4A6B2(pc,d1.w)
		moveq	#0,d0
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------
off_4A6B2:	dc.w loc_4A6C6-off_4A6B2
		dc.w loc_4A6E2-off_4A6B2
		dc.w loc_4A716-off_4A6B2
		dc.w loc_4A7B6-off_4A6B2
		dc.w loc_4A7DA-off_4A6B2
		dc.w loc_4A80C-off_4A6B2
		dc.w loc_4A7DA-off_4A6B2
		dc.w loc_4A80C-off_4A6B2
		dc.w loc_4A7DA-off_4A6B2
		dc.w loc_4A8C2-off_4A6B2
; ---------------------------------------------------------------------------

loc_4A6C6:
		lea	word_4B39C(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.b	#2,5(a0)
		movea.w	$46(a0),a1
		move.w	$46(a1),$44(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A6E2:
		movea.w	$44(a0),a1
		btst	#5,$38(a1)
		bne.s	loc_4A696
		btst	#3,$38(a1)
		bne.s	loc_4A70C
		lea	byte_4AECC(pc),a2
		bsr.w	sub_4AE9A

loc_4A6FE:
		lea	byte_4AF06(pc),a2
		bsr.w	sub_4AEDC
		jmp	(Refresh_ChildPositionAdjusted).l
; ---------------------------------------------------------------------------

loc_4A70C:
		move.b	#4,5(a0)
		bra.w	loc_4AF6C
; ---------------------------------------------------------------------------

loc_4A716:
		movea.w	$44(a0),a1
		btst	#5,$38(a1)
		bne.w	loc_4A696
		btst	#3,$38(a1)
		beq.s	loc_4A73C
		btst	#1,$38(a1)
		bne.s	loc_4A74E
		jsr	(Animate_RawMultiDelay).l
		bra.s	loc_4A6FE
; ---------------------------------------------------------------------------

loc_4A73C:
		move.b	#6,5(a0)
		move.l	#loc_4A7C0,$34(a0)
		bra.w	loc_4B01A
; ---------------------------------------------------------------------------

loc_4A74E:
		cmpi.b	#2,$2C(a1)
		beq.s	loc_4A77E
		move.b	#8,5(a0)
		move.w	#$27,$2E(a0)
		move.l	#loc_4A7EC,$34(a0)
		bsr.w	sub_4AFA6
		bclr	#5,$38(a0)
		lea	ChildObjDat_4B40E(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4A77E:
		move.b	#8,5(a0)
		move.w	#$2F,$2E(a0)
		move.l	#loc_4A854,$34(a0)
		bclr	#2,$38(a0)
		bsr.w	sub_4B0A0
		lea	ChildObjDat_4B426(pc),a2
		jsr	(CreateChild1_Normal).l

loc_4A7A6:
		bclr	#5,$38(a0)
		lea	ChildObjDat_4B40E(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4A7B6:
		jsr	(Animate_RawMultiDelay).l
		bra.w	loc_4A6FE
; ---------------------------------------------------------------------------

loc_4A7C0:
		move.b	#2,5(a0)
		move.w	#$1F,$2E(a0)
		movea.w	$44(a0),a1
		move.l	#loc_4A7EC,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A7DA:
		jsr	(MoveSprite2).l
		jsr	(Animate_RawMultiDelay).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4A7EC:
		move.b	#$A,5(a0)
		movea.w	$46(a0),a1
		bset	#3,$38(a1)
		move.w	#0,$2E(a0)
		move.l	#loc_4A818,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A80C:
		jsr	(Animate_RawMultiDelay).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4A818:
		move.b	#8,5(a0)
		movea.w	$46(a0),a1
		bclr	#3,$38(a1)
		neg.w	$18(a0)
		move.w	#$27,$2E(a0)
		move.l	#loc_4A83C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A83C:
		move.b	#4,5(a0)
		movea.w	$44(a0),a1
		bset	#5,$38(a0)
		bclr	#1,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_4A854:
		move.b	#$E,5(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4A870,$34(a0)
		bset	#5,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A870:
		move.b	#8,5(a0)
		move.w	#$2F,$2E(a0)
		move.l	#loc_4A89E,$34(a0)
		bsr.w	sub_4B146
		lea	ChildObjDat_4B426(pc),a2
		jsr	(CreateChild1_Normal).l
		bne.s	loc_4A89A
		move.b	#2,$2C(a1)

loc_4A89A:
		bra.w	loc_4A7A6
; ---------------------------------------------------------------------------

loc_4A89E:
		move.b	#$12,5(a0)
		ori.b	#$24,$38(a0)
		movea.w	$44(a0),a1
		bset	#2,$38(a1)
		bclr	#1,$38(a1)
		subi.w	#$80,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A8C2:
		movea.w	$44(a0),a1
		btst	#2,$38(a1)
		bne.s	locret_4A8D4
		move.b	#4,5(a0)

locret_4A8D4:
		rts
; ---------------------------------------------------------------------------

loc_4A8D6:
		lea	word_4B390(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#loc_4A8E8,(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A8E8:
		movea.w	$46(a0),a1
		btst	#5,$38(a1)
		bne.w	loc_4A696
		jsr	(Refresh_ChildPositionAdjusted).l
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------

loc_4A902:
		lea	word_4B39C(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		clr.b	$28(a0)
		move.w	#$200,8(a0)
		move.l	#loc_4A950,(a0)
		movea.w	$46(a0),a1
		move.w	$26(a1),d0
		move.w	word_4A938(pc,d0.w),$42(a0)
		lsr.w	#1,d0
		move.b	RawAni_4A948(pc,d0.w),$22(a0)
		jmp	(Refresh_ChildPositionAdjusted).l
; ---------------------------------------------------------------------------
word_4A938:	dc.w $C00
		dc.w $3F9
		dc.w $F0
		dc.w $FDF9
		dc.w $F400
		dc.w $FD07
		dc.w $10
		dc.w $C00
RawAni_4A948:	dc.b  $1C, $15, $2C, $2A, $2D, $2B, $29, $1C
; ---------------------------------------------------------------------------

loc_4A950:
		jsr	(Refresh_ChildPositionAdjusted).l
		movea.w	$46(a0),a1
		btst	#5,$38(a1)
		bne.s	loc_4A970
		btst	#4,$38(a1)
		bne.s	loc_4A970
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4A970:
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_4A976:
		move.l	#loc_4A99C,(a0)
		move.l	#loc_4A9BC,$34(a0)
		movea.w	$46(a0),a1
		move.w	$26(a1),$26(a0)
		move.b	4(a1),4(a0)
		move.w	#4,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_4A99C:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_4A9B6
		btst	#4,$38(a1)
		bne.s	loc_4A9B6
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_4A9B6:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4A9BC:
		move.w	#4,$2E(a0)
		lea	ChildObjDat_4B42E(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4A9CC:
		lea	word_4B3A2(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#loc_4AA0A,(a0)
		move.w	#$2F,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		movea.w	$46(a0),a1
		movea.w	$46(a1),a2
		move.w	a2,$44(a0)
		move.w	$26(a1),$26(a0)
		move.w	$2C(a1),$2C(a0)
		bsr.w	sub_4AFA6
		bra.w	loc_4B2A0
; ---------------------------------------------------------------------------

loc_4AA0A:
		movea.w	$44(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_4AA26
		jsr	(MoveSprite2).l
		jsr	(Obj_Wait).l
		bra.w	loc_4B2A0
; ---------------------------------------------------------------------------

loc_4AA26:
		move.l	#loc_4AA3A,(a0)
		movea.w	$44(a0),a1
		move.w	$46(a1),$44(a0)
		bra.w	loc_4B2A0
; ---------------------------------------------------------------------------

loc_4AA3A:
		movea.w	$44(a0),a1
		movea.w	$46(a1),a2
		move.w	$14(a1),d0
		move.b	$2C(a2),d1
		cmp.b	$2C(a0),d1
		bne.s	loc_4AA82
		tst.b	d1
		bne.s	loc_4AA6E
		moveq	#$10,d1
		btst	#1,(_unkFA83).w
		bne.s	loc_4AA60
		moveq	#$18,d1

loc_4AA60:
		add.w	d1,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_4AA82

loc_4AA68:
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_4AA6E:
		moveq	#$14,d1
		btst	#1,(_unkFA8A+1).w
		bne.s	loc_4AA7A
		moveq	#$1C,d1

loc_4AA7A:
		sub.w	d1,d0
		cmp.w	$14(a0),d0
		bls.s	loc_4AA68

loc_4AA82:
		bra.w	loc_4B2A0
; ---------------------------------------------------------------------------

loc_4AA86:
		lea	word_4B3A2(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#loc_4AAA2,(a0)
		bsr.w	sub_4AFE0
		move.l	#loc_4AABC,$34(a0)

loc_4AAA2:
		subq.w	#1,$2E(a0)
		bmi.s	loc_4AABC
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		beq.w	locret_49DD8
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_4AABC:
		move.l	#loc_4AAD4,(a0)
		move.b	#$17,$22(a0)
		clr.w	$2E(a0)
		moveq	#0,d0
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------

loc_4AAD4:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_4AAF6
		move.b	#$16,$22(a0)
		addq.w	#1,$2E(a0)
		jsr	(MoveSprite2).l
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------

loc_4AAF6:
		move.l	#loc_4AB04,(a0)
		moveq	#0,d0
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------

loc_4AB04:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		beq.s	loc_4AB16
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------

loc_4AB16:
		move.l	#loc_4AB28,(a0)
		neg.w	$18(a0)
		moveq	#0,d0
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------

loc_4AB28:
		subq.w	#1,$2E(a0)
		bmi.s	loc_4AB3A
		jsr	(MoveSprite2).l
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------

loc_4AB3A:
		move.b	#$17,$22(a0)
		move.l	#Delete_Current_Sprite,(a0)
		moveq	#0,d0
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------

loc_4AB4E:
		lea	word_4B3A8(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#loc_4AB8E,(a0)
		move.b	$2C(a0),d0
		subi.b	#4,d0
		move.b	d0,$2C(a0)
		beq.s	loc_4AB84
		move.w	#$380,8(a0)
		movea.w	$46(a0),a1
		cmpi.l	#Obj_A1_1_MGZ2_Boss,(a1)
		bne.s	loc_4AB84
		bclr	#7,$A(a0)

loc_4AB84:
		lea	ChildObjDat_4B3F6(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_4AB8E:
		movea.w	$46(a0),a1
		btst	#5,$38(a1)
		bne.s	loc_4ABB0
		lea	byte_4AF44(pc),a2
		bsr.w	sub_4AF16
		jsr	(Refresh_ChildPositionAdjusted).l
		moveq	#$14,d0
		jmp	(Child_Draw_Sprite2_FlickerMove).l
; ---------------------------------------------------------------------------

loc_4ABB0:
		bset	#5,$38(a0)
		move.l	#Delete_Current_Sprite,(a0)
		rts
; ---------------------------------------------------------------------------

loc_4ABBE:
		lea	word_4B3AE(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		move.l	#loc_4ABFA,(a0)
		movea.w	$46(a0),a1
		move.w	$46(a1),$44(a0)
		tst.b	$2C(a1)
		beq.s	loc_4ABE4
		move.w	#$300,8(a0)

loc_4ABE4:
		bclr	#7,$A(a0)
		btst	#7,$A(a1)
		beq.s	locret_4ABF8
		bset	#7,$A(a0)

locret_4ABF8:
		rts
; ---------------------------------------------------------------------------

loc_4ABFA:
		movea.w	$46(a0),a1
		btst	#5,$38(a1)
		bne.s	loc_4AC30
		lea	byte_4AF58(pc),a2
		bsr.w	sub_4AF16
		jsr	(Refresh_ChildPositionAdjusted).l
		movea.w	$44(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4AC30
		btst	#0,(V_int_run_count+3).w
		bne.w	locret_49DD8
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_4AC30:
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

loc_4AC36:
		lea	ObjDat3_4B3B6(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_4AC4A,(a0)
		bra.w	loc_4B054
; ---------------------------------------------------------------------------

loc_4AC4A:
		jsr	(MoveSprite_LightGravity).l
		jmp	(Sprite_CheckDeleteXY).l
; ---------------------------------------------------------------------------
		lea	word_4B3C2(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#loc_4AC72,(a0)
		movea.w	$46(a0),a1
		move.w	$46(a1),$44(a0)
		rts
; ---------------------------------------------------------------------------

loc_4AC72:
		jsr	(Refresh_ChildPositionAdjusted).l
		movea.w	$44(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4ACA8
		btst	#6,$2A(a1)
		bne.s	loc_4AC9C
		lea	RawAni_4B584(pc),a1
		jsr	(Animate_RawNoSST).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4AC9C:
		move.b	#2,$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4ACA8:
		move.l	#loc_4ACBA,(a0)
		move.b	#3,$22(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4ACBA:
		jsr	(Refresh_ChildPositionAdjusted).l
		jmp	(Child_Draw_Sprite2).l
; ---------------------------------------------------------------------------

loc_4ACC6:
		lea	word_4B396(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		jsr	(Refresh_ChildPositionAdjusted).l
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		beq.s	loc_4ACEA
		move.w	#$200,8(a0)

loc_4ACEA:
		lsr.w	#1,d0
		addi.b	#$2E,d0
		move.b	d0,$22(a0)
		moveq	#$28,d0
		jmp	(Set_IndexedVelocity).l
; ---------------------------------------------------------------------------

loc_4ACFC:
		lea	ObjDat3_4B3C8(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_4AD68,(a0)
		move.w	#-$72E0,$3A(a0)
		move.w	(Camera_X_pos).w,d0
		addi.w	#$140,d0
		move.w	d0,$10(a0)
		move.w	d0,$30(a0)
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$50,d0
		move.w	d0,$14(a0)
		move.w	d0,$34(a0)
		move.w	#-$400,$18(a0)
		move.b	#4,$40(a0)
		move.l	#ArtScaled_MGZEndBoss,$42(a0)
		move.b	#1,$3E(a0)
		bsr.w	sub_4B2C6
		moveq	#6,d0
		move.w	$1C(a0),d1
		beq.s	loc_4AD60
		cmpi.w	#$C,d1
		beq.s	loc_4AD60
		moveq	#$10,d0

loc_4AD60:
		move.w	d0,$2E(a0)
		bra.w	loc_4ADF4
; ---------------------------------------------------------------------------

loc_4AD68:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.w	loc_4AE30
		move.w	$18(a0),d0
		add.w	$2E(a0),d0
		cmpi.w	#-$100,d0
		bgt.s	loc_4AD88
		move.w	d0,$18(a0)

loc_4AD88:
		move.w	$1A(a0),d0
		move.w	$3C(a0),d1
		bmi.s	loc_4AD9E
		add.w	d1,d0
		cmpi.w	#$400,d0
		ble.s	loc_4ADA6
		bra.w	loc_4ADAA
; ---------------------------------------------------------------------------

loc_4AD9E:
		add.w	d1,d0
		cmpi.w	#-$400,d0
		blt.s	loc_4ADAA

loc_4ADA6:
		move.w	d0,$1A(a0)

loc_4ADAA:
		bsr.w	sub_4B30A
		move.w	$30(a0),d2
		move.w	$34(a0),d3
		moveq	#0,d0
		move.b	$40(a0),d0
		addq.w	#4,d0
		move.l	#$100,d4
		divu.w	d0,d4
		sub.w	d4,d2
		sub.w	d4,d3
		move.w	d2,$10(a0)
		move.w	d3,$14(a0)
		move.b	(V_int_run_count+3).w,d0
		andi.b	#3,d0
		bne.s	loc_4AE26
		move.b	$40(a0),d0
		add.b	$3E(a0),d0
		andi.b	#$7F,d0
		cmpi.b	#4,d0
		bcs.w	loc_4ADF4
		move.b	d0,$40(a0)

loc_4ADF4:
		clr.w	(_unkF740).w
		move.l	a0,-(sp)
		jsr	(Init_ArtScaling).l
		movea.l	(sp)+,a0
		move.l	a0,-(sp)
		move.w	$A(a0),d0
		jsr	(sub_22C90).l
		movea.l	(sp)+,a0
		move.w	(_unkF740).w,d3
		lsl.w	#4,d3
		move.l	#-$3000,d1
		move.w	$3A(a0),d2
		jsr	(Add_To_DMA_Queue).l

loc_4AE26:
		move.w	$30(a0),d0
		jmp	(Sprite_OnScreen_Test2).l
; ---------------------------------------------------------------------------

loc_4AE30:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4AE36:
		subq.w	#1,$2E(a0)
		bpl.s	locret_4AE6A
		moveq	#0,d0
		move.b	$39(a0),d0
		move.w	word_4AE7C(pc,d0.w),$2E(a0)
		lsl.w	#4,d0
		lea	(Pal_MGZFadeCNZ).l,a1
		adda.w	d0,a1
		lea	(Normal_palette_line_4).w,a2
		moveq	#7,d1

loc_4AE58:
		move.l	(a1)+,(a2)+
		dbf	d1,loc_4AE58
		addq.b	#2,$39(a0)
		cmpi.b	#$20,$39(a0)
		bcc.s	loc_4AE6C

locret_4AE6A:
		rts
; ---------------------------------------------------------------------------

loc_4AE6C:
		move.w	#$300,d0
		jsr	(StartNewLevel).l
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
word_4AE7C:	dc.w $A
		dc.w $A
		dc.w $A
		dc.w $A
		dc.w $A
		dc.w $A
		dc.w $A
		dc.w $A
		dc.w $A
		dc.w $64
		dc.w 5
		dc.w 5
		dc.w 5
		dc.w 5
		dc.w $14

; =============== S U B R O U T I N E =======================================


sub_4AE9A:
		movea.w	$46(a0),a1
		move.w	$26(a1),d0
		move.w	d0,$26(a0)
		lea	(a2,d0.w),a3
		move.b	(a3)+,$22(a0)
		moveq	#0,d0
		move.b	(a3)+,d0
		beq.s	locret_4AEBA
		lsl.w	#4,d0
		move.w	d0,8(a0)

locret_4AEBA:
		rts
; End of function sub_4AE9A

; ---------------------------------------------------------------------------
byte_4AEBC:	dc.b    2, $30
		dc.b    3, $30
		dc.b  $1E, $30
		dc.b  $1F, $30
		dc.b    5, $30
		dc.b    3, $30
		dc.b    4, $30
		dc.b    2, $30
byte_4AECC:	dc.b    9, $28
		dc.b   $C, $28
		dc.b  $20, $28
		dc.b  $14, $30
		dc.b  $13, $30
		dc.b  $12, $30
		dc.b   $F, $28
		dc.b    9, $28

; =============== S U B R O U T I N E =======================================


sub_4AEDC:
		movea.w	$46(a0),a1
		move.w	$26(a1),d0
		move.w	d0,$26(a0)
		lea	(a2,d0.w),a3
		move.b	(a3)+,$42(a0)
		move.b	(a3)+,$43(a0)
		rts
; End of function sub_4AEDC

; ---------------------------------------------------------------------------
byte_4AEF6:	dc.b  $E4, $10
		dc.b  $F6, $18
		dc.b   $C, $1C
		dc.b  $18, $14
		dc.b  $2C,   8
		dc.b  $20, $F4
		dc.b  $14, $EC
		dc.b  $E4, $10
byte_4AF06:	dc.b  $E9,   0
		dc.b  $EF, $16
		dc.b    0, $20
		dc.b  $10,  $F
		dc.b  $11,   0
		dc.b  $10, $F0
		dc.b    0, $E0
		dc.b  $E9,   0

; =============== S U B R O U T I N E =======================================


sub_4AF16:
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	$3A(a1),d0
		move.b	d0,$3A(a0)
		add.w	d0,d0
		lea	(a2,d0.w),a3
		move.b	(a3)+,$42(a0)
		move.b	(a3)+,$43(a0)
		move.b	(a3)+,$22(a0)
		tst.b	$2C(a0)
		beq.s	locret_4AF42
		subi.b	#$14,$42(a0)

locret_4AF42:
		rts
; End of function sub_4AF16

; ---------------------------------------------------------------------------
byte_4AF44:	dc.b    8, $18
		dc.b    6,   0
		dc.b  $F8, $14
		dc.b    7,   0
		dc.b  $18, $14
		dc.b    8,   0
		dc.b  $18,   8
		dc.b  $18,   0
		dc.b  $18, $FC
		dc.b  $23,   0
byte_4AF58:	dc.b    0, $10
		dc.b  $19,   0
		dc.b  $F8,   8
		dc.b  $1A,   0
		dc.b    8,   8
		dc.b  $24,   0
		dc.b  $10,   0
		dc.b  $1B,   0
		dc.b    9, $F9
		dc.b  $25,   0
; ---------------------------------------------------------------------------

loc_4AF6C:
		movea.w	$44(a0),a1
		move.w	$26(a1),d0
		add.w	d0,d0
		move.l	off_4AF86(pc,d0.w),$30(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		rts
; ---------------------------------------------------------------------------
off_4AF86:	dc.l byte_4B45B
		dc.l byte_4B482
		dc.l byte_4B4A9
		dc.l byte_4B4D0
		dc.l byte_4B4D5
		dc.l byte_4B4DA
		dc.l byte_4B4E1
		dc.l byte_4B45B

; =============== S U B R O U T I N E =======================================


sub_4AFA6:
		move.w	$26(a0),d0
		add.w	d0,d0
		move.l	dword_4AFC0(pc,d0.w),$18(a0)
		btst	#0,4(a1)
		beq.s	locret_4AFBE
		neg.w	$18(a0)

locret_4AFBE:
		rts
; End of function sub_4AFA6

; ---------------------------------------------------------------------------
dword_4AFC0:	dc.l $FC000000
		dc.l $FC000400
		dc.l $400
		dc.l $4000400
		dc.l $4000000
		dc.l $400FC00
		dc.l $FC00
		dc.l $FC000000

; =============== S U B R O U T I N E =======================================


sub_4AFE0:
		movea.w	$46(a0),a1
		move.w	$26(a1),d0
		add.w	d0,d0
		move.l	dword_4AFC0(pc,d0.w),$18(a0)
		btst	#0,4(a1)
		beq.s	loc_4AFFC
		neg.w	$18(a0)

loc_4AFFC:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4B00A(pc,d0.w),$2E(a0)
		rts
; End of function sub_4AFE0

; ---------------------------------------------------------------------------
word_4B00A:	dc.w 4
		dc.w 9
		dc.w $E
		dc.w $13
		dc.w $18
		dc.w $1D
		dc.w $22
		dc.w $27
; ---------------------------------------------------------------------------

loc_4B01A:
		movea.w	$44(a0),a1
		move.w	$26(a1),d0
		add.w	d0,d0
		move.l	off_4B034(pc,d0.w),$30(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		rts
; ---------------------------------------------------------------------------
off_4B034:	dc.l byte_4B508
		dc.l byte_4B527
		dc.l byte_4B546
		dc.l byte_4B4D0
		dc.l byte_4B4D5
		dc.l byte_4B4DA
		dc.l byte_4B565
		dc.l byte_4B508
; ---------------------------------------------------------------------------

loc_4B054:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,d1
		lsr.w	#1,d0
		move.b	RawAni_4B06E(pc,d0.w),$22(a0)
		add.w	d1,d1
		move.l	word_4B078(pc,d1.w),$18(a0)
		rts
; ---------------------------------------------------------------------------
RawAni_4B06E:	dc.b    0,   1,   2,   0,   0,   1,   0,   2,   0,   1
word_4B078:	dc.w  $FC00, $FC00
		dc.w   $400, $FC00
		dc.w  $FF80, $FC00
		dc.w    $80, $FC00
		dc.w  $FD00, $FE00
		dc.w   $300, $FE00
		dc.w  $FE00, $FD00
		dc.w   $200, $FD00
		dc.w  $FF80, $FE00
		dc.w    $80, $FE00

; =============== S U B R O U T I N E =======================================


sub_4B0A0:
		jsr	(Random_Number).l
		andi.w	#$FF,d0
		move.w	d0,d1
		andi.w	#1,d1
		bclr	#0,4(a0)
		subi.w	#$80,d0
		bcc.s	LevelLoop4
		addq.w	#2,d1
		bset	#0,4(a0)

LevelLoop4:
		move.w	#$550,d3
		lea	(_unkFA82).w,a2

LevelLoopC:
		move.w	#$3AF0,d2
		add.w	d0,d2
		add.w	d1,d1
		move.w	word_4B116(pc,d1.w),d4
		move.w	d4,$26(a0)
		move.w	d2,$10(a0)
		move.w	d3,$14(a0)
		move.w	d1,(a2)+
		move.w	d4,(a2)+
		move.w	d2,(a2)+
		move.w	d3,(a2)+
		add.w	d1,d1
		move.l	off_4B126(pc,d1.w),$30(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		add.w	d4,d4
		lea	dword_4AFC0(pc),a3
		move.l	(a3,d4.w),$18(a0)
		btst	#0,4(a0)
		beq.s	locret_4B114
		neg.w	$18(a0)

locret_4B114:
		rts
; End of function sub_4B0A0

; ---------------------------------------------------------------------------
word_4B116:	dc.w 4
		dc.w 2
		dc.w 4
		dc.w 2
		dc.w $C
		dc.w $A
		dc.w $C
		dc.w $A
off_4B126:	dc.l byte_4B4C9
		dc.l byte_4B4A2
		dc.l byte_4B4C9
		dc.l byte_4B4A2
		dc.l byte_4B501
		dc.l byte_4B4DA
		dc.l byte_4B501
		dc.l byte_4B4DA

; =============== S U B R O U T I N E =======================================


sub_4B146:
		jsr	(Random_Number).l
		andi.w	#$7F,d0
		move.w	d0,d1
		andi.w	#1,d1
		addq.w	#4,d1
		move.w	(_unkFA82).w,d2
		lsr.w	#1,d2
		bset	#0,4(a0)
		move.b	byte_4B180(pc,d2.w),d3
		beq.s	loc_4B172
		neg.w	d0
		bclr	#0,4(a0)

loc_4B172:
		add.b	d3,d1
		move.w	#$610,d3
		lea	(_unkFA8A).w,a2
		bra.w	LevelLoopC
; End of function sub_4B146

; ---------------------------------------------------------------------------
byte_4B180:	dc.b 2
		dc.b 0
		dc.b 0
		dc.b 2
; ---------------------------------------------------------------------------

loc_4B184:
		move.w	(a1)+,d0
		move.w	(a1)+,d1
		move.w	d1,$26(a0)
		move.w	(a1)+,d2
		move.w	(a1)+,d3
		lea	byte_4B1E2(pc,d0.w),a2
		move.b	(a2)+,d4
		ext.w	d4
		add.w	d4,d2
		move.w	d2,$10(a0)
		move.b	(a2)+,d4
		ext.w	d4
		add.w	d4,d3
		move.w	d3,$14(a0)
		lsr.w	#1,d0
		move.b	byte_4B1F2(pc,d0.w),$3A(a0)
		lsr.w	#1,d0
		move.b	byte_4B1FA(pc,d0.w),d2
		andi.b	#-4,4(a0)
		or.b	d2,4(a0)
		add.w	d1,d1
		lea	dword_4AFC0(pc),a2
		move.l	(a2,d1.w),$18(a0)
		asr	$18(a0)
		asr	$1A(a0)
		btst	#0,4(a0)
		beq.s	locret_4B1E0
		neg.w	$18(a0)

locret_4B1E0:
		rts
; ---------------------------------------------------------------------------
byte_4B1E2:	dc.b  $F4, $D4
		dc.b  $1A, $D8
		dc.b   $C, $D4
		dc.b  $E6, $D8
		dc.b  $14, $24
		dc.b  $30, $1C
		dc.b  $EC, $24
		dc.b  $D0, $1C
byte_4B1F2:	dc.b 0
		dc.b 8
		dc.b 0
		dc.b 8
		dc.b 0
		dc.b 2
		dc.b 0
		dc.b 2
byte_4B1FA:	dc.b 0
		dc.b 1
		dc.b 1
		dc.b 0

; =============== S U B R O U T I N E =======================================


MGZ2_SpecialCheckHit:
		tst.b	$28(a0)
		bne.s	locret_4B262
		tst.b	$29(a0)
		bne.s	loc_4B21C
		tst.b	$46(a0)
		beq.s	loc_4B264
		move.b	#1,$29(a0)
		bclr	#7,$2A(a0)

loc_4B21C:
		tst.b	$20(a0)
		bne.s	loc_4B230
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_4B230:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_4B244
		addi.w	#6,d0

loc_4B244:
		bsr.w	MGZ2_BossPalAdjust
		subq.b	#1,$20(a0)
		bne.s	locret_4B262
		bclr	#6,$2A(a0)
		cmpi.b	#0,$22(a0)
		bne.s	locret_4B262
		move.b	$25(a0),$28(a0)

locret_4B262:
		rts
; ---------------------------------------------------------------------------

loc_4B264:
		move.l	#Wait_Draw,(a0)
		move.l	#loc_4A592,$34(a0)
		jmp	(BossDefeated_StopTimer).l
; End of function MGZ2_SpecialCheckHit


; =============== S U B R O U T I N E =======================================


MGZ2_BossPalAdjust:
		lea	word_4B28E(pc),a1
		lea	word_4B294(pc,d0.w),a2
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		rts
; End of function MGZ2_BossPalAdjust

; ---------------------------------------------------------------------------
word_4B28E:	dc.w Normal_palette_line_2+$16, Normal_palette_line_2+$1A, Normal_palette_line_2+$1C
word_4B294:	dc.w    $20,  $866,  $644
		dc.w   $EEE,  $888,  $AAA
; ---------------------------------------------------------------------------

loc_4B2A0:
		movea.w	$44(a0),a1
		movea.w	$46(a1),a1
		btst	#7,$2A(a1)
		bne.s	loc_4B2B6
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------

loc_4B2B6:
		jsr	(Random_Number).l
		andi.w	#$3C,d0
		jmp	(loc_5312A).l

; =============== S U B R O U T I N E =======================================


sub_4B2C6:
		movea.w	$46(a0),a2
		moveq	#0,d0
		move.b	$39(a2),d0
		addq.b	#1,$39(a2)
		andi.b	#7,d0
		move.b	byte_4B302(pc,d0.w),d0
		move.w	d0,$1C(a0)
		move.w	d0,$3C(a2)
		lea	word_4B2F2(pc,d0.w),a1
		move.w	(a1)+,$1A(a0)
		move.w	(a1)+,$3C(a0)
		rts
; End of function sub_4B2C6

; ---------------------------------------------------------------------------
word_4B2F2:	dc.w  $FE00,     8
		dc.w  $FA00,   $40
		dc.w   $600, $FFC0
		dc.w  $FE00,     8
byte_4B302:	dc.b 0
		dc.b 8
		dc.b 4
		dc.b 0
		dc.b 0
		dc.b 4
		dc.b 0
		dc.b 8

; =============== S U B R O U T I N E =======================================


sub_4B30A:
		move.w	$18(a0),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$30(a0)
		move.w	$1A(a0),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$34(a0)
		rts
; End of function sub_4B30A

; ---------------------------------------------------------------------------

loc_4B324:
		move.w	$3C(a0),d0
		lea	word_4B358(pc,d0.w),a2
		move.w	(a2)+,d1
		add.w	(Camera_X_pos).w,d1
		move.w	d1,$10(a0)
		move.w	(a2)+,d1
		add.w	(Camera_Y_pos).w,d1
		move.w	d1,$14(a0)
		move.l	dword_4B368(pc,d0.w),$18(a0)
		lsr.w	#1,d0
		move.w	word_4B378(pc,d0.w),$26(a0)
		lsr.w	#1,d0
		move.b	byte_4B380(pc,d0.w),$3A(a0)
		rts
; ---------------------------------------------------------------------------
word_4B358:	dc.w  $FFC0,   $70
		dc.w    $A0,  $120
		dc.w    $A0, $FFB0
		dc.w  $FFC0,   $70
dword_4B368:	dc.l $2000000
		dc.l $80FE00
		dc.l $800200
		dc.l $2000000
word_4B378:	dc.w 0
		dc.w $C
		dc.w 4
		dc.w 0
byte_4B380:	dc.b 6
		dc.b 4
		dc.b 8
		dc.b 6
ObjDat_MGZDrillBoss:dc.l Map_MGZEndBoss
		dc.w $233F
		dc.w $300
		dc.b $24
		dc.b $20
		dc.b 0
		dc.b $F
word_4B390:	dc.w $380
		dc.b $10
		dc.b $10
		dc.b 1
		dc.b 0
word_4B396:	dc.w $300
		dc.b $18
		dc.b $18
		dc.b 2
		dc.b 0
word_4B39C:	dc.w $280
		dc.b $C
		dc.b $C
		dc.b 9
		dc.b $8B
word_4B3A2:	dc.w $200
		dc.b 4
		dc.b 4
		dc.b $16
		dc.b $98
word_4B3A8:	dc.w $180
		dc.b $C
		dc.b $C
		dc.b 6
		dc.b 0
word_4B3AE:	dc.w $33F
		dc.w $180
		dc.b $C
		dc.b $C
		dc.b $19
		dc.b $9A
ObjDat3_4B3B6:	dc.l Map_MGZEndBossDebris
		dc.w $C45E
		dc.w $100
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
word_4B3C2:	dc.w $200
		dc.b $10
		dc.b 4
		dc.b 0
		dc.b 0
ObjDat3_4B3C8:	dc.l Map_ScaledArt
		dc.w $2469
		dc.w $300
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
ChildObjDat_4B3D4:dc.w 3
		dc.l loc_4A8D6
		dc.w $EC0F
		dc.l loc_4A5FC
		dc.w $E410
		dc.l loc_4AB4E
		dc.w $818
		dc.l loc_4AB4E
		dc.w $F418
ChildObjDat_4B3EE:dc.w 0
		dc.l loc_4A69C
		dc.w $E900
ChildObjDat_4B3F6:dc.w 0
		dc.l loc_4ABBE
		dc.w $10
ChildObjDat_4B3FE:dc.w 9
		dc.l loc_4AC36
		dc.w $18C0
ChildObjDat_4B406:dc.w 9
		dc.l loc_4AC36
		dc.w $E8C0
ChildObjDat_4B40E:dc.w 0
		dc.l loc_4A902
		dc.w $C00
ChildObjDat_4B416:dc.w 7
		dc.l loc_4AA86
		dc.w $F000
ChildObjDat_4B41E:dc.w 7
		dc.l loc_4AA86
		dc.w $1000
ChildObjDat_4B426:dc.w 0
		dc.l loc_4A976
		dc.w 0
ChildObjDat_4B42E:dc.w 0
		dc.l loc_4A9CC
		dc.w 0
ChildObjDat_4B436:dc.w 2
		dc.l loc_4ACC6
		dc.w $CEC
		dc.l loc_4ACC6
		dc.w $F008
		dc.l loc_4ACC6
		dc.w $1408
ChildObjDat_4B44A:dc.w 0
		dc.l loc_4ACFC
		dc.w 0
		dc.b    0,   5
		dc.b    1,   5
		dc.b    2,   5
		dc.b    3,   5
		dc.b  $FC
byte_4B45B:	dc.b    9,   7
		dc.b   $A,   7
		dc.b   $B,   7
		dc.b    9,   6
		dc.b   $A,   6
		dc.b   $B,   6
		dc.b    9,   5
		dc.b   $A,   5
		dc.b   $B,   5
		dc.b    9,   4
		dc.b   $A,   4
		dc.b   $B,   4
		dc.b    9,   3
		dc.b   $A,   3
		dc.b   $B,   3
		dc.b  $F8, $20
		dc.b    9,   2
		dc.b   $A,   2
		dc.b   $B,   2
		dc.b  $FC
byte_4B482:	dc.b   $C,   7
		dc.b   $D,   7
		dc.b   $E,   7
		dc.b   $C,   6
		dc.b   $D,   6
		dc.b   $E,   6
		dc.b   $C,   5
		dc.b   $D,   5
		dc.b   $E,   5
		dc.b   $C,   4
		dc.b   $D,   4
		dc.b   $E,   4
		dc.b   $C,   3
		dc.b   $D,   3
		dc.b   $E,   3
		dc.b  $F8, $20
byte_4B4A2:	dc.b   $C,   2
		dc.b   $D,   2
		dc.b   $E,   2
		dc.b  $FC
byte_4B4A9:	dc.b  $20,   7
		dc.b  $21,   7
		dc.b  $22,   7
		dc.b  $20,   6
		dc.b  $21,   6
		dc.b  $22,   6
		dc.b  $20,   5
		dc.b  $21,   5
		dc.b  $22,   5
		dc.b  $20,   4
		dc.b  $21,   4
		dc.b  $22,   4
		dc.b  $20,   3
		dc.b  $21,   3
		dc.b  $22,   3
		dc.b  $F8, $20
byte_4B4C9:	dc.b  $20,   2
		dc.b  $21,   2
		dc.b  $22,   2
		dc.b  $FC
byte_4B4D0:	dc.b  $14, $7F
		dc.b  $14, $7F
		dc.b  $FC
byte_4B4D5:	dc.b  $13, $7F
		dc.b  $13, $7F
		dc.b  $FC
byte_4B4DA:	dc.b  $26,   2
		dc.b  $27,   2
		dc.b  $28,   2
		dc.b  $FC
byte_4B4E1:	dc.b   $F,   7
		dc.b  $10,   7
		dc.b  $11,   7
		dc.b   $F,   6
		dc.b  $10,   6
		dc.b  $11,   6
		dc.b   $F,   5
		dc.b  $10,   5
		dc.b  $11,   5
		dc.b   $F,   4
		dc.b  $10,   4
		dc.b  $11,   4
		dc.b   $F,   3
		dc.b  $10,   3
		dc.b  $11,   3
		dc.b  $F8, $20
byte_4B501:	dc.b   $F,   2
		dc.b  $10,   2
		dc.b  $11,   2
		dc.b  $FC
byte_4B508:	dc.b    9,   3
		dc.b   $A,   3
		dc.b   $B,   3
		dc.b    9,   4
		dc.b   $A,   4
		dc.b   $B,   4
		dc.b    9,   5
		dc.b   $A,   5
		dc.b   $B,   5
		dc.b    9,   6
		dc.b   $A,   6
		dc.b   $B,   6
		dc.b    9,   7
		dc.b   $A,   7
		dc.b   $B,   7
		dc.b  $F4
byte_4B527:	dc.b   $C,   3
		dc.b   $D,   3
		dc.b   $E,   3
		dc.b   $C,   4
		dc.b   $D,   4
		dc.b   $E,   4
		dc.b   $C,   5
		dc.b   $D,   5
		dc.b   $E,   5
		dc.b   $C,   6
		dc.b   $D,   6
		dc.b   $E,   6
		dc.b   $C,   7
		dc.b   $D,   7
		dc.b   $E,   7
		dc.b  $F4
byte_4B546:	dc.b  $20,   3
		dc.b  $21,   3
		dc.b  $22,   3
		dc.b  $20,   4
		dc.b  $21,   4
		dc.b  $22,   4
		dc.b  $20,   5
		dc.b  $21,   5
		dc.b  $22,   5
		dc.b  $20,   6
		dc.b  $21,   6
		dc.b  $22,   6
		dc.b  $20,   7
		dc.b  $21,   7
		dc.b  $22,   7
		dc.b  $F4
byte_4B565:	dc.b   $F,   3
		dc.b  $10,   3
		dc.b  $11,   3
		dc.b   $F,   4
		dc.b  $10,   4
		dc.b  $11,   4
		dc.b   $F,   5
		dc.b  $10,   5
		dc.b  $11,   5
		dc.b   $F,   6
		dc.b  $10,   6
		dc.b  $11,   6
		dc.b   $F,   7
		dc.b  $10,   7
		dc.b  $11,   7
		dc.b  $F4
RawAni_4B584:	dc.b    5,   0,   1, $FC
Pal_MGZEndBoss:	binclude "Levels/MGZ/Palettes/End Boss.bin"
		even
; ---------------------------------------------------------------------------

Obj_CNZMiniboss:
		move.w	#$31E0,d0
		cmp.w	(Camera_X_pos).w,d0
		bls.s	loc_4B5B4
		rts
; ---------------------------------------------------------------------------

loc_4B5B4:
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.w	#$1A0,(Camera_min_Y_pos).w
		move.w	d0,(Camera_min_X_pos).w
		addi.w	#$80,d0
		move.w	d0,(Camera_max_X_pos).w
		move.w	#$2B8,(Camera_max_Y_pos).w
		move.w	#$2B8,(Camera_target_max_Y_pos).w
		move.l	#Obj_Wait,(a0)
		move.w	#$78,$2E(a0)
		move.l	#Obj_CNZMinibossGo,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.b	#1,(Boss_flag).w
		moveq	#$5D,d0
		jsr	(Load_PLC).l
		lea	Pal_CNZMiniboss(pc),a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossGo:
		move.l	#Obj_CNZMinibossStart,(a0)
		moveq	#signextendB(mus_Miniboss),d0
		jsr	(Play_Sound).l
		jsr	(Create_New_Sprite).l
		bne.s	locret_4B628
		move.l	#Obj_CNZMinibossScrollControl,(a1)

locret_4B628:
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossStart:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	CNZMiniboss_Index(pc,d0.w),d1
		jsr	CNZMiniboss_Index(pc,d1.w)
		bsr.w	CNZMiniboss_MoveDown
		jsr	(Run_PalRotationScript).l
		bsr.w	CNZMiniboss_CheckPlayerHit
		bsr.w	CNZMiniboss_CheckTopHit
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
CNZMiniboss_Index:dc.w Obj_CNZMinibossInit-CNZMiniboss_Index
		dc.w Obj_CNZMinibossLower-CNZMiniboss_Index
		dc.w Obj_CNZMinibossMove-CNZMiniboss_Index
		dc.w Obj_CNZMinibossMove-CNZMiniboss_Index
		dc.w Obj_CNZMinibossOpening-CNZMiniboss_Index
		dc.w Obj_CNZMinibossWaitHit-CNZMiniboss_Index
		dc.w Obj_CNZMinibossClosing-CNZMiniboss_Index
		dc.w Obj_CNZMinibossLower2-CNZMiniboss_Index
; ---------------------------------------------------------------------------

Obj_CNZMinibossInit:
		lea	ObjDat_CNZMiniboss(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#6,$29(a0)
		move.b	#4,$45(a0)
		bset	#3,$38(a0)
		move.w	#$80,$1A(a0)
		move.w	#$11F,$2E(a0)
		move.l	#Obj_CNZMinibossGo2,$34(a0)
		lea	Child1_CNZMinibossMakeTop(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossLower:
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossGo2:
		move.b	#4,5(a0)
		clr.w	$1A(a0)
		bset	#1,$38(a0)
		move.w	#$90,$2E(a0)
		move.l	#Obj_CNZMinibossGo3,$34(a0)
		bra.w	SetUp_CNZMinibossSwing
; ---------------------------------------------------------------------------

Obj_CNZMinibossMove:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossGo3:
		move.w	#$100,$18(a0)
		move.w	#$9F,$2E(a0)

Obj_CNZMinibossCloseGo:
		move.b	#6,5(a0)
		move.l	#Obj_CNZMinibossChangeDir,$34(a0)
		bclr	#3,$38(a0)
		lea	(PalSPtr_CNZMinibossNormal).l,a1
		lea	(Palette_rotation_data).w,a2
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		clr.w	(a2)
		move.l	#CNZMiniboss_MakeTimedSparks,(Palette_rotation_custom).w
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossChangeDir:
		neg.w	$18(a0)
		move.w	#$13F,$2E(a0)
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossOpening:
		jmp	(Animate_RawMultiDelay).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossOpenGo:
		move.b	#$A,5(a0)
		move.l	#Obj_CNZMinibossChangeDir,$34(a0)
		bset	#6,$38(a0)
		move.b	#$7F,$3B(a0)
		lea	Child1_CNZCoilOpenSparks(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossWaitHit:
		btst	#6,$2A(a0)
		bne.s	loc_4B754
		rts
; ---------------------------------------------------------------------------

loc_4B754:
		move.b	#$C,5(a0)
		bclr	#6,$38(a0)
		move.l	#AniRaw_CNZMinibossClosing,$30(a0)
		move.l	#Obj_CNZMinibossCloseGo,$34(a0)
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossClosing:
		jmp	(Animate_RawMultiDelay).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossLower2:
		addq.w	#1,$14(a0)
		subq.b	#1,$43(a0)
		bmi.s	loc_4B784
		rts
; ---------------------------------------------------------------------------

loc_4B784:
		move.b	$42(a0),5(a0)
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossEnd:
		move.l	#Obj_Wait,(a0)
		st	(_unkFAA8).w
		bclr	#7,4(a0)
		bset	#4,$38(a0)
		move.w	#$7F,$2E(a0)
		move.l	#Obj_CNZMinibossEndGo,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		lea	Child6_CNZMinibossMakeDebris(pc),a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossEndGo:
		move.l	#Obj_EndSignControlAwaitStart,(a0)
		clr.b	(Boss_flag).w
		jsr	(Obj_PlayLevelMusic).l
		jsr	AfterBoss_Cleanup(pc)
		lea	(PLC_EndSignStuff).l,a1
		jmp	(Load_PLC_Raw).l
; ---------------------------------------------------------------------------

loc_4B7E8:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	CNZMinibossTop_Index(pc,d0.w),d1
		jsr	CNZMinibossTop_Index(pc,d1.w)
		jmp	(Draw_And_Touch_Sprite).l
; ---------------------------------------------------------------------------
CNZMinibossTop_Index:dc.w Obj_CNZMinibossTopInit-CNZMinibossTop_Index
		dc.w Obj_CNZMinibossTopWait-CNZMinibossTop_Index
		dc.w Obj_CNZMinibossTopWait2-CNZMinibossTop_Index
		dc.w Obj_CNZMinibossTopMain-CNZMinibossTop_Index
; ---------------------------------------------------------------------------

Obj_CNZMinibossTopInit:
		lea	ObjDat3_CNZMinibossTop(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.b	#$10,$1F(a0)
		move.b	#8,$1E(a0)
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossTopWait:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_4B82C
		jmp	(Refresh_ChildPosition).l
; ---------------------------------------------------------------------------

loc_4B82C:
		move.b	#4,5(a0)
		move.l	#AniRaw_CNZMinibossTop,$30(a0)
		move.l	#Obj_CNZMinibossTopGo,$34(a0)
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossTopWait2:
		jsr	(Refresh_ChildPosition).l
		jmp	(Animate_RawGetFaster).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossTopGo:
		move.b	#6,5(a0)
		move.l	#AniRaw_CNZMinibossTop2,$30(a0)
		move.w	#$200,$18(a0)
		move.w	#$200,$1A(a0)
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossTopMain:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.w	loc_4B9EC
		move.w	$10(a0),-(sp)
		jsr	(MoveSprite2).l
		moveq	#$13,d1
		moveq	#$C,d2
		moveq	#8,d3
		move.w	(sp)+,d4
		jsr	(SolidObjectFull).l
		jsr	(Animate_Raw).l
		tst.w	$18(a0)
		bmi.s	loc_4B8CC
		moveq	#$10,d3
		jsr	(ObjCheckRightWallDist).l
		tst.w	d1
		bmi.w	loc_4B968
		move.w	$10(a0),d0
		addi.w	#$10,d0
		cmpi.w	#$3380,d0
		bcc.w	loc_4B9A8
		move.w	$14(a0),d1
		bsr.w	CNZMinibossTop_CheckHitBase
		bne.w	loc_4B9A8
		bra.w	loc_4B8F6
; ---------------------------------------------------------------------------

loc_4B8CC:
		moveq	#-$10,d3
		jsr	(ObjCheckLeftWallDist).l
		tst.w	d1
		bmi.w	loc_4B968
		move.w	$10(a0),d0
		subi.w	#$10,d0
		cmpi.w	#$3200,d0
		bcs.w	loc_4B9A8
		move.w	$14(a0),d1
		bsr.w	CNZMinibossTop_CheckHitBase
		bne.w	loc_4B9A8

loc_4B8F6:
		bsr.w	CNZMinibossTop_CheckPlayerBounce
		bne.w	loc_4B9E6
		tst.w	$1A(a0)
		bmi.s	loc_4B93A
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bmi.w	loc_4B9AE
		move.w	$10(a0),d0
		move.w	$14(a0),d1
		addq.w	#8,d1
		move.w	(Camera_Y_pos).w,d2
		addi.w	#$E0,d2
		cmp.w	d2,d1
		bcc.w	loc_4B9E6
		cmpi.w	#$380,d1
		bhi.w	loc_4B9E6
		bsr.w	CNZMinibossTop_CheckHitBase
		bne.w	loc_4B9E6
		rts
; ---------------------------------------------------------------------------

loc_4B93A:
		jsr	(ObjCheckCeilingDist).l
		tst.w	d1
		bmi.s	loc_4B9AE
		move.w	$10(a0),d0
		move.w	$14(a0),d1
		subq.w	#8,d1
		cmp.w	(Camera_Y_pos).w,d1
		bls.w	loc_4B9E6
		cmpi.w	#$240,d1
		bls.w	loc_4B9E6
		bsr.w	CNZMinibossTop_CheckHitBase
		bne.w	loc_4B9E6
		rts
; ---------------------------------------------------------------------------

loc_4B968:
		lea	Child1_CNZBounceEffect(pc),a2
		jsr	CreateChild1_Normal(pc)
		bne.s	loc_4B97E
		tst.w	$18(a0)
		bmi.s	loc_4B97E
		bset	#0,4(a1)

loc_4B97E:
		moveq	#$10,d0
		neg.w	$18(a0)
		bmi.s	loc_4B988
		neg.w	d0

loc_4B988:
		add.w	$10(a0),d0
		cmpi.w	#$3200,d0
		bls.s	locret_4B9A6
		cmpi.w	#$3380,d0
		bcc.s	locret_4B9A6
		move.w	d0,(Events_bg+$00).w
		move.w	$14(a0),(Events_bg+$02).w
		bsr.w	CNZMiniboss_BlockExplosion

locret_4B9A6:
		rts
; ---------------------------------------------------------------------------

loc_4B9A8:
		neg.w	$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_4B9AE:
		move.w	$10(a0),d0
		moveq	#8,d1
		neg.w	$1A(a0)
		bmi.s	loc_4B9BC
		neg.w	d1

loc_4B9BC:
		add.w	$14(a0),d1
		cmpi.w	#$3200,d0
		bls.s	locret_4B9A6
		cmpi.w	#$3380,d0
		bcc.s	locret_4B9A6
		cmpi.w	#$300,d1
		bcs.s	locret_4B9A6
		cmpi.w	#$3380,d1
		bcc.s	locret_4B9A6
		move.w	d0,(Events_bg+$00).w
		move.w	d1,(Events_bg+$02).w
		bsr.w	CNZMiniboss_BlockExplosion
		rts
; ---------------------------------------------------------------------------

loc_4B9E6:
		neg.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_4B9EC:
		lea	Child1_CNZMinibossExplosion(pc),a2
		jsr	CreateChild1_Normal(pc)
		move.b	#6,$2C(a1)
		clr.b	$28(a0)
		jsr	(Displace_PlayerOffObject).l
		jmp	(Go_Delete_Sprite).l

; =============== S U B R O U T I N E =======================================


CNZMiniboss_BlockExplosion:
		lea	Child1_CNZMinibossExplosion(pc),a2
		jsr	CreateChild1_Normal(pc)
		bne.s	locret_4BA3A
		move.b	#6,$2C(a1)
		move.w	(Events_bg+$00).w,d0
		andi.w	#-$20,d0
		addi.w	#$10,d0
		move.w	d0,$10(a1)
		move.w	(Events_bg+$02).w,d0
		andi.w	#-$20,d0
		addi.w	#$10,d0
		move.w	d0,$14(a1)

locret_4BA3A:
		rts
; End of function CNZMiniboss_BlockExplosion

; ---------------------------------------------------------------------------

Obj_CNZMinibossCoil:
		move.l	#Obj_CNZMinibossCoilClose,(a0)
		move.b	#$1A,$28(a0)
		move.b	#$70,$29(a0)
		bclr	#2,$38(a0)
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossCoilClose:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4BACC
		btst	#6,$38(a1)
		bne.s	loc_4BABE
		jsr	(Refresh_ChildPosition).l
		movea.w	$46(a0),a1
		tst.b	$28(a0)
		bne.s	loc_4BAB2
		bset	#2,$38(a0)
		bne.s	loc_4BA9E
		move.b	#$10,$3A(a0)
		btst	#2,$38(a1)
		bne.s	loc_4BA9E
		move.b	$28(a1),$25(a1)
		clr.b	$28(a1)
		subq.b	#1,$29(a1)

loc_4BA9E:
		subq.b	#1,$3A(a0)
		bpl.w	locret_4B628
		bclr	#2,$38(a0)
		move.b	$25(a0),$28(a0)

loc_4BAB2:
		move.b	#$70,$29(a0)
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------

loc_4BABE:
		move.l	#Obj_CNZMinibossCoilOpen,(a0)
		move.b	#-$57,$28(a0)
		rts
; ---------------------------------------------------------------------------

loc_4BACC:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossCoilOpen:
		jsr	Refresh_ChildPosition(pc)
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4BACC
		btst	#6,$38(a1)
		beq.w	Obj_CNZMinibossCoil
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------

loc_4BAF2:
		move.l	#loc_4BB00,(a0)
		move.b	#-$56,$28(a0)
		rts
; ---------------------------------------------------------------------------

loc_4BB00:
		jsr	Refresh_ChildPosition(pc)
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossTimedSparks:
		lea	ObjDat3_CNZMinibossSpark(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		bset	#4,$2B(a0)
		move.l	#Obj_Wait,(a0)
		move.l	#Obj_CNZMinibossTimedSparksGo,$34(a0)
		move.l	#AniRaw_CNZMinibossTimedSparkLeft,$30(a0)
		tst.b	$2C(a0)
		beq.s	locret_4BB42
		move.l	#AniRaw_CNZMinibossTimedSparkRight,$30(a0)
		move.w	#2,$2E(a0)

locret_4BB42:
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossTimedSparksGo:
		move.l	#Obj_CNZMinibossTimedSparksMain,(a0)
		move.w	#$7F,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossTimedSparksMain:
		jsr	Refresh_ChildPosition(pc)
		jsr	(Animate_RawMultiDelay).l
		jsr	(Obj_Wait).l
		jmp	(Child_DrawTouch_Sprite).l
; ---------------------------------------------------------------------------

loc_4BB70:
		lea	ObjDat3_CNZMinibossSpark(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		bset	#4,$2B(a0)
		move.l	#Obj_CNZMinibossSparksMain,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		move.l	off_4BB94(pc,d0.w),$30(a0)
		rts
; ---------------------------------------------------------------------------
off_4BB94:	dc.l AniRaw_CNZMinibossSparks1
		dc.l AniRaw_CNZMinibossSparks2
		dc.l AniRaw_CNZMinibossSparks3
; ---------------------------------------------------------------------------

Obj_CNZMinibossSparksMain:
		movea.w	$46(a0),a1
		btst	#6,$38(a1)
		beq.w	loc_4BACC
		jsr	Refresh_ChildPosition(pc)
		jsr	(Animate_RawMultiDelay).l
		jmp	(Child_DrawTouch_Sprite).l
; ---------------------------------------------------------------------------

Obj_CNZMinibossBounceEffect:
		lea	ObjDat3_CNZMbossBounceEffect(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		bset	#4,$2B(a0)
		move.l	#AnimateRaw_DrawTouch,(a0)
		move.w	#$3208,$10(a0)
		btst	#0,4(a0)
		beq.s	loc_4BBE6
		move.w	#$3378,$10(a0)

loc_4BBE6:
		move.l	#AniRaw_CNZMBossBoundEffect,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

Obj_CNZMinibossDebris:
		lea	ObjDat_CNZMinibossDebris(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4BC26(pc,d0.w),$42(a0)
		lsr.w	#1,d0
		move.b	CNZMinibossDebris_Frames(pc,d0.w),$22(a0)
		jsr	Refresh_ChildPosition(pc)
		moveq	#0,d0
		jmp	(Set_IndexedVelocity).l
; ---------------------------------------------------------------------------
word_4BC26:	dc.w $F000
		dc.w $1000
		dc.w $14
		dc.w $1C
		dc.w $24
		dc.w $2C
		dc.w $34
		dc.w $3C
		dc.w $48
CNZMinibossDebris_Frames:dc.b  $12, $13, $14, $14, $14, $14, $14, $14, $15,   0
; ---------------------------------------------------------------------------

SetUp_CNZMinibossSwing:
		move.w	#$60,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#8,$40(a0)
		bclr	#0,$38(a0)
		rts

; =============== S U B R O U T I N E =======================================


CNZMiniboss_CheckPlayerHit:
		tst.b	$28(a0)
		bne.s	locret_4BCB2
		bset	#2,$38(a0)
		bne.s	loc_4BCA0
		addq.b	#1,$29(a0)
		move.b	#$10,$3A(a0)
		bset	#3,$38(a0)
		bne.s	loc_4BCA0
		move.b	#8,5(a0)
		move.l	#AniRaw_CNZMinibossOpening,$30(a0)
		move.l	#Obj_CNZMinibossOpenGo,$34(a0)
		lea	(PalSPtr_CNZMinibossOpen).l,a1
		lea	(Palette_rotation_data).w,a2
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+

loc_4BCA0:
		subq.b	#1,$3A(a0)
		bpl.s	locret_4BCB2
		bclr	#2,$38(a0)
		move.b	$25(a0),$28(a0)

locret_4BCB2:
		rts
; End of function CNZMiniboss_CheckPlayerHit


; =============== S U B R O U T I N E =======================================


CNZMiniboss_CheckTopHit:
		tst.b	$44(a0)
		beq.s	locret_4BCFC
		tst.b	$20(a0)
		bne.s	loc_4BCDA
		subq.b	#1,$45(a0)
		beq.s	CNZMiniboss_BossDefeated
		bset	#6,$2A(a0)
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_4BCDA:
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_4BCE8
		addi.w	#$A,d0

loc_4BCE8:
		bsr.w	CNZMiniboss_BossFlash
		subq.b	#1,$20(a0)
		bne.s	locret_4BCFC
		bclr	#6,$2A(a0)
		clr.b	$44(a0)

locret_4BCFC:
		rts
; ---------------------------------------------------------------------------

CNZMiniboss_BossDefeated:
		move.l	#Wait_Draw,(a0)
		bset	#7,$2A(a0)
		move.l	#Obj_CNZMinibossEnd,$34(a0)
		move.w	#$20,(Normal_palette_line_2+$14).w
		st	(Events_fg_5).w
		lea	Child1_CNZMinibossExplosion(pc),a2
		jsr	CreateChild1_Normal(pc)
		jmp	(BossDefeated_StopTimer).l
; End of function CNZMiniboss_CheckTopHit


; =============== S U B R O U T I N E =======================================


CNZMiniboss_BossFlash:
		lea	word_4BD48(pc),a1
		lea	word_4BD52(pc,d0.w),a2
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		rts
; End of function CNZMiniboss_BossFlash

; ---------------------------------------------------------------------------
word_4BD48:	dc.w Normal_palette_line_2+$04, Normal_palette_line_2+$06, Normal_palette_line_2+$08
		dc.w Normal_palette_line_2+$0E, Normal_palette_line_2+$1C
word_4BD52:	dc.w   $6E0,  $280,   $40,   $28,  $642
		dc.w   $888,  $AAA,  $CCC,  $888,  $AAA
; ---------------------------------------------------------------------------

CNZMiniboss_MakeTimedSparks:
		lea	(PalSPtr_CNZMinibossSparks).l,a2
		move.l	(a2)+,(a1)+
		move.l	(a2)+,(a1)+
		lea	Child1_CNZMinibossTimedSparks(pc),a2
		jmp	CreateChild1_Normal(pc)

; =============== S U B R O U T I N E =======================================


CNZMiniboss_MoveDown:
		move.w	(Events_bg+$04).w,d0
		cmp.w	$3C(a0),d0
		beq.s	locret_4BD98
		move.w	d0,$3C(a0)
		move.b	5(a0),$42(a0)
		move.b	#$E,5(a0)
		move.b	#$1F,$43(a0)

locret_4BD98:
		rts
; End of function CNZMiniboss_MoveDown


; =============== S U B R O U T I N E =======================================


CNZMinibossTop_CheckPlayerBounce:
		lea	(Player_1).w,a1
		bsr.w	sub_4BDA8
		bne.s	locret_4BE0E
		lea	(Player_2).w,a1
; End of function CNZMinibossTop_CheckPlayerBounce


; =============== S U B R O U T I N E =======================================


sub_4BDA8:
		tst.w	$1A(a1)
		bpl.s	loc_4BE10
		cmpi.b	#2,$20(a1)
		bne.s	loc_4BE10
		move.w	$10(a0),d0
		move.w	$14(a0),d1
		addi.w	#$C,d1
		move.w	$10(a1),d2
		subi.w	#$10,d2
		cmp.w	d2,d0
		bcs.s	loc_4BE10
		addi.w	#$20,d2
		cmp.w	d2,d0
		bcc.s	loc_4BE10
		move.w	$14(a1),d2
		subi.w	#$10,d2
		cmp.w	d2,d1
		bcs.s	loc_4BE10
		addi.w	#$20,d2
		cmp.w	d2,d1
		bcc.s	loc_4BE10
		tst.w	$18(a1)
		bmi.s	loc_4BDFA
		tst.w	$18(a0)
		bpl.s	loc_4BE04
		bra.w	loc_4BE00
; ---------------------------------------------------------------------------

loc_4BDFA:
		tst.w	$18(a0)
		bmi.s	loc_4BE04

loc_4BE00:
		neg.w	$18(a0)

loc_4BE04:
		tst.w	$1A(a0)
		bmi.w	loc_4BE10
		moveq	#1,d0

locret_4BE0E:
		rts
; ---------------------------------------------------------------------------

loc_4BE10:
		moveq	#0,d0
		rts
; End of function sub_4BDA8


; =============== S U B R O U T I N E =======================================


CNZMinibossTop_CheckHitBase:
		movea.w	$46(a0),a1
		lea	CNZMiniboss_BaseRange(pc),a2
		move.w	$10(a1),d2
		add.w	(a2)+,d2
		cmp.w	d2,d0
		bcs.s	loc_4BE3C
		add.w	(a2)+,d2
		cmp.w	d2,d0
		bcc.s	loc_4BE3C
		move.w	$14(a1),d2
		add.w	(a2)+,d2
		cmp.w	d2,d1
		bcs.s	loc_4BE3C
		add.w	(a2)+,d2
		cmp.w	d2,d1
		bcs.s	loc_4BE70

loc_4BE3C:
		lea	CNZMiniboss_CoilRange(pc),a2
		btst	#6,$38(a1)
		beq.s	loc_4BE4C
		lea	CNZMiniboss_CoilOpenRange(pc),a2

loc_4BE4C:
		move.w	$10(a1),d2
		add.w	(a2)+,d2
		cmp.w	d2,d0
		bcs.s	loc_4BE6C
		add.w	(a2)+,d2
		cmp.w	d2,d0
		bcc.s	loc_4BE6C
		move.w	$14(a1),d2
		add.w	(a2)+,d2
		cmp.w	d2,d1
		bcs.s	loc_4BE6C
		add.w	(a2)+,d2
		cmp.w	d2,d1
		bcs.s	loc_4BE70

loc_4BE6C:
		moveq	#0,d2
		rts
; ---------------------------------------------------------------------------

loc_4BE70:
		btst	#6,$38(a1)
		beq.s	loc_4BE7C
		st	$44(a1)

loc_4BE7C:
		moveq	#1,d2
		rts
; End of function CNZMinibossTop_CheckHitBase

; ---------------------------------------------------------------------------
CNZMiniboss_BaseRange:dc.w  $FFE8,   $30
		dc.w  $FFF0,   $20
CNZMiniboss_CoilRange:dc.w  $FFF4,   $18
		dc.w    $10,   $18
CNZMiniboss_CoilOpenRange:dc.w  $FFF4,   $18
		dc.w    $10,   $38
ObjDat_CNZMiniboss:dc.l	Map_CNZMiniboss
		dc.w $A52E
		dc.w $280
		dc.b $18
		dc.b $30
		dc.b 0
		dc.b $C
ObjDat3_CNZMinibossTop:dc.w $200
		dc.b $18
		dc.b $10
		dc.b 7
		dc.b $AA
ObjDat3_CNZMinibossSpark:dc.w $200
		dc.b $C
		dc.b $18
		dc.b $A
		dc.b $92
ObjDat3_CNZMbossBounceEffect:dc.w $100
		dc.b 8
		dc.b 8
		dc.b $C
		dc.b 0
ObjDat_CNZMinibossDebris:dc.l Map_CNZMiniboss
		dc.w $A52E
		dc.w $100
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
Child1_CNZMinibossMakeTop:dc.w 1
		dc.l loc_4B7E8
		dc.w $2C
		dc.l Obj_CNZMinibossCoil
		dc.w $1C
Child1_CNZMinibossTimedSparks:dc.w 1
		dc.l Obj_CNZMinibossTimedSparks
		dc.w $EC18
		dc.l Obj_CNZMinibossTimedSparks
		dc.w $1418
		dc.w 0
		dc.l loc_4BAF2
		dc.w $FC
Child1_CNZCoilOpenSparks:dc.w 2
		dc.l loc_4BB70
		dc.w $FC28
		dc.l loc_4BB70
		dc.w $42C
		dc.l loc_4BB70
		dc.w $FC3C
Child1_CNZBounceEffect:dc.w 0
		dc.l Obj_CNZMinibossBounceEffect
		dc.w $FC
Child1_CNZMinibossExplosion:dc.w 0
		dc.l Obj_CreateBossExplosion
		dc.w 0
Child6_CNZMinibossMakeDebris:dc.w 8
		dc.l Obj_CNZMinibossDebris
AniRaw_CNZMinibossOpening:dc.b    0,   3
		dc.b    1,   3
		dc.b    2,   3
		dc.b    3,   3
		dc.b    4,   3
		dc.b    5,   3
		dc.b    6,   3
		dc.b  $F4
AniRaw_CNZMinibossClosing:dc.b    6,   3
		dc.b    5,   3
		dc.b    4,   3
		dc.b    3,   3
		dc.b    2,   3
		dc.b    1,   3
		dc.b    0,   3
		dc.b  $F4
AniRaw_CNZMinibossTop:dc.b    7,   8,   7,   8,   9, $FC
AniRaw_CNZMinibossTop2:dc.b    0,   7,   8,   9, $FC
AniRaw_CNZMinibossTimedSparkLeft:dc.b   $A,   0
		dc.b  $11,   2
		dc.b   $B,   0
		dc.b  $11,   2
		dc.b  $FC
AniRaw_CNZMinibossTimedSparkRight:dc.b   $F,   0
		dc.b  $11,   2
		dc.b  $10,   0
		dc.b  $11,   2
		dc.b  $FC
AniRaw_CNZMinibossSparks1:dc.b   $A,   0
		dc.b  $11,   7
		dc.b   $B,   0
		dc.b  $11,   7
		dc.b  $FC
AniRaw_CNZMinibossSparks2:dc.b  $11,   0
		dc.b   $F,   0
		dc.b  $11,   7
		dc.b  $10,   0
		dc.b  $11,   9
		dc.b  $FC
AniRaw_CNZMinibossSparks3:dc.b   $A,   0
		dc.b  $11,   7
		dc.b   $B,   0
		dc.b  $11,  $B
		dc.b  $FC
AniRaw_CNZMBossBoundEffect:dc.b   $C,   0,  $D,   1,  $E,   1, $F4,   0
Pal_CNZMiniboss:binclude "Levels/CNZ/Palettes/Miniboss.bin"
		even
; ---------------------------------------------------------------------------

Obj_CNZEndBoss:
		lea	word_4BFEC(pc),a1
		jsr	(Check_CameraInRange).l
		move.l	#loc_4BFF4,(a0)
		move.b	#1,(Boss_flag).w
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.w	#$78,$2E(a0)
		move.b	#mus_EndBoss,$26(a0)
		move.w	(Camera_target_max_Y_pos).w,(Target_camera_max_Y_pos).w
		move.w	#$240,(Camera_target_max_Y_pos).w
		move.w	#$4760,$1C(a0)
		move.w	#$47E0,(Camera_max_X_pos).w
		move.l	#loc_4BFFA,$34(a0)
		moveq	#$6E,d0
		jsr	(Load_PLC).l
		lea	Pal_CNZEndBoss(pc),a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------
word_4BFEC:	dc.w      0,  $300
		dc.w  $4780, $4900
; ---------------------------------------------------------------------------

loc_4BFF4:
		jmp	(loc_541C8).l
; ---------------------------------------------------------------------------

loc_4BFFA:
		move.l	#loc_4C002,(a0)

locret_4C000:
		rts
; ---------------------------------------------------------------------------

loc_4C002:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4C01C(pc,d0.w),d1
		jsr	off_4C01C(pc,d1.w)
		bsr.w	sub_4C714
		bsr.w	sub_4C778
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4C01C:	dc.w loc_4C02C-off_4C01C
		dc.w loc_4C07A-off_4C01C
		dc.w loc_4C0A2-off_4C01C
		dc.w loc_4C0E2-off_4C01C
		dc.w loc_4C102-off_4C01C
		dc.w loc_4C154-off_4C01C
		dc.w loc_4C1A4-off_4C01C
		dc.w loc_4C1CE-off_4C01C
; ---------------------------------------------------------------------------

loc_4C02C:
		lea	ObjDat3_4C85A(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#8,$29(a0)
		move.w	$14(a0),$3A(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4C08C,$34(a0)
		move.w	#-$100,$18(a0)
		jsr	Swing_Setup1(pc)
		lea	(ChildObjDat_46426).l,a2
		jsr	CreateChild1_Normal(pc)
		bne.s	loc_4C06A
		move.b	#9,$2C(a1)

loc_4C06A:
		lea	ChildObjDat_4C8A2(pc),a2
		jsr	CreateChild1_Normal(pc)
		lea	ChildObjDat_4C8AA(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------

loc_4C07A:
		jsr	Swing_UpAndDown(pc)
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4C088:
		jsr	Swing_Setup1(pc)

loc_4C08C:
		move.b	#4,5(a0)
		move.w	#$B4,$2E(a0)
		move.l	#loc_4C0D0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C0A2:
		jsr	Find_SonicTails(pc)
		addi.w	#$10,d2
		cmpi.w	#$20,d2
		bcs.s	loc_4C0CA
		move.w	#$100,d1
		bset	#0,4(a0)
		tst.w	d0
		bne.s	loc_4C0C6
		neg.w	d1
		bclr	#0,4(a0)

loc_4C0C6:
		move.w	d1,$18(a0)

loc_4C0CA:
		jmp	(Swing_MoveWaitNoFall).l
; ---------------------------------------------------------------------------

loc_4C0D0:
		move.b	#6,5(a0)
		bset	#1,$38(a0)
		clr.w	$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C0E2:
		jsr	Swing_UpAndDown(pc)
		jsr	(MoveSprite2).l
		btst	#1,$38(a0)
		beq.s	loc_4C0F6
		rts
; ---------------------------------------------------------------------------

loc_4C0F6:
		move.b	#8,5(a0)
		clr.w	$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C102:
		jsr	Swing_UpAndDown(pc)
		jsr	(MoveSprite2).l
		move.w	$10(a0),d0
		movea.w	$44(a0),a1
		cmp.w	$10(a1),d0
		beq.s	loc_4C138
		bhi.s	loc_4C12A
		addq.w	#1,d0
		move.w	d0,$10(a0)
		bset	#0,4(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C12A:
		subq.w	#1,d0
		bclr	#0,4(a0)
		move.w	d0,$10(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C138:
		move.b	#$A,5(a0)
		bset	#3,$38(a0)
		move.w	#$BF,$2E(a0)
		move.l	#loc_4C158,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C154:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4C158:
		bset	#2,$38(a0)
		move.w	#$FF,$2E(a0)
		move.l	#loc_4C174,$34(a0)
		lea	ChildObjDat_4C8BA(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4C174:
		bclr	#2,$38(a0)
		bset	#7,$38(a0)
		move.w	#$FF,$2E(a0)
		move.l	#loc_4C190,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C190:
		move.b	#$C,5(a0)
		bclr	#3,$38(a0)
		bclr	#7,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C1A4:
		move.w	$14(a0),d0
		addq.w	#1,d0
		movea.w	$44(a0),a1
		move.w	$14(a1),d1
		subi.w	#$14,d1
		cmp.w	d1,d0
		bcc.s	loc_4C1C0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C1C0:
		move.b	#$E,5(a0)
		bset	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C1CE:
		move.w	$14(a0),d0
		subq.w	#1,d0
		cmp.w	$3A(a0),d0
		bls.s	loc_4C1E0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C1E0:
		move.w	$3A(a0),$14(a0)
		bra.w	loc_4C088
; ---------------------------------------------------------------------------

loc_4C1EA:
		move.l	#Obj_Wait,(a0)
		bclr	#7,4(a0)
		bset	#4,$38(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4C21A,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		lea	ChildObjDat_4C8D6(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4C21A:
		move.l	#loc_4C240,(a0)
		st	(_unkFAA8).w
		clr.b	(Boss_flag).w
		jsr	(Obj_PlayLevelMusic).l
		move.w	#$48F0,(Target_camera_max_X_pos).w
		lea	(Child6_IncLevX).l,a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_4C240:
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		tst.b	(_unkFAA8).w
		bne.w	locret_4C000
		move.l	#loc_4C28C,(a0)
		clr.b	(_unkFAA8).w
		jsr	(Restore_PlayerControl).l
		lea	(Player_2).w,a1
		jsr	(Restore_PlayerControl2).l
		move.w	#$200,(Target_camera_min_Y_pos).w
		lea	(Child6_DecLevY).l,a2
		jsr	(CreateChild6_Simple).l
		move.w	#$4A70,(Target_camera_max_X_pos).w
		lea	(Child6_IncLevX).l,a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_4C28C:
		cmpi.w	#$4A30,(Player_1+x_pos).w
		bcs.s	locret_4C2C8
		move.l	#loc_4C2CA,(a0)
		lea	(ArtKosM_BadnikExplosion).l,a1
		move.w	#-$4C00,d2
		jsr	(Queue_Kos_Module).l
		jsr	(Create_New_Sprite).l
		bne.s	locret_4C2C8
		move.w	a1,$44(a0)
		move.l	#Obj_CNZCannon,(a1)
		move.w	#$4B20,$10(a1)
		move.w	#$2A8,$14(a1)

locret_4C2C8:
		rts
; ---------------------------------------------------------------------------

loc_4C2CA:
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		movea.w	$44(a0),a1
		cmpi.b	#1,$30(a1)
		bne.w	locret_4C000
		move.l	#loc_4C2F4,(a0)
		move.w	#$200,d0
		move.w	d0,(Camera_target_max_Y_pos).w
		move.w	#$BF,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C2F4:
		subq.w	#1,$2E(a0)
		bpl.w	locret_4C000
		movea.w	$44(a0),a1
		cmpi.b	#$12,$26(a1)
		bne.w	locret_4C000
		move.l	#loc_4C31C,(a0)
		move.w	#$7070,(Ctrl_1_logical).w
		st	(Ctrl_1_locked).w
		rts
; ---------------------------------------------------------------------------

loc_4C31C:
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$20,d0
		cmp.w	(Player_1+y_pos).w,d0
		bcs.w	locret_4C000
		move.w	#$500,d0
		jsr	(StartNewLevel).l
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

loc_4C33C:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4C352(pc,d0.w),d1
		jsr	off_4C352(pc,d1.w)
		bsr.w	sub_4C7FC
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4C352:	dc.w loc_4C35E-off_4C352
		dc.w loc_4C376-off_4C352
		dc.w loc_4C3AA-off_4C352
		dc.w loc_4C3EE-off_4C352
		dc.w loc_4C404-off_4C352
		dc.w loc_4C424-off_4C352
; ---------------------------------------------------------------------------

loc_4C35E:
		lea	ObjDat3_4C872(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#$10,$1E(a0)
		move.l	#byte_4C8F3,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C376:
		jsr	Refresh_ChildPositionAdjusted(pc)
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_4C388
		rts
; ---------------------------------------------------------------------------

loc_4C388:
		move.b	#4,5(a0)
		move.l	#loc_4C3BC,$34(a0)
		jsr	Find_SonicTails(pc)
		move.w	#$100,d1
		tst.w	d0
		bne.s	loc_4C3A4
		neg.w	d1

loc_4C3A4:
		move.w	d1,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C3AA:
		jsr	(MoveSprite).l
		tst.w	$1A(a0)
		bmi.w	locret_4C000
		jmp	ObjHitFloor_DoRoutine(pc)
; ---------------------------------------------------------------------------

loc_4C3BC:
		moveq	#signextendB(sfx_FloorThump),d0
		jsr	(Play_Sound_2).l
		move.w	$1A(a0),d0
		cmpi.w	#$80,d0
		bcs.s	loc_4C3D8
		asr.w	#1,d0
		neg.w	d0
		move.w	d0,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C3D8:
		move.b	#6,5(a0)
		movea.w	$46(a0),a1
		move.w	a0,$44(a1)
		bclr	#1,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_4C3EE:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_4C3FC
		rts
; ---------------------------------------------------------------------------

loc_4C3FC:
		move.b	#8,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C404:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		beq.s	loc_4C414
		jmp	Animate_RawMultiDelay(pc)
; ---------------------------------------------------------------------------

loc_4C414:
		move.b	#$A,5(a0)
		move.b	#4,$22(a0)
		bra.w	loc_4C5BC
; ---------------------------------------------------------------------------

loc_4C424:
		movea.w	$46(a0),a1
		bclr	#3,$38(a1)
		bne.s	loc_4C432
		rts
; ---------------------------------------------------------------------------

loc_4C432:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C43A:
		lea	word_4C87E(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#Obj_FlickerMove,(a0)
		tst.b	$2C(a0)
		beq.s	loc_4C454
		bset	#0,4(a0)

loc_4C454:
		moveq	#8,d0
		jmp	(Set_IndexedVelocity).l
; ---------------------------------------------------------------------------

loc_4C45C:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4C484(pc,d0.w),d1
		jsr	off_4C484(pc,d1.w)
		lea	(CNZEndBossMagnet_AngleX).l,a1
		jsr	MoveSprite_AngleXLookupOffset(pc)
		bsr.w	sub_4C6B2
		bsr.w	sub_4C6CA
		bsr.w	sub_4C824
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4C484:	dc.w loc_4C492-off_4C484
		dc.w loc_4C4AE-off_4C484
		dc.w loc_4C4DE-off_4C484
		dc.w loc_4C51C-off_4C484
		dc.w loc_4C550-off_4C484
		dc.w loc_4C582-off_4C484
		dc.w loc_4C5A0-off_4C484
; ---------------------------------------------------------------------------

loc_4C492:
		lea	ObjDat3_4C88A(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	$2C(a0),d0
		lsl.b	#5,d0
		move.b	d0,$3C(a0)
		move.l	#byte_4C8E4,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C4AE:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_4C4BC
		rts
; ---------------------------------------------------------------------------

loc_4C4BC:
		move.b	#4,5(a0)
		move.b	#1,$40(a0)
		move.w	#$40,$2E(a0)
		move.l	#loc_4C510,$34(a0)
		move.b	$3C(a0),$3A(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C4DE:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_4C4FA
		move.b	$40(a0),d0
		add.b	d0,$3C(a0)
		jsr	Animate_RawMultiDelay(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4C4FA:
		move.b	#6,5(a0)
		lea	ChildObjDat_4C8B2(pc),a2
		jsr	CreateChild1_Normal(pc)
		move.b	$2C(a0),$2C(a1)
		rts
; ---------------------------------------------------------------------------

loc_4C510:
		addq.b	#1,$40(a0)
		move.w	#$40,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C51C:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		beq.s	loc_4C534
		move.b	$40(a0),d0
		add.b	d0,$3C(a0)
		jmp	Animate_RawMultiDelay(pc)
; ---------------------------------------------------------------------------

loc_4C534:
		move.b	#8,5(a0)
		bset	#7,$38(a0)
		move.w	#$40,$2E(a0)
		move.l	#loc_4C560,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C550:
		move.b	$40(a0),d0
		add.b	d0,$3C(a0)
		jsr	Animate_RawMultiDelay(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4C560:
		cmpi.b	#1,$40(a0)
		beq.s	loc_4C574
		subq.b	#1,$40(a0)
		move.w	#$40,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C574:
		move.b	#$A,5(a0)
		bclr	#7,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C582:
		jsr	Animate_RawMultiDelay(pc)
		move.b	$3C(a0),d0
		addq.b	#1,d0
		move.b	d0,$3C(a0)
		cmp.b	$3A(a0),d0
		beq.s	loc_4C598
		rts
; ---------------------------------------------------------------------------

loc_4C598:
		move.b	#$C,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C5A0:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		beq.s	loc_4C5B0
		jmp	Animate_RawMultiDelay(pc)
; ---------------------------------------------------------------------------

loc_4C5B0:
		move.b	#2,5(a0)
		move.b	#1,$22(a0)

loc_4C5BC:
		clr.b	$24(a0)
		clr.b	$23(a0)
		rts
; ---------------------------------------------------------------------------

loc_4C5C6:
		lea	ObjDat3_4C896(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		bset	#4,$2B(a0)
		move.l	#byte_4C902,$30(a0)
		move.l	#loc_4C618,$34(a0)
		btst	#1,$2C(a0)
		beq.s	loc_4C5F6
		move.l	#loc_4C5F6,(a0)
		bra.w	sub_4C6F8
; ---------------------------------------------------------------------------

loc_4C5F6:
		move.l	#loc_4C600,(a0)
		bra.w	sub_4C6F8
; ---------------------------------------------------------------------------

loc_4C600:
		moveq	#signextendB(sfx_GravityMachine),d0
		jsr	(sub_542A6).l
		jsr	Refresh_ChildPosition(pc)
		jsr	Animate_Raw(pc)
		bsr.w	sub_4C6F8
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4C618:
		move.b	#9,$22(a0)
		move.b	$39(a0),d0
		addq.b	#1,d0
		move.b	d0,$39(a0)
		andi.b	#3,d0
		andi.b	#-4,4(a0)
		or.b	d0,4(a0)
		rts
; ---------------------------------------------------------------------------
		lea	ObjDat3_4C896(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		bset	#4,$2B(a0)
		move.l	#loc_4C618,$34(a0)
		move.b	$2C(a0),d0
		beq.s	loc_4C666
		move.l	#byte_4C911,$30(a0)
		move.l	#loc_4C66E,(a0)
		bra.w	sub_4C6F8
; ---------------------------------------------------------------------------

loc_4C666:
		move.l	#byte_4C908,$30(a0)

loc_4C66E:
		move.l	#loc_4C678,(a0)
		bra.w	sub_4C6F8
; ---------------------------------------------------------------------------

loc_4C678:
		jsr	Refresh_ChildPosition(pc)
		jsr	Animate_RawMultiDelay(pc)
		bsr.w	sub_4C6F8
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4C688:
		lea	word_4C884(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#Obj_FlickerMove,(a0)
		move.b	$2C(a0),d0
		lsr.b	#1,d0
		addi.b	#$B,d0
		move.b	d0,$22(a0)
		moveq	#0,d0
		jsr	(Set_IndexedVelocity).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_4C6B2:
		move.b	$3C(a0),d0
		move.w	#$200,8(a0)
		addi.b	#$40,d0
		bpl.s	locret_4C6C8
		move.w	#$280,8(a0)

locret_4C6C8:
		rts
; End of function sub_4C6B2


; =============== S U B R O U T I N E =======================================


sub_4C6CA:
		cmpi.b	#3,$22(a0)
		beq.s	locret_4C6EC
		move.b	$3C(a0),d0
		lea	byte_4C6EE(pc),a1
		moveq	#4,d6

loc_4C6DC:
		cmp.b	(a1)+,d0
		bcs.s	loc_4C6E8
		addq.w	#1,a1
		dbf	d6,loc_4C6DC
		rts
; ---------------------------------------------------------------------------

loc_4C6E8:
		move.b	(a1)+,$22(a0)

locret_4C6EC:
		rts
; End of function sub_4C6CA

; ---------------------------------------------------------------------------
byte_4C6EE:	dc.b  $30,   1
		dc.b  $58,   8
		dc.b  $A8,   2
		dc.b  $D0,   8
		dc.b  $FF,   1

; =============== S U B R O U T I N E =======================================


sub_4C6F8:
		movea.w	$46(a0),a1
		btst	#7,$38(a1)
		bne.s	loc_4C70E
		btst	#7,$2A(a1)
		bne.s	loc_4C70E
		rts
; ---------------------------------------------------------------------------

loc_4C70E:
		jmp	(Go_Delete_Sprite).l
; End of function sub_4C6F8


; =============== S U B R O U T I N E =======================================


sub_4C714:
		btst	#2,$38(a0)
		bne.s	loc_4C71E
		rts
; ---------------------------------------------------------------------------

loc_4C71E:
		lea	(Player_1).w,a1
		bsr.w	sub_4C72A
		lea	(Player_2).w,a1
; End of function sub_4C714


; =============== S U B R O U T I N E =======================================


sub_4C72A:
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		spl	d1
		bpl.s	loc_4C738
		neg.w	d0

loc_4C738:
		andi.w	#-$40,d0
		cmpi.w	#$1C0,d0
		bcs.s	loc_4C746
		move.w	#$1C0,d0

loc_4C746:
		lsr.w	#4,d0
		move.l	dword_4C758(pc,d0.w),d2
		tst.b	d1
		bne.s	loc_4C752
		neg.l	d2

loc_4C752:
		add.l	d2,$10(a1)
		rts
; End of function sub_4C72A

; ---------------------------------------------------------------------------
dword_4C758:	dc.l $28000
		dc.l $20000
		dc.l $1C000
		dc.l $18000
		dc.l $14000
		dc.l $10000
		dc.l $C000
		dc.l $8000

; =============== S U B R O U T I N E =======================================


sub_4C778:
		tst.l	(a0)
		beq.s	locret_4C7CE
		tst.b	$28(a0)
		bne.s	locret_4C7CE
		tst.b	$29(a0)
		beq.s	loc_4C7D0
		tst.b	$20(a0)
		bne.s	loc_4C79C
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_4C79C:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_4C7AE
		addq.w	#8,d0

loc_4C7AE:
		lea	word_4C7E4(pc),a1
		lea	word_4C7EC(pc,d0.w),a2
		jsr	(CopyWordData_4).l
		subq.b	#1,$20(a0)
		bne.s	locret_4C7CE
		bclr	#6,$2A(a0)
		move.b	$25(a0),$28(a0)

locret_4C7CE:
		rts
; ---------------------------------------------------------------------------

loc_4C7D0:
		move.l	#Wait_Draw,(a0)
		move.l	#loc_4C1EA,$34(a0)
		jmp	(BossDefeated_StopTimer).l
; End of function sub_4C778

; ---------------------------------------------------------------------------
word_4C7E4:	dc.w Normal_palette_line_2+$12, Normal_palette_line_2+$14, Normal_palette_line_2+$16, Normal_palette_line_2+$1C
word_4C7EC:	dc.w    $60,   $20,   $20,  $640
		dc.w   $888,  $EEE,  $EEE,  $AAA

; =============== S U B R O U T I N E =======================================


sub_4C7FC:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		beq.s	loc_4C80C
		clr.b	$28(a0)

loc_4C80C:
		btst	#4,$38(a1)
		bne.s	loc_4C816
		rts
; ---------------------------------------------------------------------------

loc_4C816:
		move.l	#Delete_Current_Sprite,(a0)
		lea	ChildObjDat_4C8C8(pc),a2
		jmp	CreateChild1_Normal(pc)
; End of function sub_4C7FC


; =============== S U B R O U T I N E =======================================


sub_4C824:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		beq.s	loc_4C834
		clr.b	$28(a0)

loc_4C834:
		btst	#4,$38(a1)
		bne.s	loc_4C83E
		rts
; ---------------------------------------------------------------------------

loc_4C83E:
		bset	#7,$2A(a0)
		move.b	#1,$22(a0)
		clr.b	$28(a0)
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		jmp	Set_IndexedVelocity(pc)
; End of function sub_4C824

; ---------------------------------------------------------------------------
ObjDat3_4C85A:	dc.l Map_CNZEndBoss
		dc.w $2430
		dc.w $280
		dc.b $40
		dc.b $14
		dc.b 0
		dc.b 6
		dc.l Map_RobotnikShip
		dc.w $852E
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 5
		dc.b 0
ObjDat3_4C872:	dc.l Map_CNZEndBoss
		dc.w $2430
		dc.w $280
		dc.b $10
		dc.b $10
		dc.b 4
		dc.b $8B
word_4C87E:	dc.w $280
		dc.b 8
		dc.b $10
		dc.b $A
		dc.b 0
word_4C884:	dc.w $280
		dc.b $14
		dc.b $14
		dc.b 0
		dc.b 0
ObjDat3_4C88A:	dc.l Map_CNZEndBoss
		dc.w $2430
		dc.w $200
		dc.b 8
		dc.b $10
		dc.b 1
		dc.b $9E
ObjDat3_4C896:	dc.l Map_CNZEndBoss
		dc.w $2430
		dc.w $80
		dc.b $10
		dc.b $40
		dc.b 6
		dc.b $AB
ChildObjDat_4C8A2:dc.w 0
		dc.l loc_4C33C
		dc.w $14
ChildObjDat_4C8AA:dc.w 3
		dc.l loc_4C45C
		dc.w 8
ChildObjDat_4C8B2:dc.w 0
		dc.l loc_4C5C6
		dc.w $4C
ChildObjDat_4C8BA:dc.w 1
		dc.l loc_4C5C6
		dc.w $F454
		dc.l loc_4C5C6
		dc.w $C54
ChildObjDat_4C8C8:dc.w 1
		dc.l loc_4C43A
		dc.w $F800
		dc.l loc_4C43A
		dc.w $800
ChildObjDat_4C8D6:dc.w 1
		dc.l loc_4C688
		dc.w $EC00
		dc.l loc_4C688
		dc.w $1400
byte_4C8E4:	dc.b    1,   0
		dc.b    3,   0
		dc.b    1,   0
		dc.b    3,   0
		dc.b    1,   4
		dc.b    3,   0
		dc.b    1,   9
		dc.b  $FC
byte_4C8F3:	dc.b    4,   0
		dc.b    5,   0
		dc.b    4,   0
		dc.b    5,   0
		dc.b    4,   4
		dc.b    5,   0
		dc.b    4,   9
		dc.b  $FC
byte_4C902:	dc.b    0,   9
		dc.b    6,   9
		dc.b    7, $F4
byte_4C908:	dc.b    9, $1F
		dc.b    6,   0
		dc.b    9,   2
		dc.b    7,   0
		dc.b  $FC
byte_4C911:	dc.b    9, $24,   6,   0
		dc.b    9,   2,   7,   0
		dc.b  $FC,   7,   0,   1
		dc.b  $FC
Pal_CNZEndBoss:	binclude "Levels/CNZ/Palettes/End Boss.bin"
		even
; ---------------------------------------------------------------------------

Obj_AA_1_FBZ1_Boss:
		lea	word_4C96E(pc),a1
		jsr	(Check_CameraInRange).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4C964(pc,d0.w),d1
		jsr	off_4C964(pc,d1.w)
		bsr.w	sub_4D1B8
		bsr.w	sub_4D3C6
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_4C964:	dc.w loc_4C976-off_4C964
		dc.w loc_4C9C4-off_4C964
		dc.w loc_4C9E4-off_4C964
		dc.w loc_4CA0C-off_4C964
		dc.w loc_4CA20-off_4C964
word_4C96E:	dc.w   $440,  $600
		dc.w  $2D00, $2F00
; ---------------------------------------------------------------------------

loc_4C976:
		lea	ObjDat3_4D468(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#6,$29(a0)
		move.b	#1,(Boss_flag).w
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.w	(Camera_max_Y_pos).w,(Target_camera_max_Y_pos).w
		move.w	#$540,(Camera_target_max_Y_pos).w
		move.w	#$2E20,$3A(a0)
		move.l	#loc_4C9CA,$34(a0)
		moveq	#$5E,d0
		jsr	(Load_PLC).l
		lea	Pal_FBZMiniboss(pc),a1
		jsr	(PalLoad_Line1).l
		lea	ChildObjDat_4D4B6(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4C9C4:
		jmp	(loc_541A2).l
; ---------------------------------------------------------------------------

loc_4C9CA:
		move.b	#4,5(a0)
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.w	d0,(Camera_min_X_pos).w
		addi.w	#$40,d0
		move.w	d0,(Camera_max_X_pos).w
		rts
; ---------------------------------------------------------------------------

loc_4C9E4:
		btst	#0,$38(a0)
		bne.s	loc_4C9EE
		rts
; ---------------------------------------------------------------------------

loc_4C9EE:
		move.b	#6,5(a0)
		move.l	#loc_4CA10,$34(a0)
		move.w	#$78,$2E(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l

locret_4CA0A:
		rts
; ---------------------------------------------------------------------------

loc_4CA0C:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4CA10:
		move.b	#8,5(a0)
		moveq	#signextendB(mus_Miniboss),d0
		jsr	(Play_Sound).l
		rts
; ---------------------------------------------------------------------------

loc_4CA20:
		bclr	#7,$38(a0)
		beq.s	locret_4CA0A
		lea	ChildObjDat_4D4E8(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4CA30:
		jsr	(Obj_EndSignControl).l
		lea	ChildObjDat_4D4F0(pc),a2
		jsr	CreateChild6_Simple(pc)
		lea	ChildObjDat_4D4F6(pc),a2
		jsr	CreateChild1_Normal(pc)
		lea	(ChildObjDat_54AC4).l,a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4CA50:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4CA68(pc,d0.w),d1
		jsr	off_4CA68(pc,d1.w)
		bsr.w	sub_4D1C8
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
off_4CA68:	dc.w loc_4CA6C-off_4CA68
		dc.w loc_4CA7C-off_4CA68
; ---------------------------------------------------------------------------

loc_4CA6C:
		lea	ObjDat3_4D498(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.w	$14(a0),$3E(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CA7C:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4CAB6
		move.w	$3E(a0),d0
		btst	#3,$2A(a0)
		bne.s	loc_4CAA8
		btst	#2,$38(a1)
		bne.s	loc_4CAA8
		bclr	#0,$38(a1)
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CAA8:
		bset	#0,$38(a1)
		addq.w	#4,d0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CAB6:
		move.l	#loc_4CAD6,(a0)
		move.l	#Map_EggCapsule,$C(a0)
		move.w	#-$7BB2,$A(a0)
		move.b	#5,$22(a0)
		addq.w	#8,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CAD6:
		bsr.w	sub_4D1C8
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_4CAE0:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4CAF2(pc,d0.w),d1
		jsr	off_4CAF2(pc,d1.w)
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------
off_4CAF2:	dc.w loc_4CAFA-off_4CAF2
		dc.w loc_4CB02-off_4CAF2
		dc.w loc_4CB26-off_4CAF2
		dc.w loc_4CB32-off_4CAF2
; ---------------------------------------------------------------------------

loc_4CAFA:
		lea	word_4D48C(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_4CB02:
		movea.w	$46(a0),a1
		btst	#0,$38(a1)
		bne.s	loc_4CB10
		rts
; ---------------------------------------------------------------------------

loc_4CB10:
		move.b	#4,5(a0)
		move.w	#$40,$2E(a0)
		move.l	#loc_4CB2A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CB26:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4CB2A:
		move.b	#6,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CB32:
		btst	#2,(V_int_run_count+3).w
		jsr	Find_SonicTails8Way(pc)
		addi.w	#9,d4
		move.b	d4,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CB46:
		lea	word_4D492(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_4CB78,(a0)
		move.w	#$EEE,(Normal_palette_line_2+$1E).w
		lea	(word_4D540).l,a1
		lea	(Palette_rotation_data).w,a2
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		clr.w	(a2)
		move.l	#Go_Delete_Sprite,(Palette_rotation_custom).w
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4CB78:
		jsr	(Run_PalRotationScript).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4CB84:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4CB96(pc,d0.w),d1
		jsr	off_4CB96(pc,d1.w)
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------
off_4CB96:	dc.w loc_4CB9E-off_4CB96
		dc.w loc_4CBB4-off_4CB96
		dc.w loc_4CBD4-off_4CB96
		dc.w locret_4CBE6-off_4CB96
; ---------------------------------------------------------------------------

loc_4CB9E:
		lea	word_4D474(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.b	$2C(a0),d0
		lsr.b	#1,d0
		addq.b	#1,d0
		move.b	d0,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CBB4:
		movea.w	$46(a0),a1
		btst	#0,$38(a1)
		bne.s	loc_4CBC2
		rts
; ---------------------------------------------------------------------------

loc_4CBC2:
		move.b	#4,5(a0)
		move.l	#loc_4CBDE,$34(a0)
		bra.w	loc_4D1D8
; ---------------------------------------------------------------------------

loc_4CBD4:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4CBDE:
		move.b	#6,5(a0)
		rts
; ---------------------------------------------------------------------------

locret_4CBE6:
		rts
; ---------------------------------------------------------------------------

loc_4CBE8:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4CC00(pc,d0.w),d1
		jsr	off_4CC00(pc,d1.w)
		bsr.w	sub_4D448
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_4CC00:	dc.w loc_4CC16-off_4CC00
		dc.w loc_4CC44-off_4CC00
		dc.w loc_4CC62-off_4CC00
		dc.w loc_4CC84-off_4CC00
		dc.w loc_4CC62-off_4CC00
		dc.w loc_4CD08-off_4CC00
		dc.w loc_4CDA0-off_4CC00
		dc.w loc_4CC62-off_4CC00
		dc.w loc_4CDE0-off_4CC00
		dc.w loc_4CDEC-off_4CC00
		dc.w loc_4CC62-off_4CC00
; ---------------------------------------------------------------------------

loc_4CC16:
		lea	word_4D47A(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.w	#-$140,d0
		subi.b	#$A,$2C(a0)
		beq.s	loc_4CC38
		neg.w	d0
		bset	#0,4(a0)
		move.w	#$3F,$2E(a0)

loc_4CC38:
		move.w	d0,$18(a0)
		move.w	#-$D0,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CC44:
		movea.w	$46(a0),a1
		btst	#0,$38(a1)
		bne.s	loc_4CC52
		rts
; ---------------------------------------------------------------------------

loc_4CC52:
		move.b	#4,5(a0)
		move.l	#loc_4CC66,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CC62:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4CC66:
		move.b	#6,5(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4CC8E,$34(a0)
		lea	word_4D4E2(pc),a2
		jmp	(CreateChild4_LinkListRepeated).l
; ---------------------------------------------------------------------------

loc_4CC84:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4CC8E:
		move.b	#8,5(a0)
		bset	#3,$38(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4CCAA,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CCAA:
		move.b	#$A,5(a0)
		bset	#2,$38(a0)
		bclr	#3,$38(a0)
		movea.w	$46(a0),a1
		bclr	#1,$38(a1)
		bclr	#1,$38(a0)
		bclr	#6,$38(a1)
		bclr	#6,$38(a0)
		move.w	#$78,$2E(a0)
		move.l	#loc_4CD10,$34(a0)
		move.b	#-$60,$3C(a0)
		move.b	#2,$40(a0)
		btst	#0,4(a0)
		beq.s	locret_4CD06
		move.b	#$60,$3C(a0)
		move.b	#-2,$40(a0)

locret_4CD06:
		rts
; ---------------------------------------------------------------------------

loc_4CD08:
		bsr.w	sub_4D224
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4CD10:
		move.w	#$F0,$2E(a0)
		movea.w	$46(a0),a1
		btst	#0,$38(a1)
		beq.s	loc_4CD4C
		btst	#1,$38(a1)
		bne.w	locret_4CA0A
		move.b	#$C,5(a0)
		bclr	#2,$38(a0)
		bset	#1,$38(a1)
		bset	#1,$38(a0)
		bset	#7,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_4CD4C:
		btst	#6,$38(a1)
		bne.w	locret_4CA0A
		lea	(Player_1).w,a2
		tst.b	$40(a2)
		bne.w	locret_4CA0A
		move.w	$10(a2),d0
		cmp.w	$10(a1),d0
		bcc.s	loc_4CD76
		btst	#0,4(a0)
		beq.s	loc_4CD80
		rts
; ---------------------------------------------------------------------------

loc_4CD76:
		btst	#0,4(a0)
		beq.w	locret_4CA0A

loc_4CD80:
		move.b	#$12,5(a0)
		bclr	#2,$38(a0)
		bset	#6,$38(a1)
		bset	#6,$38(a0)
		bset	#7,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_4CDA0:
		btst	#3,$38(a0)
		bne.s	loc_4CDAC
		bra.w	sub_4D262
; ---------------------------------------------------------------------------

loc_4CDAC:
		move.b	#$E,5(a0)
		move.b	#2,$40(a0)
		move.w	#$60,$2E(a0)
		move.l	#loc_4CDC8,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CDC8:
		move.b	#$10,5(a0)
		bclr	#3,$38(a0)
		movea.w	$46(a0),a1
		bclr	#2,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_4CDE0:
		btst	#2,$38(a0)
		bne.w	loc_4CCAA
		rts
; ---------------------------------------------------------------------------

loc_4CDEC:
		bclr	#3,$38(a0)
		bne.s	loc_4CDF6
		rts
; ---------------------------------------------------------------------------

loc_4CDF6:
		move.b	#$14,5(a0)
		move.w	#$10,$2E(a0)
		move.l	#loc_4CE0C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CE0C:
		move.b	#$10,5(a0)
		bset	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CE1A:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_4CE2C
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4CE2C:
		move.l	#Obj_FlickerMove,(a0)
		bset	#4,$38(a0)
		move.w	#$3F,$2E(a0)
		moveq	#0,d0
		jmp	Set_IndexedVelocity(pc)
; ---------------------------------------------------------------------------

loc_4CE44:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4CE5A(pc,d0.w),d1
		jsr	off_4CE5A(pc,d1.w)
		bsr.w	sub_4D448
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4CE5A:	dc.w loc_4CE7A-off_4CE5A
		dc.w loc_4CECA-off_4CE5A
		dc.w loc_4CF1E-off_4CE5A
		dc.w loc_4CF52-off_4CE5A
		dc.w loc_4CF9A-off_4CE5A
		dc.w loc_4CFAE-off_4CE5A
		dc.w loc_4D010-off_4CE5A
		dc.w loc_4D036-off_4CE5A
		dc.w loc_4D066-off_4CE5A
		dc.w loc_4D072-off_4CE5A
		dc.w loc_4D082-off_4CE5A
		dc.w loc_4D09E-off_4CE5A
		dc.w loc_4D0CC-off_4CE5A
		dc.w loc_4D0F2-off_4CE5A
		dc.w loc_4D12E-off_4CE5A
		dc.w loc_4D166-off_4CE5A
; ---------------------------------------------------------------------------

loc_4CE7A:
		addq.b	#2,$2C(a0)
		cmpi.b	#$A,$2C(a0)
		beq.s	loc_4CE94
		lea	word_4D480(pc),a1
		move.w	#4,$3E(a0)
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_4CE94:
		lea	word_4D486(pc),a1
		move.w	#3,$3E(a0)
		jsr	SetUp_ObjAttributes3(pc)
		move.b	#-$7A,$28(a0)
		movea.w	$46(a0),a1
		movea.w	$46(a1),a1
		movea.w	$46(a1),a1
		movea.w	$46(a1),a1
		movea.w	$46(a1),a1
		move.w	a1,$44(a0)
		move.w	a1,$30(a1)
		move.w	a0,$32(a1)
		rts
; ---------------------------------------------------------------------------

loc_4CECA:
		jsr	Refresh_ChildPosition(pc)
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_4CEDC
		rts
; ---------------------------------------------------------------------------

loc_4CEDC:
		move.b	#4,5(a0)
		bset	#3,$38(a0)
		bsr.w	sub_4D204
		move.w	#$F,$2E(a0)
		move.l	#loc_4CF28,$34(a0)
		movea.w	$46(a0),a1
		move.w	$30(a1),$30(a0)
		move.w	$32(a1),$32(a0)
		btst	#0,4(a1)
		beq.s	locret_4CF1C
		bset	#0,4(a0)
		neg.w	$18(a0)

locret_4CF1C:
		rts
; ---------------------------------------------------------------------------

loc_4CF1E:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4CF28:
		move.b	#6,5(a0)
		bclr	#3,$38(a0)
		clr.w	$18(a0)
		clr.w	$1A(a0)
		move.w	#$80,8(a0)
		cmpi.b	#$A,$2C(a0)
		beq.s	locret_4CF50
		move.w	#$180,8(a0)

locret_4CF50:
		rts
; ---------------------------------------------------------------------------

loc_4CF52:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_4CF60
		rts
; ---------------------------------------------------------------------------

loc_4CF60:
		move.b	#8,5(a0)
		bset	#2,$38(a0)
		bclr	#3,$38(a0)
		bclr	#6,$38(a0)
		bclr	#1,$38(a0)
		move.b	$3C(a1),$3C(a0)
		move.b	$40(a1),$40(a0)
		move.b	$2C(a0),d0
		add.b	d0,d0
		move.b	d0,$3B(a0)
		move.b	d0,$3A(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CF9A:
		subq.b	#1,$3B(a0)
		bpl.s	loc_4CFA6
		move.b	#$A,5(a0)

loc_4CFA6:
		move.w	$3E(a0),d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------

loc_4CFAE:
		bsr.w	sub_4D224
		move.w	$3E(a0),d2
		jsr	MoveSprite_CircularSimple(pc)
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_4CFD0
		btst	#6,$38(a1)
		bne.s	loc_4CFE4
		rts
; ---------------------------------------------------------------------------

loc_4CFD0:
		move.b	#$C,5(a0)
		bset	#1,$38(a0)
		bclr	#2,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4CFE4:
		move.b	#$18,5(a0)
		bset	#6,$38(a0)
		bclr	#2,$38(a0)
		cmpi.b	#$A,$2C(a0)
		bne.s	locret_4D00E
		lea	(Player_1).w,a1
		move.w	$10(a1),$30(a0)
		move.w	$14(a1),$32(a0)

locret_4D00E:
		rts
; ---------------------------------------------------------------------------

loc_4D010:
		bsr.w	sub_4D262
		beq.s	loc_4D02E
		move.b	#$E,5(a0)
		cmpi.b	#$A,$2C(a0)
		bne.s	loc_4D02E
		movea.w	$44(a0),a1
		bset	#3,$38(a1)

loc_4D02E:
		move.w	$3E(a0),d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------

loc_4D036:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_4D04A
		move.w	$3E(a0),d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------

loc_4D04A:
		move.b	#$10,5(a0)
		bset	#3,$38(a0)
		move.w	#$F,$2E(a0)
		move.l	#loc_4D06A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D066:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4D06A:
		move.b	#$12,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D072:
		move.b	#$14,d4
		bsr.w	sub_4D28C
		move.w	$3E(a0),d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------

loc_4D082:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		beq.s	loc_4D090
		rts
; ---------------------------------------------------------------------------

loc_4D090:
		move.b	#$16,5(a0)
		bclr	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D09E:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.w	loc_4CF60
		bsr.w	sub_4D2FA
		beq.s	loc_4D0C4
		cmpi.b	#$A,$2C(a0)
		bne.s	loc_4D0C4
		movea.w	$44(a0),a1
		bset	#2,$38(a1)

loc_4D0C4:
		move.w	$3E(a0),d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------

loc_4D0CC:
		bsr.w	sub_4D324
		beq.s	loc_4D0EA
		move.b	#$1A,5(a0)
		cmpi.b	#$A,$2C(a0)
		bne.s	loc_4D0EA
		movea.w	$44(a0),a1
		bset	#3,$38(a1)

loc_4D0EA:
		move.w	$3E(a0),d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------

loc_4D0F2:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_4D106
		move.w	$3E(a0),d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------

loc_4D106:
		move.b	#$1C,5(a0)
		bset	#3,$38(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4D148,$34(a0)
		cmpi.b	#$A,$2C(a0)
		bne.w	locret_4CA0A
		bra.w	loc_4D34E
; ---------------------------------------------------------------------------

loc_4D12E:
		cmpi.b	#$A,$2C(a0)
		beq.s	loc_4D13E
		bsr.w	sub_4D36C
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4D13E:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4D148:
		move.b	#$1E,5(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4D16A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D15E:
		move.b	#$16,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D166:
		jsr	Obj_Wait(pc)

loc_4D16A:
		move.b	#$1C,5(a0)
		neg.w	$18(a0)
		neg.w	$1A(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4D15E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D188:
		move.l	#loc_4D196,(a0)
		lea	ObjDat3_4D4AA(pc),a1
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

loc_4D196:
		bsr.w	sub_4D1B8
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_4D1B2
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4D1B2:
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_4D1B8:
		moveq	#$23,d1
		moveq	#$20,d2
		moveq	#$1C,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull).l
; End of function sub_4D1B8


; =============== S U B R O U T I N E =======================================


sub_4D1C8:
		moveq	#$13,d1
		moveq	#$10,d2
		moveq	#8,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull).l
; End of function sub_4D1C8

; ---------------------------------------------------------------------------

loc_4D1D8:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4D1F2(pc,d0.w),$2E(a0)
		add.w	d0,d0
		lea	word_4D1F8(pc,d0.w),a1
		move.w	(a1)+,d1
		move.w	(a1)+,(a0,d1.w)
		rts
; ---------------------------------------------------------------------------
word_4D1F2:	dc.w $20
		dc.w $20
		dc.w $40
word_4D1F8:	dc.w    $18, $FFC0
		dc.w    $18,   $40
		dc.w    $1A,   $40

; =============== S U B R O U T I N E =======================================


sub_4D204:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4D218-2(pc,d0.w),d0
		move.w	d0,$18(a0)
		move.w	d0,$1A(a0)
		rts
; End of function sub_4D204

; ---------------------------------------------------------------------------
word_4D218:	dc.w $FF40
		dc.w $FE80
		dc.w $FDC0
		dc.w $FD00
		dc.w $FC40
		dc.w $FAD0

; =============== S U B R O U T I N E =======================================


sub_4D224:
		move.b	$3C(a0),d0
		moveq	#0,d1
		btst	#0,4(a0)
		beq.s	loc_4D234
		addq.w	#2,d1

loc_4D234:
		move.b	$40(a0),d2
		bmi.s	loc_4D246
		move.b	byte_4D25E(pc,d1.w),d3
		cmp.b	d3,d0
		bcc.s	loc_4D250
		bra.w	loc_4D252
; ---------------------------------------------------------------------------

loc_4D246:
		addq.w	#1,d1
		move.b	byte_4D25E(pc,d1.w),d3
		cmp.b	d3,d0
		bhi.s	loc_4D252

loc_4D250:
		neg.b	d2

loc_4D252:
		move.b	d2,$40(a0)
		add.b	d2,d0
		move.b	d0,$3C(a0)
		rts
; End of function sub_4D224

; ---------------------------------------------------------------------------
byte_4D25E:	dc.b $B0
		dc.b $80
		dc.b $80
		dc.b $50

; =============== S U B R O U T I N E =======================================


sub_4D262:
		btst	#0,4(a0)
		bne.s	loc_4D27C
		addq.b	#2,$3C(a0)
		moveq	#-$40,d0
		cmp.b	$3C(a0),d0
		bhi.s	loc_4D288

loc_4D276:
		move.b	d0,$3C(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D27C:
		subq.b	#2,$3C(a0)
		moveq	#$40,d0
		cmp.b	$3C(a0),d0
		bcc.s	loc_4D276

loc_4D288:
		moveq	#0,d0
		rts
; End of function sub_4D262


; =============== S U B R O U T I N E =======================================


sub_4D28C:
		move.b	$3C(a0),d0
		moveq	#0,d1
		move.b	$2C(a0),d1
		movea.w	$46(a0),a1
		move.b	$40(a1),d2
		move.b	d2,$40(a0)
		lsr.w	#1,d1
		btst	#0,4(a0)
		bne.s	loc_4D2BA
		move.b	byte_4D2F0-1(pc,d1.w),d3
		sub.b	d2,d0
		cmp.b	d3,d0
		bls.s	loc_4D2C4
		bra.w	loc_4D2EA
; ---------------------------------------------------------------------------

loc_4D2BA:
		move.b	byte_4D2F4(pc,d1.w),d3
		add.b	d2,d0
		cmp.b	d3,d0
		bcs.s	loc_4D2EA

loc_4D2C4:
		move.b	d3,d0
		move.b	d4,5(a0)
		addq.b	#2,$40(a0)
		cmpi.b	#$A,$2C(a0)
		bne.s	loc_4D2EA
		movea.w	$44(a0),a1
		movea.w	$46(a1),a1
		bset	#2,$38(a1)
		bset	#6,$3A(a1)

loc_4D2EA:
		move.b	d0,$3C(a0)
		rts
; End of function sub_4D28C

; ---------------------------------------------------------------------------
byte_4D2F0:	dc.b $A0
		dc.b $88
		dc.b $60
		dc.b $48
byte_4D2F4:	dc.b $38
		dc.b $60
		dc.b $78
		dc.b $90
		dc.b $B8
		dc.b $CC

; =============== S U B R O U T I N E =======================================


sub_4D2FA:
		btst	#0,4(a0)
		bne.s	loc_4D314
		addq.b	#2,$3C(a0)
		moveq	#-$60,d0
		cmp.b	$3C(a0),d0
		bhi.s	loc_4D320

loc_4D30E:
		move.b	d0,$3C(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D314:
		subq.b	#2,$3C(a0)
		moveq	#$60,d0
		cmp.b	$3C(a0),d0
		bcc.s	loc_4D30E

loc_4D320:
		moveq	#0,d0
		rts
; End of function sub_4D2FA


; =============== S U B R O U T I N E =======================================


sub_4D324:
		btst	#0,4(a0)
		bne.s	loc_4D33E
		subq.b	#2,$3C(a0)
		moveq	#-$80,d0
		cmp.b	$3C(a0),d0
		bcs.s	loc_4D34A

loc_4D338:
		move.b	d0,$3C(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D33E:
		addq.b	#2,$3C(a0)
		moveq	#-$80,d0
		cmp.b	$3C(a0),d0
		bcs.s	loc_4D338

loc_4D34A:
		moveq	#0,d0
		rts
; End of function sub_4D324

; ---------------------------------------------------------------------------

loc_4D34E:
		move.w	$30(a0),d0
		sub.w	$10(a0),d0
		lsl.w	#3,d0
		move.w	d0,$18(a0)
		move.w	$32(a0),d0
		sub.w	$14(a0),d0
		lsl.w	#3,d0
		move.w	d0,$1A(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_4D36C:
		movea.w	$32(a0),a1
		movea.w	$30(a0),a2
		moveq	#0,d2
		move.b	$2C(a0),d2
		lsr.w	#1,d2
		moveq	#0,d0
		move.w	$10(a1),d0
		move.w	$10(a2),d3
		sub.w	d3,d0
		smi	d1
		bpl.s	loc_4D38E
		neg.w	d0

loc_4D38E:
		divu.w	#5,d0
		mulu.w	d2,d0
		tst.b	d1
		beq.s	loc_4D39A
		neg.w	d0

loc_4D39A:
		add.w	d0,d3
		move.w	d3,$10(a0)
		moveq	#0,d0
		move.w	$14(a1),d0
		move.w	$14(a2),d3
		sub.w	d3,d0
		smi	d1
		bpl.s	loc_4D3B2
		neg.w	d0

loc_4D3B2:
		divu.w	#5,d0
		mulu.w	d2,d0
		tst.b	d1
		beq.s	loc_4D3BE
		neg.w	d0

loc_4D3BE:
		add.w	d0,d3
		move.w	d3,$14(a0)
		rts
; End of function sub_4D36C


; =============== S U B R O U T I N E =======================================


sub_4D3C6:
		btst	#6,$3A(a0)
		beq.s	locret_4D40C
		tst.b	$20(a0)
		bne.s	loc_4D3E8
		subq.b	#1,$29(a0)
		beq.s	loc_4D40E
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_4D3E8:
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_4D3F4
		addq.w	#8,d0

loc_4D3F4:
		lea	word_4D430(pc),a1
		lea	word_4D438(pc,d0.w),a2
		jsr	CopyWordData_4(pc)
		subq.b	#1,$20(a0)
		bne.s	locret_4D40C
		bclr	#6,$3A(a0)

locret_4D40C:
		rts
; ---------------------------------------------------------------------------

loc_4D40E:
		move.l	#Wait_Draw,(a0)
		bset	#7,$2A(a0)
		move.l	#loc_4CA30,$34(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	CreateChild1_Normal(pc)
		jmp	BossDefeated_StopTimer(pc)
; End of function sub_4D3C6

; ---------------------------------------------------------------------------
word_4D430:	dc.w Normal_palette_line_2+$04, Normal_palette_line_2+$08, Normal_palette_line_2+$16, Normal_palette_line_2+$1E
word_4D438:	dc.w   $222,  $644,   $20,   $20
		dc.w   $AAA,  $AAA,  $EEE,  $EEE

; =============== S U B R O U T I N E =======================================


sub_4D448:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4D456
		rts
; ---------------------------------------------------------------------------

loc_4D456:
		move.l	#loc_4CE1A,(a0)
		bset	#7,$2A(a0)
		clr.b	$28(a0)
		rts
; End of function sub_4D448

; ---------------------------------------------------------------------------
ObjDat3_4D468:	dc.l Map_FBZMiniboss
		dc.w $A52E
		dc.w $200
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
word_4D474:	dc.w $100
		dc.b 8
		dc.b 8
		dc.b 1
		dc.b 0
word_4D47A:	dc.w $300
		dc.b $18
		dc.b $10
		dc.b 5
		dc.b 0
word_4D480:	dc.w $280
		dc.b 8
		dc.b 8
		dc.b 6
		dc.b 0
word_4D486:	dc.w $200
		dc.b $18
		dc.b $18
		dc.b 7
		dc.b 0
word_4D48C:	dc.w $100
		dc.b $10
		dc.b 8
		dc.b 8
		dc.b 0
word_4D492:	dc.w $180
		dc.b $10
		dc.b 8
		dc.b $11
		dc.b 0
ObjDat3_4D498:	dc.w $280
		dc.b $10
		dc.b 8
		dc.b 4
		dc.b 0
		dc.l Map_EggCapsule
		dc.w $8494
		dc.w $100
		dc.b 8
		dc.b 8
		dc.b 0
		dc.b 0
ObjDat3_4D4AA:	dc.l Map_EggCapsule
		dc.w $844E
		dc.w $200
		dc.b $20
		dc.b $20
		dc.b 1
		dc.b 0
ChildObjDat_4D4B6:dc.w 6
		dc.l loc_4CB84
		dc.w $F0F8
		dc.l loc_4CB84
		dc.w $10F8
		dc.l loc_4CB84
		dc.w $F8
		dc.l loc_4CA50
		dc.w $D8
		dc.l loc_4CAE0
		dc.w $F8
		dc.l loc_4CBE8
		dc.w 0
		dc.l loc_4CBE8
		dc.w 0
word_4D4E2:	dc.w 4
		dc.l loc_4CE44
ChildObjDat_4D4E8:dc.w 0
		dc.l loc_4CB46
		dc.w $F8
ChildObjDat_4D4F0:dc.w 0
		dc.l loc_4D188
ChildObjDat_4D4F6:dc.w 4
		dc.l loc_54776
		dc.w $FC
		dc.l loc_54776
		dc.w $10FC
		dc.l loc_54776
		dc.w $F0FC
		dc.l loc_54776
		dc.w $1CFC
		dc.l loc_54776
		dc.w $E4FC
		dc.b 3
		dc.b 9
		dc.b $A
		dc.b $B
		dc.b $C
		dc.b $D
		dc.b $E
		dc.b $F
		dc.b $10
		dc.b $FC
Pal_FBZMiniboss:binclude "Levels/FBZ/Palettes/S3 Miniboss.bin"
		even

word_4D540:	palscriptptr .header, .data
		dc.w 0
.header	palscripthdr	Normal_palette_line_2+$1E, 1, 7-1

.data	palscriptdata	1, $EEE
	palscriptdata	4, $644
	palscriptrun
; ---------------------------------------------------------------------------

Obj_AB_1_FBZ_Laser_Boss:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4D56E(pc,d0.w),d1
		jsr	off_4D56E(pc,d1.w)
		bsr.w	sub_4DA98
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4D56E:	dc.w loc_4D57A-off_4D56E
		dc.w loc_4D5D6-off_4D56E
		dc.w loc_4D602-off_4D56E
		dc.w loc_4D644-off_4D56E
		dc.w loc_4D664-off_4D56E
		dc.w loc_4D6C8-off_4D56E
; ---------------------------------------------------------------------------

loc_4D57A:
		lea	ObjDat3_4DAFC(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#$7F,$29(a0)
		move.b	#6,$39(a0)
		move.w	(Camera_target_max_Y_pos).w,(Target_camera_max_Y_pos).w
		move.w	#$240,(Camera_target_max_Y_pos).w
		move.w	#$78,$2E(a0)
		move.l	#loc_4D5EC,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.b	#1,(Boss_flag).w
		moveq	#$6A,d0
		jsr	(Load_PLC).l
		lea	Pal_FBZ2Subboss(pc),a1
		jsr	PalLoad_Line1(pc)
		lea	ChildObjDat_4DB2E(pc),a2
		jsr	CreateChild3_NormalRepeated(pc)
		lea	ChildObjDat_4DB36(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4D5D6:
		lea	(Player_1).w,a1
		jsr	Find_OtherObject(pc)
		cmpi.w	#$18,d2
		bcc.s	loc_4D5E8
		bsr.w	sub_4D632

loc_4D5E8:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4D5EC:
		move.b	#4,5(a0)
		move.w	#$3F,$2E(a0)
		moveq	#signextendB(mus_Miniboss),d0
		jsr	(Play_Sound).l

locret_4D600:
		rts
; ---------------------------------------------------------------------------

loc_4D602:
		lea	(Player_1).w,a1
		jsr	Find_OtherObject(pc)
		cmpi.w	#$18,d2
		bcs.s	loc_4D618
		subq.w	#1,$2E(a0)
		bmi.s	loc_4D618
		rts
; ---------------------------------------------------------------------------

loc_4D618:
		move.b	#6,5(a0)
		move.w	#$80,$1A(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4D64E,$34(a0)

; =============== S U B R O U T I N E =======================================


sub_4D632:
		bset	#7,$38(a0)
		bne.w	locret_4D600
		lea	ChildObjDat_4DB44(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; End of function sub_4D632

; ---------------------------------------------------------------------------

loc_4D644:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4D64E:
		move.b	#8,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4D67A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D664:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4D668:
		subq.b	#1,$39(a0)
		bmi.s	loc_4D6AC
		bset	#3,$38(a0)
		bclr	#0,$38(a0)

loc_4D67A:
		move.b	#$A,5(a0)
		bclr	#1,$38(a0)
		clr.w	$1A(a0)
		lea	ChildObjDat_4DB4C(pc),a2
		jsr	CreateChild1_Normal(pc)

; =============== S U B R O U T I N E =======================================


sub_4D692:
		lea	(Player_1).w,a1
		jsr	(Find_OtherObject).l
		move.w	#$100,d1
		tst.w	d0
		bne.s	loc_4D6A6
		neg.w	d1

loc_4D6A6:
		move.w	d1,$18(a0)
		rts
; End of function sub_4D692

; ---------------------------------------------------------------------------

loc_4D6AC:
		move.l	#Wait_Draw,(a0)
		bset	#7,$2A(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4D726,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D6C8:
		btst	#1,$38(a0)
		bne.s	loc_4D710
		move.b	(V_int_run_count+3).w,d0
		andi.b	#$1F,d0
		bne.s	loc_4D6DC
		bsr.s	sub_4D692

loc_4D6DC:
		move.w	#$100,d0
		movea.w	$44(a0),a1
		move.w	$10(a1),d1
		move.w	$10(a0),d2
		addi.w	#$20,d1
		cmp.w	d1,d2
		bcs.s	loc_4D706
		movea.w	$46(a0),a1
		move.w	$10(a1),d1
		subi.w	#$20,d1
		cmp.w	d1,d2
		bcs.s	loc_4D70A
		neg.w	d0

loc_4D706:
		move.w	d0,$18(a0)

loc_4D70A:
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_4D710:
		move.b	#8,5(a0)
		move.w	#$BF,$2E(a0)
		move.l	#loc_4D668,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D726:
		bset	#4,$38(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4D73C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D73C:
		bset	#2,$38(a0)
		clr.b	(Boss_flag).w
		move.l	#Sprite_OnScreen_Test,(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D74E:
		lea	word_4DB08(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_4D760,(a0)
		bra.w	loc_4DA52
; ---------------------------------------------------------------------------

loc_4D760:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4D7A0
		btst	#1,$2C(a0)
		bne.s	loc_4D79A
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		beq.s	loc_4D79A
		move.l	#loc_4D7A8,(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4D7B8,$34(a0)
		move.w	#$100,$18(a0)

loc_4D79A:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4D7A0:
		move.l	#Sprite_OnScreen_Test,(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D7A8:
		jsr	(MoveSprite2).l
		jsr	Obj_Wait(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4D7B8:
		move.l	#loc_4D760,(a0)
		movea.w	$46(a0),a1
		bclr	#3,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_4D7CA:
		lea	word_4DB0E(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_4D7E6,(a0)
		addi.w	#$CC,$10(a0)
		addi.w	#$7C,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D7E6:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4D7F8
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4D7F8:
		move.l	#Sprite_OnScreen_Test,(a0)
		move.b	#3,$22(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	CreateChild1_Normal(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4D814:
		lea	ObjDat3_4DB22(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_4D838,(a0)
		addi.w	#$D8,$10(a0)
		addi.w	#$74,$14(a0)
		move.l	#byte_4DB54,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D838:
		jsr	Animate_RawMultiDelay(pc)
		movea.w	$46(a0),a1
		btst	#0,$38(a1)
		beq.s	loc_4D84E
		move.b	#2,$22(a0)

loc_4D84E:
		btst	#7,$2A(a1)
		beq.s	loc_4D862
		move.l	#loc_4D868,(a0)
		move.b	#3,$22(a0)

loc_4D862:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4D868:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		beq.s	loc_4D8A4
		move.l	#loc_4D8AA,(a0)
		subq.w	#4,$14(a0)
		move.w	#$200,$18(a0)
		move.l	#Map_FBZRobotnikRun,$C(a0)
		move.w	#$4A9,$A(a0)
		clr.b	$22(a0)
		clr.b	$24(a0)
		clr.b	$23(a0)
		bset	#0,4(a0)

loc_4D8A4:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4D8AA:
		lea	byte_4DB79(pc),a1
		jsr	Animate_RawNoSST(pc)
		jsr	(MoveSprite2).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_4D8BE:
		lea	word_4DB14(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_4D8F6,(a0)
		move.w	#$B0,d0
		move.b	$2C(a0),d1
		bne.s	loc_4D8D8
		neg.w	d0

loc_4D8D8:
		add.w	d0,$10(a0)
		addi.w	#$60,$14(a0)
		movea.w	$46(a0),a1
		moveq	#$44,d0
		tst.b	d1
		beq.s	loc_4D8EE
		moveq	#$46,d0

loc_4D8EE:
		move.w	(a1,d0.w),$44(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D8F6:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_4D930
		move.w	$10(a0),-(sp)
		movea.w	$44(a0),a1
		move.w	$10(a1),$10(a0)
		moveq	#$13,d1
		moveq	#$50,d2
		move.w	#$60,d3
		move.w	(sp)+,d4
		jsr	(SolidObjectFull).l
		btst	#0,(V_int_run_count+3).w
		bne.w	locret_4D600
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4D930:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4D936:
		lea	word_4DB1A(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_4D956,(a0)
		move.l	#byte_4DB61,$30(a0)
		move.l	#loc_4D978,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D956:
		jsr	Refresh_ChildPosition(pc)
		jsr	Animate_RawGetFaster(pc)
		tst.w	d2
		bpl.s	loc_4D974
		cmpi.b	#$60,$2F(a0)
		bne.s	loc_4D974
		movea.w	$46(a0),a1
		bset	#1,$38(a1)

loc_4D974:
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4D978:
		move.l	#loc_4D9A2,(a0)
		move.b	#6,$22(a0)
		move.l	#byte_4DB66,$30(a0)
		addi.w	#$3C,$14(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4D9DE,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4D9A2:
		clr.b	$28(a0)
		cmpi.b	#8,$22(a0)
		bne.s	loc_4D9B4
		move.b	#-$54,$28(a0)

loc_4D9B4:
		lea	(Player_1).w,a2
		cmpi.b	#4,5(a2)
		beq.s	loc_4D9CC
		lea	(Player_2).w,a2
		cmpi.b	#4,5(a2)
		bne.s	loc_4D9D2

loc_4D9CC:
		bset	#0,$38(a0)

loc_4D9D2:
		jsr	Animate_Raw(pc)
		jsr	Obj_Wait(pc)
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4D9DE:
		move.l	#loc_4DA04,$34(a0)
		move.w	#$1F,$2E(a0)
		st	(Screen_shake_flag).w
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	CreateChild1_Normal(pc)
		bne.s	locret_4DA02
		addi.w	#$60,$14(a1)

locret_4DA02:
		rts
; ---------------------------------------------------------------------------

loc_4DA04:
		move.l	#byte_4DB72,$30(a0)
		move.l	#loc_4DA30,$34(a0)
		clr.b	$24(a0)
		clr.b	$23(a0)
		btst	#0,$38(a0)
		bne.s	locret_4DA2E
		movea.w	$46(a0),a1
		bset	#0,$38(a1)

locret_4DA2E:
		rts
; ---------------------------------------------------------------------------

loc_4DA30:
		move.l	#Obj_Wait,(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4DA46,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4DA46:
		clr.w	(Screen_shake_flag).w
		movea.w	$46(a0),a1
		jmp	Go_Delete_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4DA52:
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	$2C(a0),d0
		cmpi.w	#4,d0
		bcc.s	loc_4DA74
		moveq	#$44,d1
		tst.b	d0
		beq.s	loc_4DA6A
		moveq	#$46,d1

loc_4DA6A:
		move.w	a0,(a1,d1.w)
		bset	#1,4(a0)

loc_4DA74:
		add.w	d0,d0
		lea	word_4DA88(pc,d0.w),a1
		move.w	(a1)+,d0
		add.w	d0,$10(a0)
		move.w	(a1)+,d0
		add.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------
word_4DA88:	dc.w  $FF50,   $18
		dc.w    $B0,   $18
		dc.w  $FF50,   $A8
		dc.w    $B0,   $A8

; =============== S U B R O U T I N E =======================================


sub_4DA98:
		tst.b	$28(a0)
		bne.s	locret_4DAE8
		tst.b	$20(a0)
		bne.s	loc_4DAB2
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_4DAB2:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_4DAC4
		addq.w	#4,d0

loc_4DAC4:
		lea	word_4DAEA(pc),a1
		lea	word_4DAF0(pc,d0.w),a2
		jsr	CopyWordData_3(pc)
		subq.b	#1,$20(a0)
		bne.s	locret_4DAE8
		bclr	#6,$2A(a0)
		move.b	$25(a0),$28(a0)
		move.b	#$7F,$29(a0)

locret_4DAE8:
		rts
; End of function sub_4DA98

; ---------------------------------------------------------------------------
word_4DAEA:	dc.w Normal_palette_line_2+$18, Normal_palette_line_2+$1A, Normal_palette_line_2+$1C
word_4DAF0:	dc.w   $866,  $644,   $20
		dc.w   $EEE,  $EEE,  $EEE
ObjDat3_4DAFC:	dc.l Map_FBZ2Subboss
		dc.w $252E
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b $1C
word_4DB08:	dc.w $80
		dc.b 8
		dc.b 8
		dc.b 1
		dc.b 0
word_4DB0E:	dc.w $280
		dc.b $C
		dc.b $14
		dc.b 2
		dc.b 0
word_4DB14:	dc.w $80
		dc.b 8
		dc.b $60
		dc.b 4
		dc.b 0
word_4DB1A:	dc.w $A52E
		dc.w $80
		dc.b $18
		dc.b 4
		dc.b 5
		dc.b 0
ObjDat3_4DB22:	dc.l Map_FBZRobotnikStand
		dc.w $8466
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
ChildObjDat_4DB2E:dc.w 3
		dc.l loc_4D74E
		dc.w 0
ChildObjDat_4DB36:dc.w 1
		dc.l loc_4D7CA
		dc.w 0
		dc.l loc_4D814
		dc.w 0
ChildObjDat_4DB44:dc.w 1
		dc.l loc_4D8BE
		dc.w 0
ChildObjDat_4DB4C:dc.w 0
		dc.l loc_4D936
		dc.w 8
byte_4DB54:	dc.b    0,   7
		dc.b    1, $17
		dc.b    0,   7
		dc.b    1,  $F
		dc.b    0, $3F
		dc.b    1,   7
		dc.b  $FC
byte_4DB61:	dc.b   $B, $80
		dc.b    5,  $A
		dc.b  $FC
byte_4DB66:	dc.b    0,   6
		dc.b    6,  $A
		dc.b    7,  $A
		dc.b  $F8,   8
		dc.b    0,   8
		dc.b   $A, $FC
byte_4DB72:	dc.b    0,   7
		dc.b    7,  $A
		dc.b    6,  $A
		dc.b  $F4
byte_4DB79:	dc.b    7,   0
		dc.b    1,   2
		dc.b    1, $FC
		dc.b    0
Pal_FBZ2Subboss:binclude "Levels/FBZ/Palettes/FBZ2 Subboss.bin"
		even
; ---------------------------------------------------------------------------

Obj_FBZEndBoss:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4DBB6(pc,d0.w),d1
		jsr	off_4DBB6(pc,d1.w)
		bsr.w	sub_4E200
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4DBB6:	dc.w loc_4DBC0-off_4DBB6
		dc.w loc_4DC26-off_4DBB6
		dc.w loc_4DC40-off_4DBB6
		dc.w loc_4DC6A-off_4DBB6
		dc.w loc_4DCDA-off_4DBB6
; ---------------------------------------------------------------------------

loc_4DBC0:
		lea	ObjDat3_4E278(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#8,$29(a0)
		move.b	#1,(Boss_flag).w
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.w	#$3090,(Camera_max_X_pos).w
		moveq	#$6F,d0
		jsr	(Load_PLC).l
		lea	Pal_FBZEndBoss(pc),a1
		jsr	(PalLoad_Line1).l
		move.w	#$78,$2E(a0)
		move.l	#loc_4DC30,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		lea	(ChildObjDat_4642E).l,a2
		jsr	CreateChild1_Normal(pc)
		bne.s	loc_4DC1E
		move.b	#$B,$2C(a1)
		move.w	a1,$3E(a0)

loc_4DC1E:
		lea	ChildObjDat_4E2C0(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4DC26:
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4DC30:
		move.b	#4,5(a0)
		moveq	#signextendB(mus_EndBoss),d0
		jsr	(Play_Sound).l

locret_4DC3E:
		rts
; ---------------------------------------------------------------------------

loc_4DC40:
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		move.w	#$3090,d0
		cmp.w	(Camera_X_pos).w,d0
		bls.s	loc_4DC52
		rts
; ---------------------------------------------------------------------------

loc_4DC52:
		move.w	d0,(Camera_min_X_pos).w

loc_4DC56:
		move.b	#6,5(a0)
		move.w	#$3F,$2E(a0)
		move.b	#9,$39(a0)
		rts
; ---------------------------------------------------------------------------

loc_4DC6A:
		bsr.w	sub_4E19C
		jsr	Find_SonicTails(pc)
		btst	#1,$38(a0)
		bne.s	locret_4DCB6
		cmpi.w	#$18,d2
		bcc.s	loc_4DC8E
		btst	#1,$2A(a1)
		bne.s	loc_4DC8E
		bset	#1,$38(a0)

loc_4DC8E:
		subq.w	#1,$2E(a0)
		bpl.s	locret_4DCB6
		move.w	#$1F,$2E(a0)
		subq.b	#1,$39(a0)
		bmi.s	loc_4DCB8
		bset	#3,$38(a0)
		bclr	#0,4(a0)
		tst.w	d0
		bne.s	locret_4DCB6
		bset	#0,4(a0)

locret_4DCB6:
		rts
; ---------------------------------------------------------------------------

loc_4DCB8:
		move.b	#8,5(a0)
		bset	#2,$38(a0)
		move.b	#2,$40(a0)
		move.w	#$1FF,$2E(a0)
		move.l	#loc_4DCF4,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4DCDA:
		move.b	$40(a0),d0
		add.b	d0,$3C(a0)
		lea	(FBZEndBoss_CircleLookup1).l,a2
		jsr	MoveSprite_AngleYLookup(pc)
		bsr.w	sub_4E1B8
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4DCF4:
		bclr	#2,$38(a0)
		bra.w	loc_4DC56
; ---------------------------------------------------------------------------

loc_4DCFE:
		tst.b	$3C(a0)
		beq.s	loc_4DD20
		move.b	$40(a0),d0
		add.b	d0,$3C(a0)
		lea	(FBZEndBoss_CircleLookup1).l,a2
		jsr	MoveSprite_AngleYLookup(pc)
		bsr.w	sub_4E1B8
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4DD20:
		move.l	#Wait_Draw,(a0)
		move.w	#$280,8(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4DD3C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4DD3C:
		move.l	#Obj_Wait,(a0)
		bset	#4,$38(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4DD66,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		lea	ChildObjDat_4E2EA(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4DD66:
		move.l	#Obj_Wait,(a0)
		bclr	#7,4(a0)
		st	(_unkFAA8).w
		move.w	#$7F,$2E(a0)
		move.l	#loc_4DD8A,$34(a0)
		jmp	(Obj_PlayLevelMusic).l
; ---------------------------------------------------------------------------

loc_4DD8A:
		move.l	#loc_4DDA6,(a0)
		clr.b	(Boss_flag).w
		move.w	#$3170,(Target_camera_max_X_pos).w
		lea	(Child6_IncLevX).l,a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_4DDA6:
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		tst.b	(_unkFAA8).w
		bne.w	locret_4DC3E
		clr.b	(_unkFAA8).w
		jsr	Restore_PlayerControl(pc)
		lea	(Player_2).w,a1
		jsr	Restore_PlayerControl2(pc)
		move.w	#$6000,(Target_camera_max_X_pos).w
		lea	(Child6_IncLevX).l,a2
		jsr	(CreateChild6_Simple).l
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

loc_4DDDC:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4DDEE(pc,d0.w),d1
		jsr	off_4DDEE(pc,d1.w)
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4DDEE:	dc.w loc_4DDF6-off_4DDEE
		dc.w loc_4DE1C-off_4DDEE
		dc.w loc_4DE7C-off_4DDEE
		dc.w loc_4DE96-off_4DDEE
; ---------------------------------------------------------------------------

loc_4DDF6:
		lea	word_4E284(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		lea	ChildObjDat_4E2D4(pc),a2
		jsr	CreateChild1_Normal(pc)
		movea.w	$46(a0),a1
		tst.b	$2C(a0)
		bne.s	loc_4DE16
		move.w	a0,$44(a1)
		rts
; ---------------------------------------------------------------------------

loc_4DE16:
		move.w	a0,$46(a1)
		rts
; ---------------------------------------------------------------------------

loc_4DE1C:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_4DE60
		btst	#3,$38(a1)
		bne.s	loc_4DE32
		rts
; ---------------------------------------------------------------------------

loc_4DE32:
		move.b	#4,5(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		btst	#0,4(a1)
		beq.s	loc_4DE4A
		addq.w	#8,d0

loc_4DE4A:
		lea	word_4DE6C(pc,d0.w),a1
		move.w	(a1)+,$18(a0)
		move.w	(a1)+,$2E(a0)
		move.l	#loc_4DE80,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4DE60:
		lea	word_4E304(pc),a2
		jsr	CreateChild1_Normal(pc)
		jmp	Go_Delete_Sprite_2(pc)
; ---------------------------------------------------------------------------
word_4DE6C:	dc.w   $100,     7
		dc.w   $100,     0
		dc.w  $FF00,     0
		dc.w  $FF00,     7
; ---------------------------------------------------------------------------

loc_4DE7C:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4DE80:
		move.b	#6,5(a0)
		move.w	#7,$2E(a0)
		move.l	#loc_4DEA0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4DE96:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4DEA0:
		move.b	#2,5(a0)
		movea.w	$46(a0),a1
		bclr	#3,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_4DEB2:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4DEC6(pc,d0.w),d1
		jsr	off_4DEC6(pc,d1.w)
		moveq	#0,d0
		jmp	Child_Draw_Sprite2_FlickerMove(pc)
; ---------------------------------------------------------------------------
off_4DEC6:	dc.w loc_4DECC-off_4DEC6
		dc.w loc_4DEF2-off_4DEC6
		dc.w loc_4DF20-off_4DEC6
; ---------------------------------------------------------------------------

loc_4DECC:
		lea	word_4E28A(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		movea.w	$46(a0),a1
		tst.b	$2C(a1)
		beq.s	loc_4DEE4
		bset	#0,4(a0)

loc_4DEE4:
		move.w	$46(a1),$44(a0)
		lea	ChildObjDat_4E2DC(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------

loc_4DEF2:
		jsr	Refresh_ChildPosition(pc)
		movea.w	$44(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_4DF04
		rts
; ---------------------------------------------------------------------------

loc_4DF04:
		move.b	#4,5(a0)
		move.b	#2,$40(a0)
		move.w	#$1FF,$2E(a0)
		move.l	#loc_4DF3C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4DF20:
		movea.w	$44(a0),a1
		move.b	$3C(a1),$3C(a0)
		lea	(FBZEndBoss_CircleLookup2).l,a2
		jsr	MoveSprite_AngleYLookup(pc)
		bsr.w	sub_4E1EA
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4DF3C:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4DF44:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4DF58(pc,d0.w),d1
		jsr	off_4DF58(pc,d1.w)
		moveq	#8,d0
		jmp	Child_Draw_Sprite_FlickerMove(pc)
; ---------------------------------------------------------------------------
off_4DF58:	dc.w loc_4DF5C-off_4DF58
		dc.w loc_4DF90-off_4DF58
; ---------------------------------------------------------------------------

loc_4DF5C:
		lea	word_4E28A(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		movea.w	$46(a0),a1
		moveq	#-$1C,d0
		btst	#0,4(a1)
		beq.s	loc_4DF7A
		bset	#0,4(a0)
		neg.w	d0

loc_4DF7A:
		movea.w	$46(a1),a1
		move.w	$46(a1),$44(a0)
		move.b	d0,$42(a0)
		move.b	#2,$43(a0)
		rts
; ---------------------------------------------------------------------------

loc_4DF90:
		jsr	Child_GetPriority(pc)
		bra.w	loc_4E082
; ---------------------------------------------------------------------------

loc_4DF98:
		lea	word_4E290(pc),a1
		jsr	SetUp_ObjAttributes3(pc)

loc_4DFA0:
		move.l	#loc_4DFB2,(a0)
		movea.w	$46(a0),a1
		bclr	#1,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_4DFB2:
		jsr	Child_GetPriority(pc)
		btst	#7,$2A(a1)
		bne.s	loc_4DFEC
		btst	#1,$38(a1)
		beq.s	loc_4DFE2
		move.l	#Refresh_ChildPosWait,(a0)
		move.w	#$5F,$2E(a0)
		move.l	#loc_4DFA0,$34(a0)
		lea	ChildObjDat_4E2E4(pc),a2
		jsr	CreateChild6_Simple(pc)

loc_4DFE2:
		jsr	Refresh_ChildPosition(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4DFEC:
		move.l	#loc_4E006,(a0)
		move.w	$3E(a1),$46(a0)
		subq.b	#4,$43(a0)
		jsr	Refresh_ChildPosition(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4E006:
		jsr	Refresh_ChildPosition(pc)
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_4E00E:
		bsr.w	sub_4E104
		move.l	#Obj_Wait,(a0)
		move.l	#loc_4E022,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E022:
		move.l	#loc_53CFA,(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E032:
		lea	word_4E296(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		jsr	Refresh_ChildPositionAdjusted(pc)
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		addi.b	#8,d0
		move.b	d0,$22(a0)
		moveq	#$34,d0
		jmp	Set_IndexedVelocity(pc)
; ---------------------------------------------------------------------------

loc_4E05A:
		lea	word_4E296(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		jsr	Refresh_ChildPositionAdjusted(pc)
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		addi.b	#$C,d0
		move.b	d0,$22(a0)
		moveq	#8,d0
		jmp	Set_IndexedVelocity(pc)
; ---------------------------------------------------------------------------

loc_4E082:
		movea.w	$44(a0),a1
		movea.w	$46(a0),a2
		move.w	$10(a1),d0
		move.b	$42(a0),d1
		ext.w	d1
		add.w	d0,d1
		move.w	$10(a2),d2
		sub.w	d2,d1
		moveq	#$10,d3
		moveq	#0,d4
		move.b	$2C(a0),d4
		bsr.w	sub_4E0D8
		move.w	$14(a1),d0
		move.b	$43(a0),d1
		ext.w	d1
		add.w	d0,d1
		move.w	$14(a2),d2
		sub.w	d2,d1
		moveq	#$14,d3
		bsr.w	sub_4E0D8
		tst.b	$3C(a2)
		beq.s	locret_4E0CE
		bmi.s	locret_4E0CE
		move.w	word_4E0D0(pc,d4.w),8(a0)

locret_4E0CE:
		rts
; ---------------------------------------------------------------------------
word_4E0D0:	dc.w $200
		dc.w $180
		dc.w $100
		dc.w $80

; =============== S U B R O U T I N E =======================================


sub_4E0D8:
		move.w	off_4E0E0(pc,d4.w),d5
		jmp	off_4E0E0(pc,d5.w)
; End of function sub_4E0D8

; ---------------------------------------------------------------------------
off_4E0E0:	dc.w loc_4E0E8-off_4E0E0
		dc.w loc_4E0EE-off_4E0E0
		dc.w loc_4E0F4-off_4E0E0
		dc.w loc_4E0FC-off_4E0E0
; ---------------------------------------------------------------------------

loc_4E0E8:
		asr.w	#2,d1
		bra.w	loc_4E0FC
; ---------------------------------------------------------------------------

loc_4E0EE:
		asr.w	#1,d1
		bra.w	loc_4E0FC
; ---------------------------------------------------------------------------

loc_4E0F4:
		asr.w	#1,d1
		move.w	d1,d0
		asr.w	#1,d1
		add.w	d0,d1

loc_4E0FC:
		add.w	d1,d2
		move.w	d2,(a0,d3.w)
		rts

; =============== S U B R O U T I N E =======================================


sub_4E104:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4E130(pc,d0.w),$2E(a0)
		move.w	word_4E142(pc,d0.w),$42(a0)
		add.w	d0,d0
		move.l	off_4E154(pc,d0.w),$30(a0)
		movea.l	off_4E178(pc,d0.w),a1
		jsr	SetUp_ObjAttributes(pc)
		bset	#4,$2B(a0)
		jmp	Refresh_ChildPosition(pc)
; End of function sub_4E104

; ---------------------------------------------------------------------------
word_4E130:	dc.w $50
		dc.w $4D
		dc.w $4A
		dc.w $47
		dc.w $44
		dc.w $41
		dc.w $3E
		dc.w $3B
		dc.w 0
word_4E142:	dc.w $98
		dc.w $8A4
		dc.w $F8A4
		dc.w $B4
		dc.w $C4
		dc.w $D4
		dc.w $E4
		dc.w $F4
		dc.w $F0
off_4E154:	dc.l byte_4E350
		dc.l byte_4E350
		dc.l byte_4E350
		dc.l byte_4E341
		dc.l byte_4E341
		dc.l byte_4E341
		dc.l byte_4E341
		dc.l byte_4E341
		dc.l byte_4E31E
off_4E178:	dc.l ObjDat3_4E2B4
		dc.l ObjDat3_4E2B4
		dc.l ObjDat3_4E2B4
		dc.l ObjDat3_4E2A8
		dc.l ObjDat3_4E2A8
		dc.l ObjDat3_4E2A8
		dc.l ObjDat3_4E2A8
		dc.l ObjDat3_4E2A8
		dc.l ObjDat3_4E29C

; =============== S U B R O U T I N E =======================================


sub_4E19C:
		movea.w	$44(a0),a1
		movea.w	$46(a0),a2
		move.w	$10(a1),d0
		move.w	$10(a2),d1
		sub.w	d0,d1
		asr.w	#1,d1
		add.w	d1,d0
		move.w	d0,$10(a0)
		rts
; End of function sub_4E19C


; =============== S U B R O U T I N E =======================================


sub_4E1B8:
		tst.b	$3C(a0)
		beq.s	loc_4E1DC
		bmi.s	loc_4E1CE
		bset	#7,$A(a0)
		move.w	#$80,8(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E1CE:
		bclr	#7,$A(a0)
		move.w	#$380,8(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E1DC:
		bset	#7,$A(a0)
		move.w	#$380,8(a0)
		rts
; End of function sub_4E1B8


; =============== S U B R O U T I N E =======================================


sub_4E1EA:
		tst.b	$3C(a0)
		beq.s	loc_4E1DC
		bmi.s	loc_4E1CE
		bset	#7,$A(a0)
		move.w	#$280,8(a0)
		rts
; End of function sub_4E1EA


; =============== S U B R O U T I N E =======================================


sub_4E200:
		tst.l	(a0)
		beq.s	locret_4E254
		tst.b	$28(a0)
		bne.s	locret_4E254
		tst.b	$29(a0)
		beq.s	loc_4E256
		tst.b	$20(a0)
		bne.s	loc_4E224
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_4E224:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_4E236
		addq.w	#8,d0

loc_4E236:
		lea	word_4E260(pc),a1
		lea	word_4E268(pc,d0.w),a2
		jsr	CopyWordData_4(pc)
		subq.b	#1,$20(a0)
		bne.s	locret_4E254
		bclr	#6,$2A(a0)
		move.b	$25(a0),$28(a0)

locret_4E254:
		rts
; ---------------------------------------------------------------------------

loc_4E256:
		move.l	#loc_4DCFE,(a0)
		jmp	BossDefeated_StopTimer(pc)
; End of function sub_4E200

; ---------------------------------------------------------------------------
word_4E260:	dc.w Normal_palette_line_2+$06, Normal_palette_line_2+$08, Normal_palette_line_2+$12, Normal_palette_line_2+$1C
word_4E268:	dc.w    $2A,   $26,   $20,  $644
		dc.w   $888,  $AAA,  $EEE,  $AAA
ObjDat3_4E278:	dc.l Map_FBZEndBoss
		dc.w $A3E0
		dc.w $280
		dc.b $28
		dc.b $18
		dc.b 0
		dc.b $16
word_4E284:	dc.w $300
		dc.b $10
		dc.b $20
		dc.b 1
		dc.b $A3
word_4E28A:	dc.w $280
		dc.b 8
		dc.b 8
		dc.b 2
		dc.b 0
word_4E290:	dc.w $200
		dc.b $C
		dc.b 8
		dc.b 3
		dc.b 0
word_4E296:	dc.w $100
		dc.b $14
		dc.b $10
		dc.b 8
		dc.b 0
ObjDat3_4E29C:	dc.l Map_FBZEndBoss
		dc.w $83E0
		dc.w $80
		dc.b 4
		dc.b 8
		dc.b 4
		dc.b $8B
ObjDat3_4E2A8:	dc.l Map_BossExplosion
		dc.w $8500
		dc.w $80
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b $8B
ObjDat3_4E2B4:	dc.l Map_FBZEndBossFlame
		dc.w $8454
		dc.w $80
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b $8B
ChildObjDat_4E2C0:dc.w 2
		dc.l loc_4DDDC
		dc.w $D0B8
		dc.l loc_4DDDC
		dc.w $30B8
		dc.l loc_4DF98
		dc.w $D8
ChildObjDat_4E2D4:dc.w 0
		dc.l loc_4DEB2
		dc.w $20
ChildObjDat_4E2DC:dc.w 3
		dc.l loc_4DF44
		dc.w 0
ChildObjDat_4E2E4:dc.w 8
		dc.l loc_4E00E
ChildObjDat_4E2EA:dc.w 3
		dc.l loc_4E032
		dc.w $EC08
		dc.l loc_4E032
		dc.w $1408
		dc.l loc_4E032
		dc.w $F020
		dc.l loc_4E032
		dc.w $1020
word_4E304:	dc.w 3
		dc.l loc_4E05A
		dc.w $F8F0
		dc.l loc_4E05A
		dc.w $8F0
		dc.l loc_4E05A
		dc.w $F810
		dc.l loc_4E05A
		dc.w $810
byte_4E31E:	dc.b    4,   3
		dc.b    4,   3
		dc.b    5,   3
		dc.b    6,   3
		dc.b    7,   3
		dc.b    4,   3
		dc.b    5,   3
		dc.b    6,   3
		dc.b    7,   3
		dc.b    4,   3
		dc.b    5,   3
		dc.b    6,   3
		dc.b    7,   3
		dc.b    4,   3
		dc.b    5,   3
		dc.b    6,   3
		dc.b    7,   3
		dc.b  $F4
byte_4E341:	dc.b    0,   2
		dc.b    0,   2
		dc.b    1,   2
		dc.b    2,   3
		dc.b    3,   4
		dc.b    4,   5
		dc.b    5,   6
		dc.b  $F4
byte_4E350:	dc.b    0,   2
		dc.b    0,   2
		dc.b    1,   3
		dc.b    2,   4
		dc.b    3,   5
		dc.b    4,   6
		dc.b  $F4,   0
Pal_FBZEndBoss:	binclude "Levels/FBZ/Palettes/FBZ End Boss.bin"
		even
; ---------------------------------------------------------------------------

Obj_ICZMiniboss:
		cmpi.w	#$501,(Apparent_zone_and_act).w
		beq.s	loc_4E3E6
		lea	word_4E3EC(pc),a1
		jsr	(Check_CameraInRange).l
		move.l	#loc_4E3F4,(a0)
		move.b	#1,(Boss_flag).w
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.w	#$78,$2E(a0)
		move.b	#mus_Miniboss,$26(a0)
		move.w	(Camera_max_X_pos).w,(Target_camera_max_X_pos).w
		move.w	(Camera_target_max_Y_pos).w,(Target_camera_max_Y_pos).w
		move.w	#$2B8,(Camera_target_max_Y_pos).w
		move.w	#$6F0,$1C(a0)
		move.w	#$6F0,(Camera_max_X_pos).w
		move.l	#loc_4E3FA,$34(a0)
		moveq	#$5F,d0
		jsr	(Load_PLC).l
		lea	Pal_ICZMiniboss(pc),a1
		jmp	PalLoad_Line1(pc)
; ---------------------------------------------------------------------------

loc_4E3E6:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
word_4E3EC:	dc.w 0
		dc.w $380
		dc.w $690
		dc.w $6F0
; ---------------------------------------------------------------------------

loc_4E3F4:
		jmp	(loc_541C8).l
; ---------------------------------------------------------------------------

loc_4E3FA:
		move.l	#loc_4E402,(a0)

locret_4E400:
		rts
; ---------------------------------------------------------------------------

loc_4E402:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4E418(pc,d0.w),d1
		jsr	off_4E418(pc,d1.w)
		bsr.w	sub_4EAC2
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4E418:	dc.w loc_4E42E-off_4E418
		dc.w loc_4E466-off_4E418
		dc.w loc_4E48C-off_4E418
		dc.w loc_4E4B6-off_4E418
		dc.w loc_4E4F8-off_4E418
		dc.w loc_4E530-off_4E418
		dc.w loc_4E4B6-off_4E418
		dc.w loc_4E582-off_4E418
		dc.w loc_4E5AC-off_4E418
		dc.w loc_4E5CC-off_4E418
		dc.w loc_4E466-off_4E418
; ---------------------------------------------------------------------------

loc_4E42E:
		lea	ObjDat3_4EB48(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#6,$29(a0)
		move.w	#$200,$3E(a0)
		move.w	#$80,$1A(a0)
		move.w	#$BF,$2E(a0)
		move.l	#loc_4E470,$34(a0)
		lea	ChildObjDat_4EB92(pc),a2
		jsr	CreateChild6_Simple(pc)
		lea	ChildObjDat_4EB6C(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4E466:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E470:
		move.b	#4,5(a0)
		bset	#3,$38(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_4E490,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E48C:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E490:
		move.b	#6,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4E4BE,$34(a0)
		lea	(word_16322C).l,a1

loc_4E4AA:
		lea	(Palette_rotation_data).w,a2
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		clr.w	(a2)
		rts
; ---------------------------------------------------------------------------

loc_4E4B6:
		jsr	Run_PalRotationScript(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E4BE:
		bset	#2,$38(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4E4DC,$34(a0)
		moveq	#signextendB(sfx_TunnelBooster),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_4E4DC:
		move.b	#8,5(a0)
		move.w	#$300,$1A(a0)
		move.w	#7,$2E(a0)
		move.l	#loc_4E506,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E4F8:
		jsr	(MoveSprite2).l
		jsr	Run_PalRotationScript(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E506:
		bsr.w	sub_4EA3C

loc_4E50A:
		move.b	#$A,5(a0)
		move.w	#$300,$1A(a0)
		neg.w	$3E(a0)
		move.w	$3E(a0),$18(a0)
		move.w	#$5F,$2E(a0)
		moveq	#signextendB(sfx_BossRotate),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_4E530:
		jsr	Run_PalRotationScript(pc)
		subq.w	#1,$2E(a0)
		bmi.s	loc_4E546
		addi.w	#-$10,$1A(a0)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_4E546:
		move.b	#$C,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4E564,$34(a0)
		rts
; ---------------------------------------------------------------------------
		jsr	Run_PalRotationScript(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E564:
		subq.b	#1,$39(a0)
		bpl.s	loc_4E50A
		move.b	#$E,5(a0)
		bset	#1,$38(a0)
		cmpi.w	#$790,$10(a0)
		scs	$43(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E582:
		btst	#1,$38(a0)
		beq.s	loc_4E58E
		jmp	Run_PalRotationScript(pc)
; ---------------------------------------------------------------------------

loc_4E58E:
		move.b	#$10,5(a0)
		bclr	#2,$38(a0)
		move.l	#loc_4E5B0,(Palette_rotation_custom).w
		lea	(word_163298).l,a1
		bra.w	loc_4E4AA
; ---------------------------------------------------------------------------

loc_4E5AC:
		jmp	Run_PalRotationScript(pc)
; ---------------------------------------------------------------------------

loc_4E5B0:
		move.b	#$12,5(a0)
		move.w	#$222,(Normal_palette_line_2+$14).w
		move.w	#$3F,$2E(a0)
		move.l	#loc_4E5D0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E5CC:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E5D0:
		move.b	#$14,5(a0)
		move.w	#-$100,$1A(a0)
		clr.w	$18(a0)
		move.w	#$17,$2E(a0)
		move.l	#loc_4E5F0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E5F0:
		move.b	#4,5(a0)
		move.w	#$FF,$2E(a0)
		move.l	#loc_4E490,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E606:
		jsr	(Obj_EndSignControl).l
		movea.w	(_unkFAAE).w,a1
		cmpi.l	#loc_58DF8,(a1)
		bne.s	loc_4E61E
		bset	#5,$38(a1)

loc_4E61E:
		jsr	(Create_New_Sprite).l
		bne.s	loc_4E62C
		move.l	#loc_4E634,(a1)

loc_4E62C:
		lea	ChildObjDat_4EB98(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4E634:
		move.l	#loc_4E654,(a0)
		lea	(word_4EBE2).l,a1
		lea	(Palette_rotation_data).w,a2
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		clr.w	(a2)
		move.l	#Go_Delete_Sprite,(Palette_rotation_custom).w
		rts
; ---------------------------------------------------------------------------

loc_4E654:
		jmp	Run_PalRotationScript(pc)
; ---------------------------------------------------------------------------

loc_4E658:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4E670(pc,d0.w),d1
		jsr	off_4E670(pc,d1.w)
		jsr	Refresh_ChildPosition(pc)
		moveq	#0,d0
		jmp	Child_Draw_Sprite2_FlickerMove(pc)
; ---------------------------------------------------------------------------
off_4E670:	dc.w loc_4E678-off_4E670
		dc.w loc_4E684-off_4E670
		dc.w loc_4E6A4-off_4E670
		dc.w locret_4E6C0-off_4E670
; ---------------------------------------------------------------------------

loc_4E678:
		lea	word_4EB54(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		bra.w	loc_4E8AA
; ---------------------------------------------------------------------------

loc_4E684:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_4E692
		rts
; ---------------------------------------------------------------------------

loc_4E692:
		move.b	#4,5(a0)
		move.l	#loc_4E6B8,$34(a0)
		bra.w	loc_4E8C0
; ---------------------------------------------------------------------------

loc_4E6A4:
		move.b	$18(a0),d0
		add.b	d0,$42(a0)
		move.b	$19(a0),d0
		add.b	d0,$43(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E6B8:
		move.b	#6,5(a0)
		rts
; ---------------------------------------------------------------------------

locret_4E6C0:
		rts
; ---------------------------------------------------------------------------

loc_4E6C2:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4E6D6(pc,d0.w),d1
		jsr	off_4E6D6(pc,d1.w)
		moveq	#0,d0
		jmp	Child_DrawTouch_Sprite2_FlickerMove(pc)
; ---------------------------------------------------------------------------
off_4E6D6:	dc.w loc_4E6EE-off_4E6D6
		dc.w loc_4E6FA-off_4E6D6
		dc.w loc_4E724-off_4E6D6
		dc.w loc_4E75E-off_4E6D6
		dc.w loc_4E77E-off_4E6D6
		dc.w loc_4E796-off_4E6D6
		dc.w loc_4E7B6-off_4E6D6
		dc.w loc_4E800-off_4E6D6
		dc.w loc_4E75E-off_4E6D6
		dc.w loc_4E84C-off_4E6D6
		dc.w loc_4E75E-off_4E6D6
		dc.w locret_4E884-off_4E6D6
; ---------------------------------------------------------------------------

loc_4E6EE:
		lea	ObjDat3_4EB5A(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		bra.w	loc_4E8EC
; ---------------------------------------------------------------------------

loc_4E6FA:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_4E708
		rts
; ---------------------------------------------------------------------------

loc_4E708:
		move.b	#4,5(a0)
		move.w	#-$40,$1A(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4E73E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E724:
		moveq	#1,d0
		btst	#0,(V_int_run_count+3).w
		beq.s	loc_4E730
		neg.w	d0

loc_4E730:
		add.w	d0,$10(a0)
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E73E:
		move.b	#6,5(a0)
		move.w	#$180,8(a0)
		bsr.w	sub_4E932
		move.w	#$1F,$2E(a0)
		move.l	#loc_4E768,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E75E:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E768:
		move.b	#8,5(a0)
		move.b	#-$75,$28(a0)
		moveq	#signextendB(sfx_BossRotate),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_4E77E:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_4E78E
		bra.w	loc_4E98E
; ---------------------------------------------------------------------------

loc_4E78E:
		move.b	#$A,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E796:
		movea.w	$46(a0),a1
		moveq	#0,d0
		tst.b	$43(a1)
		bne.s	loc_4E7A4
		moveq	#-$80,d0

loc_4E7A4:
		cmp.b	$3D(a0),d0
		beq.s	loc_4E7AE
		bra.w	loc_4E98E
; ---------------------------------------------------------------------------

loc_4E7AE:
		move.b	#$C,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E7B6:
		addq.b	#4,$3C(a0)
		lea	(ICZMiniboss_OrbAngleLookup).l,a2
		jsr	MoveSprite_AtAngleLookup(pc)
		moveq	#0,d0
		bsr.w	sub_4E9A6
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	loc_4E7F0
		tst.b	$2C(a0)
		bne.w	locret_4E400
		moveq	#0,d0
		tst.b	$43(a1)
		bne.s	loc_4E7E8
		moveq	#-$80,d0

loc_4E7E8:
		cmp.b	$3C(a0),d0
		bne.w	locret_4E400

loc_4E7F0:
		move.b	#$E,5(a0)
		bclr	#1,$38(a1)
		bra.w	loc_4EA58
; ---------------------------------------------------------------------------

loc_4E800:
		move.b	$3C(a0),d0
		cmp.b	$42(a0),d0
		beq.s	loc_4E81E
		addq.b	#4,$3C(a0)
		lea	(ICZMiniboss_OrbAngleLookup).l,a2
		jsr	MoveSprite_AtAngleLookup(pc)
		moveq	#0,d0
		bra.w	sub_4E9A6
; ---------------------------------------------------------------------------

loc_4E81E:
		move.b	#$10,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4E834,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E834:
		move.b	#$12,5(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4E850,$34(a0)
		bra.w	loc_4EAB8
; ---------------------------------------------------------------------------

loc_4E84C:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4E850:
		move.b	#$14,5(a0)
		moveq	#signextendB(sfx_LevelProjectile),d0
		jsr	(Play_Sound_2).l
		move.w	#$400,$1A(a0)
		clr.w	$18(a0)
		move.w	#$45,$2E(a0)
		move.l	#loc_4E878,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4E878:
		move.b	#2,5(a0)
		clr.b	$28(a0)
		rts
; ---------------------------------------------------------------------------

locret_4E884:
		rts
; ---------------------------------------------------------------------------

loc_4E886:
		lea	word_4EB66(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		addi.b	#$B,d0
		move.b	d0,$22(a0)
		moveq	#8,d0
		jmp	Set_IndexedVelocity(pc)
; ---------------------------------------------------------------------------

loc_4E8AA:
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		move.b	RawAni_4E8BA(pc,d0.w),$22(a0)
		rts
; ---------------------------------------------------------------------------
RawAni_4E8BA:	dc.b    1,   9,   3,   2,  $A,   4
; ---------------------------------------------------------------------------

loc_4E8C0:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4E8D4(pc,d0.w),$18(a0)
		move.w	word_4E8E0(pc,d0.w),$2E(a0)
		rts
; ---------------------------------------------------------------------------
word_4E8D4:	dc.w $FFFF
		dc.w $1FF
		dc.w 1
		dc.w $FFFF
		dc.w $1FF
		dc.w 1
word_4E8E0:	dc.w 2
		dc.w 2
		dc.w 3
		dc.w 6
		dc.w 6
		dc.w 8
; ---------------------------------------------------------------------------

loc_4E8EC:
		move.w	#$390,$14(a0)

loc_4E8F2:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4E922(pc,d0.w),d2
		jsr	(Random_Number).l
		andi.w	#7,d0
		subq.w	#3,d0
		add.w	d0,d2
		move.w	#$6F0,$10(a0)
		add.w	d2,$10(a0)
		swap	d0
		andi.w	#7,d0
		subq.w	#3,d0
		add.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------
word_4E922:	dc.w $FFE0
		dc.w $20
		dc.w $60
		dc.w $A0
		dc.w $E0
		dc.w $120
		dc.w $160
		dc.w $1A0

; =============== S U B R O U T I N E =======================================


sub_4E932:
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#4,d0
		move.b	d0,$3C(a0)
		move.w	$10(a0),d0
		move.w	$14(a0),d1
		movem.w	d0-d1,-(sp)
		lea	(ICZMiniboss_OrbAngleLookup).l,a2
		jsr	MoveSprite_AtAngleLookup(pc)
		moveq	#0,d0
		moveq	#0,d1
		moveq	#0,d2
		moveq	#0,d3
		movem.w	(sp)+,d0-d1
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		move.w	d0,$10(a0)
		move.w	d1,$14(a0)
		swap	d0
		swap	d1
		swap	d2
		swap	d3
		sub.l	d0,d2
		sub.l	d1,d3
		lsl.l	#3,d2
		lsl.l	#3,d3
		swap	d2
		swap	d3
		move.w	d2,$18(a0)
		move.w	d3,$1A(a0)
		rts
; End of function sub_4E932

; ---------------------------------------------------------------------------

loc_4E98E:
		addq.b	#4,$3C(a0)
		lea	(ICZMiniboss_OrbAngleLookup).l,a2
		jsr	MoveSprite_AtAngleLookup(pc)
		move.b	$3D(a0),d0
		addq.b	#1,d0
		move.b	d0,$3D(a0)

; =============== S U B R O U T I N E =======================================


sub_4E9A6:
		jsr	(GetSineCosine).l
		tst.w	d1
		bpl.s	loc_4E9B2
		neg.w	d1

loc_4E9B2:
		move.w	$14(a0),d2
		move.w	$14(a1),d4
		sub.w	d4,d2
		scs	d3
		bcc.s	loc_4E9C2
		neg.w	d2

loc_4E9C2:
		mulu.w	d1,d2
		lsr.l	#8,d2
		cmpi.b	#$40,$3D(a0)
		bcs.s	loc_4E9D8
		cmpi.b	#-$40,$3D(a0)
		bcc.s	loc_4E9D8
		not.b	d3

loc_4E9D8:
		tst.b	d3
		beq.s	loc_4E9DE
		neg.w	d2

loc_4E9DE:
		add.w	d2,d4
		move.w	d4,$14(a0)
		move.b	$3D(a0),d0
		spl	d3
		cmpi.b	#$40,$3C(a0)
		bcs.s	loc_4E9FC
		cmpi.b	#-$40,$3C(a0)
		bcc.s	loc_4E9FC
		not.b	d3

loc_4E9FC:
		move.b	#6,$22(a0)
		cmpi.b	#$20,d0
		bcs.s	loc_4EA2A
		cmpi.b	#$60,d0
		bcs.s	loc_4EA1A
		cmpi.b	#-$60,d0
		bcs.s	loc_4EA2A
		cmpi.b	#-$20,d0
		bcc.s	loc_4EA2A

loc_4EA1A:
		move.b	#5,$22(a0)
		tst.b	d3
		bne.s	loc_4EA2A
		move.b	#8,$22(a0)

loc_4EA2A:
		move.w	#$180,8(a0)
		tst.b	d3
		bne.s	locret_4EA3A
		move.w	#$300,8(a0)

locret_4EA3A:
		rts
; End of function sub_4E9A6


; =============== S U B R O U T I N E =======================================


sub_4EA3C:
		move.b	$3A(a0),d0
		addq.b	#1,$3A(a0)
		andi.w	#7,d0
		move.b	byte_4EA50(pc,d0.w),$39(a0)
		rts
; End of function sub_4EA3C

; ---------------------------------------------------------------------------
byte_4EA50:	dc.b 1
		dc.b 0
		dc.b 1
		dc.b 1
		dc.b 0
		dc.b 1
		dc.b 0
		dc.b 0
; ---------------------------------------------------------------------------

loc_4EA58:
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,d1
		lsr.w	#1,d1
		tst.b	$43(a1)
		bne.s	loc_4EA6E
		addq.w	#8,d1

loc_4EA6E:
		move.b	byte_4EA88(pc,d1.w),$42(a0)
		add.w	d0,d0
		move.l	word_4EA98(pc,d0.w),$18(a0)
		tst.b	$43(a1)
		bne.s	locret_4EA86
		neg.w	$18(a0)

locret_4EA86:
		rts
; ---------------------------------------------------------------------------
byte_4EA88:	dc.b $60
		dc.b $5C
		dc.b $58
		dc.b $54
		dc.b $50
		dc.b $4C
		dc.b $48
		dc.b $44
		dc.b $E0
		dc.b $DC
		dc.b $D8
		dc.b $D4
		dc.b $D0
		dc.b $CC
		dc.b $C8
		dc.b $C4
word_4EA98:	dc.w  $FD00, $FC00
		dc.w  $FE00, $FC00
		dc.w  $FF00, $FC00
		dc.w      0, $FC00
		dc.w   $100, $FC00
		dc.w   $200, $FC00
		dc.w   $300, $FC00
		dc.w   $400, $FC00
; ---------------------------------------------------------------------------

loc_4EAB8:
		move.w	#$278,$14(a0)
		bra.w	loc_4E8F2

; =============== S U B R O U T I N E =======================================


sub_4EAC2:
		tst.b	$28(a0)
		bne.s	locret_4EB0C
		tst.b	$29(a0)
		beq.s	loc_4EB0E
		tst.b	$20(a0)
		bne.s	loc_4EAE2
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_4EAE2:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_4EAF6
		addi.w	#4,d0

loc_4EAF6:
		bsr.w	sub_4EB2A
		subq.b	#1,$20(a0)
		bne.s	locret_4EB0C
		bclr	#6,$2A(a0)
		move.b	$25(a0),$28(a0)

locret_4EB0C:
		rts
; ---------------------------------------------------------------------------

loc_4EB0E:
		move.l	#Wait_Draw,(a0)
		move.l	#loc_4E606,$34(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	CreateChild1_Normal(pc)
		jmp	BossDefeated_StopTimer(pc)
; End of function sub_4EAC2


; =============== S U B R O U T I N E =======================================


sub_4EB2A:
		lea	word_4EB3C(pc),a1
		lea	word_4EB40(pc,d0.w),a2
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		rts
; End of function sub_4EB2A

; ---------------------------------------------------------------------------
word_4EB3C:	dc.w  $FC34, $FC36
word_4EB40:	dc.w   $222,   $20
		dc.w   $EEE,  $EEE
ObjDat3_4EB48:	dc.l Map_ICZMiniboss
		dc.w $A4A9
		dc.w $280
		dc.b $18
		dc.b $18
		dc.b 0
		dc.b 6
word_4EB54:	dc.w $280
		dc.b $10
		dc.b $C
		dc.b 1
		dc.b 0
ObjDat3_4EB5A:	dc.l Map_ICZMiniboss
		dc.w $44A9
		dc.w $280
		dc.b $C
		dc.b $C
		dc.b 6
		dc.b 0
word_4EB66:	dc.w $180
		dc.b $C
		dc.b $C
		dc.b $B
		dc.b 0
ChildObjDat_4EB6C:dc.w 5
		dc.l loc_4E658
		dc.w $F2F5
		dc.l loc_4E658
		dc.w $EF5
		dc.l loc_4E658
		dc.w $12
		dc.l loc_4E658
		dc.w $F2F5
		dc.l loc_4E658
		dc.w $EF5
		dc.l loc_4E658
		dc.w $E
ChildObjDat_4EB92:dc.w 7
		dc.l loc_4E6C2
ChildObjDat_4EB98:dc.w 3
		dc.l loc_4E886
		dc.w $F4F4
		dc.l loc_4E886
		dc.w $CF4
		dc.l loc_4E886
		dc.w $F40C
		dc.l loc_4E886
		dc.b $C
		dc.b $C
		dc.b 0
		dc.b 3
		dc.b 1
		dc.b 3
		dc.b 2
		dc.b 3
		dc.b 3
		dc.b 3
		dc.b 4
		dc.b 3
		dc.b 5
		dc.b 3
		dc.b 6
		dc.b 3
		dc.b $F4
		dc.b 0
Pal_ICZMiniboss:binclude "Levels/ICZ/Palettes/Miniboss.bin"
		even
word_4EBE2:	palscriptptr .header, .data
		dc.w 0

.header	palscripthdr	Normal_palette_line_4+$02, 10, 2-1
.data	palscriptdata	8, $EEC, $CC6, $C80, $C60, $C40, $A40, $820, $620, $200, $600
	palscriptdata	8, $EEC, $CC6, $C82, $C80, $C40, $A40, $820, $820, $200, $600
	palscriptdata	8, $EEC, $CC8, $E82, $C82, $C40, $C40, $A20, $820, $200, $600
	palscriptdata	8, $EEE, $EC8, $EA4, $C82, $C60, $C40, $A20, $A20, $400, $600
	palscriptdata	8, $EEE, $EC8, $EA4, $E82, $C60, $C40, $C20, $A20, $400, $600
	palscriptdata	8, $EEE, $EC8, $EA6, $E82, $C62, $C40, $C20, $C20, $600, $800
	palscriptdata	8, $EEE, $EE8, $EC6, $EA2, $C80, $C60, $C20, $C20, $600, $A00
	palscriptdata	8, $EEE, $EEA, $EC6, $EA4, $C82, $C60, $C40, $C20, $800, $C00
	palscriptdata	8, $EEE, $EEA, $EC8, $EA4, $C82, $C60, $C40, $E20, $A00, $C00
	palscriptdata	8, $EEE, $EEA, $EC8, $EA4, $C82, $C60, $C40, $E20, $A00, $E00
	palscriptrun
; ---------------------------------------------------------------------------

Obj_ICZEndBoss:
		lea	word_4ED28(pc),a1
		jsr	(Check_CameraInRange).l
		move.l	#loc_4ED30,(a0)
		move.b	#1,(Boss_flag).w
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.w	#$78,$2E(a0)
		move.b	#mus_EndBoss,$26(a0)
		move.w	(Camera_target_max_Y_pos).w,(Target_camera_max_Y_pos).w
		move.w	#$5F8,(Camera_target_max_Y_pos).w
		move.w	#$4390,$1C(a0)
		move.w	#$4390,(Camera_max_X_pos).w
		move.l	#loc_4ED34,$34(a0)
		moveq	#$70,d0
		jsr	(Load_PLC).l
		lea	Pal_ICZEndBoss(pc),a1
		jmp	PalLoad_Line1(pc)
; ---------------------------------------------------------------------------
word_4ED28:	dc.w 0
		dc.w $6C0
		dc.w $4340
		dc.w $4390
; ---------------------------------------------------------------------------

loc_4ED30:
		jmp	loc_541C8(pc)
; ---------------------------------------------------------------------------

loc_4ED34:
		move.l	#loc_4ED3C,(a0)

locret_4ED3A:
		rts
; ---------------------------------------------------------------------------

loc_4ED3C:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4ED52(pc,d0.w),d1
		jsr	off_4ED52(pc,d1.w)
		bsr.w	sub_4F2F4
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4ED52:	dc.w loc_4ED5A-off_4ED52
		dc.w loc_4ED96-off_4ED52
		dc.w loc_4EDC0-off_4ED52
		dc.w loc_4EE5A-off_4ED52
; ---------------------------------------------------------------------------

loc_4ED5A:
		lea	ObjDat3_4F39A(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#8,$29(a0)
		move.w	#$80,$1A(a0)
		move.w	#$CF,$2E(a0)
		move.l	#loc_4EDA0,$34(a0)
		lea	(ChildObjDat_4F3CA).l,a2
		jsr	CreateChild1_Normal(pc)
		bne.s	loc_4ED8E
		move.b	#9,$2C(a1)

loc_4ED8E:
		lea	ChildObjDat_4F3D2(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4ED96:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4EDA0:
		move.w	#$7FFF,$44(a0)
		bsr.w	sub_4F1B8
		move.b	#4,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4EDE4,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4EDC0:
		jsr	Swing_UpAndDown(pc)
		subq.w	#1,$44(a0)
		bpl.s	loc_4EDDA
		neg.w	$18(a0)
		bchg	#0,4(a0)
		move.w	#$17F,$44(a0)

loc_4EDDA:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4EDE4:
		bset	#2,$38(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4EDFA,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4EDFA:
		move.w	#$3F,$2E(a0)
		move.w	#-$80,$18(a0)
		move.w	#$17F,$44(a0)
		move.l	#loc_4EE16,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4EE16:
		move.l	#loc_4EE3C,$34(a0)
		moveq	#signextendB(sfx_FrostPuff),d0
		jsr	(Play_Sound_2).l
		bsr.w	sub_4F1D2
		cmpi.w	#2,$26(a0)
		bne.w	locret_4ED3A
		lea	ChildObjDat_4F3E6(pc),a2
		jmp	CreateChild6_Simple(pc)
; ---------------------------------------------------------------------------

loc_4EE3C:
		bclr	#1,$38(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4EE16,$34(a0)
		rts
; ---------------------------------------------------------------------------
		bclr	#2,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_4EE5A:
		subq.w	#1,$3C(a0)
		bmi.s	loc_4EE6C
		addi.l	#$8000,$14(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4EE6C:
		move.b	#4,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4EE74:
		move.l	#Obj_Wait,(a0)
		bclr	#7,4(a0)
		bset	#4,$38(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_4EEA4,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		lea	ChildObjDat_4F400(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4EEA4:
		move.l	#loc_4EECE,(a0)
		st	(_unkFAA8).w
		clr.b	(Boss_flag).w
		jsr	(Obj_PlayLevelMusic).l
		move.w	#$44C0,(Target_camera_max_X_pos).w
		jsr	(Create_New_Sprite).l
		bne.s	locret_4EECC
		move.l	#Obj_IncLevEndXGradual,(a1)

locret_4EECC:
		rts
; ---------------------------------------------------------------------------

loc_4EECE:
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		tst.b	(_unkFAA8).w
		bne.w	locret_4ED3A
		clr.b	(_unkFAA8).w
		jsr	Restore_PlayerControl(pc)
		lea	(Player_2).w,a1
		jsr	Restore_PlayerControl2(pc)
		move.w	(Target_camera_max_Y_pos).w,(Camera_target_max_Y_pos).w
		move.w	#$47C0,(Target_camera_max_X_pos).w
		lea	(Child6_IncLevX).l,a2
		jsr	(CreateChild6_Simple).l
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

loc_4EF0A:
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4EF22(pc,d0.w),d1
		jsr	off_4EF22(pc,d1.w)
		moveq	#$C,d0
		jmp	Child_Draw_Sprite_FlickerMove(pc)
; ---------------------------------------------------------------------------
off_4EF22:	dc.w loc_4EF28-off_4EF22
		dc.w loc_4EF30-off_4EF22
		dc.w loc_4EF58-off_4EF22
; ---------------------------------------------------------------------------

loc_4EF28:
		lea	word_4F3A6(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_4EF30:
		movea.w	$46(a0),a1
		tst.b	$3B(a1)
		bne.s	loc_4EF3C
		rts
; ---------------------------------------------------------------------------

loc_4EF3C:
		move.b	#4,5(a0)
		move.b	#4,$22(a0)
		move.w	#$E,$2E(a0)
		move.l	#loc_4EF5C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4EF58:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4EF5C:
		move.w	#$17,$2E(a0)
		move.w	#6,$26(a0)
		lea	ChildObjDat_4F3F2(pc),a2
		jmp	CreateChild6_Simple(pc)
; ---------------------------------------------------------------------------

loc_4EF70:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4EF96(pc,d0.w),d1
		jsr	off_4EF96(pc,d1.w)
		jsr	Refresh_ChildPosition(pc)
		moveq	#0,d0
		movea.w	$46(a0),a1
		tst.b	$3B(a1)
		bne.w	loc_5312A
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_4EF96:	dc.w loc_4EFA0-off_4EF96
		dc.w loc_4EFA8-off_4EF96
		dc.w loc_4EFCC-off_4EF96
		dc.w loc_4EFDC-off_4EF96
		dc.w loc_4F000-off_4EF96
; ---------------------------------------------------------------------------

loc_4EFA0:
		lea	word_4F3AC(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_4EFA8:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_4EFB6
		rts
; ---------------------------------------------------------------------------

loc_4EFB6:
		move.b	#4,5(a0)
		move.w	#$24,$2E(a0)
		move.l	#loc_4EFD4,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4EFCC:
		addq.b	#1,$43(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4EFD4:
		move.b	#6,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4EFDC:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		beq.s	loc_4EFEA
		rts
; ---------------------------------------------------------------------------

loc_4EFEA:
		move.b	#8,5(a0)
		move.w	#$24,$2E(a0)
		move.l	#loc_4F008,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F000:
		subq.b	#1,$43(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4F008:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F010:
		move.w	$10(a0),-(sp)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4F04E(pc,d0.w),d1
		jsr	off_4F04E(pc,d1.w)
		jsr	Refresh_ChildPosition(pc)
		moveq	#$23,d1
		moveq	#4,d2
		moveq	#$A,d3
		move.w	(sp)+,d4
		jsr	(SolidObjectFull).l
		moveq	#0,d0
		movea.w	$46(a0),a1
		tst.b	$3B(a1)
		bne.s	loc_4F046
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4F046:
		jsr	Displace_PlayerOffObject(pc)
		jmp	loc_5312A(pc)
; ---------------------------------------------------------------------------
off_4F04E:	dc.w loc_4F058-off_4F04E
		dc.w loc_4F068-off_4F04E
		dc.w loc_4EFCC-off_4F04E
		dc.w loc_4F08C-off_4F04E
		dc.w loc_4F000-off_4F04E
; ---------------------------------------------------------------------------

loc_4F058:
		lea	word_4F3B2(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		lea	ChildObjDat_4F3F8(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4F068:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_4F076
		rts
; ---------------------------------------------------------------------------

loc_4F076:
		move.b	#4,5(a0)
		move.w	#$42,$2E(a0)
		move.l	#loc_4EFD4,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F08C:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		beq.s	loc_4F0B8
		btst	#1,$38(a1)
		beq.s	locret_4F0B6
		move.w	$26(a1),d0
		cmpi.w	#2,d0
		beq.s	locret_4F0B6
		move.w	d0,$26(a0)
		lea	ChildObjDat_4F3EC(pc),a2
		jsr	CreateChild6_Simple(pc)

locret_4F0B6:
		rts
; ---------------------------------------------------------------------------

loc_4F0B8:
		move.b	#8,5(a0)
		move.w	#$42,$2E(a0)
		move.l	#loc_4F008,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F0CE:
		lea	ObjDat3_4F3B8(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#Obj_Wait,(a0)
		move.l	#loc_4F0E8,$34(a0)
		bra.w	loc_4F200
; ---------------------------------------------------------------------------

loc_4F0E8:
		movea.w	$46(a0),a1
		move.l	#loc_4F10A,(a0)
		cmpi.w	#6,$26(a1)
		bne.s	loc_4F100
		move.l	#loc_4F138,(a0)

loc_4F100:
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F10A:
		jsr	Refresh_ChildPosition(pc)
		jsr	Animate_RawMultiDelay(pc)
		cmpi.b	#4,$23(a0)
		bcs.s	loc_4F12C
		cmpi.b	#8,$23(a0)
		bhi.s	loc_4F12C
		lea	word_4F130(pc),a1
		jsr	(sub_5819C).l

loc_4F12C:
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
word_4F130:	dc.w  $FFE8,   $30, $FFE8,   $30
; ---------------------------------------------------------------------------

loc_4F138:
		jsr	Refresh_ChildPositionAdjusted(pc)
		jsr	Animate_RawMultiDelay(pc)
		cmpi.b	#4,$23(a0)
		bcs.s	loc_4F15A
		cmpi.b	#8,$23(a0)
		bhi.s	loc_4F15A
		lea	word_4F15E(pc),a1
		jsr	(sub_5819C).l

loc_4F15A:
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
word_4F15E:	dc.w  $FFF0,   $20, $FFF0,   $20
; ---------------------------------------------------------------------------

loc_4F166:
		move.l	#loc_4F174,(a0)
		move.b	#-$65,$28(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F174:
		jsr	Refresh_ChildPosition(pc)
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4F18A
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------

loc_4F18A:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4F190:
		lea	word_4F3C4(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		jsr	Refresh_ChildPositionAdjusted(pc)
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		addi.b	#$16,d0
		move.b	d0,$22(a0)
		moveq	#$34,d0
		jmp	Set_IndexedVelocity(pc)

; =============== S U B R O U T I N E =======================================


sub_4F1B8:
		move.w	#$C0,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#$10,$40(a0)
		bclr	#0,$38(a0)
		rts
; End of function sub_4F1B8


; =============== S U B R O U T I N E =======================================


sub_4F1D2:
		bset	#1,$38(a0)
		tst.b	$3B(a0)
		bne.s	loc_4F1F8
		move.b	$3A(a0),d0
		andi.w	#$F,d0
		lea	byte_4F464(pc),a1
		move.b	(a1,d0.w),$27(a0)
		addq.b	#1,d0
		move.b	d0,$3A(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F1F8:
		move.w	#2,$26(a0)
		rts
; End of function sub_4F1D2

; ---------------------------------------------------------------------------

loc_4F200:
		movea.w	$46(a0),a1
		move.w	$26(a1),d0
		moveq	#0,d1
		move.b	44(a0),d1
		lea	word_4F28C(pc),a2
		move.w	(a2,d0.w),d2
		adda.w	d2,a2
		move.w	(a2,d1.w),$42(a0)
		lea	word_4F2C4(pc),a2
		move.w	(a2,d0.w),d2
		adda.w	d2,a2
		move.b	(a2,d1.w),d2
		or.b	d2,4(a0)
		lea	word_4F25A(pc),a2
		move.w	(a2,d0.w),d2
		adda.w	d2,a2
		move.w	(a2,d1.w),$2E(a0)
		cmpi.b	#6,d0
		beq.s	loc_4F250
		add.w	d1,d1
		move.l	off_4F270(pc,d1.w),$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F250:
		move.l	#byte_4F430,$30(a0)
		rts
; ---------------------------------------------------------------------------
word_4F25A:	dc.w    8
		dc.w   $A
		dc.w    8
		dc.w   $E
		dc.w  $11
		dc.w   $E
		dc.w   $B
		dc.w    8
		dc.w    5
		dc.w    2
		dc.w $FFFF
off_4F270:	dc.l byte_4F423
		dc.l byte_4F423
		dc.l byte_4F423
		dc.l byte_4F423
		dc.l byte_4F414
		dc.l byte_4F414
		dc.l byte_4F414
word_4F28C:	dc.w 8
		dc.w $16
		dc.w $22
		dc.w $30
		dc.w $B014
		dc.w $C014
		dc.w $B804
		dc.w $C004
		dc.w $CC0C
		dc.w $DC08
		dc.w $E404
		dc.w $840
		dc.w $3C
		dc.w $F040
		dc.w $F83C
		dc.w $FC34
		dc.w $FC28
		dc.w $5014
		dc.w $4014
		dc.w $4804
		dc.w $4004
		dc.w $340C
		dc.w $2408
		dc.w $1C04
		dc.w $18FC
		dc.w $1400
		dc.w $10F8
		dc.w $8FC
word_4F2C4:	dc.w 8
		dc.w $16
		dc.w $22
		dc.w $E
		dc.w $200
		dc.w $200
		dc.w 0
		dc.w 0
		dc.w 0
		dc.w 0
		dc.w 0
		dc.w $100
		dc.w $100
		dc.w 0
		dc.w 0
		dc.w 0
		dc.w 0
		dc.w $300
		dc.w $300
		dc.w $100
		dc.w $100
		dc.w $100
		dc.w $100
		dc.w $100

; =============== S U B R O U T I N E =======================================


sub_4F2F4:
		tst.b	$28(a0)
		bne.s	locret_4F35C
		move.b	$29(a0),d0
		beq.s	loc_4F35E
		tst.b	$20(a0)
		bne.s	loc_4F32A
		cmpi.b	#2,d0
		bne.s	loc_4F31C
		st	$3B(a0)
		move.b	#6,5(a0)
		move.w	#$7F,$3C(a0)

loc_4F31C:
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_4F32A:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_4F33E
		addi.w	#4,d0

loc_4F33E:
		bsr.w	sub_4F382
		subq.b	#1,$20(a0)
		bne.s	locret_4F35C
		bclr	#6,$2A(a0)
		cmpi.b	#0,$22(a0)
		bne.s	locret_4F35C
		move.b	$25(a0),$28(a0)

locret_4F35C:
		rts
; ---------------------------------------------------------------------------

loc_4F35E:
		move.l	#Wait_Draw,(a0)
		move.l	#loc_4EE74,$34(a0)
		movea.w	(_unkFAAE).w,a1
		cmpi.l	#loc_58DF8,(a1)
		bne.s	loc_4F37E
		bset	#5,$38(a1)

loc_4F37E:
		jmp	BossDefeated_StopTimer(pc)
; End of function sub_4F2F4


; =============== S U B R O U T I N E =======================================


sub_4F382:
		lea	word_4F38E(pc),a1
		lea	word_4F392(pc,d0.w),a2
		jmp	CopyWordData_2(pc)
; End of function sub_4F382

; ---------------------------------------------------------------------------
word_4F38E:	dc.w Normal_palette_line_2+$14, Normal_palette_line_2+$1C
word_4F392:	dc.w    $20,  $644
		dc.w   $EEE,  $AAA
ObjDat3_4F39A:	dc.l Map_ICZEndBoss
		dc.w $A2A6
		dc.w $280
		dc.b $24
		dc.b $24
		dc.b 0
		dc.b $F
word_4F3A6:	dc.w $200
		dc.b $14
		dc.b 8
		dc.b 3
		dc.b 0
word_4F3AC:	dc.w $280
		dc.b 8
		dc.b $C
		dc.b 1
		dc.b 0
word_4F3B2:	dc.w $280
		dc.b $18
		dc.b $2C
		dc.b 2
		dc.b 0
ObjDat3_4F3B8:	dc.l Map_ICZEndBoss
		dc.w $A2A6
		dc.w $80
		dc.b $10
		dc.b $10
		dc.b 5
		dc.b 0
word_4F3C4:	dc.w $180
		dc.b $14
		dc.b $10
		dc.b 0
		dc.b 0
ChildObjDat_4F3CA:dc.w 0
		dc.l Obj_RobotnikShip4
		dc.w 0
ChildObjDat_4F3D2:dc.w 2
		dc.l loc_4EF0A
		dc.w $1807
		dc.l loc_4EF70
		dc.w $B
		dc.l loc_4F010
		dc.w $2D
ChildObjDat_4F3E6:dc.w 5
		dc.l loc_4F0CE
ChildObjDat_4F3EC:dc.w 6
		dc.l loc_4F0CE
ChildObjDat_4F3F2:dc.w 3
		dc.l loc_4F0CE
ChildObjDat_4F3F8:dc.w 0
		dc.l loc_4F166
		dc.w 8
ChildObjDat_4F400:dc.w 2
		dc.l loc_4F190
		dc.w $EC04
		dc.l loc_4F190
		dc.w $C04
		dc.l loc_4F190
		dc.w $1C
byte_4F414:	dc.b    5,   1
		dc.b    5,   1
		dc.b    6,   1
		dc.b    7,   2
		dc.b    8,   3
		dc.b    9,   4
		dc.b   $A,   5
		dc.b  $F4
byte_4F423:	dc.b   $B,   2
		dc.b   $B,   2
		dc.b   $C,   3
		dc.b   $D,   4
		dc.b   $E,   5
		dc.b   $F,   6
		dc.b  $F4
byte_4F430:	dc.b  $10,   1
		dc.b  $10,   1
		dc.b  $11,   1
		dc.b  $12,   2
		dc.b  $13,   2
		dc.b  $14,   2
		dc.b  $15,   2
		dc.b  $F4,   5
		dc.b    0,   1
		dc.b  $FC,   0
Pal_ICZEndBoss:	binclude "Levels/ICZ/Palettes/End Boss.bin"
		even
byte_4F464:	dc.b    0,   2
		dc.b    4,   2
		dc.b    0,   2
		dc.b    4,   2
		dc.b    0,   2
		dc.b    0,   2
		dc.b    4,   2
		dc.b    2,   4
; ---------------------------------------------------------------------------

Obj_LBZMiniboss:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4F48A(pc,d0.w),d1
		jsr	off_4F48A(pc,d1.w)
		bsr.w	sub_4F84C
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4F48A:	dc.w loc_4F496-off_4F48A
		dc.w loc_4F4D8-off_4F48A
		dc.w loc_4F4F8-off_4F48A
		dc.w loc_4F53E-off_4F48A
		dc.w loc_4F55A-off_4F48A
		dc.w loc_4F5B4-off_4F48A
; ---------------------------------------------------------------------------

loc_4F496:
		lea	ObjDat3_4F948(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#6,$29(a0)
		move.b	#1,(Boss_flag).w
		move.w	#$10,$2E(a0)
		move.l	#loc_4F4DC,$34(a0)
		lea	Pal_LBZMiniboss(pc),a1
		jsr	PalLoad_Line1(pc)
		lea	ChildObjDat_4F960(pc),a2
		jsr	CreateChild1_Normal(pc)
		lea	ChildObjDat_4F968(pc),a2
		jsr	CreateChild4_LinkListRepeated(pc)
		lea	ChildObjDat_4F96E(pc),a2
		jmp	CreateChild4_LinkListRepeated(pc)
; ---------------------------------------------------------------------------

loc_4F4D8:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4F4DC:
		move.b	#4,5(a0)
		move.w	#0,$1A(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_4F502,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F4F8:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4F502:
		move.b	#6,5(a0)
		bset	#1,$38(a0)
		lea	(byte_4F974).l,a1
		lea	(_unkFA82).w,a2
		moveq	#5,d6

loc_4F51A:
		move.b	(a1)+,(a2)+
		dbf	d6,loc_4F51A
		move.l	#_unkFA82,$30(a0)
		move.b	#$10,$24(a0)
		move.l	#loc_4F546,$34(a0)

loc_4F536:
		move.w	#$10,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F53E:
		jsr	Animate_Raw(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4F546:
		lea	(_unkFA82).w,a1
		subq.b	#1,(a1)
		cmpi.b	#2,(a1)
		bhi.s	loc_4F536
		move.b	#8,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F55A:
		lea	(Player_1).w,a1
		moveq	#0,d0
		moveq	#0,d1
		move.w	$10(a0),d2
		sub.w	$10(a1),d2
		bpl.s	loc_4F570
		neg.w	d2
		addq.w	#2,d0

loc_4F570:
		moveq	#0,d1
		move.w	$14(a0),d3
		move.w	$14(a1),d4
		subi.w	#$38,d4
		sub.w	d4,d3
		bpl.s	loc_4F586
		neg.w	d3
		addq.w	#2,d1

loc_4F586:
		move.w	word_4F5B0(pc,d0.w),$18(a0)
		move.w	word_4F5B0(pc,d1.w),$1A(a0)
		cmpi.w	#4,d2
		bhi.s	loc_4F59C
		clr.w	$18(a0)

loc_4F59C:
		cmpi.w	#4,d3
		bhi.s	loc_4F5A6
		clr.w	$1A(a0)

loc_4F5A6:
		jsr	(MoveSprite2).l
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------
word_4F5B0:	dc.w  $FF00,  $100
; ---------------------------------------------------------------------------

loc_4F5B4:
		subq.w	#2,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F5BA:
		jmp	(Obj_EndSignControl).l
; ---------------------------------------------------------------------------

loc_4F5C0:
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4F5D6(pc,d0.w),d1
		jsr	off_4F5D6(pc,d1.w)
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------
off_4F5D6:	dc.w loc_4F5DC-off_4F5D6
		dc.w loc_4F5EE-off_4F5D6
		dc.w loc_4F60C-off_4F5D6
; ---------------------------------------------------------------------------

loc_4F5DC:
		lea	word_4F954(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#byte_4F97A,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F5EE:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_4F5FC
		rts
; ---------------------------------------------------------------------------

loc_4F5FC:
		move.b	#4,5(a0)
		move.l	#byte_4F97A,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F60C:
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

loc_4F610:
		bset	#2,$38(a0)

loc_4F616:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4F632(pc,d0.w),d1
		jsr	off_4F632(pc,d1.w)
		tst.b	$2C(a0)
		bne.s	loc_4F62E
		jmp	loc_4F8C0(pc)
; ---------------------------------------------------------------------------

loc_4F62E:
		jmp	loc_4F8F6(pc)
; ---------------------------------------------------------------------------
off_4F632:	dc.w loc_4F63E-off_4F632
		dc.w loc_4F678-off_4F632
		dc.w loc_4F6A2-off_4F632
		dc.w loc_4F6FC-off_4F632
		dc.w loc_4F726-off_4F632
		dc.w loc_4F7A2-off_4F632
; ---------------------------------------------------------------------------

loc_4F63E:
		lea	word_4F95A(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.w	#$100,$2E(a0)
		move.l	#sub_4F68E,$34(a0)
		move.b	#4,$3D(a0)
		move.w	#5,$3E(a0)
		cmpi.b	#$A,$2C(a0)
		bne.s	loc_4F674
		move.w	#4,$3E(a0)
		bset	#1,$38(a0)

loc_4F674:
		bra.w	loc_4F7BE
; ---------------------------------------------------------------------------

loc_4F678:
		tst.b	$2C(a0)
		bne.s	loc_4F682
		jsr	Refresh_ChildPositionAdjusted(pc)

loc_4F682:
		move.w	$3E(a0),d2
		jsr	MoveSprite_CircularSimple(pc)
		jmp	Obj_Wait(pc)

; =============== S U B R O U T I N E =======================================


sub_4F68E:
		move.b	#4,5(a0)
		bsr.w	sub_4F818
		move.l	#loc_4F6CA,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F6A2:
		btst	#1,$38(a0)
		beq.s	loc_4F6C0
		move.b	$3D(a0),d0
		add.b	d0,$3C(a0)
		move.w	$3E(a0),d2
		jsr	(MoveSprite_CircularSimple).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4F6C0:
		move.w	$3E(a0),d2
		jmp	(MoveSprite_CircularSimple).l
; ---------------------------------------------------------------------------

loc_4F6CA:
		bsr.w	sub_4F832
		move.l	#loc_4F73A,$34(a0)
		tst.b	$2C(a0)
		beq.s	loc_4F6F4
		move.b	#6,5(a0)
		movea.w	$46(a0),a1
		bset	#1,$38(a1)
		move.b	$3C(a1),$3C(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F6F4:
		move.b	#8,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F6FC:
		movea.w	$46(a0),a1
		move.b	$3C(a1),$3C(a0)
		move.w	$3E(a0),d2
		jsr	(MoveSprite_CircularSimple).l
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	loc_4F71E
		rts
; ---------------------------------------------------------------------------

loc_4F71E:
		move.b	#8,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4F726:
		move.b	$3D(a0),d0
		add.b	d0,$3C(a0)
		jsr	Obj_Wait(pc)
		move.w	$3E(a0),d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------

loc_4F73A:
		bclr	#1,$38(a0)
		neg.b	$3D(a0)
		bsr.w	sub_4F68E
		cmpi.b	#$A,$2C(a0)
		bne.s	loc_4F76A
		move.b	#$A,5(a0)
		move.w	#$3C,$2E(a0)
		move.l	#sub_4F68E,$34(a0)
		bset	#1,$38(a0)

loc_4F76A:
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		moveq	#0,d1
		btst	#2,$38(a0)
		beq.s	loc_4F77E
		addq.w	#8,d1

loc_4F77E:
		tst.b	$3D(a0)
		bpl.s	loc_4F786
		addq.w	#4,d1

loc_4F786:
		movea.l	off_4F792(pc,d1.w),a1
		move.b	(a1,d0.w),$3C(a0)
		rts
; End of function sub_4F68E

; ---------------------------------------------------------------------------
off_4F792:	dc.l byte_4F800
		dc.l byte_4F806
		dc.l byte_4F80C
		dc.l byte_4F812
; ---------------------------------------------------------------------------

loc_4F7A2:
		move.w	$3E(a0),d2
		jsr	MoveSprite_CircularSimple(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4F7AE:
		jsr	(MoveSprite).l
		jsr	Obj_Wait(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4F7BE:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	byte_4F7EE(pc,d0.w),8(a0)
		lsr.w	#1,d0
		move.b	byte_4F7FA(pc,d0.w),$22(a0)
		move.b	byte_4F800(pc,d0.w),$3C(a0)
		btst	#2,$38(a0)
		beq.s	loc_4F7E6
		move.b	byte_4F80C(pc,d0.w),$3C(a0)

loc_4F7E6:
		move.w	$3E(a0),d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------
byte_4F7EE:	dc.b    3,   0,   3, $80
		dc.b    3,   0,   3, $80
		dc.b    3,   0,   2, $80
byte_4F7FA:	dc.b 7
		dc.b 8
		dc.b 7
		dc.b 8
		dc.b 7
		dc.b 6
byte_4F800:	dc.b $55
		dc.b 0
		dc.b $D5
		dc.b $AA
		dc.b $80
		dc.b $68
byte_4F806:	dc.b $2A
		dc.b $7A
		dc.b $B0
		dc.b $DA
		dc.b 0
		dc.b $18
byte_4F80C:	dc.b $D5
		dc.b $80
		dc.b $55
		dc.b $2A
		dc.b 0
		dc.b $F4
byte_4F812:	dc.b $AA
		dc.b 0
		dc.b $2A
		dc.b $55
		dc.b $80
		dc.b $8C

; =============== S U B R O U T I N E =======================================


sub_4F818:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4F826(pc,d0.w),$2E(a0)
		rts
; End of function sub_4F818

; ---------------------------------------------------------------------------
word_4F826:	dc.w 0
		dc.w $14
		dc.w 9
		dc.w 9
		dc.w 9
		dc.w 5

; =============== S U B R O U T I N E =======================================


sub_4F832:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_4F840(pc,d0.w),$2E(a0)
		rts
; End of function sub_4F832

; ---------------------------------------------------------------------------
word_4F840:	dc.w $34
		dc.w $14
		dc.w 9
		dc.w 9
		dc.w 9
		dc.w 3

; =============== S U B R O U T I N E =======================================


sub_4F84C:
		tst.b	$28(a0)
		bne.s	locret_4F8A2
		tst.b	$29(a0)
		beq.s	loc_4F8A4
		cmpi.b	#3,$29(a0)
		bne.s	loc_4F866
		bset	#0,$38(a0)

loc_4F866:
		tst.b	$20(a0)
		bne.s	loc_4F886
		move.b	5(a0),$3A(a0)
		move.b	#$A,5(a0)
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_4F886:
		jsr	BossFlash(pc)
		subq.b	#1,$20(a0)
		bne.s	locret_4F8A2
		move.b	$3A(a0),5(a0)
		move.w	#$EEE,(Normal_palette_line_2+2).w
		move.b	$25(a0),$28(a0)

locret_4F8A2:
		rts
; ---------------------------------------------------------------------------

loc_4F8A4:
		move.l	#Wait_Draw,(a0)
		move.l	#loc_4F5BA,$34(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	CreateChild1_Normal(pc)
		jmp	BossDefeated_StopTimer(pc)
; End of function sub_4F84C

; ---------------------------------------------------------------------------

loc_4F8C0:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4F8E0
		btst	#0,$38(a1)
		beq.s	loc_4F8DC
		btst	#2,$38(a0)
		bne.s	loc_4F8E0

loc_4F8DC:
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4F8E0:
		move.w	$44(a0),d0
		beq.s	loc_4F8EE
		movea.w	d0,a1
		bset	#7,$2A(a1)

loc_4F8EE:
		bsr.w	sub_4F902
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4F8F6:
		btst	#7,$2A(a0)
		bne.s	loc_4F8E0
		jmp	Draw_And_Touch_Sprite(pc)

; =============== S U B R O U T I N E =======================================


sub_4F902:
		move.l	#loc_4F7AE,(a0)
		clr.b	$28(a0)
		move.w	#$80,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		lea	word_4F930(pc,d0.w),a1
		move.w	(a1)+,$18(a0)
		move.w	(a1)+,$1A(a0)
		rts
; End of function sub_4F902

; ---------------------------------------------------------------------------
word_4F930:	dc.w $100
		dc.w $FF00
		dc.w $FE00
		dc.w $FE00
		dc.w $300
		dc.w $FE00
		dc.w $200
		dc.w $FF00
		dc.w $FF00
		dc.w $FE00
		dc.w $FF80
		dc.w $FF00
ObjDat3_4F948:	dc.l Map_LBZMiniboss
		dc.w $A4D6
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 6
word_4F954:	dc.w $200
		dc.b $20
		dc.b $20
		dc.b 3
		dc.b 0
word_4F95A:	dc.w $180
		dc.b 8
		dc.b 8
		dc.b 6
		dc.b $98
ChildObjDat_4F960:dc.w 0
		dc.l loc_4F5C0
		dc.w 0
ChildObjDat_4F968:dc.w 5
		dc.l loc_4F616
ChildObjDat_4F96E:dc.w 5
		dc.l loc_4F610
byte_4F974:	dc.b   $F,   0
		dc.b    1,   0
		dc.b    2, $FC
byte_4F97A:	dc.b    7,   3
		dc.b    4,   5
		dc.b  $F8,   6
		dc.b  $3F,   5
		dc.b    5,   5
		dc.b  $F8,   6
		dc.b    7,   5
		dc.b    4,   3
		dc.b    4, $FC
Pal_LBZMiniboss:binclude "Levels/LBZ/Palettes/Miniboss.bin"
		even
; ---------------------------------------------------------------------------

Obj_LBZ_FinalBoss1:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4F9C2(pc,d0.w),d1
		jsr	off_4F9C2(pc,d1.w)
		bsr.w	sub_500DA
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4F9C2:	dc.w loc_4F9CE-off_4F9C2
		dc.w loc_4FA2E-off_4F9C2
		dc.w loc_4FA46-off_4F9C2
		dc.w locret_4FAC2-off_4F9C2
		dc.w loc_4FAC4-off_4F9C2
		dc.w loc_4FADA-off_4F9C2
; ---------------------------------------------------------------------------

loc_4F9CE:
		lea	ObjDat3_502A4(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#9,$29(a0)
		move.b	#1,(Boss_flag).w
		move.w	#$7F,$2E(a0)
		move.l	#loc_4FA32,$34(a0)
		moveq	#$71,d0
		jsr	(Load_PLC).l
		jsr	(Create_New_Sprite).l
		bne.s	loc_4FA0C
		move.l	#Obj_Song_Fade_Transition,(a1)
		move.b	#mus_EndBoss,$2C(a1)

loc_4FA0C:
		lea	(Child1_MakeRoboHead3).l,a2
		jsr	CreateChild1_Normal(pc)
		lea	ChildObjDat_503B8(pc),a2
		jsr	CreateChild1_Normal(pc)
		lea	ChildObjDat_5032E(pc),a2
		jsr	CreateChild1_Normal(pc)
		lea	ChildObjDat_503B0(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------

loc_4FA2E:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_4FA32:
		move.b	#4,5(a0)
		move.w	#-$100,$1A(a0)
		lea	Pal_LBZFinalBoss1(pc),a1
		jmp	PalLoad_Line1(pc)
; ---------------------------------------------------------------------------

loc_4FA46:
		move.w	$14(a0),d0
		move.w	(Camera_Y_pos).w,d1
		tst.w	$1A(a0)
		bmi.s	loc_4FA62
		addi.w	#$118,d1
		cmp.w	d1,d0
		bcc.s	loc_4FA70
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_4FA62:
		subi.w	#$B0,d1
		cmp.w	d1,d0
		bls.s	loc_4FA70
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_4FA70:
		cmpi.b	#2,$29(a0)
		bls.s	loc_4FA80
		btst	#3,$38(a0)
		beq.s	locret_4FABC

loc_4FA80:
		jsr	(Random_Number).l
		swap	d0
		moveq	#0,d1
		bclr	#0,4(a0)
		btst	#0,d0
		beq.s	loc_4FA9E
		moveq	#2,d1
		bset	#0,4(a0)

loc_4FA9E:
		move.w	word_4FABE(pc,d1.w),d1
		move.w	(Camera_X_pos).w,d2
		add.w	d1,d2
		move.w	d2,$10(a0)
		move.w	#$100,d0
		tst.w	$1A(a0)
		bmi.s	loc_4FAB8
		neg.w	d0

loc_4FAB8:
		move.w	d0,$1A(a0)

locret_4FABC:
		rts
; ---------------------------------------------------------------------------
word_4FABE:	dc.w $110
		dc.w $30
; ---------------------------------------------------------------------------

locret_4FAC2:
		rts
; ---------------------------------------------------------------------------

loc_4FAC4:
		subq.b	#1,$40(a0)
		bmi.s	loc_4FACC
		rts
; ---------------------------------------------------------------------------

loc_4FACC:
		move.b	#$A,5(a0)
		move.b	#4,$40(a0)

locret_4FAD8:
		rts
; ---------------------------------------------------------------------------

loc_4FADA:
		addq.w	#8,$14(a0)
		subq.b	#1,$40(a0)
		bmi.s	loc_4FAE6
		rts
; ---------------------------------------------------------------------------

loc_4FAE6:
		move.b	#6,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_4FAEE:
		move.w	$14(a0),d0
		addq.w	#1,d0
		move.w	(Camera_Y_pos).w,d1
		addi.w	#$140,d1
		cmp.w	d1,d0
		bcc.s	loc_4FB0A
		move.w	d0,$14(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FB0A:
		bset	#5,$38(a0)
		move.w	(Camera_X_pos).w,d2
		addi.w	#$100,d2
		move.w	d2,$10(a0)
		move.w	d1,$14(a0)
		bclr	#0,4(a0)
		bclr	#7,$A(a0)
		jsr	(Create_New_Sprite).l
		bne.s	loc_4FB46
		move.l	#Obj_LBZ_FinalBoss2,(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)

loc_4FB46:
		jmp	(Go_Delete_Sprite_2).l
; ---------------------------------------------------------------------------

loc_4FB4C:
		move.w	$14(a0),d0
		subq.w	#1,d0
		move.w	(Camera_Y_pos).w,d1
		subi.w	#$40,d1
		cmp.w	d1,d0
		bcs.s	loc_4FB68
		move.w	d0,$14(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FB68:
		move.l	#loc_4FB8C,(a0)
		bset	#5,$38(a0)
		bset	#0,4(a0)
		move.w	(Camera_X_pos).w,d2
		addi.w	#$40,d2
		move.w	d2,$10(a0)
		move.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_4FB8C:
		move.w	$14(a0),d0
		addq.w	#1,d0
		move.w	(Camera_Y_pos).w,d1
		addi.w	#$40,d1
		cmp.w	d1,d0
		bcc.s	loc_4FBA8
		move.w	d0,$14(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FBA8:
		move.l	#loc_4FBBE,(a0)
		lea	(Child1_MakeRoboShipFlame).l,a2
		jsr	CreateChild1_Normal(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FBBE:
		move.w	$10(a0),d0
		addq.w	#2,d0
		move.w	(Camera_X_pos).w,d1
		addi.w	#$A0,d1
		cmp.w	d1,d0
		bcc.s	loc_4FBDA
		move.w	d0,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FBDA:
		move.w	d0,$10(a0)
		move.l	#loc_4FBF2,(a0)
		lea	ChildObjDat_50326(pc),a2
		jsr	CreateChild1_Normal(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FBF2:
		move.w	$10(a0),d0
		addq.w	#2,d0
		move.w	(Camera_X_pos).w,d1
		addi.w	#$1C0,d1
		cmp.w	d1,d0
		bcc.s	loc_4FC0E
		move.w	d0,$10(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FC0E:
		move.l	#loc_4FC26,(a0)
		bset	#6,$2A(a0)
		bset	#4,$38(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FC26:
		clr.b	(Boss_flag).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4FC30:
		lea	ObjDat3_502C0(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_4FC4E,(a0)
		move.l	#loc_4FC4E,$34(a0)
		lea	ChildObjDat_50382(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------

loc_4FC4E:
		jsr	Refresh_ChildPositionAdjusted(pc)
		bsr.w	sub_501FA
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4FC5A:
		movea.w	$46(a0),a1
		btst	#6,$2A(a1)
		bne.s	loc_4FC86
		move.l	$34(a0),(a0)
		btst	#5,$2A(a1)
		beq.s	loc_4FC86
		subi.b	#$28,$43(a0)
		cmpi.b	#4,$2C(a0)
		bne.s	loc_4FC86
		bclr	#5,$2A(a1)

loc_4FC86:
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4FC8A:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4FC90:
		move.w	#1,$3C(a0)
		bra.s	loc_4FC30
; ---------------------------------------------------------------------------

loc_4FC98:
		lea	ObjDat3_502CC(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_4FCBC,(a0)
		move.l	#loc_4FCBC,$34(a0)
		move.w	#2,$3C(a0)
		lea	ChildObjDat_503A2(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4FCBC:
		jsr	Refresh_ChildPositionAdjusted(pc)
		bsr.w	sub_501FA
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4FCC8:
		lea	word_502E0(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_4FCE0,(a0)
		move.w	#$60,$2E(a0)
		bsr.w	sub_5025A

loc_4FCE0:
		jsr	(MoveSprite).l
		jsr	TimedSprite_ScreenLock(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FCF0:
		move.l	#loc_4FCFE,(a0)
		lea	ObjDat3_50306(pc),a1
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

loc_4FCFE:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4FD14
		jsr	Refresh_ChildPositionAdjusted(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FD14:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4FD1A:
		lea	ObjDat3_50312(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_4FD36,(a0)
		tst.b	$2C(a0)
		beq.s	locret_4FD34
		move.b	#$22,$22(a0)

locret_4FD34:
		rts
; ---------------------------------------------------------------------------

loc_4FD36:
		movea.w	$46(a0),a1
		btst	#6,$2A(a1)
		beq.s	loc_4FD4C
		jsr	Refresh_ChildPositionAdjusted(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FD4C:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4FD52:
		lea	word_502E6(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_4FD76,(a0)
		movea.w	$46(a0),a1
		move.w	$46(a1),$44(a0)
		tst.b	$2C(a0)
		beq.s	loc_4FD76
		move.b	#8,$39(a0)

loc_4FD76:
		bsr.w	sub_4FFDE
		moveq	#4,d0
		jmp	Child_Draw_Sprite_FlickerMove(pc)
; ---------------------------------------------------------------------------
		movea.w	$44(a0),a1
		btst	#6,$2A(a1)
		bne.s	loc_4FD92
		move.l	#loc_4FD76,(a0)

loc_4FD92:
		moveq	#4,d0
		jmp	Child_Draw_Sprite_FlickerMove(pc)
; ---------------------------------------------------------------------------

loc_4FD98:
		lea	word_502EC(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_4FDAE,(a0)
		move.w	#8,$3A(a0)
		rts
; ---------------------------------------------------------------------------

loc_4FDAE:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_4FDE4
		jsr	Refresh_ChildPositionAdjusted(pc)
		subq.w	#1,$2E(a0)
		bpl.w	locret_4FAD8
		move.w	$3A(a0),$2E(a0)
		subq.w	#1,$3A(a0)
		bpl.s	loc_4FDDE
		move.l	#loc_4FDEA,(a0)
		move.w	#$18,$2E(a0)

loc_4FDDE:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FDE4:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4FDEA:
		jsr	Refresh_ChildPositionAdjusted(pc)
		subq.w	#1,$2E(a0)
		bmi.s	loc_4FE04
		btst	#0,$2F(a0)
		bne.w	locret_4FAD8
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FE04:
		move.l	#loc_4FE20,(a0)
		move.l	#byte_503D3,$30(a0)
		move.l	#loc_4FE2E,$34(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FE20:
		jsr	Refresh_ChildPositionAdjusted(pc)
		jsr	Animate_Raw(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FE2E:
		move.l	#loc_4FE6A,(a0)
		tst.b	4(a0)
		bpl.s	loc_4FE42
		moveq	#signextendB(sfx_Lazer),d0
		jsr	(Play_Sound_2).l

loc_4FE42:
		move.b	#-$64,$28(a0)
		move.b	#$11,$22(a0)
		moveq	#-$2C,d0
		move.w	#-$800,d1
		btst	#0,4(a0)
		beq.s	loc_4FE60
		neg.w	d0
		neg.w	d1

loc_4FE60:
		add.w	d0,$10(a0)
		move.w	d1,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_4FE6A:
		btst	#0,(V_int_run_count+3).w
		bne.s	loc_4FE8A
		lea	ChildObjDat_5039A(pc),a2
		jsr	CreateChild1_Normal(pc)
		move.l	#byte_503DB,$30(a1)
		bsr.w	sub_500C4
		bra.w	loc_4FE9E
; ---------------------------------------------------------------------------

loc_4FE8A:
		lea	ChildObjDat_5039A(pc),a2
		jsr	CreateChild1_Normal(pc)
		move.l	#byte_503E1,$30(a1)
		bsr.w	sub_500C4

loc_4FE9E:
		jsr	(MoveSprite2).l
		jmp	(Sprite_CheckDeleteTouch).l
; ---------------------------------------------------------------------------

loc_4FEAA:
		lea	word_502F4(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_4FEC4,(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		jsr	Refresh_ChildPositionAdjusted(pc)

loc_4FEC4:
		jsr	Animate_Raw(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_4FECE:
		lea	word_502D8(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_4FEE6,(a0)
		move.l	#byte_503CE,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_4FEE6:
		jsr	Refresh_ChildPositionAdjusted(pc)
		jsr	Animate_Raw(pc)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4FEF2:
		lea	word_502B0(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_4FF02,(a0)
		rts
; ---------------------------------------------------------------------------

loc_4FF02:
		jsr	Refresh_ChildPositionAdjusted(pc)
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_4FF0A:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_4FF1C(pc,d0.w),d1
		jsr	off_4FF1C(pc,d1.w)
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_4FF1C:	dc.w loc_4FF22-off_4FF1C
		dc.w loc_4FF3A-off_4FF1C
		dc.w loc_4FF7A-off_4FF1C
; ---------------------------------------------------------------------------

loc_4FF22:
		lea	word_502B8(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.b	#$10,$1E(a0)
		move.l	#loc_4FF4C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_4FF3A:
		jsr	(MoveSprite).l
		tst.w	$1A(a0)
		bmi.w	locret_4FAD8
		jmp	ObjHitFloor_DoRoutine(pc)
; ---------------------------------------------------------------------------

loc_4FF4C:
		move.w	$1A(a0),d0
		cmpi.w	#$100,d0
		bcs.s	loc_4FF60
		asr.w	#1,d0
		neg.w	d0
		move.w	d0,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_4FF60:
		move.b	#4,5(a0)
		lea	(ChildObjDat_46FEE).l,a2
		jsr	CreateChild1_Normal(pc)
		lea	(Child6_CreateBossExplosion).l,a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_4FF7A:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_4FF80:
		lea	ObjDat3_502FA(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_4FFB2,(a0)
		move.l	#byte_503E7,$30(a0)
		move.l	#loc_4FFC4,$34(a0)
		move.b	#-$14,$43(a0)
		tst.b	$2C(a0)
		beq.s	locret_4FFB0
		move.b	#-$80,$3C(a0)

locret_4FFB0:
		rts
; ---------------------------------------------------------------------------

loc_4FFB2:
		jsr	Animate_Raw(pc)
		addq.b	#1,$3C(a0)
		moveq	#3,d2
		jsr	MoveSprite_CircularSimpleOffset(pc)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_4FFC4:
		move.b	$39(a0),d0
		addq.b	#1,d0
		move.b	d0,$39(a0)
		andi.b	#3,d0
		andi.b	#-4,4(a0)
		or.b	d0,4(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_4FFDE:
		moveq	#0,d0
		move.b	$39(a0),d0
		subq.w	#1,$2E(a0)
		bmi.s	loc_4FFF0
		add.w	d0,d0
		bra.w	loc_50064
; ---------------------------------------------------------------------------

loc_4FFF0:
		movea.w	$44(a0),a1
		btst	#0,4(a1)
		sne	d2
		beq.s	loc_50008
		subq.b	#1,d0

loc_50000:
		bpl.s	loc_50012
		moveq	#$B,d0
		bra.w	loc_50012
; ---------------------------------------------------------------------------

loc_50008:
		addq.b	#1,d0
		cmpi.b	#$C,d0
		bcs.s	loc_50012
		moveq	#0,d0

loc_50012:
		move.b	d0,$39(a0)
		lea	byte_5008A(pc),a2
		move.b	(a2,d0.w),d1
		bset	#0,4(a0)
		bclr	#7,d1
		bne.s	loc_50032
		bclr	#0,4(a0)
		not.b	d2

loc_50032:
		bclr	#3,$38(a1)
		cmpi.b	#4,d1
		bne.s	loc_50058
		bset	#3,$38(a1)
		tst.b	d2
		beq.s	loc_50058
		movem.l	d0-d1,-(sp)
		lea	ChildObjDat_5038A(pc),a2
		jsr	CreateChild1_Normal(pc)
		movem.l	(sp)+,d0-d1

loc_50058:
		move.b	d1,$22(a0)
		add.w	d0,d0
		move.w	word_50096(pc,d0.w),$2E(a0)

loc_50064:
		lea	byte_500AE(pc,d0.w),a1
		movea.w	$46(a0),a2
		move.b	(a1)+,d1
		ext.w	d1
		move.w	$10(a2),d2
		add.w	d1,d2
		move.w	d2,$10(a0)
		move.b	(a1)+,d1
		ext.w	d1
		move.w	$14(a2),d2
		add.w	d1,d2
		move.w	d2,$14(a0)
		rts
; End of function sub_4FFDE

; ---------------------------------------------------------------------------
byte_5008A:	dc.b $83
		dc.b $84
		dc.b $85
		dc.b $86
		dc.b $87
		dc.b $88
		dc.b 7
		dc.b 6
		dc.b 5
		dc.b 4
		dc.b 3
		dc.b $2D
word_50096:	dc.w 7
		dc.w $5F
		dc.w 7
		dc.w 7
		dc.w 7
		dc.w 7
		dc.w 7
		dc.w 7
		dc.w 7
		dc.w $5F
		dc.w 7
		dc.w $27
byte_500AE:	dc.b  $27, $F8
		dc.b  $24, $F8
		dc.b  $24, $F8
		dc.b  $14, $F8
		dc.b   $C, $F8
		dc.b    0, $F8
		dc.b  $F4, $F8
		dc.b  $EC, $F8
		dc.b  $DC, $F8
		dc.b  $DC, $F8
		dc.b  $D9, $F8

; =============== S U B R O U T I N E =======================================


sub_500C4:
		jsr	(Random_Number).l
		swap	d0
		andi.b	#7,d0
		addi.b	#$18,d0
		move.b	d0,$42(a1)
		rts
; End of function sub_500C4


; =============== S U B R O U T I N E =======================================


sub_500DA:
		tst.b	$28(a0)
		bne.w	locret_50192
		tst.b	$29(a0)
		beq.w	loc_50194
		tst.b	$20(a0)
		bne.s	loc_50162
		move.b	5(a0),$3A(a0)
		move.b	#6,5(a0)
		move.b	#$20,$20(a0)
		bset	#6,$2A(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l
		move.w	$1A(a0),d0
		asl.w	#1,d0
		cmpi.w	#-$800,d0
		blt.s	loc_50126
		cmpi.w	#$800,d0
		bgt.s	loc_50126
		move.w	d0,$1A(a0)

loc_50126:
		cmpi.b	#5,$29(a0)
		beq.s	loc_5013C
		cmpi.b	#1,$29(a0)
		bne.s	loc_50162
		bset	#3,$38(a0)

loc_5013C:
		move.w	$3C(a0),d0
		bset	d0,$38(a0)
		addq.w	#1,$3C(a0)
		move.b	#8,5(a0)
		move.b	#$F,$40(a0)
		bset	#5,$2A(a0)
		lea	ChildObjDat_503C0(pc),a2
		jsr	CreateChild1_Normal(pc)

loc_50162:
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_50170
		addi.w	#4,d0

loc_50170:
		bsr.w	sub_501E2
		subq.b	#1,$20(a0)
		bne.s	locret_50192
		move.b	$3A(a0),5(a0)
		move.w	#$EEE,(Normal_palette_line_2+2).w
		move.b	$25(a0),$28(a0)
		bclr	#6,$2A(a0)

locret_50192:
		rts
; ---------------------------------------------------------------------------

loc_50194:
		jsr	BossDefeated(pc)
		move.b	#5,$22(a0)
		bset	#6,$2A(a0)
		bset	#7,$2A(a0)
		clr.b	$28(a0)
		move.w	$3C(a0),d0
		bset	d0,$38(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	CreateChild1_Normal(pc)
		move.b	#4,$2C(a1)
		tst.b	(_unkFA80+1).w
		bne.s	loc_501D4
		move.l	#loc_4FAEE,(a0)
		rts
; ---------------------------------------------------------------------------

loc_501D4:
		move.l	#loc_4FB4C,(a0)
		lea	ChildObjDat_5031E(pc),a2
		jmp	CreateChild1_Normal(pc)
; End of function sub_500DA


; =============== S U B R O U T I N E =======================================


sub_501E2:
		lea	word_501EE(pc),a1
		lea	word_501F2(pc,d0.w),a2
		jmp	CopyWordData_2(pc)
; End of function sub_501E2

; ---------------------------------------------------------------------------
word_501EE:	dc.w Normal_palette_line_2+$08, Normal_palette_line_2+$1C
word_501F2:	dc.w    $26,   $20
		dc.w   $EEE,  $EEE

; =============== S U B R O U T I N E =======================================


sub_501FA:
		movea.w	$46(a0),a1
		move.w	$3C(a0),d0
		btst	d0,$38(a1)
		beq.s	loc_5024A
		move.l	#byte_5029A,$3E(a0)
		bset	#7,$2A(a0)
		lea	(ChildObjDat_50342).l,a2
		cmpi.w	#2,d0
		bne.s	loc_50230
		move.l	#byte_5029E,$3E(a0)
		lea	(ChildObjDat_5035C).l,a2

loc_50230:
		move.w	#$10,$2E(a0)
		move.l	#loc_4FC8A,(a0)
		jsr	CreateChild1_Normal(pc)
		lea	(Child6_CreateBossExplosion).l,a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_5024A:
		btst	#6,$2A(a1)
		beq.s	locret_50258
		move.l	#loc_4FC5A,(a0)

locret_50258:
		rts
; End of function sub_501FA


; =============== S U B R O U T I N E =======================================


sub_5025A:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,d1
		lsr.w	#1,d1
		movea.w	$46(a0),a1
		movea.l	$3E(a1),a1
		move.b	(a1,d1.w),$22(a0)
		add.w	d0,d0
		lea	word_50282(pc,d0.w),a1
		move.w	(a1)+,$18(a0)
		move.w	(a1)+,$1A(a0)
		rts
; End of function sub_5025A

; ---------------------------------------------------------------------------
word_50282:	dc.w  $FF00, $FE00
		dc.w   $100, $FE00
		dc.w  $FE00, $FF00
		dc.w   $200, $FF00
		dc.w  $FD00, $FD00
		dc.w   $300, $FD00
byte_5029A:	dc.b $23
		dc.b $25
		dc.b $24
		dc.b $26
byte_5029E:	dc.b $27
		dc.b $29
		dc.b $28
		dc.b $2A
		dc.b $2B
		dc.b $2C
ObjDat3_502A4:	dc.l Map_RobotnikShip
		dc.w $852E
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b $C
		dc.b $F
word_502B0:	dc.w $A3AA
		dc.w $200
		dc.b $10
		dc.b 4
		dc.b $15
		dc.b 0
word_502B8:	dc.w $A3AA
		dc.w $300
		dc.b $C
		dc.b $10
		dc.b $16
		dc.b 0
ObjDat3_502C0:	dc.l Map_LBZFinalBoss1
		dc.w $A3AA
		dc.w $200
		dc.b $20
		dc.b $14
		dc.b 0
		dc.b $AD
ObjDat3_502CC:	dc.l Map_LBZFinalBoss1
		dc.w $A3AA
		dc.w $200
		dc.b $28
		dc.b $18
		dc.b 1
		dc.b $AD
word_502D8:	dc.w $83AA
		dc.w $280
		dc.b $C
		dc.b $18
		dc.b 9
		dc.b $89
word_502E0:	dc.w $200
		dc.b $10
		dc.b $10
		dc.b $2A
		dc.b 0
word_502E6:	dc.w $180
		dc.b $C
		dc.b $C
		dc.b 3
		dc.b 0
word_502EC:	dc.w $83AA
		dc.w $100
		dc.b $18
		dc.b 8
		dc.b $F
		dc.b 0
word_502F4:	dc.w $100
		dc.b 8
		dc.b 8
		dc.b $1C
		dc.b 0
ObjDat3_502FA:	dc.l Map_LBZFinalBoss1
		dc.w $A3AA
		dc.w $300
		dc.b $C
		dc.b $C
		dc.b $C
		dc.b $97
ObjDat3_50306:	dc.l Map_LBZFinalBoss1
		dc.w $A3AA
		dc.w $200
		dc.b $28
		dc.b 8
		dc.b 2
		dc.b 0
ObjDat3_50312:	dc.l Map_LBZFinalBoss1
		dc.w $A3AA
		dc.w $280
		dc.b $10
		dc.b $C
		dc.b $10
		dc.b 0
ChildObjDat_5031E:dc.w 0
		dc.l loc_4FEF2
		dc.w $10
ChildObjDat_50326:dc.w 0
		dc.l loc_4FF0A
		dc.w 8
ChildObjDat_5032E:dc.w 2
		dc.l loc_4FC30
		dc.w 8
		dc.l loc_4FC90
		dc.w $30
		dc.l loc_4FC98
		dc.w $5C
ChildObjDat_50342:dc.w 3
		dc.l loc_4FCC8
		dc.w $F0FC
		dc.l loc_4FCC8
		dc.w $10FC
		dc.l loc_4FCC8
		dc.w $F010
		dc.l loc_4FCC8
		dc.w $1010
ChildObjDat_5035C:dc.w 5
		dc.l loc_4FCC8
		dc.w $F0F8
		dc.l loc_4FCC8
		dc.w $10F8
		dc.l loc_4FCC8
		dc.w $F010
		dc.l loc_4FCC8
		dc.w $1010
		dc.l loc_4FCC8
		dc.w $ECE0
		dc.l loc_4FCC8
		dc.w $14E0
ChildObjDat_50382:dc.w 1
		dc.l loc_4FD52
		dc.w 0
ChildObjDat_5038A:dc.w 0
		dc.l loc_4FD98
		dc.w $F800
		dc.w 0
		dc.l loc_4FD98
		dc.w $800
ChildObjDat_5039A:dc.w 0
		dc.l loc_4FEAA
		dc.w $2000
ChildObjDat_503A2:dc.w 1
		dc.l loc_4FECE
		dc.w $EC30
		dc.l loc_4FECE
		dc.w $1430
ChildObjDat_503B0:dc.w 0
		dc.l loc_4FF80
		dc.w 0
ChildObjDat_503B8:dc.w 0
		dc.l loc_4FCF0
		dc.w $EC
ChildObjDat_503C0:dc.w 1
		dc.l loc_4FD1A
		dc.w $F000
		dc.l loc_4FD1A
		dc.w $1000
byte_503CE:	dc.b    2,   9
		dc.b   $A,  $B
		dc.b  $FC
byte_503D3:	dc.b 0
		dc.b $17
		dc.b $17
		dc.b $18
		dc.b $19
		dc.b $1A
		dc.b $1B
		dc.b $F4
byte_503DB:	dc.b 0
		dc.b $1C
		dc.b $1C
		dc.b $1D
		dc.b $1E
		dc.b $F4
byte_503E1:	dc.b 0
		dc.b $1F
		dc.b $1F
		dc.b $20
		dc.b $21
		dc.b $F4
byte_503E7:	dc.b    1,  $C
		dc.b   $D,  $E
		dc.b   $D,  $C
		dc.b  $F4
Pal_LBZFinalBoss1:
		binclude "Levels/LBZ/Palettes/Final Boss 1.bin"
		even
; ---------------------------------------------------------------------------

Obj_LBZ_EndBoss:
		lea	word_5043C(pc),a1
		jsr	(Check_CameraInRange).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5042E(pc,d0.w),d1
		jsr	off_5042E(pc,d1.w)
		bsr.w	sub_50A7A
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_5042E:	dc.w loc_50444-off_5042E
		dc.w loc_504AE-off_5042E
		dc.w loc_504CA-off_5042E
		dc.w loc_504DC-off_5042E
		dc.w loc_5051C-off_5042E
		dc.w loc_50548-off_5042E
		dc.w loc_50574-off_5042E
word_5043C:	dc.w   $480,  $660, $3900, $3A20
; ---------------------------------------------------------------------------

loc_50444:
		lea	ObjDat3_50B78(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#8,$29(a0)
		move.b	#1,(Boss_flag).w
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.w	#$78,$2E(a0)
		move.b	#mus_EndBoss,$26(a0)
		move.w	#$5A0,(Camera_target_max_Y_pos).w
		move.w	#$3A20,$1C(a0)
		move.w	#$3A20,(Camera_max_X_pos).w
		move.l	#loc_504B4,$34(a0)
		lea	ChildObjDat_50BD8(pc),a2
		jsr	CreateChild1_Normal(pc)
		moveq	#$77,d0
		jsr	(Load_PLC).l
		lea	(ArtKosM_LBZEndBoss).l,a1
		move.w	#-$7B60,d2
		jsr	(Queue_Kos_Module).l
		lea	Pal_LBZEndBoss(pc),a1
		jmp	PalLoad_Line1(pc)
; ---------------------------------------------------------------------------

loc_504AE:
		jmp	(loc_541C8).l
; ---------------------------------------------------------------------------

loc_504B4:
		move.b	#4,5(a0)
		lea	ChildObjDat_50C16(pc),a2
		jsr	CreateChild4_LinkListRepeated(pc)
		lea	ChildObjDat_50BE6(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_504CA:
		btst	#7,$38(a0)
		bne.s	loc_504D4
		rts
; ---------------------------------------------------------------------------

loc_504D4:
		move.b	#6,5(a0)

locret_504DA:
		rts
; ---------------------------------------------------------------------------

loc_504DC:
		move.w	(Camera_max_X_pos).w,d0
		subq.w	#1,d0
		cmpi.w	#$39F0,d0
		bls.s	loc_504F2
		move.w	d0,(Camera_min_X_pos).w
		move.w	d0,(Camera_max_X_pos).w
		rts
; ---------------------------------------------------------------------------

loc_504F2:
		move.b	#8,5(a0)
		moveq	#signextendB(sfx_Rising),d0
		jsr	(Play_Sound_2).l
		move.w	#-$40,$1A(a0)
		move.w	#$DF,$2E(a0)
		move.l	#loc_50526,$34(a0)
		lea	ChildObjDat_50BEE(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_5051C:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50526:
		bset	#2,$38(a0)
		move.b	#$F,$28(a0)

loc_50532:
		move.b	#$A,5(a0)
		move.w	#7,$2E(a0)
		move.l	#loc_5054C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_50548:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5054C:
		bset	#1,$38(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_50562,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_50562:
		move.b	#$C,5(a0)
		moveq	#signextendB(sfx_TubeLauncher),d0
		jsr	(Play_Sound_2).l
		bra.w	loc_509B6
; ---------------------------------------------------------------------------

loc_50574:
		btst	#1,$38(a0)
		beq.s	loc_50532
		rts
; ---------------------------------------------------------------------------

loc_5057E:
		addi.w	#$20,$1A(a0)
		jsr	(MoveSprite2).l
		jsr	Obj_Wait(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_50594:
		bset	#5,$38(a0)
		bclr	#7,4(a0)
		clr.b	(Boss_flag).w
		jsr	Obj_PlayLevelMusic(pc)
		lea	(Player_2).w,a1
		bclr	#4,$2A(a1)
		move.l	#Go_Delete_Sprite_2,(a0)
		rts
; ---------------------------------------------------------------------------

loc_505BA:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_505E8(pc,d0.w),d1
		jsr	off_505E8(pc,d1.w)
		jsr	Animate_Raw(pc)
		btst	#7,$2A(a0)
		bne.s	loc_505E4
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		beq.s	loc_505E4
		bsr.w	sub_50690

loc_505E4:
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------
off_505E8:	dc.w loc_505F0-off_505E8
		dc.w Move_WaitNoFall-off_505E8
		dc.w loc_50628-off_505E8
		dc.w loc_50650-off_505E8
; ---------------------------------------------------------------------------

loc_505F0:
		lea	word_50BB6(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#byte_50C80,$30(a0)
		move.b	#$10,$1E(a0)
		move.w	#$F,$2E(a0)
		move.l	#loc_50618,$34(a0)
		bra.w	loc_509DA
; ---------------------------------------------------------------------------

loc_50618:
		move.b	#4,5(a0)
		move.l	#loc_50638,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_50628:
		addi.w	#$20,$1A(a0)
		jsr	(MoveSprite2).l
		jmp	ObjHitFloor_DoRoutine(pc)
; ---------------------------------------------------------------------------

loc_50638:
		move.b	#6,5(a0)
		move.l	#sub_50690,$34(a0)
		move.w	$26(a0),d0
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_50650:
		move.w	#$10,d3
		jsr	ObjHitWall_DoRoutine(pc)
		jsr	ObjHitFloor2_DoRoutine(pc)
		tst.b	d3
		beq.s	loc_50666
		addi.w	#$10,$18(a0)

loc_50666:
		jsr	(MoveSprite2).l
		move.w	$18(a0),d0
		addi.w	#$200,d0
		cmpi.w	#$400,d0
		bcs.w	locret_504DA
		move.w	(V_int_run_count+2).w,d0
		andi.w	#3,d0
		bne.w	locret_504DA
		lea	ChildObjDat_50C24(pc),a2
		jmp	CreateChild1_Normal(pc)

; =============== S U B R O U T I N E =======================================


sub_50690:
		move.l	#Delete_Current_Sprite,(a0)
		bset	#7,$2A(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_50C2C(pc),a2
		jmp	CreateChild1_Normal(pc)
; End of function sub_50690

; ---------------------------------------------------------------------------

loc_506AC:
		lea	word_50BBC(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_506E6,(a0)
		move.l	#byte_50C84,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		bne.s	loc_506DA
		move.w	#-$200,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_506DA:
		subi.w	#$10,d0
		add.w	d0,d0
		neg.w	d0
		move.w	d0,$2E(a0)

loc_506E6:
		addq.w	#1,$2E(a0)
		bmi.w	locret_504DA
		jsr	(MoveSprite2).l
		jsr	Animate_Raw(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_506FE:
		lea	word_50BC4(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#Obj_FlickerMove,(a0)
		bra.w	loc_50A14
; ---------------------------------------------------------------------------

loc_50710:
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_50726(pc,d0.w),d1
		jsr	off_50726(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_50726:	dc.w loc_5072C-off_50726
		dc.w loc_50744-off_50726
		dc.w loc_5076A-off_50726
; ---------------------------------------------------------------------------

loc_5072C:
		lea	word_50BA8(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		addq.w	#2,d0
		move.b	d0,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_50744:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		beq.s	loc_50758
		move.b	#4,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_50758:
		move.w	$2E(a0),d0
		addq.w	#1,$2E(a0)
		andi.w	#3,d0
		sub.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_5076A:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_50778
		rts
; ---------------------------------------------------------------------------

loc_50778:
		lea	ChildObjDat_50C02(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_50780:
		lea	word_50BAE(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_507A6(pc,d0.w),$18(a0)
		move.w	#-$200,$1A(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
word_507A6:	dc.w $FF00
		dc.w $200
		dc.w $FE00
; ---------------------------------------------------------------------------

loc_507AC:
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_507CA(pc,d0.w),d1
		jsr	off_507CA(pc,d1.w)
		lea	locret_504DA(pc),a2
		bsr.w	sub_50A66
		bra.w	loc_50B26
; ---------------------------------------------------------------------------
off_507CA:	dc.w loc_507D4-off_507CA
		dc.w loc_507F6-off_507CA
		dc.w loc_50808-off_507CA
		dc.w loc_5082C-off_507CA
		dc.w loc_50838-off_507CA
; ---------------------------------------------------------------------------

loc_507D4:
		lea	ObjDat3_50BCC(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		subi.w	#$14,$10(a0)
		addi.w	#$40,$14(a0)
		tst.b	$2C(a0)
		beq.s	locret_507F4
		move.l	#loc_5084E,(a0)

locret_507F4:
		rts
; ---------------------------------------------------------------------------

loc_507F6:
		btst	#1,$38(a1)
		bne.s	loc_50800
		rts
; ---------------------------------------------------------------------------

loc_50800:
		move.b	#4,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_50808:
		subq.b	#1,$3C(a0)
		cmpi.b	#-$40,$3C(a0)
		bls.s	loc_50816
		rts
; ---------------------------------------------------------------------------

loc_50816:
		move.b	#6,5(a0)
		move.w	#$80,$2E(a0)
		move.l	#loc_50830,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5082C:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50830:
		move.b	#8,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_50838:
		addq.b	#1,$3C(a0)
		beq.s	loc_50840
		rts
; ---------------------------------------------------------------------------

loc_50840:
		move.b	#2,5(a0)
		bclr	#1,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_5084E:
		lea	loc_5085A(pc),a2
		bsr.w	sub_50A66
		bra.w	loc_50B26
; ---------------------------------------------------------------------------

loc_5085A:
		movea.w	$46(a0),a1
		move.b	$3C(a1),$3C(a0)
		moveq	#4,d2
		jmp	MoveSprite_CircularSimple(pc)
; ---------------------------------------------------------------------------

loc_5086A:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5087E(pc,d0.w),d1
		jsr	off_5087E(pc,d1.w)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
off_5087E:	dc.w loc_50884-off_5087E
		dc.w Move_AnimateRaw_Wait-off_5087E
		dc.w loc_508CC-off_5087E
; ---------------------------------------------------------------------------

loc_50884:
		lea	off_50B84(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.w	#-$180,$18(a0)
		move.l	#byte_50C76,$30(a0)
		move.w	#$15,$2E(a0)
		move.l	#loc_508AA,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_508AA:
		move.b	#4,5(a0)
		move.b	#3,$22(a0)
		move.w	#-$200,$1A(a0)
		move.w	#$29,$2E(a0)
		move.l	#loc_508D4,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_508CC:
		jsr	MoveSprite_LightGravity(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_508D4:
		move.l	#Delete_Current_Sprite,(a0)
		move.b	#0,$22(a0)
		movea.w	$46(a0),a1
		bset	#7,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_508EC:
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_50904(pc,d0.w),d1
		jsr	off_50904(pc,d1.w)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
off_50904:	dc.w loc_5090C-off_50904
		dc.w loc_50914-off_50904
		dc.w loc_50938-off_50904
		dc.w loc_50966-off_50904
; ---------------------------------------------------------------------------

loc_5090C:
		lea	ObjDat3_50B90(pc),a1
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

loc_50914:
		movea.w	$46(a0),a1
		btst	#7,$38(a1)
		bne.s	loc_50922
		rts
; ---------------------------------------------------------------------------

loc_50922:
		move.b	#4,5(a0)
		move.b	#0,$22(a0)
		move.l	#byte_50C7C,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_50938:
		movea.w	$46(a0),a1
		btst	#6,$2A(a1)
		bne.s	loc_50950
		btst	#7,$2A(a1)
		bne.s	loc_50958
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

loc_50950:
		move.b	#2,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_50958:
		move.b	#6,5(a0)
		move.b	#3,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_50966:
		movea.w	$46(a0),a1
		btst	#5,$38(a1)
		bne.s	loc_50974
		rts
; ---------------------------------------------------------------------------

loc_50974:
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_5097A:
		lea	ObjDat3_50B9C(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_5098A,(a0)
		rts
; ---------------------------------------------------------------------------

loc_5098A:
		moveq	#$13,d1
		moveq	#$14,d2
		moveq	#0,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_509AC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_509AC:
		jsr	Displace_PlayerOffObject(pc)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_509B6:
		lea	ChildObjDat_50C1C(pc),a2
		jsr	CreateChild1_Normal(pc)
		move.b	$39(a0),d0
		addq.b	#1,$39(a0)
		andi.w	#7,d0
		move.b	byte_509D2(pc,d0.w),$2C(a1)
		rts
; ---------------------------------------------------------------------------
byte_509D2:	dc.b 0
		dc.b 2
		dc.b 1
		dc.b 2
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b 1
; ---------------------------------------------------------------------------

loc_509DA:
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#3,d0
		lea	word_509FC(pc,d0.w),a1
		move.w	(a1)+,d0
		add.w	d0,$10(a0)
		move.w	(a1)+,d0
		add.w	d0,$14(a0)
		move.w	(a1)+,$18(a0)
		move.w	(a1)+,$1A(a0)
		rts
; ---------------------------------------------------------------------------
word_509FC:	dc.w  $FFF0,   $60
		dc.w  $FA00, $FE00
		dc.w  $FFF0,   $60
		dc.w  $FC00, $FF00
		dc.w  $FFF0,   $90
		dc.w  $FC00,     0
; ---------------------------------------------------------------------------

loc_50A14:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,d1
		move.w	d0,d2
		cmpi.b	#8,d0
		bcs.s	loc_50A30
		move.b	#$B,$22(a0)
		subi.w	#8,d2
		move.w	d2,d1

loc_50A30:
		add.w	d0,d0
		lea	word_50A46(pc,d0.w),a1
		move.w	(a1)+,$18(a0)
		move.w	(a1)+,$1A(a0)
		lsr.w	#1,d1
		or.b	d1,4(a0)
		rts
; ---------------------------------------------------------------------------
word_50A46:	dc.w  $FD00, $FD00
		dc.w   $300, $FD00
		dc.w  $FD00, $FE00
		dc.w   $300, $FE00
		dc.w  $FC00, $FC00
		dc.w   $400, $FC00
		dc.w  $FC00, $FD00
		dc.w   $400, $FD00

; =============== S U B R O U T I N E =======================================


sub_50A66:
		move.w	$10(a0),-(sp)
		jsr	(a2)
		moveq	#$12,d1
		moveq	#7,d2
		moveq	#7,d3
		move.w	(sp)+,d4
		jmp	(SolidObjectTop).l
; End of function sub_50A66


; =============== S U B R O U T I N E =======================================


sub_50A7A:
		tst.l	(a0)
		beq.s	locret_50AD0
		tst.b	$28(a0)
		bne.s	locret_50AD0
		tst.b	$29(a0)
		beq.s	loc_50AD2
		tst.b	$20(a0)
		bne.s	loc_50A9E
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l

loc_50A9E:
		bset	#6,$2A(a0)
		lea	(Normal_palette_line_2+$16).w,a1
		move.w	#$222,d0
		btst	#0,$20(a0)
		bne.s	loc_50AB8
		move.w	#$EEE,d0

loc_50AB8:
		move.w	d0,(a1)
		subq.b	#1,$20(a0)
		bne.s	locret_50AD0
		bclr	#6,$2A(a0)
		move.w	#$222,(a1)
		move.b	$25(a0),$28(a0)

locret_50AD0:
		rts
; ---------------------------------------------------------------------------

loc_50AD2:
		move.l	#loc_5057E,(a0)
		moveq	#$64,d0
		jsr	(HUD_AddToScore).l
		bclr	#7,4(a0)
		move.w	#$7F,$2E(a0)
		bset	#4,$38(a0)
		move.w	#-$5BDB,$A(a0)
		move.w	#-$200,$1A(a0)
		move.l	#loc_50594,$34(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	CreateChild1_Normal(pc)
		bne.s	loc_50B18
		move.b	#4,$2C(a1)

loc_50B18:
		move.w	#$3AB8,(Target_camera_max_X_pos).w
		lea	Child6_IncLevX(pc),a2
		jmp	CreateChild6_Simple(pc)
; End of function sub_50A7A

; ---------------------------------------------------------------------------

loc_50B26:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_50B38
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_50B38:
		move.l	#MoveChkDel,(a0)
		bset	#7,$2A(a0)
		move.w	#-$5BDB,$A(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_50B70(pc,d0.w),$18(a0)
		move.w	#-$200,$1A(a0)
		jsr	Displace_PlayerOffObject(pc)
		lea	(Player_2).w,a1
		bclr	#4,$2A(a1)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
word_50B70:	dc.w $300
		dc.w $200
		dc.w $FE00
		dc.w $FD00
ObjDat3_50B78:	dc.l Map_LBZEndBoss
		dc.w $2425
		dc.w $280
		dc.b $20
		dc.b $10
		dc.b 0
		dc.b $18
off_50B84:	dc.l Map_FBZRobotnikRun
		dc.w $4A9
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
ObjDat3_50B90:	dc.l Map_RobotnikShip
		dc.w $852E
		dc.w $300
		dc.b $10
		dc.b 8
		dc.b 4
		dc.b 0
ObjDat3_50B9C:	dc.l Map_LBZEndBoss
		dc.w $2425
		dc.w $300
		dc.b 8
		dc.b $20
		dc.b $C
		dc.b 0
word_50BA8:	dc.w $280
		dc.b 8
		dc.b $18
		dc.b 2
		dc.b 0
word_50BAE:	dc.w $A425
		dc.w $200
		dc.b 8
		dc.b 8
		dc.b $D
		dc.b 0
word_50BB6:	dc.w $280
		dc.b $10
		dc.b $10
		dc.b 5
		dc.b $9A
word_50BBC:	dc.w $425
		dc.w $200
		dc.b 8
		dc.b 8
		dc.b 7
		dc.b 0
word_50BC4:	dc.w $A425
		dc.w $200
		dc.b 8
		dc.b 8
		dc.b $A
		dc.b 0
ObjDat3_50BCC:	dc.l Map_LBZEndBoss
		dc.w $4425
		dc.w $280
		dc.b 8
		dc.b 8
		dc.b $E
		dc.b 0
ChildObjDat_50BD8:dc.w 1
		dc.l loc_508EC
		dc.w $F8
		dc.l loc_5097A
		dc.w $E8F0
ChildObjDat_50BE6:dc.w 0
		dc.l loc_5086A
		dc.w $60E8
ChildObjDat_50BEE:dc.w 2
		dc.l loc_50710
		dc.w $E838
		dc.l loc_50710
		dc.w $1838
		dc.l loc_50710
		dc.w $38
ChildObjDat_50C02:dc.w 2
		dc.l loc_50780
		dc.w $E8
		dc.l loc_50780
		dc.w $F8
		dc.l loc_50780
		dc.w 8
ChildObjDat_50C16:dc.w 3
		dc.l loc_507AC
ChildObjDat_50C1C:dc.w 0
		dc.l loc_505BA
		dc.w 0
ChildObjDat_50C24:dc.w 0
		dc.l loc_506AC
		dc.w $10
ChildObjDat_50C2C:dc.w $B
		dc.l loc_506FE
		dc.w $F8F8
		dc.l loc_506FE
		dc.w $8F8
		dc.l loc_506FE
		dc.w $F808
		dc.l loc_506FE
		dc.w $808
		dc.l loc_506FE
		dc.w $F0F0
		dc.l loc_506FE
		dc.w $10F0
		dc.l loc_506FE
		dc.w $F010
		dc.l loc_506FE
		dc.w $1010
		dc.l loc_506AC
		dc.w $F806
		dc.l loc_506AC
		dc.w $608
		dc.l loc_506AC
		dc.w $F8FA
		dc.l loc_506AC
		dc.w $6F8
byte_50C76:	dc.b 7
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b 1
		dc.b $FC
byte_50C7C:	dc.b 7
		dc.b 0
		dc.b 1
		dc.b $FC
byte_50C80:	dc.b 0
		dc.b 5
		dc.b 6
		dc.b $FC
byte_50C84:	dc.b 5
		dc.b 7
		dc.b 7
		dc.b 8
		dc.b 9
		dc.b $F4
Pal_LBZEndBoss:	binclude "Levels/LBZ/Palettes/End Boss.bin"
		even
; ---------------------------------------------------------------------------

Obj_LBZ_FinalBoss2:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_50CC2(pc,d0.w),d1
		jsr	off_50CC2(pc,d1.w)
		jsr	(sub_51CDE).l
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_50CC2:	dc.w loc_50CEE-off_50CC2
		dc.w loc_50D28-off_50CC2
		dc.w loc_50D74-off_50CC2
		dc.w loc_50D8C-off_50CC2
		dc.w loc_50D74-off_50CC2
		dc.w loc_50E2C-off_50CC2
		dc.w loc_50E6E-off_50CC2
		dc.w loc_50E9C-off_50CC2
		dc.w loc_50EAE-off_50CC2
		dc.w loc_50ED0-off_50CC2
		dc.w loc_50EFA-off_50CC2
		dc.w loc_50F3A-off_50CC2
		dc.w loc_50F50-off_50CC2
		dc.w loc_50F7A-off_50CC2
		dc.w loc_50F92-off_50CC2
		dc.w loc_50FAC-off_50CC2
		dc.w loc_50FC4-off_50CC2
		dc.w loc_50FF0-off_50CC2
		dc.w loc_5102E-off_50CC2
		dc.w loc_51064-off_50CC2
		dc.w loc_51086-off_50CC2
		dc.w loc_510CE-off_50CC2
; ---------------------------------------------------------------------------

loc_50CEE:
		lea	ObjDat3_51F18(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#8,$29(a0)
		bset	#3,$38(a0)
		st	(Disable_death_plane).w
		lea	Pal_LBZFinalBoss2(pc),a1
		jsr	PalLoad_Line1(pc)
		lea	(ArtKosM_LBZFinalBoss2).l,a1
		move.w	#$7B20,d2
		jsr	(Queue_Kos_Module).l
		lea	(Child1_MakeRoboHead4).l,a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_50D28:
		subq.w	#1,$14(a0)
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$40,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_50D3C
		rts
; ---------------------------------------------------------------------------

loc_50D3C:
		move.b	#4,5(a0)
		move.w	#$9F,$2E(a0)
		move.l	#loc_50D78,$34(a0)
		jsr	(Create_New_Sprite).l
		bne.s	loc_50D64
		move.l	#Obj_Song_Fade_Transition,(a1)
		move.b	#mus_FinalBoss,$2C(a1)

loc_50D64:
		jsr	(Create_New_Sprite).l
		bne.s	locret_50D72
		move.l	#loc_517FE,(a1)

locret_50D72:
		rts
; ---------------------------------------------------------------------------

loc_50D74:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50D78:
		move.b	#6,5(a0)
		move.b	#8,$22(a0)
		lea	ChildObjDat_51FB4(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_50D8C:
		jsr	MoveSprite_LightGravity(pc)
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$120,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_50DA0
		rts
; ---------------------------------------------------------------------------

loc_50DA0:
		bset	#7,$A(a0)
		clr.w	$1A(a0)
		move.b	#$F,$28(a0)
		bchg	#0,4(a0)
		lea	ChildObjDat_51FCE(pc),a2
		jsr	CreateChild1_Normal(pc)

loc_50DBE:
		move.b	#8,5(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_50DD4,$34(a0)

locret_50DD2:
		rts
; ---------------------------------------------------------------------------

loc_50DD4:
		bchg	#0,4(a0)
		move.b	$39(a0),d0
		addq.b	#1,$39(a0)
		btst	#1,d0
		bne.s	loc_50E0C
		move.b	#$A,5(a0)
		bclr	#3,$38(a0)
		bclr	#2,$38(a0)
		move.w	#$AF,$2E(a0)
		move.l	#loc_50DBE,$34(a0)
		bra.w	loc_51C30
; ---------------------------------------------------------------------------

loc_50E0C:
		move.b	#$C,5(a0)
		clr.b	$39(a0)
		clr.w	$1A(a0)
		move.l	#loc_50E82,$34(a0)
		move.w	(Camera_Y_pos).w,$14(a0)
		bra.w	loc_51C8E
; ---------------------------------------------------------------------------

loc_50E2C:
		move.w	$3A(a0),d0
		move.w	off_50E42(pc,d0.w),d0
		jsr	off_50E42(pc,d0.w)
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------
off_50E42:	dc.w locret_50E50-off_50E42
		dc.w loc_50E4C-off_50E42
		dc.w loc_50E52-off_50E42
		dc.w locret_50E50-off_50E42
		dc.w loc_50E68-off_50E42
; ---------------------------------------------------------------------------

loc_50E4C:
		subq.w	#4,$1A(a0)

locret_50E50:
		rts
; ---------------------------------------------------------------------------

loc_50E52:
		move.w	$1A(a0),d0
		add.w	$3C(a0),d0
		move.w	d0,$1A(a0)
		bne.s	locret_50E66
		move.w	#2,$3C(a0)

locret_50E66:
		rts
; ---------------------------------------------------------------------------

loc_50E68:
		subq.w	#4,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_50E6E:
		moveq	#$50,d1
		move.w	#$F0,d2
		bsr.w	sub_51CB4
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50E82:
		move.b	#$E,5(a0)
		clr.w	$18(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_50EA0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_50E9C:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50EA0:
		move.b	#$10,5(a0)
		bset	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_50EAE:
		jsr	MoveSprite_LightGravity(pc)
		move.w	(Camera_Y_pos_copy).w,d0
		addi.w	#$C0,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_50EC2
		rts
; ---------------------------------------------------------------------------

loc_50EC2:
		move.b	#$12,5(a0)
		bset	#2,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_50ED0:
		addi.w	#-$80,$1A(a0)
		jsr	(MoveSprite2).l
		tst.w	$1A(a0)
		bpl.s	locret_50EF0
		move.w	(Camera_Y_pos_copy).w,d0
		addi.w	#$E0,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_50EF2

locret_50EF0:
		rts
; ---------------------------------------------------------------------------

loc_50EF2:
		move.b	#$14,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_50EFA:
		addi.w	#$40,$1A(a0)
		jsr	(MoveSprite2).l
		tst.w	$1A(a0)
		bmi.s	locret_50F1A
		move.w	(Camera_Y_pos_copy).w,d0
		addi.w	#$D0,d0
		cmp.w	$14(a0),d0
		bls.s	loc_50F1C

locret_50F1A:
		rts
; ---------------------------------------------------------------------------

loc_50F1C:
		move.b	#$16,5(a0)
		move.w	d0,$14(a0)
		clr.w	$1A(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_50F3E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_50F3A:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50F3E:
		move.b	#$18,5(a0)
		move.l	#loc_50F64,$34(a0)
		bra.w	loc_51C8E
; ---------------------------------------------------------------------------

loc_50F50:
		moveq	#$30,d1
		move.w	#$110,d2
		bsr.w	sub_51CB4
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50F64:
		move.b	#$1A,5(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_50F7E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_50F7A:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50F7E:
		move.b	#$1C,5(a0)
		move.w	#-$400,$1A(a0)
		bclr	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_50F92:
		jsr	(MoveSprite2).l
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$60,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_50FA8
		rts
; ---------------------------------------------------------------------------

loc_50FA8:
		bra.w	loc_50DBE
; ---------------------------------------------------------------------------

loc_50FAC:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50FB0:
		move.b	#$20,5(a0)
		move.w	#-$400,$1A(a0)
		bchg	#1,$39(a0)
		rts
; ---------------------------------------------------------------------------

loc_50FC4:
		jsr	(MoveSprite2).l
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$60,d0
		cmp.w	$14(a0),d0
		bcc.s	loc_50FDA
		rts
; ---------------------------------------------------------------------------

loc_50FDA:
		move.b	#$22,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_50FF4,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_50FF0:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_50FF4:
		move.b	#$24,5(a0)
		movea.w	$44(a0),a1
		clr.b	$3C(a1)
		move.w	(Camera_X_pos).w,d0
		move.w	d0,d1
		addi.w	#$A0,d0
		bclr	#0,4(a0)
		move.w	#$E0,d2
		cmp.w	$10(a0),d0
		bcs.s	loc_51026
		bset	#0,4(a0)
		move.w	#$60,d2

loc_51026:
		add.w	d2,d1
		move.w	d1,$10(a0)
		rts
; ---------------------------------------------------------------------------

loc_5102E:
		move.w	(Camera_Y_pos_copy).w,d0
		addi.w	#$88,d0
		cmp.w	$14(a0),d0
		bls.s	loc_51042
		addq.w	#8,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_51042:
		move.b	#$26,5(a0)
		bset	#1,$38(a0)
		move.w	#$14,(Screen_shake_flag).w
		move.w	#3,$2E(a0)
		moveq	#signextendB(sfx_BossHitFloor),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_51064:
		addq.w	#4,$14(a0)
		subq.w	#1,$2E(a0)
		bmi.s	loc_51070
		rts
; ---------------------------------------------------------------------------

loc_51070:
		move.b	#$28,5(a0)
		move.w	#7,$2E(a0)
		move.l	#loc_5108A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_51086:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5108A:
		move.b	#$2A,5(a0)
		clr.b	$30(a0)
		subi.w	#$10,$14(a0)
		bclr	#1,$38(a0)
		move.w	#$400,d0
		btst	#0,4(a0)
		beq.s	loc_510AE
		neg.w	d0

loc_510AE:
		move.w	d0,$18(a0)
		move.w	#-$600,$1A(a0)
		move.w	#$3F,$2E(a0)
		movea.l	a0,a2
		lea	(Player_1).w,a0
		jsr	(HurtCharacter).l
		movea.l	a2,a0
		rts
; ---------------------------------------------------------------------------

loc_510CE:
		jsr	(MoveSprite).l
		subq.w	#1,$2E(a0)
		bmi.w	loc_50DBE
		rts
; ---------------------------------------------------------------------------

loc_510DE:
		move.l	#loc_510F8,(a0)
		move.b	#5,$22(a0)
		bset	#4,$38(a0)
		lea	ChildObjDat_51FF0(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_510F8:
		move.w	$14(a0),d0
		addq.w	#1,d0
		move.w	d0,$14(a0)
		move.w	(Camera_Y_pos).w,d1
		addi.w	#$140,d1
		cmp.w	d1,d0
		bcs.s	loc_51142
		move.l	#loc_51148,(a0)
		bclr	#7,4(a0)
		bset	#5,$38(a0)
		move.w	a0,(_unkFAA4).w
		clr.w	(Ctrl_1_logical).w
		st	(Ctrl_1_locked).w
		move.b	#-$80,(Player_1+object_control).w
		lea	(ArtKosM_LBZ2DeathEggSmall).l,a1
		move.w	#-$6A40,d2
		jsr	(Queue_Kos_Module).l

loc_51142:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_51148:
		lea	(Player_1).w,a1
		btst	#1,$2A(a1)
		bne.s	locret_51178
		move.w	(Camera_X_pos).w,d0
		addi.w	#$A0,d0
		sub.w	$10(a1),d0
		scs	d2
		bpl.s	loc_51166
		neg.w	d0

loc_51166:
		cmpi.w	#4,d0
		bcs.s	loc_5117A
		moveq	#3,d1
		tst.b	d2
		beq.s	loc_51174
		moveq	#2,d1

loc_51174:
		bset	d1,(Ctrl_1_held_logical).w

locret_51178:
		rts
; ---------------------------------------------------------------------------

loc_5117A:
		move.l	#locret_511CC,(a0)
		clr.b	(_unkFA88).w
		clr.w	$1C(a1)
		clr.w	$18(a1)
		clr.w	$1A(a1)
		bclr	#0,4(a1)
		bclr	#0,$2A(a1)
		move.w	#$101,(Ctrl_1_logical).w
		st	(Ctrl_1_locked).w
		jsr	(Create_New_Sprite).l
		bne.s	loc_511C4
		move.l	#loc_5182E,(a1)
		lea	(Player_1).w,a2
		move.w	$10(a2),$10(a1)
		move.w	$14(a2),$14(a1)

loc_511C4:
		lea	ChildObjDat_52010(pc),a2
		jmp	CreateChild6_Simple(pc)
; ---------------------------------------------------------------------------

locret_511CC:
		rts
; ---------------------------------------------------------------------------

loc_511CE:
		lea	ObjDat3_51F24(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_511DC,(a0)

loc_511DC:
		jsr	Child_GetPriorityOnce(pc)
		jsr	Refresh_ChildPositionAdjusted(pc)
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_511E8:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_511FC(pc,d0.w),d1
		jsr	off_511FC(pc,d1.w)
		moveq	#$C,d0
		jmp	Child_DrawTouch_Sprite_FlickerMove(pc)
; ---------------------------------------------------------------------------
off_511FC:	dc.w loc_51202-off_511FC
		dc.w loc_51226-off_511FC
		dc.w loc_5124E-off_511FC
; ---------------------------------------------------------------------------

loc_51202:
		lea	ObjDat3_51F30(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		movea.w	$46(a0),a1
		move.w	a0,$44(a1)
		move.b	#$14,$42(a0)
		move.b	#-6,$43(a0)
		lea	ChildObjDat_51FD6(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_51226:
		movea.w	$46(a0),a1
		btst	#7,$A(a1)
		beq.s	loc_51244
		bset	#7,$A(a0)
		move.b	#4,5(a0)
		move.b	#-$53,$28(a0)

loc_51244:
		lea	(LBZFinalBoss2_CircleLookup).l,a2
		jmp	MoveSprite_CircularLookup(pc)
; ---------------------------------------------------------------------------

loc_5124E:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.w	locret_50DD2
		btst	#2,$38(a1)
		bne.s	loc_51298
		lea	(Player_1).w,a1
		move.b	$3C(a0),d0
		move.w	$14(a0),d1
		sub.w	$14(a1),d1
		cmpi.w	#-2,d1
		blt.s	loc_5128C
		cmpi.w	#2,d1
		ble.s	loc_51298
		subq.b	#1,d0
		cmpi.b	#-$30,d0
		blt.s	loc_51298
		bra.w	loc_51294
; ---------------------------------------------------------------------------

loc_5128C:
		addq.b	#1,d0
		cmpi.b	#0,d0
		bgt.s	loc_51298

loc_51294:
		move.b	d0,$3C(a0)

loc_51298:
		jsr	Change_FlipXUseParent(pc)
		lea	(LBZFinalBoss2_CircleLookup).l,a2
		jmp	MoveSprite_CircularLookup(pc)
; ---------------------------------------------------------------------------

loc_512A6:
		lea	word_51F42(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_512D4,(a0)
		movea.w	$46(a0),a1
		movea.w	$46(a1),a2
		move.w	a2,$46(a0)
		move.w	a1,$44(a0)
		move.w	a1,$44(a0)
		move.b	#$18,$42(a0)
		move.b	#-6,$43(a0)

loc_512D4:
		jsr	Child_GetPriorityOnce(pc)
		jsr	Change_FlipXUseParent(pc)
		movea.w	$44(a0),a1
		move.b	$3C(a1),d0
		addi.b	#$14,d0
		move.b	d0,$3C(a0)
		lea	(LBZ2FinalBoss2_CircleLookup2).l,a2
		jsr	MoveSprite_CircularLookup(pc)
		moveq	#$C,d0
		jmp	Child_DrawTouch_Sprite_FlickerMove(pc)
; ---------------------------------------------------------------------------

loc_512FC:
		lea	word_51F3C(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		movea.w	$46(a0),a1
		move.w	$46(a1),$44(a0)
		move.l	#loc_51336,(a0)
		move.l	#byte_5205A,$30(a0)
		tst.b	$2C(a0)
		beq.s	loc_51336
		move.b	#8,$22(a0)
		move.w	#$180,8(a0)
		move.l	#byte_52062,$30(a0)

loc_51336:
		jsr	Child_GetPriorityOnce(pc)

loc_5133A:
		jsr	Refresh_ChildPositionAdjusted(pc)
		jsr	Animate_Raw(pc)
		movea.w	$44(a0),a1
		tst.b	$30(a1)
		beq.s	loc_51368
		move.l	#loc_5136E,(a0)
		move.b	#7,$22(a0)
		tst.b	$2C(a0)
		beq.s	loc_51368
		move.b	#$B,$22(a0)
		addq.b	#8,$42(a0)

loc_51368:
		moveq	#$C,d0
		jmp	Child_DrawTouch_Sprite_FlickerMove(pc)
; ---------------------------------------------------------------------------

loc_5136E:
		jsr	Refresh_ChildPositionAdjusted(pc)
		movea.w	$44(a0),a1
		tst.b	$30(a1)
		bne.s	loc_5138C
		move.l	#loc_5133A,(a0)
		tst.b	$2C(a0)
		beq.s	loc_5138C
		subq.b	#8,$42(a0)

loc_5138C:
		moveq	#$C,d0
		jmp	Child_DrawTouch_Sprite_FlickerMove(pc)
; ---------------------------------------------------------------------------

loc_51392:
		lea	ObjDat3_51F48(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_513A0,(a0)

loc_513A0:
		jsr	Child_GetPriorityOnce(pc)
		jsr	Refresh_ChildPositionAdjusted(pc)
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_513AC:
		lea	ObjDat3_51F54(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_513BA,(a0)

loc_513BA:
		move.b	#-$66,d0
		bsr.w	sub_51BC8
		jsr	Refresh_ChildPositionAdjusted(pc)
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_513E2
		btst	#0,(V_int_run_count+3).w
		bne.w	locret_50DD2
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_513E2:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_513E8:
		move.l	#loc_513F4,(a0)
		move.b	#-$67,$28(a0)

loc_513F4:
		jsr	Refresh_ChildPositionAdjusted(pc)
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_513E2
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------

loc_5140A:
		move.l	#loc_5141A,(a0)
		movea.w	$46(a0),a1
		move.w	$46(a1),$44(a0)

loc_5141A:
		jsr	Refresh_ChildPositionAdjusted(pc)
		movea.w	$44(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_5145E
		btst	#3,$38(a1)
		bne.w	locret_50DD2
		btst	#6,$2A(a1)
		bne.w	locret_50DD2
		lea	word_51468(pc),a1
		jsr	(Check_PlayerInRange).l
		tst.w	d0
		beq.s	locret_5145C
		movea.w	d0,a1
		tst.b	$34(a1)
		bne.s	locret_5145C
		cmpi.b	#6,5(a1)
		bcs.s	loc_51470

locret_5145C:
		rts
; ---------------------------------------------------------------------------

loc_5145E:
		clr.b	(Player_1+object_control).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
word_51468:	dc.w  $FFE8,   $30, $FFE8,   $30
; ---------------------------------------------------------------------------

loc_51470:
		move.l	#loc_514B0,(a0)
		movea.w	$44(a0),a1
		st	$30(a1)
		move.b	#$1E,5(a1)
		move.w	#$40,$2E(a1)
		move.l	#loc_50FB0,$34(a1)
		lea	(Player_1).w,a1
		move.b	#-$7F,$2E(a1)
		move.b	#2,$20(a1)
		moveq	#0,d0
		move.w	d0,$18(a1)
		move.w	d0,$1A(a1)
		move.w	d0,$1C(a1)

loc_514B0:
		movea.w	$44(a0),a1
		tst.b	$30(a1)
		beq.s	loc_514DA
		btst	#7,$2A(a1)
		bne.w	loc_513E2
		jsr	Refresh_ChildPositionAdjusted(pc)
		lea	(Player_1).w,a1
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		rts
; ---------------------------------------------------------------------------

loc_514DA:
		move.l	#loc_514E6,(a0)
		move.w	#$40,$2E(a0)

loc_514E6:
		subq.w	#1,$2E(a0)
		bmi.s	loc_514EE
		rts
; ---------------------------------------------------------------------------

loc_514EE:
		move.l	#loc_5141A,(a0)
		rts
; ---------------------------------------------------------------------------

loc_514F6:
		lea	ObjDat3_51F60(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		jsr	Refresh_ChildPositionAdjusted(pc)
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		addi.b	#$D,d0
		move.b	d0,$22(a0)
		moveq	#0,d0
		jsr	Set_IndexedVelocity(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_51524:
		move.l	#loc_5155A,(a0)
		move.w	#$4430,$10(a0)
		move.w	#$728,$14(a0)
		move.w	#$1010,$3A(a0)
		move.w	#$200,d0
		tst.b	$2C(a0)
		beq.s	loc_51548
		neg.w	d0

loc_51548:
		move.w	d0,$18(a0)
		move.w	#$41,$2E(a0)
		move.l	#loc_51576,$34(a0)

loc_5155A:
		subq.b	#1,$39(a0)
		bpl.s	loc_5156C
		move.b	#3,$39(a0)
		jsr	(sub_52850).l

loc_5156C:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_51576:
		clr.w	$18(a0)
		move.w	#-$200,$1A(a0)
		move.w	#$57,$2E(a0)
		move.l	#loc_51590,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_51590:
		lea	Child6_CreateBossExplosion(pc),a2
		jsr	CreateChild1_Normal(pc)
		bne.s	loc_515AC
		move.w	#$4430,$10(a1)
		move.w	#$678,$14(a1)
		move.b	#$C,$2C(a1)

loc_515AC:
		tst.b	$2C(a0)
		bne.s	loc_515DE
		jsr	(Create_New_Sprite).l
		bne.s	loc_515DE
		move.l	#loc_515E2,(a1)
		move.w	(Camera_X_pos).w,d0
		addi.w	#$D0,d0
		move.w	d0,$10(a1)
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$20,d0
		move.w	d0,$14(a1)
		move.w	#5,$3A(a1)

loc_515DE:
		jmp	Go_Delete_Sprite(pc)
; ---------------------------------------------------------------------------

loc_515E2:
		subq.w	#1,$2E(a0)
		bpl.s	locret_51618
		addq.b	#1,$39(a0)
		cmpi.b	#8,$39(a0)
		bne.s	loc_515F8
		st	(Events_fg_5).w

loc_515F8:
		cmpi.b	#$18,$39(a0)
		bcc.s	loc_5161A
		move.w	$3A(a0),$2E(a0)
		addq.w	#1,$3A(a0)
		jsr	(Create_New_Sprite).l
		bne.s	locret_51618
		move.l	#loc_5165C,(a1)

locret_51618:
		rts
; ---------------------------------------------------------------------------

loc_5161A:
		move.l	#loc_51626,(a0)
		move.w	#$17F,$2E(a0)

loc_51626:
		subq.w	#1,$2E(a0)
		bmi.s	loc_5162E
		rts
; ---------------------------------------------------------------------------

loc_5162E:
		bset	#0,(_unkFA88).w
		clr.b	$39(a0)
		clr.w	$2E(a0)
		jsr	(Create_New_Sprite).l
		bne.s	loc_51650
		move.l	#loc_517FE,(a1)
		move.b	#4,$2C(a1)

loc_51650:
		lea	ChildObjDat_52016(pc),a2
		jsr	CreateChild1_Normal(pc)
		jmp	Go_Delete_Sprite(pc)
; ---------------------------------------------------------------------------

loc_5165C:
		lea	ObjDat3_51F6C(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#MoveChkDel,(a0)
		jsr	(Random_Number).l
		andi.w	#7,d0
		move.b	RawAni_5169C(pc,d0.w),$22(a0)
		swap	d0
		andi.w	#$FF,d0
		move.w	(Camera_X_pos).w,d1
		addi.w	#$20,d1
		add.w	d0,d1
		move.w	d1,$10(a0)
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$20,d0
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------
RawAni_5169C:	dc.b    7,   8,   9,  $A,  $B,   7,   8,   9
; ---------------------------------------------------------------------------

loc_516A4:
		lea	ObjDat3_51F78(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_516FA,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		beq.s	loc_516C0
		move.l	#loc_5173E,(a0)

loc_516C0:
		move.w	word_516EA(pc,d0.w),$1A(a0)
		lea	byte_516DC(pc,d0.w),a1
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,d0
		or.b	d0,4(a0)
		lea	Pal_LBZEnding(pc),a1
		jmp	PalLoad_Line1(pc)
; ---------------------------------------------------------------------------
byte_516DC:	dc.b    0,   0
		dc.b    1,   0
		dc.b    1,   0
		dc.b    2,   0
		dc.b    2,   1
		dc.b    2,   2
		dc.b    2,   3
word_516EA:	dc.w $40
		dc.w $38
		dc.w $3C
		dc.w $40
		dc.w $44
		dc.w $48
		dc.w $4C
		dc.w $50
; ---------------------------------------------------------------------------

loc_516FA:
		bsr.w	sub_5174A
		move.b	(V_int_run_count+3).w,d0
		andi.b	#$F,d0
		bne.s	loc_51730
		lea	ChildObjDat_52042(pc),a2
		jsr	CreateChild6_Simple(pc)
		jsr	(Random_Number).l
		andi.w	#$1F,d0
		subi.w	#$10,d0
		add.w	d0,$10(a1)
		swap	d0
		andi.w	#$1F,d0
		subi.w	#$10,d0
		add.w	d0,$14(a1)

loc_51730:
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$A0,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_51764

loc_5173E:
		jsr	(MoveSprite2).l
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_5174A:
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$80,d0
		cmp.w	$14(a0),d0
		bcc.s	locret_51762
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.l	(sp),(a0)

locret_51762:
		rts
; End of function sub_5174A

; ---------------------------------------------------------------------------

loc_51764:
		lea	ChildObjDat_5204E(pc),a2
		jsr	CreateChild6_Simple(pc)
		bne.w	locret_50DD2
		move.w	a1,$44(a0)
		lea	(Normal_palette).w,a1
		lea	(Target_palette).w,a2
		moveq	#$1F,d0

loc_5177E:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_5177E
		move.l	#loc_517BA,(a0)
		moveq	#signextendB(sfx_FlamethrowerQuiet),d0
		jsr	(Play_Sound_2).l
		moveq	#signextendB(mus_Ending),d0
		jsr	(Play_Sound).l
		jsr	sub_5439C(pc)
		lsl.w	#2,d0
		movea.l	off_517AE(pc,d0.w),a1
		move.w	#$7B20,d2
		jmp	(Queue_Kos_Module).l
; ---------------------------------------------------------------------------
off_517AE:	dc.l ArtKosM_SonicEndPose
		dc.l ArtKosM_TailsEndPose
		dc.l ArtKosM_SuperSonicEndPose
; ---------------------------------------------------------------------------

loc_517BA:
		movea.w	$44(a0),a1
		btst	#7,$2A(a1)
		beq.s	loc_517DE
		clr.b	(Level_started_flag).w
		lea	ChildObjDat_52054(pc),a2
		jsr	CreateChild6_Simple(pc)
		bne.s	loc_517DE
		move.w	a1,$44(a0)
		move.l	#loc_517E4,(a0)

loc_517DE:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_517E4:
		movea.w	$44(a0),a1
		btst	#7,$2A(a1)
		beq.w	locret_50DD2
		bset	#1,(_unkFA88).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_517FE:
		move.l	#loc_5182A,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		movea.l	off_51822(pc,d0.w),a1
		lea	(Palette_rotation_data).w,a2
		move.l	(a1)+,(a2)+
		move.l	(a1)+,(a2)+
		clr.w	(a2)
		move.l	#Go_Delete_Sprite,(Palette_rotation_custom).w
		rts
; ---------------------------------------------------------------------------
off_51822:	dc.l PalSPtr_LBZFinalBoss2_FadeIn
		dc.l PalSPtr_LBZFinalBoss2_FadeOut
; ---------------------------------------------------------------------------

loc_5182A:
		jmp	Run_PalRotationScript(pc)
; ---------------------------------------------------------------------------

loc_5182E:
		btst	#0,(_unkFA88).w
		beq.w	locret_50DD2
		move.l	#loc_5185A,(a0)
		move.l	#loc_51868,$34(a0)
		clr.b	(Ctrl_1_locked).w
		lea	(Player_1).w,a1
		move.b	#$53,$2E(a1)
		move.b	#0,$20(a1)

loc_5185A:
		lea	byte_52070(pc),a1
		bsr.w	Animate_ExternalPlayerSprite
		jmp	(Player_Load_PLC).l
; ---------------------------------------------------------------------------

loc_51868:
		move.l	#loc_5186E,(a0)

loc_5186E:
		btst	#1,(_unkFA88).w
		beq.w	locret_50DD2
		move.l	#loc_5188E,(a0)
		move.l	#loc_5189C,$34(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)

loc_5188E:
		lea	byte_5207A(pc),a1
		bsr.w	Animate_ExternalPlayerSprite
		jmp	(Player_Load_PLC).l
; ---------------------------------------------------------------------------

loc_5189C:
		move.l	#loc_518CE,(a0)
		move.w	#$FF,$2E(a0)
		move.l	#loc_518E2,$34(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		lea	(Player_1).w,a1
		moveq	#0,d0
		move.b	$38(a1),d0
		lsl.w	#2,d0
		lea	off_52090(pc),a2
		move.l	(a2,d0.w),$30(a0)

loc_518CE:
		movea.l	$30(a0),a1
		bsr.w	Animate_ExternalPlayerSprite
		jsr	(Player_Load_PLC).l
		jmp	(Obj_Wait).l
; ---------------------------------------------------------------------------

loc_518E2:
		move.l	#loc_518E8,(a0)

loc_518E8:
		lea	ObjDat3_51FA8(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		lea	(Player_1).w,a1
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		movea.w	(_unkFAA4).w,a1
		move.l	#Go_Delete_Sprite,(a1)
		jsr	sub_5439C(pc)
		moveq	#0,d1
		subq.w	#1,d0
		beq.s	loc_51920
		bmi.s	loc_51922
		tst.b	(Super_Sonic_Knux_flag).w
		beq.s	loc_5191E
		addq.w	#4,d1

loc_5191E:
		addq.w	#4,d1

loc_51920:
		addq.w	#4,d1

loc_51922:
		move.l	off_5192C(pc,d1.w),(a0)
		move.w	d1,$3A(a0)
		rts
; ---------------------------------------------------------------------------
off_5192C:	dc.l loc_5193C
		dc.l loc_51994
		dc.l loc_519B8
		dc.l loc_51A62
; ---------------------------------------------------------------------------

loc_5193C:
		move.l	#loc_5195E,(a0)
		move.w	#6,$2E(a0)
		move.b	#0,$22(a0)
		subi.w	#$10,$14(a0)
		move.b	#0,(Player_1+mapping_frame).w
		bsr.w	sub_51EB0

loc_5195E:
		subq.w	#1,$2E(a0)
		bpl.s	loc_51982
		move.l	#Wait_Draw,(a0)
		addq.b	#1,$22(a0)
		move.w	#$12C,$2E(a0)
		move.l	#loc_51988,$34(a0)
		subi.w	#$20,$14(a0)

loc_51982:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_51988:
		move.b	#$20,(Game_mode).w
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

loc_51994:
		move.l	#loc_5195E,(a0)
		move.w	#4,$2E(a0)
		move.b	#2,$22(a0)
		subi.w	#$10,$14(a0)
		move.b	#0,(Player_1+mapping_frame).w
		bsr.w	sub_51EB0
		bra.s	loc_5195E
; ---------------------------------------------------------------------------

loc_519B8:
		move.l	#loc_519E0,(a0)
		move.b	#4,$22(a0)
		move.w	#$100,$18(a0)
		move.w	#-$600,$1A(a0)
		lea	(Player_1).w,a1
		move.b	#-$7F,$2E(a1)
		move.b	#2,$20(a1)

loc_519E0:
		lea	(Player_1).w,a1
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		jsr	(MoveSprite).l
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$140,d0
		cmp.w	$14(a0),d0
		bcs.s	loc_51A06
		rts
; ---------------------------------------------------------------------------

loc_51A06:
		move.l	#loc_51A34,(a0)
		move.w	(Camera_X_pos).w,d0
		addi.w	#$180,d0
		move.w	d0,$10(a0)
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$C0,d0
		move.w	d0,$14(a0)
		move.w	#-$800,$18(a0)
		move.w	#-$400,$1A(a0)
		bra.w	sub_51EB0
; ---------------------------------------------------------------------------

loc_51A34:
		jsr	(MoveSprite2).l
		move.w	(Camera_X_pos).w,d0
		addi.w	#$A0,d0
		cmp.w	$10(a0),d0
		bcs.s	loc_51A5C
		move.l	#Wait_Draw,(a0)
		move.w	#$B4,$2E(a0)
		move.l	#loc_51988,$34(a0)

loc_51A5C:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_51A62:
		move.l	#loc_51A90,(a0)
		move.b	#4,$22(a0)
		move.w	#$600,$18(a0)
		lea	(Player_1).w,a1
		move.b	#-$7F,$2E(a1)
		move.b	#0,$20(a1)
		move.w	#$600,$18(a1)
		move.w	#$600,$1C(a1)

loc_51A90:
		lea	(Player_1).w,a1
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		jsr	(MoveSprite2).l
		move.w	(Camera_X_pos).w,d0
		addi.w	#$180,d0
		cmp.w	$14(a0),d0
		bcs.w	loc_51A06
		rts
; ---------------------------------------------------------------------------

loc_51AB8:
		lea	ObjDat3_51F84(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_51AE2,(a0)
		move.w	#-$40,$1A(a0)
		move.w	#$7F,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		lea	ChildObjDat_52048(pc),a2
		jsr	CreateChild6_Simple(pc)

loc_51AE2:
		move.b	(V_int_run_count+3).w,d0
		andi.b	#3,d0
		bne.s	loc_51B08
		move.b	$39(a0),d0
		addq.b	#1,d0
		move.b	d0,$39(a0)
		andi.b	#3,d0
		move.b	4(a0),d1
		andi.b	#-4,d1
		or.b	d0,d1
		move.b	d1,4(a0)

loc_51B08:
		jsr	(MoveSprite2).l
		jsr	Obj_Wait(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_51B18:
		lea	ObjDat3_51F90(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_51B3C,(a0)
		move.l	#byte_5206A,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		move.w	#$40,$1A(a0)

loc_51B3C:
		jsr	Animate_Raw(pc)
		jsr	(MoveSprite2).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_FleeingRobotnik_Unused:
		lea	ObjDat3_51F9C(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_51BB6,(a0)
		bset	#0,4(a0)
		move.w	#$7B20,$3A(a0)
		move.b	#$30,$25(a0)
		move.w	(Camera_X_pos).w,d0
		addi.w	#$60,d0
		move.w	d0,$10(a0)
		move.w	d0,$30(a0)
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$100,d0
		move.w	d0,$14(a0)
		move.w	d0,$34(a0)
		move.w	#$800,$18(a0)
		move.w	#-$3C0,$1A(a0)
		move.b	#4,$40(a0)
		move.l	#ArtScaled_FleeingRobotnik,$42(a0)
		move.b	#1,$3E(a0)
		bsr.w	Perform_Art_Scaling
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_51BB6:
		bsr.w	sub_51E3A
		bsr.w	sub_51DEA
		bsr.w	sub_51E10
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_51BC8:
		movea.w	$46(a0),a1
		btst	#7,$A(a1)
		beq.s	locret_51BE0
		bset	#7,$A(a0)
		move.l	(sp),(a0)
		move.b	d0,$28(a0)

locret_51BE0:
		rts
; End of function sub_51BC8

; ---------------------------------------------------------------------------
		movea.w	$44(a0),a1
		movea.w	$46(a0),a2
		move.w	$10(a1),d0
		moveq	#$10,d2
		btst	#0,4(a2)
		beq.s	loc_51BFA
		neg.w	d2

loc_51BFA:
		add.w	d2,d0
		move.w	$10(a2),d1
		moveq	#$C,d2
		btst	#0,4(a2)
		beq.s	loc_51C0C
		neg.w	d2

loc_51C0C:
		add.w	d2,d1
		sub.w	d1,d0
		asr.w	#1,d0
		add.w	d0,d1
		move.w	d1,$10(a0)
		move.w	$14(a1),d0
		subq.w	#4,d0
		move.w	$14(a2),d1
		subq.w	#4,d1
		sub.w	d1,d0
		asr.w	#1,d0
		add.w	d0,d1
		move.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_51C30:
		jsr	(Random_Number).l
		andi.w	#6,d0
		move.w	d0,$3A(a0)
		move.w	(Camera_X_pos).w,d1
		move.w	#$1A8,d2
		move.w	#-$300,d3
		btst	#0,4(a0)
		beq.s	loc_51C58
		move.w	#-$68,d2
		neg.w	d3

loc_51C58:
		add.w	d2,d1
		move.w	d1,$10(a0)
		move.w	d3,$18(a0)
		move.w	(Camera_Y_pos).w,d1
		move.w	word_51C7E(pc,d0.w),d2
		add.w	d1,d2
		move.w	d2,$14(a0)
		move.w	word_51C86(pc,d0.w),$1A(a0)
		move.w	#8,$3C(a0)
		rts
; ---------------------------------------------------------------------------
word_51C7E:	dc.w $60
		dc.w $10
		dc.w $A0
		dc.w $80
word_51C86:	dc.w 0
		dc.w $200
		dc.w $FE00
		dc.w 0
; ---------------------------------------------------------------------------

loc_51C8E:
		move.w	#-$300,d0
		btst	#0,4(a0)
		beq.s	loc_51C9C
		neg.w	d0

loc_51C9C:
		move.w	d0,$18(a0)
		jsr	(Random_Number).l
		andi.w	#$7F,d0
		addi.w	#$C0,d0
		move.w	d0,$2E(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_51CB4:
		move.w	(Camera_X_pos).w,d0
		tst.w	$18(a0)
		bmi.s	loc_51CCA
		add.w	d2,d0
		cmp.w	$10(a0),d0
		bls.s	loc_51CD2
		bra.w	locret_51CDC
; ---------------------------------------------------------------------------

loc_51CCA:
		add.w	d1,d0
		cmp.w	$10(a0),d0
		bcs.s	locret_51CDC

loc_51CD2:
		bchg	#0,4(a0)
		neg.w	$18(a0)

locret_51CDC:
		rts
; End of function sub_51CB4


; =============== S U B R O U T I N E =======================================


sub_51CDE:
		cmpi.b	#8,5(a0)
		bcs.s	locret_51D50
		tst.b	$28(a0)
		bne.s	locret_51D50
		move.b	$29(a0),d0
		beq.s	loc_51D52
		tst.b	$20(a0)
		bne.s	loc_51D1C
		cmpi.b	#$A,5(a0)
		bne.s	loc_51D06
		move.w	#8,$3A(a0)

loc_51D06:
		move.b	#$3C,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l
		movea.w	$44(a0),a1
		clr.b	$28(a1)

loc_51D1C:
		bset	#6,$2A(a0)
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_51D30
		addi.w	#$C,d0

loc_51D30:
		bsr.w	sub_51D88
		subq.b	#1,$20(a0)
		bne.s	locret_51D50
		bclr	#6,$2A(a0)
		move.b	$25(a0),$28(a0)
		movea.w	$44(a0),a1
		move.b	#-$53,$28(a1)

locret_51D50:
		rts
; ---------------------------------------------------------------------------

loc_51D52:
		move.l	#Wait_Draw,(a0)
		move.l	#loc_510DE,$34(a0)
		jsr	BossDefeated_StopTimer(pc)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	(CreateChild1_Normal).l
		bne.s	loc_51D78
		move.b	#4,$2C(a1)

loc_51D78:
		tst.b	$30(a0)
		; Bug: this branch is inverted, freeing the player if they're _not_ being held
		bne.s	loc_51D82
		jsr	Restore_PlayerControl(pc)

loc_51D82:
		jmp	(SaveGame).l
; End of function sub_51CDE


; =============== S U B R O U T I N E =======================================


sub_51D88:
		lea	word_51D94(pc),a1
		lea	word_51DA0(pc,d0.w),a2
		jmp	CopyWordData_6(pc)
; End of function sub_51D88

; ---------------------------------------------------------------------------
word_51D94:	dc.w Normal_palette_line_2+$08, Normal_palette_line_2+$0E, Normal_palette_line_2+$10
		dc.w Normal_palette_line_2+$18, Normal_palette_line_2+$1A, Normal_palette_line_2+$1C
word_51DA0:	dc.w      8,    $A,     4,  $644,  $422,     0
		dc.w   $888,  $666,  $AAA,  $AAA,  $EEE,  $EEE

; =============== S U B R O U T I N E =======================================


Perform_Art_Scaling:
		clr.w	(_unkF740).w
		move.l	a0,-(sp)
		jsr	(Init_ArtScaling).l
		movea.l	(sp)+,a0
		move.l	a0,-(sp)
		move.w	$A(a0),d0
		jsr	(sub_22C90).l
		movea.l	(sp)+,a0
		move.w	(_unkF740).w,d3
		lsl.w	#4,d3
		move.l	#Kos_decomp_buffer,d1
		move.w	$3A(a0),d2
		jmp	(Add_To_DMA_Queue).l
; End of function Perform_Art_Scaling


; =============== S U B R O U T I N E =======================================


sub_51DEA:
		move.w	$18(a0),d0
		addi.w	#-$28,d0
		cmpi.w	#-$80,d0
		blt.s	loc_51DFC
		move.w	d0,$18(a0)

loc_51DFC:
		move.w	$1A(a0),d0
		addi.w	#8,d0
		cmpi.w	#$40,d0
		bge.s	locret_51E0E
		move.w	d0,$1A(a0)

locret_51E0E:
		rts
; End of function sub_51DEA


; =============== S U B R O U T I N E =======================================


sub_51E10:
		bsr.w	sub_4B30A
		move.w	$30(a0),d2
		move.w	$34(a0),d3
		moveq	#0,d0
		move.b	$40(a0),d0
		addq.w	#4,d0
		move.l	#$100,d4
		divu.w	d0,d4
		sub.w	d4,d2
		sub.w	d4,d3
		move.w	d2,$10(a0)
		move.w	d3,$14(a0)
		rts
; End of function sub_51E10


; =============== S U B R O U T I N E =======================================


sub_51E3A:
		subq.w	#1,$1C(a0)
		bpl.s	loc_51E62
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.b	#1,d0
		cmpi.b	#6,d0
		bhi.s	loc_51E80
		move.b	d0,$23(a0)
		add.w	d0,d0
		move.w	word_51E86(pc,d0.w),$1C(a0)
		add.w	d0,d0
		move.l	off_51E94(pc,d0.w),$42(a0)

loc_51E62:
		subq.b	#1,$25(a0)
		bpl.s	locret_51E7E
		move.b	#4,$25(a0)
		move.b	$40(a0),d0
		addq.b	#1,d0
		bmi.s	locret_51E7E
		move.b	d0,$40(a0)
		bsr.w	Perform_Art_Scaling

locret_51E7E:
		rts
; ---------------------------------------------------------------------------

loc_51E80:
		jmp	(Go_Delete_Sprite).l
; End of function sub_51E3A

; ---------------------------------------------------------------------------
word_51E86:	dc.w $20
		dc.w $20
		dc.w $10
		dc.w 8
		dc.w 8
		dc.w 8
		dc.w $200
off_51E94:	dc.l ArtScaled_FleeingRobotnik
		dc.l ArtScaled_FleeingRobotnik
		dc.l ArtScaled_FleeingRobotnik+$1000
		dc.l ArtScaled_FleeingRobotnik+$2000
		dc.l ArtScaled_FleeingRobotnik+$3000
		dc.l ArtScaled_FleeingRobotnik+$4000
		dc.l ArtScaled_FleeingRobotnik+$5000

; =============== S U B R O U T I N E =======================================


sub_51EB0:
		move.w	$3A(a0),d1
		movea.l	off_51EC6(pc,d1.w),a1
		lea	(Normal_palette).w,a2
		moveq	#7,d0

loc_51EBE:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_51EBE
		rts
; End of function sub_51EB0

; ---------------------------------------------------------------------------
off_51EC6:	dc.l Pal_SonicEndPose
		dc.l Pal_TailsEndPose
		dc.l Pal_SuperSonicEndPose
		dc.l Pal_SuperSonicEndPose

; =============== S U B R O U T I N E =======================================


Animate_ExternalPlayerSprite:
		subq.b	#1,$24(a0)
		bpl.s	locret_51F10
		lea	(Player_1).w,a2
		move.b	(a1),$24(a0)
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.b	#2,d0
		move.b	d0,$23(a0)
		move.b	1(a1,d0.w),d1
		cmpi.b	#-1,d1
		beq.s	loc_51F12
		move.b	d1,$22(a2)
		bclr	#0,4(a2)
		tst.b	2(a1,d0.w)
		beq.s	locret_51F10
		bset	#0,4(a2)

locret_51F10:
		rts
; ---------------------------------------------------------------------------

loc_51F12:
		movea.l	$34(a0),a1
		jmp	(a1)
; End of function Animate_ExternalPlayerSprite

; ---------------------------------------------------------------------------
ObjDat3_51F18:	dc.l Map_RobotnikShip
		dc.w $52E
		dc.w $280
		dc.b $1C
		dc.b $20
		dc.b 5
		dc.b 0
ObjDat3_51F24:	dc.l Map_LBZFinalBoss2
		dc.w $23D9
		dc.w $200
		dc.b $28
		dc.b $28
		dc.b 0
		dc.b 0
ObjDat3_51F30:	dc.l Map_LBZFinalBoss2
		dc.w $23D9
		dc.w $180
		dc.b $20
		dc.b $10
		dc.b 2
		dc.b 0
word_51F3C:	dc.w $80
		dc.b $14
		dc.b $14
		dc.b 4
		dc.b 0
word_51F42:	dc.w $180
		dc.b 8
		dc.b 8
		dc.b 3
		dc.b 0
ObjDat3_51F48:	dc.l Map_LBZFinalBoss2
		dc.w $23D9
		dc.w $300
		dc.b $14
		dc.b $C
		dc.b 1
		dc.b 0
ObjDat3_51F54:	dc.l Map_LBZFinalBoss2
		dc.w $3D9
		dc.w $300
		dc.b $C
		dc.b $C
		dc.b $C
		dc.b 0
ObjDat3_51F60:	dc.l Map_LBZFinalBoss2
		dc.w $A3D9
		dc.w $100
		dc.b $10
		dc.b $14
		dc.b $D
		dc.b 0
ObjDat3_51F6C:	dc.l Map_LBZDeathEggSmall
		dc.w $44AE
		dc.w $300
		dc.b $C
		dc.b $C
		dc.b 7
		dc.b 0
ObjDat3_51F78:	dc.l Map_LBZDeathEggSmall
		dc.w $24AE
		dc.w $380
		dc.b $18
		dc.b $18
		dc.b 0
		dc.b 0
ObjDat3_51F84:	dc.l Map_LBZDeathEggSmall
		dc.w $24AE
		dc.w $300
		dc.b 4
		dc.b 4
		dc.b 3
		dc.b 0
ObjDat3_51F90:	dc.l Map_LBZDeathEggSmall
		dc.w $24AE
		dc.w $300
		dc.b 4
		dc.b 4
		dc.b 4
		dc.b 0
ObjDat3_51F9C:	dc.l Map_ScaledArt
		dc.w $3D9
		dc.w $300
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
ObjDat3_51FA8:	dc.l Map_SonicTailsEndPoses
		dc.w $83D9
		dc.w $300
		dc.b $40
		dc.b $40
		dc.b 0
		dc.b 0
ChildObjDat_51FB4:dc.w 3
		dc.l loc_511E8
		dc.w $1424
		dc.l loc_511CE
		dc.w $CEC
		dc.l loc_51392
		dc.w $E8
		dc.l loc_513AC
		dc.w $38EC
ChildObjDat_51FCE:dc.w 0
		dc.l loc_513E8
		dc.w $4CC
ChildObjDat_51FD6:dc.w 3
		dc.l loc_512FC
		dc.w $D6FE
		dc.l loc_512FC
		dc.w $B6FE
		dc.l loc_512A6
		dc.w 0
		dc.l loc_5140A
		dc.w $C0FE
ChildObjDat_51FF0:dc.w 4
		dc.l loc_514F6
		dc.w $F4D4
		dc.l loc_514F6
		dc.w $14D4
		dc.l loc_514F6
		dc.w $2CE8
		dc.l loc_514F6
		dc.w $F4FC
		dc.l loc_514F6
		dc.w $14FC
ChildObjDat_52010:dc.w 1
		dc.l loc_51524
ChildObjDat_52016:dc.w 6
		dc.l loc_516A4
		dc.w 0
		dc.l loc_516A4
		dc.w $F028
		dc.l loc_516A4
		dc.w $9000
		dc.l loc_516A4
		dc.w $B828
		dc.l loc_516A4
		dc.w $1810
		dc.l loc_516A4
		dc.w $DCF8
		dc.l loc_516A4
		dc.w $B01C
ChildObjDat_52042:dc.w 0
		dc.l loc_51AB8
ChildObjDat_52048:dc.w 0
		dc.l loc_51B18
ChildObjDat_5204E:dc.w 0
		dc.l loc_542B8
ChildObjDat_52054:dc.w 0
		dc.l loc_54322
byte_5205A:	dc.b 9
		dc.b 7
		dc.b 4
		dc.b 5
		dc.b 6
		dc.b 5
		dc.b 4
		dc.b $FC
byte_52062:	dc.b 9
		dc.b $B
		dc.b 8
		dc.b 9
		dc.b $A
		dc.b 9
		dc.b 8
		dc.b $FC
byte_5206A:	dc.b 2
		dc.b 4
		dc.b 4
		dc.b 5
		dc.b 6
		dc.b $F4
byte_52070:	dc.b    5, $C4
		dc.b    0, $55
		dc.b    0, $59
		dc.b    1, $5A
		dc.b    1, $FF
byte_5207A:	dc.b    7, $5A
		dc.b    1, $5A
		dc.b    1, $5A
		dc.b    1, $5A
		dc.b    1, $59
		dc.b    1, $55
		dc.b    0, $56
		dc.b    0, $57
		dc.b    0, $57
		dc.b    0, $57
		dc.b    0, $FF
off_52090:	dc.l byte_52098
		dc.l byte_520D2
byte_52098:	dc.b   $F, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $B1
		dc.b    0, $B2
		dc.b    0, $FF
byte_520D2:	dc.b  $7F, $A6
		dc.b    0, $A6
		dc.b    0, $A6
		dc.b    0, $A6
		dc.b    0, $FF
Pal_LBZFinalBoss2:
		binclude "Levels/LBZ/Palettes/Final Boss 2.bin"
		even
Pal_LBZEnding:	binclude "Levels/LBZ/Palettes/Ending.bin"
		even
Pal_SonicEndPose:
		binclude "General/Ending/Palettes/Sonic End Pose.bin"
		even
Pal_TailsEndPose:
		binclude "General/Ending/Palettes/Tails End Pose.bin"
		even
Pal_SuperSonicEndPose:
		binclude "General/Ending/Palettes/S3 Super Sonic End Pose.bin"
		even
Map_SonicTailsEndPoses:
		include "General/Ending/Map - Sonic Tails Ending Poses S3.asm"
PalSPtr_LBZFinalBoss2_FadeIn:	palscriptptr .header, .data
		dc.w 0

.header	palscripthdr	Normal_palette_line_4+$16, 4, 2-1
.data	palscriptdata	16, $ECE, $E8A, $E48, $E46
	palscriptdata	16, $CAC, $C68, $C46, $A44
	palscriptdata	16, $A88, $A46, $824, $622
	palscriptdata	16, $844, $622, $400, $200
	palscriptrun

PalSPtr_LBZFinalBoss2_FadeOut:	palscriptptr .header, .data
		dc.w 0

.header	palscripthdr	Normal_palette_line_4+$16, 4, 2-1
.data	palscriptdata	16, $844, $622, $400, $200
	palscriptdata	16, $A88, $A46, $824, $622
	palscriptdata	16, $CAC, $C68, $C46, $A44
	palscriptdata	16, $ECE, $E8A, $E48, $E46
	palscriptrun
; ---------------------------------------------------------------------------

Obj_HiddenMonitor:
		lea	ObjDat_HiddenMonitor(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#Obj_HiddenMonitorMain,(a0)
		move.b	#$F,$1E(a0)
		move.b	#$F,$1F(a0)
		move.b	#$46,$28(a0)
		move.b	$2C(a0),$20(a0)
		rts
; ---------------------------------------------------------------------------

Obj_HiddenMonitorMain:
		movea.w	(Signpost_addr).w,a1
		cmpi.l	#Obj_EndSign,(a1)
		bne.s	loc_52360
		btst	#0,$38(a1)
		beq.s	loc_52360
		lea	word_52392(pc),a2
		move.w	$10(a0),d0
		move.w	$10(a1),d1
		add.w	(a2)+,d0
		cmp.w	d0,d1
		bcs.s	loc_52352
		add.w	(a2)+,d0
		cmp.w	d0,d1
		bcc.s	loc_52352
		move.w	$14(a0),d0
		move.w	$14(a1),d1
		add.w	(a2)+,d0
		cmp.w	d0,d1
		bcs.s	loc_52352
		add.w	(a2)+,d0
		cmp.w	d0,d1
		bcs.s	loc_52366

loc_52352:
		moveq	#signextendB(sfx_GroundSlide),d0
		jsr	(Play_Sound_2).l
		move.l	#Sprite_OnScreen_Test,(a0)

loc_52360:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_52366:
		bclr	#0,$38(a1)
		move.l	#Obj_Monitor,(a0)
		move.b	#2,5(a0)
		move.b	#4,$3C(a0)
		move.w	#-$500,$1A(a0)
		moveq	#signextendB(sfx_BubbleAttack),d0
		jsr	(Play_Sound_2).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
word_52392:	dc.w  $FFF2,   $1C, $FF80,   $C0
ObjDat_HiddenMonitor:dc.l Map_Monitor
		dc.w ArtTile_Monitors
		dc.w $180
		dc.b $E
		dc.b $10
		dc.b 0
		dc.b 0
; ---------------------------------------------------------------------------

Obj_EndSign:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	EndSign_Index(pc,d0.w),d1
		jsr	EndSign_Index(pc,d1.w)
		lea	PLCPtr_EndSigns(pc),a2
		jsr	Perform_DPLC(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
EndSign_Index:	dc.w Obj_EndSignInit-EndSign_Index
		dc.w Obj_EndSignFall-EndSign_Index
		dc.w Obj_EndSignLanded-EndSign_Index
		dc.w Obj_EndSignResults-EndSign_Index
		dc.w Obj_EndSignAfter-EndSign_Index
; ---------------------------------------------------------------------------

Obj_EndSignInit:
		lea	ObjSlot_EndSigns(pc),a1
		jsr	SetUp_ObjAttributesSlotted(pc)
		move.w	a0,(Signpost_addr).w
		move.b	#$18,$1F(a0)
		move.b	#$1E,$1E(a0)
		move.l	#AniRaw_EndSigns,$30(a0)
		cmpi.b	#6,(Current_zone).w
		bne.s	loc_523FA
		move.w	#$3EC0,$10(a0)

loc_523FA:
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$20,d0
		move.w	d0,$14(a0)
		moveq	#signextendB(sfx_Signpost),d0
		jsr	(Play_Sound_2).l
		lea	Child1_EndSignStub(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

Obj_EndSignFall:
		move.b	(V_int_run_count+3).w,d0
		andi.b	#3,d0
		bne.s	loc_52428
		lea	Child6_EndSignSparkle(pc),a2
		jsr	CreateChild6_Simple(pc)

loc_52428:
		bsr.w	EndSign_CheckPlayerHit
		addi.w	#$C,$1A(a0)
		jsr	(MoveSprite2).l
		bsr.w	EndSign_CheckWall
		jsr	Animate_Raw(pc)
		move.w	(Camera_Y_pos).w,d0
		cmpi.b	#6,(Current_zone).w
		bne.s	loc_52450
		addi.w	#$60,d0

loc_52450:
		cmp.w	$14(a0),d0
		bhi.s	locret_5247C
		tst.w	$1A(a0)
		bmi.s	locret_5247C
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	locret_5247C
		add.w	d1,$14(a0)
		move.b	#4,5(a0)
		bset	#0,$38(a0)
		move.w	#$40,$2E(a0)

locret_5247C:
		rts
; ---------------------------------------------------------------------------

Obj_EndSignLanded:
		btst	#0,$38(a0)
		beq.s	loc_524AA
		jsr	Animate_Raw(pc)
		subq.w	#1,$2E(a0)
		bmi.s	loc_52492
		rts
; ---------------------------------------------------------------------------

loc_52492:
		move.b	#6,5(a0)
		moveq	#0,d0
		move.b	(Player_mode+1).w,d0
		move.b	FrameArray_EndSign(pc,d0.w),$22(a0)
		st	(Ctrl_2_locked).w
		rts
; ---------------------------------------------------------------------------

loc_524AA:
		move.b	#2,5(a0)
		move.b	#$20,$20(a0)
		move.w	#-$200,$1A(a0)
		rts
; ---------------------------------------------------------------------------
FrameArray_EndSign:dc.b   0,  0,  1,  2
; ---------------------------------------------------------------------------

Obj_EndSignResults:
		lea	(Player_1).w,a1
		btst	#1,$2A(a1)
		bne.s	locret_524E6
		move.b	#8,5(a0)
		jsr	Set_PlayerEndingPose(pc)
		jsr	(Create_New_Sprite).l
		bne.s	locret_524E6
		move.l	#Obj_LevelResults,(a1)

locret_524E6:
		rts
; ---------------------------------------------------------------------------

Obj_EndSignAfter:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_52500
		jmp	(Check_TailsEndPose).l
; ---------------------------------------------------------------------------

loc_52500:
		lea	PLC_SpikesSprings(pc),a1
		jsr	(Load_PLC_Raw).l
		jsr	Remove_From_TrackingSlot(pc)
		jmp	Go_Delete_Sprite(pc)
; ---------------------------------------------------------------------------
PLC_SpikesSprings:dc.w 0
		dc.l ArtNem_SpikesSprings
		dc.w $9280
; ---------------------------------------------------------------------------

Obj_SignpostSparkle:
		lea	ObjDat_SignpostSparkle(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#Obj_SignpostSparkleMain,(a0)
		jsr	(Random_Number).l
		andi.w	#$1F,d0
		subi.w	#$10,d0
		add.w	d0,$14(a0)
		move.w	$10(a0),$3A(a0)
		move.w	#$1000,$18(a0)
		move.w	#$20,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)

Obj_SignpostSparkleMain:
		move.w	#$400,d0
		move.w	$10(a0),d1
		cmp.w	$3A(a0),d1
		bcs.s	loc_52564
		neg.w	d0

loc_52564:
		move.w	#$80,d1
		add.w	d0,$18(a0)
		bpl.s	loc_52572
		move.w	#$180,d1

loc_52572:
		move.w	d1,8(a0)
		jsr	(MoveSprite2).l
		lea	AniRaw_SignpostSparkle(pc),a1
		jsr	Animate_RawNoSST(pc)
		jsr	Obj_Wait(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_SignpostStub:
		move.l	#Obj_SignpostStubMain,(a0)
		lea	ObjDat_SignpostStub(pc),a1
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

Obj_SignpostStubMain:
		jsr	Refresh_ChildPosition(pc)
		jmp	(Child_Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


EndSign_CheckPlayerHit:
		tst.b	$20(a0)
		bne.s	loc_5260E
		lea	EndSign_Range(pc),a1
		jsr	Check_PlayerInRange(pc)
		tst.l	d0
		beq.s	locret_52612
		tst.w	d0
		beq.s	loc_525C0
		bsr.w	sub_525C6

loc_525C0:
		swap	d0
		tst.w	d0
		beq.s	locret_52612
; End of function EndSign_CheckPlayerHit


; =============== S U B R O U T I N E =======================================


sub_525C6:
		movea.w	d0,a1
		cmpi.b	#2,$20(a1)
		bne.s	locret_52612
		tst.w	$1A(a1)
		bpl.s	locret_52612
		move.b	#$20,$20(a0)
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		bne.s	loc_525E8
		moveq	#8,d0

loc_525E8:
		lsl.w	#4,d0
		move.w	d0,$18(a0)
		move.w	#-$200,$1A(a0)
		moveq	#signextendB(sfx_Signpost),d0
		jsr	(Play_Sound_2).l
		lea	Child6_EndSignScore(pc),a2
		jsr	CreateChild6_Simple(pc)
		moveq	#$A,d0
		movea.l	a1,a3
		jmp	(HUD_AddToScore).l
; ---------------------------------------------------------------------------

loc_5260E:
		subq.b	#1,$20(a0)

locret_52612:
		rts
; End of function sub_525C6

; ---------------------------------------------------------------------------
EndSign_Range:	dc.w  $FFE0,   $40, $FFE8,   $30

; =============== S U B R O U T I N E =======================================


EndSign_CheckWall:
		move.w	(Camera_X_pos).w,d0
		tst.w	$18(a0)
		bmi.s	loc_5263E
		addi.w	#$128,d0
		cmp.w	$10(a0),d0
		bcs.s	loc_52654
		moveq	#$20,d3
		jsr	(ObjCheckRightWallDist).l
		tst.w	d1
		bmi.s	loc_52654
		rts
; ---------------------------------------------------------------------------

loc_5263E:
		addi.w	#$18,d0
		cmp.w	$10(a0),d0
		bhi.s	loc_52654
		moveq	#-$20,d3
		jsr	(ObjCheckLeftWallDist).l
		tst.w	d1
		bpl.s	locret_52658

loc_52654:
		neg.w	$18(a0)

locret_52658:
		rts
; End of function EndSign_CheckWall

; ---------------------------------------------------------------------------
ObjSlot_EndSigns:dc.w 0, $4AC, $C, 0
		dc.l Map_EndSigns
		dc.w $100
		dc.b $18
		dc.b $10
		dc.b 0
		dc.b 0
ObjDat_SignpostStub:dc.l Map_SignpostStub
		dc.w $69E
		dc.w $100
		dc.b 4
		dc.b 8
		dc.b 0
		dc.b 0
ObjDat_SignpostSparkle:dc.l Map_Ring
		dc.w make_art_tile(ArtTile_Ring,1,0)
		dc.w $80
		dc.b 8
		dc.b 8
		dc.b 4
		dc.b 0
Child1_EndSignStub:dc.w	0
		dc.l Obj_SignpostStub
		dc.w $18
Child6_EndSignSparkle:dc.w 0
		dc.l Obj_SignpostSparkle
Child6_EndSignScore:dc.w 0
		dc.l Obj_EnemyScore
PLCPtr_EndSigns:dc.l ArtUnc_EndSigns
		dc.l DPLC_EndSigns
AniRaw_EndSigns:dc.b    1,   0
		dc.b    4,   5
		dc.b    6,   1
		dc.b    4,   5
		dc.b    6,   2
		dc.b    4,   5
		dc.b    6,   3
		dc.b    4,   5
		dc.b    6, $FC
AniRaw_SignpostSparkle:dc.b    1,   4
		dc.b    5,   6
		dc.b    7, $FC

; =============== S U B R O U T I N E =======================================


AfterBoss_Cleanup:
		moveq	#0,d0
		lea	(Current_zone_and_act).w,a1
		move.b	(a1)+,d0
		add.b	d0,d0
		add.b	(a1)+,d0
		add.b	d0,d0
		move.w	off_526CE(pc,d0.w),d0
		jmp	off_526CE(pc,d0.w)
; End of function AfterBoss_Cleanup

; ---------------------------------------------------------------------------
off_526CE:	dc.w loc_526EA-off_526CE
		dc.w loc_526FE-off_526CE
		dc.w locret_52714-off_526CE
		dc.w locret_52714-off_526CE
		dc.w loc_52716-off_526CE
		dc.w loc_52716-off_526CE
		dc.w locret_52720-off_526CE
		dc.w locret_52720-off_526CE
		dc.w locret_52720-off_526CE
		dc.w locret_52720-off_526CE
		dc.w locret_52720-off_526CE
		dc.w loc_52722-off_526CE
		dc.w locret_5272E-off_526CE
		dc.w locret_5272E-off_526CE
; ---------------------------------------------------------------------------

loc_526EA:
		lea	(Pal_AIZ).l,a1
		lea	(Normal_palette_line_2).w,a2
		moveq	#$17,d0

loc_526F6:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_526F6
		rts
; ---------------------------------------------------------------------------

loc_526FE:
		lea	(Pal_AIZFire).l,a1
		jsr	(PalLoad_Line1).l
		lea	PLC_52730(pc),a1
		jmp	(Load_PLC_Raw).l
; ---------------------------------------------------------------------------

locret_52714:
		rts
; ---------------------------------------------------------------------------

loc_52716:
		lea	PLC_MonitorsSpikesSprings(pc),a1
		jmp	(Load_PLC_Raw).l
; ---------------------------------------------------------------------------

locret_52720:
		rts
; ---------------------------------------------------------------------------

loc_52722:
		lea	(Pal_ICZ2).l,a1
		jmp	(PalLoad_Line1).l
; ---------------------------------------------------------------------------

locret_5272E:
		rts
; ---------------------------------------------------------------------------
PLC_52730:	dc.w 6
		dc.l ArtNem_Monitors
		dc.w tiles_to_bytes(ArtTile_Monitors)
		dc.l ArtNem_AIZMisc2
		dc.w $5D20
		dc.l ArtNem_AIZSwingVine
		dc.w $8360
		dc.l ArtNem_AIZBackgroundTree
		dc.w $8700
		dc.l ArtNem_Bubbles
		dc.w $8B80
		dc.l ArtNem_GrayButton
		dc.w $8AC0
		dc.l ArtNem_AIZCorkFloor2
		dc.w $8800
		dc.w    0,$EEE,$EC0,$E60,$C22, $EE, $88,$60A, $8E, $2E,$844, $20,$EAA,$A66,$ECC, $44
		dc.w    0,$EEE,$EC0,$E60,$C22, $EE, $88, $8E, $2C,$822,   0, $20,$CAA,$866,$644, $44
PLC_MonitorsSpikesSprings:dc.w 1
		dc.l ArtNem_Monitors
		dc.w tiles_to_bytes(ArtTile_Monitors)
		dc.l ArtNem_SpikesSprings
		dc.w $9280
PLC_Monitors:	dc.w 0
		dc.l ArtNem_Monitors
		dc.w tiles_to_bytes(ArtTile_Monitors)
		dc.w 2
		dc.l ArtNem_Explosion
		dc.w $B400
		dc.l ArtNem_Squirrel
		dc.w $B000
		dc.l ArtNem_BlueFlicky
		dc.w $B240
PLC_BossExplosion:dc.w 0
		dc.l ArtNem_BossExplosion
		dc.w $A000
PLC_Explosion:	dc.w 0
		dc.l ArtNem_Explosion
		dc.w $B400
PLC_EggCapsule:	dc.w 0
		dc.l ArtNem_EggCapsule
		dc.w $9280
; ---------------------------------------------------------------------------

Obj_CreateBossExplosion:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_527EC(pc,d0.w),d1
		jmp	off_527EC(pc,d1.w)
; ---------------------------------------------------------------------------
off_527EC:	dc.w Obj_BossExpControl-off_527EC
		dc.w loc_5281C-off_527EC
		dc.w Obj_WaitForParent-off_527EC

; =============== S U B R O U T I N E =======================================


Obj_BossExpControl:
		lea	ObjDat_BossExplosion(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#Obj_NormalExpControl,$34(a0)
		cmpi.b	#8,$2C(a0)
		bne.s	loc_52812
		move.l	#loc_5289A,$34(a0)

loc_52812:
		move.w	#2,$2E(a0)
		bra.w	loc_528BA
; ---------------------------------------------------------------------------

loc_5281C:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

Obj_WaitForParent:
		movea.w	$46(a0),a1
		btst	#5,$38(a1)
		bne.w	loc_52896
		tst.l	(a1)
		beq.w	loc_52896
		move.w	$10(a1),$10(a0)
		move.w	$14(a1),$14(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

Obj_NormalExpControl:
		subq.b	#1,$39(a0)
		bmi.s	loc_52896
		move.w	#2,$2E(a0)
; End of function Obj_BossExpControl


; =============== S U B R O U T I N E =======================================


sub_52850:
		moveq	#signextendB(sfx_Explode),d0
		jsr	(Play_Sound_2).l
		lea	Child6_MakeBossExplosion1(pc),a2
		jsr	CreateChild1_Normal(pc)
		bne.w	locret_5293E

loc_52864:
		jsr	(Random_Number).l
		moveq	#0,d1
		move.b	$3A(a0),d1
		move.w	d1,d2
		add.w	d2,d2
		subq.w	#1,d2
		and.w	d2,d0
		sub.w	d1,d0
		add.w	d0,$10(a1)
		swap	d0
		moveq	#0,d1
		move.b	$3B(a0),d1
		move.w	d1,d2
		add.w	d2,d2
		subq.w	#1,d2
		and.w	d2,d0
		sub.w	d1,d0
		add.w	d0,$14(a1)
		rts
; ---------------------------------------------------------------------------

loc_52896:
		jmp	Go_Delete_Sprite(pc)
; ---------------------------------------------------------------------------

loc_5289A:
		subq.b	#1,$39(a0)
		bmi.s	loc_52896
		move.w	#2,$2E(a0)
		lea	Child6_MakeNormalExplosion(pc),a2
		jsr	CreateChild1_Normal(pc)
		bne.w	locret_5293E
		move.b	#2,5(a1)
		bra.s	loc_52864
; ---------------------------------------------------------------------------

loc_528BA:
		moveq	#0,d0
		move.b	$2C(a0),d0
		lea	CreateBossExpParameterIndex(pc),a1
		adda.w	(a1,d0.w),a1
		move.b	(a1)+,$39(a0)
		move.b	(a1)+,$3A(a0)
		move.b	(a1)+,$3B(a0)
		move.b	(a1)+,5(a0)
		rts
; ---------------------------------------------------------------------------
CreateBossExpParameterIndex:dc.w CreateBossExp_00-CreateBossExpParameterIndex
		dc.w CreateBossExp_02-CreateBossExpParameterIndex
		dc.w CreateBossExp_04-CreateBossExpParameterIndex
		dc.w CreateBossExp_06-CreateBossExpParameterIndex
		dc.w CreateBossExp_08-CreateBossExpParameterIndex
		dc.w CreateBossExp_0A-CreateBossExpParameterIndex
		dc.w CreateBossExp_0C-CreateBossExpParameterIndex
CreateBossExp_00:dc.b  $20, $20, $20,   2
CreateBossExp_02:dc.b  $28, $80, $80,   2
CreateBossExp_04:dc.b  $80, $20, $20,   4
CreateBossExp_06:dc.b    4,   8,   8,   2
CreateBossExp_08:dc.b    8, $20, $20,   2
CreateBossExp_0A:dc.b  $20, $20, $20,   2
CreateBossExp_0C:dc.b  $40, $80, $20,   2
; ---------------------------------------------------------------------------

Obj_BossExplosionSpecial:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_52912(pc,d0.w),d1
		jmp	off_52912(pc,d1.w)
; ---------------------------------------------------------------------------
off_52912:	dc.w loc_52916-off_52912
		dc.w loc_5281C-off_52912
; ---------------------------------------------------------------------------

loc_52916:
		move.b	#2,$2C(a0)
		bsr.w	Obj_BossExpControl
		move.w	#2,$2E(a0)
		move.w	(Camera_X_pos).w,d0
		addi.w	#$A0,d0
		move.w	d0,$10(a0)
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$70,d0
		move.w	d0,$14(a0)

locret_5293E:
		rts
; End of function sub_52850

; ---------------------------------------------------------------------------

loc_52940:
		lea	ObjDat_BossExplosion(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		tst.b	(Current_zone).w
		bne.s	loc_52954
		move.w	#$84D2,$A(a0)

loc_52954:
		move.l	#loc_5296A,(a0)
		move.l	#AniRaw_BossExplosion,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)

loc_5296A:
		jsr	Animate_RawMultiDelay(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
ObjDat_BossExplosion:dc.l Map_BossExplosion
		dc.w $8500
		dc.w 0
		dc.b $C
		dc.b $C
		dc.b 0
		dc.b 0
AniRaw_BossExplosion:dc.b    0,   0
		dc.b    0,   1
		dc.b    1,   1
		dc.b    2,   2
		dc.b    3,   3
		dc.b    4,   4
		dc.b    5,   4
		dc.b  $F4,   0
Child6_MakeBossExplosion1:dc.w 0
		dc.l loc_52940
		dc.w 0
Child6_CreateBossExplosion:dc.w	0
		dc.l Obj_CreateBossExplosion
		dc.w 0
Child6_MakeNormalExplosion:dc.w	0
		dc.l Obj_Explosion
		dc.w 0

; =============== S U B R O U T I N E =======================================


SetUp_ObjAttributes:
		move.l	(a1)+,$C(a0)

SetUp_ObjAttributes2:
		move.w	(a1)+,$A(a0)

SetUp_ObjAttributes3:
		move.w	(a1)+,8(a0)
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$28(a0)
		bset	#2,4(a0)
		addq.b	#2,5(a0)

locret_529CE:
		rts
; End of function SetUp_ObjAttributes


; =============== S U B R O U T I N E =======================================


CreateChild1_Normal:
		moveq	#0,d2
		move.w	(a2)+,d6

loc_529D4:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_52A1E
		move.w	a0,$46(a1)
		move.l	$C(a0),$C(a1)
		move.l	$A(a0),$A(a1)
		move.l	(a2)+,(a1)
		move.b	d2,$2C(a1)
		move.w	$10(a0),d0
		move.b	(a2)+,d1
		move.b	d1,$42(a1)
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$10(a1)
		move.w	$14(a0),d0
		move.b	(a2)+,d1
		move.b	d1,$43(a1)
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$14(a1)
		addq.w	#2,d2
		dbf	d6,loc_529D4
		moveq	#0,d0

locret_52A1E:
		rts
; End of function CreateChild1_Normal


; =============== S U B R O U T I N E =======================================


CreateChild2_Complex:
		moveq	#0,d2
		move.w	(a2)+,d6

loc_52A24:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_52A82
		move.w	a0,$46(a1)
		move.l	$C(a0),$C(a1)
		move.l	$A(a0),$A(a1)
		move.l	(a2)+,(a1)
		move.l	(a2)+,$3E(a1)
		move.l	(a2)+,$30(a1)
		move.l	(a2)+,$34(a1)
		move.b	d2,$2C(a1)
		move.w	$10(a0),d0
		move.b	(a2)+,d1
		move.b	d1,$42(a1)
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$10(a1)
		move.w	$14(a0),d0
		move.b	(a2)+,d1
		move.b	d1,$43(a1)
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$14(a1)
		move.w	(a2)+,$18(a1)
		move.w	(a2)+,$1A(a1)
		addq.w	#2,d2
		dbf	d6,loc_52A24
		moveq	#0,d0

locret_52A82:
		rts
; End of function CreateChild2_Complex


; =============== S U B R O U T I N E =======================================


CreateChild3_NormalRepeated:
		moveq	#0,d2
		move.w	(a2)+,d6

loc_52A88:
		movea.l	a2,a3
		jsr	(Create_New_Sprite3).l
		bne.s	locret_52AD4
		move.w	a0,$46(a1)
		move.l	$C(a0),$C(a1)
		move.l	$A(a0),$A(a1)
		move.l	(a3)+,(a1)
		move.b	d2,$2C(a1)
		move.w	$10(a0),d0
		move.b	(a3)+,d1
		move.b	d1,$42(a1)
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$10(a1)
		move.w	$14(a0),d0
		move.b	(a3)+,d1
		move.b	d1,$43(a1)
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$14(a1)
		addq.w	#2,d2
		dbf	d6,loc_52A88
		moveq	#0,d0

locret_52AD4:
		rts
; End of function CreateChild3_NormalRepeated


; =============== S U B R O U T I N E =======================================


CreateChild4_LinkListRepeated:
		movea.l	a0,a3
		moveq	#0,d2
		move.w	(a2)+,d6

loc_52ADC:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_52B14
		move.w	a3,$46(a1)
		move.w	a1,$44(a3)
		movea.l	a1,a3
		move.l	$C(a0),$C(a1)
		move.l	$A(a0),$A(a1)
		move.l	(a2),(a1)
		move.b	d2,$2C(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addq.w	#2,d2
		dbf	d6,loc_52ADC
		moveq	#0,d0

locret_52B14:
		rts
; End of function CreateChild4_LinkListRepeated


; =============== S U B R O U T I N E =======================================


CreateChild5_ComplexAdjusted:
		moveq	#0,d2
		move.w	(a2)+,d6

loc_52B1A:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_52B8E
		move.w	a0,$46(a1)
		move.l	$C(a0),$C(a1)
		move.l	$A(a0),$A(a1)
		move.l	(a2)+,(a1)
		move.l	(a2)+,$3E(a1)
		move.l	(a2)+,$30(a1)
		move.l	(a2)+,$34(a1)
		move.b	d2,$2C(a1)
		move.w	$10(a0),d0
		move.b	(a2)+,d1
		move.b	d1,$42(a1)
		ext.w	d1
		btst	#0,4(a0)
		beq.s	loc_52B5A
		neg.w	d1

loc_52B5A:
		add.w	d1,d0
		move.w	d0,$10(a1)
		move.w	$14(a0),d0
		move.b	(a2)+,d1
		move.b	d1,$43(a1)
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$14(a1)
		move.w	(a2)+,d1
		btst	#0,4(a0)
		beq.s	loc_52B7E
		neg.w	d1

loc_52B7E:
		move.w	d1,$18(a1)
		move.w	(a2)+,$1A(a1)
		addq.w	#2,d2
		dbf	d6,loc_52B1A
		moveq	#0,d0

locret_52B8E:
		rts
; End of function CreateChild5_ComplexAdjusted


; =============== S U B R O U T I N E =======================================


CreateChild6_Simple:
		moveq	#0,d2
		move.w	(a2)+,d6

loc_52B94:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_52BBA
		move.w	a0,$46(a1)
		move.l	(a2),(a1)
		move.b	d2,$2C(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addq.w	#2,d2
		dbf	d6,loc_52B94
		moveq	#0,d0

locret_52BBA:
		rts
; End of function CreateChild6_Simple


; =============== S U B R O U T I N E =======================================


CreateChild7_Normal2:
		moveq	#0,d2
		move.w	(a2)+,d6

loc_52BC0:
		jsr	(Create_New_Sprite).l
		bne.s	locret_52C0A
		move.w	a0,$46(a1)
		move.l	$C(a0),$C(a1)
		move.l	$A(a0),$A(a1)
		move.l	(a2)+,(a1)
		move.b	d2,$2C(a1)
		move.w	$10(a0),d0
		move.b	(a2)+,d1
		move.b	d1,$42(a1)
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$10(a1)
		move.w	$14(a0),d0
		move.b	(a2)+,d1
		move.b	d1,$43(a1)
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$14(a1)
		addq.w	#2,d2
		dbf	d6,loc_52BC0
		moveq	#0,d0

locret_52C0A:
		rts
; End of function CreateChild7_Normal2

; ---------------------------------------------------------------------------

CreateChild8_TreeListRepeated:
		movea.l	a0,a3
		moveq	#0,d2
		move.w	(a2)+,d6

loc_52C12:
		jsr	(Create_New_Sprite3).l
		bne.s	locret_52C4A
		move.w	a3,$46(a1)
		move.w	a0,$44(a1)
		movea.l	a1,a3
		move.l	$C(a0),$C(a1)
		move.l	$A(a0),$A(a1)
		move.l	(a2),(a1)
		move.b	d2,$2C(a1)
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		addq.w	#2,d2
		dbf	d6,loc_52C12
		moveq	#0,d0

locret_52C4A:
		rts

; =============== S U B R O U T I N E =======================================


Refresh_ChildPosition:
		movea.w	$46(a0),a1
		move.w	$10(a1),d0
		move.b	$42(a0),d1
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$10(a0)
		move.w	$14(a1),d0
		move.b	$43(a0),d1
		ext.w	d1
		add.w	d1,d0
		move.w	d0,$14(a0)
		rts
; End of function Refresh_ChildPosition


; =============== S U B R O U T I N E =======================================


Refresh_ChildPositionAdjusted:
		movea.w	$46(a0),a1
		move.w	$10(a1),d0
		move.b	$42(a0),d1
		ext.w	d1
		bclr	#0,4(a0)
		btst	#0,4(a1)
		beq.s	loc_52C96
		neg.w	d1
		bset	#0,4(a0)

loc_52C96:
		add.w	d1,d0
		move.w	d0,$10(a0)
		move.w	$14(a1),d0
		move.b	$43(a0),d1
		ext.w	d1
		bclr	#1,4(a0)
		btst	#1,4(a1)
		beq.s	loc_52CBC
		neg.w	d1
		bset	#1,4(a0)

loc_52CBC:
		add.w	d1,d0
		move.w	d0,$14(a0)
		rts
; End of function Refresh_ChildPositionAdjusted


; =============== S U B R O U T I N E =======================================


Animate_Raw:
		movea.l	$30(a0),a1
; End of function Animate_Raw


; =============== S U B R O U T I N E =======================================


Animate_RawNoSST:
		subq.b	#1,$24(a0)
		bpl.s	locret_52CEA
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.w	#1,d0
		move.b	d0,$23(a0)
		moveq	#0,d1
		move.b	1(a1,d0.w),d1
		bmi.s	loc_52CEC
		move.b	(a1),$24(a0)
		move.b	d1,$22(a0)

locret_52CEA:
		rts
; ---------------------------------------------------------------------------

loc_52CEC:
		neg.b	d1
		jsr	loc_52CF2+2(pc,d1.w)

loc_52CF2:
		clr.b	$23(a0)
		rts
; End of function Animate_RawNoSST

; ---------------------------------------------------------------------------
		bra.w	AnimateRaw_Restart
; ---------------------------------------------------------------------------
		bra.w	AnimateRaw_Jump
; ---------------------------------------------------------------------------
		bra.w	AnimateRaw_CustomCode
; ---------------------------------------------------------------------------

AnimateRaw_Jump:
		move.b	2(a1,d0.w),d1
		ext.w	d1
		lea	(a1,d1.w),a1
		move.l	a1,$30(a0)

AnimateRaw_Restart:
		move.b	1(a1),$22(a0)
		move.b	(a1),$24(a0)
		rts
; ---------------------------------------------------------------------------

AnimateRaw_CustomCode:
		clr.b	$24(a0)
		movea.l	$34(a0),a1
		jmp	(a1)

; =============== S U B R O U T I N E =======================================


Animate_RawAdjustFlipX:
		movea.l	$30(a0),a1
		subq.b	#1,$24(a0)
		bpl.s	locret_52D5A
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.w	#1,d0
		move.b	d0,$23(a0)
		moveq	#0,d1
		move.b	1(a1,d0.w),d1
		bmi.s	loc_52CEC
		bclr	#6,d1
		beq.s	loc_52D52
		bchg	#0,4(a0)

loc_52D52:
		move.b	(a1),$24(a0)
		move.b	d1,$22(a0)

locret_52D5A:
		rts
; End of function Animate_RawAdjustFlipX

; ---------------------------------------------------------------------------

Animate_RawAdjustFlipY:
		movea.l	$30(a0),a1
		subq.b	#1,$24(a0)
		bpl.s	locret_52D90
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.w	#1,d0
		move.b	d0,$23(a0)
		moveq	#0,d1
		move.b	1(a1,d0.w),d1
		bmi.w	loc_52CEC
		bclr	#6,d1
		beq.s	loc_52D88
		bchg	#1,4(a0)

loc_52D88:
		move.b	(a1),$24(a0)
		move.b	d1,$22(a0)

locret_52D90:
		rts

; =============== S U B R O U T I N E =======================================


Animate_RawMultiDelay:
		movea.l	$30(a0),a1

Animate_RawNoSSTMultiDelay:
		subq.b	#1,$24(a0)
		bpl.s	loc_52DBE
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.w	#2,d0
		move.b	d0,$23(a0)
		moveq	#0,d1
		move.b	(a1,d0.w),d1
		bmi.s	loc_52DC2
		move.b	d1,$22(a0)
		move.b	1(a1,d0.w),$24(a0)
		moveq	#1,d2
		rts
; ---------------------------------------------------------------------------

loc_52DBE:
		moveq	#0,d2
		rts
; ---------------------------------------------------------------------------

loc_52DC2:
		neg.b	d1
		jsr	loc_52DC8+2(pc,d1.w)

loc_52DC8:
		clr.b	$23(a0)
		rts
; End of function Animate_RawMultiDelay

; ---------------------------------------------------------------------------
		bra.w	loc_52DE8
; ---------------------------------------------------------------------------
		bra.w	loc_52DDA
; ---------------------------------------------------------------------------
		bra.w	loc_52DF6
; ---------------------------------------------------------------------------

loc_52DDA:
		move.b	1(a1,d0.w),d1
		ext.w	d1
		lea	(a1,d1.w),a1
		move.l	a1,$30(a0)

loc_52DE8:
		move.b	(a1),$22(a0)
		move.b	1(a1),$24(a0)
		moveq	#1,d2
		rts
; ---------------------------------------------------------------------------

loc_52DF6:
		clr.b	$24(a0)
		movea.l	$34(a0),a1
		jsr	(a1)
		moveq	#-1,d2
		rts

; =============== S U B R O U T I N E =======================================


Animate_RawMultiDelayFlipX:
		movea.l	$30(a0),a1

Animate_RawNoSSTMultiDelayFlipX:
		subq.b	#1,$24(a0)
		bpl.s	loc_52E3C
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.w	#2,d0
		move.b	d0,$23(a0)
		moveq	#0,d1
		move.b	(a1,d0.w),d1
		bmi.s	loc_52DC2
		bclr	#6,d1
		beq.s	loc_52E2E
		bchg	#0,4(a0)

loc_52E2E:
		move.b	d1,$22(a0)
		move.b	1(a1,d0.w),$24(a0)
		moveq	#1,d2
		rts
; ---------------------------------------------------------------------------

loc_52E3C:
		moveq	#0,d2
		rts
; End of function Animate_RawMultiDelayFlipX


; =============== S U B R O U T I N E =======================================


Animate_RawMultiDelayFlipY:
		movea.l	$30(a0),a1
		subq.b	#1,$24(a0)
		bpl.s	loc_52E7A
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.w	#2,d0
		move.b	d0,$23(a0)
		moveq	#0,d1
		move.b	(a1,d0.w),d1
		bmi.w	loc_52DC2
		bclr	#6,d1
		beq.s	loc_52E6C
		bchg	#1,4(a0)

loc_52E6C:
		move.b	d1,$22(a0)
		move.b	1(a1,d0.w),$24(a0)
		moveq	#1,d2
		rts
; ---------------------------------------------------------------------------

loc_52E7A:
		moveq	#0,d2
		rts
; End of function Animate_RawMultiDelayFlipY


; =============== S U B R O U T I N E =======================================


Animate_RawGetFaster:
		movea.l	$30(a0),a1
		bset	#5,$38(a0)
		bne.s	loc_52E92
		move.b	(a1),$2E(a0)
		clr.b	$2F(a0)

loc_52E92:
		subq.b	#1,$24(a0)
		bpl.s	loc_52ECA
		move.b	$2E(a0),d2
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.b	#1,d0
		move.b	2(a1,d0.w),d1
		bpl.s	loc_52EBA
		moveq	#0,d0
		move.b	2(a1),d1
		tst.b	d2
		beq.s	loc_52ECE
		subq.b	#1,d2
		move.b	d2,$2E(a0)

loc_52EBA:
		move.b	d0,$23(a0)
		move.b	d1,$22(a0)
		move.b	d2,$24(a0)
		moveq	#1,d2
		rts
; ---------------------------------------------------------------------------

loc_52ECA:
		moveq	#0,d2
		rts
; ---------------------------------------------------------------------------

loc_52ECE:
		move.b	d0,$23(a0)
		move.b	d1,$22(a0)
		move.b	d2,$24(a0)
		move.b	$2F(a0),d0
		addq.b	#1,d0
		move.b	d0,$2F(a0)
		cmp.b	1(a1),d0
		bcs.s	loc_52EFA
		bclr	#5,$38(a0)
		clr.b	$2F(a0)
		movea.l	$34(a0),a2
		jsr	(a2)

loc_52EFA:
		moveq	#-1,d2
		rts
; End of function Animate_RawGetFaster

; ---------------------------------------------------------------------------

Animate_RawGetSlower:
		movea.l	$30(a0),a1
		bset	#5,$38(a0)
		bne.s	loc_52F0E
		clr.w	$2E(a0)

loc_52F0E:
		subq.b	#1,$24(a0)
		bpl.s	locret_52F42
		move.b	$2E(a0),d2
		moveq	#0,d0
		move.b	$23(a0),d0
		addq.b	#1,d0
		move.b	1(a1,d0.w),d1
		bpl.s	loc_52F2E
		moveq	#0,d0
		move.b	1(a1),d1
		addq.b	#1,d2

loc_52F2E:
		move.b	d0,$23(a0)
		move.b	d1,$22(a0)
		move.b	d2,$24(a0)
		cmp.b	(a1),d2
		bcc.s	loc_52F44
		move.b	d2,$2E(a0)

locret_52F42:
		rts
; ---------------------------------------------------------------------------

loc_52F44:
		move.b	$2F(a0),d0
		addq.b	#1,d0
		move.b	d0,$2F(a0)
		cmp.b	1(a1),d0
		bcs.s	locret_52F42
		bclr	#5,$38(a0)
		clr.b	$2F(a0)
		movea.l	$34(a0),a2
		jmp	(a2)

; =============== S U B R O U T I N E =======================================


Swing_UpAndDown:
		move.w	$40(a0),d0
		move.w	$1A(a0),d1
		move.w	$3E(a0),d2
		moveq	#0,d3
		btst	#0,$38(a0)
		bne.s	loc_52F90
		neg.w	d0
		add.w	d0,d1
		neg.w	d2
		cmp.w	d2,d1
		bgt.s	loc_52FA2
		bset	#0,$38(a0)
		neg.w	d0
		neg.w	d2
		moveq	#1,d3

loc_52F90:
		add.w	d0,d1
		cmp.w	d2,d1
		blt.s	loc_52FA2
		bclr	#0,$38(a0)
		neg.w	d0
		add.w	d0,d1
		moveq	#1,d3

loc_52FA2:
		move.w	d1,$1A(a0)
		rts
; End of function Swing_UpAndDown


; =============== S U B R O U T I N E =======================================


Swing_LeftAndRight:
		move.w	$3C(a0),d0
		move.w	$18(a0),d1
		move.w	$3A(a0),d2
		moveq	#0,d3
		btst	#3,$38(a0)
		bne.s	loc_52FD4
		neg.w	d0
		add.w	d0,d1
		neg.w	d2
		cmp.w	d2,d1
		bgt.s	loc_52FE6
		bset	#3,$38(a0)
		neg.w	d0
		neg.w	d2
		moveq	#1,d3

loc_52FD4:
		add.w	d0,d1
		cmp.w	d2,d1
		blt.s	loc_52FE6
		bclr	#3,$38(a0)
		neg.w	d0
		add.w	d0,d1
		moveq	#1,d3

loc_52FE6:
		move.w	d1,$18(a0)
		rts
; End of function Swing_LeftAndRight


; =============== S U B R O U T I N E =======================================


Swing_UpAndDown_Count:
		bsr.w	Swing_UpAndDown
		tst.w	d3
		beq.s	locret_53006
		move.b	$39(a0),d2
		subq.b	#1,d2
		move.b	d2,$39(a0)
		bmi.s	loc_53004
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

loc_53004:
		moveq	#1,d0

locret_53006:
		rts
; End of function Swing_UpAndDown_Count


; =============== S U B R O U T I N E =======================================


Obj_Wait:
		subq.w	#1,$2E(a0)
		bmi.s	loc_53010
		rts
; ---------------------------------------------------------------------------

loc_53010:
		movea.l	$34(a0),a1
		jmp	(a1)
; End of function Obj_Wait


; =============== S U B R O U T I N E =======================================


ObjHitFloor_DoRoutine:
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bmi.s	loc_53024
		beq.s	loc_53024
		rts
; ---------------------------------------------------------------------------

loc_53024:
		add.w	d1,$14(a0)
		movea.l	$34(a0),a1
		jmp	(a1)
; End of function ObjHitFloor_DoRoutine


; =============== S U B R O U T I N E =======================================


ObjHitFloor2_DoRoutine:
		move.w	$18(a0),d3
		ext.l	d3
		lsl.l	#8,d3
		add.l	$10(a0),d3
		swap	d3
		jsr	(ObjCheckFloorDist2).l
		cmpi.w	#-1,d1
		blt.s	loc_53054
		cmpi.w	#$C,d1
		bge.s	loc_53054
		add.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_53054:
		movea.l	$34(a0),a1
		jmp	(a1)
; End of function ObjHitFloor2_DoRoutine


; =============== S U B R O U T I N E =======================================


ObjHitWall_DoRoutine:
		jsr	(ObjCheckRightWallDist).l
		tst.w	d1
		bmi.s	loc_53066
		rts
; ---------------------------------------------------------------------------

loc_53066:
		add.w	d1,$10(a0)
		movea.l	$34(a0),a1
		jmp	(a1)
; End of function ObjHitWall_DoRoutine

; ---------------------------------------------------------------------------

ObjHitWall2_DoRoutine:
		jsr	(ObjCheckLeftWallDist).l
		tst.w	d1
		bmi.s	loc_5307C
		rts
; ---------------------------------------------------------------------------

loc_5307C:
		add.w	d1,$10(a0)
		movea.l	$34(a0),a1
		jmp	(a1)
; ---------------------------------------------------------------------------

Draw_And_Touch_Sprite:
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Child_Draw_Sprite:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_530A4
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_530A4:
		bra.w	Go_Delete_Sprite
; ---------------------------------------------------------------------------

Child_DrawTouch_Sprite:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_530C0
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_530C0:
		bra.w	Go_Delete_Sprite
; ---------------------------------------------------------------------------

Child_Remember_Draw_Sprite:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_530D6
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_530D6:
		bsr.w	Remove_From_TrackingSlot
		bra.w	Go_Delete_Sprite
; ---------------------------------------------------------------------------

Child_Draw_Sprite2:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_530F0
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_530F0:
		bra.w	Go_Delete_Sprite_2
; ---------------------------------------------------------------------------

Child_DrawTouch_Sprite2:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_53114
		btst	#7,$2A(a1)
		bne.s	loc_5310E
		jsr	(Add_SpriteToCollisionResponseList).l

loc_5310E:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_53114:
		bra.w	Go_Delete_Sprite_2
; ---------------------------------------------------------------------------

Child_Draw_Sprite_FlickerMove:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_5312A
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5312A:
		bset	#7,$2A(a0)
		move.l	#Obj_FlickerMove,(a0)
		clr.b	$28(a0)
		bsr.w	Set_IndexedVelocity
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Child_Draw_Sprite2_FlickerMove:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_5312A
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Child_DrawTouch_Sprite_FlickerMove:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_5312A
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Child_DrawTouch_Sprite2_FlickerMove:
		movea.w	$46(a0),a1
		btst	#4,$38(a1)
		bne.s	loc_5312A
		btst	#7,$2A(a1)
		beq.s	loc_5318E
		bset	#7,$2A(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5318E:
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_IncLevEndXGradual:
		move.w	(Camera_max_X_pos).w,d0
		move.l	$30(a0),d1
		addi.l	#$4000,d1
		move.l	d1,$30(a0)
		swap	d1
		add.w	d1,d0
		cmp.w	(Target_camera_max_X_pos).w,d0
		bcc.s	loc_531BC
		move.w	d0,(Camera_max_X_pos).w
		rts
; ---------------------------------------------------------------------------

loc_531BC:
		move.w	(Target_camera_max_X_pos).w,(Camera_max_X_pos).w

loc_531C2:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_DecLevStartXGradual:
		move.w	(Camera_min_X_pos).w,d0
		move.l	$30(a0),d1
		addi.l	#$4000,d1
		move.l	d1,$30(a0)
		swap	d1
		sub.w	d1,d0
		cmp.w	(Target_camera_min_X_pos).w,d0
		ble.s	loc_531EA
		move.w	d0,(Camera_min_X_pos).w
		rts
; ---------------------------------------------------------------------------

loc_531EA:
		move.w	(Target_camera_min_X_pos).w,(Camera_min_X_pos).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_DecLevStartYGradual:
		move.w	(Camera_min_Y_pos).w,d0
		move.l	$30(a0),d1
		addi.l	#$4000,d1
		move.l	d1,$30(a0)
		swap	d1
		sub.w	d1,d0
		cmp.w	(Target_camera_min_Y_pos).w,d0
		ble.s	loc_53218
		move.w	d0,(Camera_min_Y_pos).w
		rts
; ---------------------------------------------------------------------------

loc_53218:
		move.w	(Target_camera_min_Y_pos).w,(Camera_min_Y_pos).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_IncLevEndYGradual:
		move.w	(Camera_max_Y_pos).w,d0
		move.l	$30(a0),d1
		addi.l	#$8000,d1
		move.l	d1,$30(a0)
		swap	d1
		add.w	d1,d0
		cmp.w	(Target_camera_max_Y_pos).w,d0
		bgt.s	loc_53246
		move.w	d0,(Camera_max_Y_pos).w
		rts
; ---------------------------------------------------------------------------

loc_53246:
		move.w	(Target_camera_max_Y_pos).w,(Camera_max_Y_pos).w
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
Child6_IncLevX:	dc.w 0
		dc.l Obj_IncLevEndXGradual
Child6_DecLevX:	dc.w 0
		dc.l Obj_DecLevStartXGradual
Child6_DecLevY:	dc.w 0
		dc.l Obj_DecLevStartYGradual
Child6_IncLevY:	dc.w 0
		dc.l Obj_IncLevEndYGradual

; =============== S U B R O U T I N E =======================================


Find_SonicTails:
		moveq	#0,d0
		moveq	#0,d1
		lea	(Player_1).w,a1
		move.w	$10(a0),d2
		sub.w	$10(a1),d2
		bpl.s	loc_53280
		neg.w	d2
		addq.w	#2,d0

loc_53280:
		lea	(Player_2).w,a2
		move.w	$10(a0),d3
		sub.w	$10(a2),d3
		bpl.s	loc_53292
		neg.w	d3
		addq.w	#2,d1

loc_53292:
		cmp.w	d3,d2
		bls.s	loc_5329C
		movea.l	a2,a1
		move.w	d1,d0
		move.w	d3,d2

loc_5329C:
		moveq	#0,d1
		move.w	$14(a0),d3
		sub.w	$14(a1),d3
		bpl.s	locret_532AC
		neg.w	d3
		addq.w	#2,d1

locret_532AC:
		rts
; End of function Find_SonicTails


; =============== S U B R O U T I N E =======================================


Change_FlipX:
		bclr	#0,4(a0)
		tst.w	d0
		beq.s	locret_532BE
		bset	#0,4(a0)

locret_532BE:
		rts
; End of function Change_FlipX


; =============== S U B R O U T I N E =======================================


Change_FlipXWithVelocity:
		bclr	#0,4(a0)
		tst.w	$18(a0)
		bmi.s	locret_532D2
		bset	#0,4(a0)

locret_532D2:
		rts
; End of function Change_FlipXWithVelocity


; =============== S U B R O U T I N E =======================================


Change_FlipXUseParent:
		bclr	#0,4(a0)
		movea.w	$46(a0),a1
		btst	#0,4(a1)
		beq.s	locret_532EC
		bset	#0,4(a0)

locret_532EC:
		rts
; End of function Change_FlipXUseParent


; =============== S U B R O U T I N E =======================================


Find_OtherObject:
		moveq	#0,d0
		moveq	#0,d1
		move.w	$10(a0),d2
		sub.w	$10(a1),d2
		bpl.s	loc_53300
		neg.w	d2
		addq.w	#2,d0

loc_53300:
		moveq	#0,d1
		move.w	$14(a0),d3
		sub.w	$14(a1),d3
		bpl.s	locret_53310
		neg.w	d3
		addq.w	#2,d1

locret_53310:
		rts
; End of function Find_OtherObject


; =============== S U B R O U T I N E =======================================


MoveSprite_LightGravity:
		moveq	#$20,d1
		move.w	$18(a0),d0
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$10(a0)
		move.w	$1A(a0),d0
		add.w	d1,$1A(a0)
		ext.l	d0
		lsl.l	#8,d0
		add.l	d0,$14(a0)
		rts
; End of function MoveSprite_LightGravity


; =============== S U B R O U T I N E =======================================


MoveSprite_CircularSimple:
		move.b	$3C(a0),d0
		jsr	(GetSineCosine).l
		asr.w	d2,d0
		asr.w	d2,d1
		movea.w	$46(a0),a1
		move.w	$10(a1),d2
		move.w	$14(a1),d3
		add.w	d0,d2
		add.w	d1,d3
		move.w	d2,$10(a0)
		move.w	d3,$14(a0)
		rts
; End of function MoveSprite_CircularSimple


; =============== S U B R O U T I N E =======================================


MoveSprite_CircularSimpleOffset:
		move.b	$3C(a0),d0
		jsr	(GetSineCosine).l
		asr.w	d2,d0
		asr.w	d2,d1
		movea.w	$46(a0),a1
		move.w	$10(a1),d2
		move.w	$14(a1),d3
		move.b	$42(a0),d4
		ext.w	d4
		add.w	d4,d2
		move.b	$43(a0),d4
		ext.w	d4
		add.w	d4,d3
		add.w	d0,d2
		add.w	d1,d3
		move.w	d2,$10(a0)
		move.w	d3,$14(a0)
		rts
; End of function MoveSprite_CircularSimpleOffset


; =============== S U B R O U T I N E =======================================


MoveSprite_AtAngleLookup:
		moveq	#0,d0
		move.b	$3C(a0),d0
		move.w	d0,d1
		andi.w	#$3F,d0
		lsr.w	#5,d1
		andi.w	#6,d1
		movea.w	$46(a0),a1
		lea	$40(a2),a3
		move.w	$10(a1),d2
		move.w	$14(a1),d3
		move.w	d0,d4
		not.w	d4
		move.w	AtAngle_LookupIndex(pc,d1.w),d1
		jsr	AtAngle_LookupIndex(pc,d1.w)
		add.w	d5,d2
		add.w	d6,d3
		move.w	d2,$10(a0)
		move.w	d3,$14(a0)
		rts
; End of function MoveSprite_AtAngleLookup

; ---------------------------------------------------------------------------
AtAngle_LookupIndex:dc.w AtAngle_00_3F-AtAngle_LookupIndex
		dc.w AtAngle_40_7F-AtAngle_LookupIndex
		dc.w AtAngle_80_BF-AtAngle_LookupIndex
		dc.w AtAngle_C0_FF-AtAngle_LookupIndex
; ---------------------------------------------------------------------------

AtAngle_00_3F:
		moveq	#0,d5
		move.b	(a2,d0.w),d5
		moveq	#0,d6
		move.b	(a3,d4.w),d6
		rts
; ---------------------------------------------------------------------------

AtAngle_40_7F:
		moveq	#0,d5
		move.b	(a3,d4.w),d5
		moveq	#0,d6
		move.b	(a2,d0.w),d6
		neg.w	d6
		rts
; ---------------------------------------------------------------------------

AtAngle_80_BF:
		moveq	#0,d5
		move.b	(a2,d0.w),d5
		neg.w	d5
		moveq	#0,d6
		move.b	(a3,d4.w),d6
		neg.w	d6
		rts
; ---------------------------------------------------------------------------

AtAngle_C0_FF:
		moveq	#0,d5
		move.b	(a3,d4.w),d5
		neg.w	d5
		moveq	#0,d6
		move.b	(a2,d0.w),d6
		rts

; =============== S U B R O U T I N E =======================================


MoveSprite_CircularLookup:
		moveq	#0,d0
		move.b	$3C(a0),d0
		move.w	d0,d1
		andi.w	#$3F,d0
		lsr.w	#5,d1
		andi.w	#6,d1
		movea.w	$46(a0),a1
		lea	$40(a2),a3
		move.w	$10(a1),d2
		move.w	$14(a1),d3
		move.b	$42(a0),d4
		ext.w	d4
		btst	#0,4(a0)
		beq.s	loc_53448
		neg.w	d4

loc_53448:
		add.w	d4,d2
		move.b	$43(a0),d4
		ext.w	d4
		add.w	d4,d3
		move.w	d0,d4
		not.w	d4
		lea	AtAngle_LookupIndex(pc),a4
		move.w	(a4,d1.w),d1
		jsr	(a4,d1.w)
		btst	#0,4(a0)
		beq.s	loc_5346C
		neg.w	d5

loc_5346C:
		add.w	d5,d2
		add.w	d6,d3
		move.w	d2,$10(a0)
		move.w	d3,$14(a0)
		rts
; End of function MoveSprite_CircularLookup


; =============== S U B R O U T I N E =======================================


MoveSprite_AngleYLookup:
		moveq	#0,d0
		move.b	$3C(a0),d0
		move.w	d0,d1
		andi.w	#$3F,d0
		lsr.w	#5,d1
		andi.w	#6,d1
		movea.w	$46(a0),a1
		lea	$40(a2),a3
		move.w	$14(a1),d3
		move.w	d0,d4
		not.w	d4
		move.w	AngleY_LookupIndex(pc,d1.w),d1
		jsr	AngleY_LookupIndex(pc,d1.w)
		add.w	d1,d3
		move.w	d3,$14(a0)
		rts
; End of function MoveSprite_AngleYLookup

; ---------------------------------------------------------------------------
AngleY_LookupIndex:dc.w	loc_534B4-AngleY_LookupIndex
		dc.w loc_534BC-AngleY_LookupIndex
		dc.w loc_534C6-AngleY_LookupIndex
		dc.w loc_534D0-AngleY_LookupIndex
; ---------------------------------------------------------------------------

loc_534B4:
		moveq	#0,d1
		move.b	(a3,d4.w),d1
		rts
; ---------------------------------------------------------------------------

loc_534BC:
		moveq	#0,d1
		move.b	(a2,d0.w),d1
		neg.w	d1
		rts
; ---------------------------------------------------------------------------

loc_534C6:
		moveq	#0,d1
		move.b	(a3,d4.w),d1
		neg.w	d1
		rts
; ---------------------------------------------------------------------------

loc_534D0:
		moveq	#0,d1
		move.b	(a2,d0.w),d1
		rts

; =============== S U B R O U T I N E =======================================


MoveSprite_AngleXLookupOffset:
		moveq	#0,d0
		move.b	$3C(a0),d0
		move.b	d0,d1
		rol.b	#3,d1
		andi.w	#6,d1
		move.w	AngleX_LookupIndex(pc,d1.w),d2
		jmp	AngleX_LookupIndex(pc,d2.w)
; End of function MoveSprite_AngleXLookupOffset

; ---------------------------------------------------------------------------
AngleX_LookupIndex:dc.w	loc_534F6-AngleX_LookupIndex
		dc.w loc_534FE-AngleX_LookupIndex
		dc.w loc_5350A-AngleX_LookupIndex
		dc.w loc_5351A-AngleX_LookupIndex
; ---------------------------------------------------------------------------

loc_534F6:
		move.b	(a1,d0.w),d1
		bra.w	loc_5352A
; ---------------------------------------------------------------------------

loc_534FE:
		moveq	#$7F,d1
		sub.w	d0,d1
		move.b	(a1,d1.w),d1
		bra.w	loc_5352A
; ---------------------------------------------------------------------------

loc_5350A:
		move.w	d0,d1
		andi.w	#$3F,d1
		move.b	(a1,d1.w),d1
		neg.w	d1
		bra.w	loc_5352A
; ---------------------------------------------------------------------------

loc_5351A:
		move.w	#$FF,d1
		sub.w	d0,d1
		move.b	(a1,d1.w),d1
		neg.w	d1
		bra.w	loc_5352A
; ---------------------------------------------------------------------------

loc_5352A:
		movea.w	$46(a0),a1
		move.w	$10(a1),d2
		move.b	$42(a0),d3
		ext.w	d3
		add.w	d3,d2
		add.w	d1,d2
		move.w	d2,$10(a0)
		move.w	$14(a1),d2
		move.b	$43(a0),d3
		ext.w	d3
		add.w	d3,d2
		move.w	d2,$14(a0)
		rts
; ---------------------------------------------------------------------------
		moveq	#0,d0
		move.b	$3C(a0),d0
		move.b	d0,d1
		rol.b	#3,d1
		andi.w	#6,d1
		move.w	off_53568(pc,d1.w),d2
		jmp	off_53568(pc,d2.w)
; ---------------------------------------------------------------------------
off_53568:	dc.w loc_53570-off_53568
		dc.w loc_53578-off_53568
		dc.w loc_53584-off_53568
		dc.w loc_53594-off_53568
; ---------------------------------------------------------------------------

loc_53570:
		move.b	(a1,d0.w),d1
		bra.w	loc_535A4
; ---------------------------------------------------------------------------

loc_53578:
		moveq	#$7F,d1
		sub.w	d0,d1
		move.w	(a1,d1.w),d1
		bra.w	loc_535A4
; ---------------------------------------------------------------------------

loc_53584:
		move.w	d0,d1
		andi.w	#$3F,d1
		move.w	(a1,d1.w),d1
		neg.w	d1
		bra.w	loc_535A4
; ---------------------------------------------------------------------------

loc_53594:
		move.w	#$FF,d1
		sub.w	d0,d1
		move.w	(a1,d1.w),d1
		neg.w	d1
		bra.w	loc_535A4
; ---------------------------------------------------------------------------

loc_535A4:
		movea.w	$46(a0),a1
		move.w	$10(a1),d2
		move.b	$42(a0),d3
		ext.w	d3
		add.w	d3,d2
		move.w	d2,$10(a0)
		move.w	$14(a1),d2
		move.b	$43(a0),d3
		ext.w	d3
		add.w	d3,d2
		add.w	d1,d2
		move.w	d2,$14(a0)
		rts
; ---------------------------------------------------------------------------
		subq.w	#1,$2E(a0)
		bmi.w	Go_Delete_Sprite
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		subq.w	#1,$2E(a0)
		bmi.w	Go_Delete_Sprite
		jsr	(MoveSprite).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

MoveDraw_SpriteTimed:
		subq.w	#1,$2E(a0)
		bmi.w	Go_Delete_Sprite
		jsr	(MoveSprite2).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

MoveDraw_SpriteTimed2:
		subq.w	#1,$2E(a0)
		bmi.w	Go_Delete_Sprite
		jsr	(MoveSprite_LightGravity).l
		bra.w	Draw_And_Touch_Sprite

; =============== S U B R O U T I N E =======================================


TimedSprite_ScreenLock:
		subq.w	#1,$2E(a0)
		bmi.s	loc_5361C
		rts
; ---------------------------------------------------------------------------

loc_5361C:
		move.b	#1,(Boss_flag).w
		bra.w	Go_Delete_Sprite_2
; End of function TimedSprite_ScreenLock


; =============== S U B R O U T I N E =======================================


BossFlash:
		lea	(Normal_palette_line_2+2).w,a1
		moveq	#0,d0
		tst.w	(a1)
		bne.s	loc_53634
		move.w	#$EEE,d0

loc_53634:
		move.w	d0,(a1)
		rts
; End of function BossFlash


; =============== S U B R O U T I N E =======================================


SetUp_ObjAttributesSlotted:
		moveq	#0,d0
		move.w	(a1)+,d1
		move.w	d1,d2
		move.w	(a1)+,d3
		move.w	(a1)+,d4
		moveq	#0,d5
		move.w	(a1)+,d5
		lea	(Slotted_object_bits).w,a2
		adda.w	d5,a2
		move.b	(a2),d5
		beq.s	loc_53678

loc_53650:
		lsr.b	#1,d5
		bcc.s	loc_53678
		addq.w	#1,d0
		add.w	d4,d3
		dbf	d1,loc_53650
		moveq	#0,d0
		move.l	d0,(a0)
		move.l	d0,$10(a0)
		move.l	d0,$14(a0)
		move.b	d0,$2C(a0)
		move.b	d0,4(a0)
		move.w	d0,$2A(a0)
		addq.w	#8,sp
		rts
; ---------------------------------------------------------------------------

loc_53678:
		bset	d0,(a2)
		move.b	d0,$3B(a0)
		move.w	a2,$3C(a0)
		move.w	d3,$A(a0)
		move.l	(a1)+,$C(a0)
		move.w	(a1)+,8(a0)
		move.b	(a1)+,7(a0)
		move.b	(a1)+,6(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,$28(a0)
		bset	#2,$2A(a0)
		move.b	#-1,$3A(a0)
		bset	#2,4(a0)
		addq.b	#2,5(a0)
		rts
; End of function SetUp_ObjAttributesSlotted


; =============== S U B R O U T I N E =======================================


Perform_DPLC:
		moveq	#0,d0
		move.b	$22(a0),d0
		cmp.b	$3A(a0),d0
		beq.s	locret_53702
		move.b	d0,$3A(a0)
		movea.l	(a2)+,a3
		move.w	$A(a0),d4
		andi.w	#$7FF,d4
		lsl.w	#5,d4
		movea.l	(a2)+,a2
		add.w	d0,d0
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d5
		moveq	#0,d3

loc_536DE:
		move.w	(a2)+,d3
		move.l	d3,d1
		andi.w	#-$10,d1
		add.w	d1,d1
		add.l	a3,d1
		move.w	d4,d2
		andi.w	#$F,d3
		addq.w	#1,d3
		lsl.w	#4,d3
		add.w	d3,d4
		add.w	d3,d4
		jsr	(Add_To_DMA_Queue).l
		dbf	d5,loc_536DE

locret_53702:
		rts
; End of function Perform_DPLC

; ---------------------------------------------------------------------------

Sprite_CheckDelete:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_5371C
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5371C:
		move.w	$48(a0),d0
		beq.s	loc_53728
		movea.w	d0,a2
		bclr	#7,(a2)

loc_53728:
		bset	#7,$2A(a0)
		move.l	#Delete_Current_Sprite,(a0)
		rts
; ---------------------------------------------------------------------------

Sprite_CheckDelete2:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_5374E
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5374E:
		move.w	$48(a0),d0
		beq.s	loc_5375A
		movea.w	d0,a2
		bclr	#7,(a2)

loc_5375A:
		bset	#4,$38(a0)
		move.l	#Delete_Current_Sprite,(a0)
		rts
; ---------------------------------------------------------------------------
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_5371C
		rts
; ---------------------------------------------------------------------------

Sprite_CheckDeleteXY:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_Sprite
		move.w	$14(a0),d0
		sub.w	(Camera_Y_pos).w,d0
		addi.w	#$80,d0
		cmpi.w	#$200,d0
		bhi.w	Go_Delete_Sprite
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Obj_FlickerMove:
		jsr	(MoveSprite).l
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_Sprite
		move.w	$14(a0),d0
		sub.w	(Camera_Y_pos).w,d0
		addi.w	#$80,d0
		cmpi.w	#$200,d0
		bhi.w	Go_Delete_Sprite
		btst	#0,(V_int_run_count+3).w
		beq.w	locret_529CE
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Sprite_CheckDeleteTouch:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_5371C
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Sprite_CheckDeleteTouch2:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_5374E
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	loc_5371C
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------

Sprite_CheckDeleteTouchXY:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_Sprite
		move.w	$14(a0),d0
		sub.w	(Camera_Y_pos).w,d0
		addi.w	#$80,d0
		cmpi.w	#$200,d0
		bhi.w	Go_Delete_Sprite
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Sprite_CheckDeleteSlotted:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	Go_Delete_SpriteSlotted
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Go_Delete_SpriteSlotted:
		move.w	$48(a0),d0
		beq.s	Go_Delete_SpriteSlotted2
		movea.w	d0,a2
		bclr	#7,(a2)

Go_Delete_SpriteSlotted2:
		move.l	#Delete_Current_Sprite,(a0)
		bset	#7,$2A(a0)

; =============== S U B R O U T I N E =======================================


Remove_From_TrackingSlot:
		move.b	$3B(a0),d0
		movea.w	$3C(a0),a1
		bclr	d0,(a1)
		rts
; End of function Remove_From_TrackingSlot

; ---------------------------------------------------------------------------
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	Go_Delete_SpriteSlotted
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Sprite_CheckDeleteTouchSlotted:
		tst.b	$2A(a0)
		bmi.s	Go_Delete_SpriteSlotted3
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	Go_Delete_SpriteSlotted
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

Go_Delete_SpriteSlotted3:
		move.l	#Delete_Current_Sprite,(a0)
		bra.s	Remove_From_TrackingSlot
; ---------------------------------------------------------------------------
		tst.b	$2A(a0)
		bmi.s	Go_Delete_SpriteSlotted3
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_SpriteSlotted
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_Sprite
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_Sprite
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_Sprite_2
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_Sprite_2
		jsr	(Add_SpriteToCollisionResponseList).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_SpriteSlotted2
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_SpriteSlotted2
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_539C4:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.w	Go_Delete_Sprite_2
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


Go_Delete_Sprite:
		move.l	#Delete_Current_Sprite,(a0)
		bset	#7,$2A(a0)
		rts
; End of function Go_Delete_Sprite


; =============== S U B R O U T I N E =======================================


Go_Delete_Sprite_2:
		move.l	#Delete_Current_Sprite,(a0)
		bset	#4,$38(a0)
		rts
; End of function Go_Delete_Sprite_2


; =============== S U B R O U T I N E =======================================


Set_IndexedVelocity:
		moveq	#0,d1
		move.b	$2C(a0),d1
		add.w	d1,d1
		add.w	d1,d0
		lea	Obj_VelocityIndex(pc,d0.w),a1
		move.w	(a1)+,$18(a0)
		move.w	(a1)+,$1A(a0)
		btst	#0,4(a0)
		beq.s	locret_53A1C
		neg.w	$18(a0)

locret_53A1C:
		rts
; End of function Set_IndexedVelocity

; ---------------------------------------------------------------------------
Obj_VelocityIndex:dc.w	$FF00, $FF00
		dc.w   $100, $FF00
		dc.w  $FE00, $FE00
		dc.w   $200, $FE00
		dc.w  $FD00, $FE00
		dc.w   $300, $FE00
		dc.w  $FE00, $FE00
		dc.w      0, $FE00
		dc.w  $FC00, $FD00
		dc.w   $400, $FD00
		dc.w   $300, $FD00
		dc.w  $FC00, $FD00
		dc.w   $400, $FD00
		dc.w  $FE00, $FE00
		dc.w   $200, $FE00
		dc.w      0, $FF00
		dc.w  $FFC0, $F900
		dc.w  $FF80, $F900
		dc.w  $FE80, $F900
		dc.w  $FF00, $F900
		dc.w  $FE00, $F900
		dc.w  $FD80, $F900
		dc.w  $FD00, $F900

; =============== S U B R O U T I N E =======================================


Find_SonicTails8Way:
		bsr.w	Find_SonicTails
		cmp.w	d2,d3
		beq.s	loc_53AD0
		bhi.s	loc_53AAA
		swap	d3
		clr.w	d3
		divu.w	d2,d3
		tst.w	d0
		beq.s	loc_53A9C
		cmpi.w	#-$8000,d2
		bcs.s	loc_53AEC
		tst.w	d0
		beq.s	loc_53AE8
		bra.w	loc_53AF0
; ---------------------------------------------------------------------------

loc_53A9C:
		cmpi.w	#-$8000,d2
		bcs.s	loc_53AFC
		tst.w	d1
		bne.s	loc_53AF8
		bra.w	loc_53B00
; ---------------------------------------------------------------------------

loc_53AAA:
		swap	d2
		clr.w	d2
		divu.w	d3,d2
		tst.w	d1
		bne.s	loc_53AC2
		cmpi.w	#-$8000,d2
		bcs.s	loc_53AE4
		tst.w	d0
		bne.s	loc_53AE8
		bra.w	loc_53B00
; ---------------------------------------------------------------------------

loc_53AC2:
		cmpi.w	#-$8000,d2
		bcs.s	loc_53AF4
		tst.w	d0
		bne.s	loc_53AF0
		bra.w	loc_53AF8
; ---------------------------------------------------------------------------

loc_53AD0:
		tst.w	d0
		beq.s	loc_53ADC
		tst.w	d1
		beq.s	loc_53AE8
		bra.w	loc_53AF0
; ---------------------------------------------------------------------------

loc_53ADC:
		tst.w	d1
		bne.s	loc_53AF8
		bra.w	loc_53B00
; ---------------------------------------------------------------------------

loc_53AE4:
		moveq	#0,d4
		rts
; ---------------------------------------------------------------------------

loc_53AE8:
		moveq	#1,d4
		rts
; ---------------------------------------------------------------------------

loc_53AEC:
		moveq	#2,d4
		rts
; ---------------------------------------------------------------------------

loc_53AF0:
		moveq	#3,d4
		rts
; ---------------------------------------------------------------------------

loc_53AF4:
		moveq	#4,d4
		rts
; ---------------------------------------------------------------------------

loc_53AF8:
		moveq	#5,d4
		rts
; ---------------------------------------------------------------------------

loc_53AFC:
		moveq	#6,d4
		rts
; ---------------------------------------------------------------------------

loc_53B00:
		moveq	#7,d4
		rts
; End of function Find_SonicTails8Way


; =============== S U B R O U T I N E =======================================


Set_VelocityXTrackSonic:
		lea	(Player_1).w,a1
		bsr.w	Find_OtherObject
		bclr	#0,4(a0)
		tst.w	d0
		beq.s	loc_53B1E
		neg.w	d4
		bset	#0,4(a0)

loc_53B1E:
		move.w	d4,$18(a0)
		rts
; End of function Set_VelocityXTrackSonic


; =============== S U B R O U T I N E =======================================


Chase_Object:
		move.w	d0,d2
		neg.w	d2
		move.w	d1,d3
		move.w	$10(a0),d4
		cmp.w	$10(a1),d4
		seq	d5
		beq.s	loc_53B4C
		bcs.s	loc_53B3A
		neg.w	d1

loc_53B3A:
		move.w	$18(a0),d4
		add.w	d1,d4
		cmp.w	d2,d4
		blt.s	loc_53B4C
		cmp.w	d0,d4
		bgt.s	loc_53B4C
		move.w	d4,$18(a0)

loc_53B4C:
		move.w	$14(a0),d4
		cmp.w	$14(a1),d4
		beq.s	loc_53B6E
		bcs.s	loc_53B5A
		neg.w	d3

loc_53B5A:
		move.w	$1A(a0),d4
		add.w	d3,d4
		cmp.w	d2,d4
		blt.s	locret_53B6C
		cmp.w	d0,d4
		bgt.s	locret_53B6C
		move.w	d4,$1A(a0)

locret_53B6C:
		rts
; ---------------------------------------------------------------------------

loc_53B6E:
		tst.b	d5
		beq.s	locret_53B6C
		clr.w	$18(a0)
		clr.w	$1A(a0)
		rts
; End of function Chase_Object


; =============== S U B R O U T I N E =======================================


Chase_ObjectXOnly:
		move.w	d0,d2
		neg.w	d2
		move.w	$10(a1),d3
		move.b	$42(a0),d4
		ext.w	d4
		add.w	d4,d3
		cmp.w	$10(a0),d3
		bcc.s	loc_53B94
		neg.w	d1

loc_53B94:
		move.w	$18(a0),d3
		add.w	d1,d3
		cmp.w	d2,d3
		blt.s	locret_53BA6
		cmp.w	d0,d3
		bgt.s	locret_53BA6
		move.w	d3,$18(a0)

locret_53BA6:
		rts
; End of function Chase_ObjectXOnly


; =============== S U B R O U T I N E =======================================


Chase_ObjectYOnly:
		move.w	d0,d2
		neg.w	d2
		move.w	$14(a1),d3
		move.b	$43(a0),d4
		ext.w	d4
		add.w	d4,d3
		cmp.w	$14(a0),d3
		bcc.s	loc_53BC0
		neg.w	d1

loc_53BC0:
		move.w	$1A(a0),d3
		add.w	d1,d3
		cmp.w	d2,d3
		blt.s	locret_53BD2
		cmp.w	d0,d3
		bgt.s	locret_53BD2
		move.w	d3,$1A(a0)

locret_53BD2:
		rts
; End of function Chase_ObjectYOnly

; ---------------------------------------------------------------------------
		move.w	d0,d2
		neg.w	d2
		move.w	d1,d3
		move.w	$10(a1),d6
		move.b	$42(a0),d4
		ext.w	d4
		add.w	d4,d6
		cmp.w	$10(a0),d6
		seq	d5
		beq.s	loc_53C04
		bcc.s	loc_53BF2
		neg.w	d1

loc_53BF2:
		move.w	$18(a0),d4
		add.w	d1,d4
		cmp.w	d2,d4
		blt.s	loc_53C04
		cmp.w	d0,d4
		bgt.s	loc_53C04
		move.w	d4,$18(a0)

loc_53C04:
		move.w	$14(a1),d6
		move.b	$43(a0),d4
		ext.w	d4
		add.w	d4,d6
		cmp.w	$14(a0),d6
		beq.s	loc_53C2E
		bcc.s	loc_53C1A
		neg.w	d3

loc_53C1A:
		move.w	$1A(a0),d4
		add.w	d3,d4
		cmp.w	d2,d4
		blt.s	locret_53C2C
		cmp.w	d0,d4
		bgt.s	locret_53C2C
		move.w	d4,$1A(a0)

locret_53C2C:
		rts
; ---------------------------------------------------------------------------

loc_53C2E:
		tst.b	d5
		beq.s	locret_53C2C
		clr.w	$18(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

Obj_FadeSelectedFromBlack:
		move.l	#loc_53C4E,(a0)
		move.b	#7,$39(a0)
		move.b	#3,$2F(a0)

loc_53C4E:
		subq.b	#1,$2E(a0)
		bmi.s	loc_53C56
		rts
; ---------------------------------------------------------------------------

loc_53C56:
		subq.b	#1,$39(a0)
		bmi.w	loc_531C2
		move.b	$2F(a0),$2E(a0)
		lea	(Normal_palette_line_2).w,a1
		lea	(Target_palette_line_2).w,a2
		moveq	#$E,d4
		moveq	#-$20,d5
		moveq	#$1F,d6

loc_53C72:
		bsr.w	IncColor_Obj
		dbf	d6,loc_53C72
		rts

; =============== S U B R O U T I N E =======================================


IncColor_Obj:
		move.b	(a1),d0
		and.b	d4,d0
		move.b	(a2)+,d1
		and.b	d4,d1
		cmp.b	d1,d0
		bcc.s	loc_53C8A
		addq.b	#2,d0

loc_53C8A:
		move.b	d0,(a1)+
		move.b	(a1),d0
		move.b	d0,d1
		and.b	d5,d0
		move.b	(a2)+,d2
		move.b	d2,d3
		and.b	d5,d2
		cmp.b	d2,d0
		bcc.s	loc_53CA0
		addi.b	#$20,d0

loc_53CA0:
		and.b	d4,d1
		and.b	d4,d3
		cmp.b	d3,d1
		bcc.s	loc_53CAA
		addq.b	#2,d1

loc_53CAA:
		or.b	d0,d1
		move.b	d1,(a1)+
		rts
; End of function IncColor_Obj

; ---------------------------------------------------------------------------

MoveFall_AnimateRaw:
		jsr	(MoveSprite).l
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

Move_AnimateRaw:
		jsr	(MoveSprite2).l
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

MoveSlowFall_AnimateRaw:
		jsr	MoveSprite_LightGravity(pc)
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------
		jsr	Swing_UpAndDown(pc)

; =============== S U B R O U T I N E =======================================


Move_AnimateRaw_Wait:
		jsr	(MoveSprite2).l

loc_53CD6:
		jsr	Animate_Raw(pc)
		jmp	Obj_Wait(pc)
; End of function Move_AnimateRaw_Wait

; ---------------------------------------------------------------------------

Refresh_ChildPosWait:
		jsr	Refresh_ChildPosition(pc)

Wait_Draw:
		jsr	Obj_Wait(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

MoveWaitTouch:
		jsr	(MoveSprite2).l
		jsr	Obj_Wait(pc)
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_53CFA:
		jsr	Refresh_ChildPosition(pc)

AnimateRaw_DrawTouch:
		jsr	Animate_RawMultiDelay(pc)
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

AnimateRaw_MoveChkDel:
		jsr	Animate_Raw(pc)

MoveChkDel:
		jsr	(MoveSprite).l
		jmp	Sprite_CheckDeleteXY(pc)
; ---------------------------------------------------------------------------
		jsr	Animate_Raw(pc)

MoveTouchChkDel:
		jsr	(MoveSprite).l
		jmp	Sprite_CheckDeleteTouchXY(pc)
; ---------------------------------------------------------------------------

Move_WaitNoFall:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

Swing_MoveWaitNoFall:
		jsr	Swing_UpAndDown(pc)
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------
		jsr	Animate_Raw(pc)
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
		jsr	Animate_Raw(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		jsr	(MoveSprite2).l
		jsr	Animate_Raw(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
		jsr	Animate_Raw(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

EnemyDefeat_Score:
		bset	#7,$2A(a0)
		movea.w	$44(a0),a1
		moveq	#0,d0
		move.w	(Chain_bonus_counter).w,d0
		addq.w	#2,(Chain_bonus_counter).w
		cmpi.w	#6,d0
		bcs.s	loc_53D88
		moveq	#6,d0

loc_53D88:
		move.w	d0,$3E(a0)
		move.w	word_53DE8(pc,d0.w),d0
		cmpi.w	#$20,(Chain_bonus_counter).w
		bcs.s	loc_53DA2
		move.w	#$3E8,d0
		move.w	#$A,$3E(a0)

loc_53DA2:
		movea.w	a1,a3
		jsr	(HUD_AddToScore).l
		move.l	#Obj_Explosion,(a0)
		move.b	#0,5(a0)
		tst.w	$1A(a1)
		bmi.s	loc_53DD0
		move.w	$14(a1),d0
		cmp.w	$14(a0),d0
		bcc.s	loc_53DDC
		neg.w	$1A(a1)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_53DD0:
		addi.w	#$100,$1A(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_53DDC:
		subi.w	#$100,$1A(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
word_53DE8:	dc.w $A
		dc.w $14
		dc.w $32
		dc.w $64

; =============== S U B R O U T I N E =======================================


Check_LRControllerShake:
		subq.b	#1,$3D(a0)
		bpl.s	loc_53E02
		move.b	#5,$3C(a0)
		move.b	#$3C,$3D(a0)

loc_53E02:
		movea.w	$3E(a0),a2
		move.w	(a2),d0
		andi.w	#$C,d0
		beq.s	locret_53E26
		move.w	$3A(a0),d1
		move.w	d0,$3A(a0)
		andi.w	#$C,d1
		eor.w	d1,d0
		beq.s	locret_53E26
		subq.b	#1,$3C(a0)
		bmi.s	locret_53E26
		moveq	#0,d0

locret_53E26:
		rts
; End of function Check_LRControllerShake


; =============== S U B R O U T I N E =======================================


Check_PlayerCollision:
		move.b	$29(a0),d0
		beq.s	locret_53E50
		clr.b	$29(a0)
		move.w	$46(a0),d1
		beq.s	loc_53E40
		movea.w	d1,a1
		bset	#0,$38(a1)

loc_53E40:
		andi.w	#3,d0
		add.w	d0,d0
		movea.w	word_53E52-2(pc,d0.w),a1
		move.w	a1,$44(a0)
		moveq	#1,d1

locret_53E50:
		rts
; End of function Check_PlayerCollision

; ---------------------------------------------------------------------------
word_53E52:	dc.w Player_1
		dc.w Player_2
		dc.w Player_1

; =============== S U B R O U T I N E =======================================


Check_PlayerInRange:
		moveq	#0,d0
		lea	(Player_2).w,a2
		move.w	$10(a2),d1
		move.w	$14(a2),d2
		move.w	$10(a0),d3
		move.w	$14(a0),d4
		add.w	(a1)+,d3
		move.w	d3,d5
		add.w	(a1)+,d5
		add.w	(a1)+,d4
		move.w	d4,d6
		add.w	(a1)+,d6
		bsr.w	sub_53E8C
		swap	d0
		lea	(Player_1).w,a2
		move.w	$10(a2),d1
		move.w	$14(a2),d2
; End of function Check_PlayerInRange


; =============== S U B R O U T I N E =======================================


sub_53E8C:
		cmp.w	d3,d1
		bcs.s	locret_53E9E
		cmp.w	d5,d1
		bcc.s	locret_53E9E
		cmp.w	d4,d2
		bcs.s	locret_53E9E
		cmp.w	d6,d2
		bcc.s	locret_53E9E
		move.w	a2,d0

locret_53E9E:
		rts
; End of function sub_53E8C


; =============== S U B R O U T I N E =======================================


PalLoad_Line1:
		lea	(Normal_palette_line_2).w,a2
		moveq	#7,d0

loc_53EA6:
		move.l	(a1)+,(a2)+
		dbf	d0,loc_53EA6
		rts
; End of function PalLoad_Line1


; =============== S U B R O U T I N E =======================================


Displace_PlayerOffObject:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	locret_53EE8
		bclr	#3,$2A(a0)
		beq.s	loc_53ED0
		lea	(Player_1).w,a1
		bclr	#3,$2A(a1)
		bset	#1,$2A(a1)

loc_53ED0:
		bclr	#4,$2A(a0)
		beq.s	locret_53EE8
		lea	(Player_2).w,a1
		bclr	#4,$2A(a1)
		bset	#1,$2A(a1)

locret_53EE8:
		rts
; End of function Displace_PlayerOffObject


; =============== S U B R O U T I N E =======================================


Run_PalRotationScript:
		lea	(Palette_rotation_data).w,a1

loc_53EEE:
		move.w	(a1),d0
		beq.s	locret_53F32
		subq.b	#1,2(a1)
		bpl.s	loc_53F22
		movea.l	4(a1),a2
		movea.w	(a2),a3
		lea	(a2,d0.w),a4
		move.w	(a4),d1
		bpl.s	loc_53F0A
		bsr.w	sub_53F26

loc_53F0A:
		moveq	#0,d2
		move.b	2(a2),d2

loc_53F10:
		move.w	(a4)+,(a3)+
		dbf	d2,loc_53F10
		move.w	(a4)+,d0
		move.b	d0,2(a1)
		move.l	a4,d0
		sub.l	a2,d0
		move.w	d0,(a1)

loc_53F22:
		addq.w	#8,a1
		bra.s	loc_53EEE
; End of function Run_PalRotationScript


; =============== S U B R O U T I N E =======================================


sub_53F26:
		move.b	3(a2),d2
		bne.s	loc_53F34
		moveq	#4,d0
		lea	(a2,d0.w),a4

locret_53F32:
		rts
; ---------------------------------------------------------------------------

loc_53F34:
		neg.w	d1
		jmp	locret_53F32(pc,d1.w)
; End of function sub_53F26

; ---------------------------------------------------------------------------
		bra.w	loc_53F42
; ---------------------------------------------------------------------------
		bra.w	loc_53F64
; ---------------------------------------------------------------------------

loc_53F42:
		addq.b	#1,3(a1)
		cmp.b	3(a1),d2
		bhi.s	loc_53F5C
		move.w	2(a4),d2
		adda.w	d2,a2
		move.l	a2,4(a1)
		movea.w	(a2),a3
		clr.w	2(a1)

loc_53F5C:
		moveq	#4,d0
		lea	(a2,d0.w),a4
		rts
; ---------------------------------------------------------------------------

loc_53F64:
		addq.b	#1,3(a1)
		cmp.b	3(a1),d2
		bls.s	loc_53F76
		moveq	#4,d0
		lea	(a2,d0.w),a4
		rts
; ---------------------------------------------------------------------------

loc_53F76:
		movea.l	(Palette_rotation_custom).w,a2
		move.l	a1,-(sp)
		jsr	(a2)
		movea.l	(sp)+,a1
		addq.w	#4,sp
		bra.s	loc_53F22

; =============== S U B R O U T I N E =======================================


Child_GetPriority:
		movea.w	$46(a0),a1
		bclr	#7,$A(a0)
		btst	#7,$A(a1)
		beq.s	loc_53F9C
		bset	#7,$A(a0)

loc_53F9C:
		move.w	8(a1),8(a0)
		rts
; End of function Child_GetPriority


; =============== S U B R O U T I N E =======================================


Child_GetPriorityOnce:
		movea.w	$46(a0),a1
		btst	#7,$A(a1)
		beq.s	locret_53FB8
		bset	#7,$A(a0)
		move.l	(sp),(a0)

locret_53FB8:
		rts
; End of function Child_GetPriorityOnce


; =============== S U B R O U T I N E =======================================


CopyWordData_7:
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+

CopyWordData_6:
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
; End of function CopyWordData_7


; =============== S U B R O U T I N E =======================================


CopyWordData_4:
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
; End of function CopyWordData_4


; =============== S U B R O U T I N E =======================================


CopyWordData_3:
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+

CopyWordData_2:
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		movea.w	(a1)+,a3
		move.w	(a2)+,(a3)+
		rts
; End of function CopyWordData_3


; =============== S U B R O U T I N E =======================================


Obj_WaitOffscreen:
		move.l	#Map_Offscreen,$C(a0)
		bset	#2,4(a0)
		move.b	#$20,7(a0)
		move.b	#$20,6(a0)
		move.l	(sp)+,$34(a0)
		move.l	#loc_53FFC,(a0)

loc_53FFC:
		tst.b	4(a0)
		bmi.s	loc_5402C
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_5401A
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5401A:
		move.w	$48(a0),d0
		beq.s	loc_54026
		movea.w	d0,a2
		bclr	#7,(a2)

loc_54026:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_5402C:
		move.l	$34(a0),(a0)
		rts
; End of function Obj_WaitOffscreen

; ---------------------------------------------------------------------------
Map_Offscreen:	dc.w 0
; ---------------------------------------------------------------------------

Obj_Song_Fade_ToLevelMusic:
		move.w	#$78,$2E(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.l	#loc_54048,(a0)

loc_54048:
		subq.w	#1,$2E(a0)
		bpl.w	locret_529CE
		bsr.w	Obj_PlayLevelMusic
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

Obj_Song_Fade_Transition:
		move.w	#$78,$2E(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		move.l	#loc_5406E,(a0)

loc_5406E:
		subq.w	#1,$2E(a0)
		bpl.w	locret_529CE
		move.b	$2C(a0),d0
		jsr	(Play_Sound).l
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


Obj_PlayLevelMusic:
		moveq	#0,d0
		lea	(Apparent_zone_and_act).w,a1
		move.b	(a1)+,d0
		add.b	d0,d0
		add.b	(a1),d0
		move.b	PlayLevelMusic_Playlist(pc,d0.w),d0
		move.w	d0,(Level_music).w
		btst	#1,(Player_1+status_secondary).w
		beq.s	loc_540A4
		moveq	#signextendB(mus_Invincibility),d0

loc_540A4:
		jmp	(Play_Sound).l
; End of function Obj_PlayLevelMusic

; ---------------------------------------------------------------------------
PlayLevelMusic_Playlist:
		dc.b mus_AIZ1, mus_AIZ2
		dc.b mus_HCZ1, mus_HCZ2
		dc.b mus_MGZ1, mus_MGZ2
		dc.b mus_CNZ1, mus_CNZ2
		dc.b mus_FBZ1, mus_FBZ2
		dc.b mus_ICZ1, mus_ICZ2
		dc.b mus_LBZ1, mus_LBZ2

; =============== S U B R O U T I N E =======================================


Restore_PlayerControl:
		lea	(Player_1).w,a1

Restore_PlayerControl2:
		clr.b	$2E(a1)
		bclr	#1,$2A(a1)
		move.w	#$505,$20(a1)
		clr.b	$23(a1)
		clr.b	$24(a1)
		rts
; End of function Restore_PlayerControl


; =============== S U B R O U T I N E =======================================


Obj_EndSignControl:
		move.l	#Obj_EndSignControlWait,(a0)
		st	(_unkFAA8).w
		bclr	#7,4(a0)
		bset	#4,$38(a0)
		move.w	#$7F,$2E(a0)
		move.l	#Obj_EndSignControlDoSign,$34(a0)
		moveq	#signextendB(mus_FadeOut),d0
		jsr	(Play_Sound).l
		rts
; End of function Obj_EndSignControl

; ---------------------------------------------------------------------------
PLC_EndSignStuff:dc.w 1
		dc.l ArtNem_SignpostStub
		dc.w $D3C0
		dc.l ArtNem_Monitors
		dc.w tiles_to_bytes(ArtTile_Monitors)
; ---------------------------------------------------------------------------

Obj_EndSignControlWait:
		bclr	#7,4(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

Obj_EndSignControlDoSign:
		move.l	#Obj_EndSignControlAwaitStart,(a0)
		clr.b	(Boss_flag).w
		jsr	Obj_PlayLevelMusic(pc)
		lea	Child6_EndSign(pc),a2
		jsr	CreateChild6_Simple(pc)
		lea	PLC_EndSignStuff(pc),a1
		jsr	(Load_PLC_Raw).l
		jmp	AfterBoss_Cleanup(pc)
; ---------------------------------------------------------------------------
Child6_EndSign:	dc.w 0
		dc.l Obj_EndSign
; ---------------------------------------------------------------------------

Obj_EndSignControlAwaitStart:
		tst.b	(_unkFAA8).w
		bne.w	locret_529CE
		move.l	#Obj_EndSignControlDoStart,(a0)
		jsr	Restore_PlayerControl(pc)
		lea	(Player_2).w,a1
		jmp	Restore_PlayerControl2(pc)
; ---------------------------------------------------------------------------

Obj_EndSignControlDoStart:
		tst.b	(End_of_level_flag).w
		beq.w	locret_529CE
		jsr	Change_Act2Sizes(pc)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
		jsr	Displace_PlayerOffObject(pc)
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


Check_CameraInRange:
		move.w	(Camera_Y_pos).w,d0
		cmp.w	(a1)+,d0
		bcs.s	loc_54198
		cmp.w	(a1)+,d0
		bhi.s	loc_54198
		move.w	(Camera_X_pos).w,d1
		cmp.w	(a1)+,d1
		bcs.s	loc_54198
		cmp.w	(a1)+,d1
		bhi.s	loc_54198
		move.l	(sp),(a0)
		rts
; ---------------------------------------------------------------------------

loc_54198:
		jsr	(Delete_Sprite_If_Not_In_Range).l
		addq.w	#4,sp
		rts
; End of function Check_CameraInRange

; ---------------------------------------------------------------------------

loc_541A2:
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		move.w	(Camera_target_max_Y_pos).w,d0
		cmp.w	(Camera_max_Y_pos).w,d0
		bcs.s	locret_541C6
		move.w	d0,(Camera_min_Y_pos).w
		move.w	$3A(a0),d0
		cmp.w	(Camera_X_pos).w,d0
		bhi.s	locret_541C6
		movea.l	$34(a0),a1
		jsr	(a1)

locret_541C6:
		rts
; ---------------------------------------------------------------------------

loc_541C8:
		btst	#0,$38(a0)
		bne.s	loc_541E6
		subq.w	#1,$2E(a0)
		bpl.s	loc_541E6
		move.b	$26(a0),d0
		jsr	(Play_Sound).l
		bset	#0,$38(a0)

loc_541E6:
		btst	#1,$38(a0)
		bne.s	loc_54202
		move.w	(Camera_target_max_Y_pos).w,d0
		cmp.w	(Camera_max_Y_pos).w,d0
		bne.s	loc_54202
		move.w	d0,(Camera_min_Y_pos).w
		bset	#1,$38(a0)

loc_54202:
		btst	#2,$38(a0)
		bne.s	loc_54220
		move.w	(Camera_X_pos).w,(Camera_min_X_pos).w
		move.w	$1C(a0),d0
		cmp.w	(Camera_X_pos).w,d0
		bhi.s	loc_54220
		bset	#2,$38(a0)

loc_54220:
		move.b	$38(a0),d0
		andi.b	#7,d0
		cmpi.b	#7,d0
		bne.w	locret_529CE
		clr.b	$38(a0)
		clr.w	$1C(a0)
		clr.b	$26(a0)
		movea.l	$34(a0),a1
		jmp	(a1)

; =============== S U B R O U T I N E =======================================


Change_Act2Sizes:
		moveq	#0,d0
		move.b	(Current_zone).w,d0
		lsl.w	#4,d0
		lea	(LevelSizes).l,a1
		lea	8(a1,d0.w),a1
		move.w	(a1)+,(Target_camera_min_X_pos).w
		move.w	(a1)+,(Target_camera_max_X_pos).w
		move.w	(a1)+,(Target_camera_min_Y_pos).w
		move.w	(a1)+,d1
		move.w	d1,(Target_camera_max_Y_pos).w
		move.w	d1,(Camera_target_max_Y_pos).w
		cmpi.b	#$10,d0
		beq.w	locret_529CE
; End of function Change_Act2Sizes


; =============== S U B R O U T I N E =======================================


Make_LevelSizeObj:
		lea	Child1_Act2LevelSize(pc),a2
		jmp	CreateChild1_Normal(pc)
; End of function Make_LevelSizeObj

; ---------------------------------------------------------------------------
Child1_Act2LevelSize:dc.w 2
		dc.l Obj_IncLevEndXGradual
		dc.w 0
		dc.l Obj_DecLevStartYGradual
		dc.w 0
		dc.l Obj_IncLevEndYGradual
		dc.w 0

; =============== S U B R O U T I N E =======================================


StartNewLevel:
		move.w	d0,(Current_zone_and_act).w
		move.w	d0,(Apparent_zone_and_act).w
		move.w	#1,(Restart_level_flag).w
		clr.b	(Last_star_post_hit).w
		clr.b	(Special_bonus_entry_flag).w
		rts
; End of function StartNewLevel


; =============== S U B R O U T I N E =======================================


sub_542A6:
		move.b	(V_int_run_count+3).w,d1
		andi.b	#$F,d1
		bne.w	locret_529CE
		jmp	(Play_Sound_2).l
; End of function sub_542A6

; ---------------------------------------------------------------------------

loc_542B8:
		move.b	#7,$39(a0)
		move.w	#3,$2E(a0)
		move.l	#loc_542CA,(a0)

loc_542CA:
		subq.w	#1,$2E(a0)
		bpl.w	locret_529CE
		move.w	#3,$2E(a0)
		lea	(Normal_palette).w,a1
		moveq	#$3F,d0

loc_542DE:
		bsr.w	sub_542F0
		dbf	d0,loc_542DE
		subq.b	#1,$39(a0)
		bmi.w	Go_Delete_Sprite
		rts

; =============== S U B R O U T I N E =======================================


sub_542F0:
		moveq	#$E,d2
		move.b	(a1),d3
		and.b	d2,d3
		cmp.b	d2,d3
		bcc.s	loc_542FE
		addq.b	#2,d3
		move.b	d3,(a1)

loc_542FE:
		addq.w	#1,a1
		move.b	(a1),d3
		move.b	d3,d4
		andi.b	#-$20,d3
		andi.b	#$E,d4
		cmpi.b	#-$20,d3
		bcc.s	loc_54316
		addi.b	#$20,d3

loc_54316:
		cmp.b	d2,d4
		bcc.s	loc_5431C
		addq.b	#2,d4

loc_5431C:
		or.b	d3,d4
		move.b	d4,(a1)+
		rts
; End of function sub_542F0

; ---------------------------------------------------------------------------

loc_54322:
		move.b	#7,$39(a0)
		move.w	#3,$2E(a0)
		move.l	#loc_54334,(a0)

loc_54334:
		subq.w	#1,$2E(a0)
		bpl.w	locret_529CE
		move.w	#3,$2E(a0)
		lea	(Normal_palette).w,a1
		lea	(Target_palette).w,a2
		moveq	#$3F,d0

loc_5434C:
		bsr.w	sub_5435E
		dbf	d0,loc_5434C
		subq.b	#1,$39(a0)
		bmi.w	Go_Delete_Sprite
		rts

; =============== S U B R O U T I N E =======================================


sub_5435E:
		move.b	(a2)+,d2
		andi.b	#$E,d2
		move.b	(a1),d3
		cmp.b	d2,d3
		bls.s	loc_5436E
		subq.b	#2,d3
		move.b	d3,(a1)

loc_5436E:
		addq.w	#1,a1
		move.b	(a2)+,d2
		move.b	d2,d3
		andi.b	#-$20,d2
		andi.b	#$E,d3
		move.b	(a1),d4
		move.b	d4,d5
		andi.b	#-$20,d4
		andi.b	#$E,d5
		cmp.b	d2,d4
		bls.s	loc_54390
		subi.b	#$20,d4

loc_54390:
		cmp.b	d3,d5
		bls.s	loc_54396
		subq.b	#2,d5

loc_54396:
		or.b	d4,d5
		move.b	d5,(a1)+
		rts
; End of function sub_5435E


; =============== S U B R O U T I N E =======================================


sub_5439C:
		move.w	(Player_mode).w,d0
		cmpi.w	#2,d0
		beq.s	loc_543B2
		cmpi.w	#7,(Emerald_count).w
		beq.s	loc_543B6
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

loc_543B2:
		moveq	#1,d0
		rts
; ---------------------------------------------------------------------------

loc_543B6:
		moveq	#2,d0
		rts
; End of function sub_5439C


; =============== S U B R O U T I N E =======================================


BossDefeated_StopTimer:
		clr.b	(Update_HUD_timer).w
; End of function BossDefeated_StopTimer


; =============== S U B R O U T I N E =======================================


BossDefeated:
		move.w	#$3F,$2E(a0)
		moveq	#$64,d0
		jsr	(HUD_AddToScore).l
		bclr	#7,4(a0)
		rts
; End of function BossDefeated


; =============== S U B R O U T I N E =======================================


Player_Load_PLC:
		move.l	a0,-(sp)
		lea	(Player_1).w,a0
		moveq	#0,d0
		move.b	$38(a0),d0
		lsl.w	#2,d0
		movea.l	off_543EC(pc,d0.w),a1
		jsr	(a1)
		movea.l	(sp)+,a0
		rts
; End of function Player_Load_PLC

; ---------------------------------------------------------------------------
off_543EC:	dc.l Sonic_Load_PLC
		dc.l Tails_Load_PLC

; =============== S U B R O U T I N E =======================================


PLCLoad_AnimalsAndExplosion:
		lea	PLC_Explosion(pc),a1
		jsr	(Load_PLC_Raw).l
		moveq	#0,d0
		move.b	(Current_zone).w,d0
		add.w	d0,d0
		move.w	off_54414(pc,d0.w),d0
		lea	off_54414(pc,d0.w),a1
		jmp	(Load_PLC_Raw).l
; End of function PLCLoad_AnimalsAndExplosion

; ---------------------------------------------------------------------------
off_54414:	dc.w PLC_54422-off_54414
		dc.w PLC_54430-off_54414
		dc.w PLC_5443E-off_54414
		dc.w PLC_5444C-off_54414
		dc.w PLC_5445A-off_54414
		dc.w PLC_54468-off_54414
		dc.w PLC_54476-off_54414
PLC_54422:	dc.w 1
		dc.l ArtNem_BlueFlicky
		dc.w $B000
		dc.l ArtNem_Chicken
		dc.w $B240
PLC_54430:	dc.w 1
		dc.l ArtNem_Rabbit
		dc.w $B000
		dc.l ArtNem_Seal
		dc.w $B240
PLC_5443E:	dc.w 1
		dc.l ArtNem_BlueFlicky
		dc.w $B000
		dc.l ArtNem_Chicken
		dc.w $B240
PLC_5444C:	dc.w 1
		dc.l ArtNem_Rabbit
		dc.w $B000
		dc.l ArtNem_BlueFlicky
		dc.w $B240
PLC_5445A:	dc.w 1
		dc.l ArtNem_Squirrel
		dc.w $B000
		dc.l ArtNem_BlueFlicky
		dc.w $B240
PLC_54468:	dc.w 1
		dc.l ArtNem_Penguin
		dc.w $B000
		dc.l ArtNem_Seal
		dc.w $B240
PLC_54476:	dc.w 1
		dc.l ArtNem_Squirrel
		dc.w $B000
		dc.l ArtNem_Chicken
		dc.w $B240
; ---------------------------------------------------------------------------

AddRings:
		lea	(Ring_count).w,a2
		lea	(Update_HUD_ring_count).w,a3
		lea	(Extra_life_flags).w,a4
		lea	(Total_ring_count).w,a5
		move.w	#$3E7,d1
		add.w	d0,(a5)
		cmp.w	(a5),d1
		bcc.s	loc_544A0
		move.w	d1,(a5)

loc_544A0:
		add.w	d0,(a2)
		cmp.w	(a2),d1
		bcc.s	loc_544A8
		move.w	d1,(a2)

loc_544A8:
		ori.b	#1,(a3)
		cmpi.w	#$64,(a2)
		bcs.s	loc_544C4
		bset	#1,(a4)
		beq.s	loc_544CC
		cmpi.w	#$C8,(a2)
		bcs.s	loc_544C4
		bset	#2,(a4)
		beq.s	loc_544CC

loc_544C4:
		moveq	#signextendB(sfx_RingRight),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

loc_544CC:
		addq.w	#1,(Monitors_broken).w
		addq.b	#1,(Life_count).w
		addq.b	#1,(Update_HUD_life_count).w
		moveq	#signextendB(mus_ExtraLife),d0
		jmp	(Play_Sound).l
; ---------------------------------------------------------------------------

Obj_81:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_54504(pc,d0.w),d1
		move.w	$10(a0),-(sp)
		jsr	off_54504(pc,d1.w)
		moveq	#$2B,d1
		moveq	#$18,d2
		moveq	#$18,d3
		move.w	(sp)+,d4
		jsr	(SolidObjectFull).l
		jmp	loc_539C4(pc)
; ---------------------------------------------------------------------------
off_54504:	dc.w loc_54514-off_54504
		dc.w loc_5456A-off_54504
		dc.w loc_545B4-off_54504
		dc.w loc_545BC-off_54504
		dc.w loc_545C0-off_54504
		dc.w loc_54640-off_54504
		dc.w loc_54652-off_54504
		dc.w loc_54660-off_54504
; ---------------------------------------------------------------------------

loc_54514:
		lea	ObjDat3_54A7C(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		btst	#1,4(a0)
		bne.s	loc_5452C
		lea	ChildObjDat_54AA6(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_5452C:
		move.b	#8,5(a0)
		move.w	(Camera_X_pos).w,d0
		addi.w	#$A0,d0
		move.w	d0,$10(a0)
		move.w	d0,$3E(a0)
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$40,d0
		move.w	d0,$14(a0)
		move.w	#1,$3A(a0)
		jsr	(Swing_Setup1).l
		lea	ChildObjDat_54AAE(pc),a2
		jsr	CreateChild1_Normal(pc)
		lea	ChildObjDat_54AB6(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_5456A:
		btst	#1,$38(a0)
		beq.s	locret_545B2
		move.b	#4,5(a0)

; =============== S U B R O U T I N E =======================================


sub_54578:
		cmpi.b	#2,(Current_zone).w
		beq.s	loc_54584
		st	(Ctrl_2_locked).w

loc_54584:
		move.b	#1,$22(a0)
		move.w	#$40,$2E(a0)
		lea	ChildObjDat_54AC4(pc),a2
		jsr	CreateChild1_Normal(pc)
		lea	ChildObjDat_54AE4(pc),a2
		jsr	CreateChild1_Normal(pc)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	(CreateChild1_Normal).l
		move.b	#8,$2C(a1)

locret_545B2:
		rts
; End of function sub_54578

; ---------------------------------------------------------------------------

loc_545B4:
		move.b	#6,d0
		bra.w	sub_5484E
; ---------------------------------------------------------------------------

loc_545BC:
		bra.w	Check_TailsEndPose
; ---------------------------------------------------------------------------

loc_545C0:
		move.w	(Camera_X_pos).w,d0
		move.w	$3A(a0),d1
		bmi.s	loc_545D8
		addi.w	#$110,d0
		cmp.w	$10(a0),d0
		bcs.s	loc_545E2
		bra.w	loc_545E4
; ---------------------------------------------------------------------------

loc_545D8:
		addi.w	#$30,d0
		cmp.w	$10(a0),d0
		bcs.s	loc_545E4

loc_545E2:
		neg.w	d1

loc_545E4:
		move.w	d1,$3A(a0)
		add.w	d1,$10(a0)
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$40,d0
		cmpi.b	#2,(Current_zone).w
		bne.s	loc_54600
		subi.w	#$20,d0

loc_54600:
		move.l	#$4000,d1
		cmp.w	$14(a0),d0
		bhi.s	loc_5460E
		neg.l	d1

loc_5460E:
		add.l	d1,$14(a0)
		btst	#1,$38(a0)
		beq.s	loc_54636
		move.b	#$A,5(a0)
		cmpi.b	#2,(Current_zone).w
		bne.s	loc_5462E
		move.b	#$E,5(a0)

loc_5462E:
		move.w	a1,$44(a0)
		bsr.w	sub_54578

loc_54636:
		jsr	Swing_UpAndDown(pc)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_54640:
		move.b	#$C,d0
		bsr.w	sub_5484E
		jsr	Swing_UpAndDown(pc)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_54652:
		bsr.w	Check_TailsEndPose
		jsr	Swing_UpAndDown(pc)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_54660:
		move.b	#$C,d0
		bsr.w	sub_548DA
		jsr	Swing_UpAndDown(pc)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_54672:
		move.l	#loc_54680,(a0)
		lea	word_54A88(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_54680:
		bsr.w	sub_5499E
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_546A2
		move.l	#loc_546A6,(a0)
		addq.w	#8,$14(a0)
		movea.w	$46(a0),a1
		bset	#1,$38(a1)

loc_546A2:
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_546A6:
		bsr.w	sub_5499E
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_546AE:
		move.l	#loc_546C2,(a0)
		bset	#1,4(a0)
		lea	word_54A88(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_546C2:
		jsr	Refresh_ChildPosition(pc)
		moveq	#6,d2
		bsr.w	loc_549A0
		lea	word_54716(pc),a1
		jsr	Check_PlayerInRange(pc)
		tst.l	d0
		beq.s	loc_54712
		tst.w	d0
		beq.s	loc_546F4
		movea.w	d0,a1
		tst.w	$1A(a1)
		bpl.s	loc_546F4
		cmpi.b	#2,$20(a1)
		beq.s	loc_546FE
		cmpi.b	#1,$38(a1)
		beq.s	loc_546FE

loc_546F4:
		swap	d0
		movea.w	d0,a1
		tst.w	$1A(a1)
		bpl.s	loc_54712

loc_546FE:
		move.l	#loc_5471E,(a0)
		subq.b	#8,$43(a0)
		movea.w	$46(a0),a1
		bset	#1,$38(a1)

loc_54712:
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------
word_54716:	dc.w  $FFE6,   $34, $FFE4,   $38
; ---------------------------------------------------------------------------

loc_5471E:
		jsr	Refresh_ChildPosition(pc)
		moveq	#5,d2
		bsr.w	loc_549A0
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_5472C:
		lea	ObjDat3_54A8E(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		cmpi.w	#$400,(Current_zone_and_act).w
		bne.s	loc_54742
		move.w	#$44E,$A(a0)

loc_54742:
		move.l	#Obj_FlickerMove,(a0)
		bsr.w	sub_549AE
		moveq	#4,d0
		jsr	Set_IndexedVelocity(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_54758:
		lea	word_54AA0(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_54766,(a0)

loc_54766:
		jsr	Refresh_ChildPosition(pc)
		lea	byte_54B40(pc),a1
		jsr	Animate_RawNoSST(pc)
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_54776:
		lea	word_54A9A(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_54794,(a0)
		move.b	#8,$1E(a0)
		bsr.w	sub_549C4
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_54794:
		subq.w	#1,$2E(a0)
		bpl.s	loc_547A6
		move.l	#loc_547AA,(a0)
		move.w	#$80,8(a0)

loc_547A6:
		jmp	Sprite_CheckDelete(pc)
; ---------------------------------------------------------------------------

loc_547AA:
		jsr	MoveSprite_LightGravity(pc)
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_547DE
		add.w	d1,$14(a0)
		move.w	$3E(a0),$1A(a0)
		jsr	Find_SonicTails(pc)
		move.w	#-$200,d1
		tst.b	(_unkFAA8).w
		beq.s	loc_547D6
		tst.w	d0
		beq.s	loc_547D6
		neg.w	d1

loc_547D6:
		move.w	d1,$18(a0)
		bsr.w	sub_54A68

loc_547DE:
		moveq	#0,d0
		btst	#3,(V_int_run_count+3).w
		bne.s	loc_547EA
		moveq	#1,d0

loc_547EA:
		move.b	d0,$22(a0)
		jmp	Sprite_CheckDelete(pc)
; ---------------------------------------------------------------------------

loc_547F2:
		jsr	Refresh_ChildPosition(pc)
		subq.w	#1,$2E(a0)
		bpl.s	loc_54808
		move.l	#loc_5480C,(a0)
		move.w	#$80,8(a0)

loc_54808:
		jmp	Sprite_CheckDelete(pc)
; ---------------------------------------------------------------------------

loc_5480C:
		lea	(Player_1).w,a1
		move.w	#$300,d0
		move.w	#$100,d1
		moveq	#$10,d2
		move.w	#0,d3
		move.w	#-$30,d4
		sub.b	$2C(a0),d4
		bsr.w	sub_54946
		jsr	(MoveSprite2).l
		bsr.w	sub_54A68
		tst.b	(_unkFAA8).w
		bne.s	loc_54846
		move.l	#loc_54848,(a0)
		bset	#0,4(a0)

loc_54846:
		bra.s	loc_547DE
; ---------------------------------------------------------------------------

loc_54848:
		subq.w	#2,$10(a0)
		bra.s	loc_547DE

; =============== S U B R O U T I N E =======================================


sub_5484E:
		subq.w	#1,$2E(a0)
		bpl.s	locret_54886
		lea	(Player_1).w,a1
		btst	#7,$2A(a1)
		bne.s	locret_54886
		btst	#1,$2A(a1)
		bne.s	locret_54886
		cmpi.b	#6,5(a1)
		bcc.s	locret_54886
		move.b	d0,5(a0)
		bsr.w	Set_PlayerEndingPose
		jsr	(Create_New_Sprite).l
		bne.s	locret_54886
		move.l	#Obj_LevelResults,(a1)

locret_54886:
		rts
; End of function sub_5484E


; =============== S U B R O U T I N E =======================================


Check_TailsEndPose:
		tst.b	(_unkFAA8).w
		beq.w	locret_545B2
		cmpi.b	#3,(Current_zone).w
		bne.s	loc_548A0
		lea	(Player_1).w,a1
		bsr.w	Set_PlayerEndingPose

loc_548A0:
		btst	#7,$38(a0)
		bne.w	locret_545B2
		lea	(Player_2).w,a1
		btst	#7,$2A(a1)
		bne.w	locret_545B2
		btst	#1,$2A(a1)
		bne.w	locret_545B2
		cmpi.b	#6,5(a1)
		bcc.w	locret_545B2
		bset	#7,$38(a0)
		clr.b	(Ctrl_2_locked).w
		jmp	Set_PlayerEndingPose(pc)
; End of function Check_TailsEndPose


; =============== S U B R O U T I N E =======================================


sub_548DA:
		subq.w	#1,$2E(a0)
		bpl.s	locret_5491A
		lea	(Player_1).w,a1
		cmpi.b	#6,5(a1)
		bcc.s	locret_5491A
		tst.b	4(a1)
		bpl.s	locret_5491A
		cmpi.b	#1,$38(a1)
		beq.s	loc_54900
		tst.b	(Flying_carrying_Sonic_flag).w
		beq.s	locret_5491A

loc_54900:
		move.w	#-$100,$18(a0)
		move.b	d0,5(a0)
		jsr	(Create_New_Sprite).l
		bne.s	loc_54918
		move.l	#Obj_LevelResults,(a1)

loc_54918:
		moveq	#1,d0

locret_5491A:
		rts
; End of function sub_548DA


; =============== S U B R O U T I N E =======================================


Set_PlayerEndingPose:
		move.b	#-$7F,$2E(a1)
		move.b	#$13,$20(a1)
		clr.b	$3D(a1)
		clr.w	$18(a1)
		clr.w	$1A(a1)
		clr.w	$1C(a1)
		bclr	#5,$2A(a0)
		bclr	#5,$2A(a1)
		rts
; End of function Set_PlayerEndingPose


; =============== S U B R O U T I N E =======================================


sub_54946:
		move.w	d2,d5
		move.w	$10(a1),d6
		add.w	d3,d6
		cmp.w	$10(a0),d6
		bcc.s	loc_54956
		neg.w	d2

loc_54956:
		move.w	$18(a0),d6
		add.w	d2,d6
		cmp.w	d0,d6
		bgt.s	loc_5496A
		neg.w	d0
		cmp.w	d0,d6
		blt.s	loc_5496A
		move.w	d6,$18(a0)

loc_5496A:
		move.w	$14(a1),d6
		add.w	d4,d6
		cmp.w	$14(a0),d6
		bcc.s	loc_54978
		neg.w	d5

loc_54978:
		move.w	$1A(a0),d6
		add.w	d5,d6
		cmp.w	d1,d6
		bgt.s	locret_5498C
		neg.w	d1
		cmp.w	d1,d6
		blt.s	loc_5496A
		move.w	d6,$1A(a0)

locret_5498C:
		rts
; End of function sub_54946

; ---------------------------------------------------------------------------
		moveq	#$2B,d1
		moveq	#$18,d2
		moveq	#$18,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull).l

; =============== S U B R O U T I N E =======================================


sub_5499E:
		moveq	#8,d2

loc_549A0:
		moveq	#$1B,d1
		moveq	#9,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull).l
; End of function sub_5499E


; =============== S U B R O U T I N E =======================================


sub_549AE:
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		move.b	byte_549BE(pc,d0.w),$22(a0)
		rts
; End of function sub_549AE

; ---------------------------------------------------------------------------
byte_549BE:	dc.b 2
		dc.b 3
		dc.b $A
		dc.b 4
		dc.b $B
		dc.b 0

; =============== S U B R O U T I N E =======================================


sub_549C4:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,d1
		andi.w	#6,d0
		lea	word_54A58(pc),a1
		move.w	(a1,d0.w),d2
		move.w	d2,$1A(a0)
		move.w	d2,$3E(a0)
		movea.w	$46(a0),a1
		btst	#1,4(a1)
		beq.s	loc_549FA
		move.l	#loc_547F2,(a0)
		addq.b	#8,$43(a0)
		clr.w	$1A(a0)

loc_549FA:
		andi.w	#2,d0
		move.w	d0,d2
		cmpi.w	#$400,(Current_zone_and_act).w
		bne.s	loc_54A0A
		addq.w	#4,d2

loc_54A0A:
		move.w	word_54A60(pc,d2.w),$A(a0)
		moveq	#0,d2
		move.b	(Current_zone).w,d2
		add.w	d2,d2
		lea	(byte_2BDDA).l,a1
		adda.w	d2,a1
		lsr.w	#1,d0
		move.b	(a1,d0.w),d0
		lsl.w	#3,d0
		lea	(word_2BDF4).l,a2
		move.l	4(a2,d0.w),$C(a0)
		lsl.w	#2,d1
		move.w	d1,$2E(a0)
		movea.w	$46(a0),a1
		move.w	$10(a0),d0
		move.w	#$200,d1
		cmp.w	$10(a1),d0
		bcc.s	loc_54A4E
		neg.w	d1

loc_54A4E:
		move.w	d1,$18(a0)
		bsr.w	sub_54A68
		rts
; End of function sub_549C4

; ---------------------------------------------------------------------------
word_54A58:	dc.w  $FC80, $FD00, $FD80, $FE00
word_54A60:	dc.w  $8580, $8592, $842E, $8440

; =============== S U B R O U T I N E =======================================


sub_54A68:
		bclr	#0,4(a0)
		tst.w	$18(a0)
		bpl.s	locret_54A7A
		bset	#0,4(a0)

locret_54A7A:
		rts
; End of function sub_54A68

; ---------------------------------------------------------------------------
ObjDat3_54A7C:	dc.l Map_EggCapsule
		dc.w $8494
		dc.w $200
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
word_54A88:	dc.w $200
		dc.b $10
		dc.b 8
		dc.b 5
		dc.b 0
ObjDat3_54A8E:	dc.l Map_EggCapsule
		dc.w $8494
		dc.w $180
		dc.b $C
		dc.b $C
		dc.b 0
		dc.b 0
word_54A9A:	dc.w $280
		dc.b 8
		dc.b 8
		dc.b 2
		dc.b 0
word_54AA0:	dc.w $200
		dc.b $14
		dc.b 4
		dc.b 6
		dc.b 0
ChildObjDat_54AA6:dc.w 0
		dc.l loc_54672
		dc.w $D8
ChildObjDat_54AAE:dc.w 0
		dc.l loc_546AE
		dc.w $28
ChildObjDat_54AB6:dc.w 1
		dc.l loc_54758
		dc.w $ECDC
		dc.l loc_54758
		dc.w $14DC
ChildObjDat_54AC4:dc.w 4
		dc.l loc_5472C
		dc.w $F8
		dc.l loc_5472C
		dc.w $F0F8
		dc.l loc_5472C
		dc.w $10F8
		dc.l loc_5472C
		dc.w $E8F8
		dc.l loc_5472C
		dc.w $18F8
ChildObjDat_54AE4:dc.w 8
		dc.l loc_54776
		dc.w $FC
		dc.l loc_54776
		dc.w $F8FC
		dc.l loc_54776
		dc.w $8FC
		dc.l loc_54776
		dc.w $10FC
		dc.l loc_54776
		dc.w $F0FC
		dc.l loc_54776
		dc.w $E8FC
		dc.l loc_54776
		dc.w $18FC
		dc.l loc_54776
		dc.w $FCFC
		dc.l loc_54776
		dc.w $4FC
		dc.l loc_54776
		dc.w $CFC
		dc.l loc_54776
		dc.w $F4FC
		dc.l loc_54776
		dc.w $ECFC
		dc.l loc_54776
		dc.w $14FC
		dc.l loc_54776
		dc.w $1CFC
		dc.l loc_54776
		dc.w $E4FC
byte_54B40:	dc.b 0
		dc.b 6
		dc.b 7
		dc.b 8
		dc.b 9
		dc.b $FC
; ---------------------------------------------------------------------------

loc_54B46:
		movea.l	$3E(a0),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_54B5A,(a0)
		bset	#3,$2B(a0)

loc_54B5A:
		movea.l	$34(a0),a1
		jsr	(a1)
		jmp	(Sprite_CheckDeleteTouchXY).l
; ---------------------------------------------------------------------------

Obj_Tulipon:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_54B80(pc,d0.w),d1
		jsr	off_54B80(pc,d1.w)
		jmp	(Sprite_CheckDeleteTouch).l
; ---------------------------------------------------------------------------
off_54B80:	dc.w loc_54B86-off_54B80
		dc.w loc_54B9E-off_54B80
		dc.w loc_54BC2-off_54B80
; ---------------------------------------------------------------------------

loc_54B86:
		lea	ObjDat3_54C0E(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.w	#$1F,$2E(a0)
		move.l	#loc_54BAA,$34(a0)

locret_54B9C:
		rts
; ---------------------------------------------------------------------------

loc_54B9E:
		tst.b	4(a0)
		bpl.w	locret_54B9C
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_54BAA:
		move.b	#4,5(a0)
		move.l	#byte_54C3E,$30(a0)
		move.l	#loc_54BF8,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_54BC2:
		jsr	Animate_RawMultiDelay(pc)
		beq.s	locret_54B9C
		cmpi.b	#6,d0
		beq.s	loc_54BD4
		cmpi.b	#$E,d0
		bne.s	locret_54B9C

loc_54BD4:
		moveq	#signextendB(sfx_Projectile),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_54C26(pc),a2
		jsr	CreateChild2_Complex(pc)
		bne.s	locret_54BF6
		addq.b	#1,$39(a0)
		btst	#0,$39(a0)
		beq.s	locret_54BF6
		neg.w	$18(a1)

locret_54BF6:
		rts
; ---------------------------------------------------------------------------

loc_54BF8:
		move.b	#2,5(a0)
		move.w	#$78,$2E(a0)
		move.l	#loc_54BAA,$34(a0)
		rts
; ---------------------------------------------------------------------------
ObjDat3_54C0E:	dc.l Map_Tulipon
		dc.w $252A
		dc.w $200
		dc.b $C
		dc.b $18
		dc.b 0
		dc.b $23
ObjDat3_54C1A:	dc.l Map_Tulipon
		dc.w $252A
		dc.w $280
		dc.b 8
		dc.b 8
		dc.b 4
		dc.b $98
ChildObjDat_54C26:dc.w 0
		dc.l loc_54B46
		dc.l ObjDat3_54C1A
		dc.l 0
		dc.l MoveSprite
		dc.b 0
		dc.b $F0
		dc.w $100
		dc.w $FB00
byte_54C3E:	dc.b    0,   7
		dc.b    1,   9
		dc.b    2,   4
		dc.b    3,   4
		dc.b    0,   9
		dc.b    1,   9
		dc.b    2,   4
		dc.b    3,   4
		dc.b    0,   0
		dc.b  $F4,   0
; ---------------------------------------------------------------------------

Obj_RhinoBot:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_54C72(pc,d0.w),d1
		jsr	off_54C72(pc,d1.w)
		lea	DPLCPtr_54F2E(pc),a2
		jsr	Perform_DPLC(pc)
		jmp	Sprite_CheckDeleteTouchSlotted(pc)
; ---------------------------------------------------------------------------
off_54C72:	dc.w loc_54C7A-off_54C72
		dc.w loc_54CC0-off_54C72
		dc.w loc_54CE6-off_54C72
		dc.w loc_54CEA-off_54C72
; ---------------------------------------------------------------------------

loc_54C7A:
		lea	ObjDat4_54EFA(pc),a1
		jsr	SetUp_ObjAttributesSlotted(pc)
		move.b	#8,$1F(a0)
		move.b	#$10,$1E(a0)
		move.w	#-$10,d0
		move.w	#-$300,d1
		btst	#0,4(a0)
		beq.s	loc_54CAE
		neg.w	d0
		neg.w	d1
		bset	#3,$38(a0)
		bset	#2,$38(a0)

loc_54CAE:
		move.w	d0,$40(a0)
		move.w	d1,$3E(a0)
		move.l	#loc_54D3C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_54CC0:
		lea	loc_54D8E(pc),a3
		bsr.w	sub_54EA0
		lea	loc_54D70(pc),a3
		bsr.w	sub_54EC6
		move.w	$40(a0),d0
		add.w	d0,$18(a0)
		jsr	(MoveSprite2).l
		bsr.w	sub_54DF4
		bra.w	loc_54E18
; ---------------------------------------------------------------------------

loc_54CE6:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_54CEA:
		lea	loc_54DE4(pc),a3
		bsr.w	sub_54EC6
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_54CF8:
		cmpi.w	#1,(Current_zone_and_act).w
		beq.s	loc_54D22
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_54D1E(pc,d0.w),d1
		jsr	off_54D1E(pc,d1.w)
		lea	DPLCPtr_54F2E(pc),a2
		jsr	Perform_DPLC(pc)
		jmp	Child_Remember_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_54D1E:	dc.w loc_54D28-off_54D1E
		dc.w loc_54D38-off_54D1E
; ---------------------------------------------------------------------------

loc_54D22:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_54D28:
		lea	ObjDat4_54F0C(pc),a1
		jsr	SetUp_ObjAttributesSlotted(pc)
		move.l	#Go_Delete_SpriteSlotted3,$34(a0)

loc_54D38:
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

loc_54D3C:
		bchg	#2,$38(a0)
		move.l	#loc_54D54,$34(a0)
		neg.w	$40(a0)
		neg.w	$3E(a0)
		rts
; ---------------------------------------------------------------------------

loc_54D54:
		bchg	#3,$38(a0)
		bchg	#0,4(a0)
		bclr	#1,$38(a0)
		move.l	#loc_54D3C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_54D70:
		bclr	#2,$38(a0)
		btst	#3,$38(a0)
		bne.s	loc_54D84
		bset	#2,$38(a0)

loc_54D84:
		clr.w	$18(a0)
		clr.w	$1A(a0)
		bra.s	loc_54D54
; ---------------------------------------------------------------------------

loc_54D8E:
		move.b	#4,5(a0)
		move.b	#0,$22(a0)
		move.w	#$20,$2E(a0)
		move.l	#loc_54DCA,$34(a0)
		bset	#1,$38(a0)
		moveq	#signextendB(sfx_Blast),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_54F26(pc),a2
		jsr	CreateChild1_Normal(pc)
		bne.s	locret_54DC8
		move.l	#byte_54F46,$30(a1)

locret_54DC8:
		rts
; ---------------------------------------------------------------------------

loc_54DCA:
		move.b	#6,5(a0)
		move.w	#$400,d0
		btst	#3,$38(a0)
		bne.s	loc_54DDE
		neg.w	d0

loc_54DDE:
		move.w	d0,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_54DE4:
		move.b	#2,5(a0)
		move.b	#0,$22(a0)
		bra.w	loc_54D70

; =============== S U B R O U T I N E =======================================


sub_54DF4:
		move.w	$18(a0),d0
		beq.s	loc_54E12
		btst	#2,$38(a0)
		beq.s	loc_54E0A
		cmp.w	$3E(a0),d0
		bge.s	loc_54E12
		rts
; ---------------------------------------------------------------------------

loc_54E0A:
		cmp.w	$3E(a0),d0
		ble.s	loc_54E12
		rts
; ---------------------------------------------------------------------------

loc_54E12:
		movea.l	$34(a0),a1
		jmp	(a1)
; End of function sub_54DF4

; ---------------------------------------------------------------------------

loc_54E18:
		moveq	#0,d1
		btst	#3,$38(a0)
		beq.s	loc_54E50
		btst	#2,$38(a0)
		beq.s	loc_54E38
		cmpi.w	#$80,$18(a0)
		bgt.s	loc_54E7A
		moveq	#1,d1
		bra.w	loc_54E7A
; ---------------------------------------------------------------------------

loc_54E38:
		moveq	#1,d1
		cmpi.w	#$280,$18(a0)
		bgt.s	loc_54E7A
		moveq	#2,d1
		bset	#1,$38(a0)
		beq.s	loc_54E80
		bra.w	loc_54E7A
; ---------------------------------------------------------------------------

loc_54E50:
		btst	#2,$38(a0)
		bne.s	loc_54E66
		cmpi.w	#-$80,$18(a0)
		ble.s	loc_54E7A
		moveq	#1,d1
		bra.w	loc_54E7A
; ---------------------------------------------------------------------------

loc_54E66:
		moveq	#1,d1
		cmpi.w	#-$280,$18(a0)
		ble.s	loc_54E7A
		moveq	#2,d1
		bset	#1,$38(a0)
		beq.s	loc_54E80

loc_54E7A:
		move.b	d1,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_54E80:
		move.b	d1,$22(a0)
		moveq	#signextendB(sfx_Blast),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_54F1E(pc),a2
		jsr	CreateChild1_Normal(pc)
		bne.s	locret_54E9E
		move.l	#byte_54F36,$30(a1)

locret_54E9E:
		rts

; =============== S U B R O U T I N E =======================================


sub_54EA0:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$20,d3
		bhi.s	locret_54EBE
		cmpi.w	#$60,d2
		bhi.s	locret_54EBE
		btst	#3,$38(a0)
		bne.s	loc_54EBA
		subq.w	#2,d0

loc_54EBA:
		tst.w	d0
		bne.s	loc_54EC0

locret_54EBE:
		rts
; ---------------------------------------------------------------------------

loc_54EC0:
		jsr	(a3)
		addq.w	#4,sp
		rts
; End of function sub_54EA0


; =============== S U B R O U T I N E =======================================


sub_54EC6:
		moveq	#4,d0
		btst	#3,$38(a0)
		bne.s	loc_54ED2
		neg.w	d0

loc_54ED2:
		move.w	$10(a0),d3
		add.w	d0,d3
		move.l	a3,-(sp)
		jsr	(ObjCheckFloorDist2).l
		movea.l	(sp)+,a3
		cmpi.w	#-1,d1
		blt.s	loc_54EF4
		cmpi.w	#$C,d1
		bge.s	loc_54EF4
		add.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_54EF4:
		jsr	(a3)
		addq.w	#4,sp
		rts
; End of function sub_54EC6

; ---------------------------------------------------------------------------
ObjDat4_54EFA:	dc.w 1
		dc.w $2500
		dc.w $15
		dc.w 0
		dc.l Map_RhinoBot
		dc.w $280
		dc.b $14
		dc.b $10
		dc.b 0
		dc.b $B
ObjDat4_54F0C:	dc.w 1
		dc.w $44A
		dc.w 6
		dc.w 2
		dc.l Map_RhinoBot
		dc.w $200
		dc.b $C
		dc.b 8
		dc.b 4
		dc.b 0
ChildObjDat_54F1E:dc.w 0
		dc.l loc_54CF8
		dc.w $C08
ChildObjDat_54F26:dc.w 0
		dc.l loc_54CF8
		dc.w $1008
DPLCPtr_54F2E:	dc.l ArtUnc_AIZRhino
		dc.l DPLC_RhinoBot
byte_54F36:	dc.b    2,   4
		dc.b    4,   5
		dc.b    6,   7
		dc.b    4,   5
		dc.b    6,   7
		dc.b    4,   5
		dc.b    6,   7
		dc.b  $F4,   0
byte_54F46:	dc.b    2,   4
		dc.b    4,   5
		dc.b    6,   7
		dc.b    4,   5
		dc.b    6,   7
		dc.b  $F4,   0
; ---------------------------------------------------------------------------

Obj_MonkeyDude:
		jsr	Obj_WaitOffscreen(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_54F68(pc,d0.w),d1
		jsr	off_54F68(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_54F68:	dc.w loc_54F6E-off_54F68
		dc.w loc_54FB8-off_54F68
		dc.w loc_54FD6-off_54F68
; ---------------------------------------------------------------------------

loc_54F6E:
		lea	ObjDat3_55456(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#2,d0
		move.b	d0,$2C(a0)
		lsr.w	#1,d0
		move.b	d0,$39(a0)
		move.l	#byte_554B0,$30(a0)
		move.w	#$3B,$2E(a0)
		move.l	#loc_54FBE,$34(a0)
		btst	#0,4(a0)
		bne.w	loc_54FB0
		lea	ChildObjDat_5547C(pc),a2
		jmp	CreateChild4_LinkListRepeated(pc)
; ---------------------------------------------------------------------------

loc_54FB0:
		lea	ChildObjDat_55482(pc),a2
		jmp	CreateChild4_LinkListRepeated(pc)
; ---------------------------------------------------------------------------

loc_54FB8:
		jmp	(loc_53CD6).l
; ---------------------------------------------------------------------------

loc_54FBE:
		move.b	#4,5(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		move.l	#byte_554B4,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_54FD6:
		jsr	Animate_RawMultiDelay(pc)
		tst.w	d2
		beq.s	locret_54FFE
		btst	#2,$38(a0)
		bne.s	loc_55000
		cmpi.b	#0,$22(a0)
		bne.s	locret_54FFE
		addq.w	#8,$14(a0)
		subq.b	#1,$39(a0)
		cmpi.b	#1,$39(a0)
		beq.s	loc_55014

locret_54FFE:
		rts
; ---------------------------------------------------------------------------

loc_55000:
		cmpi.b	#2,$22(a0)
		bne.s	locret_54FFE
		subq.b	#1,$39(a0)
		beq.s	loc_55014
		subq.w	#8,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_55014:
		move.b	#2,5(a0)
		move.b	$2C(a0),$39(a0)
		bchg	#2,$38(a0)
		move.w	#$3B,$2E(a0)
		move.l	#byte_554B0,$30(a0)
		move.b	#0,$22(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_55044:
		bset	#3,$38(a0)

loc_5504A:
		lea	word_55462(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		clr.b	5(a0)
		move.b	$2C(a0),d0
		add.b	d0,d0
		move.b	d0,$3B(a0)
		move.b	d0,$3A(a0)
		tst.b	$2C(a0)
		bne.s	loc_5508E
		move.l	#loc_550C8,(a0)
		moveq	#$E,d0
		btst	#3,$38(a0)
		bne.s	loc_5507C
		neg.w	d0

loc_5507C:
		add.w	d0,$10(a0)
		subq.w	#2,$14(a0)
		move.w	$14(a0),$3E(a0)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------

loc_5508E:
		cmpi.b	#8,$2C(a0)
		beq.s	loc_550A0
		move.l	#loc_55218,(a0)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------

loc_550A0:
		move.l	#loc_55248,(a0)
		move.b	#6,$22(a0)
		movea.w	$46(a0),a1
		movea.w	$46(a1),a1
		move.w	a1,$3E(a0)
		movea.w	$46(a1),a1
		movea.w	$46(a1),a1
		move.w	a1,$44(a0)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------

loc_550C8:
		bsr.w	sub_552FC
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_550DE(pc,d0.w),d1
		jsr	off_550DE(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_550DE:	dc.w loc_550EA-off_550DE
		dc.w loc_55126-off_550DE
		dc.w loc_5517E-off_550DE
		dc.w loc_551B0-off_550DE
		dc.w loc_551E6-off_550DE
		dc.w loc_5512C-off_550DE
; ---------------------------------------------------------------------------

loc_550EA:
		move.b	$3C(a0),d0
		btst	#3,$38(a0)
		beq.s	loc_55104
		addq.b	#4,d0
		cmpi.b	#-$80,d0
		bcc.s	loc_55112
		move.b	d0,$3C(a0)
		rts
; ---------------------------------------------------------------------------

loc_55104:
		subq.b	#4,d0
		cmpi.b	#-$80,d0
		bls.s	loc_55112
		move.b	d0,$3C(a0)
		rts
; ---------------------------------------------------------------------------

loc_55112:
		move.b	#2,5(a0)

loc_55118:
		bsr.w	sub_55434
		move.l	#loc_5516C,$34(a0)

locret_55124:
		rts
; ---------------------------------------------------------------------------

loc_55126:
		bsr.w	sub_55320
		beq.s	loc_55170

loc_5512C:
		btst	#3,$38(a0)
		beq.s	loc_5514A
		move.b	$41(a0),d1
		bsr.w	sub_5533C
		subi.b	#$20,d0
		cmpi.b	#$60,d0
		bcc.s	loc_5515C
		bra.w	loc_55168
; ---------------------------------------------------------------------------

loc_5514A:
		move.b	$41(a0),d1
		bsr.w	sub_5533C
		subi.b	#-$80,d0
		cmpi.b	#$60,d0
		bcs.s	loc_55168

loc_5515C:
		neg.w	$40(a0)
		move.b	$41(a0),d1
		bsr.w	sub_5533C

loc_55168:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5516C:
		bra.w	sub_55434
; ---------------------------------------------------------------------------

loc_55170:
		move.b	#4,5(a0)
		bset	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_5517E:
		btst	#3,$38(a0)
		beq.s	loc_55194
		moveq	#4,d1
		bsr.w	sub_5533C
		cmpi.b	#-$40,d0
		bcc.s	loc_551A2
		rts
; ---------------------------------------------------------------------------

loc_55194:
		moveq	#-4,d1
		bsr.w	sub_5533C
		cmpi.b	#$40,d0
		bls.s	loc_551A2
		rts
; ---------------------------------------------------------------------------

loc_551A2:
		move.b	#6,5(a0)
		bset	#2,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_551B0:
		btst	#3,$38(a0)
		beq.s	loc_551C6
		moveq	#-8,d1
		bsr.w	sub_5533C
		moveq	#$60,d1
		cmp.b	d1,d0
		bls.s	loc_551D4
		rts
; ---------------------------------------------------------------------------

loc_551C6:
		moveq	#8,d1
		bsr.w	sub_5533C
		moveq	#-$60,d1
		cmp.b	d1,d0
		bcc.s	loc_551D4
		rts
; ---------------------------------------------------------------------------

loc_551D4:
		move.b	#8,5(a0)
		move.b	d1,$3C(a0)
		bclr	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_551E6:
		btst	#3,$38(a0)
		bne.s	loc_551FC
		moveq	#-2,d1
		bsr.w	sub_5533C
		moveq	#-$80,d1
		cmp.b	d1,d0
		bls.s	loc_5520A
		rts
; ---------------------------------------------------------------------------

loc_551FC:
		moveq	#2,d1
		bsr.w	sub_5533C
		moveq	#-$80,d1
		cmp.b	d1,d0
		bcc.s	loc_5520A
		rts
; ---------------------------------------------------------------------------

loc_5520A:
		move.b	#$A,5(a0)
		move.b	d1,$3C(a0)
		bra.w	loc_55118
; ---------------------------------------------------------------------------

loc_55218:
		bsr.w	sub_55314
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5522E(pc,d0.w),d1
		jsr	off_5522E(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_5522E:	dc.w loc_55234-off_5522E
		dc.w loc_5523E-off_5522E
		dc.w loc_5523A-off_5522E
; ---------------------------------------------------------------------------

loc_55234:
		moveq	#2,d1
		bsr.w	sub_55366

loc_5523A:
		bra.w	loc_55348
; ---------------------------------------------------------------------------

loc_5523E:
		moveq	#4,d1
		bsr.w	sub_5538E
		bra.w	loc_55348
; ---------------------------------------------------------------------------

loc_55248:
		bsr.w	sub_55314
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5525E(pc,d0.w),d1
		jsr	off_5525E(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_5525E:	dc.w loc_55264-off_5525E
		dc.w loc_5526E-off_5525E
		dc.w loc_5526A-off_5525E
; ---------------------------------------------------------------------------

loc_55264:
		moveq	#2,d1
		bsr.w	sub_55366

loc_5526A:
		bra.w	loc_55348
; ---------------------------------------------------------------------------

loc_5526E:
		bsr.w	sub_553B0
		moveq	#4,d1
		bsr.w	sub_5538E
		bra.w	loc_55348
; ---------------------------------------------------------------------------

loc_5527C:
		lea	word_55468(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_552B2,(a0)
		move.l	#byte_554B9,$30(a0)
		move.l	#loc_552C6,$34(a0)
		move.b	#8,$1E(a0)
		move.w	#-$200,$18(a0)
		move.w	#-$400,$1A(a0)
		jmp	(loc_19CC4).l
; ---------------------------------------------------------------------------

loc_552B2:
		jsr	(MoveSprite_LightGravity).l
		jsr	Animate_RawMultiDelay(pc)
		jsr	ObjHitFloor_DoRoutine(pc)
		jmp	(loc_19CC4).l
; ---------------------------------------------------------------------------

loc_552C6:
		move.l	#loc_552CE,(a0)
		rts
; ---------------------------------------------------------------------------

loc_552CE:
		jmp	(loc_19CC4).l
; ---------------------------------------------------------------------------
		movea.w	$46(a0),a1
		move.b	4(a1),d0
		btst	#3,$38(a0)
		beq.s	loc_552E8
		bchg	#0,d0

loc_552E8:
		move.w	#$200,8(a0)
		btst	#0,d0
		beq.s	locret_552FA
		move.w	#$300,8(a0)

locret_552FA:
		rts

; =============== S U B R O U T I N E =======================================


sub_552FC:
		movea.w	$46(a0),a1
		move.w	$14(a1),d0
		subq.w	#2,d0
		tst.b	$22(a1)
		beq.s	loc_5530E
		subq.w	#2,d0

loc_5530E:
		move.w	d0,$14(a0)
		rts
; End of function sub_552FC


; =============== S U B R O U T I N E =======================================


sub_55314:
		movea.w	$46(a0),a1
		move.w	8(a1),8(a0)
		rts
; End of function sub_55314


; =============== S U B R O U T I N E =======================================


sub_55320:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$80,d2
		bcc.s	loc_55338
		btst	#3,$38(a0)
		beq.s	loc_55334
		subq.w	#2,d0

loc_55334:
		tst.w	d0
		rts
; ---------------------------------------------------------------------------

loc_55338:
		moveq	#1,d4
		rts
; End of function sub_55320


; =============== S U B R O U T I N E =======================================


sub_5533C:
		move.b	$3C(a0),d0
		add.b	d1,d0
		move.b	d0,$3C(a0)
		rts
; End of function sub_5533C

; ---------------------------------------------------------------------------

loc_55348:
		subq.b	#1,$3B(a0)
		bne.s	loc_5535E
		move.b	$3A(a0),$3B(a0)
		movea.w	$46(a0),a1
		move.b	$3C(a1),$3C(a0)

loc_5535E:
		moveq	#5,d2
		jsr	MoveSprite_CircularSimple(pc)
		rts

; =============== S U B R O U T I N E =======================================


sub_55366:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	locret_5538C
		move.b	d1,5(a0)
		bset	#1,$38(a0)
		move.b	$3A(a0),d0
		lsr.b	#1,d0
		move.b	d0,$3A(a0)
		move.b	#1,$3B(a0)

locret_5538C:
		rts
; End of function sub_55366


; =============== S U B R O U T I N E =======================================


sub_5538E:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	locret_553AE
		move.b	d1,5(a0)
		move.b	$3A(a0),d0
		add.b	d0,d0
		move.b	d0,$3A(a0)
		move.b	#1,$3B(a0)

locret_553AE:
		rts
; End of function sub_5538E


; =============== S U B R O U T I N E =======================================


sub_553B0:
		btst	#3,$38(a0)
		beq.s	loc_553DC
		btst	#0,$38(a0)
		bne.w	locret_55124
		movea.w	$44(a0),a1
		btst	#2,$38(a1)
		beq.s	locret_553DA
		movea.w	$3E(a0),a1
		cmpi.b	#-$7C,$3C(a1)
		bcs.s	loc_55406

locret_553DA:
		rts
; ---------------------------------------------------------------------------

loc_553DC:
		btst	#0,$38(a0)
		bne.w	locret_55124
		movea.w	$44(a0),a1
		btst	#2,$38(a1)
		beq.s	locret_553DA
		movea.w	$3E(a0),a1
		cmpi.b	#$7C,$3C(a1)
		bcs.w	locret_55124
		move.w	#$2548,$A(a0)

loc_55406:
		bset	#0,$38(a0)
		move.b	#4,$22(a0)
		moveq	#signextendB(sfx_MissileThrow),d0
		jsr	(Play_Sound_2).l
		lea	(ChildObjDat_55498).l,a2
		jsr	CreateChild2_Complex(pc)
		bne.s	locret_553DA
		btst	#3,$38(a0)
		beq.s	locret_553DA
		neg.w	$18(a1)
		rts
; End of function sub_553B0


; =============== S U B R O U T I N E =======================================


sub_55434:
		jsr	(Random_Number).l
		move.w	(RNG_seed).w,d0
		moveq	#1,d1
		btst	#0,d0
		beq.s	loc_55448
		neg.w	d1

loc_55448:
		move.w	d1,$40(a0)
		andi.w	#$3C,d0
		move.w	d0,$2E(a0)
		rts
; End of function sub_55434

; ---------------------------------------------------------------------------
ObjDat3_55456:	dc.l Map_MonkeyDude
		dc.w $2548
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b $B
word_55462:	dc.w $300
		dc.b 4
		dc.b 4
		dc.b 3
		dc.b 0
word_55468:	dc.w $A548
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 6
		dc.b $B
ObjDat3_55470:	dc.l Map_MonkeyDude
		dc.w $548
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 6
		dc.b $98
ChildObjDat_5547C:dc.w 4
		dc.l loc_5504A
ChildObjDat_55482:dc.w 4
		dc.l loc_55044
		dc.w 0
		dc.l loc_5504A
		dc.w 8
		dc.w 0
		dc.l loc_5527C
		dc.w 0
ChildObjDat_55498:dc.w 0
		dc.l loc_54B46
		dc.l ObjDat3_55470
		dc.w 0
		dc.w 0
		dc.l MoveSprite_LightGravity
		dc.w 0
		dc.w $FE00
		dc.w $FC00
byte_554B0:	dc.b    7,   0
		dc.b    1, $FC
byte_554B4:	dc.b    0,   7
		dc.b    2,   7
		dc.b  $FC
byte_554B9:	dc.b    8,  $F
		dc.b    8,  $F
		dc.b    9,  $F
		dc.b   $A,  $F
		dc.b  $F8,  $A
		dc.b    6, $7E
		dc.b  $FC
; ---------------------------------------------------------------------------

Obj_CaterKillerJr:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_554DE(pc,d0.w),d1
		jsr	off_554DE(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_554DE:	dc.w loc_554E8-off_554DE
		dc.w loc_55524-off_554DE
		dc.w loc_55524-off_554DE
		dc.w loc_55554-off_554DE
		dc.w loc_55576-off_554DE
; ---------------------------------------------------------------------------

loc_554E8:
		lea	ObjDat3_5565E(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.w	#-$100,$18(a0)
		lea	ChildObjDat_55694(pc),a2
		jsr	CreateChild3_NormalRepeated(pc)

loc_554FE:
		move.b	#4,5(a0)
		move.b	#3,$39(a0)
		move.w	#$80,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#8,$40(a0)
		bclr	#0,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_55524:
		jsr	Swing_UpAndDown_Count(pc)
		bne.s	loc_55534
		jsr	(MoveSprite2).l
		bra.w	loc_5563A
; ---------------------------------------------------------------------------

loc_55534:
		move.b	#6,5(a0)
		move.w	#$100,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#8,$40(a0)
		bclr	#0,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_55554:
		jsr	Swing_UpAndDown(pc)
		tst.w	d3
		beq.s	loc_5556C
		move.b	#8,5(a0)
		neg.w	$18(a0)
		bchg	#0,4(a0)

loc_5556C:
		jsr	(MoveSprite2).l
		bra.w	loc_5563A
; ---------------------------------------------------------------------------

loc_55576:
		jsr	Swing_UpAndDown(pc)
		tst.w	d3
		bne.s	loc_554FE
		jsr	(MoveSprite2).l
		bra.w	loc_5563A
; ---------------------------------------------------------------------------

loc_55588:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5559E(pc,d0.w),d1
		jsr	off_5559E(pc,d1.w)
		moveq	#0,d0
		jmp	(Child_DrawTouch_Sprite_FlickerMove).l
; ---------------------------------------------------------------------------
off_5559E:	dc.w loc_555A8-off_5559E
		dc.w loc_555D4-off_5559E
		dc.w loc_55524-off_5559E
		dc.w loc_55554-off_5559E
		dc.w loc_55576-off_5559E
; ---------------------------------------------------------------------------

loc_555A8:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	off_555C2(pc,d0.w),d1
		lea	off_555C2(pc,d1.w),a1
		lsr.w	#1,d0
		move.b	byte_555CE(pc,d0.w),$2F(a0)
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------
off_555C2:	dc.w ObjDat3_5566A-off_555C2
		dc.w ObjDat3_5566A-off_555C2
		dc.w ObjDat3_5566A-off_555C2
		dc.w ObjDat3_55676-off_555C2
		dc.w ObjDat3_55682-off_555C2
		dc.w ObjDat3_55682-off_555C2
byte_555CE:	dc.b $B
		dc.b $17
		dc.b $23
		dc.b $2F
		dc.b $37
		dc.b $3F
; ---------------------------------------------------------------------------

loc_555D4:
		subq.w	#1,$2E(a0)
		bmi.s	loc_555DC
		rts
; ---------------------------------------------------------------------------

loc_555DC:
		move.b	#4,5(a0)
		moveq	#$40,d1
		moveq	#0,d0
		move.b	$2C(a0),d0
		addq.w	#2,d0
		lsl.w	#2,d0
		sub.w	d0,d1
		move.w	d1,$2E(a0)
		move.l	#loc_55650,$34(a0)
		move.w	#-$100,$18(a0)
		bra.w	loc_554FE
; ---------------------------------------------------------------------------

loc_55606:
		lea	word_5568E(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_55628,(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		bset	#4,$2B(a0)
		jmp	(Child_Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_55628:
		jsr	Refresh_ChildPositionAdjusted(pc)
		lea	byte_556A4(pc),a1
		jsr	Animate_RawNoSSTMultiDelay(pc)
		jmp	(Child_Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5563A:
		cmpi.l	#loc_55588,(a0)
		bne.s	locret_5564E
		cmpi.b	#6,$2C(a0)
		bcc.s	locret_5564E
		jsr	Obj_Wait(pc)

locret_5564E:
		rts
; ---------------------------------------------------------------------------

loc_55650:
		move.w	#$1A,$2E(a0)
		lea	ChildObjDat_5569C(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------
ObjDat3_5565E:	dc.l Map_CaterKillerJr
		dc.w $A55F
		dc.w $280
		dc.b 8
		dc.b 8
		dc.b 0
		dc.b $17
ObjDat3_5566A:	dc.l Map_CaterKillerJr
		dc.w $A55F
		dc.w $280
		dc.b 8
		dc.b $C
		dc.b 1
		dc.b $97
ObjDat3_55676:	dc.l Map_CaterKillerJr
		dc.w $A55F
		dc.w $280
		dc.b 8
		dc.b 8
		dc.b 2
		dc.b $97
ObjDat3_55682:	dc.l Map_MonkeyDude
		dc.w $A548
		dc.w $280
		dc.b 4
		dc.b 4
		dc.b 3
		dc.b $98
word_5568E:	dc.w $200
		dc.b $10
		dc.b $10
		dc.b 3
		dc.b 0
ChildObjDat_55694:dc.w 5
		dc.l loc_55588
		dc.w 0
ChildObjDat_5569C:dc.w 0
		dc.l loc_55606
		dc.w 0
byte_556A4:	dc.b    3,   2
		dc.b    3,   2
		dc.b    4,   3
		dc.b    5,   4
		dc.b  $F4,   0
; ---------------------------------------------------------------------------

Obj_Jawz:
		jsr	(Obj_WaitOffscreen).l
		lea	ObjDat3_55716(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_556CA,(a0)
		move.w	#-$200,d4
		jmp	Set_VelocityXTrackSonic(pc)
; ---------------------------------------------------------------------------

loc_556CA:
		jsr	(MoveSprite2).l
		lea	byte_55722(pc),a1
		jsr	Animate_RawNoSST(pc)
		moveq	#0,d0
		move.b	$29(a0),d0
		bne.s	loc_556E4
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_556E4:
		add.w	d0,d0
		movea.w	word_55710-2(pc,d0.w),a1
		cmpi.b	#2,$20(a1)
		beq.s	loc_55708
		cmpi.b	#9,$20(a1)
		beq.s	loc_55708
		lea	(ChildObjDat_49BF4).l,a2
		jsr	CreateChild1_Normal(pc)
		jmp	Go_Delete_Sprite(pc)
; ---------------------------------------------------------------------------

loc_55708:
		move.w	a1,$44(a0)
		jmp	EnemyDefeat_Score(pc)
; ---------------------------------------------------------------------------
word_55710:	dc.w Player_1
		dc.w Player_2
		dc.w Player_1
ObjDat3_55716:	dc.l Map_Jawz
		dc.w $A539
		dc.w $280
		dc.b $1C
		dc.b $C
		dc.b 0
		dc.b $D7
byte_55722:	dc.b 0
		dc.b 0
		dc.b 1
		dc.b $FC
; ---------------------------------------------------------------------------

Obj_Blastoid:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_55742(pc,d0.w),d1
		jsr	off_55742(pc,d1.w)
		bsr.w	sub_557A6
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_55742:	dc.w loc_55748-off_55742
		dc.w loc_55750-off_55742
		dc.w loc_55774-off_55742
; ---------------------------------------------------------------------------

loc_55748:
		lea	ObjDat3_557C6(pc),a1
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

loc_55750:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$80,d2
		bcs.s	loc_5575C
		rts
; ---------------------------------------------------------------------------

loc_5575C:
		move.b	#4,5(a0)
		move.l	#byte_557F6,$30(a0)
		move.l	#loc_5579E,$34(a0)

locret_55772:
		rts
; ---------------------------------------------------------------------------

loc_55774:
		jsr	Animate_RawMultiDelay(pc)
		tst.w	d2
		beq.s	locret_55772
		bmi.s	locret_55772
		cmpi.b	#1,$22(a0)
		bne.s	locret_55772
		tst.b	4(a0)
		bpl.w	locret_55772
		moveq	#signextendB(sfx_Projectile),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_557DE(pc),a2
		jmp	CreateChild5_ComplexAdjusted(pc)
; ---------------------------------------------------------------------------

loc_5579E:
		move.b	#2,5(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_557A6:
		jsr	Check_PlayerCollision(pc)
		beq.w	locret_55772
		move.b	$2C(a0),d0
		andi.w	#$F,d0
		lea	(Level_trigger_array).w,a3
		st	(a3,d0.w)
		jmp	EnemyDefeat_Score(pc)
; End of function sub_557A6

; ---------------------------------------------------------------------------
		dc.w Player_1
		dc.w Player_2
ObjDat3_557C6:	dc.l Map_Blastoid
		dc.w $A539
		dc.w $280
		dc.b $14
		dc.b $C
		dc.b 0
		dc.b $D7
ObjDat3_557D2:	dc.l Map_Blastoid
		dc.w $A539
		dc.w $280
		dc.b 4
		dc.b 4
		dc.b 2
		dc.b $98
ChildObjDat_557DE:dc.w 0
		dc.l loc_54B46
		dc.l ObjDat3_557D2
		dc.l word_55805
		dc.l Move_AnimateRaw
		dc.b $EC
		dc.b $F9
		dc.w $FE00
		dc.w $FF00
byte_557F6:	dc.b    0, $7F
		dc.b    1,   4
		dc.b    0,   9
		dc.b    1,   4
		dc.b    0,   9
		dc.b    1,   4
		dc.b    0, $3F
		dc.b  $F4
word_55805:	dc.w 2
		dc.w $3FC
		dc.b 0
; ---------------------------------------------------------------------------

Obj_Buggernaut:
		jsr	(Obj_WaitOffscreen).l

loc_55810:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_55822(pc,d0.w),d1
		jsr	off_55822(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_55822:	dc.w loc_55828-off_55822
		dc.w loc_5585A-off_55822
		dc.w loc_55878-off_55822
; ---------------------------------------------------------------------------

loc_55828:
		lea	ObjDat3_55986(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#byte_559A0,$30(a0)
		lea	ChildObjDat_55998(pc),a2
		jsr	CreateChild1_Normal(pc)
		addq.b	#1,$39(a0)

loc_55844:
		move.b	#2,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_55862,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5585A:
		jsr	Animate_Raw(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_55862:
		move.b	#4,5(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_55844,$34(a0)

locret_55876:
		rts
; ---------------------------------------------------------------------------

loc_55878:
		tst.b	4(a0)
		bpl.s	locret_55876
		jsr	Find_SonicTails(pc)
		jsr	Change_FlipX(pc)
		move.w	#$200,d0
		moveq	#$10,d1
		jsr	Chase_Object(pc)
		bsr.w	sub_5596E
		jsr	(MoveSprite2).l
		jsr	Animate_Raw(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

Obj_Buggernaught_Baby:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_558B4(pc,d0.w),d1
		jsr	off_558B4(pc,d1.w)
		jmp	Sprite_CheckDeleteTouchXY(pc)
; ---------------------------------------------------------------------------
off_558B4:	dc.w loc_558BA-off_558B4
		dc.w loc_558CC-off_558B4
		dc.w loc_55932-off_558B4
; ---------------------------------------------------------------------------

loc_558BA:
		lea	word_55992(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#byte_559A5,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_558CC:
		jsr	Animate_Raw(pc)
		movea.w	$46(a0),a1
		cmpi.l	#loc_55810,(a1)
		beq.s	loc_558E2
		bsr.w	sub_5593C
		beq.s	loc_5590A

loc_558E2:
		bclr	#0,4(a0)
		btst	#0,4(a1)
		beq.s	loc_558F6
		bset	#0,4(a0)

loc_558F6:
		move.w	#$200,d0
		moveq	#$20,d1
		jsr	Chase_Object(pc)
		bsr.w	sub_5596E
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_5590A:
		move.b	#4,5(a0)
		move.w	$10(a0),d0
		move.w	#$200,d1
		bset	#0,4(a0)
		cmp.w	(Player_1+x_pos).w,d0
		bcc.s	loc_5592C
		neg.w	d1
		bclr	#0,4(a0)

loc_5592C:
		move.w	d1,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_55932:
		jsr	Animate_Raw(pc)
		jmp	(MoveSprite2).l

; =============== S U B R O U T I N E =======================================


sub_5593C:
		lea	(Dynamic_object_RAM+object_size).w,a2
		move.w	#((Breathing_bubbles)-(Dynamic_object_RAM+object_size))/object_size-1,d0

loc_55944:
		cmpi.l	#loc_55810,(a2)
		beq.s	loc_55958

loc_5594C:
		lea	$4A(a2),a2
		dbf	d0,loc_55944
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

loc_55958:
		move.b	$39(a2),d1
		addq.b	#1,d1
		cmpi.b	#4,d1
		bhi.s	loc_5594C
		move.b	d1,$39(a2)
		move.w	a2,$46(a0)
		rts
; End of function sub_5593C


; =============== S U B R O U T I N E =======================================


sub_5596E:
		move.w	$14(a0),d0
		move.w	(Water_level).w,d1
		subi.w	#8,d1
		cmp.w	d1,d0
		bcs.s	locret_55984
		move.w	#-$200,$1A(a0)

locret_55984:
		rts
; End of function sub_5596E

; ---------------------------------------------------------------------------
ObjDat3_55986:	dc.l Map_Buggernaut
		dc.w $A44C
		dc.w $280
		dc.b $10
		dc.b $C
		dc.b 0
		dc.b $17
word_55992:	dc.w $280
		dc.b $C
		dc.b $C
		dc.b 3
		dc.b 0
ChildObjDat_55998:dc.w 0
		dc.l Obj_Buggernaught_Baby
		dc.w $2000
byte_559A0:	dc.b    0,   0
		dc.b    1,   2
		dc.b  $FC
byte_559A5:	dc.b    0,   3
		dc.b    4,   5
		dc.b  $FC
; ---------------------------------------------------------------------------

Obj_TurboSpiker:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_559C2(pc,d0.w),d1
		jsr	off_559C2(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_559C2:	dc.w loc_559D2-off_559C2
		dc.w loc_55A2E-off_559C2
		dc.w loc_55A94-off_559C2
		dc.w loc_55AB4-off_559C2
		dc.w loc_55AD2-off_559C2
		dc.w loc_55AE0-off_559C2
		dc.w loc_55B06-off_559C2
		dc.w loc_55B22-off_559C2
; ---------------------------------------------------------------------------

loc_559D2:
		lea	ObjDat3_55C9A(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		bclr	#1,4(a0)
		beq.s	loc_559F0
		move.b	#$A,5(a0)
		lea	ChildObjDat_55D04(pc),a2
		jsr	CreateChild1_Normal(pc)

loc_559F0:
		move.b	#$10,$1F(a0)
		move.b	#$F,$1E(a0)
		move.l	#byte_55D0C,$30(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		move.w	d0,$2E(a0)
		add.w	d0,d0
		move.w	d0,$3C(a0)
		move.l	#loc_55A58,$34(a0)
		move.w	#-$80,d4
		jsr	Set_VelocityXTrackSonic(pc)
		lea	ChildObjDat_55CCC(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_55A2E:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$60,d2
		bcc.s	loc_55A46
		btst	#0,4(a0)
		beq.s	loc_55A42
		subq.w	#2,d0

loc_55A42:
		tst.w	d0
		beq.s	loc_55A74

loc_55A46:
		jsr	Animate_Raw(pc)
		jsr	(MoveSprite2).l
		jsr	Obj_Wait(pc)
		jmp	ObjHitFloor2_DoRoutine(pc)
; ---------------------------------------------------------------------------

loc_55A58:
		move.b	5(a0),d0
		cmpi.b	#4,d0
		beq.s	locret_55A72
		move.b	d0,$3A(a0)
		move.b	#4,5(a0)
		move.w	#$F,$2E(a0)

locret_55A72:
		rts
; ---------------------------------------------------------------------------

loc_55A74:
		move.b	#6,5(a0)
		move.w	#$F,$2E(a0)
		move.w	#$200,d0
		bchg	#0,4(a0)
		beq.s	loc_55A8E
		neg.w	d0

loc_55A8E:
		move.w	d0,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_55A94:
		subq.w	#1,$2E(a0)
		bmi.s	loc_55A9C
		rts
; ---------------------------------------------------------------------------

loc_55A9C:
		move.b	$3A(a0),5(a0)
		neg.w	$18(a0)
		bchg	#0,4(a0)
		move.w	$3C(a0),$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_55AB4:
		subq.w	#1,$2E(a0)
		bmi.s	loc_55ABC
		rts
; ---------------------------------------------------------------------------

loc_55ABC:
		move.b	#8,5(a0)
		bset	#1,$38(a0)
		move.l	#byte_55D11,$30(a0)
		rts
; ---------------------------------------------------------------------------

loc_55AD2:
		jsr	Animate_Raw(pc)
		jsr	(MoveSprite2).l
		jmp	ObjHitFloor2_DoRoutine(pc)
; ---------------------------------------------------------------------------

loc_55AE0:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$60,d2
		bcs.s	loc_55AEC
		rts
; ---------------------------------------------------------------------------

loc_55AEC:
		move.b	#$C,5(a0)
		bset	#0,$38(a0)
		move.w	#3,$2E(a0)
		lea	ChildObjDat_55CE4(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_55B06:
		subq.w	#1,$2E(a0)
		bmi.s	loc_55B0E
		rts
; ---------------------------------------------------------------------------

loc_55B0E:
		move.b	#$E,5(a0)
		move.w	#$180,8(a0)
		move.w	#$F,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_55B22:
		subq.w	#1,$2E(a0)
		bmi.s	loc_55B2A
		rts
; ---------------------------------------------------------------------------

loc_55B2A:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_55B32:
		lea	word_55CA6(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_55B44,(a0)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_55B44:
		jsr	Refresh_ChildPositionAdjusted(pc)
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_55B58
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_55B58:
		move.l	#loc_55B8A,(a0)
		move.w	#$100,d0
		btst	#0,4(a0)
		beq.s	loc_55B6C
		neg.w	d0

loc_55B6C:
		move.w	d0,$18(a0)
		move.w	#-$400,$1A(a0)
		moveq	#signextendB(sfx_FloorLauncher),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_55CD4(pc),a2
		jsr	CreateChild1_Normal(pc)
		jmp	Sprite_CheckDeleteTouchXY(pc)
; ---------------------------------------------------------------------------

loc_55B8A:
		jsr	(MoveSprite2).l
		jmp	Sprite_CheckDeleteTouchXY(pc)
; ---------------------------------------------------------------------------

loc_55B94:
		lea	word_55CAC(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_55BA6,(a0)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------

loc_55BA6:
		jsr	Refresh_ChildPositionAdjusted(pc)
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_55BCA
		bsr.w	sub_55BCE
		bchg	#0,$38(a0)
		beq.w	locret_55A72
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_55BCA:
		jmp	Go_Delete_Sprite(pc)

; =============== S U B R O U T I N E =======================================


sub_55BCE:
		move.b	(V_int_run_count+3).w,d0
		andi.b	#3,d0
		bne.s	locret_55BFE
		lea	ChildObjDat_55CDC(pc),a2
		jsr	CreateChild1_Normal(pc)
		bne.s	locret_55BFE
		jsr	(Random_Number).l
		andi.w	#7,d0
		subq.w	#3,d0
		add.w	d0,$10(a1)
		swap	d0
		andi.w	#7,d0
		subq.w	#3,d0
		add.w	d0,$14(a1)

locret_55BFE:
		rts
; End of function sub_55BCE

; ---------------------------------------------------------------------------

loc_55C00:
		lea	word_55CB2(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_55C24,(a0)
		move.l	#byte_55D16,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_55C24:
		jsr	Animate_Raw(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_55C2E:
		lea	word_55CB8(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_55C4C,(a0)
		move.b	$2C(a0),$2F(a0)
		moveq	#signextendB(sfx_Splash),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_55C4C:
		subq.w	#1,$2E(a0)
		bmi.s	loc_55C54
		rts
; ---------------------------------------------------------------------------

loc_55C54:
		move.l	#loc_55C6C,(a0)
		move.l	#byte_55D1D,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_55C6C:
		jsr	Animate_Raw(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_55C76:
		move.l	#loc_55C84,(a0)
		lea	ObjDat3_55CC0(pc),a1
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

loc_55C84:
		movea.w	$46(a0),a1
		btst	#0,$38(a1)
		bne.s	loc_55C94
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------

loc_55C94:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
ObjDat3_55C9A:	dc.l Map_TurboSpiker
		dc.w $2500
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b $1A
word_55CA6:	dc.w $280
		dc.b 8
		dc.b $10
		dc.b 3
		dc.b $9E
word_55CAC:	dc.w $200
		dc.b 4
		dc.b 8
		dc.b 4
		dc.b 0
word_55CB2:	dc.w $280
		dc.b 4
		dc.b 4
		dc.b 5
		dc.b 0
word_55CB8:	dc.w $8500
		dc.w $200
		dc.b 8
		dc.b 8
		dc.b 8
		dc.b 0
ObjDat3_55CC0:	dc.l Map_TurboSpikerHidden
		dc.w $C001
		dc.w $180
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b 0
ChildObjDat_55CCC:dc.w 0
		dc.l loc_55B32
		dc.w $400
ChildObjDat_55CD4:dc.w 0
		dc.l loc_55B94
		dc.w $FC14
ChildObjDat_55CDC:dc.w 0
		dc.l loc_55C00
		dc.w 4
ChildObjDat_55CE4:dc.w 4
		dc.l loc_55C2E
		dc.w $4F8
		dc.l loc_55C2E
		dc.w $FA00
		dc.l loc_55C2E
		dc.w $600
		dc.l loc_55C2E
		dc.w $F800
		dc.l loc_55C2E
		dc.w $800
ChildObjDat_55D04:dc.w 0
		dc.l loc_55C76
		dc.w 0
byte_55D0C:	dc.b    5,   0
		dc.b    1,   2
		dc.b  $FC
byte_55D11:	dc.b    1,   0
		dc.b    1,   2
		dc.b  $FC
byte_55D16:	dc.b    0,   5
		dc.b    5,   5
		dc.b    6,   7
		dc.b  $F4
byte_55D1D:	dc.b    1,   8
		dc.b    9,  $A
		dc.b   $B,  $C
		dc.b   $D, $F4
		dc.b    0
Map_TurboSpikerHidden:
		include "General/Sprites/Turbo Spiker/Map - Turbo Spiker Hidden.asm"
; ---------------------------------------------------------------------------

Obj_MegaChomper:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_55D5E(pc,d0.w),d1
		jsr	off_55D5E(pc,d1.w)
		btst	#7,$2A(a0)
		bne.w	EnemyDefeat_Score
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_55D5E:	dc.w loc_55D66-off_55D5E
		dc.w loc_55D8A-off_55D5E
		dc.w loc_55E02-off_55D5E
		dc.w loc_55E40-off_55D5E
; ---------------------------------------------------------------------------

loc_55D66:
		lea	ObjDat3_56058(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#byte_56064,$30(a0)
		clr.w	$42(a0)
		bclr	#1,4(a0)
		beq.s	locret_55D88
		bset	#7,$A(a0)

locret_55D88:
		rts
; ---------------------------------------------------------------------------

loc_55D8A:
		bsr.w	sub_55F18
		jsr	Animate_Raw(pc)
		jsr	Find_SonicTails(pc)
		move.b	(V_int_run_count+3).w,d4
		andi.b	#7,d4
		bne.s	loc_55DAC
		moveq	#1,d4
		tst.w	d1
		bne.s	loc_55DA8
		neg.w	d4

loc_55DA8:
		add.w	d4,$14(a0)

loc_55DAC:
		move.w	$14(a0),d4
		move.w	(Water_level).w,d5
		addq.w	#8,d5
		cmp.w	d5,d4
		bhi.s	loc_55DC2
		btst	#6,$2A(a1)
		beq.s	loc_55DDA

loc_55DC2:
		move.w	#$200,d0
		move.w	#8,d1
		jsr	(Chase_ObjectXOnly).l
		jsr	Change_FlipXWithVelocity(pc)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_55DDA:
		move.b	#4,5(a0)
		move.w	#$200,d4
		bset	#0,4(a0)
		tst.w	d0
		bne.s	loc_55DF6
		neg.w	d4
		bclr	#0,4(a0)

loc_55DF6:
		move.w	d4,$18(a0)
		move.w	#-$400,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_55E02:
		bsr.w	sub_55F18
		jsr	Animate_Raw(pc)
		tst.w	$1A(a0)
		bmi.s	loc_55E30
		move.w	$14(a0),d0
		cmp.w	(Water_level).w,d0
		bcs.s	loc_55E30
		move.w	$1A(a0),d0
		addi.w	#-$20,d0
		move.w	d0,$1A(a0)
		beq.s	loc_55E34
		bmi.s	loc_55E34
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_55E30:
		jmp	MoveSprite_LightGravity(pc)
; ---------------------------------------------------------------------------

loc_55E34:
		move.b	#2,5(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_55E40:
		move.b	#0,$22(a0)
		btst	#2,(V_int_run_count+3).w
		beq.s	loc_55E54
		move.b	#2,$22(a0)

loc_55E54:
		movea.w	$44(a0),a1
		cmpi.b	#4,5(a1)
		beq.w	loc_55EE6
		cmpi.b	#2,$20(a1)
		beq.s	loc_55EE6
		cmpi.b	#9,$20(a1)
		beq.s	loc_55EE6
		jsr	Check_LRControllerShake(pc)
		bne.s	loc_55EE6
		btst	#2,$38(a0)
		beq.s	loc_55E8C
		move.w	(Ctrl_1).w,d0
		andi.w	#-$7374,d0
		move.w	d0,(Ctrl_1_logical).w

loc_55E8C:
		move.w	$10(a1),d0
		move.b	$42(a0),d1
		ext.w	d1
		move.b	$38(a0),d2
		andi.b	#1,d2
		move.b	4(a1),d3
		andi.b	#1,d3
		eor.b	d2,d3
		beq.s	loc_55EBA
		bchg	#0,4(a0)
		bchg	#0,$38(a0)
		neg.b	$42(a0)

loc_55EBA:
		add.w	d1,d0
		move.w	d0,$10(a0)
		move.w	$14(a1),d0
		move.b	$43(a0),d1
		ext.w	d1
		bpl.s	loc_55ED8
		cmpi.b	#8,$20(a1)
		bne.s	loc_55ED8
		addi.w	#$10,d1

loc_55ED8:
		add.w	d1,d0
		move.w	d0,$14(a0)
		bsr.w	sub_55FEA
		beq.w	locret_55D88

loc_55EE6:
		bclr	#2,$38(a0)
		beq.s	loc_55EF2
		clr.b	(Ctrl_1_locked).w

loc_55EF2:
		move.l	#MoveChkDel,(a0)
		move.b	#2,$22(a0)
		move.w	#$200,d0
		btst	#0,4(a0)
		beq.s	loc_55F0C
		neg.w	d0

loc_55F0C:
		move.w	d0,$18(a0)
		move.w	#-$200,$1A(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_55F18:
		move.b	$29(a0),d0
		beq.w	locret_55D88
		clr.b	$29(a0)
		andi.w	#3,d0
		move.w	d0,d2
		lsl.w	#2,d0
		lea	word_55FD6-4(pc),a2
		lea	(a2,d0.w),a2
		movea.w	(a2)+,a1
		move.w	a1,$44(a0)
		btst	#1,$2B(a1)
		bne.w	loc_55FE2
		move.w	$14(a0),d1
		sub.w	$14(a1),d1
		cmpi.w	#-$10,d1
		blt.w	locret_55D88
		cmpi.w	#$10,d1
		bge.w	locret_55D88
		move.w	a1,$44(a0)
		cmpi.b	#2,$20(a1)
		beq.s	loc_55FE2
		cmpi.w	#1,d2
		bne.s	loc_55F7C
		clr.w	(Ctrl_1_logical).w
		st	(Ctrl_1_locked).w
		bset	#2,$38(a0)

loc_55F7C:
		movea.w	(a2)+,a3
		move.w	a3,$3E(a0)
		move.w	(a3),$46(a0)
		move.b	#6,5(a0)
		move.w	#0,8(a0)
		move.w	#$3C,$2E(a0)
		move.w	$10(a0),d0
		sub.w	$10(a1),d0
		move.b	d0,$42(a0)
		bclr	#0,4(a0)
		tst.w	d0
		bpl.s	loc_55FB4
		bset	#0,4(a0)

loc_55FB4:
		move.w	$14(a0),d0
		sub.w	$14(a1),d0
		move.b	d0,$43(a0)
		bclr	#0,$38(a0)
		btst	#0,4(a1)
		beq.s	locret_55FD4
		bset	#0,$38(a0)

locret_55FD4:
		rts
; ---------------------------------------------------------------------------
word_55FD6:	dc.w  Player_1, Ctrl_1
		dc.w  Player_2, Ctrl_2
		dc.w  Player_1, Ctrl_1
; ---------------------------------------------------------------------------

loc_55FE2:
		bset	#7,$2A(a0)
		rts
; End of function sub_55F18


; =============== S U B R O U T I N E =======================================


sub_55FEA:
		subq.w	#1,$2E(a0)
		bpl.s	loc_56032
		move.w	#$3B,$2E(a0)
		ori.b	#1,(Update_HUD_ring_count).w
		bset	#7,$38(a0)
		move.w	(Ring_count).w,d0
		subq.w	#1,d0
		bmi.s	loc_56044
		beq.s	loc_5601C
		cmpi.w	#$A,(Ring_count).w
		beq.s	loc_5601C
		cmpi.w	#$64,(Ring_count).w
		bne.s	loc_56022

loc_5601C:
		ori.b	#-$80,(Update_HUD_ring_count).w

loc_56022:
		move.w	d0,(Ring_count).w
		moveq	#signextendB(sfx_RingRight),d0
		jsr	(Play_Sound_2).l

loc_5602E:
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

loc_56032:
		bclr	#7,$38(a0)
		beq.s	loc_5602E
		andi.b	#-2,(Update_HUD_ring_count).w
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

loc_56044:
		movea.l	a0,a2
		movea.w	$44(a0),a1
		movea.l	a1,a0
		jsr	(Kill_Character).l
		movea.l	a2,a0
		moveq	#1,d0
		rts
; End of function sub_55FEA

; ---------------------------------------------------------------------------
ObjDat3_56058:	dc.l Map_MegaChomper
		dc.w $254D
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b $D7
byte_56064:	dc.b 2
		dc.b 0
		dc.b 1
		dc.b $FC
; ---------------------------------------------------------------------------

Obj_Poindexter:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56080(pc,d0.w),d1
		jsr	off_56080(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_56080:	dc.w loc_56084-off_56080
		dc.w loc_560D2-off_56080
; ---------------------------------------------------------------------------

loc_56084:
		lea	ObjDat3_5610C(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#byte_56118,$30(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		add.w	d0,d0
		move.w	d0,$2E(a0)
		add.w	d0,d0
		move.w	d0,$3A(a0)
		move.l	#loc_560FA,$34(a0)
		move.w	#-$40,d4
		jsr	Set_VelocityXTrackSonic(pc)
		move.w	#$20,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#1,$40(a0)
		bclr	#0,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_560D2:
		jsr	Swing_UpAndDown(pc)
		jsr	(MoveSprite2).l
		jsr	Animate_RawMultiDelay(pc)
		jsr	Obj_Wait(pc)
		move.b	#$A,$28(a0)
		cmpi.b	#2,$22(a0)
		bne.s	locret_560F8
		move.b	#-$7A,$28(a0)

locret_560F8:
		rts
; ---------------------------------------------------------------------------

loc_560FA:
		neg.w	$18(a0)
		bchg	#0,4(a0)
		move.w	$3A(a0),$2E(a0)
		rts
; ---------------------------------------------------------------------------
ObjDat3_5610C:	dc.l Map_Poindexter
		dc.w $A559
		dc.w $280
		dc.b $14
		dc.b $14
		dc.b 0
		dc.b 0
byte_56118:	dc.b    0, $7F
		dc.b    1,   4
		dc.b    2, $3F
		dc.b    1,   4
		dc.b  $FC,   0
; ---------------------------------------------------------------------------

Obj_BubblesBadnik:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56156(pc,d0.w),d1
		jsr	off_56156(pc,d1.w)
		move.b	#$12,$28(a0)
		cmpi.b	#4,$22(a0)
		bne.s	loc_5614A
		move.b	#-$7A,$28(a0)

loc_5614A:
		lea	PLCPtr_56222(pc),a2
		jsr	Perform_DPLC(pc)
		jmp	Sprite_CheckDeleteTouchSlotted(pc)
; ---------------------------------------------------------------------------
off_56156:	dc.w loc_5615C-off_56156
		dc.w loc_56198-off_56156
		dc.w loc_561D2-off_56156
; ---------------------------------------------------------------------------

loc_5615C:
		lea	ObjDat4_56210(pc),a1
		jsr	SetUp_ObjAttributesSlotted(pc)
		move.w	#-$80,$18(a0)
		btst	#0,4(a0)
		beq.s	loc_56176
		neg.w	$18(a0)

loc_56176:
		move.l	#byte_56239,$30(a0)
		move.w	#$100,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#2,$40(a0)
		bclr	#0,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_56198:
		jsr	Animate_RawMultiDelay(pc)
		move.w	$1A(a0),d4
		jsr	Swing_UpAndDown(pc)
		tst.w	$1A(a0)
		bne.s	loc_561CC
		tst.w	d4
		bmi.s	loc_561CC
		move.b	#4,5(a0)
		move.l	#byte_5622A,$30(a0)
		move.l	#loc_56200,$34(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)

loc_561CC:
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_561D2:
		jsr	Animate_RawMultiDelay(pc)
		beq.s	loc_561E8
		cmpi.b	#4,$23(a0)
		bne.s	loc_561E8
		moveq	#signextendB(sfx_ChainTick),d0
		jsr	(Play_Sound_2).l

loc_561E8:
		jsr	Swing_UpAndDown(pc)
		tst.w	d3
		beq.s	loc_561FA
		neg.w	$18(a0)
		bchg	#0,4(a0)

loc_561FA:
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_56200:
		move.b	#2,5(a0)
		move.l	#byte_56239,$30(a0)
		rts
; ---------------------------------------------------------------------------
ObjDat4_56210:	dc.w 1
		dc.w $A500
		dc.w $18
		dc.w 0
		dc.l Map_BubblesBadnik
		dc.w $280
		dc.b $14
		dc.b $18
		dc.b 0
		dc.b 0
PLCPtr_56222:	dc.l ArtUnc_BubblesBadnik
		dc.l DPLC_BubblesBadnik
byte_5622A:	dc.b    0,  $F
		dc.b    0, $77
		dc.b    1,   3
		dc.b    2,   3
		dc.b    2,   3
		dc.b    1,   3
		dc.b    0, $77
		dc.b  $F4
byte_56239:	dc.b    0, $7F
		dc.b    3,   3
		dc.b    4, $6B
		dc.b    4, $6B
		dc.b    3,   3
		dc.b    0, $7F
		dc.b  $FC
; ---------------------------------------------------------------------------

Obj_MGZMiniBoss:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56262(pc,d0.w),d1
		jsr	off_56262(pc,d1.w)
		bsr.w	sub_5682E
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_56262:	dc.w loc_5626C-off_56262
		dc.w loc_5628E-off_56262
		dc.w loc_562BE-off_56262
		dc.w loc_562E6-off_56262
		dc.w loc_5631A-off_56262
; ---------------------------------------------------------------------------

loc_5626C:
		lea	ObjDat3_568B4(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#-2,$29(a0)
		move.b	#$28,$1E(a0)
		jsr	(Swing_Setup1).l
		lea	ChildObjDat_568EA(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_5628E:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jsr	Find_SonicTails(pc)
		cmpi.w	#$60,d2
		bcc.w	locret_562BC
		move.b	#4,5(a0)
		move.l	#byte_56931,$30(a0)
		move.l	#loc_562CE,$34(a0)

locret_562BC:
		rts
; ---------------------------------------------------------------------------

loc_562BE:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jmp	Animate_RawGetFaster(pc)
; ---------------------------------------------------------------------------

loc_562CE:
		move.b	#6,5(a0)
		move.l	#byte_56937,$30(a0)
		move.l	#loc_56300,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_562E6:
		jsr	Animate_Raw(pc)
		subq.w	#1,$14(a0)
		jsr	(ObjCheckCeilingDist).l
		tst.w	d1
		bpl.s	locret_562FE
		movea.l	$34(a0),a1
		jsr	(a1)

locret_562FE:
		rts
; ---------------------------------------------------------------------------

loc_56300:
		move.b	#8,5(a0)
		st	(Screen_shake_flag).w
		move.w	#$BF,$2E(a0)
		move.l	#loc_56346,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5631A:
		jsr	Animate_Raw(pc)
		moveq	#-2,d0
		move.b	(V_int_run_count+3).w,d1
		btst	#0,d1
		beq.s	loc_5632C
		moveq	#1,d0

loc_5632C:
		add.w	d0,$14(a0)
		andi.b	#7,d1
		bne.s	loc_56342
		moveq	#signextendB(sfx_Rumble2),d0
		jsr	(Play_Sound_2).l
		bsr.w	sub_567FE

loc_56342:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_56346:
		clr.w	(Screen_shake_flag).w
		st	(Level_trigger_array+8).w
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------

Obj_9F_1:
		lea	word_56388(pc),a1
		jsr	(Check_CameraInRange).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56374(pc,d0.w),d1
		jsr	off_56374(pc,d1.w)
		bsr.w	sub_5682E
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_56374:	dc.w loc_56390-off_56374
		dc.w loc_563F0-off_56374
		dc.w loc_562BE-off_56374
		dc.w loc_562E6-off_56374
		dc.w loc_5631A-off_56374
		dc.w loc_56466-off_56374
		dc.w loc_564D4-off_56374
		dc.w loc_56530-off_56374
		dc.w loc_56552-off_56374
		dc.w loc_56578-off_56374
word_56388:	dc.w   $D20,  $EC0, $2B80, $3080
; ---------------------------------------------------------------------------

loc_56390:
		lea	ObjDat3_568B4(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#6,$29(a0)
		move.b	#$28,$1E(a0)
		move.w	#$2E00,(Camera_max_X_pos).w
		move.w	#$E10,(Camera_target_max_Y_pos).w
		move.w	#$2E00,$3A(a0)
		move.l	#loc_56402,$34(a0)
		jsr	(Swing_Setup1).l
		bset	#1,$38(a0)
		lea	PLC_56946(pc),a1
		jsr	(Load_PLC_Raw).l
		jsr	(Create_New_Sprite).l
		bne.s	loc_563E8
		move.l	#Obj_Song_Fade_Transition,(a1)
		move.b	#mus_Miniboss,$2C(a1)

loc_563E8:
		lea	ChildObjDat_568EA(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_563F0:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jmp	(loc_541A2).l
; ---------------------------------------------------------------------------

loc_56402:
		move.b	#4,5(a0)
		move.l	#byte_56931,$30(a0)
		move.l	#loc_5641A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5641A:
		move.b	#6,5(a0)
		move.l	#byte_56937,$30(a0)
		move.l	#loc_56432,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_56432:
		move.b	#8,5(a0)
		st	(Screen_shake_flag).w
		move.w	#$7F,$2E(a0)
		move.l	#loc_5644C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5644C:
		move.b	#$A,5(a0)
		clr.w	(Screen_shake_flag).w
		move.w	#$3F,$2E(a0)
		move.l	#loc_5646A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_56466:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5646A:
		move.b	#$C,5(a0)
		bset	#1,4(a0)
		st	(Screen_shake_flag).w
		move.w	#$7F,$2E(a0)
		move.l	#loc_56500,$34(a0)
		move.w	(Camera_X_pos).w,$10(a0)
		jsr	(Random_Number).l
		andi.w	#$E,d0
		move.w	word_564C4(pc,d0.w),d1
		add.w	d1,$10(a0)
		subi.w	#$40,$14(a0)
		tst.b	(_unkFA80+1).w
		beq.s	locret_564C2
		move.w	d0,d3
		lea	ChildObjDat_56920(pc),a2
		jsr	CreateChild1_Normal(pc)
		cmpi.w	#8,d3
		bcc.s	locret_564C2
		bset	#0,4(a1)

locret_564C2:
		rts
; ---------------------------------------------------------------------------
word_564C4:	dc.w $30
		dc.w $48
		dc.w $60
		dc.w $78
		dc.w $C8
		dc.w $E0
		dc.w $F8
		dc.w $110
; ---------------------------------------------------------------------------

loc_564D4:
		jsr	Animate_Raw(pc)
		moveq	#2,d0
		move.b	(V_int_run_count+3).w,d1
		btst	#0,d1
		beq.s	loc_564E6
		moveq	#-1,d0

loc_564E6:
		add.w	d0,$14(a0)
		andi.b	#7,d1
		bne.s	loc_564FC
		moveq	#signextendB(sfx_Rumble2),d0
		jsr	(Play_Sound_2).l
		bsr.w	sub_567FE

loc_564FC:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_56500:
		move.b	#$E,5(a0)
		clr.w	(Screen_shake_flag).w
		tst.b	(_unkFA80+1).w
		bne.s	loc_56520
		move.w	#$2F,$2E(a0)
		move.l	#loc_5653C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_56520:
		move.w	#$17,$2E(a0)
		move.l	#loc_5655E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_56530:
		addq.w	#4,$14(a0)
		jsr	Animate_Raw(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5653C:
		move.b	#$10,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_5655E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_56552:
		jsr	Animate_Raw(pc)
		subq.w	#1,$14(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5655E:
		move.b	#$12,5(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_5658C,$34(a0)
		jmp	(Swing_Setup1).l
; ---------------------------------------------------------------------------

loc_56578:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jsr	Animate_Raw(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5658C:
		bclr	#1,4(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_565A2,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_565A2:
		move.b	#6,5(a0)
		move.l	#loc_56432,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_565B2:
		jsr	(Obj_EndSignControl).l
		lea	ChildObjDat_56900(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_565C2:
		move.l	#loc_565D0,(a0)
		move.b	#-$62,$28(a0)
		rts
; ---------------------------------------------------------------------------

loc_565D0:
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_565E6
		jsr	Refresh_ChildPositionAdjusted(pc)
		jmp	(Add_SpriteToCollisionResponseList).l
; ---------------------------------------------------------------------------

loc_565E6:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_565EC:
		lea	ObjDat3_568C0(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		bset	#3,$2B(a0)
		jsr	(Random_Number).l
		andi.b	#3,d0
		move.b	d0,$22(a0)
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	loc_56620
		tst.b	d0
		bne.s	loc_56620
		lea	ObjDat3_568CC(pc),a1
		jsr	SetUp_ObjAttributes(pc)

loc_56620:
		move.l	#MoveDraw_SpriteTimed2,(a0)
		move.w	#$5F,$2E(a0)
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_56630:
		lea	ObjDat3_568DE(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_56672,(a0)
		move.w	(Camera_X_pos).w,d0
		addi.w	#$30,d0
		btst	#0,4(a0)
		beq.s	loc_56652
		addi.w	#$E0,d0

loc_56652:
		move.w	d0,$10(a0)
		move.w	(Camera_Y_pos).w,d0
		addi.w	#$F0,d0
		move.w	d0,$14(a0)
		move.w	d0,$3A(a0)
		clr.b	5(a0)
		move.w	#$F,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_56672:
		btst	#4,$38(a0)
		bne.w	loc_5670E
		move.w	$10(a0),-(sp)
		bsr.w	sub_56742
		moveq	#0,d1
		move.b	7(a0),d1
		addi.w	#$B,d1
		moveq	#0,d2
		move.b	6(a0),d2
		move.w	d2,d3
		addq.w	#1,d3
		move.w	(sp)+,d4
		jsr	(SolidObjectFull).l
		swap	d6
		andi.w	#3,d6
		beq.s	loc_566F2
		move.b	d6,d0
		andi.b	#1,d0
		beq.s	loc_566CE
		bclr	#5,$2A(a0)
		lea	(Player_1).w,a1
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		addi.w	#$28,d0
		bmi.s	loc_566CE
		jsr	(sub_228EC).l

loc_566CE:
		andi.b	#2,d6
		beq.s	loc_566F2
		bclr	#6,$2A(a0)
		lea	(Player_2).w,a1
		move.w	$14(a1),d0
		sub.w	$14(a0),d0
		addi.w	#$28,d0
		bmi.s	loc_566F2
		jsr	(sub_228EC).l

loc_566F2:
		subq.b	#1,$24(a0)
		bpl.s	loc_56708
		move.b	#7,$24(a0)
		addq.b	#1,$22(a0)
		andi.b	#3,$22(a0)

loc_56708:
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5670E:
		jsr	Displace_PlayerOffObject(pc)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_56718:
		lea	word_568D8(pc),a1
		jsr	(SetUp_ObjAttributes3).l
		move.l	#Obj_FlickerMove,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		move.b	RawAni_5673C(pc,d0.w),$22(a0)
		moveq	#4,d0
		jmp	Set_IndexedVelocity(pc)
; ---------------------------------------------------------------------------
RawAni_5673C:	dc.b    4,   3,   5,   6,   6,   0

; =============== S U B R O U T I N E =======================================


sub_56742:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56750(pc,d0.w),d1
		jmp	off_56750(pc,d1.w)
; End of function sub_56742

; ---------------------------------------------------------------------------
off_56750:	dc.w loc_5675A-off_56750
		dc.w loc_56774-off_56750
		dc.w loc_567B4-off_56750
		dc.w loc_567D4-off_56750
		dc.w loc_567E4-off_56750
; ---------------------------------------------------------------------------

loc_5675A:
		subq.w	#4,$14(a0)
		subq.w	#1,$2E(a0)
		bpl.w	locret_562BC
		move.b	#2,5(a0)
		move.w	#$3F,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_56774:
		subq.w	#1,$2E(a0)
		bpl.w	locret_562BC
		move.b	#4,5(a0)
		move.w	#$100,d0
		btst	#0,4(a0)
		beq.s	loc_56790
		neg.w	d0

loc_56790:
		add.w	d0,$18(a0)
		move.w	#$DF,$2E(a0)
		move.w	#$100,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#$10,$40(a0)
		bclr	#0,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_567B4:
		jsr	Swing_UpAndDown(pc)
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bpl.w	locret_562BC
		move.b	#6,5(a0)
		move.w	#$3F,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_567D4:
		subq.w	#1,$2E(a0)
		bpl.w	locret_562BC
		move.b	#8,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_567E4:
		move.w	$14(a0),d0
		addq.w	#2,d0
		move.w	d0,$14(a0)
		cmp.w	$3A(a0),d0
		bcs.w	locret_562BC
		bset	#4,$38(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_567FE:
		lea	ChildObjDat_568F8(pc),a2
		jsr	CreateChild1_Normal(pc)
		bne.s	locret_5682C
		jsr	(Random_Number).l
		andi.w	#$1FF,d0
		move.w	(Camera_X_pos).w,d1
		subi.w	#$40,d1
		add.w	d0,d1
		move.w	d1,$10(a1)
		move.w	(Camera_Y_pos).w,d0
		subi.w	#$20,d0
		move.w	d0,$14(a1)

locret_5682C:
		rts
; End of function sub_567FE


; =============== S U B R O U T I N E =======================================


sub_5682E:
		tst.b	$28(a0)
		bne.s	locret_5687E
		tst.b	$29(a0)
		beq.s	loc_56880
		tst.b	$20(a0)
		bne.s	loc_56854
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l
		bset	#6,$2A(a0)

loc_56854:
		moveq	#0,d0
		btst	#0,$20(a0)
		bne.s	loc_56860
		addq.w	#6,d0

loc_56860:
		lea	word_568A2(pc),a1
		lea	word_568A8(pc,d0.w),a2
		jsr	CopyWordData_3(pc)
		subq.b	#1,$20(a0)
		bne.s	locret_5687E
		bclr	#6,$2A(a0)
		move.b	$25(a0),$28(a0)

locret_5687E:
		rts
; ---------------------------------------------------------------------------

loc_56880:
		move.l	#Wait_Draw,(a0)
		clr.w	(Screen_shake_flag).w
		move.l	#loc_565B2,$34(a0)
		lea	(Child6_CreateBossExplosion).l,a2
		jsr	(CreateChild1_Normal).l
		jmp	BossDefeated_StopTimer(pc)
; End of function sub_5682E

; ---------------------------------------------------------------------------
word_568A2:	dc.w Normal_palette_line_2+$18, Normal_palette_line_2+$1A, Normal_palette_line_2+$1C
word_568A8:	dc.w   $CAA,  $866,  $644
		dc.w   $EEE,  $EEE,  $EEE
ObjDat3_568B4:	dc.l Map_MGZMiniBoss
		dc.w $254F
		dc.w $280
		dc.b $28
		dc.b $C
		dc.b 0
		dc.b $10
ObjDat3_568C0:	dc.l Map_MGZEndBossDebris
		dc.w $4570
		dc.w $200
		dc.b $20
		dc.b $20
		dc.b 0
		dc.b 0
ObjDat3_568CC:	dc.l Map_MGZMinibossSpires
		dc.w $4500
		dc.w $200
		dc.b 4
		dc.b $10
		dc.b 0
		dc.b $84
word_568D8:	dc.w $280
		dc.b $C
		dc.b $C
		dc.b 0
		dc.b 0
ObjDat3_568DE:	dc.l Map_MGZMovingSpikePlatform
		dc.w $4001
		dc.w $280
		dc.b $18
		dc.b $30
		dc.b 0
		dc.b 0
ChildObjDat_568EA:dc.w 1
		dc.l loc_565C2
		dc.w $E4EA
		dc.l loc_565C2
		dc.w $1CEA
ChildObjDat_568F8:dc.w 0
		dc.l loc_565EC
		dc.w 0
ChildObjDat_56900:dc.w 4
		dc.l loc_56718
		dc.w 0
		dc.l loc_56718
		dc.w $E400
		dc.l loc_56718
		dc.w $1C00
		dc.l loc_56718
		dc.w $E4EA
		dc.l loc_56718
		dc.w $1CEA
ChildObjDat_56920:dc.w 0
		dc.l loc_56630
		dc.w 0
		dc.b    0,   5
		dc.b    1,   5
		dc.b    2,   5
		dc.b    3,   5
		dc.b  $FC
byte_56931:	dc.b    5,   4
		dc.b    0,   1
		dc.b    2, $FC
byte_56937:	dc.b    0,   0
		dc.b    1,   2
		dc.b  $FC
Map_MGZMinibossSpires:dc.w word_5693E-Map_MGZMinibossSpires
word_5693E:	dc.w 1
		dc.b  $F0,   3,   0,   0, $FF, $FC
PLC_56946:	dc.w 1
		dc.l ArtNem_BossExplosion
		dc.w $A000
		dc.l ArtNem_MGZSpire
		dc.w $A000
; ---------------------------------------------------------------------------

Obj_Spiker:
		jsr	(Obj_WaitOffscreen).l
		moveq	#$A,d0
		bsr.w	sub_56B8C
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56972(pc,d0.w),d1
		jsr	off_56972(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_56972:	dc.w loc_5697E-off_56972
		dc.w loc_5698E-off_56972
		dc.w loc_569A8-off_56972
		dc.w loc_569C2-off_56972
		dc.w loc_569E2-off_56972
		dc.w loc_569F6-off_56972
; ---------------------------------------------------------------------------

loc_5697E:
		lea	ObjDat3_56BB8(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		lea	ChildObjDat_56BDC(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_5698E:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$40,d2
		bcs.s	loc_5699A
		rts
; ---------------------------------------------------------------------------

loc_5699A:
		move.b	#4,5(a0)
		move.w	#7,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_569A8:
		subq.w	#1,$14(a0)
		subq.w	#1,$2E(a0)
		bmi.s	loc_569B4
		rts
; ---------------------------------------------------------------------------

loc_569B4:
		move.b	#6,5(a0)
		bset	#2,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_569C2:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$40,d2
		bcc.s	loc_569CE
		rts
; ---------------------------------------------------------------------------

loc_569CE:
		move.b	#8,5(a0)
		bclr	#2,$38(a0)
		move.w	#7,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_569E2:
		addq.w	#1,$14(a0)
		subq.w	#1,$2E(a0)
		bmi.s	loc_569EE
		rts
; ---------------------------------------------------------------------------

loc_569EE:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_569F6:
		lea	byte_56C08(pc),a1
		jsr	Animate_RawNoSSTMultiDelay(pc)
		tst.w	d2
		beq.s	locret_56A2A
		cmpi.b	#4,$23(a0)
		bne.s	locret_56A2A
		movea.w	$44(a0),a1
		move.w	#-$600,$1A(a1)
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		clr.b	$40(a1)
		move.b	#2,5(a1)

locret_56A2A:
		rts
; ---------------------------------------------------------------------------

loc_56A2C:
		move.b	$3A(a0),5(a0)
		move.b	#$A,$28(a0)
		rts
; ---------------------------------------------------------------------------

loc_56A3A:
		jsr	Refresh_ChildPosition(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56A50(pc,d0.w),d1
		jsr	off_56A50(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_56A50:	dc.w loc_56A58-off_56A50
		dc.w loc_56A6E-off_56A50
		dc.w loc_56A84-off_56A50
		dc.w loc_56AC0-off_56A50
; ---------------------------------------------------------------------------

loc_56A58:
		lea	word_56BC4(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		tst.b	$2C(a0)
		bne.s	locret_56A6C
		bset	#0,4(a0)

locret_56A6C:
		rts
; ---------------------------------------------------------------------------

loc_56A6E:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		bne.s	loc_56A7C
		rts
; ---------------------------------------------------------------------------

loc_56A7C:
		move.b	#4,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_56A84:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		beq.s	loc_56AB8
		jsr	Find_SonicTails(pc)
		cmpi.w	#$40,d2
		bcc.s	locret_56AA6
		tst.b	$2C(a0)
		beq.s	loc_56AA2
		subq.w	#2,d0

loc_56AA2:
		tst.w	d0
		beq.s	loc_56AA8

locret_56AA6:
		rts
; ---------------------------------------------------------------------------

loc_56AA8:
		move.b	#6,5(a0)
		move.l	#loc_56AE6,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_56AB8:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_56AC0:
		lea	byte_56C11(pc),a1
		jsr	Animate_RawNoSSTMultiDelay(pc)
		tst.w	d2
		beq.s	locret_56AE4
		cmpi.b	#4,$22(a0)
		bne.s	locret_56AE4
		moveq	#signextendB(sfx_Projectile),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_56BF0(pc),a2
		jsr	CreateChild5_ComplexAdjusted(pc)

locret_56AE4:
		rts
; ---------------------------------------------------------------------------

loc_56AE6:
		move.b	#4,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_56AEE:
		jsr	Refresh_ChildPosition(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56B04(pc,d0.w),d1
		jsr	off_56B04(pc,d1.w)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------
off_56B04:	dc.w loc_56B0A-off_56B04
		dc.w loc_56B12-off_56B04
		dc.w loc_56B52-off_56B04
; ---------------------------------------------------------------------------

loc_56B0A:
		lea	word_56BCA(pc),a1
		jsr	SetUp_ObjAttributes3(pc)

loc_56B12:
		jsr	Check_PlayerCollision(pc)
		bne.s	loc_56B1A
		rts
; ---------------------------------------------------------------------------

loc_56B1A:
		bsr.w	sub_56B64
		move.b	#4,5(a0)
		clr.b	$28(a0)
		move.w	#$10,$2E(a0)
		move.l	#loc_56B56,$34(a0)
		movea.w	$46(a0),a1
		bset	#3,$38(a1)
		move.b	#1,$22(a1)
		clr.b	$28(a1)
		move.w	$44(a0),$44(a1)
		rts
; ---------------------------------------------------------------------------

loc_56B52:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_56B56:
		move.b	#2,5(a0)
		move.b	#-$36,$28(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_56B64:
		clr.w	$1A(a1)
		bset	#1,$2A(a1)
		addq.w	#6,$14(a1)
		move.b	#2,5(a1)
		clr.b	$40(a1)
		bclr	#4,$2A(a1)
		moveq	#signextendB(sfx_Spring),d0
		jsr	(Play_Sound_2).l
		rts
; End of function sub_56B64


; =============== S U B R O U T I N E =======================================


sub_56B8C:
		btst	#3,$38(a0)
		bne.s	loc_56B96
		rts
; ---------------------------------------------------------------------------

loc_56B96:
		bclr	#3,$38(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		move.b	5(a0),$3A(a0)
		move.b	d0,5(a0)
		move.l	#loc_56A2C,$34(a0)
		rts
; End of function sub_56B8C

; ---------------------------------------------------------------------------
ObjDat3_56BB8:	dc.l Map_Spiker
		dc.w $2530
		dc.w $280
		dc.b $20
		dc.b $10
		dc.b 0
		dc.b $A
word_56BC4:	dc.w $280
		dc.b $20
		dc.b 4
		dc.b 3
		dc.b 0
word_56BCA:	dc.w $200
		dc.b $20
		dc.b 4
		dc.b 7
		dc.b $CA
ObjDat3_56BD0:	dc.l Map_Spiker
		dc.w $530
		dc.w $280
		dc.b 4
		dc.b 4
		dc.b 5
		dc.b $98
ChildObjDat_56BDC:dc.w 2
		dc.l loc_56A3A
		dc.w $F00C
		dc.l loc_56A3A
		dc.w $100C
		dc.l loc_56AEE
		dc.w $F4
ChildObjDat_56BF0:dc.w 0
		dc.l loc_54B46
		dc.l ObjDat3_56BD0
		dc.l byte_56C1A
		dc.l MoveSlowFall_AnimateRaw
		dc.b 4
		dc.b 0
		dc.w $200
		dc.w $FE00
byte_56C08:	dc.b    1,   0
		dc.b    2,   1
		dc.b    1,   0
		dc.b    0,   5
		dc.b  $F4
byte_56C11:	dc.b    3,   1
		dc.b    3,  $F
		dc.b    4,   7
		dc.b    3, $3F
		dc.b  $F4
byte_56C1A:	dc.b    1,   5
		dc.b    6, $FC
; ---------------------------------------------------------------------------

Obj_Mantis:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56C36(pc,d0.w),d1
		jsr	off_56C36(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_56C36:	dc.w loc_56C40-off_56C36
		dc.w loc_56C56-off_56C36
		dc.w loc_56C82-off_56C36
		dc.w loc_56CBC-off_56C36
		dc.w loc_56CE0-off_56C36
; ---------------------------------------------------------------------------

loc_56C40:
		lea	ObjDat3_56D48(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#$29,$1E(a0)
		lea	ChildObjDat_56D5A(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_56C56:
		jsr	Find_SonicTails(pc)
		bclr	#0,4(a0)
		tst.w	d0
		beq.s	loc_56C6A
		bset	#0,4(a0)

loc_56C6A:
		cmpi.w	#$40,d2
		bcs.s	loc_56C72
		rts
; ---------------------------------------------------------------------------

loc_56C72:
		move.b	#4,5(a0)
		move.l	#loc_56CA6,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_56C82:
		lea	byte_56D62(pc),a1
		jsr	Animate_RawNoSSTMultiDelay(pc)
		tst.w	d2
		beq.s	locret_56C9E
		bmi.s	locret_56C9E
		moveq	#0,d0
		move.b	$23(a0),d0
		move.w	word_56CA0(pc,d0.w),d0
		add.w	d0,$14(a0)

locret_56C9E:
		rts
; ---------------------------------------------------------------------------
word_56CA0:	dc.w 0
		dc.w $FFFB
		dc.w $FFED
; ---------------------------------------------------------------------------

loc_56CA6:
		move.b	#6,5(a0)
		move.w	#-$600,$1A(a0)
		move.l	#loc_56CCC,$34(a0)

locret_56CBA:
		rts
; ---------------------------------------------------------------------------

loc_56CBC:
		jsr	(MoveSprite).l
		tst.w	$1A(a0)
		bmi.s	locret_56CBA
		jmp	ObjHitFloor_DoRoutine(pc)
; ---------------------------------------------------------------------------

loc_56CCC:
		move.b	#8,5(a0)
		clr.w	$1A(a0)
		move.l	#loc_56D06,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_56CE0:
		lea	byte_56D69(pc),a1
		jsr	Animate_RawNoSSTMultiDelay(pc)
		tst.w	d2
		beq.s	locret_56CFC
		bmi.s	locret_56CFC
		moveq	#0,d0
		move.b	$23(a0),d0
		move.w	word_56CFE(pc,d0.w),d0
		add.w	d0,$14(a0)

locret_56CFC:
		rts
; ---------------------------------------------------------------------------
word_56CFE:	dc.w 0
		dc.w $12
		dc.w 6
		dc.w $FFFF
; ---------------------------------------------------------------------------

loc_56D06:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_56D0E:
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56D24(pc,d0.w),d1
		jsr	off_56D24(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_56D24:	dc.w loc_56D28-off_56D24
		dc.w loc_56D30-off_56D24
; ---------------------------------------------------------------------------

loc_56D28:
		lea	word_56D54(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_56D30:
		movea.w	$46(a0),a1
		move.b	#5,$22(a0)
		tst.w	$1A(a1)
		bmi.s	locret_56D46
		move.b	#4,$22(a0)

locret_56D46:
		rts
; ---------------------------------------------------------------------------
ObjDat3_56D48:	dc.l Map_Mantis
		dc.w $254F
		dc.w $280
		dc.b $14
		dc.b $1C
		dc.b 0
		dc.b $1A
word_56D54:	dc.w $200
		dc.b 4
		dc.b 4
		dc.b 5
		dc.b 0
ChildObjDat_56D5A:dc.w 0
		dc.l loc_56D0E
		dc.w $F7F5
byte_56D62:	dc.b    0,   0
		dc.b    1,   2
		dc.b    2,   0
		dc.b  $F4
byte_56D69:	dc.b    2,   0
		dc.b    1,   2
		dc.b    3,   2
		dc.b    0, $1F
		dc.b  $F4
; ---------------------------------------------------------------------------

Obj_Clamer:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56D92(pc,d0.w),d1
		jsr	off_56D92(pc,d1.w)
		lea	PLCPtr_56F1C(pc),a2
		jsr	Perform_DPLC(pc)
		jmp	Sprite_CheckDeleteTouchSlotted(pc)
; ---------------------------------------------------------------------------
off_56D92:	dc.w loc_56D9A-off_56D92
		dc.w loc_56DAA-off_56D92
		dc.w loc_56E0C-off_56D92
		dc.w loc_56E22-off_56D92
; ---------------------------------------------------------------------------

loc_56D9A:
		lea	ObjDat4_56ED8(pc),a1
		jsr	SetUp_ObjAttributesSlotted(pc)
		lea	ChildObjDat_56EFC(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_56DAA:
		btst	#0,$38(a0)
		bne.s	loc_56DD2
		jsr	Find_SonicTails(pc)
		cmpi.w	#$60,d2
		bcc.s	loc_56DCA
		btst	#0,4(a0)
		beq.s	loc_56DC6
		subq.w	#2,d0

loc_56DC6:
		tst.w	d0
		beq.s	loc_56DF4

loc_56DCA:
		lea	byte_56F24(pc),a1
		jmp	Animate_RawNoSSTMultiDelay(pc)
; ---------------------------------------------------------------------------

loc_56DD2:
		move.b	#4,5(a0)
		clr.b	$28(a0)
		bclr	#0,$38(a0)
		move.l	#loc_56E14,$34(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_56DF4:
		move.b	#6,5(a0)
		move.l	#loc_56E14,$34(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)

locret_56E0A:
		rts
; ---------------------------------------------------------------------------

loc_56E0C:
		lea	byte_56F2D(pc),a1
		jmp	Animate_RawNoSST(pc)
; ---------------------------------------------------------------------------

loc_56E14:
		move.b	#2,5(a0)
		move.b	#$A,$28(a0)
		rts
; ---------------------------------------------------------------------------

loc_56E22:
		lea	byte_56F39(pc),a1
		jsr	Animate_RawNoSSTMultiDelay(pc)
		tst.w	d2
		beq.w	locret_56E0A
		cmpi.b	#8,$22(a0)
		bne.w	locret_56E0A
		tst.b	4(a0)
		bpl.w	locret_56E0A
		lea	ChildObjDat_56F04(pc),a2
		jmp	CreateChild5_ComplexAdjusted(pc)
; ---------------------------------------------------------------------------

loc_56E4A:
		lea	word_56EEA(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		movea.w	$46(a0),a1
		move.b	4(a1),4(a0)
		clr.w	$A(a0)
		move.l	#loc_56E68,(a0)
		rts
; ---------------------------------------------------------------------------

loc_56E68:
		bsr.w	Check_PlayerCollision
		beq.s	loc_56E78
		move.l	#loc_56E7C,(a0)
		bsr.w	sub_56E8C

loc_56E78:
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_56E7C:
		subq.w	#1,$2E(a0)
		bmi.s	loc_56E84
		rts
; ---------------------------------------------------------------------------

loc_56E84:
		move.l	#loc_56E68,(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_56E8C:
		move.w	#$800,d0
		bclr	#0,$2A(a1)
		btst	#0,4(a0)
		beq.s	loc_56EA6
		neg.w	d0
		bset	#0,$2A(a1)

loc_56EA6:
		move.w	d0,$18(a1)
		move.w	d0,$1C(a1)
		move.w	#-$800,$1A(a1)
		bset	#1,$2A(a1)
		addq.w	#6,$14(a1)
		move.b	#$10,$20(a1)
		move.b	#2,5(a1)
		clr.b	$40(a1)
		moveq	#signextendB(sfx_Spring),d0
		jsr	(Play_Sound_2).l
		rts
; End of function sub_56E8C

; ---------------------------------------------------------------------------
ObjDat4_56ED8:	dc.w 1
		dc.w $A500
		dc.w $12
		dc.w 0
		dc.l Map_Clamer
		dc.w $280
		dc.b $14
		dc.b $10
		dc.b 0
		dc.b $A
word_56EEA:	dc.w $280
		dc.b 8
		dc.b 4
		dc.b $B
		dc.b $D7
ObjDat3_56EF0:	dc.l Map_Clamer
		dc.w $A570
		dc.w $200
		dc.b 8
		dc.b 8
		dc.b 9
		dc.b $98
ChildObjDat_56EFC:dc.w 0
		dc.l loc_56E4A
		dc.w $F8
ChildObjDat_56F04:dc.w 0
		dc.l loc_54B46
		dc.l ObjDat3_56EF0
		dc.l 0
		dc.l MoveSprite2
		dc.b $F0
		dc.b 2
		dc.w $FE00
		dc.w 0
PLCPtr_56F1C:	dc.l ArtUnc_Clamer
		dc.l DPLC_Clamer
byte_56F24:	dc.b    1,   1
		dc.b    0, $5F
		dc.b    1,   1
		dc.b    2,   1
		dc.b  $FC
byte_56F2D:	dc.b    0,   0
		dc.b    1,   2
		dc.b    3,   4
		dc.b    3,   2
		dc.b    1,  $A
		dc.b    0, $F4
byte_56F39:	dc.b    0,   2
		dc.b    5,   2
		dc.b    6,   2
		dc.b    7, $2F
		dc.b    8,   5
		dc.b    7, $1F
		dc.b    6,   2
		dc.b    5,   2
		dc.b    0, $1F
		dc.b  $F4
; ---------------------------------------------------------------------------

Obj_CNZBlastoid:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_56F64(pc,d0.w),d1
		jsr	off_56F64(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_56F64:	dc.w loc_56F6E-off_56F64
		dc.w loc_56F76-off_56F64
		dc.w loc_56FA2-off_56F64
		dc.w loc_56FC2-off_56F64
		dc.w loc_56FC2-off_56F64
; ---------------------------------------------------------------------------

loc_56F6E:
		lea	ObjDat3_570EE(pc),a1
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

loc_56F76:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$80,d2
		bcs.s	loc_56F82
		rts
; ---------------------------------------------------------------------------

loc_56F82:
		move.b	#4,5(a0)
		move.l	#byte_57116,$30(a0)
		move.l	#loc_56FA6,$34(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)

locret_56FA0:
		rts
; ---------------------------------------------------------------------------

loc_56FA2:
		jmp	Animate_RawGetFaster(pc)
; ---------------------------------------------------------------------------

loc_56FA6:
		move.b	#6,5(a0)
		move.w	#4,$2E(a0)
		move.l	#loc_56FC6,$34(a0)
		lea	ChildObjDat_57106(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_56FC2:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_56FC6:
		move.b	#8,5(a0)
		moveq	#$68,d0
		bchg	#1,4(a0)
		bne.s	loc_56FD8
		neg.w	d0

loc_56FD8:
		add.w	d0,$14(a0)
		move.w	#$20,$2E(a0)
		move.l	#loc_57002,$34(a0)
		moveq	#signextendB(sfx_Lightning),d0
		jsr	(Play_Sound_2).l
		tst.b	4(a0)
		bpl.w	locret_56FA0
		lea	ChildObjDat_5710E(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------

loc_57002:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_5700A:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5701C(pc,d0.w),d1
		jsr	off_5701C(pc,d1.w)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------
off_5701C:	dc.w loc_57020-off_5701C
		dc.w loc_5704C-off_5701C
; ---------------------------------------------------------------------------

loc_57020:
		lea	word_570FA(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		bset	#5,$2B(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		movea.w	$46(a0),a1
		moveq	#$34,d0
		btst	#1,4(a1)
		bne.s	loc_57046
		neg.w	d0

loc_57046:
		add.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_5704C:
		lea	byte_5711B(pc),a1
		jmp	Animate_RawNoSST(pc)
; ---------------------------------------------------------------------------

loc_57054:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_57066(pc,d0.w),d1
		jsr	off_57066(pc,d1.w)
		jmp	Sprite_CheckDeleteTouchXY(pc)
; ---------------------------------------------------------------------------
off_57066:	dc.w loc_5706C-off_57066
		dc.w loc_570A2-off_57066
		dc.w loc_570E8-off_57066
; ---------------------------------------------------------------------------

loc_5706C:
		lea	word_57100(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		bset	#5,$2B(a0)
		movea.w	$46(a0),a1
		move.w	#$600,d0
		btst	#1,4(a1)
		bne.s	loc_5708C
		neg.w	d0

loc_5708C:
		move.w	d0,$1A(a0)
		move.w	#$600,d0
		tst.b	$2C(a0)
		bne.s	loc_5709C
		neg.w	d0

loc_5709C:
		move.w	d0,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_570A2:
		lea	byte_57126(pc),a1
		jsr	Animate_RawNoSST(pc)
		moveq	#$40,d0
		move.w	$18(a0),d1
		bmi.s	loc_570B4
		neg.w	d0

loc_570B4:
		add.w	d0,d1
		cmpi.w	#-$100,d1
		blt.s	loc_570C2
		cmpi.w	#$100,d1
		ble.s	loc_570DC

loc_570C2:
		move.w	d1,$18(a0)
		moveq	#$40,d0
		move.w	$1A(a0),d1
		bmi.s	loc_570D0
		neg.w	d0

loc_570D0:
		add.w	d0,d1
		move.w	d1,$1A(a0)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_570DC:
		move.b	#4,5(a0)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_570E8:
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------
ObjDat3_570EE:	dc.l Map_CNZBlastoid
		dc.w $A524
		dc.w $280
		dc.b $C
		dc.b $C
		dc.b 0
		dc.b $B
word_570FA:	dc.w $200
		dc.b $C
		dc.b $40
		dc.b 2
		dc.b $AB
word_57100:	dc.w $280
		dc.b 8
		dc.b 8
		dc.b 6
		dc.b $98
ChildObjDat_57106:dc.w 0
		dc.l loc_5700A
		dc.w 0
ChildObjDat_5710E:dc.w 1
		dc.l loc_57054
		dc.w 0
byte_57116:	dc.b    9, $10
		dc.b    0,   1
		dc.b  $FC
byte_5711B:	dc.b    0,   2
		dc.b    8,   3
		dc.b    8,   4
		dc.b    8,   5
		dc.b    8,   2
		dc.b  $F4
byte_57126:	dc.b    3,   6
		dc.b    7, $FC
; ---------------------------------------------------------------------------

Obj_Batbot:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_57142(pc,d0.w),d1
		jsr	off_57142(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_57142:	dc.w loc_57148-off_57142
		dc.w loc_57158-off_57142
		dc.w loc_57180-off_57142
; ---------------------------------------------------------------------------

loc_57148:
		lea	ObjDat3_57208(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		lea	ChildObjDat_57220(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_57158:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$40,d2
		bcs.s	loc_57164
		rts
; ---------------------------------------------------------------------------

loc_57164:
		move.b	#4,5(a0)
		bset	#3,$38(a0)
		move.w	#$200,d0
		tst.w	d0
		bne.s	loc_5717A
		neg.w	d0

loc_5717A:
		move.w	d0,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_57180:
		lea	byte_5722E(pc),a1
		jsr	Animate_RawNoSST(pc)
		lea	(Player_1).w,a1
		move.w	#$200,d0
		moveq	#8,d1
		jsr	Chase_Object(pc)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_5719C:
		jsr	Refresh_ChildPosition(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_571B2(pc,d0.w),d1
		jsr	off_571B2(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_571B2:	dc.w loc_571B8-off_571B2
		dc.w loc_571C0-off_571B2
		dc.w loc_571DA-off_571B2
; ---------------------------------------------------------------------------

loc_571B8:
		lea	word_57214(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_571C0:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_571CE
		rts
; ---------------------------------------------------------------------------

loc_571CE:
		move.b	#4,5(a0)
		addq.b	#1,$22(a0)
		rts
; ---------------------------------------------------------------------------

loc_571DA:
		lea	byte_57234(pc),a1
		jmp	Animate_RawNoSSTMultiDelay(pc)
; ---------------------------------------------------------------------------

loc_571E2:
		jsr	Refresh_ChildPosition(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_571F8(pc,d0.w),d1
		jsr	off_571F8(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_571F8:	dc.w loc_571FE-off_571F8
		dc.w loc_571C0-off_571F8
		dc.w locret_57206-off_571F8
; ---------------------------------------------------------------------------

loc_571FE:
		lea	word_5721A(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

locret_57206:
		rts
; ---------------------------------------------------------------------------
ObjDat3_57208:	dc.l Map_Batbot
		dc.w $A552
		dc.w $280
		dc.b $20
		dc.b 8
		dc.b 2
		dc.b $D
word_57214:	dc.w $200
		dc.b 8
		dc.b 8
		dc.b 3
		dc.b 0
word_5721A:	dc.w $200
		dc.b 4
		dc.b 4
		dc.b 5
		dc.b 0
ChildObjDat_57220:dc.w 1
		dc.l loc_5719C
		dc.w $10
		dc.l loc_571E2
		dc.w 3
byte_5722E:	dc.b    2,   0
		dc.b    1,   2
		dc.b    1, $FC
byte_57234:	dc.b    3, $1D
		dc.b    4,   2
		dc.b    3,   1
		dc.b    4,   2
		dc.b    3,  $E
		dc.b    4,   2
		dc.b  $FC,   0
; ---------------------------------------------------------------------------

Obj_Blaster:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5725A(pc,d0.w),d1
		jsr	off_5725A(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_5725A:	dc.w loc_5726A-off_5725A
		dc.w loc_572B2-off_5725A
		dc.w loc_5731C-off_5725A
		dc.w loc_5731C-off_5725A
		dc.w loc_57362-off_5725A
		dc.w loc_57384-off_5725A
		dc.w loc_573AC-off_5725A
		dc.w loc_573BC-off_5725A
; ---------------------------------------------------------------------------

loc_5726A:
		lea	ObjDat3_57438(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#$10,$1E(a0)
		bset	#1,4(a0)
		bclr	#1,4(a0)
		beq.s	loc_5728A
		st	$3C(a0)

loc_5728A:
		move.b	#$E,$1E(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		add.w	d0,d0
		move.w	d0,$2E(a0)
		add.w	d0,d0
		move.w	d0,$3A(a0)
		move.l	#loc_57306,$34(a0)
		move.w	#-$80,d4
		jmp	Set_VelocityXTrackSonic(pc)
; ---------------------------------------------------------------------------

loc_572B2:
		bsr.w	sub_57414
		jsr	Find_SonicTails(pc)
		cmpi.w	#$60,d2
		bcc.s	loc_572CE
		btst	#0,4(a0)
		beq.s	loc_572CA
		subq.w	#2,d0

loc_572CA:
		tst.w	d0
		beq.s	loc_572E4

loc_572CE:
		lea	byte_5749A(pc),a1
		jsr	Animate_RawNoSSTMultiDelay(pc)
		jsr	(MoveSprite2).l
		jsr	ObjHitFloor2_DoRoutine(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_572E4:
		move.b	#6,5(a0)
		move.b	#0,$22(a0)
		move.w	$2E(a0),$3A(a0)
		move.w	#$10,$2E(a0)
		move.l	#loc_57344,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_57306:
		move.b	#4,5(a0)
		move.w	#$20,$2E(a0)
		move.l	#loc_57324,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5731C:
		bsr.w	sub_57414
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_57324:
		neg.w	$18(a0)
		bchg	#0,4(a0)

loc_5732E:
		move.b	#2,5(a0)
		move.w	$3A(a0),$2E(a0)
		move.l	#loc_57306,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_57344:
		move.b	#8,5(a0)
		move.l	#loc_5732E,$34(a0)
		lea	ChildObjDat_57462(pc),a2
		jsr	CreateChild1_Normal(pc)
		lea	ChildObjDat_5746A(pc),a2
		jmp	CreateChild5_ComplexAdjusted(pc)
; ---------------------------------------------------------------------------

loc_57362:
		bsr.w	sub_57414
		lea	byte_574A4(pc),a1
		jsr	Animate_RawNoSSTMultiDelay(pc)
		tst.w	d2
		beq.s	locret_57382
		cmpi.b	#6,$23(a0)
		bne.s	locret_57382
		lea	ChildObjDat_57482(pc),a2
		jsr	CreateChild5_ComplexAdjusted(pc)

locret_57382:
		rts
; ---------------------------------------------------------------------------

loc_57384:
		addi.w	#-$20,$1A(a0)
		jsr	(MoveSprite2).l
		jsr	(ObjCheckCeilingDist).l
		tst.w	d1
		bmi.s	loc_5739C
		rts
; ---------------------------------------------------------------------------

loc_5739C:
		add.w	d1,$14(a0)
		move.b	#$C,5(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_573AC:
		tst.b	(_unkFAA2).w
		beq.s	loc_573B4
		rts
; ---------------------------------------------------------------------------

loc_573B4:
		move.b	#$E,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_573BC:
		addi.w	#$20,$1A(a0)
		jsr	(MoveSprite2).l
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bmi.s	loc_573D4
		rts
; ---------------------------------------------------------------------------

loc_573D4:
		add.w	d1,$14(a0)
		move.b	$3D(a0),5(a0)
		move.w	$3E(a0),$18(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_573EA:
		lea	word_57444(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_57402,(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_57402:
		jsr	Refresh_ChildPositionAdjusted(pc)
		lea	byte_5749F(pc),a1
		jsr	Animate_RawNoSST(pc)
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_57414:
		tst.b	$3C(a0)
		beq.s	locret_57436
		tst.b	(_unkFAA2).w
		beq.s	locret_57436
		move.b	5(a0),$3D(a0)
		move.b	#$A,5(a0)
		move.w	$18(a0),$3E(a0)
		clr.w	$18(a0)

locret_57436:
		rts
; End of function sub_57414

; ---------------------------------------------------------------------------
ObjDat3_57438:	dc.l Map_Blaster
		dc.w $A500
		dc.w $280
		dc.b $18
		dc.b $10
		dc.b 0
		dc.b $A
word_57444:	dc.w $200
		dc.b 8
		dc.b 8
		dc.b 4
		dc.b 0
ObjDat3_5744A:	dc.l Map_Blaster
		dc.w $A500
		dc.w $280
		dc.b 4
		dc.b 4
		dc.b 5
		dc.b $18
ObjDat3_57456:	dc.l Map_Blaster
		dc.w $A500
		dc.w $200
		dc.b 4
		dc.b 4
		dc.b 7
		dc.b 0
ChildObjDat_57462:dc.w 0
		dc.l loc_573EA
		dc.w $E5EA
ChildObjDat_5746A:dc.w 0
		dc.l loc_54B46
		dc.l ObjDat3_5744A
		dc.l byte_574AD
		dc.l MoveFall_AnimateRaw
		dc.b $E0
		dc.b $E0
		dc.w $FE00
		dc.w $FC00
ChildObjDat_57482:dc.w 0
		dc.l loc_54B46
		dc.l ObjDat3_57456
		dc.l byte_574B1
		dc.l MoveFall_AnimateRaw
		dc.b $F4
		dc.b $FC
		dc.w $100
		dc.w $FE00
byte_5749A:	dc.b    0, $17
		dc.b    1,   2
		dc.b  $FC
byte_5749F:	dc.b    0,   4
		dc.b    4,   5
		dc.b  $F4
byte_574A4:	dc.b    0,   1
		dc.b    0,   1
		dc.b    2,   5
		dc.b    0, $1F
		dc.b  $F4
byte_574AD:	dc.b    1,   5
		dc.b    6, $FC
byte_574B1:	dc.b    2,   7
		dc.b    8,   9
		dc.b   $A, $FC
		dc.b    0
; ---------------------------------------------------------------------------

Obj_TechnoSqueek:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_574D0(pc,d0.w),d1
		jsr	off_574D0(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_574D0:	dc.w loc_574DA-off_574D0
		dc.w loc_57574-off_574D0
		dc.w loc_575C6-off_574D0
		dc.w loc_575F4-off_574D0
		dc.w loc_57638-off_574D0
; ---------------------------------------------------------------------------

loc_574DA:
		move.w	#$800,$2E(a0)
		move.l	#loc_575BE,$34(a0)
		cmpi.b	#4,$2C(a0)
		beq.s	loc_57536
		lea	ObjDat_576F2(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#byte_57718,$30(a0)
		bset	#0,4(a0)
		cmpi.b	#2,$2C(a0)
		bne.s	loc_57514
		bset	#1,4(a0)

loc_57514:
		lea	ChildObjDat_57710(pc),a2
		jsr	CreateChild1_Normal(pc)
		move.w	#$400,d0
		move.w	d0,$3A(a0)
		move.w	d0,$18(a0)
		move.w	#$20,$3C(a0)
		bclr	#3,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_57536:
		lea	ObjDat3_576FE(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#6,5(a0)
		move.l	#byte_5773E,$30(a0)
		bset	#1,4(a0)
		lea	ChildObjDat_57710(pc),a2
		jsr	CreateChild1_Normal(pc)
		move.w	#$400,d0
		move.w	d0,$3E(a0)
		move.w	d0,$1A(a0)
		move.w	#$20,$40(a0)
		bclr	#0,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_57574:
		jsr	Animate_RawMultiDelayFlipX(pc)
		tst.w	d2
		beq.s	loc_5758A
		cmpi.b	#6,$23(a0)
		bne.s	loc_5758A
		bset	#1,$38(a0)

loc_5758A:
		jsr	Swing_LeftAndRight(pc)
		tst.w	$18(a0)
		beq.s	loc_5759E
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5759E:
		move.b	#4,5(a0)
		move.l	#byte_5772E,$30(a0)
		move.l	#loc_575CA,$34(a0)

loc_575B4:
		clr.b	$23(a0)
		clr.b	$24(a0)
		rts
; ---------------------------------------------------------------------------

loc_575BE:
		bclr	#5,$38(a0)

locret_575C4:
		rts
; ---------------------------------------------------------------------------

loc_575C6:
		jmp	Animate_RawAdjustFlipX(pc)
; ---------------------------------------------------------------------------

loc_575CA:
		move.b	#2,5(a0)
		move.l	#byte_57723,$30(a0)

loc_575D8:
		bclr	#1,$38(a0)
		bset	#5,$38(a0)
		move.w	#$10,$2E(a0)
		move.l	#loc_575BE,$34(a0)
		bra.s	loc_575B4
; ---------------------------------------------------------------------------

loc_575F4:
		jsr	Animate_RawMultiDelayFlipY(pc)
		tst.w	d2
		beq.s	loc_5760A
		cmpi.b	#6,$23(a0)
		bne.s	loc_5760A
		bset	#1,$38(a0)

loc_5760A:
		jsr	Swing_UpAndDown(pc)
		tst.w	$1A(a0)
		beq.s	loc_5761E
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5761E:
		move.b	#8,5(a0)
		move.l	#byte_57754,$30(a0)
		move.l	#loc_5763C,$34(a0)
		bra.w	loc_575B4
; ---------------------------------------------------------------------------

loc_57638:
		jmp	Animate_RawAdjustFlipY(pc)
; ---------------------------------------------------------------------------

loc_5763C:
		move.b	#6,5(a0)
		move.l	#byte_57749,$30(a0)
		bra.s	loc_575D8
; ---------------------------------------------------------------------------

loc_5764C:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5765E(pc,d0.w),d1
		jsr	off_5765E(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_5765E:	dc.w loc_57664-off_5765E
		dc.w loc_57680-off_5765E
		dc.w loc_576B8-off_5765E
; ---------------------------------------------------------------------------

loc_57664:
		lea	word_5770A(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		movea.w	$46(a0),a1
		cmpi.b	#4,$2C(a1)
		bne.s	locret_5767E
		move.b	#4,5(a0)

locret_5767E:
		rts
; ---------------------------------------------------------------------------

loc_57680:
		lea	byte_57739(pc),a1
		jsr	Animate_RawNoSST(pc)
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	$22(a1),d0
		btst	#1,$38(a1)
		beq.s	loc_5769C
		moveq	#2,d0

loc_5769C:
		add.w	d0,d0
		move.w	word_576B2(pc,d0.w),$42(a0)
		btst	#5,$38(a1)
		bne.w	locret_575C4
		jmp	Refresh_ChildPositionAdjusted(pc)
; ---------------------------------------------------------------------------
word_576B2:	dc.w $1404
		dc.w $C04
		dc.w 4
; ---------------------------------------------------------------------------

loc_576B8:
		lea	byte_5775F(pc),a1
		jsr	Animate_RawNoSST(pc)
		movea.w	$46(a0),a1
		moveq	#0,d0
		move.b	$22(a1),d0
		subq.w	#5,d0
		btst	#1,$38(a1)
		beq.s	loc_576D6
		moveq	#2,d0

loc_576D6:
		add.w	d0,d0
		move.w	word_576EC(pc,d0.w),$42(a0)
		btst	#5,$38(a1)
		bne.w	locret_575C4
		jmp	Refresh_ChildPositionAdjusted(pc)
; ---------------------------------------------------------------------------
word_576EC:	dc.w $FC14
		dc.w $FC0C
		dc.w $FC00
ObjDat_576F2:	dc.l Map_TechnoSqueek
		dc.w $A528
		dc.w $280
		dc.b $C
		dc.b 8
		dc.b 0
		dc.b $B
ObjDat3_576FE:	dc.l Map_TechnoSqueek
		dc.w $A528
		dc.w $280
		dc.b 8
		dc.b $C
		dc.b 5
		dc.b $B
word_5770A:	dc.w $280
		dc.b 8
		dc.b 4
		dc.b 2
		dc.b 0
ChildObjDat_57710:dc.w 0
		dc.l loc_5764C
		dc.w $1404
byte_57718:	dc.b    0,   0
		dc.b    0, $17
		dc.b    1,   1
		dc.b  $41,   1
		dc.b    0, $1F
		dc.b  $F4
byte_57723:	dc.b    0,   0
		dc.b    0, $37
		dc.b    1,   1
		dc.b  $41,   1
		dc.b    0, $1F
		dc.b  $F4
byte_5772E:	dc.b    3,   0
		dc.b    0,   1
		dc.b  $41,   0
		dc.b    0,   1
		dc.b  $41,   0
		dc.b  $F4
byte_57739:	dc.b    3,   2
		dc.b    3,   4
		dc.b  $FC
byte_5773E:	dc.b    5,   0
		dc.b    5, $17
		dc.b    6,   1
		dc.b  $26,   1
		dc.b    0, $1F
		dc.b  $F4
byte_57749:	dc.b    5,   0
		dc.b    5, $37
		dc.b    6,   1
		dc.b  $26,   1
		dc.b    5, $1F
		dc.b  $F4
byte_57754:	dc.b    3,   5
		dc.b    5,   6
		dc.b  $26,   5
		dc.b    5,   6
		dc.b  $26,   5
		dc.b  $F4
byte_5775F:	dc.b    3,   7
		dc.b    8,   9
		dc.b  $FC
; ---------------------------------------------------------------------------

Obj_ICZPathFollowPlatform:
		jsr	(Obj_WaitOffscreen).l

loc_5776A:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5779C(pc,d0.w),d1
		move.w	$10(a0),-(sp)
		jsr	off_5779C(pc,d1.w)
		moveq	#$2B,d1
		moveq	#$14,d2
		moveq	#$14,d3
		move.w	(sp)+,d4
		btst	#7,$2A(a0)
		bne.s	loc_57796
		jsr	(SolidObjectFull).l
		bsr.w	sub_57BDA

loc_57796:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
off_5779C:	dc.w loc_577B0-off_5779C
		dc.w loc_577E8-off_5779C
		dc.w loc_57808-off_5779C
		dc.w loc_57824-off_5779C
		dc.w loc_57868-off_5779C
		dc.w loc_57942-off_5779C
		dc.w locret_5799C-off_5779C
		dc.w loc_5799E-off_5779C
		dc.w loc_579B8-off_5779C
		dc.w loc_579D4-off_5779C
; ---------------------------------------------------------------------------

loc_577B0:
		lea	ObjDat3_57BEC(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.w	a0,(_unkFAA4).w
		move.b	#$20,$1F(a0)
		move.b	#$12,$1E(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.w	#1,d0
		move.b	byte_577E4(pc,d0.w),5(a0)
		tst.w	d0
		bne.w	locret_57866
		lea	ChildObjDat_57C40(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------
byte_577E4:	dc.b 2
		dc.b 6
		dc.b $C
		dc.b $E
; ---------------------------------------------------------------------------

loc_577E8:
		btst	#3,$2A(a0)
		bne.s	loc_577F2
		rts
; ---------------------------------------------------------------------------

loc_577F2:
		move.b	#4,5(a0)
		move.w	#$F,$2E(a0)
		move.l	#loc_5781C,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_57808:
		moveq	#1,d0
		btst	#0,(V_int_run_count+3).w
		beq.s	loc_57814
		neg.w	d0

loc_57814:
		add.w	d0,$10(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5781C:
		move.b	#$A,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_57824:
		btst	#5,$2A(a0)
		beq.s	loc_57836
		move.b	(Ctrl_1_held).w,d0
		andi.b	#$C,d0
		bne.s	loc_5783C

loc_57836:
		clr.b	$39(a0)
		rts
; ---------------------------------------------------------------------------

loc_5783C:
		addq.b	#1,$39(a0)
		cmpi.b	#$10,$39(a0)
		bcs.w	locret_57866
		move.b	#8,5(a0)
		lea	(Player_1).w,a1
		jsr	Find_SonicTails(pc)
		move.w	#$80,d1
		tst.w	d0
		beq.s	loc_57862
		neg.w	d1

loc_57862:
		move.w	d1,$18(a0)

locret_57866:
		rts
; ---------------------------------------------------------------------------

loc_57868:
		cmpi.w	#-$100,(Camera_min_Y_pos).w
		bne.s	loc_57878
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,$14(a0)

loc_57878:
		jsr	(MoveSprite2).l
		jsr	(ObjCheckFloorDist).l
		cmpi.w	#8,d1
		bge.s	loc_578D0
		move.b	d3,$26(a0)
		add.w	d1,$14(a0)
		move.b	d3,d0
		bpl.s	loc_57898
		neg.b	d0

loc_57898:
		andi.b	#-8,d0
		beq.s	loc_578AE
		move.w	$18(a0),d0
		add.w	d3,d3
		ext.w	d3
		asr.w	#1,d3
		add.w	d3,d0
		bsr.w	sub_57B70

loc_578AE:
		tst.w	$18(a0)
		bmi.s	loc_578C2
		moveq	#$1C,d3
		jsr	(ObjCheckRightWallDist).l
		tst.w	d1
		bmi.s	loc_578DC
		rts
; ---------------------------------------------------------------------------

loc_578C2:
		moveq	#-$1C,d3
		jsr	(ObjCheckLeftWallDist).l
		tst.w	d1
		bmi.s	loc_5791A
		rts
; ---------------------------------------------------------------------------

loc_578D0:
		move.b	#$A,5(a0)
		bsr.w	sub_57B9C
		rts
; ---------------------------------------------------------------------------

loc_578DC:
		move.b	#$C,5(a0)
		tst.b	$2C(a0)
		beq.w	locret_57866
		lea	ChildObjDat_57C34(pc),a2
		jsr	CreateChild6_Simple(pc)
		jsr	(Create_New_Sprite3).l
		bne.s	loc_57912
		move.l	#Obj_Spring,(a1)
		move.w	#$5D5A,$10(a1)
		move.w	#$27A,$14(a1)
		move.b	#0,$2C(a1)

loc_57912:
		jsr	Displace_PlayerOffObject(pc)
		jmp	loc_5371C(pc)
; ---------------------------------------------------------------------------

loc_5791A:
		move.b	#$C,5(a0)
		rts
; ---------------------------------------------------------------------------
		dc.w 0
		dc.w 8
		dc.w $10
		dc.w $18
		dc.w $20
		dc.w $28
		dc.w $30
		dc.w $38
		dc.w $FFC8
		dc.w $FFD0
		dc.w $FFD8
		dc.w $FFE0
		dc.w $FFE8
		dc.w $FFF0
		dc.w $FFF8
		dc.w 0
; ---------------------------------------------------------------------------

loc_57942:
		bsr.w	sub_57B82
		jsr	(MoveSprite2).l
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bmi.s	loc_57984
		tst.w	$18(a0)
		beq.s	locret_57982
		bmi.s	loc_5796E
		moveq	#$20,d3
		jsr	(ObjCheckRightWallDist).l
		tst.w	d1
		bmi.s	loc_5797A
		bra.w	locret_57982
; ---------------------------------------------------------------------------

loc_5796E:
		moveq	#-$20,d3
		jsr	(ObjCheckLeftWallDist).l
		tst.w	d1
		bpl.s	locret_57982

loc_5797A:
		add.w	d1,$10(a0)
		clr.w	$18(a0)

locret_57982:
		rts
; ---------------------------------------------------------------------------

loc_57984:
		move.b	#8,5(a0)
		move.w	$1A(a0),d0
		btst	#6,d3
		beq.s	loc_57996
		neg.w	d0

loc_57996:
		move.w	d0,$18(a0)
		rts
; ---------------------------------------------------------------------------

locret_5799C:
		rts
; ---------------------------------------------------------------------------

loc_5799E:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		bne.s	loc_579AA
		rts
; ---------------------------------------------------------------------------

loc_579AA:
		move.b	#$10,5(a0)
		move.w	$14(a0),$3A(a0)
		rts
; ---------------------------------------------------------------------------

loc_579B8:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	loc_579C8
		addq.w	#1,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_579C8:
		move.b	#$12,5(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_579D4:
		addi.w	#-$20,$1A(a0)
		jsr	(MoveSprite2).l
		move.w	$14(a0),d0
		cmp.w	$3A(a0),d0
		bls.s	loc_579EC
		rts
; ---------------------------------------------------------------------------

loc_579EC:
		move.b	#$E,5(a0)
		move.w	$3A(a0),$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_579FA:
		lea	ObjDat3_57C1C(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#AnimateRaw_MoveChkDel,(a0)
		move.l	#byte_57C48,$30(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_57A26(pc,d0.w),$42(a0)
		jsr	Refresh_ChildPosition(pc)
		moveq	#8,d0
		jmp	Set_IndexedVelocity(pc)
; ---------------------------------------------------------------------------
word_57A26:	dc.w $ECF7
		dc.w $14F4
		dc.w $1400
		dc.w $C0C
		dc.w $F809
		dc.w $FCFA
; ---------------------------------------------------------------------------

loc_57A32:
		lea	ObjDat3_57C28(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_57A7E,(a0)
		move.l	#byte_57C4E,$30(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		move.w	#$5F,$2E(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_57A6C(pc,d0.w),$42(a0)
		jsr	Refresh_ChildPosition(pc)
		moveq	#0,d0
		jmp	Set_IndexedVelocity(pc)
; ---------------------------------------------------------------------------
word_57A6C:	dc.w $ECD0
		dc.w $8CC
		dc.w $F4EC
		dc.w $10E0
		dc.w $AFC
		dc.w $EC0C
		dc.w $818
		dc.w $F028
		dc.w $C34
; ---------------------------------------------------------------------------

loc_57A7E:
		jsr	Animate_Raw(pc)
		jsr	(MoveSprite).l
		jsr	Obj_Wait(pc)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_ICZBreakableWall:
		lea	ObjDat3_57C10(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_57AA6,(a0)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_57AA6:
		moveq	#$2B,d1
		moveq	#$40,d2
		moveq	#$70,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		movea.w	(_unkFAA4).w,a1
		cmpi.l	#loc_5776A,(a1)
		bne.s	loc_57AF2
		move.w	$10(a1),d0
		move.w	$14(a1),d1
		and.w	(Screen_Y_wrap_value).w,d1
		move.w	$10(a0),d2
		move.w	$14(a0),d3
		lea	word_57B12(pc),a2
		add.w	(a2)+,d2
		cmp.w	d2,d0
		bcs.s	loc_57AF2
		add.w	(a2)+,d2
		cmp.w	d2,d0
		bcc.s	loc_57AF2
		add.w	(a2)+,d3
		cmp.w	d3,d1
		bcs.s	loc_57AF2
		add.w	(a2)+,d3
		cmp.w	d3,d1
		bcs.s	loc_57AF8

loc_57AF2:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_57AF8:
		lea	ChildObjDat_57C3A(pc),a2
		jsr	CreateChild6_Simple(pc)
		jsr	Go_Delete_Sprite(pc)
		moveq	#signextendB(sfx_Collapse),d0
		jsr	(Play_Sound_2).l
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------
word_57B12:	dc.w  $FFD0,   $60, $FFC0,   $80
; ---------------------------------------------------------------------------

loc_57B1A:
		lea	ObjDat3_57C04(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_57B2E,(a0)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_57B2E:
		movea.w	$46(a0),a1
		btst	#3,$2A(a1)
		beq.s	loc_57B40
		move.l	#MoveChkDel,(a0)

loc_57B40:
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

Obj_BB_1:
		jsr	(Obj_WaitOffscreen).l
		lea	ObjDat3_57BF8(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_57B5A,(a0)

loc_57B5A:
		moveq	#$1B,d1
		moveq	#$10,d2
		moveq	#$11,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_57B70:
		cmpi.w	#-$C00,d0
		blt.s	locret_57B80
		cmpi.w	#$C00,d0
		bgt.s	locret_57B80
		move.w	d0,$18(a0)

locret_57B80:
		rts
; End of function sub_57B70


; =============== S U B R O U T I N E =======================================


sub_57B82:
		move.w	$1A(a0),d0
		addi.w	#$38,d0
		cmpi.w	#-$C00,d0
		blt.s	locret_57B9A
		cmpi.w	#$C00,d0
		bgt.s	locret_57B9A
		move.w	d0,$1A(a0)

locret_57B9A:
		rts
; End of function sub_57B82


; =============== S U B R O U T I N E =======================================


sub_57B9C:
		move.b	$26(a0),d3
		lsr.b	#3,d3
		andi.w	#$E,d3
		move.w	$18(a0),d1
		bpl.s	loc_57BAE
		neg.w	d1

loc_57BAE:
		move.w	off_57BB6(pc,d3.w),d0
		jmp	off_57BB6(pc,d0.w)
; End of function sub_57B9C

; ---------------------------------------------------------------------------
off_57BB6:	dc.w loc_57BC6-off_57BB6
		dc.w loc_57BCC-off_57BB6
		dc.w loc_57BD4-off_57BB6
		dc.w loc_57BCC-off_57BB6
		dc.w loc_57BC6-off_57BB6
		dc.w loc_57BCC-off_57BB6
		dc.w loc_57BD4-off_57BB6
		dc.w loc_57BCC-off_57BB6
; ---------------------------------------------------------------------------

loc_57BC6:
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_57BCC:
		lsr.w	#1,d1
		move.w	d1,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_57BD4:
		move.w	d1,$1A(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_57BDA:
		clr.b	(Fast_V_scroll_flag).w
		btst	#3,$2A(a0)
		beq.s	locret_57BEA
		st	(Fast_V_scroll_flag).w

locret_57BEA:
		rts
; End of function sub_57BDA

; ---------------------------------------------------------------------------
ObjDat3_57BEC:	dc.l Map_ICZPlatforms
		dc.w $43B6
		dc.w $280
		dc.b $20
		dc.b $14
		dc.b 0
		dc.b 0
ObjDat3_57BF8:	dc.l Map_ICZPlatforms
		dc.w $4377
		dc.w $280
		dc.b $10
		dc.b $10
		dc.b $1E
		dc.b 0
ObjDat3_57C04:	dc.l Map_ICZWallAndColumn
		dc.w $4001
		dc.w $280
		dc.b $10
		dc.b $C
		dc.b 8
		dc.b 0
ObjDat3_57C10:	dc.l Map_ICZWallAndColumn
		dc.w $4001
		dc.w $280
		dc.b $20
		dc.b $40
		dc.b 6
		dc.b 0
ObjDat3_57C1C:	dc.l Map_ICZPlatforms
		dc.w $C3B6
		dc.w $80
		dc.b 8
		dc.b 8
		dc.b $23
		dc.b 0
ObjDat3_57C28:	dc.l Map_ICZPlatforms
		dc.w $C347
		dc.w $80
		dc.b $C
		dc.b $C
		dc.b $1C
		dc.b 0
ChildObjDat_57C34:dc.w 5
		dc.l loc_579FA
ChildObjDat_57C3A:dc.w 8
		dc.l loc_57A32
ChildObjDat_57C40:dc.w 0
		dc.l loc_57B1A
		dc.w $F010
byte_57C48:	dc.b    2, $23
		dc.b  $13, $24
		dc.b  $14, $FC
byte_57C4E:	dc.b    2, $1C
		dc.b  $1D, $25
		dc.b  $26, $FC
; ---------------------------------------------------------------------------

Obj_ICZCrushingColumn:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_57C78(pc,d0.w),d1
		move.w	$10(a0),-(sp)
		jsr	off_57C78(pc,d1.w)
		moveq	#$2B,d1
		moveq	#$70,d2
		moveq	#$70,d3
		move.w	(sp)+,d4
		jsr	(SolidObjectFull).l
		jmp	Sprite_CheckDelete(pc)
; ---------------------------------------------------------------------------
off_57C78:	dc.w loc_57C90-off_57C78
		dc.w loc_57CCC-off_57C78
		dc.w loc_57CDE-off_57C78
		dc.w loc_57CE6-off_57C78
		dc.w loc_57D0C-off_57C78
		dc.w loc_57D14-off_57C78
		dc.w loc_57D5A-off_57C78
		dc.w loc_57D7E-off_57C78
		dc.w loc_57D8E-off_57C78
		dc.w loc_57DA4-off_57C78
		dc.w loc_57DC0-off_57C78
		dc.w loc_57DDC-off_57C78
; ---------------------------------------------------------------------------

loc_57C90:
		lea	ObjDat3_57E1E(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.b	#$70,$1E(a0)
		move.w	$14(a0),$3E(a0)
		move.w	#$1F,$2E(a0)
		cmpi.b	#3,$2C(a0)
		bcc.s	loc_57CC0
		move.b	#$C,$22(a0)
		lea	ChildObjDat_57E30(pc),a2
		jsr	CreateChild1_Normal(pc)

loc_57CC0:
		move.b	$2C(a0),d0
		add.b	d0,d0
		move.b	d0,5(a0)

locret_57CCA:
		rts
; ---------------------------------------------------------------------------

loc_57CCC:
		move.b	$2A(a0),d0
		andi.b	#$18,d0
		beq.s	locret_57CCA

loc_57CD6:
		move.b	#$A,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_57CDE:
		subq.w	#1,$2E(a0)
		bmi.s	loc_57CD6
		rts
; ---------------------------------------------------------------------------

loc_57CE6:
		lea	(Player_1).w,a1
		jsr	Find_OtherObject(pc)
		cmpi.w	#$28,d2
		bcs.w	locret_57CCA
		btst	#0,4(a0)
		beq.s	loc_57D00
		subq.w	#2,d0

loc_57D00:
		tst.w	d0
		beq.s	locret_57CCA

loc_57D04:
		move.b	#$E,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_57D0C:
		subq.w	#1,$2E(a0)
		bmi.s	loc_57D04
		rts
; ---------------------------------------------------------------------------

loc_57D14:
		move.w	$1A(a0),d0
		addi.w	#-$20,d0
		cmpi.w	#-$400,d0
		ble.s	loc_57D26
		move.w	d0,$1A(a0)

loc_57D26:
		jsr	(MoveSprite2).l
		jsr	(ObjCheckCeilingDist).l
		tst.w	d1
		bpl.w	locret_57CCA

loc_57D38:
		add.w	d1,$14(a0)
		move.b	#$10,5(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_57D92,$34(a0)
		moveq	#signextendB(sfx_MetalLand),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_57D5A:
		move.w	$1A(a0),d0
		addi.w	#$20,d0
		cmpi.w	#$400,d0
		bgt.s	loc_57D6C
		move.w	d0,$1A(a0)

loc_57D6C:
		jsr	(MoveSprite2).l
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bmi.s	loc_57D38
		rts
; ---------------------------------------------------------------------------

loc_57D7E:
		addq.w	#8,$14(a0)
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bmi.s	loc_57D38
		rts
; ---------------------------------------------------------------------------

loc_57D8E:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_57D92:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.b	byte_57DA0-1(pc,d0.w),5(a0)
		rts
; ---------------------------------------------------------------------------
byte_57DA0:	dc.b $14
		dc.b $14
		dc.b $16
		dc.b $12
; ---------------------------------------------------------------------------

loc_57DA4:
		move.w	$14(a0),d0
		subq.w	#1,d0
		cmp.w	$3E(a0),d0
		bls.s	loc_57DB6
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_57DB6:
		move.w	#$5F,$2E(a0)
		bra.w	loc_57CC0
; ---------------------------------------------------------------------------

loc_57DC0:
		move.w	$14(a0),d0
		addq.w	#1,d0
		cmp.w	$3E(a0),d0
		bcc.s	loc_57DD2
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_57DD2:
		move.w	#$5F,$2E(a0)
		bra.w	loc_57CC0
; ---------------------------------------------------------------------------

loc_57DDC:
		lea	(Player_1).w,a1
		jsr	Find_OtherObject(pc)
		btst	#0,4(a0)
		beq.s	loc_57DEE
		subq.w	#2,d0

loc_57DEE:
		tst.w	d0
		bne.w	locret_57CCA
		move.b	#$12,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_57DFC:
		move.l	#loc_57E0A,(a0)
		lea	word_57E2A(pc),a1
		jsr	SetUp_ObjAttributes3(pc)

loc_57E0A:
		movea.w	$46(a0),a1
		move.w	$14(a1),d0
		addi.w	#$B0,d0
		move.w	d0,$14(a0)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
ObjDat3_57E1E:	dc.l Map_ICZWallAndColumn
		dc.w $4001
		dc.w $280
		dc.b $20
		dc.b $70
		dc.b 2
		dc.b 0
word_57E2A:	dc.w $280
		dc.b $20
		dc.b $40
		dc.b $D
		dc.b 0
ChildObjDat_57E30:dc.w 0
		dc.l loc_57DFC
		dc.w 0
; ---------------------------------------------------------------------------

Obj_ICZFreezer:
		jsr	Obj_WaitOffscreen(pc)
		move.l	#loc_57E4E,(a0)
		lea	ObjDat3_5826C(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_57E4E:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$40,d2
		bcc.s	loc_57E72
		move.l	#loc_57E76,(a0)
		clr.w	$2E(a0)
		clr.w	$30(a0)
		clr.b	$39(a0)
		moveq	#signextendB(sfx_FrostPuff),d0
		jsr	(Play_Sound_2).l

loc_57E72:
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_57E76:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$40,d2
		bcc.s	loc_57EBE
		subq.w	#1,$30(a0)
		bpl.s	loc_57EA2
		moveq	#0,d0
		move.b	$39(a0),d0
		bchg	#1,d0
		move.b	d0,$39(a0)
		move.w	word_57ED6(pc,d0.w),$30(a0)
		move.w	off_57EDA(pc,d0.w),d0
		jsr	off_57EDA(pc,d0.w)

loc_57EA2:
		btst	#1,$38(a0)
		beq.s	loc_57EBA
		subq.w	#1,$2E(a0)
		bpl.s	loc_57EBA
		move.w	#1,$2E(a0)
		bsr.w	sub_57F00

loc_57EBA:
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_57EBE:
		move.l	#loc_57E4E,(a0)
		bclr	#1,$38(a0)
		moveq	#signextendB(mus_StopSFX),d0
		jsr	(Play_Sound_2).l
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
word_57ED6:	dc.w $40
		dc.w $40
off_57EDA:	dc.w loc_57EDE-off_57EDA
		dc.w loc_57EE6-off_57EDA
; ---------------------------------------------------------------------------

loc_57EDE:
		bclr	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_57EE6:
		bset	#1,$38(a0)
		lea	ChildObjDat_582A8(pc),a2
		btst	#1,4(a0)
		beq.s	loc_57EFC
		lea	ChildObjDat_582B0(pc),a2

loc_57EFC:
		jmp	CreateChild1_Normal(pc)

; =============== S U B R O U T I N E =======================================


sub_57F00:
		lea	ChildObjDat_58298(pc),a2
		btst	#1,4(a0)
		beq.s	loc_57F10
		lea	ChildObjDat_582A0(pc),a2

loc_57F10:
		jmp	CreateChild1_Normal(pc)
; End of function sub_57F00

; ---------------------------------------------------------------------------

loc_57F14:
		lea	word_58278(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_57F24,(a0)

locret_57F22:
		rts
; ---------------------------------------------------------------------------

loc_57F24:
		bsr.w	sub_580EC
		jsr	Refresh_ChildPosition(pc)
		subq.b	#1,$3A(a0)
		bpl.w	locret_57F22
		move.b	#2,$3A(a0)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_57F40:
		move.l	#loc_57F54,(a0)
		move.w	#$1F,$2E(a0)
		lea	ObjDat3_5826C(pc),a1
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

loc_57F54:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	loc_57F84
		subq.w	#1,$2E(a0)
		bmi.s	loc_57F68
		rts
; ---------------------------------------------------------------------------

loc_57F68:
		move.l	#loc_57F70,(a0)
		rts
; ---------------------------------------------------------------------------

loc_57F70:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	loc_57F84
		lea	word_58206(pc),a1
		bra.w	sub_5819C
; ---------------------------------------------------------------------------

loc_57F84:
		move.l	#loc_57F9A,(a0)
		move.w	#$1F,$2E(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_57F9A:
		jsr	Obj_Wait(pc)
		lea	word_58206(pc),a1
		bra.w	sub_5819C
; ---------------------------------------------------------------------------

loc_57FA6:
		lea	ObjDat3_58280(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_58004,(a0)
		move.b	#$10,$1E(a0)
		movea.w	$44(a0),a1
		move.w	$10(a1),d0
		move.w	d0,$10(a0)
		move.w	$14(a1),$14(a0)
		btst	#0,4(a1)
		beq.s	loc_57FDA
		bset	#0,4(a0)

loc_57FDA:
		movea.w	$46(a0),a2
		move.w	#$200,d1
		cmp.w	$10(a2),d0
		bcc.s	loc_57FEA
		neg.w	d1

loc_57FEA:
		move.w	d1,$18(a0)
		move.w	#-$400,$1A(a0)
		move.w	#$7F,$2E(a0)
		move.l	#loc_58066,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_58004:
		move.w	(Camera_X_pos).w,d0
		tst.w	$18(a0)
		bmi.s	loc_5801C
		addi.w	#$128,d0
		cmp.w	$10(a0),d0
		bcs.s	loc_58026
		bra.w	loc_5802A
; ---------------------------------------------------------------------------

loc_5801C:
		addi.w	#$20,d0
		cmp.w	$10(a0),d0
		bcs.s	loc_5802A

loc_58026:
		clr.w	$18(a0)

loc_5802A:
		jsr	(MoveSprite).l
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_58044
		add.w	d1,$14(a0)
		move.l	#loc_58044,(a0)

loc_58044:
		movea.w	$44(a0),a1
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		subq.w	#1,$2E(a0)
		bmi.s	loc_58066
		bsr.w	sub_5820E
		bne.s	loc_58090
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_58066:
		movea.w	$44(a0),a1
		movea.l	a0,a2
		movea.l	a1,a0
		jsr	(HurtCharacter).l
		cmpi.b	#$18,$20(a0)
		beq.s	loc_5808E
		move.w	#$200,d0
		btst	#0,4(a0)
		bne.s	loc_5808A
		neg.w	d0

loc_5808A:
		move.w	d0,$18(a0)

loc_5808E:
		movea.l	a2,a0

loc_58090:
		movea.w	$44(a0),a1
		bset	#1,$2A(a1)
		clr.b	$2E(a1)
		move.b	#$78,$34(a1)
		lea	ChildObjDat_582C0(pc),a2
		jsr	CreateChild1_Normal(pc)
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_580B2:
		lea	ObjDat3_5828C(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#AnimateRaw_MoveChkDel,(a0)
		move.l	#byte_58314,$30(a0)
		cmpi.b	#8,$2C(a0)
		bcc.s	loc_580D8
		move.l	#byte_5830A,$30(a0)

loc_580D8:
		jsr	(Random_Number).l
		andi.b	#3,d0
		move.b	d0,$23(a0)
		moveq	#$C,d0
		jmp	Set_IndexedVelocity(pc)

; =============== S U B R O U T I N E =======================================


sub_580EC:
		subq.w	#1,$2E(a0)
		bpl.s	locret_58144
		move.w	#2,$2E(a0)
		moveq	#0,d0
		move.b	$39(a0),d0
		addq.b	#4,d0
		cmpi.b	#$48,d0
		bcc.s	loc_58146
		move.b	d0,$39(a0)
		lea	byte_58150(pc,d0.w),a1
		move.b	(a1)+,$43(a0)
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,d2
		jsr	(Random_Number).l
		and.b	d2,d0
		move.w	d2,d3
		lsr.b	#1,d3
		sub.b	d3,d0
		move.b	d0,$42(a0)
		swap	d0
		and.b	d2,d0
		sub.b	d3,d0
		movea.w	$46(a0),a1
		btst	#1,4(a1)
		beq.s	loc_58140
		neg.b	$43(a0)

loc_58140:
		add.b	d0,$43(a0)

locret_58144:
		rts
; ---------------------------------------------------------------------------

loc_58146:
		jsr	(Delete_Current_Sprite).l
		addq.w	#4,sp
		rts
; End of function sub_580EC

; ---------------------------------------------------------------------------
byte_58150:	dc.b  $10, $16,   3,   0
		dc.b  $10, $16,   3,   0
		dc.b  $14, $16,   3,   0
		dc.b  $18, $16,   3,   0
		dc.b  $1C, $16,   7,   0
		dc.b  $22, $17,   7,   0
		dc.b  $26, $17,   7,   0
		dc.b  $2E, $17,   7,   0
		dc.b  $32, $17,   7,   0
		dc.b  $3C, $18,   7,   0
		dc.b  $40, $18,  $F,   0
		dc.b  $4D, $19,  $F,   0
		dc.b  $52, $19,  $F,   0
		dc.b  $4B, $19,  $F,   0
		dc.b  $44, $19,  $F,   0
		dc.b  $42, $19,  $F,   0
		dc.b  $3E, $18,  $F,   0
		dc.b  $3B, $17,  $F,   0
		dc.b  $38, $16,  $F,   0

; =============== S U B R O U T I N E =======================================


sub_5819C:
		jsr	Check_PlayerInRange(pc)
		tst.l	d0
		beq.s	locret_58204
		tst.w	d0
		beq.s	loc_581AE
		movea.w	d0,a4
		bsr.w	sub_581B6

loc_581AE:
		swap	d0
		tst.w	d0
		beq.s	locret_58204
		movea.w	d0,a4
; End of function sub_5819C


; =============== S U B R O U T I N E =======================================


sub_581B6:
		tst.b	$2E(a4)
		bne.s	locret_58204
		btst	#1,$2B(a4)
		bne.s	locret_58204
		tst.b	$34(a4)
		bne.s	locret_58204
		cmpi.b	#4,5(a4)
		bcc.s	locret_58204
		move.b	#-$7F,$2E(a4)
		move.b	#$1A,$20(a4)
		bset	#1,$2A(a4)
		clr.b	$3D(a4)
		clr.w	$18(a4)
		clr.w	$1A(a4)
		clr.w	$1C(a4)
		move.l	d0,d4
		lea	ChildObjDat_582B8(pc),a2
		jsr	CreateChild1_Normal(pc)
		move.l	d4,d0
		move.w	a4,$44(a1)

locret_58204:
		rts
; End of function sub_581B6

; ---------------------------------------------------------------------------
word_58206:	dc.w  $FFF0,   $20, $FFD8,   $50

; =============== S U B R O U T I N E =======================================


sub_5820E:
		lea	(Player_1).w,a3
		cmpa.w	$44(a0),a3
		bne.s	loc_5821C
		lea	(Player_2).w,a3

loc_5821C:
		tst.w	$1A(a3)
		bmi.s	loc_58260
		cmpi.b	#2,$20(a3)
		beq.s	loc_58232
		cmpi.b	#9,$20(a3)
		bne.s	loc_58260

loc_58232:
		lea	word_58264(pc),a1
		jsr	Check_PlayerInRange(pc)
		tst.l	d0
		beq.s	locret_5825E
		tst.w	d0
		beq.s	loc_5824A
		movea.w	d0,a4
		tst.b	$2E(a4)
		beq.s	loc_58258

loc_5824A:
		swap	d0
		tst.w	d0
		beq.s	locret_5825E
		movea.w	d0,a4
		tst.b	$2E(a4)
		bne.s	loc_58260

loc_58258:
		neg.w	$1A(a3)
		moveq	#1,d0

locret_5825E:
		rts
; ---------------------------------------------------------------------------

loc_58260:
		moveq	#0,d0
		rts
; End of function sub_5820E

; ---------------------------------------------------------------------------
word_58264:	dc.w $FFE4,  $38,$FFE8,  $30
ObjDat3_5826C:	dc.l Map_ICZPlatforms
		dc.w $23B6
		dc.w $280
		dc.b $10
		dc.b $C
		dc.b 6
		dc.b $9A
word_58278:	dc.w $43B6
		dc.w $80
		dc.b $C
		dc.b $C
		dc.b $16
		dc.b 0
ObjDat3_58280:	dc.l Map_ICZPlatforms
		dc.w $43B6
		dc.w $80
		dc.b $14
		dc.b $10
		dc.b 2
		dc.b 0
ObjDat3_5828C:	dc.l Map_ICZPlatforms
		dc.w $43B6
		dc.w $80
		dc.b 4
		dc.b 4
		dc.b $C
		dc.b 0
ChildObjDat_58298:dc.w 0
		dc.l loc_57F14
		dc.w $C
ChildObjDat_582A0:dc.w 0
		dc.l loc_57F14
		dc.w $F4
ChildObjDat_582A8:dc.w 0
		dc.l loc_57F40
		dc.w $30
ChildObjDat_582B0:dc.w 0
		dc.l loc_57F40
		dc.w $D0
ChildObjDat_582B8:dc.w 0
		dc.l loc_57FA6
		dc.w 0
ChildObjDat_582C0:dc.w $B
		dc.l loc_580B2
		dc.w $F4F8
		dc.l loc_580B2
		dc.w $FCF8
		dc.l loc_580B2
		dc.w $4F8
		dc.l loc_580B2
		dc.w $CF8
		dc.l loc_580B2
		dc.w $F400
		dc.l loc_580B2
		dc.w $FC00
		dc.l loc_580B2
		dc.w $400
		dc.l loc_580B2
		dc.w $C00
		dc.l loc_580B2
		dc.w $F408
		dc.l loc_580B2
		dc.w $FC08
		dc.l loc_580B2
		dc.w $408
		dc.l loc_580B2
		dc.w $C08
byte_5830A:	dc.b    0, $27
		dc.b  $23, $27
		dc.b  $13, $27
		dc.b  $24, $27
		dc.b  $14, $FC
byte_58314:	dc.b    0, $27
		dc.b   $C, $27
		dc.b   $D, $27
		dc.b   $E, $FC
byte_5831C:	dc.b    0, $27
		dc.b   $F, $27
		dc.b  $10, $27
		dc.b  $11, $FC
; ---------------------------------------------------------------------------

Obj_ICZSegmentColumn:
		lea	ObjDat3_5849A(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#Sprite_CheckDelete2,(a0)
		lea	ChildObjDat_584AC(pc),a2
		tst.b	$2C(a0)
		beq.s	loc_58340
		lea	ChildObjDat_584B4(pc),a2

loc_58340:
		jmp	CreateChild8_TreeListRepeated(pc)
; ---------------------------------------------------------------------------

loc_58344:
		lea	word_584A6(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_5836E,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		cmpi.b	#6,d0
		bne.s	loc_58364
		move.b	#3,$22(a0)

loc_58364:
		lsl.w	#4,d0
		sub.w	d0,$14(a0)
		bra.w	loc_58486
; ---------------------------------------------------------------------------

loc_5836E:
		movea.w	$46(a0),a1
		btst	#0,$38(a1)
		bne.s	loc_583B0
		move.w	(Player_1+x_vel).w,-(sp)
		move.w	(Player_2+x_vel).w,-(sp)
		bsr.w	sub_58428
		move.l	(sp)+,d0
		moveq	#5,d1
		cmpi.b	#3,$22(a0)
		beq.s	loc_583AC
		tst.b	$2C(a0)
		bne.s	loc_583AC
		lea	(Player_1).w,a1
		bsr.w	sub_58438
		lea	(Player_2).w,a1
		swap	d0
		addq.b	#1,d1
		bsr.w	sub_58438

loc_583AC:
		bra.w	loc_58486
; ---------------------------------------------------------------------------

loc_583B0:
		move.l	#loc_583D6,(a0)
		bset	#0,$38(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsl.w	#2,d0
		addi.w	#$F,d0
		move.w	d0,$2E(a0)
		move.l	#loc_583E2,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_583D6:
		bsr.w	sub_58428
		jsr	Obj_Wait(pc)
		bra.w	loc_58486
; ---------------------------------------------------------------------------

loc_583E2:
		move.l	#loc_583FC,(a0)
		move.w	#7,$2E(a0)
		move.l	#loc_5840C,$34(a0)
		subq.b	#2,$2C(a0)
		rts
; ---------------------------------------------------------------------------

loc_583FC:
		bsr.w	sub_58428
		addq.w	#4,$14(a0)
		jsr	Obj_Wait(pc)
		bra.w	loc_58486
; ---------------------------------------------------------------------------

loc_5840C:
		move.l	#loc_5836E,(a0)
		bclr	#0,$38(a0)
		move.w	#$10,(Screen_shake_flag).w
		moveq	#signextendB(sfx_MetalLand),d0
		jsr	(Play_Sound_2).l
		rts

; =============== S U B R O U T I N E =======================================


sub_58428:
		moveq	#$2B,d1
		moveq	#$10,d2
		moveq	#$10,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull).l
; End of function sub_58428


; =============== S U B R O U T I N E =======================================


sub_58438:
		btst	d1,$2A(a0)
		beq.s	locret_58484
		move.w	d0,d3
		tst.w	d3
		bpl.s	loc_58446
		neg.w	d3

loc_58446:
		cmpi.b	#2,$20(a1)
		bne.s	locret_58484
		cmpi.w	#$600,d3
		bcs.s	locret_58484
		move.w	d0,$18(a1)
		move.w	d0,$1C(a1)
		bclr	d1,$2A(a0)
		bclr	d1,$2A(a1)
		bset	#0,$38(a0)
		lea	ChildObjDat_582C0(pc),a2
		jsr	CreateChild1_Normal(pc)
		jsr	Displace_PlayerOffObject(pc)
		jsr	Go_Delete_Sprite(pc)
		moveq	#signextendB(sfx_Collapse),d0
		jsr	(Play_Sound_2).l
		addq.w	#4,sp

locret_58484:
		rts
; End of function sub_58438

; ---------------------------------------------------------------------------

loc_58486:
		movea.w	$44(a0),a1
		btst	#4,$38(a1)
		bne.w	Go_Delete_Sprite_2
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
ObjDat3_5849A:	dc.l Map_ICZWallAndColumn
		dc.w $4001
		dc.w $280
		dc.b $20
		dc.b $10
		dc.b $B
		dc.b 0
word_584A6:	dc.w $280
		dc.b $20
		dc.b $10
		dc.b $A
		dc.b 0
ChildObjDat_584AC:dc.w 2
		dc.l loc_58344
		dc.w 0
ChildObjDat_584B4:dc.w 3
		dc.l loc_58344
		dc.w 0
; ---------------------------------------------------------------------------

Obj_ICZSwingingPlatform:
		lea	ObjDat3_588F0(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_584D8,(a0)
		lea	ChildObjDat_5891C(pc),a2
		jsr	CreateChild1_Normal(pc)
		move.w	a1,$46(a0)
		rts
; ---------------------------------------------------------------------------

loc_584D8:
		btst	#3,$38(a0)
		beq.s	loc_584F4
		move.l	#loc_584F8,(a0)
		btst	#0,4(a0)
		beq.s	loc_584F4
		move.l	#loc_58582,(a0)

loc_584F4:
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_584F8:
		move.w	$3E(a0),d0
		subi.w	#$10,d0
		move.w	d0,$3E(a0)
		move.w	$3C(a0),d1
		add.w	d0,d1
		scc	d2
		tst.w	d0
		bpl.s	loc_58514
		tst.b	d2
		bne.s	loc_5853A

loc_58514:
		move.w	d1,$3C(a0)
		tst.b	$2C(a0)
		beq.s	loc_5852A
		cmpi.w	#$4800,d1
		bcs.s	loc_5852A
		cmpi.w	#$200,d0
		bcc.s	loc_58554

loc_5852A:
		cmpi.w	#$6E00,d1
		bcc.s	loc_58536
		moveq	#1,d2
		jsr	MoveSprite_CircularSimple(pc)

loc_58536:
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_5853A:
		move.l	#loc_584D8,(a0)
		bclr	#3,$38(a0)
		clr.w	$3C(a0)
		moveq	#1,d2
		jsr	MoveSprite_CircularSimple(pc)
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_58554:
		move.l	#loc_585C4,(a0)
		bset	#2,$38(a0)
		move.b	#$10,$1E(a0)
		move.w	#$400,d0
		btst	#0,4(a0)
		beq.s	loc_58574
		neg.w	d0

loc_58574:
		move.w	d0,$18(a0)
		move.w	#-$600,$1A(a0)
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_58582:
		move.w	$3E(a0),d0
		addi.w	#$10,d0
		move.w	d0,$3E(a0)
		move.w	$3C(a0),d1
		add.w	d0,d1
		scs	d2
		tst.w	d0
		bmi.s	loc_5859E
		tst.b	d2
		bne.s	loc_5853A

loc_5859E:
		move.w	d1,$3C(a0)
		tst.b	$2C(a0)
		beq.s	loc_585B4
		cmpi.w	#-$4800,d1
		bhi.s	loc_585B4
		cmpi.w	#$200,d0
		bcc.s	loc_58554

loc_585B4:
		cmpi.w	#-$6E00,d1
		bls.s	loc_585C0
		moveq	#1,d2
		jsr	MoveSprite_CircularSimple(pc)

loc_585C0:
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_585C4:
		jsr	(MoveSprite).l
		tst.w	$1A(a0)
		bmi.s	loc_585F8
		jsr	(ObjCheckFloorDist).l
		tst.w	d1
		bpl.s	loc_585F8
		add.w	d1,$14(a0)
		move.w	$1A(a0),d0
		cmpi.w	#$100,d0
		bcs.s	loc_585FC
		asr.w	#2,d0
		neg.w	d0
		move.w	d0,$1A(a0)
		lea	ChildObjDat_58936(pc),a2
		jsr	CreateChild1_Normal(pc)

loc_585F8:
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_585FC:
		move.l	#loc_5861A,(a0)
		move.w	#$10,d0
		tst.w	$18(a0)
		bmi.s	loc_5860E
		neg.w	d0

loc_5860E:
		move.w	d0,$40(a0)
		clr.w	$1A(a0)
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_5861A:
		move.w	$18(a0),d0
		move.w	d0,d1
		add.w	$40(a0),d0
		eor.w	d0,d1
		bmi.s	loc_5864E
		move.w	d0,$18(a0)
		move.w	$10(a0),d1
		jsr	(MoveSprite2).l
		move.w	$10(a0),d0
		eor.w	d0,d1
		btst	#3,d1
		beq.s	loc_5864A
		lea	ChildObjDat_58944(pc),a2
		jsr	CreateChild1_Normal(pc)

loc_5864A:
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_5864E:
		move.l	#loc_58658,(a0)
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_58658:
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_5865C:
		lea	word_58910(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_5866A,(a0)

loc_5866A:
		bsr.w	sub_58838
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_58672:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_58684
		move.l	#loc_5866A,(a0)

loc_58684:
		bsr.w	sub_5880C
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_5868C:
		lea	word_58916(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_5869A,(a0)

loc_5869A:
		bsr.w	sub_58822
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_586A2:
		lea	word_588FC(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_586EA,(a0)
		subi.w	#$80,$14(a0)
		movea.w	$46(a0),a1
		btst	#0,4(a1)
		beq.s	loc_586C8
		bset	#0,4(a0)

loc_586C8:
		bset	#6,4(a0)
		move.w	#7,$16(a0)
		lea	$1C(a0),a1
		moveq	#6,d6

loc_586DA:
		move.w	#8,(a1)
		addq.w	#6,a1
		dbf	d6,loc_586DA
		move.b	#8,$22(a0)

loc_586EA:
		bsr.w	sub_588CC
		bsr.w	sub_5875A
		jmp	Child_Draw_Sprite2(pc)
; ---------------------------------------------------------------------------

loc_586F6:
		lea	ObjDat3_58904(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_58756,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_5873E(pc,d0.w),d1
		neg.w	d1
		move.w	d1,$1A(a0)
		movea.w	$46(a0),a1
		btst	#0,4(a1)
		bne.s	loc_58722
		neg.w	d1

loc_58722:
		move.w	d1,$18(a0)
		lsr.w	#1,d0
		move.b	byte_5874E(pc,d0.w),d0
		movea.w	$46(a0),a1
		move.w	(a1,d0.w),$10(a0)
		move.w	2(a1,d0.w),$14(a0)
		rts
; ---------------------------------------------------------------------------
word_5873E:	dc.w $80
		dc.w $100
		dc.w $180
		dc.w $200
		dc.w $280
		dc.w $300
		dc.w $380
		dc.w $400
byte_5874E:	dc.b $42
		dc.b $18
		dc.b $1E
		dc.b $24
		dc.b $2A
		dc.b $30
		dc.b $36
		dc.b $3C
; ---------------------------------------------------------------------------

loc_58756:
		jmp	MoveChkDel(pc)

; =============== S U B R O U T I N E =======================================


sub_5875A:
		movea.w	$46(a0),a1
		lea	$18(a0),a2
		move.w	$10(a0),d0
		move.w	$10(a1),d1
		sub.w	d0,d1
		swap	d0
		swap	d1
		move.w	$14(a0),d0
		move.w	$14(a1),d1
		sub.w	d0,d1
		moveq	#0,d5
		moveq	#6,d6

loc_5877E:
		move.l	d1,d2
		move.w	off_58798(pc,d5.w),d4
		jsr	off_58798(pc,d4.w)
		move.l	d0,(a2)
		swap	d2
		add.l	d2,(a2)+
		addq.w	#2,a2
		addq.w	#2,d5
		dbf	d6,loc_5877E
		rts
; End of function sub_5875A

; ---------------------------------------------------------------------------
off_58798:	dc.w loc_587A8-off_58798
		dc.w loc_587B0-off_58798
		dc.w loc_587B8-off_58798
		dc.w loc_587CC-off_58798
		dc.w loc_587D4-off_58798
		dc.w loc_587E8-off_58798
		dc.w loc_587FC-off_58798
		dc.w locret_5880A-off_58798
; ---------------------------------------------------------------------------

loc_587A8:
		asr.w	#3,d2
		swap	d2
		asr.w	#3,d2
		rts
; ---------------------------------------------------------------------------

loc_587B0:
		asr.w	#2,d2
		swap	d2
		asr.w	#2,d2
		rts
; ---------------------------------------------------------------------------

loc_587B8:
		asr.w	#2,d2
		move.w	d2,d3
		asr.w	#1,d2
		add.w	d3,d2
		swap	d2
		asr.w	#2,d2
		move.w	d2,d3
		asr.w	#1,d2
		add.w	d3,d2
		rts
; ---------------------------------------------------------------------------

loc_587CC:
		asr.w	#1,d2
		swap	d2
		asr.w	#1,d2
		rts
; ---------------------------------------------------------------------------

loc_587D4:
		asr.w	#1,d2
		move.w	d2,d3
		asr.w	#2,d2
		add.w	d3,d2
		swap	d2
		asr.w	#1,d2
		move.w	d2,d3
		asr.w	#2,d2
		add.w	d3,d2
		rts
; ---------------------------------------------------------------------------

loc_587E8:
		asr.w	#1,d2
		move.w	d2,d3
		asr.w	#1,d2
		add.w	d3,d2
		swap	d2
		asr.w	#1,d2
		move.w	d2,d3
		asr.w	#1,d2
		add.w	d3,d2
		rts
; ---------------------------------------------------------------------------

loc_587FC:
		move.w	d2,d3
		asr.w	#3,d3
		sub.w	d3,d2
		swap	d2
		move.w	d2,d3
		asr.w	#3,d3
		sub.w	d3,d2

locret_5880A:
		rts

; =============== S U B R O U T I N E =======================================


sub_5880C:
		move.w	$10(a0),-(sp)
		jsr	Refresh_ChildPosition(pc)
		moveq	#$2B,d1
		moveq	#8,d2
		moveq	#8,d3
		move.w	(sp)+,d4
		jmp	(SolidObjectFull).l
; End of function sub_5880C


; =============== S U B R O U T I N E =======================================


sub_58822:
		move.w	$10(a0),-(sp)
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#$F,d1
		moveq	#8,d2
		moveq	#8,d3
		move.w	(sp)+,d4
		jmp	(SolidObjectFull).l
; End of function sub_58822


; =============== S U B R O U T I N E =======================================


sub_58838:
		move.b	$2A(a0),$39(a0)
		bsr.s	sub_5880C
		move.b	$39(a0),d0
		move.b	$2A(a0),d1
		andi.b	#$18,d1
		beq.s	locret_58866
		movea.w	$46(a0),a2
		lea	(Player_1).w,a1
		moveq	#3,d2
		bsr.w	sub_58868
		lea	(Player_2).w,a1
		moveq	#4,d2
		bsr.w	sub_58868

locret_58866:
		rts
; End of function sub_58838


; =============== S U B R O U T I N E =======================================


sub_58868:
		btst	d2,d1
		beq.s	locret_58866
		move.w	$18(a1),d3
		smi	d4
		cmpi.w	#-$200,d3
		ble.s	loc_5887E
		cmpi.w	#$200,d3
		blt.s	locret_58866

loc_5887E:
		btst	d2,d0
		beq.s	loc_58884
		asr.w	#1,d3

loc_58884:
		btst	#0,4(a2)
		beq.s	loc_5888E
		not.b	d4

loc_5888E:
		tst.b	d4
		bne.s	locret_58866
		move.l	#loc_58672,(a0)
		bset	#3,$38(a2)
		asr.w	#1,d3
		bmi.s	loc_588B0
		cmpi.w	#$400,d3
		ble.s	loc_588BA
		move.w	#$400,d3
		bra.w	loc_588BA
; ---------------------------------------------------------------------------

loc_588B0:
		cmpi.w	#-$400,d3
		bge.s	loc_588BA
		move.w	#-$400,d3

loc_588BA:
		move.w	d3,$3E(a2)
		asl.w	#1,d3
		move.w	d3,$18(a1)
		move.w	d3,$1C(a1)
		addq.w	#4,sp

locret_588CA:
		rts
; End of function sub_58868


; =============== S U B R O U T I N E =======================================


sub_588CC:
		movea.w	$46(a0),a1
		btst	#2,$38(a1)
		beq.s	locret_588CA
		move.w	$10(a0),$2A(a0)
		move.w	$14(a0),$2C(a0)
		lea	ChildObjDat_58930(pc),a2
		jsr	CreateChild6_Simple(pc)
		jmp	Go_Delete_Sprite_2(pc)
; End of function sub_588CC

; ---------------------------------------------------------------------------
ObjDat3_588F0:	dc.l Map_ICZPlatforms
		dc.w $23B6
		dc.w $80
		dc.b $20
		dc.b $10
		dc.b 7
		dc.b 0
word_588FC:	dc.w $43B6
		dc.w $280
		dc.b $80
		dc.b $80
		dc.b 8
		dc.b 0
ObjDat3_58904:	dc.l Map_ICZPlatforms
		dc.w $43B6
		dc.w $280
		dc.b 8
		dc.b 8
		dc.b 8
		dc.b 0
word_58910:	dc.w $300
		dc.b $20
		dc.b $10
		dc.b $27
		dc.b 0
word_58916:	dc.w $300
		dc.b $30
		dc.b 8
		dc.b $27
		dc.b 0
ChildObjDat_5891C:dc.w 2
		dc.l loc_5865C
		dc.w 8
		dc.l loc_5868C
		dc.w $1CF8
		dc.l loc_586A2
		dc.w 0
ChildObjDat_58930:dc.w 7
		dc.l loc_586F6
ChildObjDat_58936:dc.w 1
		dc.l Obj_ICZSnowdust
		dc.w $1C10
		dc.l Obj_ICZSnowdust
		dc.w $1410
ChildObjDat_58944:dc.w 0
		dc.l Obj_ICZSnowdust
		dc.w $1C10
; ---------------------------------------------------------------------------

Obj_ICZStalagtite:
		jsr	Obj_WaitOffscreen(pc)
		lea	ObjDat3_58A32(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_58966,(a0)
		move.b	#$10,$1E(a0)
		rts
; ---------------------------------------------------------------------------

loc_58966:
		bsr.w	sub_58A22
		jsr	Find_SonicTails(pc)
		cmpi.w	#$70,d2
		bcc.s	loc_58988
		move.l	#loc_5898C,(a0)
		move.w	#$F,$2E(a0)
		move.l	#loc_589A4,$34(a0)

loc_58988:
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_5898C:
		moveq	#2,d0
		btst	#0,(V_int_run_count+3).w
		beq.s	loc_58998
		neg.w	d0

loc_58998:
		add.w	d0,$10(a0)
		jsr	Obj_Wait(pc)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_589A4:
		move.l	#loc_589B2,(a0)
		move.b	#-$7E,$28(a0)
		rts
; ---------------------------------------------------------------------------

loc_589B2:
		jsr	(MoveSprite).l
		jsr	(ObjCheckCeilingDist).l
		tst.w	d1
		bpl.s	loc_589DC
		move.l	#loc_589E0,(a0)
		clr.b	$28(a0)
		lea	ChildObjDat_58A4A(pc),a2
		jsr	CreateChild6_Simple(pc)
		moveq	#signextendB(sfx_FloorThump),d0
		jsr	(Play_Sound_2).l

loc_589DC:
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_589E0:
		bsr.w	sub_58A22
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_589E8:
		lea	ObjDat3_58A3E(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#AnimateRaw_MoveChkDel,(a0)
		move.l	#byte_5831C,$30(a0)
		cmpi.b	#6,$2C(a0)
		bcc.s	loc_58A0E
		move.l	#byte_58314,$30(a0)

loc_58A0E:
		jsr	(Random_Number).l
		andi.b	#3,d0
		move.b	d0,$23(a0)
		moveq	#0,d0
		jmp	Set_IndexedVelocity(pc)

; =============== S U B R O U T I N E =======================================


sub_58A22:
		moveq	#$1B,d1
		moveq	#$20,d2
		moveq	#$20,d3
		move.w	$10(a0),d4
		jmp	(SolidObjectFull).l
; End of function sub_58A22

; ---------------------------------------------------------------------------
ObjDat3_58A32:	dc.l Map_ICZWallAndColumn
		dc.w $4001
		dc.w $280
		dc.b $10
		dc.b $20
		dc.b 7
		dc.b 0
ObjDat3_58A3E:	dc.l Map_ICZPlatforms
		dc.w $C3B6
		dc.w $280
		dc.b 4
		dc.b 4
		dc.b $F
		dc.b 0
ChildObjDat_58A4A:dc.w $B
		dc.l loc_589E8
		dc.w $27
		dc.b   $F, $27
		dc.b  $10, $27
		dc.b  $11, $FC
; ---------------------------------------------------------------------------

Obj_ICZIceSpikes:
		jsr	Obj_WaitOffscreen(pc)
		lea	ObjDat3_58B08(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		tst.b	$2C(a0)
		bne.s	loc_58A84
		move.l	#loc_58A92,(a0)
		lea	ChildObjDat_58B14(pc),a2
		btst	#1,4(a0)
		beq.s	loc_58A80
		lea	ChildObjDat_58B1C(pc),a2

loc_58A80:
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_58A84:
		move.l	#loc_58AA6,(a0)
		move.b	#-$6E,$28(a0)
		rts
; ---------------------------------------------------------------------------

loc_58A92:
		moveq	#$17,d1
		moveq	#8,d2
		moveq	#8,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_58AA6:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$40,d2
		bcc.s	loc_58AC4
		move.l	#loc_58AC8,(a0)
		move.w	#$F,$2E(a0)
		move.l	#loc_58AE0,$34(a0)

loc_58AC4:
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_58AC8:
		moveq	#2,d0
		btst	#0,(V_int_run_count+3).w
		beq.s	loc_58AD4
		neg.w	d0

loc_58AD4:
		add.w	d0,$10(a0)
		jsr	Obj_Wait(pc)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_58AE0:
		move.l	#MoveTouchChkDel,(a0)

locret_58AE6:
		rts
; ---------------------------------------------------------------------------

loc_58AE8:
		move.b	#-$68,$28(a0)
		jsr	(Add_SpriteToCollisionResponseList).l
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		beq.w	locret_58AE6
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
ObjDat3_58B08:	dc.l Map_ICZWallAndColumn
		dc.w $4001
		dc.w $280
		dc.b $C
		dc.b $10
		dc.b 5
		dc.b 0
ChildObjDat_58B14:dc.w 0
		dc.l loc_58AE8
		dc.w $C
ChildObjDat_58B1C:dc.w 0
		dc.l loc_58AE8
		dc.w $F4
; ---------------------------------------------------------------------------

Obj_ICZIceCube:
		jsr	Obj_WaitOffscreen(pc)
		move.l	#loc_58B3C,(a0)
		lea	ObjDat3_58C0C(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		jmp	(Sprite_OnScreen_Test).l
; ---------------------------------------------------------------------------

loc_58B3C:
		move.b	(Player_1+anim).w,$3A(a0)
		move.b	(Player_2+anim).w,$3B(a0)
		moveq	#$23,d1
		moveq	#$10,d2
		moveq	#$10,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectFull).l
		bsr.w	sub_58B62
		jmp	(Sprite_OnScreen_Test).l

; =============== S U B R O U T I N E =======================================


sub_58B62:
		move.b	$2A(a0),d0
		btst	#3,d0
		beq.s	loc_58B78
		lea	(Player_1).w,a1
		cmpi.b	#2,$3A(a0)
		beq.s	loc_58B8A

loc_58B78:
		btst	#4,d0
		beq.s	locret_58BD0
		lea	(Player_1).w,a2
		cmpi.b	#2,$3B(a0)
		bne.s	locret_58BD0

loc_58B8A:
		bset	#2,$2A(a1)
		move.b	#$E,$1E(a1)
		move.b	#7,$1F(a1)
		move.b	#2,$20(a1)
		move.w	#-$300,$1A(a1)
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		move.b	#2,5(a1)
		lea	ChildObjDat_58C20(pc),a2
		jsr	CreateChild1_Normal(pc)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l
		jsr	(Go_Delete_Sprite).l

locret_58BD0:
		rts
; End of function sub_58B62

; ---------------------------------------------------------------------------

loc_58BD2:
		lea	word_58C18(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#AnimateRaw_MoveChkDel,(a0)
		move.l	#byte_5830A,$30(a0)
		cmpi.b	#$C,$2C(a0)
		bcs.s	loc_58BF8
		move.l	#byte_58314,$30(a0)

loc_58BF8:
		jsr	(Random_Number).l
		andi.b	#3,d0
		move.b	d0,$23(a0)
		moveq	#0,d0
		jmp	Set_IndexedVelocity(pc)
; ---------------------------------------------------------------------------
ObjDat3_58C0C:	dc.l Map_ICZPlatforms
		dc.w $43B6
		dc.w $80
		dc.b $18
		dc.b $10
		dc.b 3
		dc.b $2E
word_58C18:	dc.w $C3B6
		dc.w $280
		dc.b $20
		dc.b $20
		dc.b $12
		dc.b 0
ChildObjDat_58C20:dc.w $B
		dc.l loc_58BD2
		dc.w $F8
		dc.l loc_58BD2
		dc.w 8
		dc.l loc_58BD2
		dc.w $F0F8
		dc.l loc_58BD2
		dc.w $10F8
		dc.l loc_58BD2
		dc.w $F008
		dc.l loc_58BD2
		dc.w $1008
		dc.l loc_58BD2
		dc.w 0
		dc.l loc_58BD2
		dc.w 0
		dc.l loc_58BD2
		dc.w 0
		dc.l loc_58BD2
		dc.w 0
		dc.l loc_58BD2
		dc.w 0
		dc.l loc_58BD2
		dc.w 0
; ---------------------------------------------------------------------------

Obj_ICZHarmfulIce:
		jsr	Obj_WaitOffscreen(pc)
		lea	ObjDat3_58CCA(pc),a1
		move.l	#Sprite_CheckDeleteTouch,(a0)
		tst.b	$2C(a0)
		beq.s	loc_58C88
		lea	ObjDat3_58CD6(pc),a1
		move.l	#loc_58C8C,(a0)

loc_58C88:
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

loc_58C8C:
		moveq	#0,d0
		move.b	$29(a0),d0
		bne.s	loc_58C98
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_58C98:
		add.w	d0,d0
		movea.w	word_58CC4-2(pc,d0.w),a1
		movea.l	a0,a2
		movea.l	a1,a0
		jsr	(HurtCharacter).l
		movea.l	a2,a0
		lea	ChildObjDat_58CE2(pc),a2
		jsr	CreateChild6_Simple(pc)
		jsr	Go_Delete_Sprite(pc)
		moveq	#signextendB(sfx_IceSpikes),d0
		jsr	(Play_Sound_2).l
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------
word_58CC4:	dc.w Player_1
		dc.w Player_2
		dc.w Player_1
ObjDat3_58CCA:	dc.l Map_ICZPlatforms
		dc.w $43B6
		dc.w $280
		dc.b $10
		dc.b $18
		dc.b 5
		dc.b $82
ObjDat3_58CD6:	dc.l Map_ICZPlatforms
		dc.w $43B6
		dc.w $280
		dc.b $10
		dc.b $10
		dc.b 4
		dc.b $D7
ChildObjDat_58CE2:dc.w $B
		dc.l loc_589E8
; ---------------------------------------------------------------------------

Obj_ICZ_SnowPile:
		jsr	Obj_WaitOffscreen(pc)
		moveq	#0,d0
		move.b	$2C(a0),d0
		bclr	#7,d0
		lea	off_58F8C(pc),a1
		lea	(a1,d0.w),a2
		move.l	(a2)+,(a0)
		movea.l	(a2)+,a1
		jmp	SetUp_ObjAttributes(pc)
; ---------------------------------------------------------------------------

loc_58D06:
		lea	word_58D28(pc),a1
		jsr	Check_PlayerInRange(pc)
		tst.l	d0
		beq.s	loc_58D24
		tst.w	d0
		beq.s	loc_58D1A
		bsr.w	sub_58D30

loc_58D1A:
		swap	d0
		tst.w	d0
		beq.s	loc_58D24
		bsr.w	sub_58D30

loc_58D24:
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
word_58D28:	dc.w  $FFD8,   $50, $FFE8,   $20

; =============== S U B R O U T I N E =======================================


sub_58D30:
		movea.w	d0,a3
		move.w	d0,$44(a0)
		cmpi.b	#9,$20(a3)
		beq.s	loc_58D5E
		btst	#1,$2A(a3)
		bne.s	locret_58D5C
		move.w	$18(a3),d2
		move.w	d2,d3
		bpl.s	loc_58D50
		neg.w	d2

loc_58D50:
		cmpi.w	#$600,d2
		bcc.s	loc_58D5E
		asr.w	#1,d3
		move.w	d3,$1C(a3)

locret_58D5C:
		rts
; ---------------------------------------------------------------------------

loc_58D5E:
		move.w	a3,$44(a0)
		lea	ChildObjDat_58FE4(pc),a2
		jsr	CreateChild1_Normal(pc)
		jsr	(Go_Delete_Sprite).l
		addq.w	#4,sp

locret_58D72:
		rts
; End of function sub_58D30

; ---------------------------------------------------------------------------

loc_58D74:
		lea	word_58DA6(pc),a1
		jsr	Check_PlayerInRange(pc)
		tst.w	d0
		bne.s	loc_58D84
		jmp	Sprite_CheckDelete(pc)
; ---------------------------------------------------------------------------

loc_58D84:
		move.w	d0,$44(a0)
		beq.s	loc_58DA0
		movea.w	d0,a1
		move.w	#$800,$18(a1)
		move.w	#$800,$1C(a1)
		lea	ChildObjDat_5900A(pc),a2
		jsr	CreateChild1_Normal(pc)

loc_58DA0:
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------
word_58DA6:	dc.w  $FFF8,   $10, $FFF0,   $20
; ---------------------------------------------------------------------------

loc_58DAE:
		lea	word_58DF0(pc),a1
		jsr	Check_PlayerInRange(pc)
		tst.w	d0
		bne.s	loc_58DBE
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_58DBE:
		move.w	d0,$44(a0)
		beq.s	loc_58DEA
		movea.w	d0,a1
		move.w	#$800,$18(a1)
		move.w	#$800,$1C(a1)
		lea	ChildObjDat_59018(pc),a2
		jsr	CreateChild1_Normal(pc)
		btst	#7,$2C(a0)
		beq.s	loc_58DEA
		move.w	#$600,d0
		jsr	StartNewLevel(pc)

loc_58DEA:
		jmp	(Go_Delete_Sprite).l
; ---------------------------------------------------------------------------
word_58DF0:	dc.w  $FFF8,   $10, $FFF0,   $20
; ---------------------------------------------------------------------------

loc_58DF8:
		move.w	a0,(_unkFAAE).w
		btst	#5,$38(a0)
		bne.s	loc_58E40
		move.w	(Camera_X_pos_copy).w,$10(a0)
		move.w	(Camera_Y_pos_copy).w,$14(a0)
		subq.w	#8,$14(a0)
		subq.w	#1,$2E(a0)
		bpl.s	locret_58E3E
		move.w	#8,$2E(a0)
		move.b	(_unkFAAD).w,d0
		addq.b	#1,d0
		cmpi.b	#$3C,d0
		bhi.s	locret_58E3E
		move.b	d0,(_unkFAAD).w
		jsr	(Create_New_Sprite).l
		bne.s	locret_58E3E
		move.l	#loc_58E46,(a1)

locret_58E3E:
		rts
; ---------------------------------------------------------------------------

loc_58E40:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_58E46:
		lea	ObjDat3_58FD0(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_58EB8,(a0)
		jsr	(Random_Number).l
		andi.w	#$1FF,d0
		cmpi.w	#$140,d0
		bcs.s	loc_58E6A
		andi.w	#$3F,d0
		lsl.w	#2,d0

loc_58E6A:
		add.w	(Camera_X_pos).w,d0
		cmpi.w	#$380,d0
		bcs.s	loc_58EEE
		move.w	d0,$10(a0)
		move.w	(Camera_Y_pos).w,d0
		subq.w	#4,d0
		move.w	d0,$14(a0)
		swap	d0
		move.w	d0,d1
		andi.w	#3,d0
		move.b	RawAni_58EAC(pc,d0.w),$22(a0)
		add.w	d0,d0
		move.w	word_58EB0(pc,d0.w),8(a0)
		andi.w	#$3C,d1
		subi.w	#$20,d1
		move.w	d1,$18(a0)
		move.w	#$100,$1A(a0)
		rts
; ---------------------------------------------------------------------------
RawAni_58EAC:	dc.b   $B, $10,  $B,  $B
word_58EB0:	dc.w $80
		dc.w $380
		dc.w $80
		dc.w $80
; ---------------------------------------------------------------------------

loc_58EB8:
		jsr	(MoveSprite2).l
		tst.b	4(a0)
		bmi.s	loc_58ECA
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_58ECA:
		move.l	#loc_58ED2,(a0)
		rts
; ---------------------------------------------------------------------------

loc_58ED2:
		jsr	(MoveSprite2).l
		tst.b	4(a0)
		bpl.s	loc_58EEE
		bchg	#0,$38(a0)
		bne.w	locret_58D72
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_58EEE:
		move.b	(_unkFAAD).w,d0
		subq.b	#1,d0
		bmi.s	loc_58EFA
		move.b	d0,(_unkFAAD).w

loc_58EFA:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------

loc_58F00:
		lea	word_58FDC(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_58F1E,(a0)
		move.l	#loc_58F28,$34(a0)
		bsr.w	sub_58F38
		jsr	Refresh_ChildPositionAdjusted(pc)

loc_58F1E:
		jsr	Obj_Wait(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_58F28:
		move.l	#loc_58F30,(a0)
		rts
; ---------------------------------------------------------------------------

loc_58F30:
		jsr	MoveSprite_LightGravity(pc)
		jmp	Sprite_CheckDeleteXY(pc)

; =============== S U B R O U T I N E =======================================


sub_58F38:
		movea.w	$46(a0),a1
		move.w	$44(a1),d0
		beq.s	locret_58F72
		movea.w	d0,a2
		lea	word_58F74(pc),a3
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,$2E(a0)
		add.w	d0,d0
		move.l	(a3,d0.w),$18(a0)
		btst	#0,4(a2)
		beq.s	locret_58F72
		bset	#0,4(a0)
		bset	#0,4(a1)
		neg.w	$18(a0)

locret_58F72:
		rts
; End of function sub_58F38

; ---------------------------------------------------------------------------
word_58F74:	dc.w  $FD00, $FE00
		dc.w  $FC00, $FD00
		dc.w  $FC00, $FD80
		dc.w  $FD80, $FE00
		dc.w  $FE00, $FE80
		dc.w  $FE00, $FF00
off_58F8C:	dc.l loc_58D06
		dc.l ObjDat3_58FAC
		dc.l loc_58D74
		dc.l ObjDat3_58FB8
		dc.l loc_58DAE
		dc.l ObjDat3_58FC4
		dc.l loc_58DF8
		dc.l ObjDat3_58FD0
ObjDat3_58FAC:	dc.l Map_ICZPlatforms
		dc.w $4377
		dc.w $80
		dc.b $18
		dc.b 8
		dc.b $20
		dc.b 0
ObjDat3_58FB8:	dc.l Map_ICZPlatforms
		dc.w $C377
		dc.w $80
		dc.b 8
		dc.b $10
		dc.b $21
		dc.b 0
ObjDat3_58FC4:	dc.l Map_ICZPlatforms
		dc.w $C377
		dc.w $80
		dc.b $10
		dc.b $10
		dc.b $22
		dc.b 0
ObjDat3_58FD0:	dc.l Map_ICZPlatforms
		dc.w $43B6
		dc.w $80
		dc.b 4
		dc.b 4
		dc.b $B
		dc.b 0
word_58FDC:	dc.w $43B6
		dc.w $80
		dc.b 8
		dc.b 8
		dc.b 9
		dc.b 0
ChildObjDat_58FE4:dc.w 5
		dc.l loc_58F00
		dc.w $F8F8
		dc.l loc_58F00
		dc.w $8F8
		dc.l loc_58F00
		dc.w $E800
		dc.l loc_58F00
		dc.w $F800
		dc.l loc_58F00
		dc.w $800
		dc.l loc_58F00
		dc.w $1800
ChildObjDat_5900A:dc.w 1
		dc.l loc_58F00
		dc.w $F8
		dc.l loc_58F00
		dc.w 8
ChildObjDat_59018:dc.w 3
		dc.l loc_58F00
		dc.w $F8F8
		dc.l loc_58F00
		dc.w 8
		dc.l loc_58F00
		dc.w $8F8
		dc.l loc_58F00
		dc.w $808
; ---------------------------------------------------------------------------

Obj_ICZ_TensionPlatform:
		lea	ObjDat3_59254(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_5904E,(a0)
		move.w	$14(a0),$30(a0)
		lea	ChildObjDat_59268(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_5904E:
		bsr.w	sub_590E8
		bsr.w	sub_591B4
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_5905A:
		lea	word_59260(pc),a1
		jsr	SetUp_ObjAttributes2(pc)
		move.l	#loc_5908A,(a0)
		tst.b	$2C(a0)
		beq.s	loc_59074
		bset	#0,4(a0)

loc_59074:
		bset	#6,4(a0)
		move.w	#2,$16(a0)
		bsr.w	sub_59092
		move.b	#8,$22(a0)

loc_5908A:
		bsr.w	sub_590C8
		jmp	Child_Draw_Sprite(pc)

; =============== S U B R O U T I N E =======================================


sub_59092:
		lea	$18(a0),a1
		move.w	$10(a0),d0
		move.w	$14(a0),d1
		moveq	#0,d2
		moveq	#1,d3

loc_590A2:
		move.w	d0,d4
		move.w	word_590C4(pc,d2.w),d5
		btst	#0,4(a0)
		beq.s	loc_590B2
		neg.w	d5

loc_590B2:
		add.w	d5,d4
		move.w	d4,(a1)+
		move.w	d1,(a1)+
		move.w	#8,(a1)+
		addq.w	#2,d2
		dbf	d3,loc_590A2
		rts
; End of function sub_59092

; ---------------------------------------------------------------------------
word_590C4:	dc.w $C
		dc.w $18

; =============== S U B R O U T I N E =======================================


sub_590C8:
		movea.w	$46(a0),a1
		lea	$1A(a0),a2
		move.w	$14(a0),d0
		move.w	$14(a1),d1
		move.w	d1,d2
		sub.w	d0,d1
		asr.w	#1,d1
		add.w	d0,d1
		move.w	d1,(a2)
		addq.w	#6,a2
		move.w	d2,(a2)
		rts
; End of function sub_590C8


; =============== S U B R O U T I N E =======================================


sub_590E8:
		btst	#2,$38(a0)
		beq.s	locret_5916E
		move.w	#$80,d0
		move.w	$14(a0),d1
		move.w	$1A(a0),d2
		move.b	$39(a0),d3
		sub.w	$32(a0),d1
		scs	$39(a0)
		bcs.s	loc_59110
		neg.w	d0
		bra.w	loc_59112
; ---------------------------------------------------------------------------

loc_59110:
		neg.w	d1

loc_59112:
		cmp.b	$39(a0),d3
		beq.s	loc_59142
		add.w	d0,d2
		add.w	d0,d2
		cmpi.w	#-$80,d2
		bge.s	loc_59130
		cmpi.w	#-$400,d2
		bgt.s	loc_59142
		bsr.w	sub_59170
		bra.w	loc_59142
; ---------------------------------------------------------------------------

loc_59130:
		cmpi.w	#$80,d2
		bgt.s	loc_59142
		cmpi.w	#1,d1
		bhi.s	loc_59142
		bclr	#2,$38(a0)

loc_59142:
		add.w	d0,d2
		move.w	#-$900,d3
		cmp.w	d3,d2
		bge.s	loc_59150
		bra.w	loc_59156
; ---------------------------------------------------------------------------

loc_59150:
		neg.w	d3
		cmp.w	d3,d2
		ble.s	loc_59158

loc_59156:
		move.w	d3,d2

loc_59158:
		move.w	d2,$1A(a0)
		jsr	(MoveSprite2).l
		cmpi.w	#$50,d1
		bcs.s	locret_5916E
		move.w	#-$100,$1A(a0)

locret_5916E:
		rts
; End of function sub_590E8


; =============== S U B R O U T I N E =======================================


sub_59170:
		move.b	$3A(a0),d3
		andi.b	#$18,d3
		beq.s	locret_591B2
		btst	#3,d3
		beq.s	loc_59188
		lea	(Player_1).w,a1
		bsr.w	sub_59192

loc_59188:
		btst	#4,d3
		beq.s	locret_591B2
		lea	(Player_2).w,a1
; End of function sub_59170


; =============== S U B R O U T I N E =======================================


sub_59192:
		move.w	d2,$1A(a1)
		bset	#1,$2A(a1)
		bclr	#3,$2A(a1)
		clr.b	$40(a1)
		move.b	#$10,$20(a1)
		move.b	#2,5(a1)

locret_591B2:
		rts
; End of function sub_59192


; =============== S U B R O U T I N E =======================================


sub_591B4:
		move.b	$2A(a0),$3A(a0)
		move.w	(Player_1+y_vel).w,-(sp)
		move.w	(Player_2+y_vel).w,-(sp)
		moveq	#$23,d1
		moveq	#$14,d2
		moveq	#$B,d3
		move.w	$10(a0),d4
		jsr	(SolidObjectTop).l
		move.l	(sp)+,d0
		move.b	$2A(a0),d1
		move.b	$3A(a0),d2
		move.b	d1,$3A(a0)
		eor.b	d1,d2
		andi.b	#$18,d2
		beq.s	locret_59214
		bsr.w	sub_59236
		bset	#2,$38(a0)
		clr.b	$39(a0)
		moveq	#3,d4
		btst	d4,d2
		beq.s	loc_59204
		lea	(Player_1).w,a1
		bsr.w	sub_59216

loc_59204:
		moveq	#4,d4
		btst	d4,d2
		beq.s	locret_59214
		swap	d0
		lea	(Player_2).w,a1
		bsr.w	sub_59216

locret_59214:
		rts
; End of function sub_591B4


; =============== S U B R O U T I N E =======================================


sub_59216:
		move.w	$1A(a0),d5
		btst	d4,d1
		bne.s	loc_59228
		tst.w	d0
		bpl.s	loc_59228
		add.w	d5,$1A(a1)
		neg.w	d0

loc_59228:
		add.w	d0,d5
		move.w	d5,d6
		asr.w	#2,d6
		sub.w	d6,d5
		move.w	d5,$1A(a0)
		rts
; End of function sub_59216


; =============== S U B R O U T I N E =======================================


sub_59236:
		moveq	#0,d5
		btst	#3,d1
		beq.s	loc_59240
		addq.w	#8,d5

loc_59240:
		btst	#4,d1
		beq.s	loc_59248
		addq.w	#8,d5

loc_59248:
		move.w	$30(a0),d3
		add.w	d5,d3
		move.w	d3,$32(a0)
		rts
; End of function sub_59236

; ---------------------------------------------------------------------------
ObjDat3_59254:	dc.l Map_ICZPlatforms
		dc.w $4377
		dc.w $280
		dc.b $18
		dc.b $C
		dc.b $1F
		dc.b 0
word_59260:	dc.w $43B6
		dc.w $280
		dc.b $40
		dc.b $40
		dc.b 8
		dc.b 0
ChildObjDat_59268:dc.w 1
		dc.l loc_5905A
		dc.w $C800
		dc.l loc_5905A
		dc.w $3800
; ---------------------------------------------------------------------------

Obj_Penguinator:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_59296(pc,d0.w),d1
		jsr	off_59296(pc,d1.w)
		lea	DPLCPtr_5959A(pc),a2
		jsr	Perform_DPLC(pc)
		jmp	Sprite_CheckDeleteTouchSlotted(pc)
; ---------------------------------------------------------------------------
off_59296:	dc.w loc_592A6-off_59296
		dc.w loc_59302-off_59296
		dc.w loc_5939C-off_59296
		dc.w loc_593B6-off_59296
		dc.w loc_59404-off_59296
		dc.w loc_59452-off_59296
		dc.w loc_5948C-off_59296
		dc.w loc_594D4-off_59296
; ---------------------------------------------------------------------------

loc_592A6:
		lea	ObjDat4_59574(pc),a1
		jsr	SetUp_ObjAttributesSlotted(pc)
		bclr	#1,4(a0)
		beq.s	loc_592BC
		bset	#7,$A(a0)

loc_592BC:
		move.b	#2,5(a0)
		move.b	#$F,$1E(a0)
		move.b	#4,$1F(a0)
		bclr	#5,$38(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		clr.w	$2E(a0)
		move.l	#byte_595A2,$30(a0)
		move.l	#loc_5938C,$34(a0)
		moveq	#2,d0
		btst	#0,4(a0)
		bne.s	loc_592FC
		neg.w	d0

loc_592FC:
		move.w	d0,$40(a0)
		rts
; ---------------------------------------------------------------------------

loc_59302:
		jsr	Animate_RawGetFaster(pc)
		beq.s	loc_59310
		cmpi.b	#2,$2E(a0)
		bls.s	loc_59328

loc_59310:
		move.w	$40(a0),d0
		move.w	$18(a0),d1
		add.w	d0,d1
		move.w	d1,$18(a0)
		jsr	(MoveSprite2).l
		jmp	ObjHitFloor2_DoRoutine(pc)
; ---------------------------------------------------------------------------

loc_59328:
		jsr	(ObjCheckFloorDist).l
		tst.b	d3
		beq.s	loc_59344
		btst	#0,4(a0)
		beq.s	loc_5933E
		bchg	#6,d3

loc_5933E:
		btst	#6,d3
		beq.s	loc_59378

loc_59344:
		move.b	#4,5(a0)
		move.w	#-$200,d0
		move.w	#$40,d1
		btst	#0,4(a0)
		beq.s	loc_5935E
		neg.w	d0
		neg.w	d1

loc_5935E:
		move.w	d0,$18(a0)
		move.w	d1,$40(a0)
		move.l	#byte_595A9,$30(a0)
		move.l	#loc_593A0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_59378:
		move.b	#$E,5(a0)
		move.w	#$40,$2E(a0)
		move.l	#loc_59344,$34(a0)

loc_5938C:
		neg.w	$18(a0)
		neg.w	$40(a0)
		bchg	#0,4(a0)
		rts
; ---------------------------------------------------------------------------

loc_5939C:
		jmp	Move_AnimateRaw(pc)
; ---------------------------------------------------------------------------

loc_593A0:
		move.b	#6,5(a0)
		move.b	#$B,$1E(a0)
		move.l	#loc_593BE,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_593B6:
		jsr	MoveSprite_LightGravity(pc)
		jmp	ObjHitFloor_DoRoutine(pc)
; ---------------------------------------------------------------------------

loc_593BE:
		tst.b	d3
		move.b	d3,d4
		bpl.s	loc_593C6
		neg.b	d4

loc_593C6:
		andi.b	#-8,d4
		beq.s	loc_593EA
		tst.w	$18(a0)
		bmi.s	loc_593D6
		bchg	#6,d3

loc_593D6:
		btst	#6,d3
		bne.s	loc_593EA
		neg.w	$18(a0)
		neg.w	$40(a0)
		bchg	#0,4(a0)

loc_593EA:
		move.b	#8,5(a0)
		move.w	#$20,$2E(a0)
		move.l	#loc_5942C,$34(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_59404:
		bsr.w	sub_59520
		cmpi.w	#-2,d1
		blt.w	loc_5938C
		cmpi.w	#$C,d1
		bge.s	loc_593A0
		add.w	d1,$14(a0)
		bsr.w	sub_59534
		bsr.w	sub_5955A
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5942C:
		move.b	#$A,5(a0)
		moveq	#8,d0
		sub.b	$22(a0),d0
		move.b	d0,$23(a0)
		clr.b	$24(a0)
		move.l	#byte_595AE,$30(a0)
		move.l	#loc_59474,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_59452:
		bsr.w	sub_59520
		cmpi.w	#-2,d1
		blt.w	loc_5938C
		cmpi.w	#$C,d1
		bge.w	loc_593A0
		add.w	d1,$14(a0)
		jsr	(MoveSprite2).l
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

loc_59474:
		move.b	#$C,5(a0)
		move.b	#0,$22(a0)
		move.b	#$F,$1E(a0)
		subq.w	#4,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_5948C:
		move.w	$18(a0),d0
		add.w	$40(a0),d0
		move.w	d0,$18(a0)
		beq.s	loc_594B4
		bsr.w	sub_59520
		cmpi.w	#-2,d1
		blt.s	loc_594B4
		cmpi.w	#$C,d1
		bge.s	loc_594B4
		add.w	d1,$14(a0)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_594B4:
		move.b	#$E,5(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	d0,$2E(a0)
		move.l	#loc_592BC,$34(a0)
		bchg	#0,4(a0)
		rts
; ---------------------------------------------------------------------------

loc_594D4:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

Obj_ICZSnowdust:
		lea	ObjDat3_59586(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#0,d0
		move.b	$2C(a0),d0
		beq.s	loc_59504
		move.l	#Obj_Wait,(a0)
		lsl.w	#2,d0
		subq.w	#1,d0
		move.w	d0,$2E(a0)
		move.l	#loc_59504,$34(a0)

locret_59502:
		rts
; ---------------------------------------------------------------------------

loc_59504:
		move.l	#loc_59512,(a0)
		move.l	#Go_Delete_Sprite,$34(a0)

loc_59512:
		lea	byte_595B7(pc),a1
		jsr	Animate_RawNoSST(pc)
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_59520:
		move.w	$18(a0),d3
		ext.l	d3
		lsl.l	#8,d3
		add.l	$10(a0),d3
		swap	d3
		jmp	(ObjCheckFloorDist2).l
; End of function sub_59520


; =============== S U B R O U T I N E =======================================


sub_59534:
		moveq	#4,d0
		tst.b	d3
		beq.s	loc_59544
		lsr.b	#3,d3
		andi.w	#$F,d3
		move.b	RawAni_5954A(pc,d3.w),d0

loc_59544:
		move.b	d0,$22(a0)
		rts
; End of function sub_59534

; ---------------------------------------------------------------------------
RawAni_5954A:	dc.b   4,  5,  6,  6,  7,  7,  8,  8,  8,  8,  7,  7,  6,  6,  5,  4

; =============== S U B R O U T I N E =======================================


sub_5955A:
		move.w	$2E(a0),d0
		andi.w	#3,d0
		bne.s	locret_59502
		moveq	#signextendB(sfx_SlideSkidQuiet),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_59592(pc),a2
		jmp	CreateChild1_Normal(pc)
; End of function sub_5955A

; ---------------------------------------------------------------------------
ObjDat4_59574:	dc.w 3
		dc.w $2500
		dc.w $12
		dc.w 0
		dc.l Map_Penguinator
		dc.w $280
		dc.b $14
		dc.b $10
		dc.b 0
		dc.b $1A
ObjDat3_59586:	dc.l Map_ICZSnowdust
		dc.w $2558
		dc.w 0
		dc.b 4
		dc.b $18
		dc.b 0
		dc.b 0
ChildObjDat_59592:dc.w 0
		dc.l Obj_ICZSnowdust
		dc.w $C
DPLCPtr_5959A:	dc.l ArtUnc_Penguinator
		dc.l DPLC_Penguinator
byte_595A2:	dc.b    7, $10
		dc.b    0,   1
		dc.b    0,   2
		dc.b  $FC
byte_595A9:	dc.b    3,   3
		dc.b    3,   4
		dc.b  $F4
byte_595AE:	dc.b    3,   8
		dc.b    8,   7
		dc.b    6,   5
		dc.b    4,   3
		dc.b  $F4
byte_595B7:	dc.b    0,   0,   0,   1,   2,   3,   4,   5,   4,   3,   2,   1,   0, $F4,   0
; ---------------------------------------------------------------------------

Obj_StarPointer:
		jsr	(Obj_WaitOffscreen).l
		lea	ObjDat3_59726(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.l	#loc_5960C,(a0)
		bclr	#1,4(a0)
		beq.s	loc_595E8
		bset	#7,$A(a0)

loc_595E8:
		moveq	#0,d0
		move.b	$2C(a0),d0
		andi.w	#6,d0
		move.w	word_59604(pc,d0.w),d4
		jsr	(Set_VelocityXTrackSonic).l
		lea	ChildObjDat_59738(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------
word_59604:	dc.w  $FFC0, $FFA0, $FF80, $FF00
; ---------------------------------------------------------------------------

loc_5960C:
		jsr	(MoveSprite2).l
		jsr	Find_SonicTails(pc)
		cmpi.w	#$80,d2
		bcc.s	loc_5962A
		btst	#0,4(a0)
		beq.s	loc_59626
		subq.w	#2,d0

loc_59626:
		tst.w	d0
		beq.s	loc_5962E

loc_5962A:
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_5962E:
		move.l	#loc_5963E,(a0)
		bset	#1,$38(a0)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_5963E:
		jsr	(MoveSprite2).l
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_59648:
		lea	word_59732(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		bset	#3,$2B(a0)
		move.b	#8,$1F(a0)
		move.l	#loc_5967E,(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		lsr.b	#1,d0
		move.b	byte_5967A(pc,d0.w),$3C(a0)
		move.l	#loc_596FC,$34(a0)
		rts
; ---------------------------------------------------------------------------
byte_5967A:	dc.b 0
		dc.b $40
		dc.b $80
		dc.b $C0
; ---------------------------------------------------------------------------

loc_5967E:
		btst	#0,(V_int_run_count+3).w
		bne.s	loc_596D6
		movea.w	$46(a0),a1
		btst	#0,4(a1)
		beq.s	loc_5969A
		addq.b	#1,$3C(a0)
		bra.w	loc_5969E
; ---------------------------------------------------------------------------

loc_5969A:
		subq.b	#1,$3C(a0)

loc_5969E:
		bne.s	loc_596D6
		btst	#1,$38(a1)
		beq.s	loc_596D6
		move.l	#loc_596E4,(a0)
		move.w	$18(a1),d0
		asl.w	#1,d0
		move.l	#ObjHitWall_DoRoutine,$30(a0)
		move.w	#8,$44(a0)
		move.w	d0,$18(a0)
		bpl.s	loc_596D6
		move.l	#ObjHitWall2_DoRoutine,$30(a0)
		move.w	#-8,$44(a0)

loc_596D6:
		bsr.w	sub_59718
		moveq	#4,d2
		jsr	MoveSprite_CircularSimple(pc)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_596E4:
		jsr	(MoveSprite2).l
		movea.l	$30(a0),a1
		move.w	$44(a0),d3
		jsr	(a1)
		bsr.w	sub_59718
		jmp	Sprite_CheckDeleteTouchXY(pc)
; ---------------------------------------------------------------------------

loc_596FC:
		move.l	#loc_5970C,(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5970C:
		lea	byte_59740(pc),a1
		jsr	Animate_RawNoSST(pc)
		jmp	Sprite_CheckDeleteTouchXY(pc)

; =============== S U B R O U T I N E =======================================


sub_59718:
		tst.b	$28(a0)
		bne.s	locret_59724
		movea.l	$34(a0),a1
		jsr	(a1)

locret_59724:
		rts
; End of function sub_59718

; ---------------------------------------------------------------------------
ObjDat3_59726:	dc.l Map_StarPointer
		dc.w $2548
		dc.w $280
		dc.b 8
		dc.b 8
		dc.b 0
		dc.b $B
word_59732:	dc.w $280
		dc.b 8
		dc.b 8
		dc.b 1
		dc.b $8B
ChildObjDat_59738:dc.w 3
		dc.l loc_59648
		dc.w 0
byte_59740:	dc.b    3,   1,   2,   3, $F4,   0
; ---------------------------------------------------------------------------

Obj_SnaleBlaster:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5975E(pc,d0.w),d1
		jsr	off_5975E(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_5975E:	dc.w loc_5976C-off_5975E
		dc.w loc_5978A-off_5975E
		dc.w loc_597BE-off_5975E
		dc.w loc_597EA-off_5975E
		dc.w loc_59842-off_5975E
		dc.w loc_5986C-off_5975E
		dc.w loc_5988C-off_5975E
; ---------------------------------------------------------------------------

loc_5976C:
		lea	ObjDat3_599F8(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		move.w	#$20,$2E(a0)
		move.l	#loc_597A6,$34(a0)
		lea	word_59A1C(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_5978A:
		move.b	#$1A,$28(a0)
		clr.b	$29(a0)
		btst	#1,$38(a0)
		bne.s	loc_597A2
		move.b	#$7F,$29(a0)

loc_597A2:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_597A6:
		move.b	#4,5(a0)
		move.l	#byte_59A48,$30(a0)
		move.l	#loc_597C8,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_597BE:
		move.b	#$1A,$28(a0)
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

loc_597C8:
		move.w	#-2,$40(a0)
		move.l	#byte_59A52,$30(a0)

loc_597D6:
		move.b	#6,5(a0)
		move.b	#2,$39(a0)
		bclr	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_597EA:
		move.b	#$1A,$28(a0)
		move.b	#$7F,$29(a0)
		bsr.w	sub_599CE
		jsr	Animate_RawMultiDelay(pc)
		tst.w	d2
		beq.s	locret_59820
		moveq	#3,d0
		tst.w	$40(a0)
		bmi.s	loc_5980C
		moveq	#4,d0

loc_5980C:
		cmp.b	$22(a0),d0
		bne.s	locret_59820
		move.w	$40(a0),d0
		add.w	d0,$14(a0)
		subq.b	#1,$39(a0)
		bmi.s	loc_59822

locret_59820:
		rts
; ---------------------------------------------------------------------------

loc_59822:
		move.b	#2,5(a0)
		move.w	#$90,$2E(a0)
		bset	#1,$38(a0)
		move.l	#loc_597D6,$34(a0)
		neg.w	$40(a0)
		rts
; ---------------------------------------------------------------------------

loc_59842:
		move.b	#$7F,$29(a0)
		subq.b	#1,$22(a0)
		beq.s	loc_59850
		rts
; ---------------------------------------------------------------------------

loc_59850:
		move.b	#$A,5(a0)
		move.b	#$7F,$29(a0)
		move.w	#$3B,$2E(a0)
		move.l	#loc_59876,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5986C:
		move.b	#$7F,$29(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_59876:
		move.b	#$C,5(a0)
		move.w	#$F,$2E(a0)
		move.l	#loc_59890,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5988C:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_59890:
		move.b	#$1A,$28(a0)
		move.b	#$7F,$29(a0)
		move.w	#2,$2E(a0)
		addq.b	#1,$22(a0)
		cmpi.b	#3,$22(a0)
		bcs.s	locret_598B4
		move.b	#6,5(a0)

locret_598B4:
		rts
; ---------------------------------------------------------------------------

loc_598B6:
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_598CC(pc,d0.w),d1
		jsr	off_598CC(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_598CC:	dc.w loc_598D2-off_598CC
		dc.w loc_598DA-off_598CC
		dc.w Animate_RawMultiDelay-off_598CC
; ---------------------------------------------------------------------------

loc_598D2:
		lea	word_59A04(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_598DA:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_598E8
		rts
; ---------------------------------------------------------------------------

loc_598E8:
		move.b	#4,5(a0)
		move.l	#byte_59A57,$30(a0)
		move.l	#loc_59900,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_59900:
		move.b	#2,5(a0)
		movea.w	$46(a0),a1
		bclr	#1,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_59912:
		jsr	Refresh_ChildPositionAdjusted(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_59928(pc,d0.w),d1
		jsr	off_59928(pc,d1.w)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------
off_59928:	dc.w loc_59930-off_59928
		dc.w loc_59938-off_59928
		dc.w loc_5996C-off_59928
		dc.w loc_599B8-off_59928
; ---------------------------------------------------------------------------

loc_59930:
		lea	word_59A0A(pc),a1
		jmp	SetUp_ObjAttributes3(pc)
; ---------------------------------------------------------------------------

loc_59938:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		bne.s	loc_59946
		rts
; ---------------------------------------------------------------------------

loc_59946:
		move.b	#4,5(a0)
		move.l	#byte_59A62,$30(a0)
		tst.b	$2C(a0)
		beq.s	loc_59962
		move.l	#byte_59A6B,$30(a0)

loc_59962:
		move.l	#loc_599B0,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5996C:
		jsr	Animate_RawMultiDelay(pc)
		tst.w	d2
		beq.s	locret_599AE
		bmi.s	locret_599AE
		cmpi.b	#4,$23(a0)
		bne.s	locret_599AE
		tst.b	4(a0)
		bpl.s	locret_599AE
		moveq	#signextendB(sfx_Projectile),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_59A30(pc),a2
		jsr	CreateChild2_Complex(pc)
		movea.w	$46(a0),a2
		btst	#0,4(a2)
		beq.s	loc_599A4
		neg.w	$18(a1)

loc_599A4:
		tst.b	$2C(a0)
		beq.s	locret_599AE
		neg.w	$1A(a1)

locret_599AE:
		rts
; ---------------------------------------------------------------------------

loc_599B0:
		move.b	#6,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_599B8:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	loc_599C6
		rts
; ---------------------------------------------------------------------------

loc_599C6:
		move.b	#2,5(a0)
		rts

; =============== S U B R O U T I N E =======================================


sub_599CE:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$30,d2
		bcc.s	locret_599E6
		cmpi.w	#$30,d3
		bcc.s	locret_599E6
		cmpi.b	#2,$20(a1)
		beq.s	loc_599E8

locret_599E6:
		rts
; ---------------------------------------------------------------------------

loc_599E8:
		move.b	#8,5(a0)
		move.b	#3,$22(a0)
		addq.w	#4,sp
		rts
; End of function sub_599CE

; ---------------------------------------------------------------------------
ObjDat3_599F8:	dc.l Map_SnaleBlaster
		dc.w $2524
		dc.w $200
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b $B
word_59A04:	dc.w $180
		dc.b 4
		dc.b $C
		dc.b 5
		dc.b 0
word_59A0A:	dc.w $200
		dc.b 4
		dc.b 4
		dc.b 7
		dc.b 0
ObjDat3_59A10:	dc.l Map_SnaleBlaster
		dc.w $8524
		dc.w $200
		dc.b 4
		dc.b 4
		dc.b 9
		dc.b $98
word_59A1C:	dc.w 2
		dc.l loc_59912
		dc.w $F800
		dc.l loc_59912
		dc.w $F807
		dc.l loc_598B6
		dc.w $F804
ChildObjDat_59A30:dc.w 0
		dc.l loc_54B46
		dc.l ObjDat3_59A10
		dc.l 0
		dc.l MoveSprite2
		dc.b 0
		dc.b 0
		dc.w $FE00
		dc.w $FF00
byte_59A48:	dc.b 5
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 4
		dc.b 4
		dc.b 4
		dc.b $F4
byte_59A52:	dc.b 4
		dc.b $F
		dc.b 3
		dc.b $F
		dc.b $FC
byte_59A57:	dc.b 5
		dc.b 2
		dc.b 6
		dc.b 2
		dc.b $A
		dc.b $5F
		dc.b 6
		dc.b 2
		dc.b 5
		dc.b 2
		dc.b $F4
byte_59A62:	dc.b 7
		dc.b 2
		dc.b 7
		dc.b $1F
		dc.b 8
		dc.b 3
		dc.b 7
		dc.b 0
		dc.b $F4
byte_59A6B:	dc.b 7
		dc.b 2
		dc.b 7
		dc.b $2F
		dc.b 8
		dc.b 3
		dc.b 7
		dc.b 0
		dc.b $F4
; ---------------------------------------------------------------------------

Obj_Ribot:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_59A8C(pc,d0.w),d1
		jsr	off_59A8C(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_59A8C:	dc.w loc_59A90-off_59A8C
		dc.w loc_59AD8-off_59A8C
; ---------------------------------------------------------------------------

loc_59A90:
		lea	ObjDat3_59D4A(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		bset	#2,$38(a0)
		move.b	$2C(a0),d0
		subq.b	#2,d0
		beq.s	loc_59AB8
		bpl.s	loc_59AC8
		move.l	#byte_59DA6,$30(a0)
		lea	ChildObjDat_59D62(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_59AB8:
		move.l	#byte_59DA6,$30(a0)
		lea	ChildObjDat_59D70(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_59AC8:
		move.l	#byte_59DAC,$30(a0)
		lea	ChildObjDat_59D7E(pc),a2
		jmp	CreateChild1_Normal(pc)
; ---------------------------------------------------------------------------

loc_59AD8:
		bclr	#2,$38(a0)
		beq.s	loc_59AF6
		andi.b	#-4,$38(a0)
		moveq	#0,d0
		bchg	#3,$38(a0)
		beq.s	loc_59AF2
		moveq	#1,d0

loc_59AF2:
		bset	d0,$38(a0)

loc_59AF6:
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

loc_59AFA:
		moveq	#0,d2
		movea.w	$46(a0),a1
		move.b	$2C(a1),d2
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_59B16(pc,d0.w),d1
		jsr	off_59B16(pc,d1.w)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------
off_59B16:	dc.w loc_59B20-off_59B16
		dc.w loc_59B44-off_59B16
		dc.w loc_59BB0-off_59B16
		dc.w loc_59C16-off_59B16
		dc.w loc_59C42-off_59B16
; ---------------------------------------------------------------------------

loc_59B20:
		lea	word_59D56(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.b	#8,$1E(a0)
		move.b	#-$10,$43(a0)
		move.w	$10(a0),$3E(a0)
		move.w	$14(a0),$40(a0)
		bra.w	loc_59D1A
; ---------------------------------------------------------------------------

loc_59B44:
		move.w	off_59B4C(pc,d2.w),d3
		jmp	off_59B4C(pc,d3.w)
; ---------------------------------------------------------------------------
off_59B4C:	dc.w loc_59B52-off_59B4C
		dc.w loc_59B74-off_59B4C
		dc.w loc_59BA6-off_59B4C
; ---------------------------------------------------------------------------

loc_59B52:
		moveq	#0,d0
		tst.b	$2C(a0)
		bne.s	loc_59B5C
		moveq	#1,d0

loc_59B5C:
		btst	d0,$38(a1)
		bne.s	loc_59B64
		rts
; ---------------------------------------------------------------------------

loc_59B64:
		move.b	#4,5(a0)
		move.l	#loc_59BDE,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_59B74:
		moveq	#0,d0
		move.w	#$400,d1
		tst.b	$2C(a0)
		bne.s	loc_59B84
		moveq	#1,d0
		neg.w	d1

loc_59B84:
		btst	d0,$38(a1)
		bne.s	loc_59B8C
		rts
; ---------------------------------------------------------------------------

loc_59B8C:
		move.b	#4,5(a0)
		move.w	d1,$18(a0)
		move.w	#$F,$2E(a0)
		move.l	#loc_59BF2,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_59BA6:
		addq.b	#2,$3C(a0)
		moveq	#2,d2
		jmp	MoveSprite_CircularSimpleOffset(pc)
; ---------------------------------------------------------------------------

loc_59BB0:
		move.w	off_59BB8(pc,d2.w),d3
		jmp	off_59BB8(pc,d3.w)
; ---------------------------------------------------------------------------
off_59BB8:	dc.w loc_59BBE-off_59BB8
		dc.w loc_59C0C-off_59BB8
		dc.w loc_59BBE-off_59BB8
; ---------------------------------------------------------------------------

loc_59BBE:
		move.w	$14(a0),d0
		sub.w	$40(a0),d0
		cmpi.w	#$80,d0
		bcc.s	loc_59BF2
		jsr	(MoveSprite).l
		tst.w	$1A(a0)
		bmi.w	locret_59C0A
		jmp	ObjHitFloor_DoRoutine(pc)
; ---------------------------------------------------------------------------

loc_59BDE:
		move.w	$1A(a0),d0
		cmpi.w	#$100,d0
		bcs.s	loc_59BF2
		asr.w	#2,d0
		neg.w	d0
		move.w	d0,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_59BF2:
		move.b	#6,5(a0)
		move.w	#$10,$2E(a0)
		move.l	#loc_59C28,$34(a0)
		clr.w	$1A(a0)

locret_59C0A:
		rts
; ---------------------------------------------------------------------------

loc_59C0C:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_59C16:
		move.w	off_59C1E(pc,d2.w),d3
		jmp	off_59C1E(pc,d3.w)
; ---------------------------------------------------------------------------
off_59C1E:	dc.w loc_59C24-off_59C1E
		dc.w loc_59C24-off_59C1E
		dc.w loc_59C24-off_59C1E
; ---------------------------------------------------------------------------

loc_59C24:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_59C28:
		move.b	#8,5(a0)
		neg.w	$18(a0)
		move.w	#$F,$2E(a0)
		move.l	#loc_59C62,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_59C42:
		move.w	off_59C4A(pc,d2.w),d3
		jmp	off_59C4A(pc,d3.w)
; ---------------------------------------------------------------------------
off_59C4A:	dc.w loc_59C50-off_59C4A
		dc.w loc_59C80-off_59C4A
		dc.w loc_59C50-off_59C4A
; ---------------------------------------------------------------------------

loc_59C50:
		move.w	$14(a0),d0
		subq.w	#2,d0
		cmp.w	$40(a0),d0
		bls.s	loc_59C62
		move.w	d0,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_59C62:
		move.b	#2,5(a0)
		move.w	$3E(a0),$10(a0)
		move.w	$40(a0),$14(a0)
		movea.w	$46(a0),a1
		bset	#2,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_59C80:
		jsr	(MoveSprite2).l
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_59C8A:
		lea	word_59D5C(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_59CA8,(a0)
		move.w	$10(a0),$3E(a0)
		move.w	$14(a0),$40(a0)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------

loc_59CA8:
		movea.w	$46(a0),a1
		move.w	$10(a1),d2
		move.w	$14(a1),d3
		sub.w	$3E(a0),d2
		sub.w	$40(a0),d3
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	off_59CCE(pc,d0.w),d1
		jsr	off_59CCE(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_59CCE:	dc.w loc_59CD4-off_59CCE
		dc.w loc_59CEE-off_59CCE
		dc.w loc_59D04-off_59CCE
; ---------------------------------------------------------------------------

loc_59CD4:
		asr.w	#2,d2
		neg.w	d2
		add.w	$10(a1),d2
		move.w	d2,$10(a0)
		asr.w	#2,d3
		neg.w	d3
		add.w	$14(a1),d3
		move.w	d3,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_59CEE:
		asr.w	#1,d2
		add.w	$3E(a0),d2
		move.w	d2,$10(a0)
		asr.w	#1,d3
		add.w	$40(a0),d3
		move.w	d3,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_59D04:
		asr.w	#2,d2
		add.w	$3E(a0),d2
		move.w	d2,$10(a0)
		asr.w	#2,d3
		add.w	$40(a0),d3
		move.w	d3,$14(a0)
		rts
; ---------------------------------------------------------------------------

loc_59D1A:
		movea.w	$46(a0),a1
		move.b	$2C(a1),d0
		subq.b	#2,d0
		beq.s	loc_59D30
		bpl.s	loc_59D42
		lea	ChildObjDat_59D86(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------

loc_59D30:
		lea	ChildObjDat_59D8E(pc),a2
		tst.b	$2C(a0)
		beq.s	loc_59D3E
		lea	ChildObjDat_59D96(pc),a2

loc_59D3E:
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------

loc_59D42:
		lea	ChildObjDat_59D9E(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------
ObjDat3_59D4A:	dc.l Map_Ribot
		dc.w $2547
		dc.w $280
		dc.b $10
		dc.b $C
		dc.b 0
		dc.b $B
word_59D56:	dc.w $200
		dc.b 8
		dc.b 8
		dc.b 7
		dc.b $97
word_59D5C:	dc.w $200
		dc.b 4
		dc.b 4
		dc.b 6
		dc.b 0
ChildObjDat_59D62:dc.w 1
		dc.l loc_59AFA
		dc.w $F40C
		dc.l loc_59AFA
		dc.w $C0C
ChildObjDat_59D70:dc.w 1
		dc.l loc_59AFA
		dc.w $E800
		dc.l loc_59AFA
		dc.w $1800
ChildObjDat_59D7E:dc.w 0
		dc.l loc_59AFA
		dc.w $F0
ChildObjDat_59D86:dc.w 2
		dc.l loc_59C8A
		dc.w $F4
ChildObjDat_59D8E:dc.w 2
		dc.l loc_59C8A
		dc.w $C00
ChildObjDat_59D96:dc.w 2
		dc.l loc_59C8A
		dc.w $F400
ChildObjDat_59D9E:dc.w 2
		dc.l loc_59C8A
		dc.w 0
byte_59DA6:	dc.b 7
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b 1
		dc.b $FC
byte_59DAC:	dc.b 7
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b 4
		dc.b $FC
; ---------------------------------------------------------------------------

Obj_Orbinaut:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_59DCA(pc,d0.w),d1
		jsr	off_59DCA(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_59DCA:	dc.w loc_59DCE-off_59DCA
		dc.w loc_59DE0-off_59DCA
; ---------------------------------------------------------------------------

loc_59DCE:
		lea	ObjDat3_59E6E(pc),a1
		jsr	SetUp_ObjAttributes(pc)
		lea	ChildObjDat_59E80(pc),a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_59DE0:
		lea	(Player_1).w,a1
		jsr	Find_OtherObject(pc)
		bclr	#0,4(a0)
		move.w	#-$80,d1
		tst.w	d0
		beq.s	loc_59DFE
		bset	#0,4(a0)
		neg.w	d1

loc_59DFE:
		move.w	d1,$18(a0)
		bsr.w	sub_59E50
		beq.w	locret_59E6C
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_59E10:
		lea	word_59E7A(pc),a1
		jsr	SetUp_ObjAttributes3(pc)
		move.l	#loc_59E2C,(a0)
		move.b	$2C(a0),d0
		lsl.b	#5,d0
		move.b	d0,$3C(a0)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------

loc_59E2C:
		movea.w	$46(a0),a1
		bsr.w	sub_59E50
		beq.s	loc_59E46
		moveq	#8,d0
		btst	#0,4(a1)
		beq.s	loc_59E42
		moveq	#-8,d0

loc_59E42:
		add.b	d0,$3C(a0)

loc_59E46:
		moveq	#4,d2
		jsr	MoveSprite_CircularSimple(pc)
		jmp	Child_DrawTouch_Sprite(pc)

; =============== S U B R O U T I N E =======================================


sub_59E50:
		lea	(Player_1).w,a2
		btst	#1,$2A(a2)
		bne.s	loc_59E68
		tst.w	$18(a2)
		bne.s	locret_59E6C
		tst.w	$1A(a2)
		bne.s	locret_59E6C

loc_59E68:
		moveq	#0,d0
		rts
; ---------------------------------------------------------------------------

locret_59E6C:
		rts
; End of function sub_59E50

; ---------------------------------------------------------------------------
ObjDat3_59E6E:	dc.l Map_Orbinaut
		dc.w $256E
		dc.w $280
		dc.b 8
		dc.b 8
		dc.b 0
		dc.b $B
word_59E7A:	dc.w $280
		dc.b 8
		dc.b 8
		dc.b 1
		dc.b $8B
ChildObjDat_59E80:dc.w 3
		dc.l loc_59E10
		dc.w $10
		dc.l loc_59E10
		dc.w $1000
		dc.l loc_59E10
		dc.w $F0
		dc.l loc_59E10
		dc.b $F0
		dc.b 0
		dc.b 0
		dc.b 5
		dc.b 1
		dc.b 5
		dc.b 2
		dc.b 5
		dc.b 3
		dc.b 5
		dc.b $FC
		dc.b 0
; ---------------------------------------------------------------------------

Obj_Corkey:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_59EBC(pc,d0.w),d1
		jsr	off_59EBC(pc,d1.w)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------
off_59EBC:	dc.w loc_59EC2-off_59EBC
		dc.w loc_59F18-off_59EBC
		dc.w loc_59F48-off_59EBC
; ---------------------------------------------------------------------------

loc_59EC2:
		lea	ObjDat3_5A068(pc),a1
		jsr	(SetUp_ObjAttributes).l
		moveq	#-1,d0
		btst	#0,4(a0)
		beq.s	loc_59ED8
		neg.w	d0

loc_59ED8:
		move.w	d0,$40(a0)
		move.b	$2C(a0),d0
		move.b	d0,$2F(a0)
		move.l	#loc_59F38,$34(a0)
		add.b	d0,d0
		move.b	d0,$2C(a0)
		lea	ChildObjDat_5A082(pc),a2
		jsr	(CreateChild1_Normal).l

loc_59EFC:
		jsr	(Random_Number).l
		andi.w	#$3F,d0
		move.w	d0,d1
		andi.w	#$30,d1
		bne.s	loc_59F12
		ori.w	#$30,d0

loc_59F12:
		move.w	d0,$3A(a0)
		rts
; ---------------------------------------------------------------------------

loc_59F18:
		subq.w	#1,$3A(a0)
		bmi.s	loc_59F2A
		move.w	$40(a0),d0
		add.w	d0,$10(a0)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_59F2A:
		move.b	#4,5(a0)
		bset	#1,$38(a0)
		rts
; ---------------------------------------------------------------------------

loc_59F38:
		neg.w	$40(a0)
		clr.b	$2E(a0)
		move.b	$2C(a0),$2F(a0)
		rts
; ---------------------------------------------------------------------------

loc_59F48:
		btst	#1,$38(a0)
		beq.s	loc_59F52
		rts
; ---------------------------------------------------------------------------

loc_59F52:
		move.b	#2,5(a0)
		bra.s	loc_59EFC
; ---------------------------------------------------------------------------

loc_59F5A:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_59F6C(pc,d0.w),d1
		jsr	off_59F6C(pc,d1.w)
		jmp	Child_Draw_Sprite(pc)
; ---------------------------------------------------------------------------
off_59F6C:	dc.w loc_59F74-off_59F6C
		dc.w loc_59F7E-off_59F6C
		dc.w loc_59FA6-off_59F6C
		dc.w loc_5A020-off_59F6C
; ---------------------------------------------------------------------------

loc_59F74:
		lea	word_5A074(pc),a1
		jmp	(SetUp_ObjAttributes3).l
; ---------------------------------------------------------------------------

loc_59F7E:
		jsr	Refresh_ChildPositionAdjusted(pc)
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	locret_59FA4
		move.b	#4,5(a0)
		move.l	#loc_5A004,$34(a0)
		move.l	#byte_5A0A2,$30(a0)

locret_59FA4:
		rts
; ---------------------------------------------------------------------------

loc_59FA6:
		jsr	Animate_RawGetFaster(pc)
		tst.w	d2
		bpl.s	locret_59FC6
		cmpi.b	#4,$2F(a0)
		beq.s	loc_59FC8
		cmpi.b	#5,$2F(a0)
		beq.s	loc_59FDC
		cmpi.b	#6,$2F(a0)
		beq.s	loc_59FF0

locret_59FC6:
		rts
; ---------------------------------------------------------------------------

loc_59FC8:
		lea	ChildObjDat_5A08A(pc),a2
		jsr	(CreateChild1_Normal).l
		move.l	#byte_5A0A7,$30(a1)
		rts
; ---------------------------------------------------------------------------

loc_59FDC:
		lea	ChildObjDat_5A092(pc),a2
		jsr	(CreateChild1_Normal).l
		move.l	#byte_5A0B0,$30(a1)
		rts
; ---------------------------------------------------------------------------

loc_59FF0:
		lea	ChildObjDat_5A09A(pc),a2
		jsr	(CreateChild1_Normal).l
		move.l	#byte_5A0B9,$30(a1)
		rts
; ---------------------------------------------------------------------------

loc_5A004:
		move.b	#6,5(a0)
		move.b	#2,$22(a0)
		move.w	#7,$2E(a0)
		move.l	#loc_5A024,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A020:
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5A024:
		move.b	#2,5(a0)
		move.b	#1,$22(a0)
		movea.w	$46(a0),a1
		bclr	#1,$38(a1)
		rts
; ---------------------------------------------------------------------------

loc_5A03C:
		lea	word_5A07A(pc),a1
		jsr	(SetUp_ObjAttributes2).l
		move.l	#loc_5A05C,(a0)
		move.l	#Go_Delete_Sprite,$34(a0)
		moveq	#signextendB(sfx_Lazer),d0
		jsr	(Play_Sound_2).l

loc_5A05C:
		addq.w	#1,$3A(a0)
		jsr	Animate_RawMultiDelay(pc)
		jmp	Child_DrawTouch_Sprite(pc)
; ---------------------------------------------------------------------------
ObjDat3_5A068:	dc.l Map_Corkey
		dc.w $2558
		dc.w $280
		dc.b $10
		dc.b $C
		dc.b 0
		dc.b $B
word_5A074:	dc.w $280
		dc.b 8
		dc.b 4
		dc.b 1
		dc.b 0
word_5A07A:	dc.w $558
		dc.w $280
		dc.b 4
		dc.b $50
		dc.b 0
		dc.b $A0
ChildObjDat_5A082:dc.w 0
		dc.l loc_59F5A
		dc.w $C
ChildObjDat_5A08A:dc.w 0
		dc.l loc_5A03C
		dc.w $FC54
ChildObjDat_5A092:dc.w 0
		dc.l loc_5A03C
		dc.w $454
ChildObjDat_5A09A:dc.w 0
		dc.l loc_5A03C
		dc.w $54
byte_5A0A2:	dc.b 7
		dc.b $10
		dc.b 1
		dc.b 3
		dc.b $FC
byte_5A0A7:	dc.b 6
		dc.b 0
		dc.b 6
		dc.b 0
		dc.b 7
		dc.b 4
		dc.b 5
		dc.b 0
		dc.b $F4
byte_5A0B0:	dc.b 5
		dc.b 0
		dc.b 5
		dc.b 0
		dc.b 7
		dc.b 4
		dc.b 6
		dc.b 0
		dc.b $F4
byte_5A0B9:	dc.b 4
		dc.b 0
		dc.b 5
		dc.b 0
		dc.b 7
		dc.b 0
		dc.b 4
		dc.b 0
		dc.b 5
		dc.b 0
		dc.b 7
		dc.b 0
		dc.b 4
		dc.b 0
		dc.b 5
		dc.b 0
		dc.b 7
		dc.b 0
		dc.b 4
		dc.b 0
		dc.b 5
		dc.b 0
		dc.b 7
		dc.b 0
		dc.b 4
		dc.b 0
		dc.b 5
		dc.b 0
		dc.b 7
		dc.b 0
		dc.b 6
		dc.b 3
		dc.b $F4
; ---------------------------------------------------------------------------

Obj_Flybot767:
		jsr	(Obj_WaitOffscreen).l
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5A0FC(pc,d0.w),d1
		jsr	off_5A0FC(pc,d1.w)
		lea	DPLCPtr_5A28C(pc),a2
		jsr	Perform_DPLC(pc)
		jmp	(Sprite_CheckDeleteTouchSlotted).l
; ---------------------------------------------------------------------------
off_5A0FC:	dc.w loc_5A108-off_5A0FC
		dc.w loc_5A126-off_5A0FC
		dc.w loc_5A188-off_5A0FC
		dc.w loc_5A1D0-off_5A0FC
		dc.w loc_5A204-off_5A0FC
		dc.w loc_5A248-off_5A0FC
; ---------------------------------------------------------------------------

loc_5A108:
		lea	ObjDat4_5A27A(pc),a1
		jsr	SetUp_ObjAttributesSlotted(pc)
		move.l	#byte_5A294,$30(a0)
		move.b	#0,$42(a0)
		move.b	#-$40,$43(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A126:
		lea	(Player_1).w,a1
		move.w	#$200,d0
		moveq	#$10,d1
		jsr	Chase_ObjectXOnly(pc)
		move.w	#$100,d0
		moveq	#$10,d1
		jsr	Chase_ObjectYOnly(pc)
		jsr	(MoveSprite2).l
		lea	(Player_1).w,a1
		jsr	Find_OtherObject(pc)
		tst.w	d1
		beq.s	loc_5A156
		cmpi.w	#$60,d2
		bcs.s	loc_5A15E

loc_5A156:
		jsr	Change_FlipXWithVelocity(pc)
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

loc_5A15E:
		move.b	#4,5(a0)
		clr.w	$1A(a0)
		move.w	$14(a0),$44(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		move.l	#byte_5A2A0,$30(a0)
		move.l	#loc_5A192,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A188:
		jsr	(MoveSprite2).l
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

loc_5A192:
		move.b	#6,5(a0)
		lea	(Player_1).w,a1
		jsr	Find_OtherObject(pc)
		move.w	#$200,d1
		bset	#0,4(a0)
		tst.w	d0
		bne.s	loc_5A1B6
		neg.w	d1
		bclr	#0,4(a0)

loc_5A1B6:
		move.w	d1,$18(a0)
		move.l	#byte_5A2A9,$30(a0)
		move.w	#$200,$1A(a0)
		move.w	#$20,$2E(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A1D0:
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bpl.s	loc_5A1E4
		jsr	Find_SonicTails(pc)
		tst.w	d1
		beq.s	loc_5A1E8

loc_5A1E4:
		jmp	Animate_Raw(pc)
; ---------------------------------------------------------------------------

loc_5A1E8:
		move.b	#8,5(a0)
		move.l	#byte_5A2B5,$30(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		neg.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A204:
		jsr	(MoveSprite2).l
		move.w	$14(a0),d0
		cmp.w	$44(a0),d0
		bcs.s	loc_5A21A
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

loc_5A21A:
		move.b	#$A,5(a0)
		move.l	#byte_5A294,$30(a0)
		clr.b	$23(a0)
		clr.b	$24(a0)
		clr.w	$18(a0)
		clr.w	$1A(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_5A272,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A248:
		lea	(Player_1).w,a1
		move.w	#$200,d0
		moveq	#$10,d1
		jsr	Chase_ObjectXOnly(pc)
		move.w	#$100,d0
		moveq	#$10,d1
		jsr	Chase_ObjectYOnly(pc)
		jsr	(MoveSprite2).l
		jsr	Change_FlipXWithVelocity(pc)
		jsr	Animate_Raw(pc)
		jmp	Obj_Wait(pc)
; ---------------------------------------------------------------------------

loc_5A272:
		move.b	#2,5(a0)
		rts
; ---------------------------------------------------------------------------
ObjDat4_5A27A:	dc.w 2
		dc.w $A500
		dc.w $C
		dc.w 0
		dc.l Map_Flybot767
		dc.w $280
		dc.b $10
		dc.b $10
		dc.b 0
		dc.b $1A
DPLCPtr_5A28C:	dc.l ArtUnc_Flybot
		dc.l DPLC_Flybot
byte_5A294:	dc.b 4
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b 6
		dc.b 7
		dc.b 8
		dc.b 9
		dc.b $FC
byte_5A2A0:	dc.b 2
		dc.b $A
		dc.b $A
		dc.b $B
		dc.b $C
		dc.b $D
		dc.b $E
		dc.b $F
		dc.b $F4
byte_5A2A9:	dc.b 3
		dc.b $10
		dc.b $10
		dc.b $11
		dc.b $12
		dc.b $13
		dc.b $F8
		dc.b 8
		dc.b 3
		dc.b $13
		dc.b $13
		dc.b $FC
byte_5A2B5:	dc.b 3
		dc.b $A
		dc.b $A
		dc.b $14
		dc.b $F8
		dc.b 6
		dc.b 3
		dc.b $14
		dc.b $14
		dc.b $FC
		dc.b 0
; ---------------------------------------------------------------------------

Obj_C3_1:
		lea	word_5A2F0(pc),a1
		jsr	Check_CameraInRange(pc)
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5A2E0(pc,d0.w),d1
		jsr	off_5A2E0(pc,d1.w)
		jsr	(sub_5A7B4).l
		jmp	Draw_And_Touch_Sprite(pc)
; ---------------------------------------------------------------------------
off_5A2E0:	dc.w loc_5A2F8-off_5A2E0
		dc.w loc_5A348-off_5A2E0
		dc.w loc_5A380-off_5A2E0
		dc.w loc_5A3AC-off_5A2E0
		dc.w loc_5A3D6-off_5A2E0
		dc.w loc_5A406-off_5A2E0
		dc.w loc_5A436-off_5A2E0
		dc.w loc_5A47E-off_5A2E0
word_5A2F0:	dc.w   $500,  $5E0, $3820, $3AC0
; ---------------------------------------------------------------------------

loc_5A2F8:
		lea	ObjDat3_5A7E8(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.b	#-1,$29(a0)
		st	(_unkFAAB).w
		jsr	(Swing_Setup1).l
		move.w	#$3820,(Camera_min_X_pos).w
		move.w	#$3AE8,(Camera_max_X_pos).w
		moveq	#$60,d0
		jsr	(Load_PLC).l
		lea	(ArtKosM_LBZMinibossBox).l,a1
		move.w	#-$7540,d2
		jsr	(Queue_Kos_Module).l
		lea	(Child1_MakeRoboHead3).l,a2
		jsr	CreateChild1_Normal(pc)
		lea	ChildObjDat_5A800(pc),a2
		jmp	CreateChild3_NormalRepeated(pc)
; ---------------------------------------------------------------------------

loc_5A348:
		lea	(Player_1).w,a1
		jsr	Find_OtherObject(pc)
		tst.w	d1
		beq.s	loc_5A372
		cmpi.w	#$70,d2
		bcc.s	loc_5A368
		cmpi.w	#$60,d3
		bcc.s	loc_5A368
		btst	#1,$2A(a1)
		beq.s	loc_5A372

loc_5A368:
		jsr	Swing_UpAndDown(pc)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_5A372:
		move.b	#4,5(a0)
		move.w	#-$400,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A380:
		cmpi.w	#$300,$14(a0)
		bcs.s	loc_5A38E
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_5A38E:
		move.b	#6,5(a0)
		bset	#0,4(a0)
		move.w	#$3EC0,$10(a0)
		move.w	#$1A0,$14(a0)
		jmp	(Swing_Setup1).l
; ---------------------------------------------------------------------------

loc_5A3AC:
		lea	(Player_1).w,a1
		cmpi.w	#$3B40,(Camera_X_pos).w
		bcs.s	locret_5A3C8
		cmpi.w	#$1C0,$14(a1)
		bcs.s	locret_5A3C8
		btst	#1,$2A(a1)
		beq.s	loc_5A3CA

locret_5A3C8:
		rts
; ---------------------------------------------------------------------------

loc_5A3CA:
		move.b	#8,5(a0)
		st	(Events_fg_4).w
		rts
; ---------------------------------------------------------------------------

loc_5A3D6:
		tst.w	(Events_fg_4).w
		beq.s	loc_5A3DE
		rts
; ---------------------------------------------------------------------------

loc_5A3DE:
		move.b	#$A,5(a0)
		lea	(ArtKosM_LBZMinibossBox).l,a1
		move.w	#-$7540,d2
		jsr	(Queue_Kos_Module).l
		move.w	#$3EA0,(Target_camera_max_X_pos).w
		lea	(Child6_IncLevX).l,a2
		jmp	(CreateChild6_Simple).l
; ---------------------------------------------------------------------------

loc_5A406:
		move.w	(Camera_X_pos).w,d0
		cmpi.w	#$3E50,d0
		bcc.s	loc_5A414
		move.w	d0,(Camera_min_X_pos).w

loc_5A414:
		jsr	Find_SonicTails(pc)
		cmpi.w	#$60,d2
		bcs.s	loc_5A428
		jsr	Swing_UpAndDown(pc)
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_5A428:
		move.b	#$C,5(a0)
		move.w	#-$400,$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A436:
		cmpi.w	#$12C,$14(a0)
		bls.s	loc_5A444
		jmp	(MoveSprite2).l
; ---------------------------------------------------------------------------

loc_5A444:
		move.b	#$E,5(a0)
		move.w	#$12C,$14(a0)
		bset	#1,$38(a0)
		move.w	#$200,$18(a0)
		move.w	#$200,$1A(a0)
		lea	(ArtKosM_LBZMiniboss).l,a1
		move.w	#-$6540,d2
		jsr	(Queue_Kos_Module).l
		lea	(Child1_MakeRoboShipFlame).l,a2
		jmp	(CreateChild1_Normal).l
; ---------------------------------------------------------------------------

loc_5A47E:
		jsr	(MoveSprite2).l
		cmpi.w	#$1B8,$14(a0)
		bcc.s	loc_5A48E
		rts
; ---------------------------------------------------------------------------

loc_5A48E:
		move.l	#loc_5A49A,(a0)
		clr.w	$1A(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A49A:
		jsr	(MoveSprite2).l
		jsr	(sub_5A7B4).l
		jmp	Sprite_CheckDeleteTouch2(pc)
; ---------------------------------------------------------------------------

loc_5A4AA:
		move.l	#loc_5A4BA,(a0)
		lea	ChildObjDat_5A808(pc),a2
		jmp	(CreateChild3_NormalRepeated).l
; ---------------------------------------------------------------------------

loc_5A4BA:
		movea.w	$46(a0),a1
		btst	#1,$38(a1)
		beq.s	loc_5A4E0
		move.l	#Obj_Wait,(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_5A4E4,$34(a0)
		move.w	#$160,$14(a0)

loc_5A4E0:
		jmp	Refresh_ChildPosition(pc)
; ---------------------------------------------------------------------------

loc_5A4E4:
		jsr	(Create_New_Sprite).l
		bne.s	loc_5A4F8
		move.l	#Obj_Song_Fade_Transition,(a1)
		move.b	#mus_Miniboss,$2C(a1)

loc_5A4F8:
		bset	#3,$38(a0)
		moveq	#signextendB(sfx_BossActivate),d0
		jsr	(Play_Sound_2).l
		lea	ChildObjDat_5A810(pc),a2
		jsr	CreateChild1_Normal(pc)
		jmp	Go_Delete_Sprite_2(pc)
; ---------------------------------------------------------------------------

Obj_C4_1:
		tst.b	(_unkFAAB).w
		bne.s	loc_5A572
		move.l	#loc_5A57A,(a0)
		move.w	#$3EA0,(Camera_max_X_pos).w
		move.w	#$3C00,(Camera_min_X_pos).w
		lea	(ArtKosM_LBZMiniboss).l,a1
		move.w	#-$6540,d2
		jsr	(Queue_Kos_Module).l
		lea	(ArtKosM_LBZMinibossBox).l,a1
		move.w	#-$7540,d2
		jsr	(Queue_Kos_Module).l
		lea	PLC_BossExplosion(pc),a1
		jsr	(Load_PLC_Raw).l
		jsr	(Create_New_Sprite).l
		bne.s	loc_5A568
		move.l	#Obj_Song_Fade_Transition,(a1)
		move.b	#mus_Miniboss,$2C(a1)

loc_5A568:
		lea	ChildObjDat_5A808(pc),a2
		jmp	(CreateChild3_NormalRepeated).l
; ---------------------------------------------------------------------------

loc_5A572:
		move.l	#Delete_Sprite_If_Not_In_Range,(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A57A:
		lea	(Player_1).w,a1
		jsr	(Find_OtherObject).l
		cmpi.w	#$70,d2
		bcc.s	loc_5A5A4
		move.l	#Obj_Wait,(a0)
		move.w	#$3DA0,(Camera_min_X_pos).w
		move.w	#$1F,$2E(a0)
		move.l	#loc_5A4F8,$34(a0)

loc_5A5A4:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_5A5B8
		rts
; ---------------------------------------------------------------------------

loc_5A5B8:
		jmp	loc_5371C(pc)
; ---------------------------------------------------------------------------

loc_5A5BC:
		moveq	#0,d0
		move.b	5(a0),d0
		move.w	off_5A5E0(pc,d0.w),d1
		jsr	off_5A5E0(pc,d1.w)
		movea.w	$46(a0),a1
		btst	#7,$2A(a1)
		bne.s	loc_5A5DC
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5A5DC:
		jmp	Go_Delete_Sprite(pc)
; ---------------------------------------------------------------------------
off_5A5E0:	dc.w loc_5A5EC-off_5A5E0
		dc.w loc_5A5FA-off_5A5E0
		dc.w loc_5A618-off_5A5E0
		dc.w loc_5A626-off_5A5E0
		dc.w loc_5A672-off_5A5E0
		dc.w loc_5A688-off_5A5E0
; ---------------------------------------------------------------------------

loc_5A5EC:
		lea	ObjDat3_5A7F4(pc),a1
		jsr	(SetUp_ObjAttributes).l
		bra.w	loc_5A6E4
; ---------------------------------------------------------------------------

loc_5A5FA:
		movea.w	$46(a0),a1
		btst	#3,$38(a1)
		bne.s	loc_5A60A
		jmp	Refresh_ChildPosition(pc)
; ---------------------------------------------------------------------------

loc_5A60A:
		move.b	#4,5(a0)
		move.w	#$55,(Events_fg_4).w
		rts
; ---------------------------------------------------------------------------

loc_5A618:
		subq.w	#1,$2E(a0)
		bpl.s	locret_5A624
		move.b	#6,5(a0)

locret_5A624:
		rts
; ---------------------------------------------------------------------------

loc_5A626:
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

loc_5A62C:
		move.b	#8,5(a0)
		moveq	#0,d0
		move.b	$2C(a0),d0
		subi.w	#$C,d0
		move.w	word_5A66A(pc,d0.w),$1A(a0)
		add.w	d0,d0
		move.l	off_5A65A(pc,d0.w),$30(a0)
		move.l	#loc_5A68E,$34(a0)
		move.w	#$5F,$2E(a0)
		rts
; ---------------------------------------------------------------------------
off_5A65A:	dc.l byte_5A822
		dc.l byte_5A822
		dc.l byte_5A827
		dc.l byte_5A827
word_5A66A:	dc.w  $FFC0,   $40, $FFC0,   $40
; ---------------------------------------------------------------------------

loc_5A672:
		jsr	(MoveSprite2).l
		subq.w	#1,$2E(a0)
		bmi.s	loc_5A680
		rts
; ---------------------------------------------------------------------------

loc_5A680:
		move.b	#$A,5(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A688:
		jmp	(Animate_Raw).l
; ---------------------------------------------------------------------------

loc_5A68E:
		move.l	#loc_5A69C,(a0)
		move.w	#$380,8(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A69C:
		move.w	$10(a0),d0
		andi.w	#-$80,d0
		sub.w	(Camera_X_pos_coarse_back).w,d0
		cmpi.w	#$280,d0
		bhi.s	loc_5A6B4
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5A6B4:
		cmpi.b	#$C,$2C(a0)
		bne.s	loc_5A6D0
		lea	PLC_MonitorsSpikesSprings(pc),a1
		jsr	(Load_PLC_Raw).l
		lea	PLC_5A6D6(pc),a1
		jsr	(Load_PLC_Raw).l

loc_5A6D0:
		jmp	(Delete_Current_Sprite).l
; ---------------------------------------------------------------------------
PLC_5A6D6:	dc.w 0
		dc.l ArtNem_Bubbles
		dc.w $8B80
		dc.l ArtNem_LBZMisc
		dc.w $7860
; ---------------------------------------------------------------------------

loc_5A6E4:
		moveq	#0,d0
		move.b	$2C(a0),d0
		move.w	word_5A728(pc,d0.w),$2E(a0)
		add.w	d0,d0
		move.l	off_5A73C(pc,d0.w),$30(a0)
		move.l	off_5A764(pc,d0.w),$34(a0)
		lea	byte_5A78C(pc),a1
		adda.w	d0,a1
		move.b	(a1)+,$22(a0)
		move.b	(a1)+,d1
		or.b	d1,4(a0)
		move.b	(a1)+,d1
		move.b	d1,$42(a0)
		ext.w	d1
		add.w	d1,$10(a0)
		move.b	(a1)+,d1
		move.b	d1,$43(a0)
		ext.w	d1
		add.w	d1,$14(a0)
		rts
; ---------------------------------------------------------------------------
word_5A728:	dc.w 0
		dc.w 0
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $10
		dc.w $40
		dc.w $50
		dc.w $70
		dc.w $60
off_5A73C:	dc.l byte_5A818
		dc.l byte_5A818
		dc.l byte_5A81D
		dc.l byte_5A81D
		dc.l byte_5A81D
		dc.l byte_5A81D
		dc.l byte_5A82C
		dc.l byte_5A82C
		dc.l byte_5A830
		dc.l byte_5A830
off_5A764:	dc.l Go_Delete_Sprite
		dc.l Go_Delete_Sprite
		dc.l Go_Delete_Sprite
		dc.l Go_Delete_Sprite
		dc.l Go_Delete_Sprite
		dc.l Go_Delete_Sprite
		dc.l loc_5A62C
		dc.l loc_5A62C
		dc.l loc_5A62C
		dc.l loc_5A62C
byte_5A78C:	dc.b    6,   0, $F0,   0
		dc.b    6,   2, $10,   0
		dc.b    9,   0,   0, $14
		dc.b    9,   1,   0,  $C
		dc.b    9,   0,   0, $F4
		dc.b    9,   1,   0, $EC
		dc.b    0,   0, $F4, $F0
		dc.b    0,   3,  $C, $10
		dc.b    3,   0, $14, $F4
		dc.b    3,   3, $EC,  $C

; =============== S U B R O U T I N E =======================================


sub_5A7B4:
		tst.b	$28(a0)
		bne.s	locret_5A7E6
		tst.b	$20(a0)
		bne.s	loc_5A7D4
		move.b	#$20,$20(a0)
		moveq	#signextendB(sfx_BossHit),d0
		jsr	(Play_Sound_2).l
		bset	#6,$2A(a0)

loc_5A7D4:
		subq.b	#1,$20(a0)
		bne.s	locret_5A7E6
		bclr	#6,$2A(a0)
		move.b	$25(a0),$28(a0)

locret_5A7E6:
		rts
; End of function sub_5A7B4

; ---------------------------------------------------------------------------
ObjDat3_5A7E8:	dc.l Map_RobotnikShip
		dc.w $52E
		dc.w $100
		dc.b $20
		dc.b $20
		dc.b $A
		dc.b $F
ObjDat3_5A7F4:	dc.l Map_LBZMinibossBox
		dc.w $4456
		dc.w $100
		dc.b $14
		dc.b $14
		dc.b 0
		dc.b 0
ChildObjDat_5A800:dc.w 0
		dc.l loc_5A4AA
		dc.w $34
ChildObjDat_5A808:dc.w 9
		dc.l loc_5A5BC
		dc.w 0
ChildObjDat_5A810:dc.w 0
		dc.l Obj_LBZMiniboss
		dc.w 0
byte_5A818:	dc.b 0
		dc.b 6
		dc.b 7
		dc.b 8
		dc.b $F4
byte_5A81D:	dc.b 0
		dc.b 9
		dc.b $A
		dc.b $B
		dc.b $F4
byte_5A822:	dc.b 5
		dc.b 0
		dc.b 1
		dc.b 2
		dc.b $F4
byte_5A827:	dc.b 5
		dc.b 3
		dc.b 4
		dc.b 5
		dc.b $F4
byte_5A82C:	dc.b 0
		dc.b 0
		dc.b 0
		dc.b $F4
byte_5A830:	dc.b 0
		dc.b 3
		dc.b 3
		dc.b $F4
; ---------------------------------------------------------------------------

Obj_C6_1:
		move.w	a0,(Events_bg+$00).w
		lea	ObjDat3_5AAEE(pc),a1
		jsr	(SetUp_ObjAttributes).l
		move.l	#loc_5A84E,(a0)
		bset	#0,4(a0)

loc_5A84E:
		moveq	#0,d0
		move.b	$29(a0),d0
		beq.w	loc_5A8E2
		clr.b	$29(a0)
		cmpi.b	#2,d0
		beq.w	loc_5A8E2
		lea	(Player_1).w,a1
		tst.b	$2E(a1)
		bne.w	loc_5A8E2
		move.l	#loc_5A912,(a0)
		move.b	#-$7D,$2E(a1)
		bclr	#0,4(a1)
		bclr	#0,$2A(a1)
		move.b	#5,$20(a1)
		bset	#7,$A(a1)
		move.w	#-$100,$1A(a0)
		move.w	#$3F,$2E(a0)
		move.l	#loc_5A8E6,$34(a0)
		moveq	#signextendB(sfx_Rising),d0
		jsr	(Play_Sound_2).l
		st	(Anim_Counters+$F).w
		move.w	#$6000,(Target_camera_max_X_pos).w
		lea	Child6_IncLevX(pc),a2
		jsr	CreateChild6_Simple(pc)
		lea	(Child1_MakeRoboShipFlame).l,a2
		jsr	CreateChild1_Normal(pc)
		st	(Ctrl_2_locked).w
		jsr	(Create_New_Sprite).l
		bne.s	loc_5A8DE
		move.l	#loc_5AAAE,(a1)

loc_5A8DE:
		jsr	sub_5AACA(pc)

loc_5A8E2:
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_5A8E6:
		move.l	#loc_5A90C,(a0)
		move.w	$14(a0),$3A(a0)
		move.w	#$100,$18(a0)
		move.w	#$1DF,$2E(a0)
		move.l	#loc_5A92A,$34(a0)
		jmp	(Swing_Setup1).l
; ---------------------------------------------------------------------------

loc_5A90C:
		jsr	(Swing_UpAndDown).l

loc_5A912:
		jsr	(MoveSprite2).l
		bsr.w	sub_5AA92
		jsr	(Obj_Wait).l
		jsr	sub_5AACA(pc)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_5A92A:
		move.w	#$3F,$2E(a0)
		clr.w	$18(a0)
		move.l	#loc_5A93E,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A93E:
		move.l	#loc_5A94C,(a0)
		move.w	#$100,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_5A94C:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		bsr.w	sub_5AA92
		movea.w	(_unkFAA4).w,a1
		move.w	$10(a1),d0
		sub.w	$10(a0),d0
		cmpi.w	#$50,d0
		bcc.s	loc_5A988
		bset	#1,$38(a1)
		move.l	#loc_5A90C,(a0)
		move.w	#$1F,$2E(a0)
		move.l	#loc_5A990,$34(a0)

loc_5A988:
		jsr	sub_5AACA(pc)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_5A990:
		move.l	#loc_5A9AC,(a0)
		move.w	#-$200,$18(a0)
		move.w	#-$200,$1A(a0)
		moveq	#signextendB(sfx_Thump),d0
		jsr	(Play_Sound_2).l
		rts
; ---------------------------------------------------------------------------

loc_5A9AC:
		jsr	(MoveSprite_LightGravity).l
		bsr.w	sub_5AA92
		tst.w	$1A(a0)
		bmi.s	loc_5A9E4
		move.w	$14(a0),d0
		cmp.w	$3A(a0),d0
		bcs.s	loc_5A9E4
		move.l	#loc_5A90C,(a0)
		clr.w	$18(a0)
		move.w	#$5F,$2E(a0)
		move.l	#loc_5A9EC,$34(a0)
		jsr	(Swing_Setup1).l

loc_5A9E4:
		jsr	sub_5AACA(pc)
		jmp	Sprite_CheckDeleteTouch(pc)
; ---------------------------------------------------------------------------

loc_5A9EC:
		move.l	#loc_5A90C,(a0)
		st	(Screen_shake_flag).w
		st	(Events_fg_5).w
		move.w	#$FF,$2E(a0)
		move.l	#loc_5AA0A,$34(a0)
		rts
; ---------------------------------------------------------------------------

loc_5AA0A:
		move.l	#loc_5AA18,(a0)
		move.w	#$100,$18(a0)
		rts
; ---------------------------------------------------------------------------

loc_5AA18:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		bsr.w	sub_5AA92
		cmpi.w	#$4440,$10(a0)
		bcs.s	loc_5AA78
		move.l	#loc_5AA82,(a0)
		clr.w	(Screen_shake_flag).w
		lea	(Player_1).w,a1
		clr.b	$2E(a1)
		bset	#1,$2A(a1)
		move.w	#-$100,$18(a1)
		move.w	#-$600,$1A(a1)
		move.b	#2,$20(a1)
		clr.b	$40(a1)
		jsr	(Create_New_Sprite).l
		bne.s	loc_5AA78
		move.l	#Obj_LBZ_FinalBoss1,(a1)
		move.w	#$44A0,$10(a1)
		move.w	#$780,$14(a1)

loc_5AA78:
		jsr	sub_5AACA(pc)
		jmp	(Draw_Sprite).l
; ---------------------------------------------------------------------------

loc_5AA82:
		jsr	(Swing_UpAndDown).l
		jsr	(MoveSprite2).l
		jmp	Sprite_CheckDeleteTouch2(pc)

; =============== S U B R O U T I N E =======================================


sub_5AA92:
		lea	(Player_1).w,a1
		move.w	$10(a0),d0
		subq.w	#4,d0
		move.w	d0,$10(a1)
		move.w	$14(a0),d0
		subi.w	#$12,d0
		move.w	d0,$14(a1)
		rts
; End of function sub_5AA92

; ---------------------------------------------------------------------------

loc_5AAAE:
		lea	(Player_2).w,a1
		tst.l	(a1)
		beq.s	loc_5AAC4
		tst.b	4(a1)
		bpl.s	loc_5AABE
		rts
; ---------------------------------------------------------------------------

loc_5AABE:
		clr.l	(a1)
		clr.l	(Tails_tails).w

loc_5AAC4:
		jmp	(Delete_Current_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_5AACA:
		lea	(Player_1).w,a1
		moveq	#0,d0
		move.b	$38(a1),d0
		move.b	RawAni_5AAE8(pc,d0.w),$22(a1)
		add.w	d0,d0
		movea.w	word_5AAEA(pc,d0.w),a2
		clr.b	(a2)
		jmp	(Player_Load_PLC).l
; End of function sub_5AACA

; ---------------------------------------------------------------------------
RawAni_5AAE8:	dc.b  $BA, $AD
word_5AAEA:	dc.w $F766
		dc.w $F7DE
ObjDat3_5AAEE:	dc.l Map_RobotnikShip
		dc.w $852E
		dc.w $80
		dc.b $20
		dc.b $20
		dc.b $A
		dc.b $CA
		dc.w 0
		dc.l Obj_C6_1
		dc.w 0
		dc.b 0
		dc.b 5
		dc.b 1
		dc.b 5
		dc.b 2
		dc.b 5
		dc.b 3
		dc.b 5
		dc.b $FC
		dc.b 0
;		1st PLC		palette                          2nd 8x8 data                                       2nd 16x16 data                                     2nd 128x128 data
;			2nd PLC           1st 8x8 data                                    1st 16x16 data                                      1st 128x128 data
LevelLoadBlock:	levartptrs $B,  $B,  $A,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Primary_Kos,   AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $C,  $C,  $B,  AIZ2_8x8_Primary_KosM, AIZ2_8x8_Secondary_KosM, AIZ2_16x16_Primary_Kos,   AIZ2_16x16_Secondary_Kos, AIZ2_128x128_Kos,        AIZ2_128x128_Kos
		levartptrs $E,  $F,  $C,  HCZ_8x8_Primary_KosM,  HCZ1_8x8_Secondary_KosM, HCZ_16x16_Primary_Kos,    HCZ1_16x16_Secondary_Kos, HCZ_128x128_Primary_Kos, HCZ1_128x128_Secondary_Kos
		levartptrs $10, $11, $D,  HCZ_8x8_Primary_KosM,  HCZ2_8x8_Secondary_KosM, HCZ_16x16_Primary_Kos,    HCZ2_16x16_Secondary_Kos, HCZ_128x128_Primary_Kos, HCZ2_128x128_Secondary_Kos
		levartptrs $12, $12, $E,  MGZ_8x8_Primary_KosM,  MGZ1_8x8_Secondary_KosM, MGZ_16x16_Primary_Kos,    MGZ1_16x16_Secondary_Kos, MGZ_128x128_Primary_Kos, MGZ1_128x128_Secondary_Kos
		levartptrs $14, $14, $F,  MGZ_8x8_Primary_KosM,  MGZ2_8x8_Secondary_KosM, MGZ_16x16_Primary_Kos,    MGZ2_16x16_Secondary_Kos, MGZ_128x128_Primary_Kos, MGZ2_128x128_Secondary_Kos
		levartptrs $16, $17, $10, CNZ_8x8_KosM,          CNZ_8x8_KosM,            CNZ_16x16_Kos,            CNZ_16x16_Kos,            CNZ_128x128_Kos,         CNZ_128x128_Kos
		levartptrs $18, $19, $11, CNZ_8x8_KosM,          CNZ_8x8_KosM,            CNZ_16x16_Kos,            CNZ_16x16_Kos,            CNZ_128x128_Kos,         CNZ_128x128_Kos
		levartptrs $1A, $1A, $12, ArtKosM_FBZ,           ArtKosM_FBZ,             FBZ_16x16_Kos,            FBZ_16x16_Kos,            FBZ_128x128_Kos,         FBZ_128x128_Kos
		levartptrs $1C, $1C, $13, ArtKosM_FBZ,           ArtKosM_FBZ,             FBZ_16x16_Kos,            FBZ_16x16_Kos,            FBZ_128x128_Kos,         FBZ_128x128_Kos
		levartptrs $1E, $1E, $14, ICZ_8x8_Primary_KosM,  ICZ1_8x8_Secondary_KosM, ICZ_16x16_Primary_Kos,    ICZ1_16x16_Secondary_Kos, ICZ_128x128_Primary_Kos, ICZ1_128x128_Secondary_Kos
		levartptrs $20, $20, $15, ICZ_8x8_Primary_KosM,  ICZ2_8x8_Secondary_KosM, ICZ_16x16_Primary_Kos,    ICZ2_16x16_Secondary_Kos, ICZ_128x128_Primary_Kos, ICZ2_128x128_Secondary_Kos
		levartptrs $22, $22, $16, LBZ_8x8_Primary_KosM,  LBZ1_8x8_Secondary_KosM, LBZ_16x16_Primary_Kos,    LBZ1_16x16_Secondary_Kos, LBZ1_128x128_Kos,        LBZ1_128x128_Kos
		levartptrs $24, $25, $17, LBZ_8x8_Primary_KosM,  LBZ2_8x8_Secondary_KosM, LBZ_16x16_Primary_Kos,    LBZ2_16x16_Secondary_Kos, LBZ2_128x128_Kos,        LBZ2_128x128_Kos
		levartptrs $26, $26, $18, ArtKosM_MHZ,           ArtKosM_MHZ,             MHZ_16x16_Kos,            MHZ_16x16_Kos,            MHZ_128x128_Kos,         MHZ_128x128_Kos
		levartptrs $28, $28, $19, ArtKosM_MHZ,           ArtKosM_MHZ,             MHZ_16x16_Kos,            MHZ_16x16_Kos,            MHZ_128x128_Kos,         MHZ_128x128_Kos
		levartptrs $B,  $B,  $A,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $C,  $C,  $B,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $2E, $2E, $1C, ArtKosM_LRZ,           ArtKosM_LRZ,             LRZ_16x16_Kos,            LRZ_16x16_Kos,            LRZ_128x128_Kos,         LRZ_128x128_Kos
		levartptrs $30, $30, $1D, ArtKosM_LRZ,           ArtKosM_LRZ,             LRZ_16x16_Kos,            LRZ_16x16_Kos,            LRZ_128x128_Kos,         LRZ_128x128_Kos
		levartptrs $B,  $B,  $A,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $C,  $C,  $B,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $B,  $B,  $A,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $C,  $C,  $B,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $B,  $B,  $A,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $C,  $C,  $B,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $B,  $B,  $2A, AIZ1_8x8_Primary_KosM, AIZ1_8x8_MainLevel_KosM, AIZ1_16x16_Primary_Kos,   AIZ1_16x16_MainLevel_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $C,  $C,  $B,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $42, $42, $26, ALZ_8x8_KosM,          ALZ_8x8_KosM,            ALZ_16x16_Kos,            ALZ_16x16_Kos,            ALZ_128x128_Kos,         ALZ_128x128_Kos
		levartptrs $42, $42, $27, ALZ_8x8_KosM,          ALZ_8x8_KosM,            ALZ_16x16_Kos,            ALZ_16x16_Kos,            ALZ_128x128_Kos,         ALZ_128x128_Kos
		levartptrs $43, $43, $28, BPZ_8x8_KosM,          BPZ_8x8_KosM,            BPZ_16x16_Kos,            BPZ_16x16_Kos,            BPZ_128x128_Kos,         BPZ_128x128_Kos
		levartptrs $43, $43, $29, BPZ_8x8_KosM,          BPZ_8x8_KosM,            BPZ_16x16_Kos,            BPZ_16x16_Kos,            BPZ_128x128_Kos,         BPZ_128x128_Kos
		levartptrs $44, $44, $34, DPZ_8x8_KosM,          DPZ_8x8_KosM,            DPZ_16x16_Kos,            DPZ_16x16_Kos,            DPZ_128x128_Kos,         DPZ_128x128_Kos
		levartptrs $44, $44, $34, DPZ_8x8_KosM,          DPZ_8x8_KosM,            DPZ_16x16_Kos,            DPZ_16x16_Kos,            DPZ_128x128_Kos,         DPZ_128x128_Kos
		levartptrs $45, $45, $35, CGZ_8x8_KosM,          CGZ_8x8_KosM,            CGZ_16x16_Kos,            CGZ_16x16_Kos,            CGZ_128x128_Kos,         CGZ_128x128_Kos
		levartptrs $45, $45, $35, CGZ_8x8_KosM,          CGZ_8x8_KosM,            CGZ_16x16_Kos,            CGZ_16x16_Kos,            CGZ_128x128_Kos,         CGZ_128x128_Kos
		levartptrs $46, $46, $36, EMZ_8x8_KosM,          EMZ_8x8_KosM,            EMZ_16x16_Kos,            EMZ_16x16_Kos,            EMZ_128x128_Kos,         EMZ_128x128_Kos
		levartptrs $46, $46, $36, EMZ_8x8_KosM,          EMZ_8x8_KosM,            EMZ_16x16_Kos,            EMZ_16x16_Kos,            EMZ_128x128_Kos,         EMZ_128x128_Kos
		levartptrs $47, $47, $33, Gumball_8x8_KosM,      Gumball_8x8_KosM,        Gumball_16x16_Kos,        Gumball_16x16_Kos,        Gumball_128x128_Kos,     Gumball_128x128_Kos
		levartptrs $47, $47, $33, Gumball_8x8_KosM,      Gumball_8x8_KosM,        Gumball_16x16_Kos,        Gumball_16x16_Kos,        Gumball_128x128_Kos,     Gumball_128x128_Kos
		levartptrs $47, $47, $37, ArtKosM_Pachinko,      ArtKosM_Pachinko,        Pachinko_16x16_Kos,       Pachinko_16x16_Kos,       Pachinko_128x128_Kos,    Pachinko_128x128_Kos
		levartptrs $47, $47, $37, ArtKosM_Pachinko,      ArtKosM_Pachinko,        Pachinko_16x16_Kos,       Pachinko_16x16_Kos,       Pachinko_128x128_Kos,    Pachinko_128x128_Kos
		levartptrs $47, $47, $38, ArtKosM_Slots,         ArtKosM_Slots,           Slots_16x16_Kos,          Slots_16x16_Kos,          Slots_128x128_Kos,       Slots_128x128_Kos
		levartptrs $47, $47, $38, ArtKosM_Slots,         ArtKosM_Slots,           Slots_16x16_Kos,          Slots_16x16_Kos,          Slots_128x128_Kos,       Slots_128x128_Kos
		levartptrs $B,  $B,  $A,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $C,  $C,  $B,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $B,  $B,  $A,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
		levartptrs $C,  $C,  $B,  AIZ1_8x8_Primary_KosM, AIZ1_8x8_Secondary_KosM, AIZ1_16x16_Secondary_Kos, AIZ1_16x16_Secondary_Kos, AIZ1_128x128_Kos,        AIZ1_128x128_Kos
Offs_PLC:	dc.w PLC_00-Offs_PLC
		dc.w PLC_01-Offs_PLC
		dc.w PLC_02-Offs_PLC
		dc.w PLC_03-Offs_PLC
		dc.w PLC_04-Offs_PLC
		dc.w PLC_05-Offs_PLC
		dc.w PLC_06-Offs_PLC
		dc.w PLC_07-Offs_PLC
		dc.w PLC_08-Offs_PLC
		dc.w PLC_09-Offs_PLC
		dc.w PLC_0A-Offs_PLC
		dc.w PLC_0B-Offs_PLC
		dc.w PLC_0C_0D-Offs_PLC
		dc.w PLC_0C_0D-Offs_PLC
		dc.w PLC_0E-Offs_PLC
		dc.w PLC_0F-Offs_PLC
		dc.w PLC_10-Offs_PLC
		dc.w PLC_11-Offs_PLC
		dc.w PLC_12_13-Offs_PLC
		dc.w PLC_12_13-Offs_PLC
		dc.w PLC_14_15-Offs_PLC
		dc.w PLC_14_15-Offs_PLC
		dc.w PLC_16_17_18_19-Offs_PLC
		dc.w PLC_16_17_18_19-Offs_PLC
		dc.w PLC_16_17_18_19-Offs_PLC
		dc.w PLC_16_17_18_19-Offs_PLC
		dc.w PLC_1A_1B_1C_1D-Offs_PLC
		dc.w PLC_1A_1B_1C_1D-Offs_PLC
		dc.w PLC_1A_1B_1C_1D-Offs_PLC
		dc.w PLC_1A_1B_1C_1D-Offs_PLC
		dc.w PLC_1E_1F-Offs_PLC
		dc.w PLC_1E_1F-Offs_PLC
		dc.w PLC_20_21-Offs_PLC
		dc.w PLC_20_21-Offs_PLC
		dc.w PLC_22_23-Offs_PLC
		dc.w PLC_22_23-Offs_PLC
		dc.w PLC_24-Offs_PLC
		dc.w PLC_25-Offs_PLC
		dc.w PLC_26_Through_2D-Offs_PLC
		dc.w PLC_26_Through_2D-Offs_PLC
		dc.w PLC_26_Through_2D-Offs_PLC
		dc.w PLC_26_Through_2D-Offs_PLC
		dc.w PLC_26_Through_2D-Offs_PLC
		dc.w PLC_26_Through_2D-Offs_PLC
		dc.w PLC_26_Through_2D-Offs_PLC
		dc.w PLC_26_Through_2D-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_2E_Through_41-Offs_PLC
		dc.w PLC_42-Offs_PLC
		dc.w PLC_43-Offs_PLC
		dc.w PLC_44-Offs_PLC
		dc.w PLC_45-Offs_PLC
		dc.w PLC_46-Offs_PLC
		dc.w PLC_47-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_48_Through_5A-Offs_PLC
		dc.w PLC_5B-Offs_PLC
		dc.w PLC_5C_5D-Offs_PLC
		dc.w PLC_5C_5D-Offs_PLC
		dc.w PLC_5E-Offs_PLC
		dc.w PLC_5F-Offs_PLC
		dc.w PLC_60-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_61_Through_6A-Offs_PLC
		dc.w PLC_6B-Offs_PLC
		dc.w PLC_6C-Offs_PLC
		dc.w PLC_6D-Offs_PLC
		dc.w PLC_6E-Offs_PLC
		dc.w PLC_6F-Offs_PLC
		dc.w PLC_70-Offs_PLC
		dc.w PLC_71-Offs_PLC
		dc.w PLC_72_73_74_75_76_77-Offs_PLC
		dc.w PLC_72_73_74_75_76_77-Offs_PLC
		dc.w PLC_72_73_74_75_76_77-Offs_PLC
		dc.w PLC_72_73_74_75_76_77-Offs_PLC
		dc.w PLC_72_73_74_75_76_77-Offs_PLC
		dc.w PLC_72_73_74_75_76_77-Offs_PLC
		dc.w PLC_78_79_7A_7B-Offs_PLC
		dc.w PLC_78_79_7A_7B-Offs_PLC
		dc.w PLC_78_79_7A_7B-Offs_PLC
		dc.w PLC_78_79_7A_7B-Offs_PLC

PLC_00: plrlistheader
		plreq $7D4, ArtNem_SonicLifeIcon
		plreq ArtTile_Ring, ArtNem_RingHUDText
		plreq $5E4, ArtNem_EnemyPtsStarPost
		plreq ArtTile_Monitors, ArtNem_Monitors
PLC_00_End

PLC_01: plrlistheader
		plreq $7D4, ArtNem_SonicLifeIcon
		plreq ArtTile_Monitors, ArtNem_Monitors
		plreq ArtTile_Ring, ArtNem_RingHUDText
		plreq $5E4, ArtNem_EnemyPtsStarPost
PLC_01_End

PLC_02: plrlistheader
		plreq $5A0, ArtNem_Explosion
		plreq $580, ArtNem_Squirrel
		plreq $592, ArtNem_BlueFlicky
PLC_02_End

PLC_03: plrlistheader
		plreq ArtTile_Shield, ArtNem_GameOver
PLC_03_End

PLC_04: plrlistheader
		plreq $500, ArtNem_S2Signpost
PLC_04_End

PLC_05: plrlistheader
		plreq $494, ArtNem_SpikesSprings
PLC_05_End

PLC_06: plrlistheader
		plreq $391, ArtNem_2PArt_2
		plreq $3AD, ArtNem_2PArt_1
		plreq $3C6, ArtNem_2PArt_3
PLC_06_End

PLC_07: plrlistheader
		plreq $7D4, ArtNem_TailsLifeIcon
		plreq ArtTile_Monitors, ArtNem_Monitors
		plreq ArtTile_Ring, ArtNem_RingHUDText
		plreq $5E4, ArtNem_EnemyPtsStarPost
PLC_07_End

PLC_08: plrlistheader
		plreq ArtTile_Monitors, ArtNem_Monitors
PLC_08_End

PLC_09: plrlistheader
		plreq $4E0, ArtNem_SphereTest
PLC_09_End

PLC_0A: plrlistheader
		plreq $3D1, ArtNem_AIZIntroSprites
PLC_0A_End

PLC_0B: plrlistheader
		plreq $41B, ArtNem_AIZSwingVine
		plreq $324, ArtNem_AIZSlideRope
		plreq $333, ArtNem_AIZMisc1
		plreq $3CF, ArtNem_AIZFallingLog
		plreq $45C, ArtNem_Bubbles
		plreq $3F7, ArtNem_AIZCorkFloor
PLC_0B_End

PLC_0C_0D: plrlistheader
		plreq $2E9, ArtNem_AIZMisc2
		plreq $41B, ArtNem_AIZSwingVine
		plreq $438, ArtNem_AIZBackgroundTree
		plreq $45C, ArtNem_Bubbles
		plreq $456, ArtNem_GrayButton
		plreq $440, ArtNem_AIZCorkFloor2
PLC_0C_0D_End

PLC_0E: plrlistheader
		plreq $45C, ArtNem_Bubbles
		plreq $3CA, ArtNem_HCZMisc
		plreq $426, ArtNem_HCZButton
		plreq $37A, ArtNem_HCZWaterRush
		plreq $42E, ArtNem_HCZWaveSplash
		plreq $43E, ArtNem_HCZSpikeBall
PLC_0E_End

PLC_0F: plrlistheader
		plreq $44C, ArtNem_HCZDragonfly
PLC_0F_End

PLC_10: plrlistheader
		plreq $45C, ArtNem_Bubbles
		plreq $3CA, ArtNem_HCZMisc
		plreq $426, ArtNem_HCZButton
		plreq $42E, ArtNem_HCZWaveSplash
		plreq $43E, ArtNem_HCZSpikeBall
		plreq $35C, ArtNem_HCZ2Slide
PLC_10_End

PLC_11: plrlistheader
		plreq $350, ArtNem_HCZ2KnuxWall
		plreq  $28, ArtNem_HCZ2BlockPlat
		plreq $44C, ArtNem_HCZDragonfly
PLC_11_End

PLC_12_13: plrlistheader
		plreq $35F, ArtNem_MGZMisc1
		plreq $3FF, ArtNem_MGZMisc2
		plreq $451, ArtNem_MGZSigns
		plreq $478, ArtNem_DiagonalSpring
PLC_12_13_End

PLC_14_15: plrlistheader
		plreq $35F, ArtNem_MGZMisc1
		plreq $3FF, ArtNem_MGZMisc2
		plreq $451, ArtNem_MGZSigns
		plreq $478, ArtNem_DiagonalSpring
PLC_14_15_End

PLC_16_17_18_19: plrlistheader
		plreq $351, ArtNem_CNZMisc
		plreq $45C, ArtNem_Bubbles
		plreq $430, ArtNem_CNZPlatform
PLC_16_17_18_19_End

PLC_1A_1B_1C_1D: plrlistheader
		plreq $43A, ArtNem_DiagonalSpring
PLC_1A_1B_1C_1D_End

PLC_1E_1F: plrlistheader
		plreq $6B8, ArtNem_SnowboardDust
		plreq $43A, ArtNem_DiagonalSpring
		plreq $456, ArtNem_GrayButton
		plreq $3B6, ArtNem_ICZMisc1
		plreq $347, ArtNem_ICZIntroSprites
PLC_1E_1F_End

PLC_20_21: plrlistheader
		plreq $43A, ArtNem_DiagonalSpring
		plreq $456, ArtNem_GrayButton
		plreq $3B6, ArtNem_ICZMisc1
		plreq $377, ArtNem_ICZMisc2
		plreq $45C, ArtNem_Bubbles
PLC_20_21_End

PLC_22_23: plrlistheader
		plreq $3C3, ArtNem_LBZMisc
		plreq $455, ArtNem_LBZTubeTrans
PLC_22_23_End

PLC_24: plrlistheader
		plreq $3C3, ArtNem_LBZMisc
		plreq $45C, ArtNem_Bubbles
PLC_24_End

PLC_25: plrlistheader
		plreq $2EA, ArtNem_LBZ2Misc
PLC_25_End

PLC_26_Through_2D: plrlistheader
		plreq $43A, ArtNem_DiagonalSpring
		plreq $494, ArtNem_SpikesSprings
PLC_26_Through_2D_End

PLC_2E_Through_41: plrlistheader
		plreq $43A, ArtNem_DiagonalSpring
		plreq $494, ArtNem_SpikesSprings
PLC_2E_Through_41_End

PLC_42: plrlistheader
		plreq ArtTile_DashDust, ArtNem_2PDashdust
		plreq $6BC, ArtNem_2PStartPost
		plreq $700, ArtNem_2PLapNum
		plreq $600, ArtNem_2PTime
		plreq $75E, ArtNem_2PPosIcon
		plreq $391, ArtNem_2PArt_2
		plreq $3AD, ArtNem_2PArt_1
		plreq $3C6, ArtNem_2PArt_3
PLC_42_End

PLC_43: plrlistheader
		plreq $300, ArtNem_BPZMisc
		plreq ArtTile_DashDust, ArtNem_2PDashdust
		plreq $6BC, ArtNem_2PStartPost
		plreq $700, ArtNem_2PLapNum
		plreq $600, ArtNem_2PTime
		plreq $75E, ArtNem_2PPosIcon
		plreq $391, ArtNem_2PArt_2
		plreq $3AD, ArtNem_2PArt_1
		plreq $3C6, ArtNem_2PArt_3
PLC_43_End

PLC_44: plrlistheader
		plreq $280, ArtNem_DPZMisc
		plreq ArtTile_DashDust, ArtNem_2PDashdust
		plreq $6BC, ArtNem_2PStartPost
		plreq $700, ArtNem_2PLapNum
		plreq $600, ArtNem_2PTime
		plreq $75E, ArtNem_2PPosIcon
		plreq $391, ArtNem_2PArt_2
		plreq $3AD, ArtNem_2PArt_1
		plreq $3C6, ArtNem_2PArt_3
PLC_44_End

PLC_45: plrlistheader
		plreq $300, ArtNem_CGZMisc
		plreq ArtTile_DashDust, ArtNem_2PDashdust
		plreq $6BC, ArtNem_2PStartPost
		plreq $700, ArtNem_2PLapNum
		plreq $600, ArtNem_2PTime
		plreq $75E, ArtNem_2PPosIcon
		plreq $391, ArtNem_2PArt_2
		plreq $3AD, ArtNem_2PArt_1
		plreq $3C6, ArtNem_2PArt_3
PLC_45_End

PLC_46: plrlistheader
		plreq $300, ArtNem_EMZMisc
		plreq ArtTile_DashDust, ArtNem_2PDashdust
		plreq $6BC, ArtNem_2PStartPost
		plreq $700, ArtNem_2PLapNum
		plreq $600, ArtNem_2PTime
		plreq $75E, ArtNem_2PPosIcon
		plreq $391, ArtNem_2PArt_2
		plreq $3AD, ArtNem_2PArt_1
		plreq $3C6, ArtNem_2PArt_3
PLC_46_End

PLC_47: plrlistheader
		plreq $15B, ArtNem_BonusStage
		plreq $494, ArtNem_SpikesSprings
PLC_47_End

PLC_48_Through_5A: plrlistheader
		plreq $41A, ArtNem_AIZMiniboss
		plreq $474, ArtNem_AIZMinibossSmall
		plreq $482, ArtNem_AIZBossFire
		plreq $4D2, ArtNem_BossExplosion
PLC_48_Through_5A_End

PLC_5B: plrlistheader
		plreq $304, ArtNem_HCZMiniboss
		plreq $500, ArtNem_BossExplosion
PLC_5B_End

PLC_5C_5D: plrlistheader
		plreq $52E, ArtNem_CNZMiniboss
		plreq $500, ArtNem_BossExplosion
PLC_5C_5D_End

PLC_5E: plrlistheader
		plreq $52E, ArtNem_FBZMiniboss
		plreq $44E, ArtNem_EggCapsule
		plreq $500, ArtNem_BossExplosion
		plreq $42E, ArtNem_Squirrel
		plreq $440, ArtNem_BlueFlicky
PLC_5E_End

PLC_5F: plrlistheader
		plreq $4A9, ArtNem_ICZMiniboss
		plreq $500, ArtNem_BossExplosion
PLC_5F_End

PLC_60: plrlistheader
		plreq $52E, ArtNem_RobotnikShip
		plreq $4D6, ArtNem_LBZKnuxBomb
PLC_60_End

PLC_61_Through_6A: plrlistheader
		plreq $52E, ArtNem_FBZ2Subboss
		plreq $466, ArtNem_FBZRobotnikStand
		plreq $4A9, ArtNem_FBZRobotnikRun
		plreq $500, ArtNem_BossExplosion
PLC_61_Through_6A_End

PLC_6B: plrlistheader
		plreq $52E, ArtNem_RobotnikShip
		plreq $4D2, ArtNem_BossExplosion
PLC_6B_End

PLC_6C: plrlistheader
		plreq $320, ArtNem_HCZEndBoss
		plreq $52E, ArtNem_RobotnikShip
		plreq $500, ArtNem_BossExplosion
		plreq $494, ArtNem_EggCapsule
PLC_6C_End

PLC_6D: plrlistheader
		plreq $52E, ArtNem_RobotnikShip
		plreq $500, ArtNem_BossExplosion
		plreq $494, ArtNem_EggCapsule
PLC_6D_End

PLC_6E: plrlistheader
		plreq $430, ArtNem_CNZEndBoss
		plreq $52E, ArtNem_RobotnikShip
		plreq $500, ArtNem_BossExplosion
		plreq $494, ArtNem_EggCapsule
PLC_6E_End

PLC_6F: plrlistheader
		plreq $3E0, ArtNem_FBZEndBoss
		plreq $410, ArtNem_FBZRobotnikHead
		plreq $454, ArtNem_FBZEndBossFlame
		plreq $52E, ArtNem_RobotnikShip
		plreq $500, ArtNem_BossExplosion
		plreq $494, ArtNem_EggCapsule
PLC_6F_End

PLC_70: plrlistheader
		plreq $2A6, ArtNem_ICZEndBoss
		plreq $52E, ArtNem_RobotnikShip
		plreq $500, ArtNem_BossExplosion
		plreq $494, ArtNem_EggCapsule
PLC_70_End

PLC_71: plrlistheader
		plreq $3AA, ArtNem_LBZFinalBoss1
		plreq $500, ArtNem_BossExplosion
PLC_71_End

PLC_72_73_74_75_76_77: plrlistheader
		plreq $52E, ArtNem_RobotnikShip
		plreq $4A9, ArtNem_FBZRobotnikRun
		plreq $500, ArtNem_BossExplosion
PLC_72_73_74_75_76_77_End

PLC_78_79_7A_7B: plrlistheader
		plreq $52E, ArtNem_RobotnikShip
		plreq $500, ArtNem_BossExplosion
PLC_78_79_7A_7B_End

; =============== S U B R O U T I N E =======================================


DebugMode:
		moveq	#0,d0
		move.b	(Debug_placement_routine).w,d0
		move.w	off_5B52E(pc,d0.w),d1
		jmp	off_5B52E(pc,d1.w)
; End of function DebugMode

; ---------------------------------------------------------------------------
off_5B52E:	dc.w loc_5B532-off_5B52E
		dc.w loc_5B5BA-off_5B52E
; ---------------------------------------------------------------------------

loc_5B532:
		addq.b	#2,(Debug_placement_routine).w
		move.l	$C(a0),(Debug_P1_mappings).w
		move.w	$A(a0),(Debug_P2_mappings).w
		move.w	(Screen_Y_wrap_value).w,d0
		and.w	d0,(Player_1+y_pos).w
		and.w	d0,(Camera_Y_pos).w
		clr.b	(Scroll_lock).w
		clr.w	(WindTunnel_flag).w
		bclr	#6,$2A(a0)
		beq.s	loc_5B578
		movea.l	a0,a1
		jsr	(Player_ResetAirTimer).l
		move.w	#$600,(Max_speed).w
		move.w	#$C,(Acceleration).w
		move.w	#$80,(Deceleration).w

loc_5B578:
		move.b	#0,$22(a0)
		move.b	#0,$20(a0)
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#6,d0
		andi.w	#$7E,d0
		lea	(DebugOffs).l,a2
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d6
		cmp.b	(Debug_object).w,d6
		bhi.s	loc_5B5AA
		move.b	#0,(Debug_object).w

loc_5B5AA:
		bsr.w	sub_5B764
		move.b	#$C,(Debug_camera_delay).w
		move.b	#1,(Debug_camera_speed).w

loc_5B5BA:
		moveq	#0,d0
		move.w	(Current_zone_and_act).w,d0
		ror.b	#1,d0
		lsr.w	#6,d0
		andi.w	#$7E,d0
		lea	(DebugOffs).l,a2
		adda.w	(a2,d0.w),a2
		move.w	(a2)+,d6
		bsr.w	sub_5B5DE
		jmp	(Draw_Sprite).l

; =============== S U B R O U T I N E =======================================


sub_5B5DE:
		moveq	#0,d4
		move.w	#1,d1
		move.b	(Ctrl_1_pressed).w,d4
		andi.w	#$F,d4
		bne.s	loc_5B620
		move.b	(Ctrl_1_held).w,d0
		andi.w	#$F,d0
		bne.s	loc_5B608
		move.b	#$C,(Debug_camera_delay).w
		move.b	#$F,(Debug_camera_speed).w
		bra.w	loc_5B684
; ---------------------------------------------------------------------------

loc_5B608:
		subq.b	#1,(Debug_camera_delay).w
		bne.s	loc_5B624
		move.b	#1,(Debug_camera_delay).w
		addq.b	#1,(Debug_camera_speed).w
		bne.s	loc_5B620
		move.b	#-1,(Debug_camera_speed).w

loc_5B620:
		move.b	(Ctrl_1_held).w,d4

loc_5B624:
		moveq	#0,d1
		move.b	(Debug_camera_speed).w,d1
		addq.w	#1,d1
		swap	d1
		asr.l	#4,d1
		move.l	$14(a0),d2
		move.l	$10(a0),d3
		btst	#0,d4
		beq.s	loc_5B64E
		sub.l	d1,d2
		moveq	#0,d0
		move.w	(Camera_min_Y_pos).w,d0
		swap	d0
		cmp.l	d0,d2
		bge.s	loc_5B64E
		move.l	d0,d2

loc_5B64E:
		btst	#1,d4
		beq.s	loc_5B668
		add.l	d1,d2
		moveq	#0,d0
		move.w	(Camera_target_max_Y_pos).w,d0
		addi.w	#$DF,d0
		swap	d0
		cmp.l	d0,d2
		blt.s	loc_5B668
		move.l	d0,d2

loc_5B668:
		btst	#2,d4
		beq.s	loc_5B674
		sub.l	d1,d3
		bcc.s	loc_5B674
		moveq	#0,d3

loc_5B674:
		btst	#3,d4
		beq.s	loc_5B67C
		add.l	d1,d3

loc_5B67C:
		move.l	d2,$14(a0)
		move.l	d3,$10(a0)

loc_5B684:
		btst	#6,(Ctrl_1_held).w
		beq.s	loc_5B6BC
		btst	#5,(Ctrl_1_pressed).w
		beq.s	loc_5B6A0
		subq.b	#1,(Debug_object).w
		bcc.s	loc_5B6B8
		add.b	d6,(Debug_object).w
		bra.s	loc_5B6B8
; ---------------------------------------------------------------------------

loc_5B6A0:
		btst	#6,(Ctrl_1_pressed).w
		beq.s	loc_5B6BC
		addq.b	#1,(Debug_object).w
		cmp.b	(Debug_object).w,d6
		bhi.s	loc_5B6B8
		move.b	#0,(Debug_object).w

loc_5B6B8:
		bra.w	sub_5B764
; ---------------------------------------------------------------------------

loc_5B6BC:
		btst	#5,(Ctrl_1_pressed).w
		beq.s	loc_5B708
		jsr	(Create_New_Sprite).l
		bne.s	loc_5B708
		move.w	$10(a0),$10(a1)
		move.w	$14(a0),$14(a1)
		move.b	4(a0),4(a1)
		move.b	4(a0),$2A(a1)
		andi.b	#$7F,$2A(a1)
		moveq	#0,d0
		move.b	(Debug_object).w,d0
		add.w	d0,d0
		move.w	d0,d1
		lsl.w	#2,d0
		add.w	d1,d0
		move.b	4(a2,d0.w),$2C(a1)
		move.l	(a2,d0.w),(a1)
		move.b	#0,(a1)
		rts
; ---------------------------------------------------------------------------

loc_5B708:
		btst	#4,(Ctrl_1_pressed).w
		beq.s	locret_5B734
		moveq	#0,d0
		move.w	d0,(Debug_placement_mode).w
		lea	(Player_1).w,a1
		move.l	(Debug_P1_mappings).w,$C(a1)
		move.w	(Debug_P2_mappings).w,$A(a1)
		bsr.s	sub_5B736
		move.b	#$13,$1E(a1)
		move.b	#9,$1F(a1)

locret_5B734:
		rts
; End of function sub_5B5DE


; =============== S U B R O U T I N E =======================================


sub_5B736:
		move.b	d0,$20(a1)
		move.w	d0,$12(a1)
		move.w	d0,$16(a1)
		move.b	d0,$2E(a1)
		move.b	d0,$3D(a1)
		move.w	d0,$18(a1)
		move.w	d0,$1A(a1)
		move.w	d0,$1C(a1)
		move.b	#2,$2A(a1)
		move.b	#2,5(a1)
		rts
; End of function sub_5B736


; =============== S U B R O U T I N E =======================================


sub_5B764:
		moveq	#0,d0
		move.b	(Debug_object).w,d0
		add.w	d0,d0
		move.w	d0,d1
		lsl.w	#2,d0
		add.w	d1,d0
		move.l	4(a2,d0.w),$C(a0)
		move.w	8(a2,d0.w),$A(a0)
		move.b	(a2,d0.w),$22(a0)
		rts
; End of function sub_5B764

; ---------------------------------------------------------------------------
DebugOffs:	include "Levels/Misc/Debug list pointers.asm"

Debug_AIZ1: dbglistheader
		include "Levels/AIZ/Debug/Act 1 S3.asm"
Debug_AIZ1_End

Debug_AIZ2: dbglistheader
		include "Levels/AIZ/Debug/Act 2 S3.asm"
Debug_AIZ2_End

Debug_HCZ: dbglistheader
		include "Levels/HCZ/Debug/S3.asm"
Debug_HCZ_End

Debug_MGZ: dbglistheader
		include "Levels/MGZ/Debug/S3.asm"
Debug_MGZ_End

Debug_CNZ: dbglistheader
		include "Levels/CNZ/Debug/S3.asm"
Debug_CNZ_End

Debug_FBZ1:
Debug_FBZ2: dbglistheader
		include "Levels/FBZ/Debug/S3.asm"
Debug_FBZ2_End

Debug_ICZ1: dbglistheader
		include "Levels/ICZ/Debug/Act 1 S3.asm"
Debug_ICZ1_End

Debug_ICZ2: dbglistheader
		include "Levels/ICZ/Debug/Act 2 S3.asm"
Debug_ICZ2_End

Debug_LBZ1: dbglistheader
		include "Levels/LBZ/Debug/Act 1 S3.asm"
Debug_LBZ1_End

Debug_LBZ2: dbglistheader
		include "Levels/LBZ/Debug/Act 2 S3.asm"
Debug_LBZ2_End

Debug_MHZ: dbglistheader
		include "Levels/MHZ/Debug/S3.asm"
Debug_MHZ_End

Debug_SOZ1:
Debug_SOZ2: dbglistheader
		include "Levels/SOZ/Debug/S3.asm"
Debug_SOZ2_End

Debug_LRZ1:
Debug_LRZ2: dc.w 5
		include "Levels/LRZ/Debug/S3.asm"
Debug_LRZ_End

Debug_SSZ: dbglistheader
		include "Levels/SSZ/Debug/S3.asm"
Debug_SSZ_End

Debug_DEZ1:
Debug_DEZ2: dbglistheader
		include "Levels/DEZ/Debug/S3.asm"
Debug_DEZ2_End

Debug_DDZ1:
Debug_DDZ2: dbglistheader
		include "Levels/DDZ/Debug/S3.asm"
Debug_DDZ2_End

Debug_Ending: dbglistheader
		include "Levels/SSZ/Debug/Ending S3.asm"
Debug_Ending_End

Debug_ALZ: dbglistheader
		include "Levels/ALZ/Debug/Main.asm"
Debug_ALZ_End

Debug_BPZ: dbglistheader
		include "Levels/BPZ/Debug/Main.asm"
Debug_BPZ_End

Debug_DPZ: dbglistheader
		include "Levels/DPZ/Debug/Main.asm"
Debug_DPZ_End

Debug_CGZ: dbglistheader
		include "Levels/CGZ/Debug/Main.asm"
Debug_CGZ_End

Debug_EMZ: dbglistheader
		include "Levels/EMZ/Debug/Main.asm"
Debug_EMZ_End

Debug_Pachinko_Special:
Debug_HPZ:
Debug_Gumball_Special: dbglistheader
		include "Levels/Gumball/Debug/S3.asm"
Debug_Gumball_Special_End

Sprite_Listing:	include "Levels/Misc/Object pointers - S3 Set.asm"
		align $2000
Character_Speeds:
		dc.w  $600,  $10,  $20,    0
		dc.w  $4C0,  $1C,  $70,    0
		dc.w  $580,  $10, $200,    0
Start_Locations:binclude "Levels/AIZ/Start Location/Sonic/1.bin"
		binclude "Levels/AIZ/Start Location/Sonic/2.bin"
		binclude "Levels/HCZ/Start Location/Sonic/1.bin"
		binclude "Levels/HCZ/Start Location/Sonic/2.bin"
		binclude "Levels/MGZ/Start Location/Sonic/1.bin"
		binclude "Levels/MGZ/Start Location/Sonic/2.bin"
		binclude "Levels/CNZ/Start Location/Sonic/1.bin"
		binclude "Levels/CNZ/Start Location/Sonic/2.bin"
		dc.w    $60,  $6EC
		dc.w    $60,  $5EC
		binclude "Levels/ICZ/Start Location/Sonic/1.bin"
		binclude "Levels/ICZ/Start Location/Sonic/2.bin"
		binclude "Levels/LBZ/Start Location/Sonic/1.bin"
		binclude "Levels/LBZ/Start Location/Sonic/2.bin"
		dc.w    $80,  $6AA
		dc.w    $80,  $3AA
		dc.w   $230,  $1AC
		dc.w   $230,  $1AC
		dc.w   $100,   $20
		dc.w   $100,   $20
		dc.w    $60,  $6AC
		dc.w    $60,  $56C
		dc.w    $60,  $6AC
		dc.w    $60,  $5AC
		dc.w    $60,  $2AC
		dc.w    $60,  $58C
		dc.w    $60,  $1EC
		dc.w    $60,  $12C
		binclude "Levels/ALZ/Start Location/Sonic/1.bin"
		binclude "Levels/ALZ/Start Location/Sonic/2.bin"
		binclude "Levels/BPZ/Start Location/Sonic/1.bin"
		binclude "Levels/BPZ/Start Location/Sonic/2.bin"
		binclude "Levels/DPZ/Start Location/Sonic/1.bin"
		binclude "Levels/DPZ/Start Location/Sonic/2.bin"
		binclude "Levels/CGZ/Start Location/Sonic/1.bin"
		binclude "Levels/CGZ/Start Location/Sonic/2.bin"
		binclude "Levels/EMZ/Start Location/Sonic/1.bin"
		binclude "Levels/EMZ/Start Location/Sonic/2.bin"
		binclude "Levels/Gumball/Start Location/Sonic/1.bin"
		binclude "Levels/Gumball/Start Location/Sonic/2.bin"
		dc.w    $60,   $70
		dc.w    $60,   $70
		dc.w    $60,   $70
		dc.w    $60,   $70
		dc.w    $60,   $70
		dc.w    $60,   $70
		dc.w    $60,   $70
		dc.w    $60,   $70
SpriteLocPtrs:	dc.l AIZ1_Sprites
		dc.l AIZ2_Sprites
		dc.l HCZ1_Sprites
		dc.l HCZ2_Sprites
		dc.l MGZ1_Sprites
		dc.l MGZ2_Sprites
		dc.l CNZ1_Sprites
		dc.l CNZ2_Sprites
		dc.l FBZ1_Sprites
		dc.l FBZ2_Sprites
		dc.l ICZ1_Sprites
		dc.l ICZ2_Sprites
		dc.l LBZ1_Sprites
		dc.l LBZ2_Sprites
		dc.l MHZ1_Sprites
		dc.l MHZ2_Sprites
		dc.l SOZ1_Sprites
		dc.l SOZ2_Sprites
		dc.l LRZ1_Sprites
		dc.l LRZ2_Sprites
		dc.l SSZ1_Sprites
		dc.l SSZ2_Sprites
		dc.l DEZ1_Sprites
		dc.l DEZ2_Sprites
		dc.l DDZ1_Sprites
		dc.l DDZ2_Sprites
		dc.l Ending1_Sprites
		dc.l Ending2_Sprites
		dc.l ALZ1_Sprites
		dc.l ALZ2_Sprites
		dc.l BPZ1_Sprites
		dc.l BPZ2_Sprites
		dc.l DPZ1_Sprites
		dc.l DPZ2_Sprites
		dc.l CGZ1_Sprites
		dc.l CGZ2_Sprites
		dc.l EMZ1_Sprites
		dc.l EMZ2_Sprites
		dc.l Gumball1_Sprites
		dc.l Gumball2_Sprites
		dc.l Pachinko1_Sprites
		dc.l Pachinko2_Sprites
		dc.l Slots1_Sprites
		dc.l Slots2_Sprites
		dc.l LRZ3_Sprites
		dc.l HPZ_Sprites
		dc.l DEZ3_Sprites
		dc.l HPZMini_Sprites
RingLocPtrs:	dc.l AIZ1_Rings
		dc.l AIZ2_Rings
		dc.l HCZ1_Rings
		dc.l HCZ2_Rings
		dc.l MGZ1_Rings
		dc.l MGZ2_Rings
		dc.l CNZ1_Rings
		dc.l CNZ2_Rings
		dc.l FBZ1_Rings
		dc.l FBZ2_Rings
		dc.l ICZ1_Rings
		dc.l ICZ2_Rings
		dc.l LBZ1_Rings
		dc.l LBZ2_Rings
		dc.l MHZ1_Rings
		dc.l MHZ2_Rings
		dc.l SOZ1_Rings
		dc.l SOZ2_Rings
		dc.l LRZ1_Rings
		dc.l LRZ2_Rings
		dc.l SSZ1_Rings
		dc.l SSZ2_Rings
		dc.l DEZ1_Rings
		dc.l DEZ2_Rings
		dc.l DDZ1_Rings
		dc.l DDZ2_Rings
		dc.l Ending1_Rings
		dc.l Ending2_Rings
		dc.l ALZ1_Rings
		dc.l ALZ2_Rings
		dc.l BPZ1_Rings
		dc.l BPZ2_Rings
		dc.l DPZ1_Rings
		dc.l DPZ2_Rings
		dc.l CGZ1_Rings
		dc.l CGZ2_Rings
		dc.l EMZ1_Rings
		dc.l EMZ2_Rings
		dc.l Gumball1_Rings
		dc.l Gumball2_Rings
		dc.l Pachinko1_Rings
		dc.l Pachinko2_Rings
		dc.l Slots1_Rings
		dc.l Slots2_Rings
		dc.l LRZ3_Rings
		dc.l HPZ_Rings
		dc.l DEZ3_Rings
		dc.l HPZMini_Rings
AutoTunnel_Data:dc.l AutoTunnel_00
		dc.l AutoTunnel_01_02
		dc.l AutoTunnel_01_02
		dc.l AutoTunnel_03
		dc.l AutoTunnel_04
		dc.l AutoTunnel_05
		dc.l AutoTunnel_06
		dc.l AutoTunnel_07
		dc.l AutoTunnel_08
		dc.l AutoTunnel_09
		dc.l AutoTunnel_0A
		dc.l AutoTunnel_0B
		dc.l AutoTunnel_0C
		dc.l AutoTunnel_0D
		dc.l AutoTunnel_0E
		dc.l AutoTunnel_0F
		dc.l AutoTunnel_10
		dc.l AutoTunnel_11
		dc.l AutoTunnel_12
		dc.l AutoTunnel_13
		dc.l AutoTunnel_14
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
		dc.l SpriteTerminat9
SStageLayoutPtrs:
		dc.l SStage1_Layout
		dc.l SStage2_Layout
		dc.l SStage3_Layout
		dc.l SStage4_Layout
		dc.l SStage5_Layout
		dc.l SStage6_Layout
		dc.l SStage7_Layout
		dc.l SStage8_Layout
SpriteTerminat1:dc.w  $FFFF,     0,     0
AIZ1_Sprites:	binclude "Levels/AIZ/Object Pos/1-S3.bin"
		even
AIZ2_Sprites:	binclude "Levels/AIZ/Object Pos/2-S3.bin"
		even
AIZ1_Rings:	binclude "Levels/AIZ/Ring Pos/1-S3.bin"
		even
AIZ2_Rings:	binclude "Levels/AIZ/Ring Pos/2-S3.bin"
		even
SpriteTerminat2:dc.w  $FFFF,     0,     0
HCZ1_Sprites:	binclude "Levels/HCZ/Object Pos/1-S3.bin"
		even
HCZ2_Sprites:	binclude "Levels/HCZ/Object Pos/2-S3.bin"
		even
HCZ1_Rings:	binclude "Levels/HCZ/Ring Pos/1-S3.bin"
		even
HCZ2_Rings:	binclude "Levels/HCZ/Ring Pos/2-S3.bin"
		even
SpriteTerminat3:dc.w  $FFFF,     0,     0
MGZ1_Sprites:	binclude "Levels/MGZ/Object Pos/1-S3.bin"
		even
MGZ1_Rings:	binclude "Levels/MGZ/Ring Pos/1-S3.bin"
		even
SpriteTerminat4:dc.w  $FFFF,     0,     0
MGZ2_Sprites:	binclude "Levels/MGZ/Object Pos/2-S3.bin"
		even
MGZ2_Rings:	binclude "Levels/MGZ/Ring Pos/2-S3.bin"
		even
SpriteTerminat5:dc.w  $FFFF,     0,     0
CNZ1_Sprites:	binclude "Levels/CNZ/Object Pos/1-S3.bin"
		even
CNZ2_Sprites:	binclude "Levels/CNZ/Object Pos/2-S3.bin"
		even
CNZ1_Rings:	binclude "Levels/CNZ/Ring Pos/1-S3.bin"
		even
CNZ2_Rings:	binclude "Levels/CNZ/Ring Pos/2-S3.bin"
		even
SpriteTerminat6:dc.w  $FFFF,     0,     0
FBZ1_Sprites:	binclude "Levels/FBZ/Object Pos/1-S3.bin"
		even
FBZ2_Sprites:	binclude "Levels/FBZ/Object Pos/2-S3.bin"
		even
FBZ1_Rings:	binclude "Levels/FBZ/Ring Pos/1-S3.bin"
		even
FBZ2_Rings:	binclude "Levels/FBZ/Ring Pos/2-S3.bin"
		even
SpriteTerminat7:dc.w  $FFFF,     0,     0
ICZ1_Sprites:	binclude "Levels/ICZ/Object Pos/1-S3.bin"
		even
ICZ2_Sprites:	binclude "Levels/ICZ/Object Pos/2-S3.bin"
		even
ICZ1_Rings:	binclude "Levels/ICZ/Ring Pos/1-S3.bin"
		even
ICZ2_Rings:	binclude "Levels/ICZ/Ring Pos/2-S3.bin"
		even
SpriteTerminat8:dc.w  $FFFF,     0,     0
LBZ1_Sprites:	binclude "Levels/LBZ/Object Pos/1-S3.bin"
		even
LBZ2_Sprites:	binclude "Levels/LBZ/Object Pos/2-S3.bin"
		even
LBZ1_Rings:	binclude "Levels/LBZ/Ring Pos/1-S3.bin"
		even
LBZ2_Rings:	binclude "Levels/LBZ/Ring Pos/2-S3.bin"
		even
AutoTunnel_00:	dc.w $C
		dc.w   $F60,  $578
		dc.w   $F60,  $548
		dc.w   $F60,  $378
AutoTunnel_01_02:dc.w $38
		dc.w   $D40,  $770
		dc.w   $D48,  $770
		dc.w   $D50,  $770
		dc.w   $D58,  $770
		dc.w   $D60,  $770
		dc.w   $DB0,  $770
		dc.w   $DD0,  $77C
		dc.w   $DE0,  $79C
		dc.w   $DD6,  $7BC
		dc.w   $DB6,  $7CE
		dc.w   $D96,  $7CE
		dc.w   $D86,  $7C8
		dc.w   $D70,  $7A8
		dc.w   $D70,  $688
AutoTunnel_03:	dc.w $28
		dc.w   $D30,  $770
		dc.w   $DB0,  $770
		dc.w   $DD0,  $77C
		dc.w   $DE0,  $79C
		dc.w   $DD6,  $7BC
		dc.w   $DB6,  $7CE
		dc.w   $D96,  $7CE
		dc.w   $D86,  $7C8
		dc.w   $D70,  $7A8
		dc.w   $D70,  $748
AutoTunnel_04:	dc.w $38
		dc.w  $2CC0,  $9F0
		dc.w  $2CC8,  $9F0
		dc.w  $2CD0,  $9F0
		dc.w  $2CD8,  $9F0
		dc.w  $2CE0,  $9F0
		dc.w  $2D30,  $9F0
		dc.w  $2D50,  $9FC
		dc.w  $2D60,  $A1C
		dc.w  $2D56,  $A3C
		dc.w  $2D36,  $A4E
		dc.w  $2D16,  $A4E
		dc.w  $2D06,  $A48
		dc.w  $2CF0,  $A28
		dc.w  $2CF0,  $908
AutoTunnel_05:	dc.w $28
		dc.w  $2CB0,  $9F0
		dc.w  $2D30,  $9F0
		dc.w  $2D50,  $9FC
		dc.w  $2D60,  $A1C
		dc.w  $2D56,  $A3C
		dc.w  $2D36,  $A4E
		dc.w  $2D16,  $A4E
		dc.w  $2D06,  $A48
		dc.w  $2CF0,  $A28
		dc.w  $2CF0,  $9C8
AutoTunnel_06:	dc.w $38
		dc.w  $3640,  $A70
		dc.w  $3648,  $A70
		dc.w  $3650,  $A70
		dc.w  $3658,  $A70
		dc.w  $3660,  $A70
		dc.w  $36B0,  $A70
		dc.w  $36D0,  $A7C
		dc.w  $36E0,  $A9C
		dc.w  $36D6,  $ABC
		dc.w  $36B6,  $ACE
		dc.w  $3696,  $ACE
		dc.w  $3686,  $AC8
		dc.w  $3670,  $AA8
		dc.w  $3670,  $988
AutoTunnel_07:	dc.w $28
		dc.w  $3630,  $A70
		dc.w  $36B0,  $A70
		dc.w  $36D0,  $A7C
		dc.w  $36E0,  $A9C
		dc.w  $36D6,  $ABC
		dc.w  $36B6,  $ACE
		dc.w  $3696,  $ACE
		dc.w  $3686,  $AC8
		dc.w  $3670,  $AA8
		dc.w  $3670,  $A48
AutoTunnel_08:	dc.w $38
		dc.w  $37C0,  $7F0
		dc.w  $37C8,  $7F0
		dc.w  $37D0,  $7F0
		dc.w  $37D8,  $7F0
		dc.w  $37E0,  $7F0
		dc.w  $3830,  $7F0
		dc.w  $3850,  $7FC
		dc.w  $3860,  $81C
		dc.w  $3856,  $83C
		dc.w  $3836,  $84E
		dc.w  $3816,  $84E
		dc.w  $3806,  $848
		dc.w  $37F0,  $828
		dc.w  $37F0,  $708
AutoTunnel_09:	dc.w $28
		dc.w  $37B0,  $7F0
		dc.w  $3830,  $7F0
		dc.w  $3850,  $7FC
		dc.w  $3860,  $81C
		dc.w  $3856,  $83C
		dc.w  $3836,  $84E
		dc.w  $3816,  $84E
		dc.w  $3806,  $848
		dc.w  $37F0,  $828
		dc.w  $37F0,  $7C8
AutoTunnel_0A:	dc.w $38
		dc.w  $29C0,  $470
		dc.w  $29C8,  $470
		dc.w  $29D0,  $470
		dc.w  $29D8,  $470
		dc.w  $29E0,  $470
		dc.w  $2A30,  $470
		dc.w  $2A50,  $47C
		dc.w  $2A60,  $49C
		dc.w  $2A56,  $4BC
		dc.w  $2A36,  $4CE
		dc.w  $2A16,  $4CE
		dc.w  $2A06,  $4C8
		dc.w  $29F0,  $4A8
		dc.w  $29F0,  $388
AutoTunnel_0B:	dc.w $28
		dc.w  $29B0,  $470
		dc.w  $2A30,  $470
		dc.w  $2A50,  $47C
		dc.w  $2A60,  $49C
		dc.w  $2A56,  $4BC
		dc.w  $2A36,  $4CE
		dc.w  $2A16,  $4CE
		dc.w  $2A06,  $4C8
		dc.w  $29F0,  $4A8
		dc.w  $29F0,  $448
AutoTunnel_0C:	dc.w $104
		dc.w  $26C0,  $530
		dc.w  $26C0,  $6E0
		dc.w  $26B2,  $700
		dc.w  $2692,  $710
		dc.w  $25F2,  $710
		dc.w  $25D2,  $704
		dc.w  $25C0,  $6E4
		dc.w  $25C0,  $4B4
		dc.w  $25B0,  $484
		dc.w  $2590,  $464
		dc.w  $2560,  $450
		dc.w  $24D0,  $450
		dc.w  $2490,  $43B
		dc.w  $2450,  $41F
		dc.w  $2400,  $410
		dc.w  $2300,  $410
		dc.w  $22D0,  $415
		dc.w  $22A0,  $42B
		dc.w  $2280,  $448
		dc.w  $2240,  $468
		dc.w  $2200,  $470
		dc.w  $21C0,  $468
		dc.w  $2180,  $448
		dc.w  $2160,  $42B
		dc.w  $2130,  $415
		dc.w  $2100,  $410
		dc.w  $20D0,  $415
		dc.w  $20A0,  $42B
		dc.w  $2080,  $448
		dc.w  $2040,  $468
		dc.w  $2000,  $470
		dc.w  $1FC0,  $468
		dc.w  $1F80,  $448
		dc.w  $1F60,  $42B
		dc.w  $1F30,  $415
		dc.w  $1F00,  $410
		dc.w  $1ED0,  $415
		dc.w  $1EA0,  $42B
		dc.w  $1E80,  $448
		dc.w  $1E40,  $468
		dc.w  $1E00,  $470
		dc.w  $1C70,  $470
		dc.w  $1C40,  $440
		dc.w  $1C40,  $320
		dc.w  $1C50,  $300
		dc.w  $1C70,  $2F0
		dc.w  $1F80,  $2F0
		dc.w  $1FD0,  $2E4
		dc.w  $2000,  $2C8
		dc.w  $2020,  $2AB
		dc.w  $2040,  $29A
		dc.w  $2080,  $290
		dc.w  $20C0,  $2A7
		dc.w  $2170,  $357
		dc.w  $21B0,  $370
		dc.w  $2400,  $370
		dc.w  $2440,  $380
		dc.w  $2480,  $390
		dc.w  $24B0,  $384
		dc.w  $24C0,  $364
		dc.w  $24C0,   $C4
		dc.w  $2490,   $90
		dc.w  $2450,   $9C
		dc.w  $2440,   $CC
		dc.w  $2440,   $FC
AutoTunnel_0D:	dc.w $64
		dc.w  $33C0,  $130
		dc.w  $33C0,  $1E0
		dc.w  $33D0,  $200
		dc.w  $3400,  $210
		dc.w  $3450,  $220
		dc.w  $34A0,  $270
		dc.w  $34C0,  $2A0
		dc.w  $34C0,  $460
		dc.w  $34CE,  $480
		dc.w  $34F0,  $490
		dc.w  $3710,  $490
		dc.w  $372E,  $480
		dc.w  $3740,  $460
		dc.w  $3740,  $330
		dc.w  $3720,  $310
		dc.w  $35F0,  $310
		dc.w  $35CE,  $300
		dc.w  $35C0,  $2E0
		dc.w  $35C0,   $40
		dc.w  $35CC,   $20
		dc.w  $3600,   $10
		dc.w  $3690,   $10
		dc.w  $36B4,   $20
		dc.w  $36C0,   $40
		dc.w  $36C0,   $80
AutoTunnel_0E:	dc.w $38
		dc.w  $14C0,  $AB0
		dc.w  $14C0,  $B60
		dc.w  $14D0,  $B80
		dc.w  $14F0,  $B90
		dc.w  $1610,  $B90
		dc.w  $1630,  $B80
		dc.w  $1640,  $B60
		dc.w  $1640,  $8C0
		dc.w  $1650,  $8A0
		dc.w  $1670,  $890
		dc.w  $1890,  $890
		dc.w  $18B0,  $89C
		dc.w  $18C0,  $8BC
		dc.w  $18C0,  $8FC
AutoTunnel_0F:	dc.w $38
		dc.w  $3840,  $730
		dc.w  $3840,  $860
		dc.w  $3832,  $880
		dc.w  $3802,  $890
		dc.w  $37D2,  $884
		dc.w  $37C0,  $864
		dc.w  $37C0,  $3D4
		dc.w  $37D0,  $3B4
		dc.w  $37F0,  $39C
		dc.w  $3820,  $390
		dc.w  $3990,  $390
		dc.w  $39B0,  $39C
		dc.w  $39C0,  $3BC
		dc.w  $39C0,  $3FC
AutoTunnel_10:	dc.w $7C
		dc.w   $F60,  $5C8
		dc.w   $F60,  $950
		dc.w   $F64,  $980
		dc.w   $F68,  $990
		dc.w   $F73,  $9B0
		dc.w   $F82,  $9D0
		dc.w   $F8C,  $9E0
		dc.w   $F98,  $9F0
		dc.w   $FA5,  $A00
		dc.w   $FB5,  $A10
		dc.w   $FC5,  $A1C
		dc.w   $FD5,  $A28
		dc.w   $FF5,  $A38
		dc.w  $1005,  $A40
		dc.w  $1025,  $A4A
		dc.w  $1035,  $A4C
		dc.w  $1055,  $A50
		dc.w  $1265,  $A50
		dc.w  $12A5,  $A48
		dc.w  $12C5,  $A3C
		dc.w  $12E5,  $A2C
		dc.w  $12F5,  $A20
		dc.w  $1305,  $A14
		dc.w  $1315,  $A08
		dc.w  $1320,  $9F8
		dc.w  $132F,  $9E8
		dc.w  $1343,  $9C8
		dc.w  $1350,  $9A8
		dc.w  $135A,  $988
		dc.w  $1360,  $958
		dc.w  $1360,  $878
AutoTunnel_11:	dc.w $7C
		dc.w  $3760,  $1C8
		dc.w  $3760,  $510
		dc.w  $375A,  $540
		dc.w  $3750,  $560
		dc.w  $3743,  $580
		dc.w  $372F,  $5A0
		dc.w  $3720,  $5B0
		dc.w  $3715,  $5C0
		dc.w  $3705,  $5CC
		dc.w  $36F5,  $5D8
		dc.w  $36E5,  $5E4
		dc.w  $36C5,  $5F4
		dc.w  $36A5,  $600
		dc.w  $3665,  $608
		dc.w  $3655,  $608
		dc.w  $3635,  $604
		dc.w  $3625,  $602
		dc.w  $3605,  $5F8
		dc.w  $35F5,  $5F0
		dc.w  $35D5,  $5E0
		dc.w  $35C5,  $5D4
		dc.w  $35B5,  $5C8
		dc.w  $35A5,  $5B8
		dc.w  $3598,  $5A8
		dc.w  $358C,  $598
		dc.w  $3582,  $588
		dc.w  $3573,  $568
		dc.w  $3568,  $548
		dc.w  $3564,  $538
		dc.w  $3560,  $508
		dc.w  $3560,  $478
AutoTunnel_12:	dc.w $7C
		dc.w  $3460,  $5C8
		dc.w  $3460,  $690
		dc.w  $345A,  $6C0
		dc.w  $3450,  $6E0
		dc.w  $3443,  $700
		dc.w  $342F,  $720
		dc.w  $3420,  $730
		dc.w  $3415,  $740
		dc.w  $3405,  $74C
		dc.w  $33F5,  $758
		dc.w  $33E5,  $764
		dc.w  $33C5,  $774
		dc.w  $33A5,  $780
		dc.w  $3365,  $788
		dc.w  $3355,  $788
		dc.w  $3335,  $784
		dc.w  $3325,  $782
		dc.w  $3305,  $778
		dc.w  $32F5,  $770
		dc.w  $32D5,  $760
		dc.w  $32C5,  $754
		dc.w  $32B5,  $748
		dc.w  $32A5,  $738
		dc.w  $3298,  $728
		dc.w  $328C,  $718
		dc.w  $3282,  $708
		dc.w  $3273,  $6E8
		dc.w  $3268,  $6C8
		dc.w  $3264,  $6B8
		dc.w  $3260,  $688
		dc.w  $3260,  $5F8
AutoTunnel_13:	dc.w $28
		dc.w  $1C70,  $730
		dc.w  $1C70,  $6C0
		dc.w  $1C62,  $6A0
		dc.w  $1C42,  $692
		dc.w  $1C32,  $692
		dc.w  $1C12,  $69B
		dc.w  $1C00,  $6BB
		dc.w  $1C08,  $6DB
		dc.w  $1C28,  $6F0
		dc.w  $1CA8,  $6F0
AutoTunnel_14:	dc.w $28
		dc.w  $3670,  $830
		dc.w  $3670,  $7C0
		dc.w  $3662,  $7A0
		dc.w  $3642,  $792
		dc.w  $3632,  $792
		dc.w  $3612,  $79B
		dc.w  $3600,  $7BB
		dc.w  $3608,  $7DB
		dc.w  $3628,  $7F0
		dc.w  $36A8,  $7F0
SpriteTerminat9:dc.w  $FFFF,     0,     0
MHZ1_Sprites:	binclude "Levels/MHZ/Object Pos/1-S3.bin"
		even
MHZ2_Sprites:	binclude "Levels/MHZ/Object Pos/2-S3.bin"
		even
MHZ1_Rings:	dc.w    $80, $7100, $FFFF
MHZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatA:dc.w  $FFFF,     0,     0
SOZ1_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
SOZ2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
SOZ1_Rings:	dc.w    $80, $7100, $FFFF
SOZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatB:dc.w  $FFFF,     0,     0
LRZ1_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
LRZ2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
LRZ1_Rings:	dc.w    $80, $7100, $FFFF
LRZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatC:dc.w  $FFFF,     0,     0
SSZ1_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
SSZ2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
SSZ1_Rings:	dc.w    $80, $7100, $FFFF
SSZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatD:dc.w  $FFFF,     0,     0
DEZ1_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
DEZ2_Sprites:	dc.w   $550,     0,  $289,   $80,   $80,     0, $FFFF,     0,     0
DEZ1_Rings:	dc.w    $80, $7100, $FFFF
DEZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatE:dc.w  $FFFF,     0,     0
DDZ1_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
DDZ2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
DDZ1_Rings:	dc.w    $80, $7100, $FFFF
DDZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatF:dc.w  $FFFF,     0,     0
Ending1_Sprites:dc.w    $80,   $80,     0, $FFFF,     0,     0
Ending2_Sprites:dc.w    $80,   $80,     0, $FFFF,     0,     0
Ending1_Rings:	dc.w    $80, $7100, $FFFF
Ending2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatG:dc.w  $FFFF,     0,     0
ALZ1_Sprites:	binclude "Levels/ALZ/Object Pos/1.bin"
		even
ALZ2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
ALZ1_Rings:	dc.w    $80, $7100, $FFFF
ALZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatH:dc.w  $FFFF,     0,     0
BPZ1_Sprites:	binclude "Levels/BPZ/Object Pos/1.bin"
		even
BPZ2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
BPZ1_Rings:	dc.w    $80, $7100, $FFFF
BPZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatI:dc.w  $FFFF,     0,     0
DPZ1_Sprites:	binclude "Levels/DPZ/Object Pos/1.bin"
		even
DPZ2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
DPZ1_Rings:	dc.w    $80, $7100, $FFFF
DPZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatJ:dc.w  $FFFF,     0,     0
CGZ1_Sprites:	binclude "Levels/CGZ/Object Pos/1.bin"
		even
CGZ2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
CGZ1_Rings:	dc.w    $80, $7100, $FFFF
CGZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatK:dc.w  $FFFF,     0,     0
EMZ1_Sprites:	binclude "Levels/EMZ/Object Pos/1.bin"
		even
EMZ2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
EMZ1_Rings:	dc.w    $80, $7100, $FFFF
EMZ2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatL:dc.w  $FFFF,     0,     0
Gumball1_Sprites:
		binclude "Levels/Gumball/Object Pos/1-S3.bin"
		even
Gumball2_Sprites:
		dc.w    $80,   $80,     0, $FFFF,     0,     0
Gumball1_Rings:	dc.w   $200,  $200, $FFFF
Gumball2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatM:dc.w  $FFFF,     0,     0
Pachinko1_Sprites:dc.w    $80,   $80,     0, $FFFF,     0,     0
Pachinko2_Sprites:dc.w    $80,   $80,     0, $FFFF,     0,     0
Pachinko1_Rings:dc.w    $80, $7100, $FFFF
Pachinko2_Rings:dc.w    $80, $7100, $FFFF
SpriteTerminatN:dc.w  $FFFF,     0,     0
Slots1_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
Slots2_Sprites:	dc.w    $80,   $80,     0, $FFFF,     0,     0
Slots1_Rings:	dc.w    $80, $7100, $FFFF
Slots2_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatO:dc.w  $FFFF,     0,     0
LRZ3_Sprites:	dc.w  $FFFF,     0,     0
HPZ_Sprites:	dc.w  $FFFF,     0,     0
LRZ3_Rings:	dc.w    $80, $7100, $FFFF
HPZ_Rings:	dc.w    $80, $7100, $FFFF
SpriteTerminatP:dc.w  $FFFF,     0,     0
DEZ3_Sprites:	dc.w  $FFFF,     0,     0
HPZMini_Sprites:dc.w  $FFFF,     0,     0
DEZ3_Rings:	dc.w    $80, $7100, $FFFF
HPZMini_Rings:	dc.w    $80, $7100, $FFFF
SStage1_Layout:	binclude "General/Special Stage/Layout/S3 1.bin"
		even
SStage2_Layout:	binclude "General/Special Stage/Layout/S3 2.bin"
		even
SStage3_Layout:	binclude "General/Special Stage/Layout/S3 3.bin"
		even
SStage4_Layout:	binclude "General/Special Stage/Layout/S3 4.bin"
		even
SStage5_Layout:	binclude "General/Special Stage/Layout/S3 5.bin"
		even
SStage6_Layout:	binclude "General/Special Stage/Layout/S3 6.bin"
		even
SStage7_Layout:	binclude "General/Special Stage/Layout/S3 7.bin"
		even
SStage8_Layout:	binclude "General/Special Stage/Layout/S3 8.bin"
		align $1000
HCZ_WaterlineScroll_Data:
		binclude "Levels/HCZ/Misc/HCZ Waterline Scroll Data.bin"
		even
LBZ_WaterlineScroll_Data:
		binclude "Levels/LBZ/Misc/LBZ Waterline Scroll Data.bin"
		even
AngleArray:	binclude "Levels/Misc/Angles S3.bin"
		even
HeightMaps:	binclude "Levels/Misc/Height Maps S3.bin"
		even
HeightMapsRot:	binclude "Levels/Misc/Height Maps Rotated S3.bin"
		even
SolidIndexes:	dc.l Solid_AIZ1
		dc.l Solid_AIZ2
		dc.l Solid_HCZ1
		dc.l Solid_HCZ2
		dc.l Solid_MGZ1
		dc.l Solid_MGZ2
		dc.l Solid_CNZ
		dc.l Solid_CNZ
		dc.l Solid_FBZ
		dc.l Solid_FBZ
		dc.l Solid_ICZ1
		dc.l Solid_ICZ2
		dc.l Solid_LBZ1
		dc.l Solid_LBZ2
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_ALZ
		dc.l Solid_BPZ
		dc.l Solid_BPZ
		dc.l Solid_DPZ
		dc.l Solid_DPZ
		dc.l Solid_CGZ
		dc.l Solid_CGZ
		dc.l Solid_EMZ
		dc.l Solid_EMZ
		dc.l Solid_Gumball_Special
		dc.l Solid_Gumball_Special
		dc.l Solid_Pachinko_Special
		dc.l Solid_Pachinko_Special
		dc.l Solid_Slots_Special
		dc.l Solid_Slots_Special
		dc.l Solid_Slots_Special
		dc.l Solid_Slots_Special
		dc.l Solid_Slots_Special
		dc.l Solid_Slots_Special
Solid_AIZ1:	binclude "Levels/AIZ/Collision/1.bin"
		even
Solid_AIZ2:	binclude "Levels/AIZ/Collision/2.bin"
		even
Solid_HCZ1:	binclude "Levels/HCZ/Collision/1.bin"
		even
Solid_HCZ2:	binclude "Levels/HCZ/Collision/2.bin"
		even
Solid_MGZ1:	binclude "Levels/MGZ/Collision/1.bin"
		even
Solid_MGZ2:	binclude "Levels/MGZ/Collision/2.bin"
		even
Solid_CNZ:	binclude "Levels/CNZ/Collision/1.bin"
		even
Solid_FBZ:
Solid_ICZ1:	binclude "Levels/ICZ/Collision/1.bin"
		even
Solid_ICZ2:	binclude "Levels/ICZ/Collision/2.bin"
		even
Solid_LBZ1:	binclude "Levels/LBZ/Collision/1.bin"
		even
Solid_LBZ2:	binclude "Levels/LBZ/Collision/2.bin"
		even
Solid_ALZ:	binclude "Levels/ALZ/Collision/1.bin"
		even
Solid_BPZ:	binclude "Levels/BPZ/Collision/1.bin"
		even
Solid_DPZ:	binclude "Levels/DPZ/Collision/1.bin"
		even
Solid_CGZ:	binclude "Levels/CGZ/Collision/1.bin"
		even
Solid_EMZ:	binclude "Levels/EMZ/Collision/1.bin"
		even
Solid_Gumball_Special:
		binclude "Levels/Gumball/Collision/1.bin"
		even
Solid_Pachinko_Special:
Solid_Slots_Special:
LevelPtrs:	dc.l Layout_AIZ1
		dc.l Layout_AIZ2
		dc.l Layout_HCZ1
		dc.l Layout_HCZ2
		dc.l Layout_MGZ1
		dc.l Layout_MGZ2
		dc.l Layout_CNZ1
		dc.l Layout_CNZ2
		dc.l Layout_FBZ1
		dc.l Layout_FBZ2
		dc.l Layout_ICZ1
		dc.l Layout_ICZ2
		dc.l Layout_LBZ1
		dc.l Layout_LBZ2
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_ALZ
		dc.l Layout_BPZ
		dc.l Layout_BPZ
		dc.l Layout_DPZ
		dc.l Layout_DPZ
		dc.l Layout_CGZ
		dc.l Layout_CGZ
		dc.l Layout_EMZ
		dc.l Layout_EMZ
		dc.l Layout_Gumball_Special
		dc.l Layout_Gumball_Special
		dc.l Layout_Pachinko_Special
		dc.l Layout_Pachinko_Special
		dc.l Layout_Slot_Special
		dc.l Layout_Slot_Special
		dc.l Layout_Slot_Special
		dc.l Layout_Slot_Special
		dc.l Layout_Slot_Special
		dc.l Layout_Slot_Special
Layout_AIZ1:	binclude "Levels/AIZ/Layout/1.bin"
		even
Layout_AIZ2:	binclude "Levels/AIZ/Layout/2.bin"
		even
Layout_HCZ1:	binclude "Levels/HCZ/Layout/1.bin"
		even
Layout_HCZ2:	binclude "Levels/HCZ/Layout/2.bin"
		even
Layout_MGZ1:	binclude "Levels/MGZ/Layout/1.bin"
		even
Layout_MGZ2:	binclude "Levels/MGZ/Layout/2.bin"
		even
Layout_CNZ1:	binclude "Levels/CNZ/Layout/1.bin"
		even
Layout_CNZ2:	binclude "Levels/CNZ/Layout/2.bin"
		even
Layout_FBZ1:
Layout_FBZ2:
Layout_ICZ1:	binclude "Levels/ICZ/Layout/1.bin"
		even
Layout_ICZ2:	binclude "Levels/ICZ/Layout/2.bin"
		even
Layout_LBZ1:	binclude "Levels/LBZ/Layout/1.bin"
		even
Layout_LBZ2:	binclude "Levels/LBZ/Layout/2.bin"
		even
Layout_ALZ:	binclude "Levels/ALZ/Layout/1.bin"
		even
Layout_BPZ:	binclude "Levels/BPZ/Layout/1.bin"
		even
Layout_DPZ:	binclude "Levels/DPZ/Layout/1.bin"
		even
Layout_CGZ:	binclude "Levels/CGZ/Layout/1.bin"
		even
Layout_EMZ:	binclude "Levels/EMZ/Layout/1.bin"
		even
Layout_Gumball_Special:
		binclude "Levels/Gumball/Layout/1.bin"
		even
Layout_Pachinko_Special:
		binclude "Levels/Pachinko/Layout/1-S3.bin"
		even
Layout_Slot_Special:
		binclude "Levels/Slots/Layout/1-S3.bin"
		even
PalPoint:	include "Levels/Misc/Palette pointers S3.asm"

Pal_Unknown1:	binclude "Levels/Misc/Palettes/Unknown 1.bin"
		even
Pal_Unknown2:	binclude "Levels/Misc/Palettes/Unknown 2 S3.bin"
		even
Pal_Unknown3:	binclude "Levels/Misc/Palettes/Unknown 3 S3.bin"
		even
Pal_SonicTails:	binclude "General/Sprites/Sonic/Palettes/SonicAndTails.bin"
		even
Pal_S2Menu:	binclude "General/Sprites/S2Menu/Palettes/Main.bin"
		even
Pal_Knuckles:	binclude "General/Sprites/Knuckles/Palettes/Main.bin"
		even
Pal_AIZIntro:	binclude "Levels/AIZ/Palettes/Intro.bin"
		even
Pal_AIZ:	binclude "Levels/AIZ/Palettes/Main.bin"
		even
Pal_AIZFire:	binclude "Levels/AIZ/Palettes/Fire.bin"
		even
Pal_AIZBoss:	binclude "Levels/AIZ/Palettes/Boss.bin"
		even
Pal_AIZ_Water:	binclude "Levels/AIZ/Palettes/Water.bin"
		even
Pal_AIZ2_Water:	binclude "Levels/AIZ/Palettes/Act 2 Water.bin"
		even
Pal_HCZ1:	binclude "Levels/HCZ/Palettes/1.bin"
		even
Pal_HCZ2:	binclude "Levels/HCZ/Palettes/2.bin"
		even
Pal_HCZ1_Water:	binclude "Levels/HCZ/Palettes/Act 1 Water.bin"
		even
Pal_HCZ2_Water:	binclude "Levels/HCZ/Palettes/Act 2 Water.bin"
		even
Pal_MGZ:	binclude "Levels/MGZ/Palettes/Main.bin"
		even
Pal_CNZ:	binclude "Levels/CNZ/Palettes/Main.bin"
		even
Pal_CNZ_Water:	binclude "Levels/CNZ/Palettes/Water.bin"
		even
Pal_FBZ:
Pal_ICZ1:	binclude "Levels/ICZ/Palettes/1.bin"
		even
Pal_ICZ2:	binclude "Levels/ICZ/Palettes/2.bin"
		even
Pal_ICZ2_Water:	binclude "Levels/ICZ/Palettes/Act 2 Water.bin"
		even
Pal_LBZ1:	binclude "Levels/LBZ/Palettes/1.bin"
		even
Pal_LBZ2:	binclude "Levels/LBZ/Palettes/2.bin"
		even
Pal_LBZ_Water:	binclude "Levels/LBZ/Palettes/Act 2 Water.bin"
		even
Pal_LBZ_Water2:	binclude "Levels/LBZ/Palettes/Act 2 Water 2.bin"
		even
Pal_ALZ:	binclude "Levels/ALZ/Palettes/Main.bin"
		even
Pal_BPZ:	binclude "Levels/BPZ/Palettes/Main.bin"
		even
Pal_DPZ:	binclude "Levels/DPZ/Palettes/Main.bin"
		even
Pal_CGZ:	binclude "Levels/CGZ/Palettes/Main.bin"
		even
Pal_EMZ:	binclude "Levels/EMZ/Palettes/Main.bin"
		even
Pal_Gumball_Special:
		binclude "Levels/Gumball/Palettes/Main.bin"
		even
Pal_Pachinko_Special:
		binclude "Levels/Pachinko/Palettes/S3.bin"
		even
Pal_Slot_Special:
		binclude "Levels/Slots/Palettes/S3.bin"
		even
ArtUnc_CNZCannon:
		binclude "General/Sprites/CNZ Cannon/CNZ Cannon.bin"
		even
ArtUnc_AirCountDown:
		binclude "General/Sprites/Bubbles/Air Countdown.bin"
		even
ArtUnc_SONICMILES:
		binclude "General/Sprites/S2Menu/SONICMILES.bin"
		even
ArtUnc_SStageSonic:
		binclude "General/Sprites/Sonic/Art/SStage Sonic.bin"
		even
Map_SStageSonic:include "General/Sprites/Sonic/Map - SStage Sonic.asm"
ArtUnc_SStageTails:
		binclude "General/Sprites/Tails/Art/SStage Tails.bin"
		even
Map_SStageTails:include "General/Sprites/Tails/Map - SStage Tails.asm"
ArtUnc_SStageTailstails:
		binclude "General/Sprites/Tails/Art/SStage Tails tails.bin"
		even
Map_SStageTailstails:
		include "General/Sprites/Tails/Map - SStage Tails tails.asm"
ArtNem_SphereTest:
		binclude "General/Special Stage/Nemesis Art/Eosian Spheres.bin"
		even
ArtNem_SStageShadow:
		binclude "General/Special Stage/Nemesis Art/Shadow.bin"
		even
ArtNem_GetBlueSpheres:
		binclude "General/Special Stage/Nemesis Art/Get Blue Spheres.bin"
		even
ArtNem_GBSArrow:
		binclude "General/Special Stage/Nemesis Art/Get Blue Spheres Arrow.bin"
		even
ArtNem_SStageDigits:
		binclude "General/Special Stage/Nemesis Art/Digits.bin"
		even
ArtNem_SStageIcons:
		binclude "General/Special Stage/Nemesis Art/Icons.bin"
		even
ArtNem_SStageSphere:
		binclude "General/Special Stage/Nemesis Art/Sphere.bin"
		even
ArtNem_SStageRing:
		binclude "General/Special Stage/Nemesis Art/Ring.bin"
		even
ArtKosM_SStageChaosEmerald:
		binclude "General/Special Stage/KosinskiM Art/Special Stage Chaos Emerald.bin"
		even
MapEni_SStageBG:binclude "General/Special Stage/Enigma Map/BG.bin"
		even
ArtNem_SStageBG:binclude "General/Special Stage/Nemesis Art/BG.bin"
		even
MapUnc_SStageLayout:
		binclude "General/Special Stage/Layout/S3 Plane Map.bin"
		even
ArtNem_SStageLayout:
		binclude "General/Special Stage/Nemesis Art/Layout.bin"
		even
SStage_PerspectiveMapPtrs:
		dc.l SStage_PerspectiveMaps
		dc.l SStage_PerspectiveMaps+$5A0
		dc.l SStage_PerspectiveMaps+$B40
		dc.l SStage_PerspectiveMaps+$10E0
		dc.l SStage_PerspectiveMaps+$1680
		dc.l SStage_PerspectiveMaps+$1C20
		dc.l SStage_PerspectiveMaps+$21C0
		dc.l SStage_PerspectiveMaps+$2760
		dc.l SStage_PerspectiveMaps
		dc.l SStage_PerspectiveMaps+$5A0
		dc.l SStage_PerspectiveMaps+$B40
		dc.l SStage_PerspectiveMaps+$10E0
		dc.l SStage_PerspectiveMaps+$1680
		dc.l SStage_PerspectiveMaps+$1C20
		dc.l SStage_PerspectiveMaps+$21C0
		dc.l SStage_PerspectiveMaps+$2760
		dc.l SStage_PerspectiveMaps+$2D00
		dc.l SStage_PerspectiveMaps+$32A0
		dc.l SStage_PerspectiveMaps+$3840
		dc.l SStage_PerspectiveMaps+$3DE0
		dc.l SStage_PerspectiveMaps+$4380
		dc.l SStage_PerspectiveMaps+$4920
		dc.l SStage_PerspectiveMaps+$4EC0
SStage_PerspectiveMaps:
		binclude "General/Special Stage/Layout/S3 Perspective Maps.bin"
		even
Map_Sonic2P:	include "General/Sprites/Sonic/Map - Sonic 2P.asm"
PLC_Sonic2P:	include "General/Sprites/Sonic/DPLC - Sonic 2P.asm"
Map_Tails2P:	include "General/Sprites/Tails/Map - Tails 2P.asm"
Map_Tails2P_Tail:
		include "General/Sprites/Tails/Map - Tails tail 2P.asm"
PLC_Tails2P:	include "General/Sprites/Tails/DPLC - Tails 2P.asm"
DPLC_Tails2P_Tail:
		include "General/Sprites/Tails/DPLC - Tails tails 2P.asm"
Map_Knuckles2P:	include "General/Sprites/Knuckles/Map - Knuckles 2P.asm"
PLC_Knuckles2P:	include "General/Sprites/Knuckles/DPLC - Knuckles 2P.asm"
ArtUnc_SurfboardIntro:
		binclude "General/Sprites/Sonic/Art/Sonic Surfboarding.bin"
		align0 $20
ArtUnc_AniAIZ1_0:
		binclude "Levels/AIZ/Animated Tiles/Act1 0.bin"
		even
ArtUnc_AniAIZ1_1:
		binclude "Levels/AIZ/Animated Tiles/Act1 1.bin"
		even
ArtUnc_AniAIZ2_1:
		binclude "Levels/AIZ/Animated Tiles/Act2 1.bin"
		even
ArtUnc_AniAIZ2_0:
		binclude "Levels/AIZ/Animated Tiles/Act2 0.bin"
		even
ArtUnc_AniAIZ2_3:
		binclude "Levels/AIZ/Animated Tiles/Act2 3.bin"
		even
ArtUnc_AniAIZ2_2:
		binclude "Levels/AIZ/Animated Tiles/Act2 2.bin"
		even
ArtUnc_AniAIZ2_FirstTree:
		binclude "Levels/AIZ/Animated Tiles/Act2 First Tree.bin"
		even
ArtUnc_AniHCZ1_0:
		binclude "Levels/HCZ/Animated Tiles/Act1 0.bin"
		even
ArtUnc_AniHCZ1_WaterlineBelow:
		binclude "Levels/HCZ/Animated Tiles/Act1 Water Below 1.bin"
		even
ArtUnc_FixHCZ1_UpperBG1:
		binclude "Levels/HCZ/Animated Tiles/Act1 Upper BG 1.bin"
		even
ArtUnc_AniHCZ1_WaterlineAbove:
		binclude "Levels/HCZ/Animated Tiles/Act1 Water Above 1.bin"
		even
ArtUnc_FixHCZ1_LowerBG1:
		binclude "Levels/HCZ/Animated Tiles/Act1 Lower BG 1.bin"
		even
ArtUnc_AniHCZ1_WaterlineBelow2:
		binclude "Levels/HCZ/Animated Tiles/Act1 Water Below 2.bin"
		even
ArtUnc_FixHCZ1_UpperBG2:
		binclude "Levels/HCZ/Animated Tiles/Act1 Upper BG 2.bin"
		even
ArtUnc_AniHCZ1_WaterlineAbove2:
		binclude "Levels/HCZ/Animated Tiles/Act1 Water Above 2.bin"
		even
ArtUnc_FixHCZ1_LowerBG2:
		binclude "Levels/HCZ/Animated Tiles/Act1 Lower BG 2.bin"
		even
ArtUnc_AniHCZ__1:
		binclude "Levels/HCZ/Animated Tiles/0.bin"
		even
ArtUnc_AniHCZ2_0:
		binclude "Levels/HCZ/Animated Tiles/Act2 0.bin"
		even
ArtUnc_AniHCZ2_SmallBGLine:
		binclude "Levels/HCZ/Animated Tiles/Act2 1.bin"
		even
ArtUnc_AniHCZ2_2:
		binclude "Levels/HCZ/Animated Tiles/Act2 2.bin"
		even
ArtUnc_AniHCZ2_3:
		binclude "Levels/HCZ/Animated Tiles/Act2 3.bin"
		even
ArtUnc_AniHCZ2_4:
		binclude "Levels/HCZ/Animated Tiles/Act2 4.bin"
		even
ArtUnc_AniMGZ__0:
		binclude "Levels/MGZ/Animated Tiles/MGZ Animated 0.bin"
		even
ArtUnc_AniMGZ__1:
		binclude "Levels/MGZ/Animated Tiles/MGZ Animated 1.bin"
		even
ArtUnc_AniCNZ__0:
		binclude "Levels/CNZ/Animated Tiles/0.bin"
		even
ArtUnc_AniCNZ__1:
		binclude "Levels/CNZ/Animated Tiles/1.bin"
		even
ArtUnc_AniCNZ__2:
		binclude "Levels/CNZ/Animated Tiles/2.bin"
		even
ArtUnc_AniCNZ__3:
		binclude "Levels/CNZ/Animated Tiles/3.bin"
		even
ArtUnc_AniCNZ__4:
		binclude "Levels/CNZ/Animated Tiles/4.bin"
		even
ArtUnc_AniCNZ__6:
		binclude "Levels/CNZ/Animated Tiles/6.bin"
		even
ArtUnc_AniCNZ__5:
		binclude "Levels/CNZ/Animated Tiles/5.bin"
		even
ArtUnc_AniICZ__1:
		binclude "Levels/ICZ/Animated Tiles/1.bin"
		even
ArtUnc_AniICZ__2:
		binclude "Levels/ICZ/Animated Tiles/2.bin"
		even
ArtUnc_AniICZ__3:
		binclude "Levels/ICZ/Animated Tiles/3.bin"
		even
ArtUnc_AniICZ__4:
		binclude "Levels/ICZ/Animated Tiles/4.bin"
		even
ArtUnc_AniICZ__5:
		binclude "Levels/ICZ/Animated Tiles/5.bin"
		even
ArtUnc_AniICZ__0:
		binclude "Levels/ICZ/Animated Tiles/0.bin"
		even
ArtUnc_AniLBZ1_0:
		binclude "Levels/LBZ/Animated Tiles/Act1 0.bin"
		even
ArtUnc_AniLBZ1_1:
		binclude "Levels/LBZ/Animated Tiles/Act1 1.bin"
		even
ArtUnc_AniLBZ1_2:
		binclude "Levels/LBZ/Animated Tiles/Act1 2.bin"
		even
ArtUnc_AniLBZ2_2:
		binclude "Levels/LBZ/Animated Tiles/Act2 2.bin"
		even
ArtUnc_AniLBZ2_WaterlineBelow:
		binclude "Levels/LBZ/Animated Tiles/Act2 Water Below.bin"
		even
ArtUnc_AniLBZ2_LowerBG:
		binclude "Levels/LBZ/Animated Tiles/Act2 Lower BG.bin"
		even
ArtUnc_AniLBZ2_WaterlineAbove:
		binclude "Levels/LBZ/Animated Tiles/Act2 Water Above.bin"
		even
ArtUnc_AniLBZ2_UpperBG:
		binclude "Levels/LBZ/Animated Tiles/Act2 Upper BG.bin"
		even
ArtUnc_AniLBZ__0:
		binclude "Levels/LBZ/Animated Tiles/0.bin"
		even
ArtUnc_AniLBZ2_0:
		binclude "Levels/LBZ/Animated Tiles/Act2 0.bin"
		even
ArtUnc_AniLBZ2_1:
		binclude "Levels/LBZ/Animated Tiles/Act2 1.bin"
		even
ArtUnc_AniLRZ__BG:
ArtUnc_AniLRZ__BG2:
ArtUnc_AniALZ:	binclude "Levels/ALZ/Animated Tiles/0.bin"
		even
ArtUnc_AniBPZ__0:
		binclude "Levels/BPZ/Animated Tiles/0.bin"
		even
ArtUnc_AniBPZ__1:
		binclude "Levels/BPZ/Animated Tiles/1.bin"
		even
ArtUnc_AniBPZ__2:
		binclude "Levels/BPZ/Animated Tiles/2.bin"
		even
ArtUnc_AniBPZ__3:
		binclude "Levels/BPZ/Animated Tiles/3.bin"
		even
ArtUnc_AniDPZ:	binclude "Levels/DPZ/Animated Tiles/0.bin"
		even
ArtUnc_AniDPZ__BG:
		binclude "Levels/DPZ/Animated Tiles/BG 0.bin"
		even
ArtUnc_AniGumball:
		binclude "Levels/Gumball/Animated Tiles/0.bin"
		even
ArtUnc_SplashDrown:
		binclude "General/Sprites/Dash Dust/Splash Drown.bin"
		even
ArtNem_S22POptions:
		binclude "General/Sprites/S2Menu/2P Options.bin"
		even
ArtNem_1P2PWins:binclude "General/Sprites/S2Menu/1P 2P Wins.bin"
		even
MapEni_S22POptions:
		binclude "General/Sprites/S2Menu/Enigma Map/2P Options.bin"
		even
ArtNem_S2MenuBox:
		binclude "General/Sprites/S2Menu/Menu Box.bin"
		even
ArtNem_S2LevelSelectPics:
		binclude "General/Sprites/S2Menu/Level Select Icons.bin"
		even
ArtNem_Title_SonicSprites:
		binclude "General/Title/Nemesis Art/S3 Sonic Sprites.bin"
		even
DemoDat_AIZ:	binclude "Levels/AIZ/Demodata/1.bin"
		even
DemoDat_HCZ:	binclude "Levels/HCZ/Demodata/1.bin"
		even
DemoDat_MGZ:	binclude "Levels/MGZ/Demodata/1.bin"
		even

		org $C71A0
Snd_Minib:	binclude "Sound/Music/Sonic 3/Sonic 3 Miniboss.bin"
Snd_FinalBoss:	binclude "Sound/Music/Sonic 3/Final Boss.bin"
		align $1000
Snd_AIZ1:	binclude "Sound/Music/AIZ1.bin"
Snd_AIZ2:	binclude "Sound/Music/AIZ2.bin"
Snd_HCZ1:	binclude "Sound/Music/HCZ1.bin"
Snd_HCZ2:	binclude "Sound/Music/HCZ2.bin"
Snd_MGZ1:	binclude "Sound/Music/MGZ1.bin"
Snd_MGZ2:	binclude "Sound/Music/MGZ2.bin"
Snd_CNZ2:	binclude "Sound/Music/CNZ2.bin"
Snd_CNZ1:	binclude "Sound/Music/CNZ1.bin"
Snd_FBZ1:	binclude "Sound/Music/Sonic 3/FBZ1.bin"
Snd_FBZ2:	binclude "Sound/Music/Sonic 3/FBZ2.bin"
Snd_DDZ:	binclude "Sound/Music/Sonic 3/DDZ.bin"
		align $1000
Snd_ICZ2:	binclude "Sound/Music/ICZ2.bin"
Snd_ICZ1:	binclude "Sound/Music/ICZ1.bin"
Snd_LBZ2:	binclude "Sound/Music/LBZ2.bin"
Snd_LBZ1:	binclude "Sound/Music/LBZ1.bin"
Snd_MHZ1:	binclude "Sound/Music/Sonic 3/MHZ1.bin"
Snd_MHZ2:	binclude "Sound/Music/Sonic 3/MHZ2.bin"
Snd_SOZ1:	binclude "Sound/Music/Sonic 3/SOZ1.bin"
Snd_SOZ2:	binclude "Sound/Music/Sonic 3/SOZ2.bin"
Snd_LRZ1:	binclude "Sound/Music/Sonic 3/LRZ1.bin"
Snd_LRZ2:	binclude "Sound/Music/Sonic 3/LRZ2.bin"
Snd_SSZ:	binclude "Sound/Music/Sonic 3/SSZ.bin"
Snd_DEZ1:	binclude "Sound/Music/Sonic 3/DEZ1.bin"
Snd_DEZ2:	binclude "Sound/Music/Sonic 3/DEZ2.bin"
Snd_Minib_SK:	binclude "Sound/Music/Sonic 3/Miniboss.bin"
Snd_Boss:	binclude "Sound/Music/Sonic 3/Zone Boss.bin"
Snd_PachBonus:	binclude "Sound/Music/Sonic 3/Pachinko.bin"
Snd_SpecialS:	binclude "Sound/Music/Sonic 3/Special Stage.bin"
Snd_Results:	binclude "Sound/Music/Sonic 3/Level Outro.bin"
Snd_Menu:	binclude "Sound/Music/Sonic 3/Menu.bin"
		align $1000
Snd_SlotBonus:	binclude "Sound/Music/Sonic 3/Slots.bin"
Snd_GumBonus:	binclude "Sound/Music/Gum Ball Machine.bin"
Snd_Knux:	binclude "Sound/Music/Sonic 3/Sonic 3 Knuckles.bin"
Snd_ALZ:	binclude "Sound/Music/Azure Lake.bin"
Snd_BPZ:	binclude "Sound/Music/Balloon Park.bin"
Snd_DPZ:	binclude "Sound/Music/Desert Palace.bin"
Snd_CGZ:	binclude "Sound/Music/Chrome Gadget.bin"
Snd_EMZ:	binclude "Sound/Music/Endless Mine.bin"
Snd_Title:	binclude "Sound/Music/Sonic 3/Sonic 3 Title.bin"
Snd_S3Credits:	binclude "Sound/Music/Sonic 3 Credits.bin"
Snd_GameOver:	binclude "Sound/Music/Sonic 3/Game Over.bin"
Snd_Continue:	binclude "Sound/Music/Sonic 3/Sonic 3 Continue.bin"
Snd_1UP:	binclude "Sound/Music/Sonic 3/Sonic 3 1UP.bin"
Snd_Emerald:	binclude "Sound/Music/Sonic 3/Chaos Emerald.bin"
Snd_Invic:	binclude "Sound/Music/Sonic 3/Sonic 3 Invincible.bin"
Snd_2PMenu:	binclude "Sound/Music/Competition Menu.bin"
Snd_Drown:	binclude "Sound/Music/Countdown.bin"
Snd_PresSega:	binclude "Sound/Music/Sonic 3/Sonic 3 Game Complete.bin"
		align $1000
DacBank1:	dc.w  $8880, $8D80, $9280, $9780, $9C80, $A180, $A680, $AB80, $B080, $B580, $BA80, $BF80
		dc.w  $C480, $C980, $CE80, $D380, $D880, $DD80, $E280, $E780, $EC80, $F180, $F680, $FB80
		dc.w    $81,  $581,  $A81, $B981, $BE81, $C381, $C881, $CD81, $D281,  $F81, $1481, $1981
		dc.w  $1E81, $2381, $2881, $2D81, $3281, $3781, $3C81, $4181, $4681, $4B81, $5081, $5581
		dc.w  $5A81, $5F81, $6481, $6981, $6E81, $7381, $7881, $7D81, $7D81, $8281, $8781, $8C81
		dc.w  $9181, $9681, $9B81, $A081, $A581, $AA81, $AF81, $B481
DAC_81_Setup:	dc.b 4
		dc.w $7E07
		dc.w $A684
DAC_82_Setup:	dc.b $E
		dc.w $6D04
		dc.w $248C
DAC_83_Setup:	dc.b $14
		dc.w $6D04
		dc.w $248C
DAC_84_Setup:	dc.b $1A
		dc.w $6D04
		dc.w $248C
DAC_85_Setup:	dc.b $20
		dc.w $6D04
		dc.w $248C
DAC_86_Setup:	dc.b 4
		dc.w $CF02
		dc.w $D781
DAC_87_Setup:	dc.b 4
		dc.w $1C07
		dc.w $7CB8
DAC_88_Setup:	dc.b 6
		dc.w $2712
		dc.w $EA0
DAC_89_Setup:	dc.b $A
		dc.w $FD09
		dc.w $87C4
DAC_8A_Setup:	dc.b $14
		dc.w $6001
		dc.w $35B2
DAC_8B_Setup:	dc.b $1B
		dc.w $6001
		dc.w $35B2
DAC_8C_Setup:	dc.b 8
		dc.w $6000
		dc.w $95B3
DAC_8D_Setup:	dc.b $B
		dc.w $8704
		dc.w $F5B3
DAC_8E_Setup:	dc.b $11
		dc.w $8704
		dc.w $F5B3
DAC_8F_Setup:	dc.b 8
		dc.w $EF04
		dc.w $98BF
DAC_90_Setup:	dc.b 3
		dc.w $2206
		dc.w $EC99
DAC_91_Setup:	dc.b 7
		dc.w $2206
		dc.w $EC99
DAC_92_Setup:	dc.b $A
		dc.w $2206
		dc.w $EC99
DAC_93_Setup:	dc.b $E
		dc.w $2206
		dc.w $EC99
DAC_94_Setup:	dc.b 6
		dc.w $5B09
		dc.w $9190
DAC_95_Setup:	dc.b $A
		dc.w $5B09
		dc.w $9190
DAC_96_Setup:	dc.b $D
		dc.w $5B09
		dc.w $9190
DAC_97_Setup:	dc.b $12
		dc.w $5B09
		dc.w $9190
DAC_98_Setup:	dc.b $B
		dc.w $680C
		dc.w $84CE
DAC_99_Setup:	dc.b $13
		dc.w $680C
		dc.w $84CE
DAC_9A_Setup:	dc.b $16
		dc.w $680C
		dc.w $84CE
DAC_9B_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_A2_Setup:	dc.b $A
		dc.w 0
		dc.w 0
DAC_A3_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_A4_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_A5_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_A6_Setup:	dc.b 9
		dc.w 0
		dc.w 0
DAC_A7_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_A8_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_A9_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_AA_Setup:	dc.b $A
		dc.w 0
		dc.w 0
DAC_AB_Setup:	dc.b $D
		dc.w 0
		dc.w 0
DAC_AC_Setup:	dc.b 6
		dc.w 0
		dc.w 0
DAC_AD_Setup:	dc.b $10
		dc.w 0
		dc.w 0
DAC_AE_Setup:	dc.b $18
		dc.w 0
		dc.w $4981
DAC_AF_Setup:	dc.b 9
		dc.w 0
		dc.w 0
DAC_B0_Setup:	dc.b $12
		dc.w 0
		dc.w $5381
DAC_B1_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_B2_Setup:	dc.b $16
		dc.w 0
		dc.w 0
DAC_B3_Setup:	dc.b $20
		dc.w 0
		dc.w $6281
DAC_B4_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_B5_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_B6_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_B7_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_B8_B9_Setup:dc.b $C
		dc.w 0
		dc.w 0
DAC_BA_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_BB_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_BC_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_BD_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_BE_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_BF_Setup:	dc.b $1C
		dc.w 0
		dc.w 0
DAC_C0_Setup:	dc.b $B
		dc.w 0
		dc.w 0
DAC_C1_Setup:	dc.b $F
		dc.w 0
		dc.w $6C81
DAC_C2_Setup:	dc.b $11
		dc.w 0
		dc.w $A881
DAC_C3_Setup:	dc.b $12
		dc.w 0
		dc.w $AD81
DAC_C4_Setup:	dc.b $B
		dc.w 0
		dc.w $B281
DAC_9C_Setup:	dc.b $A
		dc.w 0
		dc.w 0
DAC_9D_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_9E_Setup:	dc.b $18
		dc.w 0
		dc.w 0
DAC_9F_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_A0_Setup:	dc.b $C
		dc.w 0
		dc.w 0
DAC_A1_Setup:	dc.b $A
		dc.w 0
		dc.w 0
DAC_86_Data:	binclude "Sound/DAC/86.bin"
DAC_81_Data:	binclude "Sound/DAC/81.bin"
DAC_82_83_84_85_Data:
		binclude "Sound/DAC/82-85.bin"
DAC_94_95_96_97_Data:
		binclude "Sound/DAC/94-97.bin"
DAC_90_91_92_93_Data:
		binclude "Sound/DAC/90-93.bin"
DAC_88_Data:	binclude "Sound/DAC/88.bin"
DAC_8A_8B_Data:	binclude "Sound/DAC/8A-8B.bin"
DAC_8C_Data:	binclude "Sound/DAC/8C.bin"
DAC_8D_8E_Data:	binclude "Sound/DAC/8D-8E.bin"
DAC_87_Data:	binclude "Sound/DAC/87.bin"
DAC_8F_Data:	binclude "Sound/DAC/8F.bin"
DAC_89_Data:	binclude "Sound/DAC/89.bin"
DAC_98_99_9A_Data:
		binclude "Sound/DAC/98-9A.bin"
		align $1000
Z80_SoundDriver:binclude "Sound/Sonic 3 Z80 Sound Driver.bin"
		align $1000
DacBank2:	dc.w  $8880, $8D80, $9280, $9780, $9C80, $A180, $A680, $AB80, $B080, $B580, $BA80, $BF80
		dc.w  $C480, $C980, $CE80, $D380, $D880, $DD80, $E280, $E780, $EC80, $F180, $F680, $FB80
		dc.w    $81,  $581,  $A81, $B981, $BE81, $C381, $C881, $CD81, $D281,  $F81, $1481, $1981
		dc.w  $1E81, $2381, $2881, $2D81, $3281, $3781, $3C81, $4181, $4681, $4B81, $5081, $5581
		dc.w  $5A81, $5F81, $6481, $6981, $6E81, $7381, $7881, $7D81, $7D81, $8281, $8781, $8C81
		dc.w  $9181, $9681, $9B81, $A081, $A581, $AA81, $AF81, $B481
DAC_81_Setup2:	dc.b 4
		dc.w 0
		dc.w 0
DAC_82_Setup2:	dc.b $E
		dc.w 0
		dc.w 0
DAC_83_Setup2:	dc.b $14
		dc.w 0
		dc.w $9080
DAC_84_Setup2:	dc.b $1A
		dc.w 0
		dc.w $9580
DAC_85_Setup2:	dc.b $20
		dc.w 0
		dc.w $9A80
DAC_86_Setup2:	dc.b 4
		dc.w 0
		dc.w 0
DAC_87_Setup2:	dc.b 4
		dc.w 0
		dc.w 0
DAC_88_Setup2:	dc.b 6
		dc.w 0
		dc.w 0
DAC_89_Setup2:	dc.b $A
		dc.w 0
		dc.w 0
DAC_8A_Setup2:	dc.b $14
		dc.w 0
		dc.w 0
DAC_8B_Setup2:	dc.b $1B
		dc.w 0
		dc.w $B880
DAC_8C_Setup2:	dc.b 8
		dc.w 0
		dc.w 0
DAC_8D_Setup2:	dc.b $B
		dc.w 0
		dc.w 0
DAC_8E_Setup2:	dc.b $11
		dc.w 0
		dc.w $C780
DAC_8F_Setup2:	dc.b 8
		dc.w 0
		dc.w 0
DAC_90_Setup2:	dc.b 3
		dc.w 0
		dc.w 0
DAC_91_Setup2:	dc.b 7
		dc.w 0
		dc.w $D680
DAC_92_Setup2:	dc.b $A
		dc.w 0
		dc.w $DB80
DAC_93_Setup2:	dc.b $E
		dc.w 0
		dc.w $E080
DAC_94_Setup2:	dc.b 6
		dc.w 0
		dc.w 0
DAC_95_Setup2:	dc.b $A
		dc.w 0
		dc.w $EA80
DAC_96_Setup2:	dc.b $D
		dc.w 0
		dc.w $EF80
DAC_97_Setup2:	dc.b $12
		dc.w 0
		dc.w $F480
DAC_98_Setup2:	dc.b $B
		dc.w 0
		dc.w 0
DAC_99_Setup2:	dc.b $13
		dc.w 0
		dc.w $FE80
DAC_9A_Setup2:	dc.b $16
		dc.w 0
		dc.w $381
DAC_9B_Setup2:	dc.b $C
		dc.w $2006
		dc.w $D781
DAC_A2_Setup2:	dc.b $A
		dc.w $580D
		dc.w $F9BB
DAC_A3_Setup2:	dc.b $18
		dc.w $9E02
		dc.w $51C9
DAC_A4_Setup2:	dc.b $18
		dc.w $8A02
		dc.w $EFCB
DAC_A5_Setup2:	dc.b $C
		dc.w $600C
		dc.w $79CE
DAC_A6_Setup2:	dc.b 9
		dc.w $D606
		dc.w $D9DA
DAC_A7_Setup2:	dc.b $18
		dc.w $F206
		dc.w $AFE1
DAC_A8_Setup2:	dc.b $18
		dc.w $7A03
		dc.w $A1E8
DAC_A9_Setup2:	dc.b $C
		dc.w $4F0A
		dc.w $1BEC
DAC_AA_Setup2:	dc.b $A
		dc.w $8E06
		dc.w $6AF6
DAC_AB_Setup2:	dc.b $D
		dc.w 0
		dc.w 0
DAC_AC_Setup2:	dc.b 6
		dc.w 0
		dc.w 0
DAC_AD_Setup2:	dc.b $10
		dc.w 0
		dc.w 0
DAC_AE_Setup2:	dc.b $18
		dc.w 0
		dc.w $4981
DAC_AF_Setup2:	dc.b 9
		dc.w 0
		dc.w 0
DAC_B0_Setup2:	dc.b $12
		dc.w 0
		dc.w $5381
DAC_B1_Setup2:	dc.b $18
		dc.w 0
		dc.w 0
DAC_B2_Setup2:	dc.b $16
		dc.w 0
		dc.w 0
DAC_B3_Setup2:	dc.b $20
		dc.w 0
		dc.w $6281
DAC_B4_Setup2:	dc.b $C
		dc.w 0
		dc.w 0
DAC_B5_Setup2:	dc.b $C
		dc.w 0
		dc.w 0
DAC_B6_Setup2:	dc.b $C
		dc.w 0
		dc.w 0
DAC_B7_Setup2:	dc.b $18
		dc.w 0
		dc.w 0
DAC_B8_B9_Setup2:dc.b $C
		dc.w 0
		dc.w 0
DAC_BA_Setup2:	dc.b $18
		dc.w 0
		dc.w 0
DAC_BB_Setup2:	dc.b $18
		dc.w 0
		dc.w 0
DAC_BC_Setup2:	dc.b $18
		dc.w 0
		dc.w 0
DAC_BD_Setup2:	dc.b $C
		dc.w 0
		dc.w 0
DAC_BE_Setup2:	dc.b $C
		dc.w 0
		dc.w 0
DAC_BF_Setup2:	dc.b $1C
		dc.w 0
		dc.w 0
DAC_C0_Setup2:	dc.b $B
		dc.w 0
		dc.w 0
DAC_C1_Setup2:	dc.b $F
		dc.w 0
		dc.w $6C81
DAC_C2_Setup2:	dc.b $11
		dc.w 0
		dc.w $A881
DAC_C3_Setup2:	dc.b $12
		dc.w 0
		dc.w $AD81
DAC_C4_Setup2:	dc.b $B
		dc.w 0
		dc.w $B281
DAC_9C_Setup2:	dc.b $A
		dc.w $3203
		dc.w $F787
DAC_9D_Setup2:	dc.b $18
		dc.w $4902
		dc.w $298B
DAC_9E_Setup2:	dc.b $18
		dc.w $8002
		dc.w $728D
DAC_9F_Setup2:	dc.b $C
		dc.w $A512
		dc.w $F28F
DAC_A0_Setup2:	dc.b $C
		dc.w $BA0D
		dc.w $97A2
DAC_A1_Setup2:	dc.b $A
		dc.w $A80B
		dc.w $51B0
DAC_9B_Data:	binclude "Sound/DAC/9B.bin"
DAC_9C_Data:	binclude "Sound/DAC/9C.bin"
DAC_9D_Data:	binclude "Sound/DAC/9D.bin"
DAC_9E_Data:	binclude "Sound/DAC/9E.bin"
DAC_9F_Data:	binclude "Sound/DAC/9F.bin"
DAC_A0_Data:	binclude "Sound/DAC/A0.bin"
DAC_A1_Data:	binclude "Sound/DAC/A1.bin"
DAC_A2_Data:	binclude "Sound/DAC/A2.bin"
DAC_A3_Data:	binclude "Sound/DAC/A3.bin"
DAC_A4_Data:	binclude "Sound/DAC/A4.bin"
DAC_A5_Data:	binclude "Sound/DAC/A5.bin"
DAC_A6_Data:	binclude "Sound/DAC/A6.bin"
DAC_A7_Data:	binclude "Sound/DAC/A7.bin"
DAC_A8_Data:	binclude "Sound/DAC/A8.bin"
DAC_A9_Data:	binclude "Sound/DAC/A9.bin"
DAC_AA_Data:	binclude "Sound/DAC/AA.bin"
		align $1000
DacBank3:	dc.w  $8880, $8D80, $9280, $9780, $9C80, $A180, $A680, $AB80, $B080, $B580, $BA80, $BF80
		dc.w  $C480, $C980, $CE80, $D380, $D880, $DD80, $E280, $E780, $EC80, $F180, $F680, $FB80
		dc.w    $81,  $581,  $A81, $B981, $BE81, $C381, $C881, $CD81, $D281,  $F81, $1481, $1981
		dc.w  $1E81, $2381, $2881, $2D81, $3281, $3781, $3C81, $4181, $4681, $4B81, $5081, $5581
		dc.w  $5A81, $5F81, $6481, $6981, $6E81, $7381, $7881, $7D81, $7D81, $8281, $8781, $8C81
		dc.w  $9181, $9681, $9B81, $A081, $A581, $AA81, $AF81, $B481
DAC_81_Setup3:	dc.b 4
		dc.w 0
		dc.w 0
DAC_82_Setup3:	dc.b $E
		dc.w 0
		dc.w 0
DAC_83_Setup3:	dc.b $14
		dc.w 0
		dc.w $9080
DAC_84_Setup3:	dc.b $1A
		dc.w 0
		dc.w $9580
DAC_85_Setup3:	dc.b $20
		dc.w 0
		dc.w $9A80
DAC_86_Setup3:	dc.b 4
		dc.w 0
		dc.w 0
DAC_87_Setup3:	dc.b 4
		dc.w 0
		dc.w 0
DAC_88_Setup3:	dc.b 6
		dc.w 0
		dc.w 0
DAC_89_Setup3:	dc.b $A
		dc.w 0
		dc.w 0
DAC_8A_Setup3:	dc.b $14
		dc.w 0
		dc.w 0
DAC_8B_Setup3:	dc.b $1B
		dc.w 0
		dc.w $B880
DAC_8C_Setup3:	dc.b 8
		dc.w 0
		dc.w 0
DAC_8D_Setup3:	dc.b $B
		dc.w 0
		dc.w 0
DAC_8E_Setup3:	dc.b $11
		dc.w 0
		dc.w $C780
DAC_8F_Setup3:	dc.b 8
		dc.w 0
		dc.w 0
DAC_90_Setup3:	dc.b 3
		dc.w 0
		dc.w 0
DAC_91_Setup3:	dc.b 7
		dc.w 0
		dc.w $D680
DAC_92_Setup3:	dc.b $A
		dc.w 0
		dc.w $DB80
DAC_93_Setup3:	dc.b $E
		dc.w 0
		dc.w $E080
DAC_94_Setup3:	dc.b 6
		dc.w 0
		dc.w 0
DAC_95_Setup3:	dc.b $A
		dc.w 0
		dc.w $EA80
DAC_96_Setup3:	dc.b $D
		dc.w 0
		dc.w $EF80
DAC_97_Setup3:	dc.b $12
		dc.w 0
		dc.w $F480
DAC_98_Setup3:	dc.b $B
		dc.w 0
		dc.w 0
DAC_99_Setup3:	dc.b $13
		dc.w 0
		dc.w $FE80
DAC_9A_Setup3:	dc.b $16
		dc.w 0
		dc.w $381
DAC_9B_Setup3:	dc.b $C
		dc.w 0
		dc.w 0
DAC_A2_Setup3:	dc.b $A
		dc.w 0
		dc.w 0
DAC_A3_Setup3:	dc.b $18
		dc.w 0
		dc.w 0
DAC_A4_Setup3:	dc.b $18
		dc.w 0
		dc.w 0
DAC_A5_Setup3:	dc.b $C
		dc.w 0
		dc.w 0
DAC_A6_Setup3:	dc.b 9
		dc.w 0
		dc.w 0
DAC_A7_Setup3:	dc.b $18
		dc.w 0
		dc.w 0
DAC_A8_Setup3:	dc.b $18
		dc.w 0
		dc.w 0
DAC_A9_Setup3:	dc.b $C
		dc.w 0
		dc.w 0
DAC_AA_Setup3:	dc.b $A
		dc.w 0
		dc.w 0
DAC_AB_Setup3:	dc.b $D
		dc.w $409
		dc.w $D781
DAC_AC_Setup3:	dc.b 6
		dc.w $8105
		dc.w $DB8A
DAC_AD_Setup3:	dc.b $10
		dc.w $BC01
		dc.w $5C90
DAC_AE_Setup3:	dc.b $18
		dc.w $BC01
		dc.w $5C90
DAC_AF_Setup3:	dc.b 9
		dc.w $6C03
		dc.w $1892
DAC_B0_Setup3:	dc.b $12
		dc.w $6C03
		dc.w $1892
DAC_B1_Setup3:	dc.b $18
		dc.w $850B
		dc.w $E0A8
DAC_B2_Setup3:	dc.b $16
		dc.w $4808
		dc.w $65B4
DAC_B3_Setup3:	dc.b $20
		dc.w $4808
		dc.w $65B4
DAC_B4_Setup3:	dc.b $C
		dc.w $FD05
		dc.w $ADBC
DAC_B5_Setup3:	dc.b $C
		dc.w $4006
		dc.w $AAC2
DAC_B6_Setup3:	dc.b $C
		dc.w $5505
		dc.w $EAC8
DAC_B7_Setup3:	dc.b $18
		dc.w $B104
		dc.w $3FCE
DAC_B8_B9_Setup3:dc.b $C
		dc.w $3A06
		dc.w $F0D2
DAC_BA_Setup3:	dc.b $18
		dc.w $B304
		dc.w $2AD9
DAC_BB_Setup3:	dc.b $18
		dc.w $B601
		dc.w $DDDD
DAC_BC_Setup3:	dc.b $18
		dc.w $B708
		dc.w $93DF
DAC_BD_Setup3:	dc.b $C
		dc.w $BE05
		dc.w $4AE8
DAC_BE_Setup3:	dc.b $C
		dc.w $1007
		dc.w $8EE
DAC_BF_Setup3:	dc.b $1C
		dc.w $DC01
		dc.w $18F5
DAC_C0_Setup3:	dc.b $B
		dc.w $3608
		dc.w $F4F6
DAC_C1_Setup3:	dc.b $F
		dc.w $FD05
		dc.w $ADBC
DAC_C2_Setup3:	dc.b $11
		dc.w $FD05
		dc.w $ADBC
DAC_C3_Setup3:	dc.b $12
		dc.w $FD05
		dc.w $ADBC
DAC_C4_Setup3:	dc.b $B
		dc.w $FD05
		dc.w $ADBC
DAC_9C_Setup3:	dc.b $A
		dc.w 0
		dc.w 0
DAC_9D_Setup3:	dc.b $18
		dc.w 0
		dc.w 0
DAC_9E_Setup3:	dc.b $18
		dc.w 0
		dc.w 0
DAC_9F_Setup3:	dc.b $C
		dc.w 0
		dc.w 0
DAC_A0_Setup3:	dc.b $C
		dc.w 0
		dc.w 0
DAC_A1_Setup3:	dc.b $A
		dc.w 0
		dc.w 0
DAC_AB_Data:	binclude "Sound/DAC/AB.bin"
DAC_AC_Data:	binclude "Sound/DAC/AC.bin"
DAC_AD_AE_Data:	binclude "Sound/DAC/AD-AE.bin"
DAC_AF_Data:	binclude "Sound/DAC/AF.bin"
DAC_B0_Data:	binclude "Sound/DAC/B0.bin"
DAC_B1_Data:	binclude "Sound/DAC/B1.bin"
DAC_B2_B3_Data:	binclude "Sound/DAC/Sonic 3 B2-B3.bin"
DAC_B4_C1_C2_C3_C4_Data:
		binclude "Sound/DAC/B4C1-C4.bin"
DAC_B5_Data:	binclude "Sound/DAC/B5.bin"
DAC_B6_Data:	binclude "Sound/DAC/B6.bin"
DAC_B7_Data:	binclude "Sound/DAC/B7.bin"
DAC_B8_B9_Data:	binclude "Sound/DAC/B8-B9.bin"
DAC_BA_Data:	binclude "Sound/DAC/BA.bin"
DAC_BB_Data:	binclude "Sound/DAC/BB.bin"
DAC_BC_Data:	binclude "Sound/DAC/BC.bin"
DAC_BD_Data:	binclude "Sound/DAC/BD.bin"
DAC_BE_Data:	binclude "Sound/DAC/BE.bin"
DAC_BF_Data:	binclude "Sound/DAC/BF.bin"
DAC_C0_Data:	binclude "Sound/DAC/C0.bin"
		align $1000
SEGA_PCM:	binclude "Sound/Sega PCM.bin"
		align 2
Sound_33:	binclude "Sound/SFX/33.bin"
Sound_34:	binclude "Sound/SFX/34.bin"
Sound_35:	binclude "Sound/SFX/35.bin"
Sound_36:	binclude "Sound/SFX/36.bin"
Sound_37:	binclude "Sound/SFX/37.bin"
Sound_38:	binclude "Sound/SFX/38.bin"
Sound_39:	binclude "Sound/SFX/39.bin"
Sound_3A:	binclude "Sound/SFX/3A.bin"
Sound_3B:	binclude "Sound/SFX/3B.bin"
Sound_3C:	binclude "Sound/SFX/3C.bin"
Sound_3D:	binclude "Sound/SFX/3D.bin"
Sound_3E:	binclude "Sound/SFX/3E.bin"
Sound_3F:	binclude "Sound/SFX/3F.bin"
Sound_40:	binclude "Sound/SFX/40.bin"
Sound_41:	binclude "Sound/SFX/41.bin"
Sound_42:	binclude "Sound/SFX/42.bin"
Sound_43:	binclude "Sound/SFX/43.bin"
Sound_44:	binclude "Sound/SFX/44.bin"
Sound_45:	binclude "Sound/SFX/45.bin"
Sound_46:	binclude "Sound/SFX/46.bin"
Sound_47:	binclude "Sound/SFX/47.bin"
Sound_48:	binclude "Sound/SFX/48.bin"
Sound_49:	binclude "Sound/SFX/49.bin"
Sound_4A:	binclude "Sound/SFX/4A.bin"
Sound_4B:	binclude "Sound/SFX/4B.bin"
Sound_4C:	binclude "Sound/SFX/4C.bin"
Sound_4D:	binclude "Sound/SFX/4D.bin"
Sound_4E:	binclude "Sound/SFX/4E.bin"
Sound_4F:	binclude "Sound/SFX/4F.bin"
Sound_50:	binclude "Sound/SFX/50.bin"
Sound_51:	binclude "Sound/SFX/51.bin"
Sound_52:	binclude "Sound/SFX/52.bin"
Sound_53:	binclude "Sound/SFX/53.bin"
Sound_54:	binclude "Sound/SFX/54.bin"
Sound_55:	binclude "Sound/SFX/55.bin"
Sound_56:	binclude "Sound/SFX/56.bin"
Sound_57:	binclude "Sound/SFX/57.bin"
Sound_58:	binclude "Sound/SFX/58.bin"
Sound_59:	binclude "Sound/SFX/59.bin"
Sound_5A:	binclude "Sound/SFX/5A.bin"
Sound_5B:	binclude "Sound/SFX/5B.bin"
Sound_5C:	binclude "Sound/SFX/5C.bin"
Sound_5D:	binclude "Sound/SFX/5D.bin"
Sound_5E:	binclude "Sound/SFX/5E.bin"
Sound_5F:	binclude "Sound/SFX/5F.bin"
Sound_60:	binclude "Sound/SFX/60.bin"
Sound_61:	binclude "Sound/SFX/61.bin"
Sound_62:	binclude "Sound/SFX/62.bin"
Sound_63:	binclude "Sound/SFX/63.bin"
Sound_64:	binclude "Sound/SFX/64.bin"
Sound_65:	binclude "Sound/SFX/65.bin"
Sound_66:	binclude "Sound/SFX/66.bin"
Sound_67:	binclude "Sound/SFX/67.bin"
Sound_68:	binclude "Sound/SFX/68.bin"
Sound_69:	binclude "Sound/SFX/69.bin"
Sound_6A:	binclude "Sound/SFX/6A.bin"
Sound_6B:	binclude "Sound/SFX/6B.bin"
Sound_6C:	binclude "Sound/SFX/6C.bin"
Sound_6D:	binclude "Sound/SFX/6D.bin"
Sound_6E:	binclude "Sound/SFX/6E.bin"
Sound_6F:	binclude "Sound/SFX/6F.bin"
Sound_70:	binclude "Sound/SFX/70.bin"
Sound_71:	binclude "Sound/SFX/71.bin"
Sound_72:	binclude "Sound/SFX/72.bin"
Sound_73:	binclude "Sound/SFX/73.bin"
Sound_74:	binclude "Sound/SFX/74.bin"
Sound_75:	binclude "Sound/SFX/75.bin"
Sound_76:	binclude "Sound/SFX/76.bin"
Sound_77:	binclude "Sound/SFX/77.bin"
Sound_78:	binclude "Sound/SFX/78.bin"
Sound_79:	binclude "Sound/SFX/79.bin"
Sound_7A:	binclude "Sound/SFX/7A.bin"
Sound_7B:	binclude "Sound/SFX/7B.bin"
Sound_7C:	binclude "Sound/SFX/7C.bin"
Sound_7D:	binclude "Sound/SFX/7D.bin"
Sound_7E:	binclude "Sound/SFX/7E.bin"
Sound_7F:	binclude "Sound/SFX/7F.bin"
Sound_80:	binclude "Sound/SFX/80.bin"
Sound_81:	binclude "Sound/SFX/81.bin"
Sound_82:	binclude "Sound/SFX/82.bin"
Sound_83:	binclude "Sound/SFX/83.bin"
Sound_84:	binclude "Sound/SFX/84.bin"
Sound_85:	binclude "Sound/SFX/85.bin"
Sound_86:	binclude "Sound/SFX/86.bin"
Sound_87:	binclude "Sound/SFX/87.bin"
Sound_88:	binclude "Sound/SFX/88.bin"
Sound_89:	binclude "Sound/SFX/89.bin"
Sound_8A:	binclude "Sound/SFX/8A.bin"
Sound_8B:	binclude "Sound/SFX/8B.bin"
Sound_8C:	binclude "Sound/SFX/8C.bin"
Sound_8D:	binclude "Sound/SFX/8D.bin"
Sound_8E:	binclude "Sound/SFX/8E.bin"
Sound_8F:	binclude "Sound/SFX/8F.bin"
Sound_90:	binclude "Sound/SFX/90.bin"
Sound_91:	binclude "Sound/SFX/91.bin"
Sound_92:	binclude "Sound/SFX/92.bin"
Sound_93:	binclude "Sound/SFX/93.bin"
Sound_94:	binclude "Sound/SFX/94.bin"
Sound_95:	binclude "Sound/SFX/95.bin"
Sound_96:	binclude "Sound/SFX/96.bin"
Sound_97:	binclude "Sound/SFX/97.bin"
Sound_98:	binclude "Sound/SFX/98.bin"
Sound_99:	binclude "Sound/SFX/99.bin"
Sound_9A:	binclude "Sound/SFX/9A.bin"
Sound_9B:	binclude "Sound/SFX/Sonic 3 9B.bin"
Sound_9C:	binclude "Sound/SFX/9C.bin"
Sound_9D:	binclude "Sound/SFX/9D.bin"
Sound_9E:	binclude "Sound/SFX/9E.bin"
Sound_9F:	binclude "Sound/SFX/9F.bin"
Sound_A0:	binclude "Sound/SFX/A0.bin"
Sound_A1:	binclude "Sound/SFX/A1.bin"
Sound_A2:	binclude "Sound/SFX/A2.bin"
Sound_A3:	binclude "Sound/SFX/A3.bin"
Sound_A4:	binclude "Sound/SFX/A4.bin"
Sound_A5:	binclude "Sound/SFX/A5.bin"
Sound_A6:	binclude "Sound/SFX/A6.bin"
Sound_A7:	binclude "Sound/SFX/A7.bin"
Sound_A8:	binclude "Sound/SFX/A8.bin"
Sound_A9:	binclude "Sound/SFX/A9.bin"
Sound_AA:	binclude "Sound/SFX/AA.bin"
Sound_AB:	binclude "Sound/SFX/AB.bin"
Sound_AC:	binclude "Sound/SFX/AC.bin"
Sound_AD:	binclude "Sound/SFX/Sonic 3 AD.bin"
Sound_AE:	binclude "Sound/SFX/AE.bin"
Sound_AF:	binclude "Sound/SFX/AF.bin"
Sound_B0:	binclude "Sound/SFX/B0.bin"
Sound_B1:	binclude "Sound/SFX/B1.bin"
Sound_B2:	binclude "Sound/SFX/B2.bin"
Sound_B3:	binclude "Sound/SFX/B3.bin"
Sound_B4:	binclude "Sound/SFX/B4.bin"
Sound_B5:	binclude "Sound/SFX/B5.bin"
Sound_B6:	binclude "Sound/SFX/B6.bin"
Sound_B7:	binclude "Sound/SFX/B7.bin"
Sound_B8:	binclude "Sound/SFX/B8.bin"
Sound_B9:	binclude "Sound/SFX/B9.bin"
Sound_BA:	binclude "Sound/SFX/BA.bin"
Sound_BB:	binclude "Sound/SFX/BB.bin"
Sound_BC:	binclude "Sound/SFX/BC.bin"
Sound_BD:	binclude "Sound/SFX/BD.bin"
Sound_BE:	binclude "Sound/SFX/BE.bin"
Sound_BF:	binclude "Sound/SFX/BF.bin"
Sound_C0:	binclude "Sound/SFX/C0.bin"
Sound_C1:	binclude "Sound/SFX/C1.bin"
Sound_C2:	binclude "Sound/SFX/C2.bin"
Sound_C3:	binclude "Sound/SFX/C3.bin"
Sound_C4:	binclude "Sound/SFX/C4.bin"
Sound_C5:	binclude "Sound/SFX/C5.bin"
Sound_C6:	binclude "Sound/SFX/C6.bin"
Sound_C7:	binclude "Sound/SFX/C7.bin"
Sound_C8:	binclude "Sound/SFX/C8.bin"
Sound_C9:	binclude "Sound/SFX/C9.bin"
Sound_CA:	binclude "Sound/SFX/CA.bin"
Sound_CB:	binclude "Sound/SFX/CB.bin"
Sound_CC:	binclude "Sound/SFX/CC.bin"
Sound_CD:	binclude "Sound/SFX/CD.bin"
Sound_CE:	binclude "Sound/SFX/CE.bin"
Sound_CF:	binclude "Sound/SFX/CF.bin"
Sound_D0:	binclude "Sound/SFX/D0.bin"
Sound_D1:	binclude "Sound/SFX/D1.bin"
Sound_D2:	binclude "Sound/SFX/D2.bin"
Sound_D3:	binclude "Sound/SFX/D3.bin"
Sound_D4:	binclude "Sound/SFX/D4.bin"
Sound_D5:	binclude "Sound/SFX/D5.bin"
Sound_D6:	binclude "Sound/SFX/D6.bin"
Sound_D7:	binclude "Sound/SFX/D7.bin"
Sound_D8:	binclude "Sound/SFX/D8.bin"
Sound_D9:	binclude "Sound/SFX/D9.bin"
Sound_DA:	binclude "Sound/SFX/DA.bin"
Sound_DB:	binclude "Sound/SFX/DB.bin"
		align $8000
ArtUnc_Sonic:	binclude "General/Sprites/Sonic/Art/Sonic.bin"
		even
ArtUnc_Tails:	binclude "General/Sprites/Tails/Art/Tails.bin"
		even
ArtUnc_Tails_Tail:
		binclude "General/Sprites/Tails/Art/Tails tails.bin"
		even
ArtUnc_Sonic2P:	binclude "General/Sprites/Sonic/Art/Sonic 2P.bin"
		even
ArtUnc_Tails2P:	binclude "General/Sprites/Tails/Art/Tails 2P.bin"
		even
ArtUnc_Tails2P_Tail:
		binclude "General/Sprites/Tails/Art/Tails tails 2P.bin"
		even
ArtUnc_Knuckles2P:
		binclude "General/Sprites/Knuckles/Art/Knuckles 2P.bin"
		even
Map_Sonic:	include "General/Sprites/Sonic/Map - Sonic S3.asm"
PLC_Sonic:	include "General/Sprites/Sonic/Sonic pattern load cues S3.asm"
Map_Tails:	include "General/Sprites/Tails/Map - Tails S3.asm"
PLC_Tails:	include "General/Sprites/Tails/Tails pattern load cues S3.asm"
Map_Tails_Tail:	include "General/Sprites/Tails/Map - Tails tails.asm"
PLC_Tails_Tail:	include "General/Sprites/Tails/Tails tails pattern load cues.asm"
ICZSnowboard_Slope1:
		binclude "Levels/ICZ/Misc/ICZ Snowboard Slope 1.bin"
		even
ICZSnowboard_Slope2:
		binclude "Levels/ICZ/Misc/ICZ Snowboard Slope 2.bin"
		even
ArtUnc_SonicSnowboard:
		binclude "General/Sprites/Sonic/Art/Sonic Snowboarding.bin"
		even
ArtUnc_Snowboard:
		binclude "General/Sprites/Snowboard/Snowboard.bin"
		even
Map_SonicSnowboard:
		include "General/Sprites/Sonic/Map - Sonic Snowboarding.asm"
DPLC_SonicSnowboard:
		include "General/Sprites/Sonic/DPLC - Sonic Snowboarding.asm"
Map_Snowboard:	include "General/Sprites/Snowboard/Map - Snowboard.asm"
DPLC_Snowboard:	include "General/Sprites/Snowboard/DPLC - Snowboard.asm"
ArtNem_AIZIntroSprites:
		binclude "Levels/AIZ/Nemesis Art/Intro Waves.bin"
		even
ArtNem_SurfboardSplash:
		binclude "Levels/AIZ/Nemesis Art/Surfboard Splash.bin"
		even
ArtNem_Surfboard:
		binclude "Levels/AIZ/Nemesis Art/Surfboard.bin"
		even
ArtUnc_Invincibility:
		binclude "General/Sprites/Shields/Invincibility.bin"
		even
ArtUnc_DashDust:binclude "General/Sprites/Dash Dust/Dash Dust.bin"
		even
ArtUnc_SuperSonic_Stars:
		binclude "General/Sprites/Shields/Super Sonic Stars.bin"
		even
ArtUnc_InstaShield:
		binclude "General/Sprites/Shields/Insta-Shield.bin"
		even
ArtUnc_FireShield:
		binclude "General/Sprites/Shields/Fire Shield.bin"
		even
ArtUnc_LightningShield:
		binclude "General/Sprites/Shields/Lightning Shield.bin"
		even
ArtUnc_Obj_Lightning_Shield_Sparks:
		binclude "General/Sprites/Shields/Sparks.bin"
		even
ArtUnc_BubbleShield:
		binclude "General/Sprites/Shields/Bubble Shield.bin"
		even
ArtNem_2PDashdust:
		binclude "General/2P Zone/Nemesis Art/Spindash Dust.bin"
		even
MapEni_S3TitleSonic1:
		binclude "General/Title/Enigma Map/S3 Sonic 1.bin"
		even
MapEni_S3TitleSonic2:
		binclude "General/Title/Enigma Map/S3 Sonic 2.bin"
		even
MapEni_S3TitleSonic3:
		binclude "General/Title/Enigma Map/S3 Sonic 3.bin"
		even
MapEni_S3TitleSonic4:
		binclude "General/Title/Enigma Map/S3 Sonic 4.bin"
		even
MapEni_S3TitleSonic5:
		binclude "General/Title/Enigma Map/S3 Sonic 5.bin"
		even
MapEni_S3TitleSonic6:
		binclude "General/Title/Enigma Map/S3 Sonic 6.bin"
		even
MapEni_S3TitleSonic7:
		binclude "General/Title/Enigma Map/S3 Sonic 7.bin"
		even
MapEni_S3TitleSonic8:
		binclude "General/Title/Enigma Map/S3 Sonic 8.bin"
		even
MapEni_S3TitleSonic9:
		binclude "General/Title/Enigma Map/S3 Sonic 9.bin"
		even
MapEni_S3TitleSonicA:
		binclude "General/Title/Enigma Map/S3 Sonic A.bin"
		even
MapEni_S3TitleSonicB:
		binclude "General/Title/Enigma Map/S3 Sonic B.bin"
		even
MapEni_S3TitleSonicC:
		binclude "General/Title/Enigma Map/S3 Sonic C.bin"
		even
MapEni_S3TitleSonicD:
		binclude "General/Title/Enigma Map/S3 Sonic D.bin"
		even
MapEni_S3TitleBg:
		binclude "General/Title/Enigma Map/S3 BG.bin"
		even
Map_S3TitleBanner:
		include "General/Title/Map - S3 Banner.asm"
ArtNem_Title_S3Banner:
		binclude "General/Title/Nemesis Art/S3 Banner.bin"
		even
ArtKos_S3TitleSonic1:
		binclude "General/Title/Kosinski Art/S3 Sonic 1.bin"
		even
ArtKos_S3TitleSonic8:
		binclude "General/Title/Kosinski Art/S3 Sonic 8.bin"
		even
ArtKos_S3TitleSonic9:
		binclude "General/Title/Kosinski Art/S3 Sonic 9.bin"
		even
ArtKos_S3TitleSonicA:
		binclude "General/Title/Kosinski Art/S3 Sonic A.bin"
		even
ArtKos_S3TitleSonicB:
		binclude "General/Title/Kosinski Art/S3 Sonic B.bin"
		even
ArtKos_S3TitleSonicC:
		binclude "General/Title/Kosinski Art/S3 Sonic C.bin"
		even
ArtKos_S3TitleSonicD:
		binclude "General/Title/Kosinski Art/S3 Sonic D.bin"
		align $100
ArtNem_GrayButton:
		binclude "General/Sprites/Buttons/Gray Button.bin"
		even
ArtNem_VerticalSpring:
		binclude "General/Sprites/Level Misc/Vertical Spring.bin"
		even
ArtNem_HorizontalSpring:
		binclude "General/Sprites/Level Misc/Horizontal Spring.bin"
		even
ArtNem_DiagonalSpring:
		binclude "General/Sprites/Level Misc/Diagonal Spring.bin"
		even
ArtNem_HUDText:	binclude "General/Sprites/HUD Icon/HUD Text.bin"
		even
ArtNem_SonicLifeIcon:
		binclude "General/Sprites/HUD Icon/Sonic life icon.bin"
		even
ArtNem_TailsLifeIcon:
		binclude "General/Sprites/HUD Icon/Tails Life Icon.bin"
		even
ArtNem_KnucklesLifeIcon:
		binclude "General/Sprites/HUD Icon/Knuckles life icon.bin"
		even
ArtNem_Ring:	binclude "General/Sprites/Ring/Ring.bin"
		even
ArtNem_Monitors:binclude "General/Sprites/Monitors/Monitors.bin"
		even
ArtNem_VerticalSpikes:
		binclude "General/Sprites/Level Misc/Vertical Spikes.bin"
		even
ArtNem_HorizontalSpikes:
		binclude "General/Sprites/Level Misc/Horizontal Spikes.bin"
		even
ArtNem_EnemyPoints:
		binclude "General/Sprites/Enemy Misc/Enemy Points.bin"
		even
ArtNem_StarPost:binclude "General/Sprites/Starpost/Starpost.bin"
		even
ArtNem_S2Signpost:
		binclude "General/Sprites/S2Menu/Signpost.bin"
		even
ArtNem_Bubbles:	binclude "General/Sprites/Bubbles/Bubbles.bin"
		even
ArtNem_GameOver:binclude "General/Sprites/Game Over/GameOver.bin"
		even
ArtNem_Explosion:
		binclude "General/Sprites/Enemy Misc/Explosion.bin"
		even
ArtNem_ContinueTails:
		binclude "General/Sprites/S2Menu/Tails Continue Sprites.bin"
		even
ArtNem_MiniSonic:
		binclude "General/Sprites/S2Menu/Sonic Continue Icon.bin"
		even
ArtNem_MiniTails:
		binclude "General/Sprites/S2Menu/Tails Continue Icon.bin"
		even
ArtNem_SpikesSprings:
		binclude "General/Sprites/Level Misc/SpikesSprings.bin"
		even
ArtNem_RingHUDText:
		binclude "General/Sprites/Ring/RingHUDText.bin"
		even
ArtNem_EnemyPtsStarPost:
		binclude "General/Sprites/Enemy Misc/EnemyPtsStarpost.bin"
		even
ArtNem_Seal:	binclude "General/Sprites/Animals/Seal.bin"
		even
ArtNem_Pig:	binclude "General/Sprites/Animals/Pig.bin"
		even
ArtNem_BlueFlicky:
		binclude "General/Sprites/Animals/Blue Flicky.bin"
		even
ArtNem_Chicken:	binclude "General/Sprites/Animals/Chicken.bin"
		even
ArtNem_Penguin:	binclude "General/Sprites/Animals/Penguin.bin"
		even
ArtNem_Squirrel:binclude "General/Sprites/Animals/Squirrel.bin"
		even
ArtNem_Rabbit:	binclude "General/Sprites/Animals/Rabbit.bin"
		even
Map_RobotnikShip:
		include "General/Sprites/Robotnik/Map - Robotnik Ship.asm"
Map_FBZRobotnikRun:
		include "Levels/FBZ/Misc Object Data/Map - Robotnik Run.asm"
Map_FBZRobotnikHead:
		include "Levels/FBZ/Misc Object Data/Map - Robotnik Head.asm"
Map_LBZMiniboss:
		include "Levels/LBZ/Misc Object Data/Map - Miniboss.asm"
Map_LBZMinibossBox:
		include "Levels/LBZ/Misc Object Data/Map - Miniboss Box.asm"
Map_SnaleBlaster:
		include "General/Sprites/Snail Blaster/Map - Snail Blaster.asm"
Map_Orbinaut:	include "General/Sprites/Orbinaut/Map - Orbinaut.asm"
Map_Ribot:	include "General/Sprites/Ribot/Map - Ribot.asm"
Map_Corkey:	include "General/Sprites/Corkey/Map - Corkey.asm"
Map_Flybot767:	include "General/Sprites/Flybot/Map - Flybot.asm"
DPLC_Flybot:	include "General/Sprites/Flybot/DPLC - Flybot.asm"
Map_LBZEndBoss:
		include "Levels/LBZ/Misc Object Data/Map - End Boss.asm"
Map_CNZEndBoss:
		include "Levels/CNZ/Misc Object Data/Map - End Boss.asm"
CNZEndBossMagnet_AngleX:
		dc.b    0,   1,   2,   3,   4,   5,   6,   8,   9,  $A,  $B,  $C,  $D,  $E,  $F, $10
		dc.b  $11, $12, $13, $14, $15, $16, $17, $18, $18, $19, $1A, $1B, $1C, $1D, $1E, $1E
		dc.b  $1F, $20, $21, $21, $22, $23, $23, $24, $25, $25, $26, $26, $27, $27, $28, $28
		dc.b  $29, $29, $29, $2A, $2A, $2A, $2B, $2B, $2B, $2B, $2C, $2C, $2C, $2C, $2C, $2C
LBZFinalBoss2_CircleLookup:
		dc.b    0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  $A,  $B,  $C,  $D,  $D,  $E
		dc.b   $F, $10, $11, $12, $13, $14, $15, $15, $16, $17, $18, $19, $19, $1A, $1B, $1C
		dc.b  $1C, $1D, $1E, $1E, $1F, $20, $20, $21, $21, $22, $22, $23, $23, $24, $24, $25
		dc.b  $25, $25, $26, $26, $26, $27, $27, $27, $27, $27, $28, $28, $28, $28, $28, $28
Map_FBZMiniboss:include "Levels/FBZ/Misc Object Data/Map - Miniboss.asm"
Map_FBZEggCapsule:
		include "Levels/FBZ/Misc Object Data/Map - Egg Capsule S3.asm"
Map_Blastoid:	include "General/Sprites/Blastoid/Map - Blastoid.asm"
Map_Toxomister:	include "General/Sprites/Toxomister/Map - Toxomister S3.asm"
Map_Poindexter:	include "General/Sprites/Pointdexter/Map - Pointdexter.asm"
Map_Buggernaut:	include "General/Sprites/Buggernaut/Map - Buggernaut.asm"
Map_MegaChomper:include "General/Sprites/Mega Chomper/Map - Mega Chomper.asm"
Map_Dragonfly:	include "General/Sprites/Dragonfly/Map - Dragonfly.asm"
DPLC_Cluckoid:	include "General/Sprites/Cluckoid/DPLC - Cluckoid.asm"
Map_CluckoidArrow:
		include "General/Sprites/Cluckoid/Map - Cluckoid Arrow.asm"
Map_Cluckoid:	include "General/Sprites/Cluckoid/Map - Cluckoid.asm"
Map_Butterdroid:include "General/Sprites/Butterdroid/Map - Butterdroid.asm"
DPLC_Butterdroid:
		include "General/Sprites/Butterdroid/DPLC - Butterdroid.asm"
Map_TurboSpiker:include "General/Sprites/Turbo Spiker/Map - Turbo Spiker.asm"
Map_FirewormSegments:
		include "General/Sprites/Fireworm/Map - Fireworm Segments.asm"
DPLC_Fireworm:	include "General/Sprites/Fireworm/DPLC - Fireworm.asm"
Map_Fireworm:	include "General/Sprites/Fireworm/Map - Fireworm.asm"
Map_Jawz:	include "General/Sprites/Jawz/Map - Jawz.asm"
Map_Mushmeanie:	include "General/Sprites/Mushmeanie/Map - Mushmeanie.asm"
Map_Madmole:	include "General/Sprites/Madmole/Map - Madmole S3.asm"
Map_Iwamodoki:	include "General/Sprites/Iwamodoki/Map - Iwamodoki S3.asm"
DPLC_RhinoBot:	include "General/Sprites/Rhino/DPLC - RhinoBot.asm"
Map_RhinoBot:	include "General/Sprites/Rhino/Map - RhinoBot.asm"
		dc.w $A
		dc.w $1C
		dc.w $24
		dc.w $2C
		dc.w $34
Map_BossExplosion:
		include "General/Sprites/Boss Explosion/Map - Boss Explosion.asm"
Map_AIZMinibossFlame:
		include "Levels/AIZ/Misc Object Data/Map - Miniboss Flame.asm"
Map_FBZEndBossFlame:
		include "Levels/FBZ/Misc Object Data/Map - End Boss Flame.asm"
Map_Tulipon:	include "General/Sprites/Tulipon/Map - Tulipon.asm"
Map_MonkeyDude:	include "General/Sprites/Monkey Dude/Map - Monkey Dude.asm"
Map_SOZMiniboss:include "Levels/SOZ/Misc Object Data/Map - Miniboss.asm"
Map_MGZMiniBoss:include "Levels/MGZ/Misc Object Data/Map - Miniboss.asm"
Map_CaterKillerJr:
		include "General/Sprites/Caterkiller Jr/Map - Caterkiller Jr.asm"
DPLC_Clamer:	include "General/Sprites/Clamer/DPLC - Clamer.asm"
Map_Clamer:	include "General/Sprites/Clamer/Map - Clamer.asm"
Map_CNZBlastoid:include "Levels/CNZ/Misc Object Data/Map - Blastoid.asm"
Map_Batbot:	include "General/Sprites/Batbot/Map - Batbot.asm"
DPLC_BubblesBadnik:
		include "General/Sprites/Bubbles Badnik/DPLC - Bubbles Badnik.asm"
Map_BubblesBadnik:
		include "General/Sprites/Bubbles Badnik/Map - Bubbles Badnik.asm"
Map_Spiker:	include "General/Sprites/Spiker/Map - Spiker.asm"
Map_Mantis:	include "General/Sprites/Mantis/Map - Mantis.asm"
Map_Blaster:	include "General/Sprites/Blaster/Map - Blaster.asm"
DPLC_Penguinator:
		include "General/Sprites/Penguinator/DPLC - Penguinator.asm"
Map_Penguinator:include "General/Sprites/Penguinator/Map - Penguinator.asm"
Map_ICZSnowdust:include "Levels/ICZ/Misc Object Data/Map - Snowdust.asm"
Map_TechnoSqueek:
		include "General/Sprites/Technosqueek/Map - Technosqueek.asm"
Map_StarPointer:include "General/Sprites/Star Pointer/Map - Star Pointer.asm"
Map_AIZEndBoss:	include "Levels/AIZ/Misc Object Data/Map - End Boss.asm"
Map_AIZMiniboss:include "Levels/AIZ/Misc Object Data/Map - Miniboss.asm"
Map_AIZMinibossSmall:
		include "Levels/AIZ/Misc Object Data/Map - Miniboss Small.asm"
Map_MGZEndBoss:	include "Levels/MGZ/Misc Object Data/Map - End Boss.asm"
HCZMiniboss_RocketTwistLookup:
		dc.b  $18, $18, $18, $18, $18, $18, $18, $18, $18, $17, $17, $17, $17, $17, $17, $16
		dc.b  $16, $16, $16, $15, $15, $15, $15, $14, $14, $14, $13, $13, $13, $12, $12, $11
		dc.b  $11, $11, $10, $10,  $F,  $F,  $E,  $E,  $D,  $D,  $C,  $C,  $B,  $B,  $A,  $A
		dc.b    9,   9,   8,   8,   7,   6,   6,   5,   5,   4,   4,   3,   2,   2,   1,   1
		dc.b    0, $FF, $FF, $FE, $FE, $FD, $FC, $FC, $FB, $FB, $FA, $FA, $F9, $F8, $F8, $F7
		dc.b  $F7, $F6, $F6, $F5, $F5, $F4, $F4, $F3, $F3, $F2, $F2, $F1, $F1, $F0, $F0, $EF
		dc.b  $EF, $EF, $EE, $EE, $ED, $ED, $ED, $EC, $EC, $EC, $EB, $EB, $EB, $EB, $EA, $EA
		dc.b  $EA, $EA, $E9, $E9, $E9, $E9, $E9, $E9, $E8, $E8, $E8, $E8, $E8, $E8, $E8, $E8
FBZEndBoss_CircleLookup1:
		dc.b    0,   2,   4,   5,   7,   9,  $B,  $C,  $E, $10, $11, $13, $15, $17, $18, $1A
		dc.b  $1C, $1D, $1F, $20, $22, $23, $25, $27, $28, $29, $2B, $2C, $2E, $2F, $30, $32
		dc.b  $33, $34, $35, $37, $38, $39, $3A, $3B, $3C, $3D, $3E, $3F, $3F, $40, $41, $42
		dc.b  $43, $43, $44, $44, $45, $45, $46, $46, $47, $47, $47, $47, $48, $48, $48, $48
FBZEndBoss_CircleLookup2:
		dc.b    0,   1,   2,   2,   3,   4,   5,   5,   6,   7,   8,   9,   9,  $A,  $B,  $C
		dc.b   $C,  $D,  $E,  $E,  $F, $10, $10, $11, $12, $12, $13, $14, $14, $15, $15, $16
		dc.b  $17, $17, $18, $18, $19, $19, $1A, $1A, $1B, $1B, $1B, $1C, $1C, $1D, $1D, $1D
		dc.b  $1E, $1E, $1E, $1E, $1F, $1F, $1F, $1F, $1F, $20, $20, $20, $20, $20, $20, $20
LBZ2FinalBoss2_CircleLookup2:
		dc.b    0,   0,   1,   1,   2,   2,   3,   3,   4,   4,   5,   5,   6,   6,   7,   7
		dc.b    8,   8,   9,   9,   9,  $A,  $A,  $B,  $B,  $C,  $C,  $C,  $D,  $D,  $D,  $E
		dc.b   $E,  $E,  $F,  $F,  $F, $10, $10, $10, $11, $11, $11, $11, $12, $12, $12, $12
		dc.b  $12, $13, $13, $13, $13, $13, $13, $14, $14, $14, $14, $14, $14, $14, $14, $14
Map_HCZMiniboss:include "Levels/HCZ/Misc Object Data/Map - Miniboss.asm"
Map_HCZMinibossSplash:
		include "Levels/HCZ/Misc Object Data/Map - Miniboss Splash.asm"
DPLC_HCZMinibossSplash:
		include "Levels/HCZ/Misc Object Data/DPLC - Miniboss Splash.asm"
Map_ICZEndBoss:	include "Levels/ICZ/Misc Object Data/Map - End Boss.asm"
PalSPtr_CNZMinibossNormal:	palscriptptr .header, .data
		dc.w 0
.header	palscripthdr	Normal_palette_line_2+$14, 1, 3-1

.data	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	6, $020
	palscriptloop	.headr2

.headr2	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	4, $020
	palscriptloop	.headr3

.headr3	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	2, $020
	palscriptloop	.headr4

.headr4	palscripthdr	Normal_palette_line_2+$14, 1, $B-1
	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	1, $020
	palscriptrun

PalSPtr_CNZMinibossSparks:	palscriptptr .header, .data
		dc.w 0
.header	palscripthdr	Normal_palette_line_2+$14, 1, $31-1

.data	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	1, $020
	palscriptloop	.headr2

.headr2	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	2, $020
	palscriptloop	.headr3

.headr3	palscripthdr	Normal_palette_line_2+$14, 1, 4-1
	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	4, $020
	palscriptloop	.headr4

.headr4	palscripthdr	Normal_palette_line_2+$14, 1, 2-1
	palscriptdata	96, $020
	palscriptloop	PalSPtr_CNZMinibossNormal.headr3

PalSPtr_CNZMinibossOpen:	palscriptptr .header, .data
		dc.w 0
.header	palscripthdr	Normal_palette_line_2+$14, 1, 0

.data	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	2, $020
	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	8, $020
	palscriptdata	1, $EEE
	palscriptdata	1, $A22
	palscriptdata	3, $020
	palscriptrept

Map_CNZMiniboss:include "Levels/CNZ/Misc Object Data/Map - Miniboss.asm"
word_16322C:	palscriptptr .header, .data
		dc.w 0

.header	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
.data	palscriptdata	8, $222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptloop	.headr2

.headr2	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
	palscriptdata	6, $222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptloop	.headr3

.headr3	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
	palscriptdata	4, $222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptloop	.headr4

.headr4	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
	palscriptdata	2, $222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptloop	.headr5

.headr5	palscripthdr	Normal_palette_line_2+$14, 1, 0
	palscriptdata	1, $222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptrept

word_163298:	palscriptptr .header, .data
		dc.w 0

.header	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
.data	palscriptdata	2, $222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptloop	.headr2

.headr2	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
	palscriptdata	4, $222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptloop	.headr3

.headr3	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
	palscriptdata	6, $222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptloop	.headr4

.headr4	palscripthdr	Normal_palette_line_2+$14, 1, 3-1
	palscriptdata	8, $222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptloop	.headr5

.headr5	palscripthdr	Normal_palette_line_2+$14, 1, 5-1
	palscriptdata	10,$222
	palscriptdata	1, $C22
	palscriptdata	1, $EE0
	palscriptrun
ICZMiniboss_OrbAngleLookup:
		dc.b    0,   1,   2,   4,   5,   6,   7,   8,   9,  $B,  $C,  $D,  $E,  $F, $10, $11
		dc.b  $12, $13, $15, $16, $17, $18, $19, $1A, $1B, $1C, $1D, $1E, $1E, $1F, $20, $21
		dc.b  $22, $23, $24, $24, $25, $26, $27, $27, $28, $29, $29, $2A, $2A, $2B, $2B, $2C
		dc.b  $2C, $2D, $2D, $2E, $2E, $2E, $2F, $2F, $2F, $2F, $2F, $30, $30, $30, $30, $30
Map_ICZMiniboss:include "Levels/ICZ/Misc Object Data/Map - Miniboss.asm"
Map_FBZEndBoss:	include "Levels/FBZ/Misc Object Data/Map - End Boss.asm"
Map_HCZEndBoss:	include "Levels/HCZ/Misc Object Data/Map - End Boss.asm"
Map_MGZEndBossDebris:
		include "Levels/MGZ/Misc Object Data/Map - End Boss Debris.asm"
Map_FBZ2Subboss:include "Levels/FBZ/Misc Object Data/Map - Act 2 Subboss S3.asm"
Map_FBZRobotnikStand:
		include "Levels/FBZ/Misc Object Data/Map - Robotnik Stand.asm"
Map_ICZWallAndColumn:
		include "Levels/ICZ/Misc Object Data/Map - Wall and Column.asm"
Map_ICZPlatforms:
		include "Levels/ICZ/Misc Object Data/Map - Platforms.asm"
DPLC_EndSigns:	include "General/Sprites/Signpost/DPLC - End Signs.asm"
Map_EndSigns:	include "General/Sprites/Signpost/Map - End Signs.asm"
Map_SignpostStub:
		include "General/Sprites/Signpost/Map - Signpost Stub.asm"
Map_EggCapsule:	include "General/Sprites/Robotnik/Map - Egg Capsule S3.asm"
Map_LBZKnuxBomb:include "Levels/LBZ/Misc Object Data/Map - Knuckles Bomb.asm"
Map_CutsceneKnux:
		include "General/Sprites/Knuckles/Cutscene/Map - Cutscene Knuckles.asm"
DPLC_CutsceneKnux:
		include "General/Sprites/Knuckles/Cutscene/DPLC - Cutscene Knuckles.asm"
Map_AIZIntroPlane:
		include "Levels/AIZ/Misc Object Data/Map - Intro Plane.asm"
Map_AIZIntroEmeralds:
		include "Levels/AIZ/Misc Object Data/Map - Intro Emeralds.asm"
Map_LBZFinalBoss1:
		include "Levels/LBZ/Misc Object Data/Map - Final Boss 1.asm"
Map_LBZDeathEggSmall:
		include "Levels/LBZ/Misc Object Data/Map - Death Egg Small.asm"
Pal_MGZFadeCNZ:	binclude "Levels/Misc/Palettes/MGZ Fade to CNZ.bin"
		even
Map_LBZFinalBoss2:
		include "Levels/LBZ/Misc Object Data/Map - Final Boss 2.asm"
ArtNem_AIZMiniboss:
		binclude "Levels/AIZ/Nemesis Art/Miniboss.bin"
		even
ArtKosM_AIZEndBoss:
		binclude "Levels/AIZ/KosinskiM Art/End Boss.bin"
		even
ArtNem_AIZMinibossSmall:
		binclude "Levels/AIZ/Nemesis Art/Miniboss Small.bin"
		even
ArtUnc_AIZRhino:binclude "General/Sprites/Rhino/Rhino.bin"
		even
ArtKosM_AIZ_Tulipon:
		binclude "General/Sprites/Tulipon/Tulipon.bin"
		even
ArtKosM_AIZ_MonkeyDude:
		binclude "General/Sprites/Monkey Dude/Monkey Dude.bin"
		even
ArtKosM_AIZ_CaterkillerJr:
		binclude "General/Sprites/Caterkiller Jr/Caterkiller Jr.bin"
		even
ArtNem_HCZMiniboss:
		binclude "Levels/HCZ/Nemesis Art/Miniboss.bin"
		even
ArtNem_HCZEndBoss:
		binclude "Levels/HCZ/Nemesis Art/End Boss.bin"
		even
ArtNem_HCZDragonfly:
		binclude "Levels/HCZ/Nemesis Art/Dragonfly.bin"
		even
ArtKosM_Jawz:	binclude "General/Sprites/Jawz/Jawz.bin"
		even
ArtKosM_MegaChopper:
		binclude "General/Sprites/Mega Chopper/Mega Chopper.bin"
		even
ArtKosM_Blastoid:
		binclude "General/Sprites/Blastoid/Blastoid.bin"
		even
ArtKosM_TurboSpiker:
		binclude "General/Sprites/Turbo Spiker/Turbo Spiker.bin"
		even
ArtKosM_Pointdexter:
		binclude "General/Sprites/Pointdexter/Pointdexter.bin"
		even
ArtKosM_MGZMiniboss:
		binclude "Levels/MGZ/KosinskiM Art/Miniboss.bin"
		even
ArtNem_MGZSpire:binclude "Levels/MGZ/Nemesis Art/Spire.bin"
		even
ArtKosM_MGZEndBoss:
		binclude "Levels/MGZ/KosinskiM Art/End Boss.bin"
		even
ArtScaled_MGZEndBoss:
		binclude "Levels/MGZ/Misc/MGZ End Boss Scaled.bin"
		even
ArtKosM_MGZEndBossDebris:
		binclude "Levels/MGZ/KosinskiM Art/End Boss Debris.bin"
		even
ArtUnc_BubblesBadnik:
		binclude "General/Sprites/Bubbles Badnik/Bubbles Badnik.bin"
		even
ArtKosM_Spiker:	binclude "General/Sprites/Spiker/Spiker.bin"
		even
ArtKosM_Mantis:	binclude "General/Sprites/Mantis/Mantis.bin"
		even
ArtNem_CNZMiniboss:
		binclude "Levels/CNZ/Nemesis Art/Miniboss.bin"
		even
ArtNem_CNZEndBoss:
		binclude "Levels/CNZ/Nemesis Art/End Boss.bin"
		even
ArtUnc_Clamer:	binclude "General/Sprites/Clamer/Clamer.bin"
		even
ArtKosM_ClamerShot:
		binclude "General/Sprites/Clamer/Clamer Shot.bin"
		even
ArtKosM_Sparkle:binclude "General/Sprites/Sparkle/Sparkle.bin"
		even
ArtKosM_Batbot:	binclude "General/Sprites/Batbot/Batbot.bin"
		even
ArtKosM_CNZBalloon:
		binclude "Levels/CNZ/KosinskiM Art/Balloon.bin"
		even
ArtNem_FBZMiniboss:
		binclude "Levels/FBZ/Nemesis Art/S3 Miniboss.bin"
		even
ArtNem_FBZ2Subboss:
		binclude "Levels/FBZ/Nemesis Art/Act 2 Subboss.bin"
		even
ArtNem_FBZEndBoss:
		binclude "Levels/FBZ/Nemesis Art/End Boss.bin"
		even
ArtKosM_Blaster:binclude "General/Sprites/Blaster/Blaster.bin"
		even
ArtKosM_Technosqueek:
		binclude "General/Sprites/Technosqueek/Technosqueek.bin"
		even
ArtNem_ICZMisc1:binclude "Levels/ICZ/Nemesis Art/Misc Art 1.bin"
		even
ArtNem_ICZIntroSprites:
		binclude "Levels/ICZ/Nemesis Art/Intro Sprites.bin"
		even
ArtNem_ICZMisc2:binclude "Levels/ICZ/Nemesis Art/Misc Art 2.bin"
		even
ArtNem_ICZEndBoss:
		binclude "Levels/ICZ/Nemesis Art/End Boss.bin"
		even
ArtNem_ICZMiniboss:
		binclude "Levels/ICZ/Nemesis Art/Miniboss.bin"
		even
ArtUnc_Penguinator:
		binclude "General/Sprites/Penguinator/Penguinator.bin"
		even
ArtKosM_ICZSnowdust:
		binclude "Levels/ICZ/KosinskiM Art/Snowdust.bin"
		even
ArtKosM_StarPointer:
		binclude "General/Sprites/Star Pointer/Star Pointer.bin"
		even
ArtKosM_LBZMiniboss:
		binclude "Levels/LBZ/KosinskiM Art/Miniboss.bin"
		even
ArtKosM_LBZMinibossBox:
		binclude "Levels/LBZ/KosinskiM Art/Miniboss Box.bin"
		even
ArtNem_LBZFinalBoss1:
		binclude "Levels/LBZ/Nemesis Art/Final Boss 1.bin"
		even
ArtKosM_LBZEndBoss:
		binclude "Levels/LBZ/KosinskiM Art/End Boss.bin"
		even
ArtKosM_LBZFinalBoss2:
		binclude "Levels/LBZ/KosinskiM Art/Final Boss 2.bin"
		even
ArtKosM_SnailBlaster:
		binclude "General/Sprites/Snail Blaster/Snail Blaster.bin"
		even
ArtKosM_Ribot:	binclude "General/Sprites/Ribot/Ribot.bin"
		even
ArtKosM_Orbinaut:
		binclude "General/Sprites/Orbinaut/Orbinaut.bin"
		even
ArtKosM_Corkey:	binclude "General/Sprites/Corkey/Corkey.bin"
		even
ArtUnc_Flybot:	binclude "General/Sprites/Flybot/Flybot.bin"
		even
ArtNem_LBZKnuxBomb:
		binclude "Levels/LBZ/Nemesis Art/Knuckles Bomb.bin"
		even
ArtKosM_LBZ2DeathEggSmall:
		binclude "Levels/LBZ/KosinskiM Art/Act 2 Death Egg Small.bin"
		even
ArtScaled_FleeingRobotnik:
		binclude "General/Sprites/Robotnik/Robotnik Fly Scaled.bin"
		even
ArtKosM_LBZ2DeathEgg2_8x8:
		binclude "Levels/LBZ/Tiles/Act 2 Death Egg 2.bin"
		even
ArtNem_BossExplosion:
		binclude "General/Sprites/Boss Explosion/Boss Explosion.bin"
		even
ArtNem_AIZBossFire:
		binclude "Levels/AIZ/Nemesis Art/Miniboss Fire.bin"
		even
ArtNem_FBZEndBossFlame:
		binclude "Levels/FBZ/Nemesis Art/End Boss Flame.bin"
		even
ArtNem_RobotnikShip:
		binclude "General/Sprites/Robotnik/Ship.bin"
		even
ArtNem_FBZRobotnikHead:
		binclude "General/Sprites/Robotnik/FBZ Robotnik Head.bin"
		even
ArtNem_FBZRobotnikStand:
		binclude "General/Sprites/Robotnik/FBZ Robotnik Stand.bin"
		even
ArtNem_FBZRobotnikRun:
		binclude "General/Sprites/Robotnik/FBZ Robotnik Run.bin"
		even
ArtUnc_EndSigns:binclude "General/Sprites/Signpost/End Signs.bin"
		even
ArtNem_SignpostStub:
		binclude "General/Sprites/Signpost/Stub.bin"
		even
ArtNem_EggCapsule:
		binclude "General/Sprites/Robotnik/Egg Capsule.bin"
		even
ArtKosM_AIZIntroPlane:
		binclude "Levels/AIZ/KosinskiM Art/Intro Plane.bin"
		even
ArtUnc_CutsceneKnux:
		binclude "General/Sprites/Knuckles/Cutscene/Cutscene Main.bin"
		even
ArtKosM_AIZIntroEmeralds:
		binclude "Levels/AIZ/KosinskiM Art/Intro Emeralds.bin"
		even
ArtUnc_SSEntryRing:
		binclude "General/Sprites/SS Entry/Entry Ring.bin"
		even
ArtUnc_SSEntryFlash:
		binclude "General/Sprites/SS Entry/Entry Flash.bin"
		even
ArtKosM_BadnikExplosion:
		binclude "General/Sprites/SS Entry/Badnik Explosion.bin"
		even
ArtNem_BonusStage:
		binclude "General/Sprites/Bonus/Bonus Stage.bin"
		even
ArtKosM_SonicEndPose:
		binclude "General/Ending/KosinskiM Art/Sonic 3 Sonic Ending Pose.bin"
		even
ArtKosM_TailsEndPose:
		binclude "General/Ending/KosinskiM Art/Tails Ending Pose.bin"
		even
ArtKosM_SuperSonicEndPose:
		binclude "General/Ending/KosinskiM Art/Sonic 3 Super Sonic Ending Pose.bin"
		even
ArtNem_ContinueText:
		binclude "General/Ending/Nemesis Art/S3 Large Text.bin"
		even
ArtNem_S38x16Font:
		binclude "General/Ending/Nemesis Art/S3 8x16 Font.bin"
		even
ArtNem_AIZCorkFloor:
		binclude "Levels/AIZ/Nemesis Art/Cork Floor 1.bin"
		even
ArtNem_AIZCorkFloor2:
		binclude "Levels/AIZ/Nemesis Art/Cork Floor 2.bin"
		even
ArtNem_AIZSwingVine:
		binclude "Levels/AIZ/Nemesis Art/Swing Vine.bin"
		even
ArtNem_AIZSlideRope:
		binclude "Levels/AIZ/Nemesis Art/Zip Vine.bin"
		even
ArtNem_AIZBackgroundTree:
	binclude "Levels/AIZ/Nemesis Art/BG Tree.bin"
		even
ArtNem_AIZMisc1:binclude "Levels/AIZ/Nemesis Art/Misc Art 1.bin"
		even
ArtNem_AIZFallingLog:
		binclude "Levels/AIZ/Nemesis Art/Falling Log.bin"
		even
ArtNem_AIZMisc2:binclude "Levels/AIZ/Nemesis Art/Misc Art 2.bin"
		even
ArtNem_HCZSpikeBall:
		binclude "Levels/HCZ/Nemesis Art/Spike Ball.bin"
		even
ArtNem_HCZWaveSplash:
		binclude "Levels/HCZ/Nemesis Art/Wave Splash.bin"
		even
ArtNem_HCZButton:
		binclude "Levels/HCZ/Nemesis Art/Button.bin"
		even
ArtNem_HCZMisc:	binclude "Levels/HCZ/Nemesis Art/Misc Art.bin"
		even
ArtNem_HCZWaterRush:
		binclude "Levels/HCZ/Nemesis Art/Water Rush.bin"
		even
ArtKosM_HCZLargeFan:
		binclude "Levels/HCZ/KosinskiM Art/Large Fan.bin"
		even
ArtKosM_HCZGeyserHorz:
		binclude "Levels/HCZ/KosinskiM Art/Geyser Horizontal.bin"
		even
ArtKosM_HCZGeyserVert:
		binclude "Levels/HCZ/KosinskiM Art/Geyser Vertical.bin"
		even
ArtNem_HCZ2Slide:
		binclude "Levels/HCZ/Nemesis Art/Act 2 Slide.bin"
		even
ArtNem_HCZ2BlockPlat:
		binclude "Levels/HCZ/Nemesis Art/Act 2  Block Platform.bin"
		even
ArtUnc_HCZWaterSplash2:
		binclude "Levels/HCZ/Animated Tiles/Water Splash 2.bin"
		even
ArtUnc_HCZWaterSplash:
		binclude "Levels/HCZ/Animated Tiles/Water Splash.bin"
		even
ArtNem_HCZ2KnuxWall:
		binclude "Levels/HCZ/Nemesis Art/Act 2  Knuckles Wall.bin"
		even
ArtNem_MGZMisc1:binclude "Levels/MGZ/Nemesis Art/Misc Art 1.bin"
		even
ArtNem_MGZMisc2:binclude "Levels/MGZ/Nemesis Art/Misc Art 2.bin"
		even
ArtNem_MGZSigns:binclude "Levels/MGZ/Nemesis Art/Direction Signs.bin"
		even
ArtNem_CNZMisc:	binclude "Levels/CNZ/Nemesis Art/Misc Art.bin"
		even
ArtNem_CNZPlatform:
		binclude "Levels/CNZ/Nemesis Art/Platform.bin"
		even
ArtNem_LBZMisc:	binclude "Levels/LBZ/Nemesis Art/Misc Art.bin"
		even
ArtNem_LBZTubeTrans:
		binclude "Levels/LBZ/Nemesis Art/Tube Transport.bin"
		even
ArtNem_LBZ2Misc:binclude "Levels/LBZ/Nemesis Art/Act 2 Misc Art.bin"
		even
ArtNem_2PArt_1:	binclude "General/2P Zone/Nemesis Art/Misc Art 1.bin"
		even
ArtNem_2PArt_2:	binclude "General/2P Zone/Nemesis Art/Misc Art 2.bin"
		even
ArtNem_2PArt_3:	binclude "General/2P Zone/Nemesis Art/Misc Art 3.bin"
		even
ArtNem_2PStartPost:
		binclude "General/2P Zone/Nemesis Art/Start Post.bin"
		even
ArtNem_2PTime:	binclude "General/2P Zone/Nemesis Art/Time Display.bin"
		even
ArtNem_2PLapNum:binclude "General/2P Zone/Nemesis Art/Lap Numbers.bin"
		even
ArtNem_2PPosIcon:
		binclude "General/2P Zone/Nemesis Art/Position Icons.bin"
		even
ArtNem_BPZMisc:	binclude "Levels/BPZ/Nemesis Art/Misc Art.bin"
		even
ArtNem_DPZMisc:	binclude "Levels/DPZ/Nemesis Art/Misc Art.bin"
		even
ArtNem_CGZMisc:	binclude "Levels/CGZ/Nemesis Art/Platform.bin"
		even
ArtNem_EMZMisc:	binclude "Levels/EMZ/Nemesis Art/Misc Art.bin"
		even
ArtKosM_AIZ2Bombership2_8x8:
		binclude "Levels/AIZ/Tiles/Act 2 Bombership 2.bin"
		even
ArtKosM_ResultsSONIC:
		binclude "General/Sprites/Results/Results SONIC S3.bin"
		even
ArtKosM_ResultsMILES:
		binclude "General/Sprites/Results/Results MILES.bin"
		even
ArtKosM_ResultsTAILS:
		binclude "General/Sprites/Results/Results TAILS.bin"
		even
ArtKosM_ResultsKNUCKLES:
		binclude "General/Sprites/Results/Results KNUCKLES.bin"
		even
ArtKosM_ResultsGeneral:
		binclude "General/Sprites/Results/Results General.bin"
		even
ArtKosM_TitleCardNum1:
		binclude "General/Sprites/Title Card/Title Card Number 1.bin"
		even
ArtKosM_TitleCardNum2:
		binclude "General/Sprites/Title Card/Title Card Number 2.bin"
		even
ArtKosM_SSResults:
		dc.w $1220
ArtKos_SSResultsGeneral:
		binclude "General/Special Stage/Kosinski Art/S3 SSResults General.bin"
		even
ArtKos_SSResultsTKIcons:
		binclude "General/Special Stage/Kosinski Art/S3 SSResults Tails Knuckles Icons.bin"
		even
ArtKosM_TitleCardRedAct:
		binclude "General/Sprites/Title Card/Title Card Red ACT.bin"
		even
ArtKosM_AIZTitleCard:
		binclude "Levels/AIZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_HCZTitleCard:
		binclude "Levels/HCZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_MGZTitleCard:
		binclude "Levels/MGZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_CNZTitleCard:
		binclude "Levels/CNZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_FBZTitleCard:
		binclude "Levels/FBZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_ICZTitleCard:
		binclude "Levels/ICZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_LBZTitleCard:
		binclude "Levels/LBZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_ALZTitleCard:
		binclude "Levels/ALZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_BPZTitleCard:
		binclude "Levels/BPZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_CGZTitleCard:
		binclude "Levels/CGZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_DPZTitleCard:
		binclude "Levels/DPZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_EMZTitleCard:
		binclude "Levels/EMZ/KosinskiM Art/Title Card.bin"
		even
ArtKosM_BonusTitleCard:
		binclude "General/Sprites/Title Card/Bonus Title Card.bin"
		even
Pal_SaveMenuBG:	binclude "General/Save Menu/Palettes/BG.bin"
		even
Pal_CompetitionMenuBG:
		binclude "General/Competition Menu/Palettes/BG.bin"
		even
MapEni_S3MenuBG:binclude "General/Title/Enigma Map/S3 Menu BG.bin"
		even
ArtKos_S3MenuBG:binclude "General/Save Menu/Kosinski Art/Menu BG.bin"
		even
MapEni_CompetitionLevBorder:
		binclude "General/Competition Menu/Enigma Map/Level Border.bin"
		even
MapUnc_CompetitionTimeBorder:
		binclude "General/Competition Menu/Uncompressed Map/Time Border.bin"
		even
MapUnc_CompetitionBESTTIME:
		binclude "General/Competition Menu/Uncompressed Map/Time Text.bin"
		even
MapEni_CompetitionLevImage:
		binclude "General/Competition Menu/Enigma Map/Level Images.bin"
		even
MapEni_CompetitionLevName:
		binclude "General/Competition Menu/Enigma Map/Level Names.bin"
		even
ArtKos_CompetitionMode:
		binclude "General/Competition Menu/Kosinski Art/Mode Select.bin"
		even
ArtKos_CompetitionLevel:
		binclude "General/Competition Menu/Kosinski Art/Level Select.bin"
		even
ArtKos_CompetitionResults:
		binclude "General/Competition Menu/Kosinski Art/Results.bin"
		even
Map_CompetitionPlayerSprite:
		include "General/Competition Menu/Map - Competition Player Sprites.asm"
ArtKos_CompetitionPlayer:
		binclude "General/Competition Menu/Kosinski Art/Player Sprites.bin"
		even
MapEni_SaveScreen_Layout:
		binclude "General/Save Menu/Enigma Map/Save Screen Layout.bin"
		even
MapUnc_SaveScreenNEW:
		binclude "General/Save Menu/Uncompressed Map/NEW.bin"
		even
MapPtrs_SaveScreenStatic:
		dc.l MapUnc_SaveScreenStatic1
		dc.l MapUnc_SaveScreenStatic2
		dc.l MapUnc_SaveScreenStatic3
		dc.l MapUnc_SaveScreenStatic4
MapUnc_SaveScreenStatic1:
		binclude "General/Save Menu/Uncompressed Map/Static 1.bin"
		even
MapUnc_SaveScreenStatic2:
		binclude "General/Save Menu/Uncompressed Map/Static 2.bin"
		even
MapUnc_SaveScreenStatic3:
		binclude "General/Save Menu/Uncompressed Map/Static 3.bin"
		even
MapUnc_SaveScreenStatic4:
		binclude "General/Save Menu/Uncompressed Map/Static 4.bin"
		even
ArtKos_SaveScreenMisc:
		binclude "General/Save Menu/Kosinski Art/Misc.bin"
		even
AIZ1_16x16_Primary_Kos:
		binclude "Levels/AIZ/Blocks/Act 1 Primary.bin"
		even
AIZ1_16x16_Secondary_Kos:
		binclude "Levels/AIZ/Blocks/Act 1 Secondary.bin"
		even
AIZ1_16x16_MainLevel_Kos:
		binclude "Levels/AIZ/Blocks/Act 1 Main Level.bin"
		even
AIZ1_8x8_Primary_KosM:
		binclude "Levels/AIZ/Tiles/Act 1 Primary.bin"
		even
AIZ1_8x8_Secondary_KosM:
		binclude "Levels/AIZ/Tiles/Act 1 Secondary.bin"
		even
AIZ1_8x8_MainLevel_KosM:
		binclude "Levels/AIZ/Tiles/Act 1 Main Level.bin"
		even
AIZ1_128x128_Kos:
		binclude "Levels/AIZ/Chunks/Act 1.bin"
		even
AIZ1_8x8_Flames_KosM:
		binclude "Levels/AIZ/Tiles/Act 1 Fire Overlay.bin"
		even
AIZ2_16x16_Primary_Kos:
		binclude "Levels/AIZ/Blocks/Act 2 Primary.bin"
		even
AIZ2_16x16_Secondary_Kos:
		binclude "Levels/AIZ/Blocks/Act 2 Secondary.bin"
		even
AIZ2_16x16_BomberShip_Kos:
		binclude "Levels/AIZ/Blocks/Act 2 BomberShip.bin"
		even
AIZ2_8x8_Primary_KosM:
		binclude "Levels/AIZ/Tiles/Act 2 Primary.bin"
		even
AIZ2_8x8_Secondary_KosM:
		binclude "Levels/AIZ/Tiles/Act 2 Secondary.bin"
		even
AIZ2_8x8_BomberShip_KosM:
		binclude "Levels/AIZ/Tiles/Act 2 Bombership.bin"
		even
AIZ2_128x128_Kos:
		binclude "Levels/AIZ/Chunks/Act 2.bin"
		even
HCZ_16x16_Primary_Kos:
		binclude "Levels/HCZ/Blocks/Primary.bin"
		even
HCZ_8x8_Primary_KosM:
		binclude "Levels/HCZ/Tiles/Primary.bin"
		even
HCZ_128x128_Primary_Kos:
		binclude "Levels/HCZ/Chunks/Primary.bin"
		even
HCZ1_16x16_Secondary_Kos:
		binclude "Levels/HCZ/Blocks/Act 1 Secondary.bin"
		even
HCZ1_8x8_Secondary_KosM:
		binclude "Levels/HCZ/Tiles/Act 1 Secondary.bin"
		even
HCZ1_128x128_Secondary_Kos:
		binclude "Levels/HCZ/Chunks/Act 1 Secondary.bin"
		even
HCZ2_16x16_Secondary_Kos:
		binclude "Levels/HCZ/Blocks/Act 2 Secondary.bin"
		even
HCZ2_8x8_Secondary_KosM:
		binclude "Levels/HCZ/Tiles/Act 2 Secondary.bin"
		even
HCZ2_128x128_Secondary_Kos:
		binclude "Levels/HCZ/Chunks/Act 2 Secondary.bin"
		even
MGZ_16x16_Primary_Kos:
		binclude "Levels/MGZ/Blocks/Primary.bin"
		even
MGZ_8x8_Primary_KosM:
		binclude "Levels/MGZ/Tiles/Primary.bin"
		even
MGZ_128x128_Primary_Kos:
		binclude "Levels/MGZ/Chunks/Primary.bin"
		even
MGZ1_16x16_Secondary_Kos:
		binclude "Levels/MGZ/Blocks/Act 1 Secondary.bin"
		even
MGZ1_8x8_Secondary_KosM:
		binclude "Levels/MGZ/Tiles/Act 1 Secondary.bin"
		even
MGZ1_128x128_Secondary_Kos:
		binclude "Levels/MGZ/Chunks/Act 1 Secondary.bin"
		even
MGZ2_16x16_Secondary_Kos:
		binclude "Levels/MGZ/Blocks/Act 2 Secondary.bin"
		even
MGZ2_8x8_Secondary_KosM:
		binclude "Levels/MGZ/Tiles/Act 2 Secondary.bin"
		even
MGZ2_128x128_Secondary_Kos:
		binclude "Levels/MGZ/Chunks/Act 2 Secondary.bin"
		even
MGZ2_QuakeChunks:
		binclude "Levels/MGZ/Misc/Act 2 Quake Chunks.bin"
		even
CNZ_16x16_Kos:	binclude "Levels/CNZ/Blocks/Primary.bin"
		even
CNZ_8x8_KosM:	binclude "Levels/CNZ/Tiles/Primary.bin"
		even
CNZ_128x128_Kos:binclude "Levels/CNZ/Chunks/Primary.bin"
		even
FBZ_16x16_Kos:
ArtKosM_FBZ:
FBZ_128x128_Kos:
ICZ_16x16_Primary_Kos:
		binclude "Levels/ICZ/Blocks/Primary.bin"
		even
ICZ_8x8_Primary_KosM:
		binclude "Levels/ICZ/Tiles/Primary.bin"
		even
ICZ_128x128_Primary_Kos:
		binclude "Levels/ICZ/Chunks/Primary.bin"
		even
ICZ1_16x16_Secondary_Kos:
		binclude "Levels/ICZ/Blocks/Act 1 Secondary.bin"
		even
ICZ1_8x8_Secondary_KosM:
		binclude "Levels/ICZ/Tiles/Act 1 Secondary.bin"
		even
ICZ1_128x128_Secondary_Kos:
		binclude "Levels/ICZ/Chunks/Act 1 Secondary.bin"
		even
ICZ2_16x16_Secondary_Kos:
		binclude "Levels/ICZ/Blocks/Act 2 Secondary.bin"
		even
ICZ2_8x8_Secondary_KosM:
		binclude "Levels/ICZ/Tiles/Act 2 Secondary.bin"
		even
ICZ2_128x128_Secondary_Kos:
		binclude "Levels/ICZ/Chunks/Act 2 Secondary.bin"
		even
LBZ_16x16_Primary_Kos:
		binclude "Levels/LBZ/Blocks/Primary.bin"
		even
LBZ1_16x16_Secondary_Kos:
		binclude "Levels/LBZ/Blocks/Act 1 Secondary.bin"
		even
LBZ_8x8_Primary_KosM:
		binclude "Levels/LBZ/Tiles/Primary.bin"
		even
LBZ1_8x8_Secondary_KosM:
		binclude "Levels/LBZ/Tiles/Act 1 Secondary.bin"
		even
LBZ1_Unknown_Kos:
		binclude "Levels/LBZ/Chunks/Unknown Unused.bin"
		even
LBZ1_128x128_Kos:
		binclude "Levels/LBZ/Chunks/Act 1.bin"
		even
LBZ2_16x16_Secondary_Kos:
		binclude "Levels/LBZ/Blocks/Act 2 Secondary.bin"
		even
LBZ2_16x16_DeathEgg_Kos:
		binclude "Levels/LBZ/Blocks/Act 2 Death Egg.bin"
		even
LBZ2_8x8_Secondary_KosM:
		binclude "Levels/LBZ/Tiles/Act 2 Secondary.bin"
		even
LBZ2_8x8_DeathEgg_KosM:
		binclude "Levels/LBZ/Tiles/Act 2 Death Egg.bin"
		even
LBZ2_128x128_Kos:
		binclude "Levels/LBZ/Chunks/Act 2.bin"
		even
LBZ2_128x128_DeathEgg_Kos:
		binclude "Levels/LBZ/Chunks/Act 2 Death Egg.bin"
		even
MHZ_16x16_Kos:
ArtKosM_MHZ:
MHZ_128x128_Kos:
LRZ_16x16_Kos:
ArtKosM_LRZ:
LRZ_128x128_Kos:
ALZ_16x16_Kos:	binclude "Levels/ALZ/Blocks/Primary.bin"
		even
ALZ_8x8_KosM:	binclude "Levels/ALZ/Tiles/Primary.bin"
		even
ALZ_128x128_Kos:binclude "Levels/ALZ/Chunks/Primary.bin"
		even
BPZ_16x16_Kos:	binclude "Levels/BPZ/Blocks/Primary.bin"
		even
BPZ_8x8_KosM:	binclude "Levels/BPZ/Tiles/Primary.bin"
		even
BPZ_128x128_Kos:binclude "Levels/BPZ/Chunks/Primary.bin"
		even
DPZ_16x16_Kos:	binclude "Levels/DPZ/Blocks/Primary.bin"
		even
DPZ_8x8_KosM:	binclude "Levels/DPZ/Tiles/Primary.bin"
		even
DPZ_128x128_Kos:binclude "Levels/DPZ/Chunks/Primary.bin"
		even
CGZ_16x16_Kos:	binclude "Levels/CGZ/Blocks/Primary.bin"
		even
CGZ_8x8_KosM:	binclude "Levels/CGZ/Tiles/Primary.bin"
		even
CGZ_128x128_Kos:binclude "Levels/CGZ/Chunks/Primary.bin"
		even
EMZ_16x16_Kos:	binclude "Levels/EMZ/Blocks/Primary.bin"
		even
EMZ_8x8_KosM:	binclude "Levels/EMZ/Tiles/Primary.bin"
		even
EMZ_128x128_Kos:binclude "Levels/EMZ/Chunks/Primary.bin"
		even
Gumball_16x16_Kos:
		binclude "Levels/Gumball/Blocks/Primary.bin"
		even
Gumball_8x8_KosM:
		binclude "Levels/Gumball/Tiles/Gumball.bin"
		even
Gumball_128x128_Kos:
		binclude "Levels/Gumball/Chunks/Primary.bin"
Pachinko_16x16_Kos:
ArtKosM_Pachinko:
Pachinko_128x128_Kos:
Slots_16x16_Kos:
ArtKosM_Slots:
Slots_128x128_Kos:
		org $200000
EndOfROM:
		END
